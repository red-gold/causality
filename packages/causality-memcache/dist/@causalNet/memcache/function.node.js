(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["@causalNet/memcache"] = factory();
	else
		root["@causalNet/memcache"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/function.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../causality-core/dist/@causalNet/core.web.js":
/*!*****************************************************!*\
  !*** ../causality-core/dist/@causalNet/core.web.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=283)}([function(t,e,n){"use strict";(function(t,r,i,a){n.d(e,"ud",function(){return Vl}),n.d(e,"Fb",function(){return Wl}),n.d(e,"kb",function(){return ql}),n.d(e,"rc",function(){return $l}),n.d(e,"ve",function(){return Cl}),n.d(e,"Ec",function(){return Sc}),n.d(e,"qb",function(){return zt}),n.d(e,"Pb",function(){return bl}),n.d(e,"lc",function(){return _l}),n.d(e,"td",function(){return Nl}),n.d(e,"fe",function(){return Al}),n.d(e,"qe",function(){return Z}),n.d(e,"we",function(){return Pl}),n.d(e,"pb",function(){return Bt}),n.d(e,"a",function(){return Rl}),n.d(e,"b",function(){return Dl}),n.d(e,"c",function(){return Ml}),n.d(e,"d",function(){return jl}),n.d(e,"i",function(){return Ll}),n.d(e,"j",function(){return Tl}),n.d(e,"k",function(){return zl}),n.d(e,"n",function(){return Bl}),n.d(e,"o",function(){return ft}),n.d(e,"p",function(){return st}),n.d(e,"te",function(){return bt}),n.d(e,"q",function(){return ht}),n.d(e,"l",function(){return pt}),n.d(e,"m",function(){return Zu}),n.d(e,"f",function(){return Lt}),n.d(e,"g",function(){return jt}),n.d(e,"h",function(){return Je}),n.d(e,"e",function(){return Ye}),n.d(e,"Ob",function(){return wc}),n.d(e,"Xb",function(){return pc}),n.d(e,"jc",function(){return cc}),n.d(e,"Jd",function(){return Yu}),n.d(e,"Lc",function(){return Ae}),n.d(e,"J",function(){return qo}),n.d(e,"K",function(){return $o}),n.d(e,"L",function(){return Ho}),n.d(e,"I",function(){return Ko}),n.d(e,"S",function(){return Te}),n.d(e,"dd",function(){return Re}),n.d(e,"Nb",function(){return De}),n.d(e,"T",function(){return ga}),n.d(e,"U",function(){return ya}),n.d(e,"V",function(){return va}),n.d(e,"W",function(){return ba}),n.d(e,"X",function(){return wa}),n.d(e,"Kd",function(){return _a}),n.d(e,"Y",function(){return cs}),n.d(e,"Z",function(){return ls}),n.d(e,"cb",function(){return fs}),n.d(e,"ab",function(){return hs}),n.d(e,"ib",function(){return ps}),n.d(e,"sd",function(){return ds}),n.d(e,"bb",function(){return ms}),n.d(e,"kc",function(){return rs}),n.d(e,"nb",function(){return is}),n.d(e,"Mc",function(){return as}),n.d(e,"hd",function(){return gs}),n.d(e,"id",function(){return ys}),n.d(e,"jd",function(){return vs}),n.d(e,"kd",function(){return bs}),n.d(e,"ld",function(){return ws}),n.d(e,"nc",function(){return Es}),n.d(e,"G",function(){return Ss}),n.d(e,"Sc",function(){return Ns}),n.d(e,"Ad",function(){return Is}),n.d(e,"Bd",function(){return Os}),n.d(e,"Cd",function(){return ks}),n.d(e,"Dd",function(){return As}),n.d(e,"Ed",function(){return Cs}),n.d(e,"r",function(){return lo}),n.d(e,"s",function(){return fo}),n.d(e,"t",function(){return ho}),n.d(e,"B",function(){return po}),n.d(e,"C",function(){return mo}),n.d(e,"D",function(){return go}),n.d(e,"F",function(){return yo}),n.d(e,"P",function(){return vo}),n.d(e,"Q",function(){return bo}),n.d(e,"db",function(){return wo}),n.d(e,"eb",function(){return _o}),n.d(e,"tb",function(){return xo}),n.d(e,"ub",function(){return Eo}),n.d(e,"wb",function(){return So}),n.d(e,"Ab",function(){return No}),n.d(e,"ac",function(){return Io}),n.d(e,"bc",function(){return Oo}),n.d(e,"cc",function(){return ko}),n.d(e,"Dc",function(){return Ao}),n.d(e,"ed",function(){return Co}),n.d(e,"nd",function(){return Po}),n.d(e,"od",function(){return To}),n.d(e,"wd",function(){return Ro}),n.d(e,"xd",function(){return Do}),n.d(e,"yd",function(){return Mo}),n.d(e,"zd",function(){return jo}),n.d(e,"Gd",function(){return Bo}),n.d(e,"Ld",function(){return Lo}),n.d(e,"Md",function(){return zo}),n.d(e,"Rd",function(){return Fo}),n.d(e,"Wd",function(){return Uo}),n.d(e,"Xd",function(){return Vo}),n.d(e,"x",function(){return Ts}),n.d(e,"y",function(){return Rs}),n.d(e,"z",function(){return Ds}),n.d(e,"A",function(){return Ms}),n.d(e,"ec",function(){return js}),n.d(e,"mc",function(){return Bs}),n.d(e,"qc",function(){return Ls}),n.d(e,"sc",function(){return zs}),n.d(e,"xc",function(){return Fs}),n.d(e,"Vd",function(){return Us}),n.d(e,"Xc",function(){return Vs}),n.d(e,"rb",function(){return Ws}),n.d(e,"sb",function(){return qs}),n.d(e,"Ib",function(){return $s}),n.d(e,"Jb",function(){return Hs}),n.d(e,"Kb",function(){return Ks}),n.d(e,"Lb",function(){return Gs}),n.d(e,"Tb",function(){return Xs}),n.d(e,"Ub",function(){return Ys}),n.d(e,"Vb",function(){return Js}),n.d(e,"Wb",function(){return Zs}),n.d(e,"Gc",function(){return Qs}),n.d(e,"Hc",function(){return tu}),n.d(e,"u",function(){return eu}),n.d(e,"v",function(){return nu}),n.d(e,"w",function(){return ru}),n.d(e,"E",function(){return iu}),n.d(e,"lb",function(){return au}),n.d(e,"mb",function(){return ou}),n.d(e,"Bb",function(){return su}),n.d(e,"oc",function(){return uu}),n.d(e,"pc",function(){return cu}),n.d(e,"tc",function(){return lu}),n.d(e,"uc",function(){return fu}),n.d(e,"vc",function(){return hu}),n.d(e,"wc",function(){return pu}),n.d(e,"zc",function(){return du}),n.d(e,"Ac",function(){return mu}),n.d(e,"Tc",function(){return gu}),n.d(e,"Uc",function(){return yu}),n.d(e,"Nd",function(){return vu}),n.d(e,"Od",function(){return bu}),n.d(e,"Td",function(){return wu}),n.d(e,"Ud",function(){return _u}),n.d(e,"ob",function(){return ku}),n.d(e,"Sb",function(){return Au}),n.d(e,"Vc",function(){return Cu}),n.d(e,"fd",function(){return Pu}),n.d(e,"rd",function(){return Tu}),n.d(e,"fc",function(){return xu}),n.d(e,"gc",function(){return Eu}),n.d(e,"hc",function(){return Su}),n.d(e,"ic",function(){return Nu}),n.d(e,"xe",function(){return Iu}),n.d(e,"ye",function(){return Ou}),n.d(e,"N",function(){return Ra}),n.d(e,"je",function(){return Ta}),n.d(e,"Wc",function(){return Da}),n.d(e,"M",function(){return Ma}),n.d(e,"O",function(){return ja}),n.d(e,"R",function(){return Ba}),n.d(e,"fb",function(){return La}),n.d(e,"hb",function(){return za}),n.d(e,"vb",function(){return Fa}),n.d(e,"xb",function(){return Ua}),n.d(e,"Cb",function(){return Va}),n.d(e,"Cc",function(){return Wa}),n.d(e,"Ic",function(){return qa}),n.d(e,"Nc",function(){return $a}),n.d(e,"Oc",function(){return Ha}),n.d(e,"Pc",function(){return Ka}),n.d(e,"Qc",function(){return Ga}),n.d(e,"Rc",function(){return Xa}),n.d(e,"Zc",function(){return Ya}),n.d(e,"ad",function(){return Ja}),n.d(e,"bd",function(){return Za}),n.d(e,"gd",function(){return Qa}),n.d(e,"Hd",function(){return to}),n.d(e,"Pd",function(){return eo}),n.d(e,"Qd",function(){return no}),n.d(e,"he",function(){return ro}),n.d(e,"ne",function(){return io}),n.d(e,"pe",function(){return ao}),n.d(e,"vd",function(){return oo}),n.d(e,"zb",function(){return $e}),n.d(e,"Yb",function(){return He}),n.d(e,"Jc",function(){return We}),n.d(e,"cd",function(){return Ke}),n.d(e,"pd",function(){return je}),n.d(e,"Yd",function(){return Me}),n.d(e,"Zd",function(){return Be}),n.d(e,"ae",function(){return Le}),n.d(e,"be",function(){return ze}),n.d(e,"ce",function(){return Fe}),n.d(e,"de",function(){return Ue}),n.d(e,"ee",function(){return Ve}),n.d(e,"ze",function(){return qe}),n.d(e,"Kc",function(){return Ge}),n.d(e,"Ae",function(){return Xe}),n.d(e,"me",function(){return Ru}),n.d(e,"Fd",function(){return Ce}),n.d(e,"dc",function(){return Pe}),n.d(e,"Zb",function(){return Du}),n.d(e,"Fc",function(){return Mu}),n.d(e,"Db",function(){return Lu}),n.d(e,"oe",function(){return zu}),n.d(e,"H",function(){return Fu}),n.d(e,"Bc",function(){return Uu}),n.d(e,"yc",function(){return Vu}),n.d(e,"Sd",function(){return Wu}),n.d(e,"ke",function(){return qu}),n.d(e,"qd",function(){return $u}),n.d(e,"yb",function(){return Hu}),n.d(e,"Mb",function(){return Ku}),n.d(e,"md",function(){return Gu}),n.d(e,"Qb",function(){return Xu}),n.d(e,"Id",function(){return Ju}),n.d(e,"Eb",function(){return Qu}),n.d(e,"le",function(){return Ul}),n.d(e,"ge",function(){return Kt}),n.d(e,"Rb",function(){return Gt}),n.d(e,"jb",function(){return Xt}),n.d(e,"ie",function(){return Yt}),n.d(e,"Yc",function(){return Jt}),n.d(e,"gb",function(){return $t}),n.d(e,"Gb",function(){return Ft}),n.d(e,"Hb",function(){return Ut}),n.d(e,"re",function(){return Vt}),n.d(e,"se",function(){return Wt}),n.d(e,"ue",function(){return qt});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};function s(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var u=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t};function c(t,e,n,r){return new(n||(n=Promise))(function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?i(t.value):new n(function(e){e(t.value)}).then(o,s)}u((r=r.apply(t,e||[])).next())})}function l(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var f={},h={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function p(t){t in f||(document.createElement("canvas").addEventListener("webglcontextlost",function(e){e.preventDefault(),delete f[t]},!1),f[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var e=document.createElement("canvas");return 1===t?e.getContext("webgl",h)||e.getContext("experimental-webgl",h):e.getContext("webgl2",h)}(t));var e=f[t];return e.isContextLost()?(delete f[t],p(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),f[t])}function d(t){for(var e=t.length,n=0,r=0;e>0;)r=Math.random()*e|0,n=t[--e],t[e]=t[r],t[r]=n}function m(t,e,n){return Math.max(t,Math.min(e,n))}function g(t){return t%2==0?t:t+1}function y(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e}function v(t,e){var n=Math.random();return e*n+(1-n)*t}function b(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function w(t,e,n){void 0===n&&(n=""),b(S(t,e),n+" Shapes "+t+" and "+e+" must match")}function _(t){b(null!=t,"The input to the tensor constructor must be a non-null value.")}function x(t,e){if(void 0===e&&(e=[]),Array.isArray(t)||L(t))for(var n=0;n<t.length;++n)x(t[n],e);else e.push(t);return e}function E(t){if(0===t.length)return 1;for(var e=t[0],n=1;n<t.length;n++)e*=t[n];return e}function S(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function N(t){return t%1==0}function I(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;var e=Math.exp(2*t);return(e-1)/(e+1)}function O(t){for(var e=Math.floor(Math.sqrt(t));e>1;--e)if(t%e==0)return[e,t/e];return[1,t]}function k(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function A(t,e,n){return void 0===e&&(e=function(t){return 0}),new Promise(function(r,i){var a=0,o=function(){if(t())r();else{var s=e(++a);null!=n&&a>=n?i():setTimeout(o,s)}};o()})}function C(t,e){for(var n=1,r=-1,i=0;i<t.length;++i)if(t[i]>=0)n*=t[i];else if(-1===t[i]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+i);r=i}else if(t[i]<0)throw Error("Shapes can not be < 0. Found "+t[i]+" at dim "+i);if(-1===r){if(e>0&&e!==n)throw Error("Size("+e+") must match the product of shape "+t);return t}if(0===n)throw Error("Cannot infer the missing size in ["+t+"] when there are 0 elements");if(e%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+e+" / "+n);var a=t.slice();return a[r]=e/n,a}function P(t,e){var n=e.length;return b((t=null==t?e.map(function(t,e){return e}):[].concat(t)).every(function(t){return t>=-n&&t<n}),"All values in axis param must be in range [-"+n+", "+n+") but got axis "+t),b(t.every(function(t){return N(t)}),"All values in axis param must be integers but got axis "+t),t.map(function(t){return t<0?n+t:t})}function T(t,e){for(var n=[],r=[],i=null==e?null:P(e,t).sort(),a=0,o=0;o<t.length;++o){if(null!=i){if(i[a]===o&&1!==t[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+t[o]+"' is not 1");(null==i[a]||i[a]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),i[a]<=o&&a++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function R(t,e){var n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function D(t,e){var n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function M(t,e,n){if("float32"===e)for(var r=0;r<t.length;r++){var i=t[r];if(isNaN(i)||!isFinite(i))throw Error("The result of the '"+n+"' is "+i+".")}}function j(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+e+" being uploaded contains "+r+".")}}function B(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function L(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function z(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function F(t){if(null==t)return 0;var e=0;return t.forEach(function(t){return e+=2*t.length}),e}function U(t){return"string"==typeof t||t instanceof String}function V(t){return"boolean"==typeof t}function W(t){return"number"==typeof t}function q(t){return t instanceof Array?q(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":W(t)?"float32":U(t)?"string":V(t)?"bool":"float32"}function $(t){return!!(t&&t.constructor&&t.call&&t.apply)}function H(t,e){for(var n=e;n<t;++n)if(t%n==0)return n;return t}function K(t){var e=t.length;if(e<2)return[];var n=new Array(e-1);n[e-2]=t[e-1];for(var r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function G(t,e,n){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=x(t)),n&&j(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){for(var r=new Uint8Array(t.length),i=0;i<r.length;++i)0!==Math.round(t[i])&&(r[i]=1);return r}throw new Error("Unknown data type "+e)}function X(t,e){for(var n=Y(t,e),r=0;r<n.length;r++)n[r]=1;return n}function Y(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function J(){if("undefined"!=typeof performance)return performance.now();if(void 0!==t){var e=t.hrtime();return 1e3*e[0]+e[1]/1e6}throw new Error("Cannot measure time in this environment. You should run tf.js in the browser or in Node.js")}var Z=Object.freeze({shuffle:d,clamp:m,nearestLargerEven:g,sum:y,randUniform:v,distSquared:function(t,e){for(var n=0,r=0;r<t.length;r++){var i=Number(t[r])-Number(e[r]);n+=i*i}return n},assert:b,assertShapesMatch:w,assertNonNull:_,flatten:x,sizeFromShape:E,isScalarShape:function(t){return 0===t.length},arraysEqual:S,isInt:N,tanh:I,sizeToSquarishShape:O,createShuffledIndices:function(t){for(var e=new Uint32Array(t),n=0;n<t;++n)e[n]=n;return d(e),e},rightPad:k,repeatedTry:A,inferFromImplicitShape:C,parseAxisParam:P,squeezeShape:T,getTypedArrayFromDType:R,getArrayFromDType:D,checkComputationForErrors:M,checkConversionForErrors:j,hasEncodingLoss:B,isTypedArray:L,bytesPerElement:z,bytesFromStringArray:F,isString:U,isBoolean:V,isNumber:W,inferDtype:q,isFunction:$,nearestDivisor:H,computeStrides:K,toTypedArray:G,makeOnesTypedArray:X,makeZerosTypedArray:Y,now:J}),Q=function(){function t(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new tt)}return t.prototype.profileKernel=function(t,e){var n,r=this,i=this.backendTimer.time(function(){n=e()});return(Array.isArray(n)?n:[n]).forEach(function(e){var n=e.dataSync();M(n,e.dtype,t),i.then(function(i){var a="";null!=i.getExtraProfileInfo&&(a=i.getExtraProfileInfo()),r.logger.logKernelProfile(t,e,n,i.kernelMs,a)})}),n},t}(),tt=function(){function t(){}return t.prototype.logKernelProfile=function(t,e,n,r,i){var a=k(r+"ms",9),o=k(t,25),s=e.rank,u=e.size,c=k(e.shape.toString(),14);console.log("%c"+o+"\t%c"+a+"\t%c"+s+"D "+c+"\t%c"+u+"\t%c"+i,"font-weight:bold","color:red","color:blue","color: orange","color: green")},t}(),et=20,nt=3,rt=7;function it(t,e,n,r){var i=K(e),a=function(t,e,n,r){var i=E(e),a=r[r.length-1],o=new Array(a).fill(0),s=e.length,u="complex64"===n?ot(t):t;if(s>1)for(var c=0;c<i/a;c++)for(var l=c*a,f=0;f<a;f++)o[f]=Math.max(o[f],at(u[l+f],0).length);return o}(t,e,n,i),o=e.length,s=function t(e,n,r,i,a,o){void 0===o&&(o=!0);var s="complex64"===r?2:1,u=n[0],c=n.length;if(0===c)return"complex64"===r?[at(ot(e)[0],0)]:[e[0].toString()];if(1===c){if(u>et){var l=nt*s,f=Array.from(e.slice(0,l)),h=Array.from(e.slice(u-nt*s,u));return"complex64"===r&&(f=ot(f),h=ot(h)),["["+f.map(function(t,e){return at(t,a[e])}).join(", ")+", ..., "+h.map(function(t,e){return at(t,a[u-nt+e])}).join(", ")+"]"]}return["["+("complex64"===r?ot(e):Array.from(e)).map(function(t,e){return at(t,a[e])}).join(", ")+"]"]}var p=n.slice(1),d=i.slice(1),m=i[0]*s,g=[];if(u>et){for(var y=0;y<nt;y++){var v=(b=y*m)+m;g.push.apply(g,t(e.slice(b,v),p,r,d,a,!1))}for(g.push("..."),y=u-nt;y<u;y++)v=(b=y*m)+m,g.push.apply(g,t(e.slice(b,v),p,r,d,a,y===u-1))}else for(y=0;y<u;y++){var b;v=(b=y*m)+m,g.push.apply(g,t(e.slice(b,v),p,r,d,a,y===u-1))}var w=2===c?",":"";g[0]="["+g[0]+w;for(y=1;y<g.length-1;y++)g[y]=" "+g[y]+w;var _=",\n";for(y=2;y<c;y++)_+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(o?"":_),g}(t,e,n,i,a),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push("  shape: ["+e+"]"),u.push("  values:")),u.push(s.map(function(t){return"    "+t}).join("\n")),u.join("\n")}function at(t,e){return k(Array.isArray(t)?parseFloat(t[0].toFixed(rt))+" + "+parseFloat(t[1].toFixed(rt))+"j":U(t)?"'"+t+"'":parseFloat(t.toFixed(rt)).toString(),e)}function ot(t){for(var e=[],n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var st=function(){function t(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=E(t),null!=n){var r=n.length;b(r===this.size,"Length of values '"+r+"' does not match the size inferred by the shape '"+this.size+"'.")}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||D(e,E(this.shape)),this.strides=K(t)}return t.prototype.set=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];0===e.length&&(e=[0]),b(e.length===this.rank,"The number of provided coordinates ("+e.length+") must match the rank ("+this.rank+")");var r=this.locToIndex(e);this.values[r]=t},t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];0===t.length&&(t=[0]);for(var n=t[t.length-1],r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]},t.prototype.locToIndex=function(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];for(var e=t[t.length-1],n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e},t.prototype.indexToLoc=function(t){if(0===this.rank)return[];if(1===this.rank)return[t];for(var e=new Array(this.shape.length),n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e},Object.defineProperty(t.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.toTensor=function(){return ft.make(this.shape,{values:this.values},this.dtype)},t}(),ut=null,ct=null;function lt(t){ut=t}var ft=function(){function t(t,e,n,r){this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=E(t),this.strides=K(t),this.dataId=null!=r?r:{},this.id=ut().nextTensorId(),this.rankType=this.rank<5?this.rank.toString():"higher",ut().registerTensor(this),null!=n&&ut().write(this.dataId,n)}return t.make=function(e,n,r){return new t(e,r,n.values,n.dataId)},t.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},t.prototype.asScalar=function(){return this.throwIfDisposed(),b(1===this.size,"The array must have only 1 element."),this.reshape([])},t.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},t.prototype.as2D=function(t,e){return this.throwIfDisposed(),this.reshape([t,e])},t.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])},t.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])},t.prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),this.reshape([t,e,n,r,i])},t.prototype.asType=function(t){return this.throwIfDisposed(),ct.cast(this,t)},Object.defineProperty(t.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];b(t.length===this.rank,"Number of coordinates in get() must match the rank of the tensor"),b("complex64"!==this.dtype,"Tensor.get() is not supported for complex64 tensors yet."),this.throwIfDisposed(),0===t.length&&(t=[0]);for(var n=t[t.length-1],r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.dataSync()[n]},t.prototype.buffer=function(){return ct.buffer(this.shape,this.dtype,this.dataSync())},t.prototype.data=function(){return c(this,void 0,void 0,function(){return l(this,function(t){return this.throwIfDisposed(),[2,ut().read(this.dataId)]})})},t.prototype.dataSync=function(){return this.throwIfDisposed(),ut().readSync(this.dataId)},t.prototype.dispose=function(){this.isDisposed||(ut().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(t.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),t.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},t.prototype.toFloat=function(){return this.asType("float32")},t.prototype.toInt=function(){return this.asType("int32")},t.prototype.toBool=function(){return this.asType("bool")},t.prototype.print=function(t){return void 0===t&&(t=!1),ct.print(this,t)},t.prototype.reshape=function(t){return this.throwIfDisposed(),ct.reshape(this,t)},t.prototype.reshapeAs=function(t){return this.throwIfDisposed(),this.reshape(t.shape)},t.prototype.expandDims=function(t){return void 0===t&&(t=0),ct.expandDims(this,t)},t.prototype.cumsum=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=!1),void 0===n&&(n=!1),ct.cumsum(this,t,e,n)},t.prototype.squeeze=function(t){return this.throwIfDisposed(),ct.squeeze(this,t)},t.prototype.clone=function(){return this.throwIfDisposed(),ct.clone(this)},t.prototype.toString=function(t){return void 0===t&&(t=!1),it(this.dataSync(),this.shape,this.dtype,t)},t.prototype.tile=function(t){return this.throwIfDisposed(),ct.tile(this,t)},t.prototype.gather=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ct.gather(this,t,e)},t.prototype.matMul=function(t,e,n){return void 0===e&&(e=!1),void 0===n&&(n=!1),this.throwIfDisposed(),ct.matMul(this,t,e,n)},t.prototype.dot=function(t){return this.throwIfDisposed(),ct.dot(this,t)},t.prototype.norm=function(t,e,n){return void 0===t&&(t="euclidean"),void 0===e&&(e=null),void 0===n&&(n=!1),this.throwIfDisposed(),ct.norm(this,t,e,n)},t.prototype.slice=function(t,e){return this.throwIfDisposed(),ct.slice(this,t,e)},t.prototype.reverse=function(t){return this.throwIfDisposed(),ct.reverse(this,t)},t.prototype.concat=function(e,n){return void 0===n&&(n=0),this.throwIfDisposed(),e instanceof t&&(e=[e]),ct.concat([this].concat(e),n)},t.prototype.split=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ct.split(this,t,e)},t.prototype.stack=function(t,e){return void 0===e&&(e=0),ct.stack([this,t],e)},t.prototype.unstack=function(t,e){return void 0===e&&(e=0),ct.unstack(this,e)},t.prototype.pad=function(t,e){return void 0===e&&(e=0),ct.pad(this,t,e)},t.prototype.batchNormalization=function(t,e,n,r,i){return void 0===n&&(n=.001),this.throwIfDisposed(),ct.batchNormalization(this,t,e,n,r,i)},t.prototype.all=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.all(this,t,e)},t.prototype.any=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.any(this,t,e)},t.prototype.logSumExp=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.logSumExp(this,t,e)},t.prototype.sum=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.sum(this,t,e)},t.prototype.prod=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.prod(this,t,e)},t.prototype.mean=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.mean(this,t,e)},t.prototype.min=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.min(this,t,e)},t.prototype.max=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ct.max(this,t,e)},t.prototype.argMin=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ct.argMin(this,t)},t.prototype.argMax=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ct.argMax(this,t)},t.prototype.cast=function(t){return this.throwIfDisposed(),ct.cast(this,t)},t.prototype.add=function(t){return this.throwIfDisposed(),ct.add(this,t)},t.prototype.addStrict=function(t){return this.throwIfDisposed(),ct.addStrict(this,t)},t.prototype.atan2=function(t){return this.throwIfDisposed(),ct.atan2(this,t)},t.prototype.sub=function(t){return this.throwIfDisposed(),ct.sub(this,t)},t.prototype.subStrict=function(t){return this.throwIfDisposed(),ct.subStrict(this,t)},t.prototype.pow=function(t){return this.throwIfDisposed(),ct.pow(this,t)},t.prototype.powStrict=function(t){return this.throwIfDisposed(),ct.powStrict(this,t)},t.prototype.mul=function(t){return this.throwIfDisposed(),ct.mul(this,t)},t.prototype.mulStrict=function(t){return this.throwIfDisposed(),ct.mulStrict(this,t)},t.prototype.div=function(t){return this.throwIfDisposed(),ct.div(this,t)},t.prototype.floorDiv=function(t){return this.throwIfDisposed(),ct.floorDiv(this,t)},t.prototype.divStrict=function(t){return this.throwIfDisposed(),ct.divStrict(this,t)},t.prototype.minimum=function(t){return this.throwIfDisposed(),ct.minimum(this,t)},t.prototype.minimumStrict=function(t){return this.throwIfDisposed(),ct.minimumStrict(this,t)},t.prototype.maximum=function(t){return this.throwIfDisposed(),ct.maximum(this,t)},t.prototype.maximumStrict=function(t){return this.throwIfDisposed(),ct.maximumStrict(this,t)},t.prototype.mod=function(t){return this.throwIfDisposed(),ct.mod(this,t)},t.prototype.modStrict=function(t){return this.throwIfDisposed(),ct.modStrict(this,t)},t.prototype.squaredDifference=function(t){return this.throwIfDisposed(),ct.squaredDifference(this,t)},t.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),ct.squaredDifferenceStrict(this,t)},t.prototype.transpose=function(t){return this.throwIfDisposed(),ct.transpose(this,t)},t.prototype.notEqual=function(t){return this.throwIfDisposed(),ct.notEqual(this,t)},t.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),ct.notEqualStrict(this,t)},t.prototype.less=function(t){return this.throwIfDisposed(),ct.less(this,t)},t.prototype.lessStrict=function(t){return this.throwIfDisposed(),ct.lessStrict(this,t)},t.prototype.equal=function(t){return this.throwIfDisposed(),ct.equal(this,t)},t.prototype.equalStrict=function(t){return this.throwIfDisposed(),ct.equalStrict(this,t)},t.prototype.lessEqual=function(t){return this.throwIfDisposed(),ct.lessEqual(this,t)},t.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),ct.lessEqualStrict(this,t)},t.prototype.greater=function(t){return this.throwIfDisposed(),ct.greater(this,t)},t.prototype.greaterStrict=function(t){return this.throwIfDisposed(),ct.greaterStrict(this,t)},t.prototype.greaterEqual=function(t){return this.throwIfDisposed(),ct.greaterEqual(this,t)},t.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ct.greaterEqualStrict(this,t)},t.prototype.logicalAnd=function(t){return this.throwIfDisposed(),ct.logicalAnd(this,t)},t.prototype.logicalOr=function(t){return this.throwIfDisposed(),ct.logicalOr(this,t)},t.prototype.logicalNot=function(){return this.throwIfDisposed(),ct.logicalNot(this)},t.prototype.logicalXor=function(t){return this.throwIfDisposed(),ct.logicalXor(this,t)},t.prototype.where=function(t,e){return this.throwIfDisposed(),ct.where(t,this,e)},t.prototype.neg=function(){return this.throwIfDisposed(),ct.neg(this)},t.prototype.ceil=function(){return this.throwIfDisposed(),ct.ceil(this)},t.prototype.floor=function(){return this.throwIfDisposed(),ct.floor(this)},t.prototype.sign=function(){return this.throwIfDisposed(),ct.sign(this)},t.prototype.exp=function(){return this.throwIfDisposed(),ct.exp(this)},t.prototype.expm1=function(){return this.throwIfDisposed(),ct.expm1(this)},t.prototype.log=function(){return this.throwIfDisposed(),ct.log(this)},t.prototype.log1p=function(){return this.throwIfDisposed(),ct.log1p(this)},t.prototype.sqrt=function(){return this.throwIfDisposed(),ct.sqrt(this)},t.prototype.rsqrt=function(){return this.throwIfDisposed(),ct.rsqrt(this)},t.prototype.square=function(){return this.throwIfDisposed(),ct.square(this)},t.prototype.reciprocal=function(){return this.throwIfDisposed(),ct.reciprocal(this)},t.prototype.abs=function(){return this.throwIfDisposed(),ct.abs(this)},t.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ct.clipByValue(this,t,e)},t.prototype.relu=function(){return this.throwIfDisposed(),ct.relu(this)},t.prototype.elu=function(){return this.throwIfDisposed(),ct.elu(this)},t.prototype.selu=function(){return this.throwIfDisposed(),ct.selu(this)},t.prototype.leakyRelu=function(t){return void 0===t&&(t=.2),this.throwIfDisposed(),ct.leakyRelu(this,t)},t.prototype.prelu=function(t){return this.throwIfDisposed(),ct.prelu(this,t)},t.prototype.sigmoid=function(){return this.throwIfDisposed(),ct.sigmoid(this)},t.prototype.logSigmoid=function(){return this.throwIfDisposed(),ct.logSigmoid(this)},t.prototype.softplus=function(){return this.throwIfDisposed(),ct.softplus(this)},t.prototype.zerosLike=function(){return this.throwIfDisposed(),ct.zerosLike(this)},t.prototype.onesLike=function(){return this.throwIfDisposed(),ct.onesLike(this)},t.prototype.sin=function(){return this.throwIfDisposed(),ct.sin(this)},t.prototype.cos=function(){return this.throwIfDisposed(),ct.cos(this)},t.prototype.tan=function(){return this.throwIfDisposed(),ct.tan(this)},t.prototype.asin=function(){return this.throwIfDisposed(),ct.asin(this)},t.prototype.acos=function(){return this.throwIfDisposed(),ct.acos(this)},t.prototype.atan=function(){return this.throwIfDisposed(),ct.atan(this)},t.prototype.sinh=function(){return this.throwIfDisposed(),ct.sinh(this)},t.prototype.cosh=function(){return this.throwIfDisposed(),ct.cosh(this)},t.prototype.tanh=function(){return this.throwIfDisposed(),ct.tanh(this)},t.prototype.asinh=function(){return this.throwIfDisposed(),ct.asinh(this)},t.prototype.acosh=function(){return this.throwIfDisposed(),ct.acosh(this)},t.prototype.atanh=function(){return this.throwIfDisposed(),ct.atanh(this)},t.prototype.erf=function(){return this.throwIfDisposed(),ct.erf(this)},t.prototype.round=function(){return this.throwIfDisposed(),ct.round(this)},t.prototype.step=function(t){return void 0===t&&(t=0),this.throwIfDisposed(),ct.step(this,t)},t.prototype.softmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ct.softmax(this,t)},t.prototype.logSoftmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ct.logSoftmax(this,t)},t.prototype.resizeBilinear=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ct.image.resizeBilinear(this,t,e)},t.prototype.resizeNearestNeighbor=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ct.image.resizeNearestNeighbor(this,t,e)},t.prototype.conv1d=function(t,e,n,r,i,a){return void 0===r&&(r="NWC"),void 0===i&&(i=1),this.throwIfDisposed(),ct.conv1d(this,t,e,n,r,i,a)},t.prototype.conv2d=function(t,e,n,r,i,a){return void 0===r&&(r="NHWC"),void 0===i&&(i=[1,1]),this.throwIfDisposed(),ct.conv2d(this,t,e,n,r,i,a)},t.prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),ct.conv2dTranspose(this,t,e,n,r,i)},t.prototype.depthwiseConv2D=function(t,e,n,r,i,a){return void 0===r&&(r="NHWC"),void 0===i&&(i=[1,1]),this.throwIfDisposed(),ct.depthwiseConv2d(this,t,e,n,r,i,a)},t.prototype.separableConv2d=function(t,e,n,r,i,a){return void 0===i&&(i=[1,1]),void 0===a&&(a="NHWC"),this.throwIfDisposed(),ct.separableConv2d(this,t,e,n,r,i,a)},t.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ct.avgPool(this,t,e,n,r)},t.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),ct.maxPool(this,t,e,n,r)},t.prototype.localResponseNormalization=function(t,e,n,r){return void 0===t&&(t=5),void 0===e&&(e=1),void 0===n&&(n=1),void 0===r&&(r=.5),ct.localResponseNormalization(this,t,e,n,r)},t.prototype.pool=function(t,e,n,r,i){return this.throwIfDisposed(),ct.pool(this,t,e,n,r,i)},t.prototype.variable=function(t,e,n){return void 0===t&&(t=!0),this.throwIfDisposed(),ht.variable(this,t,e,n)},t.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ct.unsortedSegmentSum(this,t,e)},t.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),ct.batchToSpaceND(this,t,e)},t.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),ct.spaceToBatchND(this,t,e)},t.prototype.topk=function(t,e){return void 0===t&&(t=1),void 0===e&&(e=!0),this.throwIfDisposed(),ct.topk(this,t,e)},t.prototype.stridedSlice=function(t,e,n,r,i,a,o,s){return void 0===r&&(r=0),void 0===i&&(i=0),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),this.throwIfDisposed(),ct.stridedSlice(this,t,e,n,r,i,a,o,s)},t.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ct.depthToSpace(this,t,e)},t.prototype.fft=function(){return this.throwIfDisposed(),ct.spectral.fft(this)},t.prototype.ifft=function(){return this.throwIfDisposed(),ct.spectral.ifft(this)},t.prototype.rfft=function(){return this.throwIfDisposed(),ct.spectral.rfft(this)},t.prototype.irfft=function(){return this.throwIfDisposed(),ct.spectral.irfft(this)},t}();Object.defineProperty(ft,Symbol.hasInstance,{value:function(t){return!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype}});var ht=function(t){function e(e,n,r){void 0===n&&(n=!0);var i=t.call(this,e.shape,e.dtype,null,e.dataId)||this;i.trainable=n,i.name=r,null==i.name&&(i.name=ut().nextVariableId().toString());try{ut().registerVariable(i)}catch(t){throw ut().disposeTensor(i),t}return i}return s(e,t),e.variable=function(t,n,r,i){return void 0===n&&(n=!0),null!=i&&i!==t.dtype&&(t=t.asType(i)),new e(t,n,r)},e.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value ("+t.dtype+") and previous value ("+this.dtype+") must match");if(!S(t.shape,this.shape))throw new Error("shape of the new value ("+t.shape+") and previous value ("+this.shape+") must match");ut().disposeTensor(this),this.dataId=t.dataId,ut().registerTensor(this)},e}(ft);Object.defineProperty(ht,Symbol.hasInstance,{value:function(t){return t instanceof ft&&null!=t.assign&&t.assign instanceof Function}});var pt,dt,mt,gt,yt,vt,bt=ht.variable;(vt=pt||(pt={})).R0="R0",vt.R1="R1",vt.R2="R2",vt.R3="R3",vt.R4="R4",vt.R5="R5",vt.R6="R6",function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(dt||(dt={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(mt||(mt={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(gt||(gt={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(yt||(yt={}));var wt={float32:gt,int32:dt,bool:mt,complex64:yt};function _t(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast "+t+" with "+e)}return wt[t][e]}function xt(t){return _t(t,"int32")}function Et(t,e){if(t.dtype===e.dtype)return[t,e];var n=_t(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function St(t){var e=[];return function t(e,n,r){if(null!=e)if(e instanceof ft)n.push(e);else if(function(t){return Array.isArray(t)||"object"==typeof t}(e)){var i=e;for(var a in i){var o=i[a];r.has(o)||(r.add(o),t(o,n,r))}}}(t,e,new Set),e}var Nt,It=function(){function t(t,e,n){this.backend=t,this.safeMode=e,this.debugMode=n,this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.profiling=!1,this.gradientScopeCount=0,this.customGradientDepth=0,this.scopeStack=[],this.keepTensors=new Set,this.tensorInfo=new WeakMap,this.profiler=new Q(t),this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return t.prototype.moveData=function(t){this.write(t,this.readSync(t))},t.prototype.tidy=function(t,e,n){var r=this;void 0===n&&(n=!1);var i,a=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun(function(){return r.startScope(a,n)},function(){return r.endScope(i,n)},function(){return(i=e())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i})},t.prototype.scopedRun=function(t,e,n){t();try{var r=n();return e(),r}catch(t){throw e(),t}},t.prototype.nextTensorId=function(){return t.nextTensorId++},t.prototype.nextVariableId=function(){return t.nextVariableId++},t.prototype.runKernel=function(t,e,n){var r,i=this,a=[],o=function(t){return a.push(t),t},s=this.activeScope.name,u=this.numBytes,c=this.numTensors;if(this.scopedRun(function(){return i.customGradientDepth++},function(){return i.customGradientDepth--},function(){r=i.debugMode()?i.profiler.profileKernel(s,function(){return t(i.backend,o)}):t(i.backend,o)}),this.shouldRecord()){var l={id:this.nextTapeNodeId++,name:s,inputs:e,outputs:Array.isArray(r)?r:[r]};null!=n&&(l.gradient=function(t){return n(t,a)}),this.activeTape.push(l)}return this.profiling&&this.activeProfile.kernels.push({name:s,bytesAdded:this.numBytes-u,totalBytesSnapshot:this.numBytes,tensorsAdded:this.numTensors-c,totalTensorsSnapshot:this.numTensors,inputShapes:Object.keys(e).map(function(t){return e[t].shape}),outputShape:Array.isArray(r)?r.map(function(t){return t.shape}):r.shape}),r},t.prototype.registerTensor=function(t){var e=this.tensorInfo.has(t.dataId)?this.tensorInfo.get(t.dataId).refCount:0;if(this.numTensors++,"string"===t.dtype&&this.numStringTensors++,0===e){this.numDataBuffers++;var n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=E(t.shape)*z(t.dtype)),this.tensorInfo.set(t.dataId,{backend:this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.numBytes+=n,this.backend.register(t.dataId,t.shape,t.dtype)}this.tensorInfo.get(t.dataId).refCount++,t instanceof ht||this.track(t)},t.prototype.registerVariable=function(t){if(null!=this.registeredVariables[t.name])throw new Error("Variable with name "+t.name+" was already registered");this.registeredVariables[t.name]=t},t.prototype.disposeTensor=function(t){if(this.tensorInfo.has(t.dataId)){this.keepTensors.has(t.id)&&this.keepTensors.delete(t.id),this.numTensors--,"string"===t.dtype&&this.numStringTensors--;var e=this.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.numBytes-=e.bytes),this.numDataBuffers--,e.backend.disposeData(t.dataId),this.tensorInfo.delete(t.dataId)):this.tensorInfo.get(t.dataId).refCount--}},t.prototype.disposeVariables=function(){for(var t in this.registeredVariables){var e=this.registeredVariables[t];this.disposeTensor(e),delete this.registeredVariables[t]}},t.prototype.memory=function(){var t=this.backend.memory();return t.numTensors=this.numTensors,t.numDataBuffers=this.numDataBuffers,t.numBytes=this.numBytes,this.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t},t.prototype.profile=function(t){return c(this,void 0,void 0,function(){var e,n;return l(this,function(r){return this.profiling=!0,e=this.numBytes,n=this.numTensors,this.activeProfile.kernels=[],this.activeProfile.result=t(),this.profiling=!1,this.activeProfile.peakBytes=Math.max.apply(Math,this.activeProfile.kernels.map(function(t){return t.totalBytesSnapshot})),this.activeProfile.newBytes=this.numBytes-e,this.activeProfile.newTensors=this.numTensors-n,[2,this.activeProfile]})})},t.prototype.shouldRecord=function(){return null!=this.activeTape&&0===this.customGradientDepth},t.prototype.addTapeNode=function(t,e,n){var r={};t.forEach(function(t,e){r[e]=t});var i={id:this.nextTapeNodeId++,name:this.activeScope.name,inputs:r,outputs:[e],gradient:function(t){var e={};return n(t).forEach(function(t,n){e[n]=function(){return t}}),e}};this.activeTape.push(i)},t.prototype.keep=function(t){if(1===this.scopeStack.length&&this.safeMode)throw new Error("Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() => {...}) to avoid memory leaks.");return this.keepTensors.add(t.id),t},t.prototype.startScope=function(t,e){void 0===e&&(e=!1),e&&0===this.gradientScopeCount&&(this.activeTape=[]),e&&this.gradientScopeCount++;var n={track:[],name:"unnamed scope"};t&&(n.name=t),this.scopeStack.push(n),this.activeScope=n},t.prototype.endScope=function(t,e){var n=this;void 0===e&&(e=!1),e&&(this.gradientScopeCount--,0===this.gradientScopeCount&&(this.activeTape=null));var r=new Set(this.keepTensors),i=St(t);i.forEach(function(t){return r.add(t.id)});for(var a=0;a<this.activeScope.track.length;a++){var o=this.activeScope.track[a];r.has(o.id)||(null!=this.activeTape?i.push(o):o.dispose())}var s=this.scopeStack.pop();this.activeScope=0===this.scopeStack.length?null:this.scopeStack[this.scopeStack.length-1],i.forEach(function(t){!n.keepTensors.has(t.id)&&function(t,e){for(var n=0;n<e.length;n++)if(e[n].id===t.id)return!0;return!1}(t,s.track)&&n.track(t)})},t.prototype.gradients=function(t,e,n,r){var i=this;if(void 0===r&&(r=!1),b(e.length>0,"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '"+n.dtype+"'");return this.tidy("gradients",function(){var a=t();b(a instanceof ft,"The result y returned by f() must be a tensor.");var o=function(t,e,n){for(var r={},i={},a=0;a<e.length;a++)r[e[a].id]=!0;for(a=0;a<t.length;a++){var o=(d=t[a]).inputs;for(var s in o){for(var u=o[s],c=!1,l=0;l<e.length;l++)if(r[u.id]){d.outputs.forEach(function(t){return r[t.id]=!0}),c=!0,i[d.id]=!0;break}if(c)break}}var f={};f[n.id]=!0;var h={};for(a=t.length-1;a>=0;a--)for(o=(d=t[a]).inputs,l=0;l<d.outputs.length;l++)if(f[d.outputs[l].id]){for(var s in o)f[o[s].id]=!0,h[d.id]=!0;break}var p=[];for(a=0;a<t.length;a++){var d;if(i[(d=t[a]).id]&&h[d.id]){var m={};for(var s in d.inputs){var g=d.inputs[s];r[g.id]&&(m[s]=g)}var y=Object.assign({},d);y.inputs=m,y.outputs=d.outputs,p.push(y)}}return p}(i.activeTape,e,a);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");var s={};return s[a.id]=null==n?function(t){var e=X(E(t),"float32");return ft.make(t,{values:e})}(a.shape):n,function(t,e){for(var n=function(n){var r=e[n],i=[];if(r.outputs.forEach(function(e){var n=t[e.id];if(null!=n)i.push(n);else{var r=ft.make(e.shape,{values:Y(e.size,e.dtype)},e.dtype);i.push(r)}}),null==r.gradient)throw new Error("Cannot compute gradient: gradient function not found for "+r.name+".");var a=r.gradient(1===r.outputs.length?i[0]:i);for(var o in r.inputs){if(!(o in a))throw new Error("Cannot backprop through input "+o+". Available gradients found: "+Object.keys(a)+".");var s=a[o]();if("float32"!==s.dtype)throw new Error("Error in gradient for op "+r.name+". The gradient of input "+o+" must have 'float32' dtype, but has '"+s.dtype+"'");var u=r.inputs[o];if(!S(s.shape,u.shape))throw new Error("Error in gradient for op "+r.name+". The gradient of input '"+o+"' has shape '"+s.shape+"', which does not match the shape of the input '"+u.shape+"'");if(null==t[u.id])t[u.id]=s;else{var c=t[u.id];t[u.id]=c.add(s),c.dispose()}}},r=e.length-1;r>=0;r--)n(r)}(s,o),{value:a,grads:e.map(function(t){return s[t.id]})}},!0)},t.prototype.customGrad=function(t){var e=this;return b($(t),"The f passed in customGrad(f) must be a function."),function(){for(var n,r,i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];return b(i.every(function(t){return t instanceof ft}),"The args passed in customGrad(f)(x1, x2,...) must all be tensors"),e.scopedRun(function(){return e.customGradientDepth++},function(){return e.customGradientDepth--},function(){r=e.tidy(t.name,function(){var e=t.apply(void 0,i),r=e.value,a=e.gradFunc;return b(r instanceof ft,"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),b($(a),"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n=a,r},!0)}),e.shouldRecord()&&e.addTapeNode(i,r,function(t){var e=n(t),r=Array.isArray(e)?e:[e];return b(r.length===i.length,"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),b(r.every(function(t){return t instanceof ft}),"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."),r}),r}},t.prototype.write=function(t,e){var n=this.tensorInfo.get(t);if("string"===n.dtype){var r=F(e);this.numBytes+=r-n.bytes,n.bytes=r}this.backend!==n.backend&&(n.backend.disposeData(t),n.backend=this.backend,this.backend.register(t,n.shape,n.dtype)),this.backend.write(t,e)},t.prototype.readSync=function(t){return this.tensorInfo.get(t).backend.readSync(t)},t.prototype.read=function(t){return this.tensorInfo.get(t).backend.read(t)},t.prototype.fromPixels=function(t,e){return this.backend.fromPixels(t,e)},t.prototype.time=function(t){return c(this,void 0,void 0,function(){var e,n;return l(this,function(r){switch(r.label){case 0:return e=J(),[4,this.backend.time(t)];case 1:return(n=r.sent()).wallMs=J()-e,[2,n]}})})},t.prototype.track=function(t){if(1===this.scopeStack.length&&this.safeMode)throw new Error("Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() => {op();...}); to avoid memory leaks.");return null!=this.activeScope&&this.activeScope.track.push(t),t},t.nextTensorId=0,t.nextVariableId=0,t}();!function(t){t[t.NUMBER=0]="NUMBER",t[t.BOOLEAN=1]="BOOLEAN",t[t.STRING=2]="STRING"}(Nt||(Nt={}));var Ot,kt,At=[{name:"DEBUG",type:Nt.BOOLEAN},{name:"IS_BROWSER",type:Nt.BOOLEAN},{name:"WEBGL_LAZILY_UNPACK",type:Nt.BOOLEAN},{name:"WEBGL_CPU_FORWARD",type:Nt.BOOLEAN},{name:"WEBGL_PACK",type:Nt.BOOLEAN},{name:"WEBGL_PACK_BATCHNORMALIZATION",type:Nt.BOOLEAN},{name:"WEBGL_PACK_CLIP",type:Nt.BOOLEAN},{name:"WEBGL_PACK_DEPTHWISECONV",type:Nt.BOOLEAN},{name:"WEBGL_PACK_BINARY_OPERATIONS",type:Nt.BOOLEAN},{name:"WEBGL_CONV_IM2COL",type:Nt.BOOLEAN},{name:"WEBGL_MAX_TEXTURE_SIZE",type:Nt.NUMBER},{name:"WEBGL_NUM_MB_BEFORE_PAGING",type:Nt.NUMBER},{name:"WEBGL_MAX_TEXTURES_IN_SHADER",type:Nt.NUMBER},{name:"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",type:Nt.NUMBER},{name:"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",type:Nt.BOOLEAN},{name:"WEBGL_VERSION",type:Nt.NUMBER},{name:"WEBGL_RENDER_FLOAT32_ENABLED",type:Nt.BOOLEAN},{name:"WEBGL_DOWNLOAD_FLOAT_ENABLED",type:Nt.BOOLEAN},{name:"WEBGL_FENCE_API_ENABLED",type:Nt.BOOLEAN},{name:"WEBGL_SIZE_UPLOAD_UNIFORM",type:Nt.NUMBER},{name:"BACKEND",type:Nt.STRING},{name:"EPSILON",type:Nt.NUMBER},{name:"PROD",type:Nt.BOOLEAN},{name:"TENSORLIKE_CHECK_SHAPE_CONSISTENCY",type:Nt.BOOLEAN}];function Ct(t){try{if(null!=p(t))return!0}catch(t){return!1}return!1}var Pt="tfjsflags";function Tt(){var t={};if("undefined"==typeof window||void 0===window.location||void 0===window.location.search)return t;var e=function(t){var e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")}),e}(window.location.search);if(Pt in e){var n={};e[Pt].split(",").forEach(function(t){var e=t.split(":"),r=e[0],i=e[1];n[r]=i}),At.forEach(function(e){e.name in n&&(console.log("Setting feature override from URL "+e.name+": "+n[e.name]),e.type===Nt.NUMBER?t[e.name]=+n[e.name]:e.type===Nt.BOOLEAN?t[e.name]="true"===n[e.name]:e.type===Nt.STRING?t[e.name]=n[e.name]:console.warn("Unknown URL param: "+e.name+"."))})}return t}function Rt(t,e){return null!=t.getExtension(e)}function Dt(t,e){var n=t.createFramebuffer(),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);var i=2===e?t.RGBA32F:t.RGBA;t.texImage2D(t.TEXTURE_2D,0,i,1,1,0,t.RGBA,t.FLOAT,null),t.bindFramebuffer(t.FRAMEBUFFER,n),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);var a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(n),a}var Mt=600;var jt=function(){function e(t){this.features={},this.registry={},null!=t&&(this.features=t),this.get("DEBUG")&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}return e.setBackend=function(t,e){if(void 0===e&&(e=!1),!(t in Lt.registry))throw new Error("Backend name '"+t+"' not found in registry");Lt.engine.backend=Lt.findBackend(t),Lt.backendName=t},e.getBackend=function(){return Lt.initEngine(),Lt.backendName},e.disposeVariables=function(){Lt.engine.disposeVariables()},e.memory=function(){return Lt.engine.memory()},e.profile=function(t){return Lt.engine.profile(t)},e.tidy=function(t,e){return Lt.engine.tidy(t,e)},e.dispose=function(t){St(t).forEach(function(t){return t.dispose()})},e.keep=function(t){return Lt.engine.keep(t)},e.time=function(t){return Lt.engine.time(t)},e.prototype.get=function(t){return t in this.features?this.features[t]:(this.features[t]=this.evaluateFeature(t),this.features[t])},e.prototype.getFeatures=function(){return this.features},e.prototype.set=function(t,e){this.features[t]=e},e.prototype.getBestBackendName=function(){var t=this;if(0===Object.keys(this.registry).length)throw new Error("No backend found in registry.");return Object.keys(this.registry).map(function(e){return{name:e,entry:t.registry[e]}}).sort(function(t,e){return e.entry.priority-t.entry.priority})[0].name},e.prototype.evaluateFeature=function(e){if("DEBUG"===e)return!1;if("IS_BROWSER"===e)return"undefined"!=typeof window;if("IS_NODE"===e)return void 0!==t&&void 0!==t.versions&&void 0!==t.versions.node;if("IS_CHROME"===e)return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor);if("WEBGL_CPU_FORWARD"===e)return!0;if("WEBGL_PACK"===e)return!1;if("WEBGL_PACK_BATCHNORMALIZATION"===e)return this.get("WEBGL_PACK");if("WEBGL_PACK_CLIP"===e)return this.get("WEBGL_PACK");if("WEBGL_PACK_DEPTHWISECONV"===e)return this.get("WEBGL_PACK");if("WEBGL_PACK_BINARY_OPERATIONS"===e)return this.get("WEBGL_PACK");if("WEBGL_LAZILY_UNPACK"===e)return this.get("WEBGL_PACK");if("WEBGL_CONV_IM2COL"===e)return this.get("WEBGL_PACK");if("WEBGL_NUM_MB_BEFORE_PAGING"===e)return this.get("PROD")||!this.get("IS_BROWSER")?Number.POSITIVE_INFINITY:window.screen.height*window.screen.width*window.devicePixelRatio*Mt/1024;if("WEBGL_MAX_TEXTURE_SIZE"===e)return function(t){if(null==Ot){var e=p(t);Ot=e.getParameter(e.MAX_TEXTURE_SIZE)}return Ot}(this.get("WEBGL_VERSION"));if("WEBGL_MAX_TEXTURES_IN_SHADER"===e)return function(t){if(null==kt){var e=p(t);kt=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,kt)}(this.get("WEBGL_VERSION"));if("IS_TEST"===e)return!1;if("BACKEND"===e)return this.getBestBackendName();if("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"===e){var n=this.get("WEBGL_VERSION");return 0===n?0:function(t){if(0===t)return 0;var e=p(t);return Rt(e,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Rt(e,"EXT_disjoint_timer_query")?1:0}(n)}if("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE"===e)return this.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){var t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}();if("HAS_WEBGL"===e)return this.get("WEBGL_VERSION")>0;if("WEBGL_VERSION"===e)return Ct(2)?2:Ct(1)?1:0;if("WEBGL_RENDER_FLOAT32_ENABLED"===e)return function(t){if(0===t)return!1;var e=p(t);if(1===t){if(!Rt(e,"OES_texture_float"))return!1}else if(!Rt(e,"EXT_color_buffer_float"))return!1;return Dt(e,t)}(this.get("WEBGL_VERSION"));if("WEBGL_DOWNLOAD_FLOAT_ENABLED"===e)return function(t){if(0===t)return!1;var e=p(t);if(1===t){if(!Rt(e,"OES_texture_float"))return!1;if(!Rt(e,"WEBGL_color_buffer_float"))return!1}else if(!Rt(e,"EXT_color_buffer_float"))return!1;return Dt(e,t)}(this.get("WEBGL_VERSION"));if("WEBGL_FENCE_API_ENABLED"===e)return function(t){return 2===t&&null!=p(t).fenceSync}(this.get("WEBGL_VERSION"));if("WEBGL_SIZE_UPLOAD_UNIFORM"===e)return this.get("WEBGL_RENDER_FLOAT32_ENABLED")?4:0;if("TEST_EPSILON"===e)return 32===this.backend.floatPrecision()?.001:.1;if("EPSILON"===e)return 32===this.backend.floatPrecision()?1e-7:1e-4;if("PROD"===e)return!1;if("TENSORLIKE_CHECK_SHAPE_CONSISTENCY"===e)return!this.get("PROD");throw new Error("Unknown feature "+e+".")},e.prototype.setFeatures=function(t){this.features=Object.assign({},t)},e.prototype.reset=function(){this.features=Tt(),null!=this.globalEngine&&(this.globalEngine=null)},Object.defineProperty(e.prototype,"backend",{get:function(){return this.engine.backend},enumerable:!0,configurable:!0}),e.prototype.findBackend=function(t){return t in this.registry?this.registry[t].backend:null},e.prototype.registerBackend=function(t,e,n,r){var i=this;if(void 0===n&&(n=1),t in this.registry)return console.warn(t+" backend was already registered. Reusing existing backend"),null!=r&&r(function(){return i.engine}),!1;try{var a=e();return a.setDataMover({moveData:function(t){return i.engine.moveData(t)}}),this.registry[t]={backend:a,priority:n},!0}catch(e){return console.warn("Registration of backend "+t+" failed"),console.warn(e.stack||e.message),!1}},e.prototype.removeBackend=function(t){if(!(t in this.registry))throw new Error(t+" backend not found in registry");this.registry[t].backend.dispose(),delete this.registry[t]},Object.defineProperty(e.prototype,"engine",{get:function(){return this.initEngine(),this.globalEngine},enumerable:!0,configurable:!0}),e.prototype.initEngine=function(){var t=this;if(null==this.globalEngine){this.backendName=this.get("BACKEND");var e=this.findBackend(this.backendName);this.globalEngine=new It(e,!1,function(){return t.get("DEBUG")})}},e}();function Bt(){Lt.set("PROD",!0)}var Lt=function(){var e=function(){var e;if("undefined"!=typeof window)e=window;else{if(void 0===t)throw new Error("Could not find a global object");e=t}return e}();return null==e.ENV&&(e.ENV=new jt(Tt()),lt(function(){return e.ENV.engine})),e.ENV}(),zt=Object.freeze({EPSILON_FLOAT16:1e-4,EPSILON_FLOAT32:1e-7,Environment:jt,enableProdMode:Bt,ENV:Lt});function Ft(t){return b($(t),"The f passed in grad(f) must be a function"),function(e,n){return b(e instanceof ft,"The x passed in grad(f)(x) must be a tensor"),b(null==n||n instanceof ft,"The dy passed in grad(f)(x, dy) must be a tensor"),Lt.engine.tidy(function(){var r=Lt.engine.gradients(function(){return t(e)},[e],n),i=r.value,a=r.grads;return null!=n&&w(i.shape,n.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ht(a),a[0]})}}function Ut(t){return b($(t),"The f passed in grads(f) must be a function"),function(e,n){return b(Array.isArray(e)&&e.every(function(t){return t instanceof ft}),"The args passed in grads(f)(args) must be an array of tensors"),b(null==n||n instanceof ft,"The dy passed in grads(f)(args, dy) must be a tensor"),Lt.engine.tidy(function(){var r=Lt.engine.gradients(function(){return t.apply(void 0,e)},e,n),i=r.value,a=r.grads;return null!=n&&w(i.shape,n.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ht(a),a})}}function Vt(t){return b($(t),"The f passed in valueAndGrad(f) must be a function"),function(e,n){b(e instanceof ft,"The x passed in valueAndGrad(f)(x) must be a tensor"),b(null==n||n instanceof ft,"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");var r=Lt.engine.gradients(function(){return t(e)},[e],n),i=r.grads,a=r.value;return Ht(i),{grad:i[0],value:a}}}function Wt(t){return b($(t),"The f passed in valueAndGrads(f) must be a function"),function(e,n){b(Array.isArray(e)&&e.every(function(t){return t instanceof ft}),"The args passed in valueAndGrads(f)(args) must be array of tensors"),b(null==n||n instanceof ft,"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");var r=Lt.engine.gradients(function(){return t.apply(void 0,e)},e,n);return null!=n&&w(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ht(r.grads),r}}function qt(t,e){if(b($(t),"The f passed in variableGrads(f) must be a function"),b(null==e||Array.isArray(e)&&e.every(function(t){return t instanceof ht}),"The varList passed in variableGrads(f, varList) must be an array of variables"),null==e)for(var n in e=[],Lt.engine.registeredVariables)e.push(Lt.engine.registeredVariables[n]);var r=e.length;b((e=e.filter(function(t){return t.trainable})).length>0,"variableGrads() expects at least one of the input variables to be trainable, but none of the "+r+" variables is trainable.");var i=Lt.engine.gradients(t,e,null,!0),a=i.value,o=i.grads;b(o.some(function(t){return null!=t}),"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),b(0===a.rank,"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+a.rank+" tensor");var s={};return e.forEach(function(t,e){null!=o[e]&&(s[t.name]=o[e])}),{value:a,grads:s}}function $t(t){return Lt.engine.customGrad(t)}function Ht(t){if(t.filter(function(t){return null==t}).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Kt=jt.tidy,Gt=jt.keep,Xt=jt.dispose,Yt=jt.time,Jt=jt.profile;function Zt(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];Lt.get("IS_TEST")||console.warn.apply(console,t)}function Qt(t,e,n,r){void 0===r&&(r=!0);var i=[];if(r)(i=i.concat(e.slice(0))).push(t[0]/n),i=i.concat(t.slice(1));else{i=i.concat(t[0]);for(var a=e.length,o=0;o<a;++o)i=i.concat([t[o+1]/e[o],e[o]]);i=i.concat(t.slice(a+1))}return i}function te(t,e,n){void 0===n&&(n=!0);var r=[];if(n){r.push(e);for(var i=e+1;i<t;++i)i<=2*e?(r.push(i),r.push(i-(e+1))):r.push(i)}else{var a=[],o=[];for(i=1;i<t;++i)i>=2*e+1||i%2==1?o.push(i):a.push(i);r.push.apply(r,a),r.push(0),r.push.apply(r,o)}return r}function ee(t,e,n,r){void 0===r&&(r=!0);var i=[];r?i.push(t[0]/n):i.push(t[0]*n);for(var a=1;a<t.length;++a)a<=e.length?r?i.push(e[a-1]*t[a]):i.push(t[a]/e[a-1]):i.push(t[a]);return i}function ne(t,e){for(var n=[0],r=0;r<e;++r)n.push(t[r][0]);return n}function re(t,e,n){for(var r=t.slice(0,1),i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}function ie(t,e){for(var n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function ae(t,e){for(var n=[],r=t.length,i=0;i<r;i++)-1===e.indexOf(i)&&n.push(t[i]);return[n,e.map(function(e){return t[e]})]}function oe(t,e){return function(t,e,n){for(var r=t.length+e.length,i=[],a=0,o=0,s=0;s<r;s++)-1===n.indexOf(s)?i.push(t[a++]):i.push(e[o++]);return i}(t,e.map(function(t){return 1}),e)}function se(t,e,n){b(ie(e,n),t+" supports only inner-most axes for now. Got axes "+e+" and rank-"+n+" input.")}function ue(t,e){if(ie(t,e))return null;for(var n=[],r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(function(t){return n.push(t)}),n}function ce(t){return t.map(function(t,e){return[e,t]}).sort(function(t,e){return t[1]-e[1]}).map(function(t){return t[0]})}function le(t,e){for(var n=[],r=e-t;r<e;++r)n.push(r);return n}function fe(t,e){for(var n=t.length,r=[],i=0;i<n;i++){var a=n-1-i,o=t[a]||1;(e[e.length-1-i]||1)>1&&1===o&&r.unshift(a)}return r}function he(t,e){for(var n=[],r=0;r<e.length;r++){var i=t[t.length-r-1],a=e.length-r-1,o=e[a];(null==i||1===i&&o>1)&&n.unshift(a)}return n}function pe(t,e){for(var n=[],r=Math.max(t.length,e.length),i=0;i<r;i++){var a=t[t.length-i-1];null==a&&(a=1);var o=e[e.length-i-1];if(null==o&&(o=1),1===a)n.unshift(o);else if(1===o)n.unshift(a);else{if(a!==o)throw Error("Operands could not be broadcast together with shapes "+t+" and "+e+".");n.unshift(a)}}return n}function de(t,e){for(var n=t[0].slice(),r=1;r<t.length;r++)n[e]+=t[r][e];return n}function me(t,e){if(t.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+t.rank+".");if(e.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.shape[e.rank-1]>t.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+e.shape[e.rank-1]+" vs. "+t.rank);if(0===t.size)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+t.shape+".");for(var n=e.shape,r=n[n.length-1],i=1,a=0;a<n.length-1;++a)i*=n[a];var o=t.shape,s=n.slice();s.pop();var u=1;for(a=r;a<t.rank;++a)u*=o[a],s.push(o[a]);var c=K(t.shape).map(function(t){return t/u}).concat([1]).slice(0,r);return[s,i,u,c]}var ge=30;function ye(t){return t<=ge?t:H(t,Math.floor(Math.sqrt(t)))}function ve(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+t.rank+".");if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}!function(t,e,n){var r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+", indices.shape: "+e.shape+", shape: "+t+", sliceDim: "+r+", and batchDim: "+i+".";if(n.rank<i)throw new Error(a+" update.rank < "+i+". ");if(t.length<r+(n.rank-i))throw new Error(a+" Output shape length < "+(r+(n.rank-i)));if(n.rank!==i+t.length-r)throw new Error(a+" update.rank != "+(i+t.length-r));for(var o=0;o<i;++o)if(n.shape[o]!==e.shape[o])throw new Error(a+" updates.shape["+o+"] ("+n.shape[o]+") != indices.shape["+o+"] ("+e.shape[o]+").");for(o=0;o<n.rank-i;++o)if(n.shape[o+i]!==t[o+r])throw new Error(a+" updates.shape["+(o+i)+"] ("+n.shape[o+i]+") != shape["+(o+i)+"] ("+t[o+i]+")")}(n,e,t)}function be(t,e,n){for(var r=e.rank>1?e.shape[e.rank-1]:1,i=n.length,a=1,o=r;o<i;++o)a*=n[o];var s=r<1?1:r;return{sliceRank:r,numUpdates:e.size/s,sliceSize:a,strides:K(n.slice(0,r)).concat([1]),outputSize:E(n)}}function we(t,e,n,r,i,a,o,s,u){if(void 0===i&&(i=0),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),void 0===u&&(u=0),0!==o)throw new Error("ellipsis mask is not yet supported");if(0!==s)throw new Error("new axis mask is not yet supported");for(var c=[],l=[],f=[],h=0;h<t.length;h++)c[h]=_e(i,e,r,t,h),l[h]=xe(a,n,r,t,h),u&1<<h&&(l[h]=c[h]+1,f.push(h));var p=new Array(t.length).fill(0);return p=p.map(function(t,e){for(var n=0,i=c[e];!(r[e]>0?i>=l[e]:i<=l[e]);i+=r[e])n+=1;return n}),[c,p,f]}function _e(t,e,n,r,i){var a=e[i];t&1<<i&&(a=n[i]>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var o=r[i];return a<0&&(a+=o),m(0,a,o-1)}function xe(t,e,n,r,i){var a=e[i];t&1<<i&&(a=n[i]>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var o=r[i];return a<0&&(a+=o),n[i]>0?m(0,a,o):m(-1,a,o-1)}function Ee(t,e,n){for(var r=n.length,i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function Se(t,e){for(var n=t.length>0?t[t.length-1]:1,r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Ne(t){var e=t;if(L(t))return[t.length];if(!Array.isArray(t))return[];for(var n=[];e instanceof Array||L(e);)n.push(e.length),e=e[0];return t instanceof Array&&Lt.get("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],e instanceof Array||L(e)){b(n.length>0,function(){return"Element arr["+r.join("][")+"] should be a primitive, but is an array of "+e.length+" elements"}),b(e.length===n[0],function(){return"Element arr["+r.join("][")+"] should have "+n[0]+" elements, but has "+e.length+" elements"});for(var i=n.slice(1),a=0;a<e.length;++a)t(e[a],i,r.concat(a))}else b(0===n.length,function(){return"Element arr["+r.join("][")+"] is a primitive, but should be an array/TypedArray of "+n[0]+" elements"})}(t,n,[]),n}function Ie(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error("Argument '"+n+"' passed to '"+r+"' must be "+t+" tensor, but got "+e+" tensor")}function Oe(t,e,n,r){if(void 0===r&&(r="numeric"),t instanceof ft)return Ie(r,t.dtype,e,n),t;var i=q(t);if("string"!==i&&["bool","int32","float32"].indexOf(r)>=0&&(i=r),Ie(r,i,e,n),!L(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("Argument '"+e+"' passed to '"+n+"' must be a Tensor or TensorLike, but got '"+t.constructor.name+"'");var a=Ne(t);L(t)||Array.isArray(t)||(t=[t]);var o="string"!==i?G(t,i,Lt.get("DEBUG")):x(t);return ft.make(a,{values:o},i)}function ke(t,e,n){if(!Array.isArray(t))throw new Error("Argument "+e+" passed to "+n+" must be a `Tensor[]` or `TensorLike[]`");return t.map(function(t,r){return Oe(t,e+"["+r+"]",n)})}function Ae(t){var e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");var n=e[0],r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));var i=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];Lt.engine.startScope(n);try{var i=r.apply(void 0,t);return i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Lt.engine.endScope(i),i}catch(t){throw Lt.engine.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}var Ce=Ae({softmax_:function(t,e){void 0===e&&(e=-1);var n=Oe(t,"logits","softmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and dim was "+e);return $t(function(t){var n=t.logSumExp([e],!0),r=t.toFloat().sub(n).exp();return{value:r,gradFunc:function(t){var n=t.mul(r);return n.sub(n.sum([e],!0).mul(r))}}})(n)}}),Pe=Ae({logSoftmax_:function(t,e){void 0===e&&(e=-1);var n=Oe(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and axis was "+e);return $t(function(t){var n=t.max(e,!0),r=t.sub(n),i=r.toFloat().sub(r.exp().sum(e,!0).log());return{value:i,gradFunc:function(t){var n=i.exp();return t.sub(t.sum(e,!0).mul(n))}}})(n)}});var Te=Ae({complex_:function(t,e){var n=Oe(t,"real","complex"),r=Oe(e,"imag","complex");return w(n.shape,r.shape,"real and imag shapes, "+n.shape+" and "+r.shape+", must match in call to tf.complex()."),Lt.engine.runKernel(function(t){return t.complex(n,r)},{$real:n,$imag:r})}}),Re=Ae({real_:function(t){var e=Oe(t,"input","real");return Lt.engine.runKernel(function(t){return t.real(e)},{$input:e})}}),De=Ae({imag_:function(t){var e=Oe(t,"input","imag");return Lt.engine.runKernel(function(t){return t.imag(e)},{$input:e})}});function Me(t,e,n){if(null==n&&(n=q(t)),"complex64"===n)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!L(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");var r=Ne(t);if(null!=e){var i=E(e),a=E(r);b(i===a,function(){return"Based on the provided shape, ["+e+"], the tensor should have "+i+" values but has "+a});for(var o=0;o<r.length;++o){var s=r[o],u=o!==r.length-1||s!==E(e.slice(o));b(r[o]===e[o]||!u,function(){return"Error creating a new Tensor. Inferred shape ("+r+") does not match the provided shape ("+e+"). "})}}return L(t)||Array.isArray(t)||(t=[t]),e=e||r,t="string"!==n?G(t,n,Lt.get("DEBUG")):x(t),ft.make(e,{values:t},n)}function je(t,e){if((L(t)||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");return Me(t,[],e)}function Be(t,e){_(t);var n=Ne(t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Me(t,n,e)}function Le(t,e,n){if(_(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");var r=Ne(t);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Me(t,e=e||r,n)}function ze(t,e,n){if(_(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");var r=Ne(t);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Me(t,e=e||r,n)}function Fe(t,e,n){if(_(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");var r=Ne(t);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Me(t,e=e||r,n)}function Ue(t,e,n){if(_(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");var r=Ne(t);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Me(t,e=e||r,n)}function Ve(t,e,n){if(_(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");var r=Ne(t);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Me(t,e=e||r,n)}function We(t,e){if(void 0===e&&(e="float32"),"complex64"===e){var n=We(t,"float32"),r=We(t,"float32");return Te(n,r)}var i=X(E(t),e);return ft.make(t,{values:i},e)}function qe(t,e){if(void 0===e&&(e="float32"),"complex64"===e){var n=qe(t,"float32"),r=qe(t,"float32");return Te(n,r)}var i=Y(E(t),e);return ft.make(t,{values:i},e)}function $e(t,e,n){var r=D(n=n||q(e),E(t));return r.fill(e),ft.make(t,{values:r},n)}function He(t,e,n){if(0===n)throw new Error("Cannot request zero samples");var r=(e-t)/(n-1),i=Y(n,"float32");i[0]=t;for(var a=1;a<i.length;a++)i[a]=i[a-1]+r;return Be(i,"float32")}function Ke(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r="float32"),0===n)throw new Error("Cannot have a step of zero");if(t===e||t<e&&n<0||e<t&&n>1)return qe([0],r);var i=Y(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),i[0]=t;for(var a=1;a<i.length;a++)i[a]=i[a-1]+n;return Be(i,r)}var Ge=Ae({onesLike_:function(t){var e=Oe(t,"x","onesLike");return We(e.shape,e.dtype)}}),Xe=Ae({zerosLike_:function(t){var e=Oe(t,"x","zerosLike");return qe(e.shape,e.dtype)}}),Ye=function(){function t(t){this.dataMover=t,this.data=new WeakMap}return t.prototype.get=function(t){return this.data.has(t)||this.dataMover.moveData(t),this.data.get(t)},t.prototype.set=function(t,e){this.data.set(t,e)},t.prototype.has=function(t){return this.data.has(t)},t.prototype.delete=function(t){return this.data.delete(t)},t}(),Je=function(){function t(){}return t.prototype.time=function(t){throw new Error("Not yet implemented.")},t.prototype.read=function(t){throw new Error("Not yet implemented.")},t.prototype.readSync=function(t){throw new Error("Not yet implemented.")},t.prototype.disposeData=function(t){throw new Error("Not yet implemented.")},t.prototype.write=function(t,e){throw new Error("Not yet implemented.")},t.prototype.fromPixels=function(t,e){throw new Error("Not yet implemented.")},t.prototype.register=function(t,e,n){throw new Error("Not yet implemented.")},t.prototype.memory=function(){throw new Error("Not yet implemented.")},t.prototype.floatPrecision=function(){throw new Error("Not yet implemented")},t.prototype.batchMatMul=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.slice=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.stridedSlice=function(t,e,n,r,i,a,o,s,u){throw new Error("Not yet implemented")},t.prototype.unstack=function(t,e){throw new Error("Not yet implemented")},t.prototype.reverse=function(t,e){throw new Error("Not yet implemented")},t.prototype.concat=function(t,e){throw new Error("Not yet implemented")},t.prototype.neg=function(t){throw new Error("Not yet implemented")},t.prototype.add=function(t,e){throw new Error("Not yet implemented")},t.prototype.addN=function(t){throw new Error("Not yet implemented")},t.prototype.subtract=function(t,e){throw new Error("Not yet implemented")},t.prototype.multiply=function(t,e){throw new Error("Not yet implemented")},t.prototype.realDivide=function(t,e){throw new Error("Not yet implemented")},t.prototype.floorDiv=function(t,e){throw new Error("Not yet implemented")},t.prototype.sum=function(t,e){throw new Error("Not yet implemented")},t.prototype.prod=function(t,e){throw new Error("Not yet implemented")},t.prototype.unsortedSegmentSum=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.argMin=function(t,e){throw new Error("Not yet implemented")},t.prototype.argMax=function(t,e){throw new Error("Not yet implemented")},t.prototype.equal=function(t,e){throw new Error("Not yet implemented")},t.prototype.notEqual=function(t,e){throw new Error("Not yet implemented")},t.prototype.less=function(t,e){throw new Error("Not yet implemented")},t.prototype.lessEqual=function(t,e){throw new Error("Not yet implemented")},t.prototype.greater=function(t,e){throw new Error("Not yet implemented")},t.prototype.greaterEqual=function(t,e){throw new Error("Not yet implemented")},t.prototype.logicalNot=function(t){throw new Error("Not yet implemented")},t.prototype.logicalAnd=function(t,e){throw new Error("Not yet implemented")},t.prototype.logicalOr=function(t,e){throw new Error("Not yet implemented")},t.prototype.where=function(t){throw new Error("Not yet implemented")},t.prototype.select=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.topk=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.min=function(t,e){throw new Error("Not yet implemented")},t.prototype.minimum=function(t,e){throw new Error("Not yet implemented")},t.prototype.mod=function(t,e){throw new Error("Not yet implemented")},t.prototype.max=function(t,e){throw new Error("Not yet implemented")},t.prototype.maximum=function(t,e){throw new Error("Not yet implemented")},t.prototype.all=function(t,e){throw new Error("Not yet implemented")},t.prototype.any=function(t,e){throw new Error("Not yet implemented")},t.prototype.squaredDifference=function(t,e){throw new Error("Not yet implemented")},t.prototype.ceil=function(t){throw new Error("Not yet implemented")},t.prototype.floor=function(t){throw new Error("Not yet implemented")},t.prototype.round=function(t){throw new Error("Not yet implemented")},t.prototype.sign=function(t){throw new Error("Not yet implemented")},t.prototype.pow=function(t,e){throw new Error("Not yet implemented")},t.prototype.exp=function(t){throw new Error("Not yet implemented")},t.prototype.expm1=function(t){throw new Error("Not yet implemented")},t.prototype.log=function(t){throw new Error("Not yet implemented")},t.prototype.log1p=function(t){throw new Error("Not yet implemented")},t.prototype.sqrt=function(t){throw new Error("Not yet implemented")},t.prototype.rsqrt=function(t){throw new Error("Not yet implemented")},t.prototype.square=function(t){throw new Error("Not yet implemented")},t.prototype.reciprocal=function(t){throw new Error("Not yet implemented")},t.prototype.relu=function(t){throw new Error("Not yet implemented")},t.prototype.prelu=function(t,e){throw new Error("Not yet implemented")},t.prototype.elu=function(t){throw new Error("Not yet implemented")},t.prototype.eluDer=function(t,e){throw new Error("Not yet implemented")},t.prototype.selu=function(t){throw new Error("Not yet implemented")},t.prototype.int=function(t){throw new Error("Not yet implemented")},t.prototype.clip=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.abs=function(t){throw new Error("Not yet implemented")},t.prototype.complexAbs=function(t){throw new Error("Not yet implemented")},t.prototype.sigmoid=function(t){throw new Error("Not yet implemented")},t.prototype.softplus=function(t){throw new Error("Not yet implemented")},t.prototype.sin=function(t){throw new Error("Not yet implemented")},t.prototype.cos=function(t){throw new Error("Not yet implemented")},t.prototype.tan=function(t){throw new Error("Not yet implemented")},t.prototype.asin=function(t){throw new Error("Not yet implemented")},t.prototype.acos=function(t){throw new Error("Not yet implemented")},t.prototype.atan=function(t){throw new Error("Not yet implemented")},t.prototype.atan2=function(t,e){throw new Error("Not yet implemented")},t.prototype.sinh=function(t){throw new Error("Not yet implemented")},t.prototype.cosh=function(t){throw new Error("Not yet implemented")},t.prototype.tanh=function(t){throw new Error("Not yet implemented")},t.prototype.asinh=function(t){throw new Error("Not yet implemented")},t.prototype.acosh=function(t){throw new Error("Not yet implemented")},t.prototype.atanh=function(t){throw new Error("Not yet implemented")},t.prototype.erf=function(t){throw new Error("Not yet implemented")},t.prototype.step=function(t,e){throw new Error("Not yet implemented")},t.prototype.conv2d=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.conv2dDerInput=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.conv2dDerFilter=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.depthwiseConv2D=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.depthwiseConv2DDerInput=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.conv3d=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.conv3dDerInput=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.conv3dDerFilter=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.maxPool=function(t,e){throw new Error("Not yet implemented")},t.prototype.maxPoolBackprop=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.avgPool=function(t,e){throw new Error("Not yet implemented")},t.prototype.avgPoolBackprop=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.reshape=function(t,e){throw new Error("Not yet implemented")},t.prototype.cast=function(t,e){throw new Error("Not yet implemented")},t.prototype.tile=function(t,e){throw new Error("Not yet implemented")},t.prototype.pad=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.transpose=function(t,e){throw new Error("Not yet implemented")},t.prototype.gather=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.gatherND=function(t,e){throw new Error("Not yet implemented")},t.prototype.scatterND=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.batchToSpaceND=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.spaceToBatchND=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.resizeBilinear=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.resizeBilinearBackprop=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.resizeNearestNeighbor=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.batchNormalization=function(t,e,n,r,i,a){throw new Error("Not yet implemented")},t.prototype.localResponseNormalization4D=function(t,e,n,r,i){throw new Error("Not yet implemented")},t.prototype.LRNGrad=function(t,e,n,r,i,a,o){throw new Error("Not yet implemented")},t.prototype.multinomial=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.oneHot=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.cumsum=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.nonMaxSuppression=function(t,e,n,r,i){throw new Error("Not yet implemented")},t.prototype.fft=function(t){throw new Error("Not yet implemented")},t.prototype.ifft=function(t){throw new Error("Not yet implemented")},t.prototype.complex=function(t,e){throw new Error("Not yet implemented")},t.prototype.real=function(t){throw new Error("Not yet implemented")},t.prototype.imag=function(t){throw new Error("Not yet implemented")},t.prototype.cropAndResize=function(t,e,n,r,i,a){throw new Error("Not yet implemented")},t.prototype.depthToSpace=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.split=function(t,e,n){throw new Error("Not yet implemented")},t.prototype.sparseToDense=function(t,e,n,r){throw new Error("Not yet implemented")},t.prototype.setDataMover=function(t){throw new Error("Not yet implemented")},t.prototype.dispose=function(){throw new Error("Not yet implemented")},t}();function Ze(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();var r=qe(t.shape),i=t.toFloat(),a=n.complex(i,r);return r.dispose(),i.dispose(),a}if(!B(t.dtype,e))return ft.make(t.shape,{dataId:t.dataId},e);if("complex64"===t.dtype){var o=n.real(t);return a=o.cast(e),o.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){var s=je(0,t.dtype);return a=n.notEqual(t,s),s.dispose(),a}throw new Error("Error in Cast: unknown dtype argument ("+e+")")}function Qe(t,e){return ft.make(e,{dataId:t.dataId},t.dtype)}function tn(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+t.length+", imag: "+e.length+".");for(var n=new Float32Array(2*t.length),r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function en(t,e){return{real:t[2*e],imag:t[2*e+1]}}function nn(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function rn(t,e,n){var r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function an(t,e,n,r,i){for(var a=Array.from(e).map(function(t,e){return{score:t,boxIndex:e}}).filter(function(t){return t.score>i}).sort(function(t,e){return e.score-t.score}),o=[],s=0;s<a.length;s++){var u=a[s],c=u.score,l=u.boxIndex;if(c<i)break;for(var f=!1,h=o.length-1;h>=0;--h)if(on(t,l,o[h])>=r){f=!0;break}if(!f&&(o.push(l),o.length>=n))break}return Be(o,"int32")}function on(t,e,n){var r=t.subarray(4*e,4*e+4),i=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),s=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(i[0],i[2]),l=Math.min(i[1],i[3]),f=Math.max(i[0],i[2]),h=Math.max(i[1],i[3]),p=(s-a)*(u-o),d=(f-c)*(h-l);if(p<=0||d<=0)return 0;var m=Math.max(a,c),g=Math.max(o,l),y=Math.min(s,f),v=Math.min(u,h),b=Math.max(y-m,0)*Math.max(v-g,0);return b/(p+d-b)}function sn(t,e,n){var r=new Array(t.rank).fill(0),i=t.shape.slice();return e.map(function(e){i[n]=e;var a=t.slice(r,i);return r[n]+=e,a})}function un(t,e,n,r,i){for(var a=e[e.length-1],o=[t.length/a,a],s=o[0],u=o[1],c=R(n,s*r),l=R("int32",s*r),f=0;f<s;f++){for(var h=f*u,p=t.subarray(h,h+u),d=[],m=0;m<p.length;m++)d.push({value:p[m],index:m});d.sort(function(t,e){return e.value-t.value});var g=f*r,y=c.subarray(g,g+r),v=l.subarray(g,g+r);for(m=0;m<r;m++)y[m]=d[m].value,v[m]=d[m].index}var b=e.slice();return b[b.length-1]=r,[Me(c,b,n),Me(l,b,"int32")]}var cn=function(t,e,n){this.variableNames=["A"];var r=t.windowSize,i=t.batchSize,a=t.inSize,o=Math.ceil(a/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];var s="max"===e?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+u+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+s+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "},ln=function(t){this.variableNames=["dy"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,a=t.dilationHeight,o=t.dilationWidth,s=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=s-1-t.padInfo.top,l=u-1-t.padInfo.left,f=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2("+c+", "+l+");\n      const float avgMultiplier = float("+f+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+s+";\n            wR += "+a+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+t.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+o+") {\n            float dyC = float(dyCCorner + wC) / "+i+".0;\n\n            if (dyC < 0.0 || dyC >= "+t.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},fn=function(t,e,n,r,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],pe(t,e),pe(t,n);var o="0.0";null!=r&&(pe(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");var s="1.0";null!=i&&(pe(t,i),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+o+";\n        float scale = "+s+";\n        float inv = scale * inversesqrt(variance + float("+a+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},hn=function(t,e,n,r,i,a){this.usesPackedTextures=!0,this.variableNames=["x","mean","variance"],pe(t,e),pe(t,n);var o="vec4(0.0)";null!=r&&(pe(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");var s="vec4(1.0)";null!=i&&(pe(t,i),this.variableNames.push("scale"),s="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = "+o+";\n        vec4 scale = "+s+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+a+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},pn="return areal * breal - aimag * bimag;",dn="return areal * bimag + aimag * breal;",mn=function(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=pe(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+t+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},gn="return a + b;",yn="return a - b;",vn="return a * b;",bn=function(){function t(t,e,n){this.variableNames=["A","B"],this.outputShape=pe(e,n),this.userCode="\n      uniform float NAN;\n      float binaryOperation(float a, float b) {\n        "+t+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(){var t=this;return function(e,n){null==t.startLoc&&(t.startLoc=e.getUniformLocationNoThrow(n,"NAN"),null==t.startLoc)||e.gl.uniform1f(t.startLoc,NaN)}},t}(),wn=function(){function t(t,e,n){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.usesPackedTextures=!0,this.outputShape=pe(e,n),this.userCode="\n      uniform float NAN;\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+t+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(){var t=this;return function(e,n){null==t.startLoc&&(t.startLoc=e.getUniformLocationNoThrow(n,"NAN"),null==t.startLoc)||e.gl.uniform1f(t.startLoc,NaN)}},t}(),_n=function(){function t(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isNaN(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, min, max));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,i){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(i,"min"),n.maxLoc=r.getUniformLocationNoThrow(i,"max")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),xn=function(){function t(t){this.variableNames=["A"],this.usesPackedTextures=!0,this.outputShape=t,this.userCode="\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (hasNaN(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(min), vec4(max)));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,i){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(i,"min"),n.maxLoc=r.getUniformLocationNoThrow(i,"max")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),En=function(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "},Sn=function(t){this.outputShape=[],this.outputShape=de(t,1),this.variableNames=t.map(function(t,e){return"T"+e});var e=new Array(t.length-1);e[0]=t[0][1];for(var n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];var r=["if (yC < "+e[0]+") setOutput(getT0(yR, yC));"];for(n=1;n<e.length;n++){var i=e[n-1];r.push("else if (yC < "+e[n]+") setOutput(getT"+n+"(yR, yC-"+i+"));")}var a=e.length,o=e[e.length-1];r.push("else setOutput(getT"+a+"(yR, yC-"+o+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+r.join("\n        ")+"\n      }\n    "},Nn=function(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+t.batchSize+"; b++) {\n          for (int yR = 0; yR < "+t.outHeight+"; yR++) {\n            int xR = wR + yR * "+e+" - "+r+";\n\n            if (xR < 0 || xR >= "+t.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+t.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+i+";\n\n              if (xC < 0 || xC >= "+t.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},In=function(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2("+a+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+e+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+t.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+e+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+i+".0;\n\n            if (dyC < 0.0 || dyC >= "+t.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+t.outChannels+"; d2++) {\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},On=function(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;var e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,a=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+t.batchSize+"; b++) {\n          for (int yF = 0; yF < "+t.outDepth+"; yF++) {\n            int xF = wF + yF * "+e+" - "+i+";\n\n            if (xF < 0 || xF >= "+t.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+t.outHeight+"; yR++) {\n              int xR = wR + yR * "+n+" - "+a+";\n\n              if (xR < 0 || xR >= "+t.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+t.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+o+";\n\n                if (xC < 0 || xC >= "+t.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},kn=function(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;var e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,a=t.strideHeight,o=t.strideWidth,s=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+s+", "+u+", "+c+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+e+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+i+".0;\n\n          if (dyF < 0.0 || dyF >= "+t.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+e+" - 1 - wF;\n\n          for (int wR = 0; wR < "+n+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+a+".0;\n\n            if (dyR < 0.0 || dyR >= "+t.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+n+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+o+".0;\n\n              if (dyC < 0.0 || dyC >= "+t.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+t.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},An=function(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+a+" + dm;\n\n        float dotProd = 0.0;\n\n        // TODO: Vec4 over the batch size\n        for (int b = 0; b < "+t.batchSize+"; b++) {\n          for (int yR = 0; yR < "+t.outHeight+"; yR++) {\n            int xR = wR + yR * "+e+" - "+r+";\n\n            if (xR < 0 || xR >= "+t.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+t.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+i+";\n\n              if (xC < 0 || xC >= "+t.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Cn=function(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+a+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+e+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+t.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+e+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+i+".0;\n\n            if (dyC < 0.0 || dyC >= "+t.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            // TODO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+s+"; dm++) {\n              int d2 = d1 * "+s+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Pn=function(t){this.variableNames=["x","W"],this.outputShape=t.outShape;var e=t.padInfo.top,n=t.padInfo.left,r=t.strideHeight,i=t.strideWidth,a=t.dilationHeight,o=t.dilationWidth,s=t.filterHeight,u=t.filterWidth,c=4*Math.floor(t.inChannels/4),l=t.inChannels%4;this.userCode="\n      const ivec2 strides = ivec2("+r+", "+i+");\n      const ivec2 pads = ivec2("+e+", "+n+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+s+"; wR++) {\n          int xR = xRCorner + wR * "+a+";\n\n          if (xR < 0 || xR >= "+t.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+u+"; wC++) {\n            int xC = xCCorner + wC * "+o+";\n\n            if (xC < 0 || xC >= "+t.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+c+"; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if ("+(1===l)+") {\n              dotProd +=\n                getX(batch, xR, xC, "+c+") *\n                getW(wR, wC, "+c+", d2);\n            } else if ("+(2===l)+") {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, "+c+"),\n                getX(batch, xR, xC, "+c+" + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, "+c+", d2),\n                getW(wR, wC, "+c+" + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if ("+(3===l)+") {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, "+c+"),\n                getX(batch, xR, xC, "+c+" + 1),\n                getX(batch, xR, xC, "+c+" + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, "+c+", d2),\n                getW(wR, wC, "+c+" + 1, d2),\n                getW(wR, wC, "+c+" + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Tn=function(t){this.variableNames=["x","W"],this.outputShape=t.outShape;var e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,a=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,f=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+i+", "+a+", "+o+");\n      const ivec3 pads = ivec3("+e+", "+n+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+l+"; wF++) {\n          int xF = xFCorner + wF * "+s+";\n\n          if (xF < 0 || xF >= "+t.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+f+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+t.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+h+"; wC++) {\n              int xC = xCCorner + wC * "+c+";\n\n              if (xC < 0 || xC >= "+t.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+p+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===d)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+p+") *\n                  getW(wF, wR, wC, "+p+", d2);\n              } else if ("+(2===d)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===d)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1),\n                  getX(batch, xF, xR, xC, "+p+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2),\n                  getW(wF, wR, wC, "+p+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Rn=function(t){this.variableNames=["x","W"],this.outputShape=t.outShape;var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,f=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 strides = ivec2("+a+", "+o+");\n      const ivec2 pads = ivec2("+r+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+f+";\n        int q = d2 - d1 * "+f+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+c+"; wR++) {\n          int xR = xRCorner + wR * "+s+";\n\n          if (xR < 0 || xR >= "+e+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+l+"; wC++) {\n            int xC = xCCorner + wC * "+u+";\n\n            if (xC < 0 || xC >= "+n+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Dn=function(t){this.variableNames=["x","W"],this.usesPackedTextures=!0,this.outputShape=t.outShape;for(var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,s=t.filterHeight,u=t.filterWidth,c=Math.ceil((u+1)/2),l="int xR; int xC;",f=0;f<s;f++){for(var h=-i;h<2*c;h++)l+="vec4 "+Mn(f,h)+" = vec4(0.);";for(h=0;h<u;h++)l+="\n          vec4 wR"+f+"C"+h+" = vec4(0.);\n          vec4 xR"+f+"C"+h+" = vec4(0.);"}for(f=0;f<s;f++)for(h=0;h<c;h++){var p=2*h,d=2*h+i;l+="\n          xR = xRCorner + "+f+";\n          xC = xCCorner + "+d+";\n\n          if(xR >= 0 && xR < "+e+" && xC >= 0 && xC < "+n+") {\n            "+Mn(f,d)+" = getX(batch, xR, xC, d1);\n          }",0===i?p<u&&h===c-1&&(o>1&&(l+="\n                vec4 "+Mn(f,d+2)+" = vec4(0.);\n\n                if(xR >= 0 && xR < "+e+" && xC + 2 < "+n+") {\n                  "+Mn(f,d+2)+" = getX(batch, xR, xC + 2, d1);\n                }"),l+="\n              xR"+f+"C"+d+" = "+jn(f,d,o,i)+";\n            "):0===h&&(l+="\n            if(xR >= 0 && xR < "+e+" && xC - 2 >= 0) {\n              "+Mn(f,d-2)+" = getX(batch, xR, xC - 2, d1);\n            }"),p>0&&(l+="xR"+f+"C"+(d-2)+" =\n            "+jn(f,d-2,o,i)+";"),d-1>=0&&d-1<u&&(l+="xR"+f+"C"+(d-1)+" =\n              "+jn(f,d-1,o,i)+";"),p<u&&(l+="\n            vec4 wTexel"+f+"C"+p+" = getW("+f+", "+p+", d1, q);\n            wR"+f+"C"+p+" = vec4(wTexel"+f+"C"+p+".xz, wTexel"+f+"C"+p+".xz);\n          ",p+1<u&&(l+="\n              vec4 wTexelR"+f+"C"+(p+1)+" = getW("+f+", "+(p+1)+", d1, q);\n              wR"+f+"C"+(p+1)+" =\n                vec4(wTexelR"+f+"C"+(p+1)+".xz, wTexelR"+f+"C"+(p+1)+".xz);"))}for(f=0;f<s;f++)for(h=0;h<u;h++)l+="result += xR"+f+"C"+h+" * wR"+f+"C"+h+";";this.userCode="\n      const ivec2 strides = ivec2("+a+", "+o+");\n      const ivec2 pads = ivec2("+r+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 result = vec4(0.);\n\n        "+l+"\n\n        setOutput(result);\n      }\n    "};function Mn(t,e){return"xTexelR"+t+"C"+(e<0?"minus"+Math.abs(e).toString():e)}function jn(t,e,n,r){return 1===n?r%2==e%2?Mn(t,e):"vec4("+Mn(t,e-1)+".zw, "+Mn(t,e+1)+".xy)":r%2==e%2?"vec4("+Mn(t,e)+".xy, "+Mn(t,e+2)+".xy)":"vec4("+Mn(t,e-1)+".zw, "+Mn(t,e+1)+".zw)"}var Bn,Ln,zn=function(t,e,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var a=t[0],o=t[1],s=t[2],u=t[3],c=e[0],l=n[0],f=n[1];this.outputShape=[c,l,f,u];var h="bilinear"===r?1:0,p=[o-1+".0",s-1+".0"],d=p[0],m=p[1],g=l>1?[""+(o-1)/(l-1),"(y2-y1) * height_ratio","y1*"+d+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+d],y=g[0],v=g[1],b=g[2],w=f>1?[""+(s-1)/(f-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],_=w[0],x=w[1],E=w[2];this.userCode="\n      const float height_ratio = float("+y+");\n      const float width_ratio = float("+_+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+a+") {\n          return;\n        }\n\n        float height_scale = "+v+";\n        float width_scale = "+x+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+d+" ) {\n          setOutput(float("+i+"));\n          return;\n        }\n        float in_x = "+E+";\n        if( in_x < 0.0 || in_x > "+m+" ) {\n          setOutput(float("+i+"));\n          return;\n        }\n\n        vec2 sourceFracIndexRC = vec2(in_y,in_x);\n        if("+h+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n          ivec2 sourceCeilRC = ivec2(ceil(sourceFracIndexRC));\n\n          float topLeft = getImage(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          float bottomLeft = getImage(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          float topRight = getImage(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          float bottomRight = getImage(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n          float top = topLeft + (topRight - topLeft) * fracRC.y;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          float newValue = top + (bottom - top) * fracRC.x;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestRC = ivec2(floor(\n            sourceFracIndexRC + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestRC.x, sourceNearestRC.y, d);\n          setOutput(newValue);\n        }\n      }\n    "};function Fn(){var t,e,n,r,i,a,o,s;return 2===Lt.get("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",i="texture",a="outputColor",o="out vec4 outputColor;",s="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",i="texture2D",a="gl_FragColor",o="",s="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:i,output:a,defineOutput:o,defineRound:s}}function Un(t,e,n){void 0===n&&(n="index");var r=K(e);return r.map(function(e,i){return"int "+t[i]+" = "+n+" / "+e+"; "+(i===r.length-1?"int "+t[i+1]+" = "+n+" - "+t[i]+" * "+e:"index -= "+t[i]+" * "+e)+";"}).join("")}function Vn(t){return 1===t.length?""+t[0]:"vec"+t.length+"("+t.join(",")+")"}function Wn(t,e){return[e,t]}function qn(t,e){return t*e}function $n(t,e,n){var r=function(t,e){if(t%e!=0)throw new Error("unpackedSize ("+t+") must be a multiple of "+e);return t/e}(t.length,n);if(e.length<r)throw new Error("matrix length ("+e.length+") must be >= "+r);for(var i=0,a=0;a<t.length;a+=n)e[i++]=t[a]}function Hn(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Kn(t,e){var n=Hn(t,e);return n[0]*n[1]*4}function Gn(t,e,n,r,i){var a=n*r;if(i.length<a)throw new Error("matrix length ("+i.length+") must be >= "+a);for(var o=r%2==1,s=n%2==1,u=Math.floor(r/2),c=Math.floor(n/2),l=Math.ceil(r/2),f=l*Math.ceil(n/2),h=g(n)*g(r),p=0;p<e;p++){for(var d=p*n*r,m=p*h,y=o?4:0,v=r+(o?1:0),b=m,w=d,_=d+r,x=0;x<c;++x){for(var E=0;E<u;++E)i[w++]=t[b++],i[w++]=t[b++],i[_++]=t[b++],i[_++]=t[b++];b+=y,w+=v,_+=v}if(o){b=m+4*(l-1);var S=d+r-1;for(y=4*l,v=2*r,x=0;x<c;++x)i[S]=t[b],i[S+r]=t[b+2],b+=y,S+=v}if(s){for(b=m+4*(f-l),S=d+(n-1)*r,E=0;E<u;++E)i[S++]=t[b++],i[S++]=t[b++],b+=2;o&&(i[d+n*r-1]=t[b])}}return i}function Xn(t,e,n,r){var i=[];t.forEach(function(t){var e=E(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?i.push("uniform float "+t.name+(e>1?"["+e+"]":"")+";"):(i.push("uniform sampler2D "+t.name+";"),i.push("uniform int offset"+t.name+";"))});var a,o,s=i.join("\n"),u=t.map(function(t){return function(t,e,n){void 0===n&&(n=!1);var r="";r+=n?Jn(t):Yn(t);var i=t.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(n?0===fe(i,a).length&&(r+=function(t,e){var n=t.name,r="get"+(n.charAt(0).toUpperCase()+n.slice(1))+"AtOutCoords",i=e.texShape,a=Hn(i[1],i[0]).slice(),o=t.shapeInfo.logicalShape,s=e.logicalShape,u=fe(o,s),c=o.length,l=s.length;if(u.length)throw Error("Packed broadcast sampling is not implemented yet.");var f=t.shapeInfo.texShape,h=Hn(f[1],f[0]).slice(),p=Fn();if(S(f,i)&&E(o)===E(s))return"\n      vec4 "+r+"() {\n        return "+p.texture2D+"("+n+", resultUV);\n      }\n    ";var d="return "+p.texture2D+"("+n+", uv)";return 1===c&&l>1?d="\n      vec4 values = "+p.texture2D+"("+n+", uv);\n      return vec4(values.xy, values.xy);\n    ":0===c&&l>0&&(d=1===l?"\n        vec4 values = "+p.texture2D+"("+n+", uv);\n        return vec4(values.x, values.x, 0., 0.);\n      ":"\n        vec4 values = "+p.texture2D+"("+n+", uv);\n        return vec4(values.x);\n      "),"\n  vec4 "+r+"() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2("+a[0]+", "+a[1]+"));\n    int index = resTexRC.x * "+a[1]+" + resTexRC.y;\n\n    int texR = index / "+h[1]+";\n    int texC = index - texR * "+h[1]+";\n    vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+h[1]+", "+h[0]+");\n\n    "+d+";\n  }\n"}(t,e)):r+=function(t,e){var n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),i="get"+r+"AtOutCoords",a=e.texShape,o=t.shapeInfo.texShape;if(!t.shapeInfo.isUniform&&null==t.shapeInfo.flatOffset&&S(o,a))return"\n      float "+i+"() {\n        return sampleTexture("+n+", resultUV);\n      }\n    ";var s=t.shapeInfo.logicalShape.length,u=e.logicalShape.length,c=sr(u),l=fe(t.shapeInfo.logicalShape,e.logicalShape),f=u-s,h=["x","y","z","w","u","v"];return"\n    float "+i+"() {\n      "+c+" coords = getOutputCoords();\n      "+(0===s?"":u<2&&l.length>=1?"coords = 0;":l.map(function(t){return"coords."+h[t+f]+" = 0;"}).join("\n"))+"\n      return get"+r+"("+(u<2&&s>0?"coords":t.shapeInfo.logicalShape.map(function(t,e){return"coords."+h[e+f]}).join(", "))+");\n    }\n  "}(t,e)),r}(t,e,r)}).join("\n"),c=e.texShape,l=Fn(),f=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+t.texture2D+"(textureSampler, uv).r;\n    }\n  "}(l),h=function(t){var e="";return e=Lt.get("PROD")?"\n      bool isNaN(float val) {\n        return false;\n      }\n\n      bool hasNaN(vec4 values) {\n        return false;\n      }\n    ":"\n      bool isNaN(float val) {\n        return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n      }\n\n      bool hasNaN(vec4 values) {\n        return any(bvec4(\n          isNaN(values.x),\n          isNaN(values.y),\n          isNaN(values.z),\n          isNaN(values.w)\n        ));\n      }\n    ",t.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+t.varyingFs+" vec2 resultUV;\n    "+t.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    "+e+"\n\n    float getNaN(vec4 values) {\n      return dot(vec4(1), values);\n    }\n\n    "+t.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+Zn+"\n    "+Qn+"\n    "+tr+"\n    "+er+"\n    "+nr+"\n    "+rr+"\n  "}(l);return e.isPacked?(a=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+n[1]+".0);\n      }\n    ":1===n[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+n[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return resTexRC.x * "+n[1]+" + resTexRC.y;\n    }\n  "}(0,e);case 2:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(S(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+n[0]+", "+n[1]+"));\n      }\n    ";var r=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(t,e);case 3:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),i=r*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      int b = index / "+i+";\n      index -= b * "+i+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  "}(t,e);case 4:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[3]/2),i=r*Math.ceil(t[2]/2),a=i*t[1];return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      int b2 = index / "+a+";\n      index -= b2 * "+a+";\n\n      int b = index / "+i+";\n      index -= b * "+i+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  "}(t,e);default:throw new Error(t.length+"-D packed output coordinate fetching is not yet supported")}}(e.logicalShape,c),o=function(t){return"\n    void setOutput(vec4 val) {\n      "+t.output+" = val;\n    }\n  "}(l)):(a=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){return 1===e[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * "+e[1]+".0);\n      }\n    ":1===e[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * "+e[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+e[0]+", "+e[1]+"));\n      return resTexRC.x * "+e[1]+" + resTexRC.y;\n    }\n  "}(0,e);case 2:return function(t,e){return S(t,e)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+e[0]+", "+e[1]+"));\n      }\n    ":1===t[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+e[0]+", "+e[1]+"));\n        int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":1===t[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+e[0]+", "+e[1]+"));\n        int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+e[0]+", "+e[1]+"));\n      int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n      int r = index / "+t[1]+";\n      int c = index - r * "+t[1]+";\n      return ivec2(r, c);\n    }\n  "}(t,e);case 3:return function(t,e){var n=Un(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+e[0]+", "+e[1]+"));\n      int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n      "+n+"\n      return ivec3(r, c, d);\n    }\n  "}(t,e);case 4:return function(t,e){var n=Un(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+e[0]+", "+e[1]+"));\n      int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n      "+n+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(t,e);case 5:return function(t,e){var n=Un(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+e[0]+",\n                             "+e[1]+"));\n\n      int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(t,e);case 6:return function(t,e){var n=Un(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+e[0]+", "+e[1]+"));\n      int index = resTexRC.x * "+e[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,c),o=function(t){return"\n    void setOutput(float val) {\n      "+t.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(l)),r&&(h+=ir),[h,f,o,s,a,u,n].join("\n")}function Yn(t){var e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float "+n+"() {return "+e+";}";var r=t.shapeInfo.texShape,i=r[0],a=r[1];if(1===i&&1===a)return"\n      float "+n+"() {\n        return sampleTexture("+e+", halfCR);\n      }\n    ";var o=t.shapeInfo.texShape;return"\n    float "+n+"() {\n      vec2 uv = uvFromFlat("+o[0]+", "+o[1]+", "+ar(e)+");\n      return sampleTexture("+e+", uv);\n    }\n  "}(t);case 1:return function(t){var e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float "+n+"(int index) {\n        "+or(t)+"\n      }\n    ";var r=t.shapeInfo.texShape,i=r[0],a=r[1];if(1===a&&1===i)return"\n      float "+n+"(int index) {\n        return sampleTexture("+e+", halfCR);\n      }\n    ";var o=ar(e);return 1===a?"\n      float "+n+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+o+") + 0.5) / "+i+".0);\n        return sampleTexture("+e+", uv);\n      }\n    ":1===i?"\n      float "+n+"(int index) {\n        vec2 uv = vec2((float(index + "+o+") + 0.5) / "+a+".0, 0.5);\n        return sampleTexture("+e+", uv);\n      }\n    ":"\n    float "+n+"(int index) {\n      vec2 uv = uvFromFlat("+i+", "+a+", index + "+o+");\n      return sampleTexture("+e+", uv);\n    }\n  "}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape;if(null!=i&&S(e,i)){var a=i[0];return"\n    float "+r+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+i[1]+".0, "+a+".0);\n      return sampleTexture("+n+", uv);\n    }\n  "}var o=T(e),s=o.newShape,u=o.keptDims,c=s;if(c.length<e.length)return"\n      "+Yn(ur(t,c))+"\n      float "+r+"(int row, int col) {\n        return "+r+"("+cr(["row","col"],u)+");\n      }\n    ";if(t.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+e[1]+", 1)));\n        "+or(t)+"\n      }\n    ";var l=i[0],f=i[1],h=ar(n);return 1===f?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+h+"), vec3("+e[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+l+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":1===l?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+h+"), vec3("+e[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+f+".0, 0.5);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n  float "+r+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+e[1]+" + col + "+h+";\n    vec2 uv = uvFromFlat("+l+", "+f+", index);\n    return sampleTexture("+n+", uv);\n  }\n"}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[1]*e[2],a=e[2],o=T(e),s=o.newShape,u=o.keptDims,c=s;if(c.length<e.length)return"\n        "+Yn(ur(t,c))+"\n        float "+r+"(int row, int col, int depth) {\n          return "+r+"("+cr(["row","col","depth"],u)+");\n        }\n      ";if(t.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+i+", "+a+", 1)));\n        "+or(t)+"\n      }\n    ";var l=t.shapeInfo.texShape,f=l[0],h=l[1],p=t.shapeInfo.flatOffset;return h===i&&null==p?"\n        float "+r+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+a+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+h+".0, "+f+".0);\n          return sampleTexture("+n+", uv);\n        }\n      ":h===a&&null==p?"\n    float "+r+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+e[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+h+".0, "+f+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n      float "+r+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+i+" + col * "+a+" + depth + "+ar(n)+";\n        vec2 uv = uvFromFlat("+f+", "+h+", index);\n        return sampleTexture("+n+", uv);\n      }\n  "}(t);case 4:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[3],a=e[2]*i,o=e[1]*a,s=T(e),u=s.newShape,c=s.keptDims;if(u.length<e.length)return"\n      "+Yn(ur(t,u))+"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        return "+r+"("+cr(["row","col","depth","depth2"],c)+");\n      }\n    ";if(t.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+o+", "+a+", "+i+", 1)));\n        "+or(t)+"\n      }\n    ";var l=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,h=f[0],p=f[1];return p===o&&null==l?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+a+", "+i+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+p+".0, "+h+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":p===i&&null==l?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+e[1]*e[2]+", "+e[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+p+".0, "+h+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+o+" + col * "+a+" +\n          depth * "+i+" + depth2;\n      vec2 uv = uvFromFlat("+h+", "+p+", index + "+ar(n)+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(t);case 5:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e[4],a=e[3]*i,o=e[2]*a,s=e[1]*o,u=T(e),c=u.newShape,l=u.keptDims;if(c.length<e.length)return"\n      "+Yn(ur(t,c))+"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+r+"("+cr(["row","col","depth","depth2","depth3"],l)+");\n      }\n    ";if(t.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+s+", "+o+", "+a+", "+i+")) +\n          depth3;\n        "+or(t)+"\n      }\n    ";var f=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];return d===s&&null==f?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+o+", "+a+", "+i+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+d+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":d===i&&null==f?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+e[1]*e[2]*e[3]+",\n               "+e[2]*e[3]+", "+e[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+d+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+s+" + col * "+o+" + depth * "+a+" +\n          depth2 * "+i+" + depth3 + "+ar(n)+";\n      vec2 uv = uvFromFlat("+p+", "+d+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(t);case 6:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=T(e),a=i.newShape,o=i.keptDims;if(a.length<e.length)return"\n      "+Yn(ur(t,a))+"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+r+"("+cr(["row","col","depth","depth2","depth3","depth4"],o)+");\n      }\n    ";var s=e[5],u=e[4]*s,c=e[3]*u,l=e[2]*c,f=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+f+", "+l+", "+c+", "+u+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+s+", 1)));\n        "+or(t)+"\n      }\n    ";var h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],m=p[1];return m===f&&null==h?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+l+", "+c+", "+u+", "+s+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+m+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":m===s&&null==h?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+e[1]*e[2]*e[3]*e[4]+",\n               "+e[2]*e[3]*e[4]+",\n               "+e[3]*e[4]+",\n               "+e[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+m+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+f+" + col * "+l+" + depth * "+c+" +\n          depth2 * "+u+" + depth3 * "+s+" + depth4 + "+ar(n)+";\n      vec2 uv = uvFromFlat("+d+", "+m+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function Jn(t){var e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var e=t.name;return"\n    vec4 get"+e.charAt(0).toUpperCase()+e.slice(1)+"() {\n      return "+Fn().texture2D+"("+e+", halfCR);\n    }\n  "}(t);case 1:return function(t){var e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Fn();return"\n    vec4 "+n+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+i[0]+", "+i[1]+", index);\n      return "+a.texture2D+"("+e+", uv);\n    }\n  "}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,a=i[0],o=i[1],s=Fn();if(null!=i&&S(e,i))return"\n      vec4 "+r+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+o+".0, "+a+".0);\n\n        return "+s.texture2D+"("+n+", uv);\n      }\n    ";var u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return"\n    vec4 "+r+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+Math.ceil(e[1]/2)+", "+u[0]+", "+u[1]+", row, col);\n      return "+s.texture2D+"("+n+", uv);\n    }\n  "}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===e[0])return"\n        "+Jn(ur(t,e.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+cr(["b","row","col"],[1,2])+");\n        }\n      ";var o=a[0],s=a[1],u=Math.ceil(e[2]/2);return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+o+", "+s+", "+u*Math.ceil(e[1]/2)+", "+u+", b, row, col);\n      return "+Fn().texture2D+"("+n+", uv);\n    }\n  "}(t);case 4:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],s=a[1],u=Math.ceil(e[3]/2),c=u*Math.ceil(e[2]/2);return"\n    vec4 "+r+"(int b2, int b, int row, int col) {\n      vec2 uv = packedUVfrom4D(\n        "+o+", "+s+", "+c*e[1]+",\n        "+c+", "+u+", b2, b, row, col);\n      return "+Fn().texture2D+"("+n+", uv);\n    }\n  "}(t);default:throw new Error("Packed "+e.length+"-D input sampling is not yet supported")}}!function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Bn||(Bn={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ln||(Ln={}));var Zn="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qn="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tr="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",er="\nvec2 packedUVfrom4D(int texNumR, int texNumC, int texelsInBatch2,\n    int texelsInBatch, int texelsInLogicalRow, int b2, int b,\n    int row, int col) {\n  int index = b2 * texelsInBatch2 + b * texelsInBatch +\n    (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nr="\nvec2 UVfrom5D(int texNumR, int texNumC, int stride0,\n    int stride1, int stride2, int stride3, int row, int col, int depth,\n    int depth2, int depth3) {\n  // Explicitly use integer operations as dot() only works on floats.\n  int index = row * stride0 + col * stride1 +\n              depth * stride2 + depth2 * stride3 + depth3;\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rr="\nvec2 UVfrom6D(int texNumR, int texNumC, int stride0,\n    int stride1, int stride2, int stride3, int stride4,\n    int row, int col, int depth, int depth2, int depth3, int depth4) {\n  // Explicitly use integer operations as dot() only works on floats.\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2 *\n    stride3 + depth3 * stride4 + depth4;\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ir="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ar(t){return"offset"+t}function or(t){var e=t.name,n=E(t.shapeInfo.logicalShape);return 1===n?"return "+e+";":"\n    for (int i = 0; i < "+n+"; i++) {\n      if (i == index) {\n        return "+e+"[i];\n      }\n    }\n  "}function sr(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank "+t+" is not yet supported")}function ur(t,e){var n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function cr(t,e){return e.map(function(e){return t[e]}).join(", ")}var lr=function(t,e,n){this.variableNames=["x"],this.outputShape=t;var r=t.length,i=t[t.length-1],a=n?"<":">";this.userCode="\n      int getIndex(int i) {\n        "+(n?"return "+i+" -i - 1;":"return i;")+"\n      }\n\n      void main() {\n        "+sr(r)+" coords = getOutputCoords();\n        int end = "+fr(r,"coords")+";\n        float val = 0.0;\n        for (int i = "+i+" - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx "+a+" end) {\n            continue;\n          }\n          if (idx == end && "+e+") {\n            continue;\n          }\n          "+fr(r,"coords")+" = idx;\n          val += getX("+function(t,e){if(1===t)return""+e;if(2===t)return e+".x, "+e+".y";if(3===t)return e+".x, "+e+".y, "+e+".z";if(4===t)return e+".x, "+e+".y, "+e+".z, "+e+".w";throw Error("Cumulative sum for rank "+t+" is not yet supported")}(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "};function fr(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error("Cumulative sum for rank "+t+" is not yet supported")}var hr=function(){function t(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+e+";\n      int offset_h = imod(h, "+e+");\n      int in_w = w / "+e+";\n      int offset_w = imod(w, "+e+");\n      int offset_d = (offset_h * "+e+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return t.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},t.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},t.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},t.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},t.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},t}(),pr=function(t){this.variableNames=["A"];var e=Fn();this.outputShape=t,this.userCode="\n      const float FLOAT_MAX = 1.70141184e38;\n      const float FLOAT_MIN = 1.17549435e-38;\n\n      lowp vec4 encode_float(highp float v) {\n        if (isNaN(v)) {\n          return vec4(255, 255, 255, 255);\n        }\n\n        highp float av = abs(v);\n\n        if(av < FLOAT_MIN) {\n          return vec4(0.0, 0.0, 0.0, 0.0);\n        } else if(v > FLOAT_MAX) {\n          return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n        } else if(v < -FLOAT_MAX) {\n          return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n        }\n\n        highp vec4 c = vec4(0,0,0,0);\n\n        highp float e = floor(log2(av));\n        highp float m = exp2(fract(log2(av))) - 1.0;\n\n        c[2] = floor(128.0 * m);\n        m -= c[2] / 128.0;\n        c[1] = floor(32768.0 * m);\n        m -= c[1] / 32768.0;\n        c[0] = floor(8388608.0 * m);\n\n        highp float ebias = e + 127.0;\n        c[3] = floor(ebias / 2.0);\n        ebias -= c[3] * 2.0;\n        c[2] += floor(ebias) * 128.0;\n\n        c[3] += 128.0 * step(0.0, -v);\n\n        return c / 255.0;\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+e.output+" = encode_float(x);\n      }\n    "},dr="return real * expR - imag * expI;",mr="return real * expI + imag * expR;",gr=function(t,e,n){this.variableNames=["real","imag"];var r=e[1];this.outputShape=e;var i=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";this.userCode="\n      const float exponentMultiplier = "+i+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+t+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+a+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "},yr=function(t){this.variableNames=["A"];var e=Fn(),n=t[0],r=t[1];this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+n+".0);\n\n        vec4 values = "+e.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},vr=function(t,e,n){this.variableNames=["A","indices"];var r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;var i=sr(this.rank),a=function(t,e){var n=t.length;if(n>4)throw Error("Gather for rank "+n+" is not yet supported");if(1===n)return"int(getIndices(resRC))";for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=0;a<t.length;a++)a===e?i.push("int(getIndices("+r[a]+"))"):i.push(""+r[a]);return i.join()}(t,n);this.userCode="\n      void main() {\n        "+i+" resRC = getOutputCoords();\n        setOutput(getA("+a+"));\n      }\n    "};var br=function(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;var r=sr(e.length),i=sr(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+i+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+a+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};function wr(t,e){var n=e();return Er(t),n}var _r=!1;function xr(t){_r=t}function Er(t){if(_r){var e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+Or(t,e))}}var Sr=5.96e-8,Nr=65504;function Ir(t){return!!(Lt.get("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||Sr<Math.abs(t)&&Math.abs(t)<Nr)}function Or(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function kr(t,e){return Yr(t,function(){return t.getExtension(e)},'Extension "'+e+'" not supported on this browser.')}function Ar(t,e){var n=Yr(t,function(){return t.createShader(t.VERTEX_SHADER)},"Unable to create vertex WebGLShader.");if(wr(t,function(){return t.shaderSource(n,e)}),wr(t,function(){return t.compileShader(n)}),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Cr(t,e){var n=Yr(t,function(){return t.createShader(t.FRAGMENT_SHADER)},"Unable to create fragment WebGLShader.");if(wr(t,function(){return t.shaderSource(n,e)}),wr(t,function(){return t.compileShader(n)}),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){var n=Pr.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);for(var r=+n[1],i=t.split("\n"),a=i.length.toString().length+2,o=i.map(function(t,e){return k((e+1).toString(),a)+t}),s=0,u=0;u<o.length;u++)s=Math.max(o[u].length,s);var c=o.slice(0,r-1),l=o.slice(r-1,r),f=o.slice(r);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+k(l[0],s),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(f.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var Pr=/ERROR: [0-9]+:([0-9]+):/g;function Tr(t){return Yr(t,function(){return t.createProgram()},"Unable to create WebGLProgram.")}function Rr(t,e){if(wr(t,function(){return t.linkProgram(e)}),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Dr(t,e){if(wr(t,function(){return t.validateProgram(e)}),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Mr(t,e){var n=Yr(t,function(){return t.createBuffer()},"Unable to create WebGLBuffer");return wr(t,function(){return t.bindBuffer(t.ARRAY_BUFFER,n)}),wr(t,function(){return t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)}),n}function jr(t,e){var n=Yr(t,function(){return t.createBuffer()},"Unable to create WebGLBuffer");return wr(t,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)}),wr(t,function(){return t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)}),n}function Br(){return 2===Lt.get("WEBGL_VERSION")?1:4}function Lr(t){return Yr(t,function(){return t.createTexture()},"Unable to create WebGLTexture.")}function zr(t,e){var n=Lt.get("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){var r="["+t+"x"+e+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(t>n||e>n)throw r="["+t+"x"+e+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU ["+n+"x"+n+"].")}function Fr(t){return Yr(t,function(){return t.createFramebuffer()},"Unable to create WebGLFramebuffer.")}function Ur(t,e,n,r,i,a,o){var s=t.getAttribLocation(e,n);return-1!==s&&(wr(t,function(){return t.bindBuffer(t.ARRAY_BUFFER,r)}),wr(t,function(){return t.vertexAttribPointer(s,i,t.FLOAT,!1,a,o)}),wr(t,function(){return t.enableVertexAttribArray(s)}),!0)}function Vr(t,e,n){Jr(t,n),wr(t,function(){return t.activeTexture(t.TEXTURE0+n)}),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,e)})}function Wr(t,e,n){return Yr(t,function(){return t.getUniformLocation(e,n)},'uniform "'+n+'" not present in program.')}function qr(t,e,n){return t.getUniformLocation(e,n)}function $r(t,e,n,r,i){wr(t,function(){return Vr(t,n,i)}),wr(t,function(){return t.uniform1i(r,i)})}function Hr(t,e,n){wr(t,function(){return t.bindFramebuffer(t.FRAMEBUFFER,n)}),wr(t,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)})}function Kr(t,e){wr(t,function(){return t.bindFramebuffer(t.FRAMEBUFFER,e)}),wr(t,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)})}function Gr(t){var e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Xr(t,e))}function Xr(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function Yr(t,e,n){var r=wr(t,function(){return e()});if(null==r)throw new Error(n);return r}function Jr(t,e){var n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error("textureUnit must be in [gl.TEXTURE0, gl.TEXTURE"+n+"].")}function Zr(t,e){return void 0===e&&(e=2),E(t.slice(0,t.length-e))}function Qr(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function ti(t,e){var n;void 0===e&&(e=!1);var r=Lt.get("WEBGL_MAX_TEXTURE_SIZE");if(e&&(r*=2,1===(t=t.map(function(e,n){return n>=t.length-2?g(t[n]):t[n]})).length&&(t=[2,t[0]])),2!==t.length){var i=T(t);t=i.newShape}var a=E(t);if(t.length<=1&&a<=r)return[1,a];if(2===t.length&&t[0]<=r&&t[1]<=r)return t;if(3===t.length&&t[0]*t[1]<=r&&t[2]<=r)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=r&&t[1]*t[2]<=r)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=r&&t[3]<=r)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=r&&t[1]*t[2]*t[3]<=r)return[t[0],t[1]*t[2]*t[3]];if(e){var o=Zr(t),s=2,u=2;return t.length&&(s=(n=Qr(t))[0],u=n[1]),O(a=o*(s/2)*(u/2)).map(function(t){return 2*t})}return O(a)}function ei(t){return t%2==0}function ni(t,e){if(S(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){var n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(ei(n)&&ei(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&ei(t[0])&&ei(e[0])}var ri=Object.freeze({callAndCheck:wr,enableDebugWebGLErrorChecking:xr,checkWebGLError:Er,canBeRepresented:Ir,getWebGLErrorMessage:Or,getExtensionOrThrow:kr,createVertexShader:Ar,createFragmentShader:Cr,createProgram:Tr,linkProgram:Rr,validateProgram:Dr,createStaticVertexBuffer:Mr,createStaticIndexBuffer:jr,getNumChannels:Br,createTexture:Lr,validateTextureSize:zr,createFramebuffer:Fr,bindVertexBufferToProgramAttribute:Ur,bindTextureUnit:Vr,unbindTextureUnit:function(t,e){Jr(t,e),wr(t,function(){return t.activeTexture(t.TEXTURE0+e)}),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,null)})},getProgramUniformLocationOrThrow:Wr,getProgramUniformLocation:qr,bindTextureToProgramUniformSampler:$r,bindCanvasToFramebuffer:function(t){wr(t,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),wr(t,function(){return t.viewport(0,0,t.canvas.width,t.canvas.height)}),wr(t,function(){return t.scissor(0,0,t.canvas.width,t.canvas.height)})},bindColorTextureToFramebuffer:Hr,unbindColorTextureFromFramebuffer:Kr,validateFramebuffer:Gr,getFramebufferErrorMessage:Xr,getBatchDim:Zr,getRowsCols:Qr,getTextureShapeFromLogicalShape:ti,isReshapeFree:ni});function ii(t){var e=Fn();return Ar(t,e.version+"\n    precision highp float;\n    "+e.attribute+" vec3 clipSpacePos;\n    "+e.attribute+" vec2 uv;\n    "+e.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function ai(t){return Mr(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function oi(t){return jr(t,new Uint16Array([0,1,2,2,1,3]))}function si(t,e){var n,r,i,a,o,s,u,c=t;return 2===Lt.get("WEBGL_VERSION")?(n=c.R32F,r=c.R16F,i=c.RGBA32F,a=c.RED,o=4,s=1,u=c.HALF_FLOAT):(n=t.RGBA,r=t.RGBA,i=c.RGBA,a=t.RGBA,o=4,s=4,u=null!=e?e.HALF_FLOAT_OES:null),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:t.RGBA,downloadUnpackNumChannels:o,defaultNumChannels:s,textureTypeHalfFloat:u}}function ui(t,e,n,r,i,a){zr(e,n);var o=Lr(t),s=t.TEXTURE_2D;return wr(t,function(){return t.bindTexture(s,o)}),wr(t,function(){return t.texParameteri(s,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)}),wr(t,function(){return t.texParameteri(s,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)}),wr(t,function(){return t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST)}),wr(t,function(){return t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST)}),wr(t,function(){return t.texImage2D(s,0,r,e,n,0,i,a,null)}),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,null)}),o}function ci(t,e,n,r){var i=Wn(e,n);return ui(t,i[0],i[1],r.internalFormatFloat,r.textureFormatFloat,t.FLOAT)}function li(t,e,n,r){var i=Wn(e,n);return ui(t,i[0],i[1],r.internalFormatFloat,r.textureFormatFloat,r.textureTypeHalfFloat)}function fi(t,e,n,r){var i=Wn(e,n);return ui(t,i[0],i[1],t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}function hi(t,e,n,r){var i=Hn(e,n);return ui(t,i[0],i[1],r.internalFormatPackedFloat,t.RGBA,t.FLOAT)}function pi(t,e,n,r){var i=Hn(e,n);return ui(t,i[0],i[1],r.internalFormatHalfFloat,t.RGBA,r.textureTypeHalfFloat)}function di(t,e,n){return wr(t,function(){return t.bindBuffer(t.ARRAY_BUFFER,n)}),Ur(t,e,"clipSpacePos",n,3,20,0)&&Ur(t,e,"uv",n,2,20,12)}function mi(t,e,n){wr(t,function(){return t.bindTexture(t.TEXTURE_2D,e)}),wr(t,function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)}),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function gi(t,e,n,r,i,a){zr(n,r),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,e)}),wr(t,function(){return t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,a,t.FLOAT,i)}),wr(t,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function yi(t,e,n,r,i,a,o){var s,u=Wn(n,r),c=u[0],l=u[1];1===o.defaultNumChannels?s=i:function(t,e,n){var r=qn(t.length,n);if(e.length<r)throw new Error("unpackedArray length ("+e.length+") must be >= "+r);for(var i=0,a=0;a<t.length;++a)e[i]=t[a],i+=n}(i,s=new Float32Array(qn(i.length,a)),a),gi(t,e,c,l,s,o.textureFormatFloat)}function vi(t,e,n,r,i,a,o,s,u){var c=Hn(a,o),l=c[0],f=c[1],h=new Float32Array(Kn(a,o));(function(t,e,n,r,i){for(var a=r%2==1,o=n%2==1,s=Math.floor(r/2),u=Math.floor(n/2),c=Math.ceil(r/2),l=c*Math.ceil(n/2),f=g(n)*g(r),h=0;h<e;h++){for(var p=h*n*r,d=h*f,m=a?4:0,y=r,v=d,b=0;b<u;++b){for(var w=2*b*r,_=0;_<s;++_){var x=p+w+2*_;i[v]=t[x],i[v+1]=t[x+1],i[v+2]=t[x+y],i[v+3]=t[x+y+1],v+=4}v+=m}if(a){x=p+r-1,v=d+4*(c-1);var E=2*r;for(m=4*c,b=0;b<u;++b)i[v]=t[x],i[v+2]=t[x+r],x+=E,v+=m}if(o){for(x=p+(n-1)*r,v=d+4*(l-c),_=0;_<s;++_)i[v++]=t[x++],i[v++]=t[x++],v+=2;a&&o&&(i[d+f-4]=t[x])}}})(s,n,r,i,h),gi(t,e,l,f,h,t.RGBA)}function bi(t,e,n,r,i){var a=e;if(2===Lt.get("WEBGL_VERSION")){var o=t,s=o.createBuffer();wr(t,function(){return t.bindBuffer(o.PIXEL_PACK_BUFFER,s)});var u=4*qn(n*r,i.downloadUnpackNumChannels);wr(t,function(){return t.bufferData(o.PIXEL_PACK_BUFFER,u,o.STREAM_READ)}),wr(t,function(){return o.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)}),wr(t,function(){return t.bindBuffer(o.PIXEL_PACK_BUFFER,null)}),a=s}return a}function wi(t,e,n,r,i){var a=t,o=new Float32Array(qn(n*r,i.downloadUnpackNumChannels));a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,o),a.bindBuffer(a.PIXEL_PACK_BUFFER,null);var s=new Float32Array(n*r);return $n(o,s,i.downloadUnpackNumChannels),s}function _i(t,e,n,r){var i=Wn(e,n),a=i[0],o=i[1],s=new Float32Array(qn(e*n,r.downloadUnpackNumChannels));wr(t,function(){return t.readPixels(0,0,a,o,r.downloadTextureFormat,t.FLOAT,s)});var u=new Float32Array(e*n);return $n(s,u,r.downloadUnpackNumChannels),u}function xi(t,e,n,r){var i=Wn(e,n),a=i[0],o=i[1],s=new Uint8Array(qn(e*n,4));return wr(t,function(){return t.readPixels(0,0,a,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,s)}),new Float32Array(s.buffer)}function Ei(t,e,n,r,i,a,o,s){var u=t,c=new Float32Array(Kn(a,o));u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null);var l=new Float32Array(E([n,r,i]));return Gn(c,n,r,i,l),l}function Si(t,e,n,r,i,a,o){var s=Hn(i,a),u=s[0],c=s[1],l=new Float32Array(Kn(i,a));wr(t,function(){return t.readPixels(0,0,u,c,t.RGBA,t.FLOAT,l)});var f=new Float32Array(E([e,n,r]));return Gn(l,e,n,r,f)}var Ni=Object.freeze({createVertexShader:ii,createVertexBuffer:ai,createIndexBuffer:oi,getTextureConfig:si,createFloat32MatrixTexture:ci,createFloat16MatrixTexture:li,createUnsignedBytesMatrixTexture:fi,createPackedMatrixTexture:hi,createFloat16PackedMatrixTexture:pi,bindVertexProgramAttributeStreams:di,uploadPixelDataToTexture:mi,uploadMatrixToTexture:yi,uploadMatrixToPackedTexture:vi,maybeCreateBufferFromOutputTexture:bi,downloadFloat32MatrixFromBuffer:wi,downloadFloat32MatrixFromOutputTexture:_i,downloadByteEncodedFloatMatrixFromOutputTexture:xi,downloadPackedMatrixFromBuffer:Ei,downloadMatrixFromPackedOutputTexture:Si}),Ii=function(){function t(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.autoDebugValidate=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[],this.gl=null!=t?t:p(Lt.get("WEBGL_VERSION")),1===Lt.get("WEBGL_VERSION")?(this.textureFloatExtension=kr(this.gl,"OES_texture_float"),this.colorBufferFloatExtension=this.gl.getExtension("WEBGL_color_buffer_float"),Lt.get("WEBGL_RENDER_FLOAT32_ENABLED")||(this.textureHalfFloatExtension=kr(this.gl,"OES_texture_half_float"),this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float"))):this.colorBufferFloatExtension=kr(this.gl,"EXT_color_buffer_float"),this.vertexBuffer=ai(this.gl),this.indexBuffer=oi(this.gl),this.framebuffer=Fr(this.gl),this.textureConfig=si(this.gl,this.textureHalfFloatExtension)}return t.prototype.dispose=function(){var t=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var e=this.gl;wr(e,function(){return e.finish()}),wr(e,function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)}),wr(e,function(){return e.deleteFramebuffer(t.framebuffer)}),wr(e,function(){return e.bindBuffer(e.ARRAY_BUFFER,null)}),wr(e,function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)}),wr(e,function(){return e.deleteBuffer(t.indexBuffer)}),this.disposed=!0}},t.prototype.enableAutomaticDebugValidation=function(t){this.autoDebugValidate=t,xr(t)},t.prototype.createFloat32MatrixTexture=function(t,e){return this.throwIfDisposed(),ci(this.gl,t,e,this.textureConfig)},t.prototype.createFloat16MatrixTexture=function(t,e){return this.throwIfDisposed(),li(this.gl,t,e,this.textureConfig)},t.prototype.createUnsignedBytesMatrixTexture=function(t,e){return this.throwIfDisposed(),fi(this.gl,t,e,this.textureConfig)},t.prototype.uploadPixelDataToTexture=function(t,e){this.throwIfDisposed(),mi(this.gl,t,e)},t.prototype.createFloat16PackedMatrixTexture=function(t,e){return this.throwIfDisposed(),pi(this.gl,t,e,this.textureConfig)},t.prototype.createPackedMatrixTexture=function(t,e){return this.throwIfDisposed(),hi(this.gl,t,e,this.textureConfig)},t.prototype.deleteMatrixTexture=function(t){var e=this;this.throwIfDisposed(),this.outputTexture===t&&(Kr(this.gl,this.framebuffer),this.outputTexture=null),wr(this.gl,function(){return e.gl.deleteTexture(t)})},t.prototype.uploadMatrixToTexture=function(t,e,n,r){this.throwIfDisposed();var i=Br();return yi(this.gl,t,e,n,r,i,this.textureConfig)},t.prototype.uploadMatrixToPackedTexture=function(t,e,n,r,i,a,o){return this.throwIfDisposed(),vi(this.gl,t,e,n,r,i,a,o,this.textureConfig)},t.prototype.downloadFloat32MatrixFromOutputTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return _i(r.gl,e,n,r.textureConfig)})},t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return xi(r.gl,e,n,r.textureConfig)})},t.prototype.downloadPackedMatrixFromBuffer=function(t,e,n,r,i,a){return Ei(this.gl,t,e,n,r,i,a,this.textureConfig)},t.prototype.downloadFloat32MatrixFromBuffer=function(t,e,n){return wi(this.gl,t,e,n,this.textureConfig)},t.prototype.maybeCreateBufferFromTexture=function(t,e,n){this.bindTextureToFrameBuffer(t);var r=bi(this.gl,t,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},t.prototype.createAndWaitForFence=function(){var t=this.createFence(this.gl);return this.pollFence(t)},t.prototype.createFence=function(t){var e,n,r=this;if(Lt.get("WEBGL_FENCE_API_ENABLED")){var i=t,a=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=function(){var t=i.clientWaitSync(a,0,0);return t===i.ALREADY_SIGNALED||t===i.CONDITION_SATISFIED},e=a}else Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(e,Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):n=function(){return!0};return{query:e,isFencePassed:n}},t.prototype.downloadMatrixFromPackedTexture=function(t,e,n,r,i,a){var o=this;return this.downloadMatrixDriver(t,function(){return Si(o.gl,e,n,r,i,a,o.textureConfig)})},t.prototype.createProgram=function(t){this.throwIfDisposed();var e=this.gl,n=Cr(e,t),r=ii(e),i=Tr(e);return wr(e,function(){return e.attachShader(i,r)}),wr(e,function(){return e.attachShader(i,n)}),Rr(e,i),this.autoDebugValidate&&Dr(e,i),this.vertexAttrsAreBound||(this.setProgram(i),this.vertexAttrsAreBound=di(e,this.program,this.vertexBuffer)),i},t.prototype.deleteProgram=function(t){var e=this;this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&wr(this.gl,function(){return e.gl.deleteProgram(t)})},t.prototype.setProgram=function(t){var e=this;this.throwIfDisposed(),this.program=t,null!=this.program&&this.autoDebugValidate&&Dr(this.gl,this.program),wr(this.gl,function(){return e.gl.useProgram(t)})},t.prototype.getUniformLocation=function(t,e,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?Wr(this.gl,t,e):qr(this.gl,t,e)},t.prototype.getAttributeLocation=function(t,e){var n=this;return this.throwIfDisposed(),wr(this.gl,function(){return n.gl.getAttribLocation(t,e)})},t.prototype.getUniformLocationNoThrow=function(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)},t.prototype.setInputMatrixTexture=function(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),$r(this.gl,this.program,t,e,n)},t.prototype.setOutputMatrixTexture=function(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)},t.prototype.setOutputPackedMatrixTexture=function(t,e,n){this.throwIfDisposed();var r=Hn(e,n),i=r[0],a=r[1];this.setOutputMatrixTextureDriver(t,i,a)},t.prototype.setOutputMatrixWriteRegion=function(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)},t.prototype.setOutputPackedMatrixWriteRegion=function(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},t.prototype.debugValidate=function(){null!=this.program&&Dr(this.gl,this.program),Gr(this.gl)},t.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var t=this.gl;this.autoDebugValidate&&this.debugValidate(),wr(t,function(){return t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)})},t.prototype.blockUntilAllProgramsCompleted=function(){var t=this;this.throwIfDisposed(),wr(this.gl,function(){return t.gl.finish()})},t.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=kr(this.gl,2===Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},t.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},t.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},t.prototype.beginQuery=function(){if(2===Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),i=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,i),i},t.prototype.endQuery=function(){if(2!==Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}else{var e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT)}},t.prototype.waitForQueryAndGetTime=function(t){return c(this,void 0,void 0,function(){var e=this;return l(this,function(n){switch(n.label){case 0:return[4,A(function(){return e.disposed||e.isQueryAvailable(t,Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})];case 1:return n.sent(),[2,this.getQueryTime(t,Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}})})},t.prototype.getQueryTime=function(t,e){if(0===e)return null;if(2===e){var n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6},t.prototype.isQueryAvailable=function(t,e){if(0===e)return!0;if(2===e){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}return i=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint},t.prototype.pollFence=function(t){var e=this;return new Promise(function(n){e.addItemToPoll(function(){return t.isFencePassed()},function(){return n()})})},t.prototype.pollItems=function(){for(var t=function(t){for(var e=0,n=t.length-1,r=-1;e<=n;){var i=e+n>>1;t[i]()?(r=i,e=i+1):n=i-1}return r}(this.itemsToPoll.map(function(t){return t.isDoneFn})),e=0;e<=t;++e)(0,this.itemsToPoll[e].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(t+1)},t.prototype.addItemToPoll=function(t,e){var n=this;this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||A(function(){return n.pollItems(),0===n.itemsToPoll.length})},t.prototype.bindTextureToFrameBuffer=function(t){this.throwIfDisposed(),Hr(this.gl,t,this.framebuffer),this.autoDebugValidate&&Gr(this.gl)},t.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(Hr(this.gl,this.outputTexture,this.framebuffer),this.autoDebugValidate&&Gr(this.gl)):Kr(this.gl,this.framebuffer)},t.prototype.downloadMatrixDriver=function(t,e){this.bindTextureToFrameBuffer(t);var n=e();return this.unbindTextureToFrameBuffer(),n},t.prototype.setOutputMatrixTextureDriver=function(t,e,n){this.throwIfDisposed();var r=this.gl;Hr(r,t,this.framebuffer),this.autoDebugValidate&&Gr(r),this.outputTexture=t,wr(r,function(){return r.viewport(0,0,e,n)}),wr(r,function(){return r.scissor(0,0,e,n)})},t.prototype.setOutputMatrixWriteRegionDriver=function(t,e,n,r){var i=this;this.throwIfDisposed(),wr(this.gl,function(){return i.gl.scissor(t,e,n,r)})},t.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},t.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},t}();function Oi(t,e){if(t.length!==e.length)throw Error("Binary was compiled with "+t.length+" inputs, but was executed with "+e.length+" inputs");t.forEach(function(t,n){var r=t.logicalShape,i=e[n],a=i.shape;if(!S(r,a))throw Error("Binary was compiled with different shapes than the current args. Shapes "+r+" and "+a+" must match");if(!t.isUniform||!i.isUniform){var o=t.texShape,s=i.isUniform?null:i.texData.texShape;if(!S(o,s))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+o+" and "+s+" must match")}})}var ki=function(t,e,n){this.variableNames=["A"],this.outputShape=t;var r=n.filterWidth,i=n.inChannels,a=n.strideWidth,o=n.strideHeight,s=n.padInfo,u=n.outWidth,c=n.dilationWidth,l=n.dilationHeight,f=s.left,h=s.top,p=i*r,d=Fn();this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            int blockIndex = rc.y + col;\n            int pos = rc.x + row;\n\n            if(blockIndex >= "+t[1]+" || pos >= "+t[0]+") continue;\n\n            int offsetY = int(blockIndex / ("+u+")) * "+o+" - "+h+";\n            int d0 = offsetY + "+l+" * (pos / "+p+");\n\n            if(d0 >= "+e[0]+" || d0 < 0) continue;\n\n            int offsetX = int(mod(float(blockIndex), "+u+".) * "+a+". - "+f+".);\n            int d1 = offsetX + "+c+" * (int(mod(float(pos), "+p+".) / "+i+".));\n\n            if(d1 >= "+e[1]+" || d1 < 0) continue;\n\n            result[row * 2 + col] = getA(d0, d1, int(mod(float(pos), "+i+".)));\n          }\n        }\n\n        "+d.output+" = result;\n      }\n    "},Ai=function(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[];var a,o=e,s=t[3]-1;this.outputShape=t;var u="float("+n+") + float("+r+") * sum";a=.5===i?"inversesqrt("+u+")":1===i?"1.0/("+u+")":"exp(log("+u+") * float(-"+i+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+o+"; j <= "+o+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+s+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+a+";\n        setOutput(val);\n      }\n    "},Ci=function(t,e,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=i,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+e+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+e+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+n+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+i+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+i+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},Pi=function(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;var e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,a=t.effectiveFilterWidth,o=i-1-t.padInfo.top,s=a-1-t.padInfo.left,u=i*a-1;this.userCode="\n      const ivec2 pads = ivec2("+o+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+i+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+e+".0;\n\n          if (dyR < 0.0 || dyR >= "+t.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+a+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+n+".0;\n\n            if (dyC < 0.0 || dyC >= "+t.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+a+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ti=function(t,e,n,r){void 0===n&&(n=!1),void 0===r&&(r=!1),this.variableNames=["matrixA","matrixB"];var i=t[0],a=n?t[2]:t[1],o=r?e[1]:e[2],s=n?t[1]:t[2];this.outputShape=[i,a,o];var u=function(t,e){return n?"batch, "+e+" + "+t+", aRow":"batch, aRow, "+e+" + "+t},c=function(t,e){return r?"batch, bCol, "+e+" + "+t:"batch, "+e+" + "+t+", bCol"},l=4*Math.floor(s/4),f=s%4;this.userCode=" float dotARowBCol(int batch, int aRow, int bCol) {\n      float result = 0.0;\n      for (int i = 0; i < "+l+"; i += 4) {\n        vec4 a = vec4(\n          getMatrixA("+u(0,"i")+"),\n          getMatrixA("+u(1,"i")+"),\n          getMatrixA("+u(2,"i")+"),\n          getMatrixA("+u(3,"i")+")\n        );\n        vec4 b = vec4(\n          getMatrixB("+c(0,"i")+"),\n          getMatrixB("+c(1,"i")+"),\n          getMatrixB("+c(2,"i")+"),\n          getMatrixB("+c(3,"i")+")\n        );\n\n        result += dot(a, b);\n      }\n\n      if ("+(1===f)+") {\n        result += getMatrixA("+u(0,l)+") *\n          getMatrixB("+c(0,l)+");\n      } else if ("+(2===f)+") {\n        vec2 a = vec2(\n          getMatrixA("+u(0,l)+"),\n          getMatrixA("+u(1,l)+")\n        );\n        vec2 b = vec2(\n          getMatrixB("+c(0,l)+"),\n          getMatrixB("+c(1,l)+")\n        );\n        result += dot(a, b);\n      } else if ("+(3===f)+") {\n        vec3 a = vec3(\n          getMatrixA("+u(0,l)+"),\n          getMatrixA("+u(1,l)+"),\n          getMatrixA("+u(2,l)+")\n        );\n        vec3 b = vec3(\n          getMatrixB("+c(0,l)+"),\n          getMatrixB("+c(1,l)+"),\n          getMatrixB("+c(2,l)+")\n        );\n        result += dot(a, b);\n      }\n\n      return result;\n    }\n\n    void main() {\n      ivec3 resBRC = getOutputCoords();\n      setOutput(dotARowBCol(resBRC.x, resBRC.y, resBRC.z));\n    }\n    "},Ri=function(t,e,n,r,i){void 0===r&&(r=!1),void 0===i&&(i=!1),this.variableNames=["matrixA","matrixB"],this.usesPackedTextures=!0,this.outputShape=n;var a=r?t[0]:t[1],o=Math.ceil(a/2),s=r?"i * 2, rc.x":"rc.x, i * 2",u=i?"rc.y, i * 2":"i * 2, rc.y",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],l=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];this.userCode="\n      const float sharedDimension = "+o+".0;\n\n      vec4 dot2x2ARowBCol(ivec2 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+o+"; i++) {\n          vec4 a = getMatrixA("+s+");\n          vec4 b = getMatrixB("+u+");\n\n          result += ("+c[0]+" * "+l[0]+") + ("+c[1]+" * "+l[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n        setOutput(dot2x2ARowBCol(rc));\n      }\n    "},Di=function(){function t(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(e-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(e-1)+"));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(t){var e=this;return function(n,r){null==e.seedLoc&&(e.seedLoc=n.getUniformLocation(r,"seed")),n.gl.uniform1f(e.seedLoc,t)}},t}(),Mi=function(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+n+"),\n                      float(index == coords.y)));\n      }\n    "};function ji(t,e){return 1===e?[t]:function(t,e){return["x","y","z","w","u","v"].slice(0,e).map(function(e){return t+"."+e})}(t,e)}var Bi=function(t){this.variableNames=["A"],this.isPackShader=!0,this.outputShape=t;var e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=ji("rc",e),r=sr(e),i=function(t,e,n){if(1===t)return"rc > "+e[0];for(var r="",i=t-2;i<t;i++)r+=n[i]+" >= "+e[i],i<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";var i=r.slice(-2);return"\n    int r = "+i[0]+";\n    int c = "+i[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+e+";\n    bool rEdge = rp1 >= "+n+";\n  "}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){var n=t.length,r=function(t,e){for(var n=[],r=0;r<=1;r++)for(var i=0;i<=1;i++){for(var a=(0===r?"r":"rp1")+", "+(0===i?"c":"cp1"),o=2;o<t;o++)a=e[e.length-1-o]+","+a;n.push(a)}return n}(n,e);return 1===n?"getA(rc),\n            rc + 1 >= "+t[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(t,n);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+i+") {\n            setOutput(vec4(0));\n          } else {\n            "+a+"\n\n            setOutput(vec4("+o+"));\n          }\n        }\n      "}};var Li=function(t,e,n){this.variableNames=["x"],this.outputShape=e.map(function(e,n){return e[0]+t[n]+e[1]});var r=t.length,i=sr(r),a=e.map(function(t){return t[0]}).join(","),o=e.map(function(e,n){return e[0]+t[n]}).join(","),s=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+i+" start = "+i+"("+a+");\n      "+i+" end = "+i+"("+o+");\n\n      void main() {\n        "+i+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float("+n+"));\n        } else {\n          "+i+" coords = outC - start;\n          setOutput(getX("+s+"));\n        }\n      }\n    ":"\n        int start = "+a+";\n        int end = "+o+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float("+n+"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "},zi=function(t,e,n){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");var r=t.filterWidth,i=t.strideHeight,a=t.strideWidth,o=t.dilationHeight,s=t.dilationWidth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;var h="avg"===e,p="0.0";if(h||(p="-1.0 / 1e-20"),n)this.userCode="\n        const ivec2 strides = ivec2("+i+", "+a+");\n        const ivec2 pads = ivec2("+l+", "+f+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+o+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+t.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+c+";\n                wC += "+s+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+t.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * "+c+" + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var d=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(d="avgValue / count");var m=4*Math.floor(r/4),g=r%4,y="\n      if ("+h+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+i+", "+a+");\n      const ivec2 pads = ivec2("+l+", "+f+");\n      const float initializationValue = "+p+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+t.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+p+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+u+";\n            wR += "+o+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+t.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+m+"; wC += 4) {\n            int xC = xCCorner + wC * "+s+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+s+", d),\n              getValue(batch, xR, xC + 2 * "+s+", d),\n              getValue(batch, xR, xC + 3 * "+s+", d)\n            );\n\n            "+y+"\n          }\n\n          int xC = xCCorner + "+m+";\n          if ("+(1===g)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+y+"\n          } else if ("+(2===g)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+s+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+y+"\n          } else if ("+(3===g)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+s+", d),\n              getValue(batch, xR, xC + 2 * "+s+", d),\n              initializationValue\n            );\n\n            "+y+"\n          }\n        }\n        setOutput("+d+");\n      }\n    "}},Fi=function(t,e){this.variableNames=["x"];var n=t.windowSize,r=t.batchSize,i=t.inSize,a=Math.ceil(i/n);this.outputShape=[r,a];var o="0.0",s="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",s="min"):"max"===e&&(o="-1.0 / 1e-20",s="max");var u=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");var c=4*Math.floor(n/4),l=n%4,f="\n      if ("+("sum"===e)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===e)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+s+"(values, minMaxValue);\n      }\n    ",h="vec4";"all"===e?(o="1.0",f="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(o="0.0",f="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");var p="";i%n>0&&(p="\n        if (inIdx < 0 || inIdx >= "+i+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+o+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+p+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+n+";\n\n        vec4 minMaxValue = vec4("+o+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+c+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+h+" values = "+h+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+f+"\n        }\n\n        int inIdx = inOffset + "+c+";\n        if ("+(1===l)+") {\n          "+h+" values = "+h+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+f+"\n        } else if ("+(2===l)+") {\n          "+h+" values = "+h+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+f+"\n        } else if ("+(3===l)+") {\n          "+h+" values = "+h+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+f+"\n        }\n        setOutput("+u+");\n      }\n    "},Ui=function(t,e){this.variableNames=["A"],this.usesPackedTextures=!0,this.outputShape=t;for(var n="",r=0;r<4;r++){var i="thisRC = rc;";r%2==1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),n+="\n        "+i+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      "+function(t){return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+Un(["r","c","d"],t)+"\n      return ivec3(r, c, d);\n    }\n  "}(e)+"\n      "+function(t){return"\n    int getFlatIndex(ivec3 coords) {\n      return round("+function(t,e){if(t.length!==e.length)throw new Error("Vectors to be dotted must be of the same length -got "+t.length+" and "+e.length);for(var n=[],r=Math.floor(t.length/4),i=t.length%4,a=0;a<r;a++){var o=t.slice(4*a,4*a+4),s=e.slice(4*a,4*a+4);n.push(Vn(o)+", "+Vn(s))}return 0!==i&&(o=t.slice(4*r),s=e.slice(4*r),1===o.length&&(o=o.map(function(t){return"float("+t+")"}),s=s.map(function(t){return"float("+t+")"})),n.push(Vn(o)+", "+Vn(s))),n.map(function(t,e){return"dot("+t+")"}).join("+")}(["coords.x","coords.y","coords.z"],K(t).map(function(t){return t.toString()}).concat(["1."]))+");\n    }\n  "}(t)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+t[1]+";\n        int cols = "+t[2]+";\n\n        "+n+"\n\n        setOutput(result);\n      }\n    "};var Vi=function(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,i=r[1],a=r[2],o=t.shape,s=o[1],u=o[2],c=[n&&s>1?i-1:i,n&&u>1?a-1:a],l=[n&&s>1?s-1:s,n&&u>1?u-1:u],f=c[0]/l[0],h=c[1]/l[1],p=1/f,d=1/h,m=2*Math.ceil(p)+2,g=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+f+");\n        const float widthScale = float("+h+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+d+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+s+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(i-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(a-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Wi=function(t,e,n,r){this.variableNames=["A"],this.outputShape=[];var i=t[0],a=t[1],o=t[2],s=t[3];this.outputShape=[i,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/c[0]+",\n          "+u[1]/c[1]+");\n      const vec2 inputShapeRC = vec2("+a+".0, "+o+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},qi=function(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,i=r[1],a=r[2],o=t.shape,s=o[1],u=o[2],c=[n&&s>1?i-1:i,n&&u>1?a-1:a],l=[n&&s>1?s-1:s,n&&u>1?u-1:u],f=c[0]/l[0],h=c[1]/l[1],p=1/f,d=1/h,m=2*Math.ceil(p)+2,g=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+f+");\n        const float widthScale = float("+h+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+d+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+s+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+c[0]+") *\n                (float(dyR) / float("+l[0]+"));\n\n            float sourceFracCol =\n                float("+c[1]+") *\n                  (float(dyC) / float("+l[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+i+") - 1),\n                "+n+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+a+") - 1),\n                "+n+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},$i=function(t,e,n,r){this.variableNames=["A"],this.outputShape=[];var i=t[0],a=t[1],o=t[2],s=t[3];this.outputShape=[i,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?o-1:o],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],l=r?"0.5":"0.0";this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/c[0]+",\n          "+u[1]/c[1]+");\n      const vec2 inputShapeRC = vec2("+a+".0, "+o+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+l+")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "},Hi=function(t,e){this.variableNames=["x"];var n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");if(this.outputShape=t,1!==n){var r=t.map(function(n,r){return function(n){return-1!==e.indexOf(n)&&1!==t[n]?t[n]+" - coords["+n+"] - 1":"coords["+n+"]"}(r)}).join(","),i=sr(n);this.userCode="\n      void main() {\n        "+i+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+t[0]+" - coord - 1));\n        }\n      "},Ki=function(t,e,n,r,i,a,o){void 0===o&&(o=!0),this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;var s=sr(i.length),u=sr(a.length),c="";1===n?c="i":2===n&&(c="i, j");var l="getIndices("+c+")",f="";1===r?f="i":2===r&&(f="i, coords[1]");var h="getUpdates("+f+")",p=e>1?"strides[j]":"strides";this.userCode="\n        "+s+" strides = "+s+"("+i+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+t+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+e+"; j++) {\n              int index = round("+l+");\n              flattenedIndex += index * "+p+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+h+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "},Gi=function(t,e){this.variableNames=["x","segmentIds"];var n=t.windowSize,r=t.batchSize,i=t.inSize,a=t.numSegments,o=a*Math.ceil(i/n);this.outputShape=[r,o];var s=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ",l="";i%n>0&&(l="\n        if (inIdx < 0 || inIdx >= "+i+") {\n          return initializationValue;\n        }\n      ");var f="";i%n>0&&(f="\n        if (inIdx < 0 || inIdx >= "+i+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+l+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+f+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+a+")) * float("+n+"));\n        int currentSeg = int(mod(float(outIdx), float("+a+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+s+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+c+"\n        }\n\n        int inIdx = inOffset + "+s+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+c+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+c+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+c+"\n        }\n        setOutput(sumValue);\n      }\n    "},Xi=function(t,e,n){var r,i;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank "+n+" is not yet supported");if(1===n)i="resRC",r="resRC";else{for(var a=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[],u=0;u<e.length;u++)s.push(""+a[u]),u<t&&o.push(""+a[u]);r=o.join(),i=s.join()}var c=sr(n);this.userCode="\n      void main() {\n        "+c+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+i+"));\n        } else {\n          setOutput(getB("+i+"));\n        }\n      }\n    "},Yi=function(){function t(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;var e,n=sr(this.rank),r="uniform int start["+this.rank+"];",i=function(t){if(1===t)return"sourceLoc";if(t<=6)return Ji.slice(0,t).map(function(t){return"sourceLoc."+t}).join(",");throw Error("Slicing for rank "+t+" is not yet supported")}(this.rank);e="\n        "+n+" sourceLoc;\n        "+n+" coords = getOutputCoords();\n        "+t.map(function(t,e){return"sourceLoc."+Ji[e]+" = start["+e+"] + coords."+Ji[e]+";"}).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+e+"\n        setOutput(getSource("+i+"));\n      }\n    "}return t.prototype.getCustomSetupFunc=function(t){var e=this;if(t.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+t.length+")");return function(n,r){null==e.startLoc&&(e.startLoc=n.getUniformLocationNoThrow(r,"start"),null==e.startLoc)||n.gl.uniform1iv(e.startLoc,t)}},t}(),Ji=["x","y","z","w","u","v"];var Zi=function(t,e,n,r){this.variableNames=["x"];var i=n.filter(function(t,e){return-1===r.indexOf(e)});this.outputShape=i;var a=n.length,o=sr(n.length),s=sr(i.length),u="";if(1===a)u="coords * strides + begin";else{var c=0;u=n.map(function(t,e){return-1===r.indexOf(e)?(c++,1===i.length?"coords * strides["+e+"] + begin["+e+"]":"coords["+(c-1)+"] * strides["+e+"] + begin["+e+"]"):"begin["+e+"]"}).join(",")}this.userCode="\n      "+o+" begin = "+o+"("+t+");\n      "+o+" strides = "+o+"("+e+");\n\n      void main() {\n        "+s+" coords = getOutputCoords();\n        setOutput(getX("+u+"));\n      }\n    "},Qi=function(){function t(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return t.prototype.acquireTexture=function(t,e,n){var r,i=ta(e,n),a=ea(t,i,n);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var o=this.freeTextures[a].shift();return this.usedTextures[a].push(o),o}return this.numUsedTextures++,this.log(),i===Ln.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===Ln.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===Ln.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===Ln.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===Ln.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(r),r},t.prototype.releaseTexture=function(t,e,n,r){if(null!=this.freeTextures){var i=ea(e,ta(n,r),r);i in this.freeTextures||(this.freeTextures[i]=[]),this.freeTextures[i].push(t),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[i],o=a.indexOf(t);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(o,1),this.log()}},t.prototype.log=function(){if(this.logEnabled){var t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+t+")")}},t.prototype.getNumUsedTextures=function(){return this.numUsedTextures},t.prototype.getNumFreeTextures=function(){return this.numFreeTextures},t.prototype.dispose=function(){var t=this;if(null!=this.freeTextures){for(var e in this.freeTextures)this.freeTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});for(var e in this.usedTextures)this.usedTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},t}();function ta(t,e){if(t===Bn.UPLOAD)return e?Ln.PACKED_2X2_FLOAT32:Ln.UNPACKED_FLOAT32;if(t===Bn.RENDER||null==t)return e?Lt.get("WEBGL_RENDER_FLOAT32_ENABLED")?Ln.PACKED_2X2_FLOAT32:Ln.PACKED_2X2_FLOAT16:Lt.get("WEBGL_RENDER_FLOAT32_ENABLED")?Ln.UNPACKED_FLOAT32:Ln.UNPACKED_FLOAT16;if(t===Bn.DOWNLOAD||t===Bn.PIXELS)return Ln.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function ea(t,e,n){return t[0]+"_"+t[1]+"_"+e+"_"+n}var na=function(t,e){this.variableNames=["A"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;var i=sr(this.rank),a=function(t){var e=t.length;if(e>5)throw Error("Tile for rank "+e+" is not yet supported");if(1===e)return"imod(resRC, "+t[0]+")";for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],i=0;i<t.length;i++)r.push("imod("+n[i]+", "+t[i]+")");return r.join()}(t);this.userCode="\n      void main() {\n        "+i+" resRC = getOutputCoords();\n        setOutput(getA("+a+"));\n      }\n    "};var ra=function(t,e){this.variableNames=["A"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;var i=sr(this.rank),a=function(t){var e=t.length;if(e>6)throw Error("Transpose for rank "+e+" is not yet supported");for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e),i=0;i<t.length;i++)r[t[i]]=n[i];return r.join()}(e);this.userCode="\n    void main() {\n      "+i+" resRC = getOutputCoords();\n      setOutput(getA("+a+"));\n    }\n    "};var ia=1.7580993408473768,aa=1.0507009873554805,oa=function(){function t(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float NAN;\n      float unaryOperation(float x) {\n        "+e+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "}return t.prototype.getCustomSetupFunc=function(){var t=this;return function(e,n){null==t.startLoc&&(t.startLoc=e.getUniformLocationNoThrow(n,"NAN"),null==t.startLoc)||e.gl.uniform1f(t.startLoc,NaN)}},t}(),sa="if (isNaN(x)) return x;",ua=sa+"\n  return (x < 0.0) ? 0.0 : x;\n",ca="\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = "+ia+";\n  float scale = "+aa+";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n";var la=sa+"\n  return sin(x);\n",fa=sa+"\n  return cos(x);\n",ha=sa+"\n  return atan(x);\n",pa=sa+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",da=sa+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",ma=function(t){this.variableNames=["A"],this.usesPackedTextures=!0,this.outputShape=t;var e=t.length,n=ji("rc",e),r=sr(e),i=function(t,e){if(1===t)return"rc";for(var n="",r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),o=e<=1?"rc":"vec2("+a.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+i+");\n\n        setOutput(getChannel(packedInput, "+o+"));\n      }\n    "};var ga=Ae({concat_:function(t,e){void 0===e&&(e=0),b(t.length>=1,"Pass at least one tensor to concat");var n=ke(t,"tensors","concat");e=P(e,n[0].shape)[0];var r=de(n.map(function(t){return t.shape}),e);if(0===E(r))return Me([],r);if(1===(n=n.filter(function(t){return t.size>0})).length)return n[0];var i=n.map(function(t){return t.shape});!function(t,e){var n=t[0].length;t.forEach(function(t,e){b(t.length===n,"Error in concat"+n+"D: rank of tensors["+e+"] must be the same as the rank of the rest ("+n+")")}),b(e>=0&&e<n,"Error in concat"+n+"D: axis must be between 0 and "+(n-1)+".");var r=t[0];t.forEach(function(t,i){for(var a=0;a<n;a++)b(a===e||t[a]===r[a],"Error in concat"+n+"D: Shape of tensors["+i+"] ("+t+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+i+".")})}(i,e);var a=n;return Lt.engine.runKernel(function(t){return t.concat(n,e)},a,function(t){var n=i.map(function(t){return t[e]});return _a(t,n,e).map(function(t){return function(){return t}})})}}),ya=Ae({concat1d_:function(t){return ga(t,0)}}),va=Ae({concat2d_:function(t,e){return ga(t,e)}}),ba=Ae({concat3d_:function(t,e){return ga(t,e)}}),wa=Ae({concat4d_:function(t,e){return ga(t,e)}}),_a=Ae({split_:function(t,e,n){void 0===n&&(n=0);var r,i=Oe(t,"x","split");return n=P(n,i.shape)[0],"number"==typeof e?(b(i.shape[n]%e==0,"Number of splits must evenly divide the axis."),r=new Array(e).fill(i.shape[n]/e)):(b(i.shape[n]===e.reduce(function(t,e){return t+e}),"The sum of sizes must match the size of the axis dimension."),r=e),Lt.engine.runKernel(function(t){return t.split(i,r,n)},{$x:i},function(t){return{$x:function(){return ga(t,n)}}})}});"undefined"!=typeof window?window:void 0!==r||"undefined"!=typeof self&&self;function xa(t,e){return t(e={exports:{}},e.exports),e.exports}var Ea=xa(function(t){!function(t,e,n){function r(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function i(t,e){var n=new function(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}(t),i=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+1.1102230246251565e-16*(2097152*a()|0)},a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.alea=i}(0,t)}),Sa=xa(function(t){!function(t,e,n){function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function i(t,e){var n=new function(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xor128=i}(0,t)}),Na=xa(function(t){!function(t,e,n){function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function i(t,e){var n=new function(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xorwow=i}(0,t)}),Ia=xa(function(t){!function(t,e,n){function r(t,e){return e.x=t.x.slice(),e.i=t.i,e}function i(t,e){null==t&&(t=+new Date);var n=new function(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.x&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xorshift7=i}(0,t)}),Oa=xa(function(t){!function(t,e,n){function r(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function i(t,e){null==t&&(t=+new Date);var n=new function(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,a=e.i;return e.w=r=r+1640531527|0,n=i[a+34&127],t=i[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,i,a,o,s=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),i=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,i=0==(n=s[127&a]^=r+o)?i+1:0);for(i>=128&&(s[127&(e&&e.length||0)]=-1),i=127,a=512;a>0;--a)r=s[i+34&127],n=s[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,s[i]=r^n;t.w=o,t.X=s,t.i=i}(e,t)}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.X&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xor4096=i}(0,t)}),ka=xa(function(t){!function(t,e,n){function r(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function i(t,e){var n=new function(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.tychei=i}(0,t)}),Aa=xa(function(t){!function(e,r){var i,a=this,o=256,s=6,u="random",c=r.pow(o,s),l=r.pow(2,52),f=2*l,h=o-1;function p(t,n,p){var y=[],v=m(function t(e,n){var r,i=[],a=typeof e;if(n&&"object"==a)for(r in e)try{i.push(t(e[r],n-1))}catch(t){}return i.length?i:"string"==a?e:e+"\0"}((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(o):(t=new Uint8Array(o),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=a.navigator,r=n&&n.plugins;return[+new Date,a,r,a.screen,g(e)]}}():t,3),y),b=new function(t){var e,n=t.length,r=this,i=0,a=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);i<o;)s[i]=i++;for(i=0;i<o;i++)s[i]=s[a=h&a+t[i%n]+(e=s[i])],s[a]=e;(r.g=function(t){for(var e,n=0,i=r.i,a=r.j,s=r.S;t--;)e=s[i=h&i+1],n=n*o+s[h&(s[i]=s[a=h&a+e])+(s[a]=e)];return r.i=i,r.j=a,n})(o)}(y),w=function(){for(var t=b.g(s),e=c,n=0;t<l;)t=(t+n)*o,e*=o,n=b.g(1);for(;t>=f;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,m(g(b.S),e),(n.pass||p||function(t,e,n,i){return i&&(i.S&&d(i,b),t.state=function(){return d(b,{})}),n?(r[u]=t,e):t})(w,v,"global"in n?n.global:this==r,n.state)}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){for(var n,r=t+"",i=0;i<r.length;)e[h&i]=h&(n^=19*e[h&i])+r.charCodeAt(i++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(r["seed"+u]=p,m(r.random(),e),t.exports){t.exports=p;try{i=n(85)}catch(t){}}}([],Math)});Aa.alea=Ea,Aa.xor128=Sa,Aa.xorwow=Na,Aa.xorshift7=Ia,Aa.xor4096=Oa,Aa.tychei=ka;var Ca=Aa.alea,Pa=function(){function t(t,e,n,r,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=i||Math.random();this.random=Ca(a.toString())}return t.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var t=this.nextVal;return this.nextVal=NaN,t}for(var e,n,r=!1;!r;){var i=void 0,a=void 0,o=void 0;do{o=(i=2*this.random()-1)*i+(a=2*this.random()-1)*a}while(o>=1||0===o);var s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*i*s,n=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(e)},t.prototype.convertValue=function(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)},t.prototype.isValidTruncated=function(t){return t<=this.upper&&t>=this.lower},t}();function Ta(t,e){return c(this,void 0,void 0,function(){var n,r,i,a,o,s,u,c,f,h,p,d,m,g,y,v,b,w,_,x;return l(this,function(l){switch(l.label){case 0:if(n=Oe(t,"img","toPixels"),t instanceof ft||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+n.rank+".");if(r=n.shape.slice(0,2),i=r[0],a=r[1],(o=2===n.rank?1:n.shape[2])>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);return s=n.min(),u=n.max(),[4,s.data()];case 1:return c=l.sent()[0],[4,u.data()];case 2:if(f=l.sent()[0],s.dispose(),u.dispose(),"float32"===n.dtype){if(c<0||f>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+c+" - "+f+"].")}else{if("int32"!==n.dtype)throw new Error("Unsupported type for toPixels: "+n.dtype+". Please use float32 or int32 tensors.");if(c<0||f>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+c+" - "+f+"].")}return[4,n.data()];case 3:for(h=l.sent(),p="float32"===n.dtype?255:1,d=new Uint8ClampedArray(a*i*4),m=0;m<i*a;++m)g=void 0,y=void 0,v=void 0,b=void 0,1===o?(g=h[m]*p,y=h[m]*p,v=h[m]*p,b=255):3===o?(g=h[3*m]*p,y=h[3*m+1]*p,v=h[3*m+2]*p,b=255):4===o&&(g=h[4*m]*p,y=h[4*m+1]*p,v=h[4*m+2]*p,b=h[4*m+3]*p),d[0+(w=4*m)]=Math.round(g),d[w+1]=Math.round(y),d[w+2]=Math.round(v),d[w+3]=Math.round(b);return null!=e&&(e.width=a,e.height=i,_=e.getContext("2d"),x=new ImageData(d,a,i),_.putImageData(x,0,0)),n!==t&&n.dispose(),[2,d]}})})}function Ra(t,e,n){return void 0===e&&(e="float32"),new st(t,e=e||"float32",n)}function Da(t,e){void 0===e&&(e=!1),console.log(t.toString(e))}var Ma=Ae({batchToSpaceND_:function(t,e,n){var r=Oe(t,"x","batchToSpaceND"),i=e.reduce(function(t,e){return t*e});return b(r.rank>=1+e.length,"input rank is "+r.rank+" but should be > than blockShape.length "+e.length),b(n.length===e.length,"crops.length is "+n.length+" but should be equal to blockShape.length  "+e.length),b(r.shape[0]%i==0,"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+e.join(" * ")+" === "+i),Lt.engine.runKernel(function(t){return t.batchToSpaceND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.spaceToBatchND(e,n)}}})}}),ja=Ae({cast_:function(t,e){var n=Oe(t,"x","cast");return Lt.engine.runKernel(function(t){return t.cast(n,e)},{$x:n},function(t){return{$x:function(){return t.clone()}}})}}),Ba=Ae({clone_:function(t){var e=Oe(t,"x","clone",null);return Lt.engine.runKernel(function(t){return ft.make(e.shape,{dataId:e.dataId},e.dtype)},{$x:e},function(t){return{$x:function(){return t.toFloat()}}})}}),La=Ae({cumsum_:function(t,e,n,r){void 0===e&&(e=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var i=Oe(t,"x","cumsum"),a=ue([e|=0],i.rank),o=i;null!=a&&(o=i.transpose(a));var s=le(1,i.rank)[0],u=Lt.engine.runKernel(function(t){return t.cumsum(o,s,n,r)},{permutedX:o},function(t){return{permutedX:function(){return t.cumsum(e,n,!r)}}});return null!=a&&(u=u.transpose(a)),u}}),za=Ae({depthToSpace_:function(t,e,n){void 0===n&&(n="NHWC");var r=Oe(t,"x","depthToSpace"),i="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];return b(i*e>=0,"Negative dimension size caused by overflow when multiplying\n      "+i+" and "+e+"  for depthToSpace with input shape\n      "+r.shape),b(a*e>=0,"Negative dimension size caused by overflow when multiplying\n      "+a+" and "+e+" for depthToSpace with input shape\n          "+r.shape),b(o%(e*e)==0,"Dimension size must be evenly divisible by "+e*e+" but is "+o+" for depthToSpace with input shape "+r.shape),Lt.engine.runKernel(function(t){return t.depthToSpace(r,e,n)},{$x:r})}}),Fa=Ae({expandDims_:function(t,e){void 0===e&&(e=0);var n=Oe(t,"x","expandDims");b(e<=n.rank,"Axis must be <= rank of the tensor");var r=n.shape.slice();return e<0&&(b(-(n.rank+1)<=e,"Axis must be in the interval ["+-(n.rank+1)+", "+n.rank+"]"),e=n.rank+e+1),r.splice(e,0,1),Qa(n,r)}}),Ua=Ae({eye_:function(t,e,n,r){void 0===r&&(r="float32"),null==e&&(e=t);for(var i=Ra([t,e],r),a=t<=e?t:e,o=0;o<a;++o)i.set(1,o,o);var s=i.toTensor().as2D(t,e);if(null==n)return s;if(1===n.length)return ro(Fa(s,0),[n[0],1,1]);if(2===n.length)return ro(Fa(Fa(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return ro(Fa(Fa(Fa(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+n.length+"D.")}}),Va=Ae({fromPixels_:function(t,e){if(void 0===e&&(e=3),e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");return Lt.engine.fromPixels(t,e)}}),Wa=Ae({multinomial_:function(t,e,n,r){void 0===r&&(r=!1);var i=Oe(t,"logits","multinomial"),a=i.size,o=i.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+o);n=n||Math.random();var s=1===o?i.as2D(1,-1):i,u=Lt.engine.runKernel(function(t){return t.multinomial(s,r,e,n)},{logits2D:s});return 1===o?u.as1D():u}}),qa=Ae({oneHot_:function(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);var i=Oe(t,"indices","oneHot","int32"),a=i.shape.concat([e]);return i=i.flatten(),Lt.engine.runKernel(function(t){return t.oneHot(i,e,n,r)},{$indices:i},function(t){return{$indices:function(){return qe(i.shape,"float32")}}}).reshape(a)}}),$a=Ae({pad_:function(t,e,n){void 0===n&&(n=0);var r=Oe(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var i=e.map(function(t){return t[0]});return Lt.engine.runKernel(function(t){return t.pad(r,e,n)},{$x:r},function(t){return{$x:function(){return t.slice(i,r.shape)}}})}}),Ha=Ae({pad1d_:function(t,e,n){return void 0===n&&(n=0),b(2===e.length,"Invalid number of paddings. Must be length of 2."),$a(t,[e],n)}}),Ka=Ae({pad2d_:function(t,e,n){return void 0===n&&(n=0),b(2===e.length&&2===e[0].length&&2===e[1].length,"Invalid number of paddings. Must be length of 2 each."),$a(t,e,n)}}),Ga=Ae({pad3d_:function(t,e,n){return void 0===n&&(n=0),b(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,"Invalid number of paddings. Must be length of 2 each."),$a(t,e,n)}}),Xa=Ae({pad4d_:function(t,e,n){return void 0===n&&(n=0),b(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,"Invalid number of paddings. Must be length of 2 each."),$a(t,e,n)}}),Ya=Ae({rand_:function(t,e,n){var r=E(t),i=null;if(null==n||"float32"===n)i=new Float32Array(r);else if("int32"===n)i=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);i=new Uint8Array(r)}for(var a=0;a<r;a++)i[a]=e();return ft.make(t,{values:i},n)}}),Ja=Ae({randomNormal_:function(t,e,n,r,i){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var a=new Pa(e,n,r,!1,i),o=Ra(t,r),s=0;s<o.values.length;s++)o.values[s]=a.nextValue();return o.toTensor()}}),Za=Ae({randomUniform_:function(t,e,n,r){void 0===e&&(e=0),void 0===n&&(n=1),void 0===r&&(r="float32");for(var i=Ra(t,r),a=0;a<i.values.length;a++)i.values[a]=v(e,n);return i.toTensor()}}),Qa=Ae({reshape_:function(t,e){var n=Oe(t,"x","reshape",null);return e=C(e,n.size),b(n.size===E(e),"new shape and old shape must have the same number of elements."),Lt.engine.runKernel(function(t){return t.reshape(n,e)},{$x:n},function(t){return{$x:function(){return t.reshape(n.shape)}}})}}),to=Ae({spaceToBatchND_:function(t,e,n){var r=Oe(t,"x","spaceToBatchND");return b(r.rank>=1+e.length,"input rank "+r.rank+" should be > than [blockShape] "+e.length),b(n.length===e.length,"paddings.shape[0] "+n.length+" must be equal to [blockShape] "+e.length),b(r.shape.reduce(function(t,r,i){return i>0&&i<=e.length?t&&(r+n[i-1][0]+n[i-1][1])%e[i-1]==0:t},!0),"input spatial dimensions "+r.shape.slice(1)+" with paddings "+n.toString()+" must be divisible by blockShapes "+e.toString()),Lt.engine.runKernel(function(t){return t.spaceToBatchND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.batchToSpaceND(e,n)}}})}}),eo=Ae({squeeze_:function(t,e){var n=Oe(t,"x","squeeze");return Qa(n,T(n.shape,e).newShape)}}),no=Ae({stack_:function(t,e){void 0===e&&(e=0);var n=ke(t,"tensors","stack");if(b(n.length>=1,"Pass at least one tensor to tf.stack"),1===n.length)return n[0].expandDims(e);var r=n[0].rank,i=n[0].shape,a=n[0].dtype;b(e<=r,"Axis must be <= rank of the tensor"),n.forEach(function(t){w(i,t.shape,"All tensors passed to stack must have matching shapes")}),n.forEach(function(t){b(a===t.dtype,"All tensors passed to stack must have matching dtypes")});var o=n.map(function(t){return t.expandDims(e)});return ga(o,e)}}),ro=Ae({tile_:function(t,e){var n=Oe(t,"x","tile");return b(n.rank===e.length,"Error in transpose: rank of input "+n.rank+" must match length of reps "+e+"."),Lt.engine.runKernel(function(t){return t.tile(n,e)},{$x:n},function(t){return{$x:function(){var r=Xe(n);if(1===n.rank)for(var i=0;i<e[0];++i)r=r.add(t.slice([i*n.shape[0]],[n.shape[0]]));else if(2===n.rank)for(i=0;i<e[0];++i)for(var a=0;a<e[1];++a)r=r.add(t.slice([i*n.shape[0],a*n.shape[1]],[n.shape[0],n.shape[1]]));else if(3===n.rank)for(i=0;i<e[0];++i)for(a=0;a<e[1];++a)for(var o=0;o<e[2];++o)r=r.add(t.slice([i*n.shape[0],a*n.shape[1],o*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else{if(4!==n.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+n.rank+" tensors yet.");for(i=0;i<e[0];++i)for(a=0;a<e[1];++a)for(o=0;o<e[2];++o)for(var s=0;s<e[3];++s)r=r.add(t.slice([i*n.shape[0],a*n.shape[1],o*n.shape[2],s*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]))}return r}}})}}),io=Ae({truncatedNormal_:function(t,e,n,r,i){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var a=new Pa(e,n,r,!0,i),o=Ra(t,r),s=0;s<o.values.length;s++)o.values[s]=a.nextValue();return o.toTensor()}}),ao=Ae({unstack_:function(t,e){void 0===e&&(e=0),e=e||0;var n=Oe(t,"x","unstack");return Lt.engine.runKernel(function(t){return t.unstack(n,e)},{$x:n},function(t){return{$x:function(){return no(t,e)}}})}}),oo=function(t,e){return c(this,void 0,void 0,function(){var n,r,i,a,o,s,u,c,f,h;return l(this,function(l){switch(l.label){case 0:return n=Oe(t,"x","setdiff1d"),r=Oe(e,"y","setdiff1d"),b(n.dtype===r.dtype,"x and y should have the same dtype, but got x ("+n.dtype+") and y ("+r.dtype+")."),b(1===n.rank,"x should be 1D tensor, but got x ("+n.shape+")."),b(1===r.rank,"y should be 1D tensor, but got y ("+r.shape+")."),[4,n.data()];case 1:return i=l.sent(),[4,r.data()];case 2:for(a=l.sent(),o=new Set(a),s=0,f=0;f<i.length;f++)o.has(i[f])||s++;for(u=new st([s],n.dtype),c=new st([s],"int32"),f=0,h=0;f<i.length;f++)o.has(i[f])||(u.values[h]=i[f],c.values[h]=f,h++);return[2,[u.toTensor(),c.toTensor()]]}})})};function so(t,e){for(var n=[],r=0;r<e.length;r++)e[r]&&n.push(r);var i=Ra(t,"int32"),a=Ra([n.length,t.length],"int32");for(r=0;r<n.length;r++){var o=i.indexToLoc(n[r]),s=r*t.length;a.values.set(o,s)}return a.toTensor()}var uo=function(){function t(t,e){if(void 0===e&&(e=!0),this.gpgpu=t,this.delayedStorage=e,this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.lruDataGPU=[],this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.binaryCache={},this.disposed=!1,Lt.get("WEBGL_VERSION")<1)throw new Error("WebGL is not supported on this device");if(null==t){var n=p(Lt.get("WEBGL_VERSION"));this.gpgpu=new Ii(n),this.canvas=n.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new Qi(this.gpgpu)}return t.prototype.register=function(t,e,n){if(this.texData.has(t))throw new Error("Data buffer is already registered");this.texData.set(t,{shape:e,dtype:n})},t.prototype.setDataMover=function(t){this.texData=new Ye(t)},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error("pixels passed to tf.fromPixels() can not be null");var n=[t.height,t.width],r=[t.height,t.width,e];if(!(t instanceof HTMLVideoElement||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageData))throw new Error("pixels passed to tf.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was "+t.constructor.name);if(t instanceof HTMLVideoElement){if(null==this.fromPixels2DContext){if(!Lt.get("IS_BROWSER"))throw new Error("Can't read pixels from HTMLImageElement outside the browser.");if("complete"!==document.readyState)throw new Error("The DOM is not ready yet. Please call tf.fromPixels() once the DOM is ready. One way to do that is to add an event listener for `DOMContentLoaded` on the document object");this.fromPixels2DContext=document.createElement("canvas").getContext("2d")}this.fromPixels2DContext.canvas.width=t.width,this.fromPixels2DContext.canvas.height=t.height,this.fromPixels2DContext.drawImage(t,0,0,t.width,t.height),t=this.fromPixels2DContext.canvas}var i=this.makeTensorHandle(n,"int32");this.texData.get(i.dataId).usage=Bn.PIXELS,this.gpgpu.uploadPixelDataToTexture(this.getTexture(i.dataId),t);var a=new yr(r),o=this.compileAndRun(a,[i]);return this.disposeData(i.dataId),o},t.prototype.makeTensorHandle=function(t,e){var n={};return this.register(n,t,e),{dataId:n,shape:t,dtype:e}},t.prototype.write=function(t,e){if(null==e)throw new Error("MathBackendWebGL.write(): values can not be null");if(Lt.get("DEBUG"))for(var n=0;n<e.length;n++){var r=e[n];if(!Ir(r))throw Error("The value "+r+" cannot be represented on this device.")}var i=this.texData.get(t),a=i.texture,o=i.texShape,s=i.usage,u=i.dtype,c=i.isPacked;if("complex64"===u)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");null!=a&&(this.releaseTexture(t,a,o,s,c),i.texture=null,i.texShape=null),i.usage=Bn.UPLOAD,i.values=e,this.delayedStorage||this.uploadToGPU(t)},t.prototype.readSync=function(t){var e=this.texData.get(t),n=e.values,r=e.dtype,i=e.complexTensors,a=e.slice,o=e.shape;if(null!=a){var s=new oa(o,"return x;"),u=this.compileAndRun(s,[{dataId:t,shape:o,dtype:r}]);return this.readSync(u.dataId)}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;var c,l,f=null!=this.activeTimers;return f&&(c=performance.now()),l="complex64"===r?tn(i.real.dataSync(),i.imag.dataSync()):this.getValuesFromTexture(t),f&&(this.downloadWaitMs+=performance.now()-c),this.convertAndCacheOnCPU(t,l)},t.prototype.read=function(t){return c(this,void 0,void 0,function(){var e,n,r,i,a,o,s,u,c,f,h,p,d,m,g,y,v,b,w,_,x,E;return l(this,function(l){switch(l.label){case 0:if(this.pendingRead.has(t))return r=this.pendingRead.get(t),[2,new Promise(function(t){return r.push(t)})];if(i=this.texData.get(t),a=i.texture,o=i.values,s=i.texShape,u=i.isPacked,c=i.shape,f=i.slice,h=i.dtype,null!=f)return p=new oa(c,"return x;"),d=this.compileAndRun(p,[{dataId:t,shape:c,dtype:h}]),[2,this.read(d.dataId)];if(null!=o)return[2,this.convertAndCacheOnCPU(t)];if(this.pendingRead.set(t,[]),!Lt.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Lt.get("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return m=s[1],g=s[0],u&&(e=Hn(s[0],s[1]),m=e[0],g=e[1]),y=this.gpgpu.maybeCreateBufferFromTexture(a,g,m),[4,this.gpgpu.createAndWaitForFence()];case 1:return l.sent(),y instanceof WebGLTexture?v=this.getValuesFromTexture(t):u?(b=Zr(c),w=1,_=1,c.length&&(n=Qr(c),w=n[0],_=n[1]),v=this.gpgpu.downloadPackedMatrixFromBuffer(y,b,w,_,s[0],s[1])):v=this.gpgpu.downloadFloat32MatrixFromBuffer(y,s[0],s[1]),x=this.convertAndCacheOnCPU(t,v),E=this.pendingRead.get(t),this.pendingRead.delete(t),E.forEach(function(t){return t(x)}),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)),[2,x]}})})},t.prototype.getValuesFromTexture=function(t){var e,n=this.texData.get(t),r=n.shape,i=n.dtype,a=n.texture,o=n.texShape;if(Lt.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")){if(this.texData.get(t).isPacked){var s=Zr(r),u=1,c=1;return r.length&&(u=(e=Qr(r))[0],c=e[1]),this.gpgpu.downloadMatrixFromPackedTexture(a,s,u,c,o[0],o[1])}return this.gpgpu.downloadFloat32MatrixFromOutputTexture(a,o[0],o[1])}var l=this.makeTensorHandle(r,"float32");l.size=E(r),this.texData.get(l.dataId).usage=Bn.DOWNLOAD;var f=new pr(r);this.compileAndRun(f,[{shape:r,dtype:i,dataId:t}],l,null,!1);var h=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture,h.texShape[0],h.texShape[1]);return this.disposeData(l.dataId),p},t.prototype.time=function(t){return c(this,void 0,void 0,function(){var e,n,r,i,a,o,s;return l(this,function(u){switch(u.label){case 0:return e=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t(),i=x(this.activeTimers.map(function(t){return t.query})).filter(function(t){return null!=t}),a=x(this.activeTimers.map(function(t){return t.name})).filter(function(t){return null!=t}),this.activeTimers=e,r&&(this.programTimersStack=null),[4,Promise.all(i)];case 1:return o=u.sent(),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:y(o),getExtraProfileInfo:function(){return o.map(function(t,e){return{name:a[e],ms:t}}).map(function(t){return t.name+": "+t.ms}).join(", ")},wallMs:null},this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}})})},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?this.gpgpu.beginQuery():{startMs:performance.now(),endMs:null}},t.prototype.endTimer=function(t){return Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(this.gpgpu.endQuery(),t):(t.endMs=performance.now(),t)},t.prototype.getQueryTime=function(t){return c(this,void 0,void 0,function(){var e;return l(this,function(n){return Lt.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?[2,this.gpgpu.waitForQueryAndGetTime(t)]:[2,(e=t).endMs-e.startMs]})})},t.prototype.disposeData=function(t){if(!this.pendingDisposal.has(t))if(this.pendingRead.has(t))this.pendingDisposal.add(t);else if(this.texData.has(t)){var e=this.texData.get(t),n=e.texture,r=e.texShape,i=e.usage,a=e.complexTensors,o=e.isPacked,s=e.slice;if(null!=n){var u=s&&s.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),this.releaseTexture(t,n,r,i,o),this.texData.delete(t))}null!=a&&(a.real.dispose(),a.imag.dispose())}},t.prototype.getTexture=function(t){return this.uploadToGPU(t),this.texData.get(t).texture},t.prototype.getCPUBackend=function(){return Lt.get("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Lt.findBackend("cpu")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(t,e){var n=this;return void 0===e&&(e=10),null!=this.getCPUBackend()&&t.every(function(t){return null==n.texData.get(t.dataId).texture&&t.size<e})},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.getCanvas=function(){return this.canvas},t.prototype.complex=function(t,e){var n=this.makeOutputArray(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Lt.engine.keep(t.clone()),imag:Lt.engine.keep(e.clone())},n},t.prototype.real=function(t){return this.texData.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.texData.get(t.dataId).complexTensors.imag.clone()},t.prototype.slice=function(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);var r=this.texData.get(t.dataId).isPacked,i=Ee(t.shape,e,n);if(r||!i){var a=new Yi(n),o=a.getCustomSetupFunc(e);return this.compileAndRun(a,[t],null,o)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)},t.prototype.shallowSlice=function(t,e,n){var r=this.texData.get(t.dataId),i=ft.make(n,{},r.dtype),a=this.texData.get(i.dataId);Object.assign(a,r),a.shape=n;var o=Se(e,t.strides);r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};var s=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,s+1),i},t.prototype.stridedSlice=function(t,e,n,r,i,a,o,s,u){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r,i,a,o,s,u);var c=we(t.shape,e,n,r,i,a,o,s,u),l=c[0],f=c[1],h=c[2],p=f.filter(function(t,e){return-1===h.indexOf(e)});if(p.some(function(t){return 0===t}))return Me([],p);var d=new Zi(l,r,f,h);return this.compileAndRun(d,[t])},t.prototype.reverse=function(t,e){var n=new Hi(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.concat=function(t,e){if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>Lt.get("WEBGL_MAX_TEXTURES_IN_SHADER")){var n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),i=this.concat(t.slice(n),e);return this.concat([r,i],e)}var a=de(t.map(function(t){return t.shape}),e),o=t.map(function(t){return t.as2D(-1,E(t.shape.slice(e)))}),s=new Sn(o.map(function(t){return t.shape}));return this.compileAndRun(s,o).reshape(a)},t.prototype.neg=function(t){var e=new oa(t.shape,"return -x;");return this.compileAndRun(e,[t])},t.prototype.batchMatMul=function(t,e,n,r){var i=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],o=n?t.shape[1]:t.shape[2],s=t.shape[0];if((1===i||1===a)&&o>1e3){n&&(t=t.transpose([0,2,1])),r&&(e=e.transpose([0,2,1]));var u=1===a?t:t.as3D(s,o,1),c=1===a?2:1,l=1===a?e.as3D(s,1,o):e;return this.multiply(u,l).sum(c,!0)}var f=_t(t.dtype,e.dtype);if(1===s){var h=t.as2D(t.shape[1],t.shape[2]),p=e.as2D(e.shape[1],e.shape[2]),d=new Ri(h.shape,p.shape,[i,a],n,r),m=this.makePackedTensor(d.outputShape,f),g=this.compileAndRun(d,[h,p],m);return g.reshape([1,g.shape[0],g.shape[1]])}return d=new Ti(t.shape,e.shape,n,r),m=this.makeOutputArray(d.outputShape,f),this.compileAndRun(d,[t,e],m)},t.prototype.multiply=function(t,e){if("complex64"===t.dtype){var n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),i=new mn(pn,t.shape,e.shape),a=new mn(dn,t.shape,e.shape),o=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag),this.makeComplexComponentTensorHandle(e,r.complexTensors.real),this.makeComplexComponentTensorHandle(e,r.complexTensors.imag)],s=this.compileAndRun(i,o),u=this.compileAndRun(a,o),c=this.complex(s,u);return s.dispose(),u.dispose(),c}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(this.usePackedBinaryOp(t,e))return this.packedBinaryOp(t,e,vn,t.dtype);var l=new bn(vn,t.shape,e.shape),f=this.makeOutputArray(l.outputShape,t.dtype);return this.compileAndRun(l,[t,e],f)},t.prototype.batchNormalization=function(t,e,n,r,i,a){var o=[t,e,n],s=null;null!=a&&(s=a.shape,o.push(a));var u=null;if(null!=i&&(u=i.shape,o.push(i)),Lt.get("WEBGL_PACK_BATCHNORMALIZATION")){var c=new hn(t.shape,e.shape,n.shape,s,u,r);return this.compileAndRun(c,o)}var l=new fn(t.shape,e.shape,n.shape,s,u,r);return this.compileAndRun(l,o)},t.prototype.localResponseNormalization4D=function(t,e,n,r,i){var a=new Ai(t.shape,e,n,r,i);return this.compileAndRun(a,[t])},t.prototype.LRNGrad=function(t,e,n,r,i,a,o){var s=new Ci(e.shape,r,i,a,o);return this.compileAndRun(s,[e,n,t])},t.prototype.tile=function(t,e){var n=new na(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.pad=function(t,e,n){var r=new Li(t.shape,e,n);return this.compileAndRun(r,[t])},t.prototype.transpose=function(t,e){var n=new ra(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.gather=function(t,e,n){var r=new vr(t.shape,e.size,n);return this.compileAndRun(r,[t,e])},t.prototype.batchToSpaceND=function(t,e,n){b(t.rank<=4,"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");var r=e.reduce(function(t,e){return t*e}),i=Qt(t.shape,e,r),a=te(i.length,e.length),o=ee(t.shape,e,r),s=ne(n,e.length),u=re(o,n,e.length);return t.reshape(i).transpose(a).reshape(o).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){b(t.rank<=4,"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");var r=e.reduce(function(t,e){return t*e}),i=[[0,0]];i.push.apply(i,n);for(var a=1+e.length;a<t.shape.length;++a)i.push([0,0]);var o=t.pad(i),s=Qt(o.shape,e,r,!1),u=te(s.length,e.length,!1),c=ee(o.shape,e,r,!1);return o.reshape(s).transpose(u).reshape(c)},t.prototype.reduce=function(t,e,n){var r=t.shape[0],i=t.shape[1],a=ye(i),o=new Fi({windowSize:a,inSize:i,batchSize:r},e),s=o.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],n);return this.compileAndRun(o,[t],l),1===l.shape[1]?l:this.reduce(l,e,n)},t.prototype.argReduce=function(t,e,n){void 0===n&&(n=null);var r=t.shape[0],i=t.shape[1];null!=n&&(r=n.shape[0],i=n.shape[1]);var a=ye(i),o=new cn({windowSize:a,inSize:i,batchSize:r},e,null==n),s=o.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],"int32"),f=[t];return null!=n&&f.push(n),this.compileAndRun(o,f,l),1===l.shape[1]?l:this.argReduce(t,e,l)},t.prototype.sum=function(t,e){se("sum",e,t.rank);var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i),o=xt(t.dtype);return this.reduce(a,"sum",o).reshape(r)},t.prototype.prod=function(t,e){var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i),o=xt(t.dtype);return this.reduce(a,"prod",o).reshape(r)},t.prototype.unsortedSegmentSum=function(t,e,n){var r=0,i=ue([r],t.rank),a=t;null!=i&&(a=t.transpose(i),r=le(1,t.rank)[0]);var o=function(t,e,n){for(var r=[],i=t.length,a=0;a<i;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),s=E([a.shape[r]]),u=a.as2D(-1,s),c=xt(t.dtype),l=this.segOpCompute(u,"unsortedSegmentSum",e,c,n).reshape(o);return null!=i&&(l=l.transpose(ce(i))),l},t.prototype.segOpCompute=function(t,e,n,r,i){var a=t.shape[0],o=t.shape[1],s=function(t,e){var n,r=!1;for(t<=ge?(n=t,r=!0):n=H(t,Math.floor(Math.sqrt(t)));!r;){if(n>e||n===t){r=!0;break}n=H(t,n+1)}return n}(o,i),u=new Gi({windowSize:s,inSize:o,batchSize:a,numSegments:i},e),c=u.outputShape,l=c[0],f=c[1],h=this.makeOutputArray([l,f],r);return this.compileAndRun(u,[t,n],h),h.shape[1]===i?h:(n=Ke(0,i).tile([o/s]),this.segOpCompute(h,e,n,r,i))},t.prototype.argMin=function(t,e){var n=[e];se("argMin",n,t.rank);var r=ae(t.shape,n),i=r[0],a=E(r[1]),o=t.as2D(-1,a);return this.argReduce(o,"min").reshape(i)},t.prototype.argMax=function(t,e){var n=[e];se("argMax",n,t.rank);var r=ae(t.shape,n),i=r[0],a=E(r[1]),o=t.as2D(-1,a);return this.argReduce(o,"max").reshape(i)},t.prototype.cumsum=function(t,e,n,r){if(e!==t.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(t.rank-1)+" but got axis="+e);var i=new lr(t.shape,n,r);return this.compileAndRun(i,[t])},t.prototype.equal=function(t,e){var n=new bn("return float(a == b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.notEqual=function(t,e){var n=new bn("return float(a != b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.less=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);var n=new bn("return float(a < b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.lessEqual=function(t,e){var n=new bn("return float(a <= b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.greater=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);var n=new bn("return float(a > b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.greaterEqual=function(t,e){var n=new bn("return float(a >= b);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalNot=function(t){var e=new oa(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])},t.prototype.logicalAnd=function(t,e){var n=new bn("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalOr=function(t,e){var n=new bn("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"bool");return this.compileAndRun(n,[t,e],r)},t.prototype.select=function(t,e,n){var r=new Xi(t.rank,e.shape,e.rank),i=this.makeOutputArray(r.outputShape,_t(e.dtype,n.dtype));return this.compileAndRun(r,[t,e,n],i)},t.prototype.where=function(t){Zt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var e=t.dataSync();return so(t.shape,e)},t.prototype.topk=function(t,e,n){return un(t.dataSync(),t.shape,t.dtype,e)},t.prototype.min=function(t,e){se("min",e,t.rank);var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i);return this.reduce(a,"min",a.dtype).reshape(r)},t.prototype.minimum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);var n=new bn("\n  if (isNaN(a)) return a;\n  if (isNaN(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.mod=function(t,e){var n=new bn("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape),r=n.getCustomSetupFunc();return this.compileAndRun(n,[t,e],null,r)},t.prototype.max=function(t,e){se("max",e,t.rank);var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i);return this.reduce(a,"max",a.dtype).reshape(r)},t.prototype.maximum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);var n=new bn("\n  if (isNaN(a)) return a;\n  if (isNaN(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.all=function(t,e){se("all",e,t.rank);var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i);return this.reduce(a,"all",a.dtype).reshape(r)},t.prototype.any=function(t,e){se("any",e,t.rank);var n=ae(t.shape,e),r=n[0],i=E(n[1]),a=t.as2D(-1,i);return this.reduce(a,"any",a.dtype).reshape(r)},t.prototype.squaredDifference=function(t,e){var n=new bn("return (a - b) * (a - b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.realDivide=function(t,e){if(this.usePackedBinaryOp(t,e))return this.packedBinaryOp(t,e,"\n  vec4 one = vec4(equal(a, b));\n  return one + (vec4(1.0) - one) * a / b;\n","float32");var n=new bn("if (a == b) return 1.0;\n  return a / b;",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"float32");return this.compileAndRun(n,[t,e],r)},t.prototype.floorDiv=function(t,e){if(this.usePackedBinaryOp(t,e))return this.packedBinaryOp(t,e,"\n  vec4 resultSign = sign(a) * sign(b);\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  ivec4 result = ia / ib;\n  ivec4 amodb = ia - ib * result;\n  \n  // Vectorize INT_DIV\n  // if (resultSign < 0.0 && amodb != 0) result -= 1;\n  // return float(result);\n  return vec4(result -\n     ivec4(lessThan(resultSign, vec4(0.0))) * ivec4(notEqual(amodb, ivec4(0))));\n","int32");var n=new bn("\n  float resultSign = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  int result = ia / ib;\n  int amodb = ia - ib * result;\n\n  if (resultSign < 0.0 && amodb != 0) {\n    result -= 1;\n  }\n  return float(result);\n",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,"int32");return this.compileAndRun(n,[t,e],r)},t.prototype.add=function(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,gn);var n=_t(t.dtype,e.dtype);if(this.usePackedBinaryOp(t,e))return this.packedBinaryOp(t,e,gn,n);var r=new bn(gn,t.shape,e.shape),i=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],i)},t.prototype.usePackedBinaryOp=function(t,e){if(!Lt.get("WEBGL_PACK_BINARY_OPERATIONS"))return!1;var n=pe(t.shape,e.shape);return!(n.length>4||fe(t.shape,n).length||fe(e.shape,n).length)},t.prototype.packedBinaryOp=function(t,e,n,r){var i=new wn(n,t.shape,e.shape),a=this.makePackedTensor(i.outputShape,r);return this.compileAndRun(i,[t,e],a)},t.prototype.complexSeparableBinaryOp=function(t,e,n){var r=this,i=this.texData.get(t.dataId),a=this.texData.get(e.dataId),o=[[i.complexTensors.real,a.complexTensors.real],[i.complexTensors.imag,a.complexTensors.imag]].map(function(i){var a=i[0],o=i[1],s=new bn(n,t.shape,e.shape),u=r.makeOutputArray(s.outputShape,_t(a.dtype,o.dtype)),c=r.makeComplexComponentTensorHandle(t,a),l=r.makeComplexComponentTensorHandle(e,o);return r.compileAndRun(s,[c,l],u)}),s=o[0],u=o[1],c=this.complex(s,u);return s.dispose(),u.dispose(),c},t.prototype.makeComplexComponentTensorHandle=function(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}},t.prototype.addN=function(t){for(var e=t[0],n=1;n<t.length;n++)e=this.add(e,t[n]);return e},t.prototype.subtract=function(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,yn);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);var n=_t(t.dtype,e.dtype);if(this.usePackedBinaryOp(t,e))return this.packedBinaryOp(t,e,yn,t.dtype);var r=new bn(yn,t.shape,e.shape),i=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],i)},t.prototype.pow=function(t,e){var n=this.usePackedBinaryOp(t,e),r=n?new wn("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n  \n  return result;\n",t.shape,e.shape):new bn("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),i=_t(t.dtype,e.dtype),a=n?this.makePackedTensor(r.outputShape,i):this.makeOutputArray(r.outputShape,i),o=r.getCustomSetupFunc();return this.compileAndRun(r,[t,e],a,o)},t.prototype.ceil=function(t){var e=new oa(t.shape,"return ceil(x);");return this.compileAndRun(e,[t])},t.prototype.floor=function(t){var e=new oa(t.shape,"return floor(x);");return this.compileAndRun(e,[t])},t.prototype.sign=function(t){var e=new oa(t.shape,"\n  if (isNaN(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])},t.prototype.round=function(t){var e=new oa(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])},t.prototype.exp=function(t){var e=new oa(t.shape,"return exp(x);");return this.compileAndRun(e,[t])},t.prototype.expm1=function(t){var e=new oa(t.shape,"return exp(x) - 1.0;");return this.compileAndRun(e,[t])},t.prototype.log=function(t){var e=new oa(t.shape,"if (x < 0.0) return NAN;\n  return log(x);"),n=e.getCustomSetupFunc();return this.compileAndRun(e,[t],null,n)},t.prototype.log1p=function(t){var e=new oa(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])},t.prototype.sqrt=function(t){var e=new oa(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])},t.prototype.rsqrt=function(t){var e=new oa(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])},t.prototype.square=function(t){var e=new oa(t.shape,"return x * x;");return this.compileAndRun(e,[t])},t.prototype.reciprocal=function(t){var e=new oa(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])},t.prototype.relu=function(t){var e=new oa(t.shape,ua);return this.compileAndRun(e,[t])},t.prototype.prelu=function(t,e){var n=new bn("return (a < 0.) ? b * a : a;",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.elu=function(t){var e=new oa(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])},t.prototype.eluDer=function(t,e){var n=new bn("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.selu=function(t){var e=new oa(t.shape,ca);return this.compileAndRun(e,[t])},t.prototype.int=function(t){var e=new oa(t.shape,"return float(int(x));"),n=this.makeOutputArray(e.outputShape,"int32");return this.compileAndRun(e,[t],n)},t.prototype.clip=function(t,e,n){var r,i=(r=Lt.get("WEBGL_PACK_CLIP")?new xn(t.shape):new _n(t.shape)).getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,i)},t.prototype.abs=function(t){var e=new oa(t.shape,"return abs(x);");return this.compileAndRun(e,[t])},t.prototype.complexAbs=function(t){var e=this.texData.get(t.dataId),n=new En(t.shape),r=[this.makeComplexComponentTensorHandle(t,e.complexTensors.real),this.makeComplexComponentTensorHandle(t,e.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(t){var e=new oa(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])},t.prototype.softplus=function(t){var e=new oa(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])},t.prototype.sin=function(t){var e=new oa(t.shape,la);return this.compileAndRun(e,[t])},t.prototype.cos=function(t){var e=new oa(t.shape,fa);return this.compileAndRun(e,[t])},t.prototype.tan=function(t){var e=new oa(t.shape,"return tan(x);");return this.compileAndRun(e,[t])},t.prototype.asin=function(t){var e=new oa(t.shape,"return asin(x);");return this.compileAndRun(e,[t])},t.prototype.acos=function(t){var e=new oa(t.shape,"return acos(x);");return this.compileAndRun(e,[t])},t.prototype.atan=function(t){var e=new oa(t.shape,ha);return this.compileAndRun(e,[t])},t.prototype.atan2=function(t,e){var n=new bn("\n  if (isNaN(a)) return a;\n  if (isNaN(b)) return b;\n\n  return atan(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.sinh=function(t){var e=new oa(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])},t.prototype.cosh=function(t){var e=new oa(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])},t.prototype.tanh=function(t){var e=new oa(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])},t.prototype.asinh=function(t){var e=new oa(t.shape,"return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])},t.prototype.acosh=function(t){var e=new oa(t.shape,pa),n=e.getCustomSetupFunc();return this.compileAndRun(e,[t],null,n)},t.prototype.atanh=function(t){var e=new oa(t.shape,da),n=e.getCustomSetupFunc();return this.compileAndRun(e,[t],null,n)},t.prototype.erf=function(t){var e=new oa(t.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float t = 1.0 / (1.0 + p * x);\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\n');return this.compileAndRun(e,[t])},t.prototype.step=function(t,e){var n=new oa(t.shape,function(t){return void 0===t&&(t=0),sa+"\n    return x > 0.0 ? 1.0 : float("+t+");\n  "}(e));return this.compileAndRun(n,[t])},t.prototype.conv2dWithIm2Row=function(t,e,n){var r=n.filterWidth,i=n.filterHeight,a=n.inChannels,o=n.outWidth,s=n.outHeight,u=r*i*a,c=s*o,l=[u,c],f=t.squeeze([0]),h=e.reshape([u,-1]),p=new ki(l,f.shape,n),d=this.compileAndRun(p,[f]),m=new Ri(d.shape,h.shape,[c,n.outChannels],!0,!1);return this.compileAndRun(m,[d,h]).reshape([1,s,o,n.outChannels])},t.prototype.conv2d=function(t,e,n){if(Lt.get("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);var r=new Pn(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerInput=function(t,e,n){var r=new In(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerFilter=function(t,e,n){var r=new Nn(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2D=function(t,e,n){var r;return Lt.get("WEBGL_PACK_DEPTHWISECONV")&&1===n.dilationWidth&&1===n.dilationHeight&&n.padInfo.left<=1&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Dn(n),this.compileAndRun(r,[t,e],this.makePackedTensor(n.outShape,t.dtype))):(r=new Rn(n),this.compileAndRun(r,[t,e]))},t.prototype.depthwiseConv2DDerInput=function(t,e,n){var r=new Cn(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){var r=new An(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3d=function(t,e,n){var r=new Tn(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerInput=function(t,e,n){var r=new kn(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerFilter=function(t,e,n){var r=new On(n);return this.compileAndRun(r,[t,e])},t.prototype.maxPool=function(t,e){var n=new zi(e,"max",!1),r=this.makeOutputArray(n.outputShape,t.dtype);return this.compileAndRun(n,[t],r)},t.prototype.avgPool=function(t,e){var n=new zi(e,"avg",!1),r=this.makeOutputArray(n.outputShape,"float32");return this.compileAndRun(n,[t],r)},t.prototype.maxPoolBackprop=function(t,e,n,r){var i=new zi(r,"max",!0),a=this.compileAndRun(i,[e]),o=new Pi(r),s=this.makeOutputArray(o.outputShape,e.dtype),u=this.compileAndRun(o,[t,a],s);return a.dispose(),u},t.prototype.avgPoolBackprop=function(t,e,n){var r=new ln(n),i=this.makeOutputArray(r.outputShape,e.dtype);return this.compileAndRun(r,[t],i)},t.prototype.cast=function(t,e){return Ze(t,e,this)},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),i=0,a=0;a<t.rank;a++)a!==e&&(r[i++]=t.shape[a]);var o=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)o[e]=a,u[a]=this.slice(t,o,s).reshape(r);return u},t.prototype.reshape=function(t,e){return this.texData.get(t.dataId).isPacked&&!ni(t.shape,e)?this.packedReshape(t,e):Qe(t,e)},t.prototype.resizeBilinear=function(t,e,n,r){var i=new Wi(t.shape,e,n,r);return this.compileAndRun(i,[t])},t.prototype.resizeBilinearBackprop=function(t,e,n){var r=new Vi(t,e,n);return this.compileAndRun(r,[t])},t.prototype.resizeNearestNeighbor=function(t,e,n,r){var i=new $i(t.shape,e,n,r);return this.compileAndRun(i,[t])},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){var r=new qi(t,e,n);return this.compileAndRun(r,[t])},t.prototype.multinomial=function(t,e,n,r){var i=e?t:Ce(t),a=i.shape[0],o=i.shape[1],s=new Di(a,o,n),u=this.makeOutputArray(s.outputShape,"int32"),c=s.getCustomSetupFunc(r);return this.compileAndRun(s,[i],u,c)},t.prototype.oneHot=function(t,e,n,r){var i=new Mi(t.size,e,n,r);return this.compileAndRun(i,[t])},t.prototype.nonMaxSuppression=function(t,e,n,r,i){return Zt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),an(t.dataSync(),e.dataSync(),n,r,i)},t.prototype.cropAndResize=function(t,e,n,r,i,a){var o=new zn(t.shape,e.shape,r,i,a);return this.compileAndRun(o,[t,e,n])},t.prototype.depthToSpace=function(t,e,n){b(e>1,"blockSize should be > 1 for depthToSpace, but was: "+e);var r=t.shape[0],i=("NHWC"===n?t.shape[1]:t.shape[2])*e,a=("NHWC"===n?t.shape[2]:t.shape[3])*e,o=("NHWC"===n?t.shape[3]:t.shape[1])/(e*e),s=new hr("NHWC"===n?[r,i,a,o]:[r,o,i,a],e,n);return this.compileAndRun(s,[t])},t.prototype.split=function(t,e,n){return sn(t,e,n)},t.prototype.scatterND=function(t,e,n){var r=be(0,t,n),i=r.sliceRank,a=r.numUpdates,o=r.sliceSize,s=r.strides,u=r.outputSize,c=[u/o,o],l=t.reshape([a,i]),f=e.reshape([a,o]);if(0===u)return Qe(Me([]),n);var h=je(0),p=new Ki(a,i,l.rank,f.rank,s,c);return this.compileAndRun(p,[f,l,h]).reshape(n)},t.prototype.sparseToDense=function(t,e,n,r){var i=be(0,t,n),a=i.sliceRank,o=i.numUpdates,s=i.strides,u=i.outputSize,c=new Ki(o,a,t.rank,e.rank,s,[u,1],!1);return this.compileAndRun(c,[e,t,r]).reshape(n)},t.prototype.fft=function(t){return this.fftImpl(t,!1)},t.prototype.ifft=function(t){return this.fftImpl(t,!0)},t.prototype.fftImpl=function(t,e){var n=this.texData.get(t.dataId),r=new gr(dr,t.shape,e),i=new gr(mr,t.shape,e),a=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag)],o=this.compileAndRun(r,a),s=this.compileAndRun(i,a),u=this.complex(o,s).as2D(t.shape[0],t.shape[1]);return o.dispose(),s.dispose(),u},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],i=me(t,e),a=i[0],o=i[1],s=i[2],u=i[3],c=e.reshape([o,r]),l=t.reshape([t.size/s,s]),f=new br(r,u,[o,s]);return this.compileAndRun(f,[l,c]).reshape(a)},t.prototype.makeOutputArray=function(t,e){return ft.make(t,{},e)},t.prototype.makePackedTensor=function(t,e){var n=ft.make(t,{},e);return this.texData.get(n.dataId).isPacked=!0,n},t.prototype.unpackTensor=function(t){var e=new ma(t.shape);return this.compileAndRun(e,[t],ft.make(e.outputShape,{},t.dtype))},t.prototype.packedReshape=function(t,e){var n=t.reshape([Zr(t.shape)].concat(Qr(t.shape))),r=[Zr(e)].concat(Qr(e)),i=new Ui(r,n.shape);return this.compileAndRun(i,[n]).reshape(e)},t.prototype.compileAndRun=function(t,e,n,r,i){var a=this;if(void 0===i&&(i=!0),null==n&&(n=t.usesPackedTextures?this.makePackedTensor(t.outputShape,e[0].dtype):this.makeOutputArray(t.outputShape,e[0].dtype)),0===n.size)return this.texData.get(n.dataId).values=R(n.dtype,0),n;var o=e.map(function(e){if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var n=a.texData.get(e.dataId);if(null==n.texture){if(!t.usesPackedTextures&&E(e.shape)<=Lt.get("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:a.readSync(e.dataId)};t.usesPackedTextures&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.usesPackedTextures){var r=void 0,i=void 0;n.isPacked?(r=new ma(e.shape),i=a.compileAndRun(r,[e],ft.make(r.outputShape,{},e.dtype))):(r=new Bi(e.shape),i=a.compileAndRun(r,[e],a.makePackedTensor(e.shape,e.dtype))),n=a.texData.get(i.dataId),e=i}else if(n.isPacked&&!ni(n.shape,e.shape)){a.delayedStorage=!1;var o=e.dataSync();a.delayedStorage=!0,e=ft.make(e.shape,{values:o},e.dtype),(n=a.texData.get(e.dataId)).isPacked=!0}return a.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(n.dataId);var s,u={shape:n.shape,texData:this.texData.get(n.dataId),isUniform:!1},c=function(t,e,n){var r="";e.concat(n).forEach(function(t){var e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=t.shape+"_"+n+"_"+e});var i=t.userCode;return t.constructor.name+"_"+r+"_"+i}(t,o,u),l=this.getAndSaveBinary(c,function(){return function(t,e,n,r){for(var i=e.userCode,a=n.map(function(t,n){var r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),o=a.map(function(t){return t.shapeInfo}),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Xn(a,s,i,e.usesPackedTextures),c=t.createProgram(u),l={},f=0;f<e.variableNames.length;f++){var h=e.variableNames[f];l[h]=t.getUniformLocation(c,h,!1),l["offset"+h]=t.getUniformLocation(c,"offset"+h,!1)}return{program:e,source:u,webGLProgram:c,uniformLocations:l,gpgpu:t,inShapeInfos:o,outShapeInfo:s}}(a.gpgpu,t,o,u)}),f=null!=this.activeTimers;f&&(s=this.startTimer()),function(t,e,n,r){Oi(t.inShapeInfos,e),Oi([t.outShapeInfo],[n]);var i=n.texData.texture,a=n.texData.texShape,o=t.gpgpu;n.texData.isPacked?o.setOutputPackedMatrixTexture(i,a[0],a[1]):o.setOutputMatrixTexture(i,a[0],a[1]),o.setProgram(t.webGLProgram),e.forEach(function(e,n){var r=t.program.variableNames[n],i=t.uniformLocations[r],a=t.uniformLocations["offset"+r];if(null!=i)if(e.isUniform)if(1===E(e.shape))o.gl.uniform1f(i,e.uniformValues[0]);else{var s=e.uniformValues;s instanceof Float32Array||(s=new Float32Array(s)),o.gl.uniform1fv(i,s)}else null!=e.texData.slice&&null!=a&&o.gl.uniform1i(a,e.texData.slice.flatOffset),o.setInputMatrixTexture(e.texData.texture,i,n)}),null!=r&&r(o,t.webGLProgram),o.executeProgram()}(l,o,u,r);var h=1024*Lt.get("WEBGL_NUM_MB_BEFORE_PAGING");if(i&&this.numBytesInGPU>h)for(var p=this.numBytesInGPU-h;p>0&&this.lruDataGPU.length>0;){var d=this.lruDataGPU.shift(),m=this.texData.get(d),g=m.shape,y=m.dtype;p-=this.computeBytes(g,y),this.read(d)}return f&&(s=this.endTimer(s),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(s)})),Lt.get("WEBGL_LAZILY_UNPACK")||!this.texData.get(n.dataId).isPacked||t.isPackShader?n:this.unpackTensor(n)},t.prototype.getAndSaveBinary=function(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){if(!this.disposed){for(var t in this.binaryCache)this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram);this.textureManager.dispose(),this.canvas.remove(),null!=this.fromPixels2DContext&&this.fromPixels2DContext.canvas.remove(),this.gpgpuCreatedLocally&&this.gpgpu.dispose(),this.disposed=!0}},t.prototype.floatPrecision=function(){var t=this;return Kt(function(){var e=Lt.get("DEBUG");Lt.set("DEBUG",!1);var n=t.abs(je(1e-8)).get();return Lt.set("DEBUG",e),n>0?32:16})},t.prototype.uploadToGPU=function(t){var e,n=this.texData.get(t),r=n.shape,i=n.values,a=n.texture,o=n.usage,s=n.isPacked;if(null==a){var u,c=null!=this.activeTimers;c&&(u=performance.now());var l=ti(r,s);n.texShape=l;var f=this.acquireTexture(t,l,o,s);if(n.texture=f,null!=i){if(s){var h=Zr(r),p=1,d=1;r.length&&(p=(e=Qr(r))[0],d=e[1]),this.gpgpu.uploadMatrixToPackedTexture(f,h,p,d,l[0],l[1],co(i))}else this.gpgpu.uploadMatrixToTexture(f,l[0],l[1],co(i));n.values=null,c&&(this.uploadWaitMs+=performance.now()-u)}}else Lt.get("WEBGL_NUM_MB_BEFORE_PAGING")<Number.POSITIVE_INFINITY&&this.lruDataGPU.indexOf(t)>=0&&(this.lruDataGPU.splice(this.lruDataGPU.indexOf(t),1),this.lruDataGPU.push(t))},t.prototype.convertAndCacheOnCPU=function(t,e){var n=this.delayedStorage,r=this.texData.get(t),i=r.texture,a=r.texShape,o=r.dtype,s=r.usage,u=r.isPacked;return n&&null!=i&&(this.releaseTexture(t,i,a,s,u),r.texture=null,r.texShape=null,r.isPacked=!1),r.usage=Bn.UPLOAD,null!=e&&(r.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){for(var n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length),r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}throw new Error("Unknown dtype "+e)}(e,o)),r.values},t.prototype.releaseTexture=function(t,e,n,r,i){var a=this.texData.get(t),o=a.shape,s=a.dtype;if(Lt.get("WEBGL_NUM_MB_BEFORE_PAGING")<Number.POSITIVE_INFINITY){var u=this.lruDataGPU.indexOf(t);u>=0&&this.lruDataGPU.splice(u,1)}this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(e,n,r,i)},t.prototype.acquireTexture=function(t,e,n,r){var i=this.texData.get(t),a=i.shape,o=i.dtype;return Lt.get("WEBGL_NUM_MB_BEFORE_PAGING")<Number.POSITIVE_INFINITY&&this.lruDataGPU.push(t),this.numBytesInGPU+=this.computeBytes(a,o),this.textureManager.acquireTexture(e,n,r)},t.prototype.computeBytes=function(t,e){return E(t)*z(e)},t}();function co(t){return t instanceof Float32Array?t:new Float32Array(t)}Lt.get("IS_BROWSER")&&Lt.registerBackend("webgl",function(){return new uo},2,lt);var lo=Ae({abs_:function(t){var e=Oe(t,"x","abs");return"complex64"===e.dtype?Lt.engine.runKernel(function(t){return t.complexAbs(e)},{$x:e}):Lt.engine.runKernel(function(t){return t.abs(e)},{$x:e},function(t){return{$x:function(){return t.mulStrict(e.toFloat().step(-1))}}})}}),fo=Ae({acos_:function(t){var e=Oe(t,"x","acos");return Lt.engine.runKernel(function(t){return t.acos(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(je(1).sub(e.toFloat().square()).sqrt()).neg()}}})}}),ho=Ae({acosh_:function(t){var e=Oe(t,"x","acosh");return Lt.engine.runKernel(function(t){return t.acosh(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(e.toFloat().square().sub(1).sqrt())}}})}}),po=Ae({asin_:function(t){var e=Oe(t,"x","asin");return Lt.engine.runKernel(function(t){return t.asin(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(je(1).sub(e.toFloat().square()).sqrt())}}})}}),mo=Ae({asinh_:function(t){var e=Oe(t,"x","asinh");return Lt.engine.runKernel(function(t){return t.asinh(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(je(1).add(e.toFloat().square()).sqrt())}}})}}),go=Ae({atan_:function(t){var e=Oe(t,"x","atan");return Lt.engine.runKernel(function(t){return t.atan(e)},{$x:e},function(t){return{$x:function(){return t.div(e.toFloat().square().add(1))}}})}}),yo=Ae({atanh_:function(t){var e=Oe(t,"x","atanh");return Lt.engine.runKernel(function(t){return t.atanh(e)},{$x:e},function(t){return{$x:function(){return t.div(je(1).sub(e.toFloat().square()))}}})}}),vo=Ae({ceil_:function(t){var e=Oe(t,"x","ceil");return Lt.engine.runKernel(function(t){return t.ceil(e)},{$x:e},function(t){return{$x:function(){return Xe(t)}}})}}),bo=Ae({clipByValue_:function(t,e,n){var r=Oe(t,"x","clipByValue");return b(e<=n,"Error in clip: min ("+e+") must be less than or equal to max ("+n+")."),Lt.engine.runKernel(function(t){return t.clip(r,e,n)},{$x:r},function(t){return{$x:function(){return t.where(r.greaterEqual(e).logicalAnd(r.lessEqual(n)),Xe(t))}}})}}),wo=Ae({cos_:function(t){var e=Oe(t,"x","cos");return Lt.engine.runKernel(function(t){return t.cos(e)},{$x:e},function(t){return{$x:function(){return e.toFloat().sin().neg().mulStrict(t)}}})}}),_o=Ae({cosh_:function(t){var e=Oe(t,"x","cosh");return Lt.engine.runKernel(function(t){return t.cosh(e)},{$x:e},function(t){return{$x:function(){return e.toFloat().sinh().mulStrict(t)}}})}}),xo=Ae({erf_:function(t){var e=Oe(t,"x","erf");return b("int32"===e.dtype||"float32"===e.dtype,"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=e.toFloat()),Lt.engine.runKernel(function(t){return t.erf(e)},{$x:e},function(t){return{$x:function(){return t.mul(e.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),Eo=Ae({exp_:function(t){var e=Oe(t,"x","exp");return Lt.engine.runKernel(function(t,n){return n(t.exp(e))},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mulStrict(n)}}})}}),So=Ae({expm1_:function(t){var e=Oe(t,"x","expm1");return Lt.engine.runKernel(function(t){return t.expm1(e)},{$x:e},function(t){return{$x:function(){return t.mulStrict(e.exp())}}})}}),No=Ae({floor_:function(t){var e=Oe(t,"x","floor");return Lt.engine.runKernel(function(t){return t.floor(e)},{$x:e},function(t){return{$x:function(){return Xe(t)}}})}}),Io=Ae({log_:function(t){var e=Oe(t,"x","log");return Lt.engine.runKernel(function(t){return t.log(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(e.toFloat())}}})}}),Oo=Ae({log1p_:function(t){var e=Oe(t,"x","log1p");return Lt.engine.runKernel(function(t){return t.log1p(e)},{$x:e},function(t){return{$x:function(){return t.div(e.add(1))}}})}}),ko=Ae({logSigmoid_:function(t){var e=Oe(t,"x","logSigmoid");return Lt.engine.runKernel(function(t){return t.softplus(e.neg()).neg()},{$x:e},function(t){return{$x:function(){return t.mulStrict(e.neg().sigmoid())}}})}}),Ao=Ae({neg_:function(t){var e=Oe(t,"x","neg");return Lt.engine.runKernel(function(t){return t.neg(e)},{$x:e},function(t){return{$x:function(){return t.neg()}}})}}),Co=Ae({reciprocal_:function(t){var e=Oe(t,"x","reciprocal");return Lt.engine.runKernel(function(t){return t.reciprocal(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(e.square().neg())}}})}}),Po=Ae({round_:function(t){var e=Oe(t,"x","round");return Lt.engine.runKernel(function(t){return t.round(e)},{$x:e},function(t){return{$x:function(){return Xe(t)}}})}}),To=Ae({rsqrt_:function(t){var e=Oe(t,"x","rsqrt");return Lt.engine.runKernel(function(t){return t.rsqrt(e)},{$x:e},function(t){return{$x:function(){return t.div(e.pow(1.5).mul(2)).neg()}}})}}),Ro=Ae({sigmoid_:function(t){var e=Oe(t,"x","sigmoid");return Lt.engine.runKernel(function(t,n){return n(t.sigmoid(e))},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.mul(je(1).sub(n)))}}})}}),Do=Ae({sign_:function(t){var e=Oe(t,"x","sign");return Lt.engine.runKernel(function(t){return t.sign(e)},{$x:e},function(t){return{$x:function(){return Xe(t)}}})}}),Mo=Ae({sin_:function(t){var e=Oe(t,"x","sin");return Lt.engine.runKernel(function(t){return t.sin(e)},{$x:e},function(t){return{$x:function(){return e.toFloat().cos().mulStrict(t)}}})}}),jo=Ae({sinh_:function(t){var e=Oe(t,"x","sinh");return Lt.engine.runKernel(function(t){return t.sinh(e)},{$x:e},function(t){return{$x:function(){return e.toFloat().cosh().mulStrict(t)}}})}}),Bo=Ae({softplus_:function(t){var e=Oe(t,"x","softplus");return Lt.engine.runKernel(function(t){return t.softplus(e)},{$x:e},function(t){return{$x:function(){return t.mulStrict(e.sigmoid())}}})}}),Lo=Ae({sqrt_:function(t){var e=Oe(t,"x","sqrt");return Lt.engine.runKernel(function(t){return t.sqrt(e)},{$x:e},function(t){return{$x:function(){return t.div(e.toFloat().sqrt().mul(2))}}})}}),zo=Ae({square_:function(t){var e=Oe(t,"x","square");return Lt.engine.runKernel(function(t){return t.square(e)},{$x:e},function(t){return{$x:function(){return t.mul(e.toFloat().mul(2))}}})}}),Fo=Ae({step_:function(t,e){void 0===e&&(e=0);var n=Oe(t,"x","step");return Lt.engine.runKernel(function(t){return t.step(n,e)},{$x:n},function(t){return{$x:function(){return Xe(t)}}})}}),Uo=Ae({tan_:function(t){var e=Oe(t,"x","tan");return Lt.engine.runKernel(function(t){return t.tan(e)},{$x:e},function(t){return{$x:function(){return t.divStrict(e.cos().square())}}})}}),Vo=Ae({tanh_:function(t){var e=Oe(t,"x","tanh");return Lt.engine.runKernel(function(t,n){return n(t.tanh(e))},{$x:e},function(t,e){var n=e[0];return{$x:function(){return je(1).sub(n.square()).mulStrict(t)}}})}});function Wo(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}var qo=Ae({batchNormalization2d_:function(t,e,n,r,i,a){void 0===r&&(r=.001);var o,s,u=Oe(t,"x","batchNormalization"),c=Oe(e,"mean","batchNormalization"),l=Oe(n,"variance","batchNormalization");return null!=i&&(o=Oe(i,"scale","batchNormalization")),null!=a&&(s=Oe(a,"offset","batchNormalization")),b(2===u.rank,"Error in batchNormalization3D: x must be rank 3 but got rank "+u.rank+"."),b(2===c.rank||1===c.rank,"Error in batchNormalization2D: mean must be rank 2 or rank 1 but got rank "+c.rank+"."),b(2===l.rank||1===l.rank,"Error in batchNormalization2D: variance must be rank 2 or rank 1 but got rank "+l.rank+"."),null!=o&&b(2===o.rank||1===o.rank,"Error in batchNormalization2D: scale must be rank 2 or rank 1 but got rank "+o.rank+"."),null!=s&&b(2===s.rank||1===s.rank,"Error in batchNormalization2D: offset must be rank 2 or rank 1 but got rank "+s.rank+"."),Ko(u,c,l,r,o,s)}}),$o=Ae({batchNormalization3d_:function(t,e,n,r,i,a){void 0===r&&(r=.001);var o,s,u=Oe(t,"x","batchNormalization"),c=Oe(e,"mean","batchNormalization"),l=Oe(n,"variance","batchNormalization");return null!=i&&(o=Oe(i,"scale","batchNormalization")),null!=a&&(s=Oe(a,"offset","batchNormalization")),b(3===u.rank,"Error in batchNormalization3D: x must be rank 3 but got rank "+u.rank+"."),b(3===c.rank||1===c.rank,"Error in batchNormalization3D: mean must be rank 3 or rank 1 but got rank "+c.rank+"."),b(3===l.rank||1===l.rank,"Error in batchNormalization3D: variance must be rank 3 or rank 1 but got rank "+l.rank+"."),null!=o&&b(3===o.rank||1===o.rank,"Error in batchNormalization3D: scale must be rank 3 or rank 1 but got rank "+o.rank+"."),null!=s&&b(3===s.rank||1===s.rank,"Error in batchNormalization3D: offset must be rank 3 or rank 1 but got rank "+s.rank+"."),Ko(u,c,l,r,o,s)}}),Ho=Ae({batchNormalization4d_:function(t,e,n,r,i,a){void 0===r&&(r=.001);var o,s,u=Oe(t,"x","batchNormalization"),c=Oe(e,"mean","batchNormalization"),l=Oe(n,"variance","batchNormalization");return null!=i&&(o=Oe(i,"scale","batchNormalization")),null!=a&&(s=Oe(a,"offset","batchNormalization")),b(4===u.rank,"Error in batchNormalization4D: x must be rank 4 but got rank "+u.rank+"."),b(4===c.rank||1===c.rank,"Error in batchNormalization4D: mean must be rank 4 or rank 1 but got rank "+c.rank+"."),b(4===l.rank||1===l.rank,"Error in batchNormalization4D: variance must be rank 4 or rank 1 but got rank "+l.rank+"."),null!=o&&b(4===o.rank||1===o.rank,"Error in batchNormalization4D: scale must be rank 4 or rank 1 but got rank "+o.rank+"."),null!=s&&b(4===s.rank||1===s.rank,"Error in batchNormalization4D: offset must be rank 4 or rank 1 but got rank "+s.rank+"."),Ko(u,c,l,r,o,s)}}),Ko=Ae({batchNormalization_:function(t,e,n,r,i,a){void 0===r&&(r=.001);var o,s,u,c=Oe(t,"x","batchNormalization"),l=Oe(e,"mean","batchNormalization"),f=Oe(n,"variance","batchNormalization");return null!=i&&(o=Oe(i,"scale","batchNormalization")),null!=a&&(s=Oe(a,"offset","batchNormalization")),b(l.rank===f.rank,"Batch normalization gradient requires mean and variance to have equal ranks."),b(null==s||l.rank===s.rank,"Batch normalization gradient requires mean and offset to have equal ranks."),b(null==o||l.rank===o.rank,"Batch normalization gradient requires mean and scale to have equal ranks."),u=0===c.rank||1===c.rank?c.as4D(1,1,1,c.size):2===c.rank?c.as4D(1,1,c.shape[0],c.shape[1]):3===c.rank?c.as4D(1,c.shape[0],c.shape[1],c.shape[2]):c,Lt.engine.runKernel(function(t){return t.batchNormalization(u,Wo(l),Wo(f),r,Wo(o),Wo(s))},{$x:c,$mean:l,$variance:f,$scale:o,$offset:s},function(t){var e=null==o?je(1):o,n=he(l.shape,u.shape),i=[];if(1===l.rank){for(var a=0;a<u.shape.length-1;++a)i.push(u.shape[a]);i.push(1)}var s=c.sub(l),h=t.mul(e),p=To(f.add(je(r))),d=p.mul(p).mul(p).mul(je(-.5));return{$x:function(){return 1===l.rank?t.mul(ro(p.as4D(1,1,1,l.shape[0]),i)).mul(e).reshape(c.shape):t.mul(p).mul(e).reshape(c.shape)},$mean:function(){var t=p.mul(je(-1)).mul(h);return 1===l.rank&&(t=t.sum(n)),t.reshape(l.shape)},$variance:function(){var t=d.mul(s).mul(h);return 1===l.rank&&(t=t.sum(n)),t.reshape(l.shape)},$scale:function(){var e=s.mul(p),r=t.mul(e);return 1===l.rank&&(r=r.sum(n)),r.reshape(l.shape)},$offset:function(){var e=t;return 1===l.rank&&(e=e.sum(n)),e.reshape(l.shape)}}}).reshape(c.shape)}});function Go(t,e,n,r,i,a,o){void 0===o&&(o="channelsLast");var s,u=Jo(e),c=u[0],l=u[1];if("channelsLast"===o)s=[c,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);s=[c,l,t[1],t[1]]}return Xo(t,s,n,r,i,a,!1,o)}function Xo(t,e,n,r,i,a,o,s){void 0===o&&(o=!1),void 0===s&&(s="channelsLast");var u=[-1,-1,-1,-1],c=u[0],l=u[1],f=u[2],h=u[3];if("channelsLast"===s)c=t[0],l=t[1],f=t[2],h=t[3];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);c=t[0],h=t[1],l=t[2],f=t[3]}var p,d=e[0],m=e[1],g=e[3],y=Jo(n),v=y[0],w=y[1],_=Jo(r),x=_[0],E=_[1],S=Qo(d,x),I=Qo(m,E),O=function(t,e,n,r,i,a,o,s){var u,c,l;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};var f=function(t,e,n,r,i,a){null==i&&(i=function(t,e,n,r){void 0===r&&(r=1);var i=Qo(e,r);return Math.floor((t[0]*(n-1)-n+i)/2)}(t,e,r));var o=t[0],s=t[1],u=ts((o-e+2*i)/r+1,a);b(N(u),"The output # of rows ("+u+") must be an integer. Change the stride and/or zero pad parameters");var c=ts((s-e+2*i)/r+1,a);return b(N(c),"The output # of columns ("+c+") must be an integer. Change the stride and/or zero pad parameters"),[u,c,n]}([e,n,1],a,1,r,t,s);c=f[0],l=f[1]}else if("same"===t){var h=((c=Math.ceil(e/r))-1)*r+a-e,p=((l=Math.ceil(n/i))-1)*i+o-n,d=Math.floor(h/2),m=h-d,g=Math.floor(p/2);u={top:d,bottom:m,left:g,right:p-g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/r),l=Math.ceil((n-o+1)/i)}return{padInfo:u,outHeight:c,outWidth:l}}(i,l,f,v,w,S,I,a),k=O.padInfo,A=O.outHeight,C=O.outWidth,P=o?g*h:g;return"channelsFirst"===s?p=[c,P,A,C]:"channelsLast"===s&&(p=[c,A,C,P]),{batchSize:c,dataFormat:s,inHeight:l,inWidth:f,inChannels:h,outHeight:A,outWidth:C,outChannels:P,padInfo:k,strideHeight:v,strideWidth:w,filterHeight:d,filterWidth:m,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:x,dilationWidth:E,inShape:t,outShape:p,filterShape:e}}function Yo(t,e,n,r,i,a,o){void 0===a&&(a=!1),void 0===o&&(o="channelsLast");var s=[-1,-1,-1,-1,-1],u=s[0],c=s[1],l=s[2],f=s[3],h=s[4];if("channelsLast"===o)u=t[0],c=t[1],l=t[2],f=t[3],h=t[4];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);u=t[0],h=t[1],c=t[2],l=t[3],f=t[4]}var p,d=e[0],m=e[1],g=e[2],y=e[4],v=Zo(n),b=v[0],w=v[1],_=v[2],x=Zo(r),E=x[0],S=x[1],N=x[2],I=function(t,e,n,r,i,a,o,s,u,c){var l,f,h,p;if("same"===t){var d=((f=Math.ceil(e/i))-1)*i+s-e,m=((h=Math.ceil(n/a))-1)*a+u-n,g=((p=Math.ceil(r/o))-1)*o+c-r,y=Math.floor(d/2),v=d-y,b=Math.floor(m/2),w=m-b,_=Math.floor(g/2);l={top:b,bottom:w,left:_,right:g-_,front:y,back:v,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);l={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-s+1)/i),h=Math.ceil((n-u+1)/a),p=Math.ceil((r-c+1)/o)}return{padInfo:l,outDepth:f,outHeight:h,outWidth:p}}(i,c,l,f,b,w,_,Qo(d,E),Qo(m,S),Qo(g,N)),O=I.padInfo,k=I.outDepth,A=I.outHeight,C=I.outWidth,P=a?y*h:y;return"channelsFirst"===o?p=[u,P,k,A,C]:"channelsLast"===o&&(p=[u,k,A,C,P]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:f,inChannels:h,outDepth:k,outHeight:A,outWidth:C,outChannels:P,padInfo:O,strideDepth:b,strideHeight:w,strideWidth:_,filterDepth:d,filterHeight:m,filterWidth:g,dilationDepth:E,dilationHeight:S,dilationWidth:N,inShape:t,outShape:p,filterShape:e}}function Jo(t){return"number"==typeof t?[t,t]:t}function Zo(t){return"number"==typeof t?[t,t,t]:t}function Qo(t,e){return e<=1?t:t+(t-1)*(e-1)}function ts(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function es(t){var e=Jo(t),n=e[0],r=e[1];return 1===n&&1===r}function ns(t,e){return es(t)||es(e)}var rs=Ae({matMul_:function(t,e,n,r){var i;void 0===n&&(n=!1),void 0===r&&(r=!1);var a=Oe(t,"a","matMul"),o=Oe(e,"b","matMul");a=(i=Et(a,o))[0],o=i[1];var s=n?a.shape[a.rank-2]:a.shape[a.rank-1],u=r?o.shape[o.rank-1]:o.shape[o.rank-2],c=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?o.shape[o.rank-2]:o.shape[o.rank-1],f=a.shape.slice(0,-2),h=o.shape.slice(0,-2),p=E(f),d=E(h);b(a.rank>=2&&o.rank>=2&&a.rank===o.rank,"Error in matMul: inputs must have the same rank of at least 2, got ranks "+a.rank+" and "+o.rank+"."),b(S(f,h),"Error in matMul: outer dimensions ("+f+") and ("+h+") of Tensors with shapes "+a.shape+" and "+o.shape+" must match."),b(s===u,"Error in matMul: inner shapes ("+s+") and ("+u+") of Tensors with shapes "+a.shape+" and "+o.shape+" and transposeA="+n+" and transposeB="+r+" must match.");var m=a.shape.slice(0,-2).concat([c,l]),g=n?a.as3D(p,s,c):a.as3D(p,c,s),y=r?o.as3D(d,l,u):o.as3D(d,u,l);return Lt.engine.runKernel(function(t){return t.batchMatMul(g,y,n,r)},{$a:g,$b:y},function(t){return n||r?!n&&r?{$a:function(){return t.matMul(y,!1,!1)},$b:function(){return t.matMul(g,!0,!1)}}:n&&!r?{$a:function(){return y.matMul(t,!1,!0)},$b:function(){return g.matMul(t,!1,!1)}}:{$a:function(){return y.matMul(t,!0,!0)},$b:function(){return t.matMul(g,!0,!0)}}:{$a:function(){return t.matMul(y,!1,!0)},$b:function(){return g.matMul(t,!0,!1)}}}).reshape(m)}}),is=Ae({dot_:function(t,e){var n=Oe(t,"t1","dot"),r=Oe(e,"t2","dot");b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),"Error in dot: inputs must all be rank 1 or 2, but got ranks "+n.rank+" and "+r.rank+".");var i=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];return b(i===a,"Error in dot: inner dimensions of inputs must match, but got "+i+" and "+a+"."),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),as=Ae({outerProduct_:function(t,e){var n=Oe(t,"v1","outerProduct"),r=Oe(e,"v2","outerProduct");return b(1===n.rank&&1===r.rank,"Error in outerProduct: inputs must be rank 1, but got ranks "+n.rank+" and "+r.rank+"."),n.as2D(-1,1).matMul(r.as2D(1,-1))}});function os(t,e,n,r,i,a){b(t.length===e.rank,"Length of inShape ("+t.length+") and rank of dy ("+e.rank+") must match");var o=t,s=e,u=!1;3===e.rank&&(u=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]),o=[1,t[0],t[1],t[2]]);var c=o[3],l=s.shape[3];b(4===o.length,"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),b(4===s.rank,"Error in conv2dDerInput: dy must be rank 4, but got rank "+s.rank),b(4===n.rank,"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank),b(c===n.shape[2],"Error in conv2dDerInput: depth of input ("+c+") must match input depth for filter "+n.shape[2]+"."),b(l===n.shape[3],"Error in conv2dDerInput: depth of output ("+l+") must match output depth for filter "+n.shape[3]+"."),null!=a&&b(N(i),"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+i+".");var f=Xo(o,n.shape,r,1,i,a),h=Lt.engine.runKernel(function(t){return t.conv2dDerInput(s,n,f)},{dy4D:s,filter:n},function(t){return{dy4D:function(){return ls(t,n,r,i,"NHWC",1,a)},filter:function(){return hs(t,s,n.shape,r,i,a)}}});return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function ss(t,e,n,r,i,a){var o=t;3===t.rank&&(o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var s=e;3===s.rank&&(s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),b(4===o.rank,"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),b(4===s.rank,"Error in conv2dDerFilter: dy must be rank 4, but got shape "+s.shape+"."),b(4===n.length,"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."),b(o.shape[3]===n[2],"Error in conv2dDerFilter: depth of input "+o.shape[3]+") must match input depth in filter ("+n[2]+"."),b(s.shape[3]===n[3],"Error in conv2dDerFilter: depth of dy ("+s.shape[3]+") must match output depth for filter ("+n[3]+")."),null!=a&&b(N(i),"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+i+".");var u=Xo(o.shape,n,r,1,i,a);return Lt.engine.runKernel(function(t){return t.conv2dDerFilter(o,s,u)},{x4D:o,dy4D:s})}function us(t){var e=function(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}(t),n=e[0],r=e[1],i=e[2];return 1===n&&1===r&&1===i}var cs=Ae({conv1d_:function(t,e,n,r,i,a,o){void 0===i&&(i="NWC"),void 0===a&&(a=1);var s=Oe(t,"x","conv1d"),u=Oe(e,"filter","conv1d"),c=s,l=!1;2===s.rank&&(l=!0,c=s.as3D(1,s.shape[0],s.shape[1])),b(3===c.rank,"Error in conv1d: input must be rank 3, but got rank "+c.rank+"."),b(3===u.rank,"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=o&&b(N(r),"Error in conv1d: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+r+"."),b(c.shape[2]===u.shape[1],"Error in conv1d: depth of input ("+c.shape[2]+") must match input depth for filter "+u.shape[1]+"."),b(ns(n,a),"Error in conv1D: Either stride or dilation must be 1. Got stride "+n+" and dilation '"+a+"'"),b("NWC"===i,"Error in conv1d: got dataFormat of "+i+" but only NWC is currently supported.");var f=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),h=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),p=ls(h,f,[1,n],r,"NHWC",[1,a],o);return l?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),ls=Ae({conv2d_:function(t,e,n,r,i,a,o){void 0===i&&(i="NHWC"),void 0===a&&(a=[1,1]);var s=Oe(t,"x","conv2d"),u=Oe(e,"filter","conv2d"),c=s,l=!1;3===s.rank&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),b(4===c.rank,"Error in conv2d: input must be rank 4, but got rank "+c.rank+"."),b(4===u.rank,"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=o&&b(N(r),"Error in conv2d: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+r+"."),b(c.shape[3]===u.shape[2],"Error in conv2d: depth of input ("+c.shape[3]+") must match input depth for filter "+u.shape[2]+"."),b(ns(n,a),"Error in conv2D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+a+"'"),b("NHWC"===i,"Error in conv2d: got dataFormat of "+i+" but only NHWC is currently supported.");var f,h=Xo(c.shape,u.shape,n,a,r,o);if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)f=Lt.engine.runKernel(function(t){return t.conv2d(c,u,h)},{x:c,$filter:u},function(t){return b(es(a),"Error in gradient of conv2D: dilation rates greater than 1 are notyet supported in gradients. Got dilations '"+a+"'"),{x:function(){return os(c.shape,t,u,n,r)},$filter:function(){return ss(c,t,u.shape,n,r)}}});else{var p=c.reshape([-1,h.inChannels]),d=u.reshape([h.inChannels,h.outChannels]);f=rs(p,d).reshape(h.outShape)}return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}}),fs=Ae({conv3d_:function(t,e,n,r,i,a){void 0===i&&(i="NHWC"),void 0===a&&(a=[1,1,1]);var o=Oe(t,"x","conv3d"),s=Oe(e,"filter","conv3d"),u=o,c=!1;4===o.rank&&(c=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),b(5===u.rank,"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."),b(5===s.rank,"Error in conv3d: filter must be rank 5, but got rank "+s.rank+"."),b(u.shape[4]===s.shape[3],"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+s.shape[3]+"."),b(function(t,e){return us(t)||us(e)}(n,a),"Error in conv3D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+a+"'"),b("NHWC"===i,"Error in conv3d: got dataFormat of "+i+" but only NHWC is currently supported.");var l=Yo(u.shape,s.shape,n,a,r),f=Lt.engine.runKernel(function(t){return t.conv3d(u,s,l)},{x:u,$filter:s},function(t){return b(us(a),"Error in gradient of conv3D: dilation rates greater than 1 are notyet supported in gradients. Got dilations '"+a+"'"),{x:function(){return function(t,e,n,r,i){b(t.length===e.rank,"Length of inShape ("+t.length+") and rank of dy ("+e.rank+") must match");var a=t,o=e,s=!1;4===e.rank&&(s=!0,o=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]),a=[1,t[0],t[1],t[2],t[3]]);var u=a[4],c=o.shape[4];b(5===a.length,"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),b(5===o.rank,"Error in conv3dDerInput: dy must be rank 5, but got rank "+o.rank),b(5===n.rank,"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),b(u===n.shape[3],"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+n.shape[3]+"."),b(c===n.shape[4],"Error in conv3dDerInput: depth of output ("+c+") must match output depth for filter "+n.shape[4]+".");var l=Yo(a,n.shape,r,1,i),f=Lt.engine.runKernel(function(t){return t.conv3dDerInput(o,n,l)},{dy5D:o});return s?f.as4D(f.shape[1],f.shape[2],f.shape[3],f.shape[4]):f}(u.shape,t,s,n,r)},$filter:function(){return function(t,e,n,r,i){var a=t;4===t.rank&&(a=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]));var o=e;4===o.rank&&(o=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3])),b(5===a.rank,"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),b(5===o.rank,"Error in conv3dDerFilter: dy must be rank 5, but got shape "+o.shape+"."),b(5===n.length,"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),b(a.shape[4]===n[3],"Error in conv3dDerFilter: depth of input "+a.shape[4]+") must match input depth in filter ("+n[3]+"."),b(o.shape[4]===n[4],"Error in conv3dDerFilter: depth of dy ("+o.shape[4]+") must match output depth for filter ("+n[4]+").");var s=Yo(a.shape,n,r,1,i);return Lt.engine.runKernel(function(t){return t.conv3dDerFilter(a,o,s)},{x5D:a,dy5D:o})}(u,t,s.shape,n,r)}}});return c?f.as4D(f.shape[1],f.shape[2],f.shape[3],f.shape[4]):f}}),hs=Ae({conv2dDerFilter_:ss}),ps=Ae({depthwiseConv2d_:function(t,e,n,r,i,a,o){void 0===i&&(i="NHWC"),void 0===a&&(a=[1,1]);var s=Oe(t,"x","depthwiseConv2d"),u=Oe(e,"filter","depthwiseConv2d"),c=s,l=!1;3===s.rank&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),b(4===c.rank,"Error in depthwiseConv2d: input must be rank 4, but got rank "+c.rank+"."),b(4===u.rank,"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),b(c.shape[3]===u.shape[2],"Error in depthwiseConv2d: number of input channels ("+c.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."),null==a&&(a=[1,1]),b(ns(n,a),"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+a+"'"),null!=o&&b(N(r),"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+r+".");var f=Xo(c.shape,u.shape,n,a,r,o,!0),h=Lt.engine.runKernel(function(t){return t.depthwiseConv2D(c,u,f)},{x:c,$filter:u},function(t){return b(es(a),"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+a+"'"),{x:function(){return function(t,e,n,r){var i=e,a=!1;3===e.rank&&(a=!0,i=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var o=Lt.engine.runKernel(function(t){return t.depthwiseConv2DDerInput(i,n,r)},{dy4D:i});return a?o.as3D(o.shape[1],o.shape[2],o.shape[3]):o}(c.shape,t,u,f)},$filter:function(){return function(t,e,n,r){var i=t;3===t.rank&&(i=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var a=e;return 3===a.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),Lt.engine.runKernel(function(t){return t.depthwiseConv2DDerFilter(i,a,r)},{x4D:i,dy4D:a})}(c,t,u.shape,f)}}});return l?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}}),ds=Ae({separableConv2d_:function(t,e,n,r,i,a,o){void 0===a&&(a=[1,1]),void 0===o&&(o="NHWC");var s=Oe(t,"x","separableConv2d"),u=Oe(e,"depthwiseFilter","separableConv2d"),c=Oe(n,"pointwiseFilter","separableConv2d"),l=s,f=!1;if(3===s.rank&&(f=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");b(4===l.rank,"Error in separableConv2d: input must be rank 4, but got rank "+l.rank+"."),b(4===u.rank,"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."),b(4===c.rank,"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."),b(1===c.shape[0],"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+c.shape[0]+"."),b(1===c.shape[1],"Error in separableConv2d: the second dimension of pointwise filter  must be 1, but got "+c.shape[1]+".");var h=u.shape[2],p=u.shape[3];b(c.shape[2]===h*p,"Error in separableConv2d: the third dimension of pointwise filter must be "+h*p+", but got "+c.shape[2]+".");var d=ps(l,u,r,i,o,a),m=ls(d,c,1,"valid",o);return f?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),ms=Ae({conv2dTranspose_:function(t,e,n,r,i,a){return os(n,Oe(t,"x","conv2dTranspose"),Oe(e,"filter","conv2dTranspose"),r,i,a)}});var gs=Ae({reverse_:function(t,e){var n=Oe(t,"x","reverse");if(0===n.rank)return n.clone();var r=P(e,n.shape);return Lt.engine.runKernel(function(t){return t.reverse(n,r)},{$x:n},function(t){return{$x:function(){return t.reverse(r)}}}).reshapeAs(n)}}),ys=Ae({reverse1d_:function(t){var e=Oe(t,"x","reverse");return b(1===e.rank,"Error in reverse1D: x must be rank 1 but got\n             rank "+e.rank+"."),gs(e,0)}}),vs=Ae({reverse2d_:function(t,e){var n=Oe(t,"x","reverse");return b(2===n.rank,"Error in reverse2D: x must be rank 2 but got\n             rank "+n.rank+"."),gs(n,e)}}),bs=Ae({reverse3d_:function(t,e){var n=Oe(t,"x","reverse");return b(3===n.rank,"Error in reverse3D: x must be rank 3 but got\n             rank "+n.rank+"."),gs(n,e)}}),ws=Ae({reverse4d_:function(t,e){var n=Oe(t,"x","reverse");return b(4===n.rank,"Error in reverse4D: x must be rank 4 but got\n             rank "+n.rank+"."),gs(n,e)}});function _s(t,e,n,r,i,a){var o=Oe(t,"x","maxPool"),s=o,u=!1;3===o.rank&&(u=!0,s=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),null==r&&(r=[1,1]),b(4===s.rank,"Error in maxPool: input must be rank 4 but got rank "+s.rank+"."),b(ns(n,r),"Error in maxPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"),null!=a&&b(N(i),"Error in maxPool: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+i+".");var c=Go(s.shape,e,n,r,i,a),l=Lt.engine.runKernel(function(t,e){return e(t.maxPool(s,c))},{x:s},function(t,a){var o=a[0];return{x:function(){return function(t,e,n,r,i,a,o,s){var u=Oe(t,"dy","maxPoolBackprop"),c=Oe(e,"input","maxPoolBackprop"),l=Oe(n,"output","maxPoolBackprop");b(c.rank===u.rank,"Rank of input ("+c.rank+") does not match rank of dy ("+u.rank+")"),null==a&&(a=[1,1]),b(ns(i,a),"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+a+"'"),b(4===u.rank,"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),b(4===c.rank,"Error in maxPoolBackprop: input must be rank 4 but got rank "+c.rank+"."),null!=s&&b(N(o),"Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+o+".");var f=Go(c.shape,r,i,a,o,s);return Lt.engine.runKernel(function(t){return t.maxPoolBackprop(u,c,l,f)},{$dy:u,$input:c})}(t,s,o,e,n,r,i)}}});return u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}function xs(t,e,n,r,i,a){var o=Oe(t,"x","avgPool","float32");null==r&&(r=[1,1]),b(ns(n,r),"Error in avgPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'");var s=o,u=!1;3===o.rank&&(u=!0,s=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),b(4===s.rank,"Error in avgPool: x must be rank 4 but got rank "+s.rank+"."),null!=a&&b(N(i),"Error in avgPool: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+i+".");var c=Go(s.shape,e,n,r,i,a),l=Lt.engine.runKernel(function(t){return t.avgPool(s,c)},{x:s},function(t){return{x:function(){return function(t,e,n,r,i,a){var o=Oe(t,"dy","avgPoolBackprop"),s=Oe(e,"input","avgPoolBackprop");b(s.rank===o.rank,"Rank of input ("+s.rank+") does not match rank of dy ("+o.rank+")"),null==i&&(i=[1,1]),b(ns(r,i),"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+i+"'");var u=s,c=o,l=!1;3===s.rank&&(l=!0,u=s.as4D(1,s.shape[0],s.shape[1],s.shape[2]),c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),b(4===c.rank,"Error in avgPoolBackprop: dy must be rank 4 but got rank "+c.rank+"."),b(4===u.rank,"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+".");var f=Go(u.shape,n,r,i,a),h=Lt.engine.runKernel(function(t){return t.avgPoolBackprop(c,u,f)},{dy4D:c,input4D:u});return l?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}(t,s,e,n,r,i)}}});return l=l.cast(o.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}var Es=Ae({maxPool_:function(t,e,n,r,i){return _s(t,e,n,1,r,i)}}),Ss=Ae({avgPool_:function(t,e,n,r,i){return xs(t,e,n,1,r,i)}}),Ns=Ae({pool_:function(t,e,n,r,i,a){null==i&&(i=[1,1]),null==a&&(a=1),0===r&&(r="valid");var o=Oe(t,"x","maxPool"),s=o,u=!1;3===o.rank&&(u=!0,s=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),b(ns(a,i),"Error in pool: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'");var c,l=Go(s.shape,e,a,i,r),f=[l.dilationHeight,l.dilationWidth];c="same"===r?function(t,e){var n=t.map(function(t,n){return t+(t-1)*(e[n]-1)}).map(function(t){return t-1}),r=n.map(function(t){return Math.floor(t/2)}),i=n.map(function(t,e){return t-r[e]});return n.map(function(t,e){return[r[e],i[e]]})}([l.filterHeight,l.filterWidth],f):[[0,0],[0,0]];var h=1===f[0]&&1===f[1],p=function(t,e,n){var r=n.map(function(t){return t[0]}),i=n.map(function(t){return t[1]}),a=t.concat(r,i),o=e.map(function(t,e){return(t-a[e]%t)%t}),s=i.map(function(t,e){return t+o[e]});return[e.map(function(t,e){return[r[e],s[e]]}),e.map(function(t,e){return[0,o[e]]})]}([l.inHeight,l.inWidth],f,c),d=p[0],m=p[1],g=h?r:"valid",y=h?s:to(s,f,d),v=("avg"===n?function(){return xs(y,e,a,1,g)}:function(){return _s(y,e,a,1,g)})(),w=h?v:Ma(v,f,m);return u?w.as3D(w.shape[1],w.shape[2],w.shape[3]):w}});var Is=Ae({slice_:function(t,e,n){var r,i,a=Oe(t,"x","slice");if(0===a.rank)throw new Error("Slicing scalar is not possible");r="number"==typeof e?[e].concat(new Array(a.rank-1).fill(0)):e.length<a.rank?e.concat(new Array(a.rank-e.length).fill(0)):e.slice(),i=(i=null==n?new Array(a.rank).fill(-1):"number"==typeof n?[n].concat(new Array(a.rank-1).fill(-1)):n.length<a.rank?n.concat(new Array(a.rank-n.length).fill(-1)):n).map(function(t,e){return t>=0?t:(b(-1===t,"Bad value in size"),a.shape[e]-r[e])}),function(t,e,n){b(t.rank===e.length,"Error in slice"+t.rank+"D: Length of begin "+e+" must match the rank of the array ("+t.rank+")."),b(t.rank===n.length,"Error in slice"+t.rank+"D: Length of size "+n+" must match the rank of the array ("+t.rank+").");for(var r=0;r<t.rank;++r)b(e[r]+n[r]<=t.shape[r],"Error in slice"+t.rank+"D: begin["+r+"] + size["+r+"] ("+(e[r]+n[r])+") would overflow input.shape["+r+"] ("+t.shape[r]+")")}(a,r,i);var o=a.shape;return Lt.engine.runKernel(function(t){return t.slice(a,r,i)},{$x:a},function(t){for(var e=[],n=0;n<t.rank;n++)e.push([r[n],o[n]-r[n]-i[n]]);return{$x:function(){return t.pad(e)}}})}}),Os=Ae({slice1d_:function(t,e,n){var r=Oe(t,"x","slice1d");return b(1===r.rank,"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"),Is(r,[e],[n])}}),ks=Ae({slice2d_:function(t,e,n){var r=Oe(t,"x","slice2d");return b(2===r.rank,"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"),Is(r,e,n)}}),As=Ae({slice3d_:function(t,e,n){var r=Oe(t,"x","slice3d");return b(3===r.rank,"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"),Is(r,e,n)}}),Cs=Ae({slice4d_:function(t,e,n){var r=Oe(t,"x","slice4d");return b(4===r.rank,"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"),Is(r,e,n)}});function Ps(t,e,n,r,i){var a=e[0];return a.rank<n.rank&&(a=a.reshape(oe(a.shape,r))),t.rank<n.rank&&(t=t.reshape(oe(t.shape,r))),{$x:function(){var e=t.mul(n.equal(a).cast(t.dtype));return null==i?e:e.transpose(i)}}}var Ts=Ae({all_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","all","bool"),i=P(e,r.shape),a=i,o=ue(a,r.rank);null!=o&&(r=r.transpose(o),a=le(a.length,r.rank));var s=Lt.engine.runKernel(function(t){return t.all(r,a)},{$x:r});if(n){var u=oe(s.shape,i);return s.reshape(u)}return s}}),Rs=Ae({any_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","any","bool"),i=P(e,r.shape),a=i,o=ue(a,r.rank);null!=o&&(r=r.transpose(o),a=le(a.length,r.rank));var s=Lt.engine.runKernel(function(t){return t.any(r,a)},{$x:r});if(n){var u=oe(s.shape,i);return s.reshape(u)}return s}}),Ds=Ae({argMax_:function(t,e){void 0===e&&(e=0);var n=Oe(t,"x","argMax");null==e&&(e=0);var r=P(e,n.shape),i=ue(r,n.rank);return null!=i&&(n=n.transpose(i),r=le(r.length,n.rank)),Lt.engine.runKernel(function(t){return t.argMax(n,r[0])},{$x:n},function(t){return{$x:function(){return Xe(n)}}})}}),Ms=Ae({argMin_:function(t,e){void 0===e&&(e=0);var n=Oe(t,"x","argMin");null==e&&(e=0);var r=P(e,n.shape),i=ue(r,n.rank);return null!=i&&(n=n.transpose(i),r=le(r.length,n.rank)),Lt.engine.runKernel(function(t){return t.argMin(n,r[0])},{$x:n},function(t){return{$x:function(){return Xe(n)}}})}}),js=Ae({logSumExp_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","logSumExp"),i=P(e,r.shape),a=r.max(i,!0),o=r.sub(a).exp().sum(i).log(),s=a.reshape(o.shape).add(o);if(n){var u=oe(s.shape,i);return s.reshape(u)}return s}}),Bs=Ae({max_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","max"),i=r,a=P(e,r.shape),o=a,s=ue(o,r.rank);null!=s&&(r=r.transpose(s),o=le(o.length,r.rank));var u=Lt.engine.runKernel(function(t,e){return e(t.max(r,o))},{$x:r},function(t,e){return Ps(t,e,i,a,s)});if(n){var c=oe(u.shape,a);u=u.reshape(c)}return u}}),Ls=Ae({mean_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","mean"),i=P(e,r.shape),a=E(ae(r.shape,i)[1]);return $t(function(t){var r=je(a);return{value:(r.dtype===t.dtype?t:t.cast(r.dtype)).div(r).sum(e,n),gradFunc:function(e){var n=t.shape.slice();return i.forEach(function(t){n[t]=1}),e.reshape(n).mul(We(t.shape,"float32")).div(r)}}})(r)}}),zs=Ae({min_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","min"),i=r,a=P(e,r.shape),o=a,s=ue(o,r.rank);null!=s&&(r=r.transpose(s),o=le(o.length,r.rank));var u=Lt.engine.runKernel(function(t,e){return e(t.min(r,o))},{$x:r},function(t,e){return Ps(t,e,i,a,s)});if(n){var c=oe(u.shape,a);u=u.reshape(c)}return u}}),Fs=Ae({moments_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=P(e,(t=Oe(t,"x","moments")).shape),i=t.mean(r,n),a=i.shape;return n||(a=oe(i.shape,r)),{mean:i,variance:t.toFloat().sub(i.reshape(a)).square().mean(r,n)}}}),Us=Ae({sum_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","sum");"bool"===r.dtype&&(r=r.toInt());var i=P(e,r.shape);return $t(function(t){var e=ue(i,t.rank),r=i,a=t;null!=e&&(a=t.transpose(e),r=le(r.length,t.rank));var o=Lt.engine.runKernel(function(t){return t.sum(a,r)},{permutedX:a});if(n){var s=oe(o.shape,i);o=o.reshape(s)}return{value:o,gradFunc:function(e){var n=t.shape.slice();return i.forEach(function(t){n[t]=1}),e.reshape(n).mul(We(t.shape,"float32"))}}})(r)}}),Vs=Ae({prod_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=Oe(t,"x","prod");"bool"===r.dtype&&(r=r.toInt());var i=P(e,r.shape),a=ue(i,r.rank),o=i,s=r;null!=a&&(s=r.transpose(a),o=le(o.length,r.rank));var u=Lt.engine.runKernel(function(t){return t.prod(s,o)},{permutedX:s});if(n){var c=oe(u.shape,i);u=u.reshape(c)}return u}});var Ws=Ae({equal_:function(t,e){var n,r=Oe(t,"a","equal"),i=Oe(e,"b","equal");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.equal(r,i)},{$a:r,$b:i})}}),qs=Ae({equalStrict_:function(t,e){var n=Oe(t,"a","equalStrict"),r=Oe(e,"b","equalStrict");return w(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),$s=Ae({greater_:function(t,e){var n,r=Oe(t,"a","greater"),i=Oe(e,"b","greater");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.greater(r,i)},{$a:r,$b:i})}}),Hs=Ae({greaterEqual_:function(t,e){var n,r=Oe(t,"a","greaterEqual"),i=Oe(e,"b","greaterEqual");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.greaterEqual(r,i)},{$a:r,$b:i},function(t){return{$a:function(){return Xe(r)},$b:function(){return Xe(i)}}})}}),Ks=Ae({greaterEqualStrict_:function(t,e){var n=Oe(t,"a","greaterEqualStrict"),r=Oe(e,"b","greaterEqualStrict");return w(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Gs=Ae({greaterStrict_:function(t,e){var n=Oe(t,"a","greaterStrict"),r=Oe(e,"b","greaterStrict");return w(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Xs=Ae({less_:function(t,e){var n,r=Oe(t,"a","less"),i=Oe(e,"b","less");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.less(r,i)},{$a:r,$b:i})}}),Ys=Ae({lessEqual_:function(t,e){var n,r=Oe(t,"a","lessEqual"),i=Oe(e,"b","lessEqual");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.lessEqual(r,i)},{$a:r,$b:i})}}),Js=Ae({lessEqualStrict_:function(t,e){var n=Oe(t,"a","lessEqualStrict"),r=Oe(e,"b","lessEqualStrict");return w(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Zs=Ae({lessStrict_:function(t,e){var n=Oe(t,"a","lessStrict"),r=Oe(e,"b","lessStrict");return w(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Qs=Ae({notEqual_:function(t,e){var n,r=Oe(t,"a","notEqual"),i=Oe(e,"b","notEqual");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.notEqual(r,i)},{$a:r,$b:i})}}),tu=Ae({notEqualStrict_:function(t,e){var n=Oe(t,"a","notEqualStrict"),r=Oe(e,"b","notEqualStrict");return w(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});var eu=Ae({add_:function(t,e){var n,r=Oe(t,"a","add"),i=Oe(e,"b","add");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.add(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=t,n=he(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=he(i.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(i.shape)}}})}}),nu=Ae({addN_:function(t){b(Array.isArray(t),function(){return"The argument passed to tf.addN() must be a list of tensors"}),b(t.length>=1,function(){return"Must pass at least one tensor to tf.addN(), but got "+t.length});var e=t.map(function(t,e){return Oe(t,"tensors"+e,"addN")}),n=e[0];e.forEach(function(t){if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(function(t){if(!S(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var r=e;return Lt.engine.runKernel(function(t){return t.addN(e)},r,function(t){var n={};return e.forEach(function(e,r){n[r]=function(){return t.clone()}}),n})}}),ru=Ae({addStrict_:function(t,e){var n=Oe(t,"a","addStrict"),r=Oe(e,"b","addStrict");return w(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),iu=Ae({atan2_:function(t,e){var n,r=Oe(t,"a","atan2"),i=Oe(e,"b","atan2");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.atan2(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=eu(r.square(),i.square()),n=t.mul(i.div(e)),o=he(r.shape,a);return o.length>0&&(n=n.sum(o)),n.reshape(r.shape)},$b:function(){var e=eu(r.square(),i.square()),n=Ao(t.mul(r.div(e))),o=he(i.shape,a);return o.length>0&&(n=n.sum(o)),n.reshape(i.shape)}}})}}),au=Ae({div_:function(t,e){var n,r,i=Oe(t,"a","div"),a=Oe(e,"b","div");if(n=Et(i,a),i=n[0],a=n[1],"int32"===i.dtype&&"int32"===a.dtype)return su(i,a);r=function(t){return t.realDivide(i,a)};var o=pe(i.shape,a.shape);return Lt.engine.runKernel(r,{$a:i,$b:a},function(t){return{$a:function(){var e=t.div(a.toFloat()),n=he(i.shape,o);return n.length>0?e.sum(n).reshape(i.shape):e},$b:function(){var e=t.mul(i.toFloat()),n=he(a.shape,o);n.length>0&&(e=e.sum(n).reshape(a.shape));var r=a.square();return e.div(r.toFloat()).neg()}}})}}),ou=Ae({divStrict_:function(t,e){var n=Oe(t,"a","div"),r=Oe(e,"b","div");return w(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),su=Ae({floorDiv_:function(t,e){var n,r=Oe(t,"a","floorDiv"),i=Oe(e,"b","floorDiv");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.floorDiv(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=t.div(i.toFloat()),n=he(r.shape,a);return n.length>0?e.sum(n).reshape(r.shape):e},$b:function(){var e=t.mul(r.toFloat()),n=he(i.shape,a);n.length>0&&(e=e.sum(n).reshape(i.shape));var o=i.square();return e.div(o.toFloat()).neg()}}})}}),uu=Ae({maximum_:function(t,e){var n,r=Oe(t,"a","maximum"),i=Oe(e,"b","maximum");return n=Et(r,i),r=n[0],i=n[1],"bool"===r.dtype&&(r=r.toInt(),i=i.toInt()),pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.maximum(r,i)},{$a:r,$b:i},function(t){return{$a:function(){return t.mul(r.greaterEqual(i).toFloat())},$b:function(){return t.mul(r.less(i).toFloat())}}})}}),cu=Ae({maximumStrict_:function(t,e){var n=Oe(t,"a","maximumStrict"),r=Oe(e,"b","maximumStrict");return w(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),lu=Ae({minimum_:function(t,e){var n,r=Oe(t,"a","minimum"),i=Oe(e,"b","minimum");return n=Et(r,i),r=n[0],i=n[1],"bool"===r.dtype&&(r=r.toInt(),i=i.toInt()),pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.minimum(r,i)},{$a:r,$b:i},function(t){return{$a:function(){return t.mul(r.lessEqual(i).toFloat())},$b:function(){return t.mul(r.greater(i).toFloat())}}})}}),fu=Ae({minimumStrict_:function(t,e){var n=Oe(t,"a","minimumStrict"),r=Oe(e,"b","minimumStrict");return w(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),hu=Ae({mod_:function(t,e){var n,r=Oe(t,"a","mod"),i=Oe(e,"b","mod");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.mod(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=he(r.shape,a);return e.length>0?t.sum(e).reshape(r.shape):t},$b:function(){var e=t.mul(r.div(i).floor().neg()),n=he(i.shape,a);return n.length>0?e.sum(n).reshape(i.shape):e}}})}}),pu=Ae({modStrict_:function(t,e){var n=Oe(t,"a","modStrict"),r=Oe(e,"b","modStrict");return w(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),du=Ae({mul_:function(t,e){var n,r=Oe(t,"a","mul"),i=Oe(e,"b","mul");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.multiply(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=t.mul(i.toFloat()),n=he(r.shape,a);return n.length>0?e.sum(n).reshape(r.shape):e},$b:function(){var e=t.mul(r.toFloat()),n=he(i.shape,a);return n.length>0?e.sum(n).reshape(i.shape):e}}})}}),mu=Ae({mulStrict_:function(t,e){var n=Oe(t,"a","mul"),r=Oe(e,"b","mul");return w(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),gu=Ae({pow_:function(t,e){var n=Oe(t,"base","pow"),r=Oe(e,"exp","pow"),i=pe(n.shape,r.shape);return t=n.cast(_t(n.dtype,r.dtype)),e=r.cast(_t(n.dtype,r.dtype)),Lt.engine.runKernel(function(t,e){return e(t.pow(n,r))},{$base:n,$exp:r},function(t,e){var a=e[0];return{$base:function(){var e=r.toFloat(),a=t.mul(e.mul(n.pow(e.sub(je(1))))),o=he(n.shape,i);return o.length>0&&(a=a.sum(o)),a.reshape(n.shape)},$exp:function(){var e=n.greater(0),o=n.log().where(e,Xe(n)),s=t.mul(a.mul(o)),u=he(r.shape,i);return u.length>0&&(s=s.sum(u)),s.reshape(r.shape)}}})}}),yu=Ae({powStrict_:function(t,e){return w(t.shape,e.shape,"Error in powStrict: "),t.pow(e)}}),vu=Ae({squaredDifference_:function(t,e){var n,r=Oe(t,"a","squaredDifference"),i=Oe(e,"b","squaredDifference");return n=Et(r,i),r=n[0],i=n[1],pe(r.shape,i.shape),Lt.engine.runKernel(function(t){return t.squaredDifference(r,i)},{$a:r,$b:i},function(t){var e=je(2);return{$a:function(){return t.mul(r.sub(i).mul(e))},$b:function(){return t.mul(i.sub(r).mul(e))}}})}}),bu=Ae({squaredDifferenceStrict_:function(t,e){var n=Oe(t,"a","squaredDifferenceStrict"),r=Oe(e,"b","squaredDifferenceStrict");return w(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),wu=Ae({sub_:function(t,e){var n,r=Oe(t,"a","sub"),i=Oe(e,"b","sub");n=Et(r,i),r=n[0],i=n[1];var a=pe(r.shape,i.shape);return Lt.engine.runKernel(function(t){return t.subtract(r,i)},{$a:r,$b:i},function(t){return{$a:function(){var e=t,n=he(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=he(i.shape,a);return n.length>0&&(e=e.sum(n)),e.neg().reshape(i.shape)}}})}}),_u=Ae({subStrict_:function(t,e){var n=Oe(t,"a","subStrict"),r=Oe(e,"b","subStrict");return w(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}});var xu=Ae({logicalAnd_:function(t,e){var n=Oe(t,"a","logicalAnd","bool"),r=Oe(e,"b","logicalAnd","bool");return pe(n.shape,r.shape),Lt.engine.runKernel(function(t){return t.logicalAnd(n,r)},{$a:n,$b:r})}}),Eu=Ae({logicalNot_:function(t){var e=Oe(t,"x","logicalNot","bool");return Lt.engine.runKernel(function(t){return t.logicalNot(e)},{$x:e})}}),Su=Ae({logicalOr_:function(t,e){var n=Oe(t,"a","logicalOr","bool"),r=Oe(e,"b","logicalOr","bool");return pe(n.shape,r.shape),Lt.engine.runKernel(function(t){return t.logicalOr(n,r)},{$a:n,$b:r})}}),Nu=Ae({logicalXor_:function(t,e){var n=Oe(t,"a","logicalXor","bool"),r=Oe(e,"b","logicalXor","bool");return pe(n.shape,r.shape),Su(t,e).logicalAnd(xu(t,e).logicalNot())}}),Iu=Ae({where_:function(t,e,n){var r=Oe(e,"a","where"),i=Oe(n,"b","where"),a=Oe(t,"condition","where","bool");return w(r.shape,i.shape,"Error in where: "),1===a.rank?b(a.shape[0]===r.shape[0],"The first dimension of `a` must match the size of `condition`."):w(a.shape,i.shape,"Error in where: "),Lt.engine.runKernel(function(t){return t.select(a,r,i)},{$condition:a,$a:r,$b:i},function(t){return{$condition:function(){return Xe(a).toFloat()},$a:function(){return t.mul(a.cast(t.dtype))},$b:function(){return t.mul(a.logicalNot().cast(t.dtype))}}})}}),Ou=function(t){return c(this,void 0,void 0,function(){var e,n,r;return l(this,function(i){switch(i.label){case 0:return[4,(e=Oe(t,"condition","whereAsync","bool")).data()];case 1:return n=i.sent(),r=so(e.shape,n),t!==e&&e.dispose(),[2,r]}})})};var ku=Ae({elu_:function(t){var e=Oe(t,"x","elu");return Lt.engine.runKernel(function(t,n){return n(t.elu(e))},{$x:e},function(t,e){var n=e[0];return{$x:function(){return Lt.engine.runKernel(function(e){return e.eluDer(t,n)},{dy:t,y:n})}}})}}),Au=Ae({leakyRelu_:function(t,e){void 0===e&&(e=.2);var n=Oe(t,"x","leakyRelu");return uu(je(e).mul(n),n)}}),Cu=Ae({prelu_:function(t,e){var n=Oe(t,"x","prelu"),r=Oe(e,"alpha","prelu");return Lt.engine.runKernel(function(t){return t.prelu(n,r)},{$x:n,$alpha:r},function(t){var e=n.greater(0);return{$x:function(){return Iu(e,t,t.mul(r))},$alpha:function(){var i=Iu(e,Xe(t),t.mul(n)),a=he(r.shape,t.shape);return a.length>0&&(i=i.sum(a)),i.reshape(r.shape)}}})}}),Pu=Ae({relu_:function(t){var e=Oe(t,"x","relu");return"bool"===e.dtype?e.toInt():Lt.engine.runKernel(function(t){return t.relu(e)},{$x:e},function(t){var n=e.step();return{$x:function(){return t.mulStrict(n.toFloat())}}})}}),Tu=Ae({selu_:function(t){var e=Oe(t,"x","selu");return Lt.engine.runKernel(function(t){return t.selu(e)},{$x:e},function(t){return{$x:function(){var n=e.greater(je(0)),r=je(ia),i=je(aa),a=t.mul(i),o=t.mul(r).mul(e.toFloat().exp());return Iu(n,a,o)}}})}});var Ru=Ae({transpose_:function(t,e){var n=Oe(t,"x","transpose");return null==e&&(e=n.shape.map(function(t,e){return e}).reverse()),b(n.rank===e.length,"Error in transpose: rank of input "+n.rank+" must match length of perm "+e+"."),e.forEach(function(t){b(t>=0&&t<n.rank,"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1?n.clone():Lt.engine.runKernel(function(t){return t.transpose(n,e)},{$x:n},function(t){var n=ce(e);return{$x:function(){return t.transpose(n)}}})}});var Du=Ae({localResponseNormalization_:function(t,e,n,r,i){void 0===e&&(e=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===i&&(i=.5);var a=Oe(t,"x","localResponseNormalization");b(4===a.rank||3===a.rank,"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank "+a.rank+"."),b(N(e),"Error in localResponseNormalization: depthRadius must be an integer\n                     but got depthRadius "+e+".");var o=a,s=!1;3===a.rank&&(s=!0,o=a.as4D(1,a.shape[0],a.shape[1],a.shape[2]));var u=Lt.engine.runKernel(function(t,a){return a(t.localResponseNormalization4D(o,e,n,r,i))},{x4D:o},function(t,a){var s=a[0];return{x4D:function(){return Lt.engine.runKernel(function(a){return a.LRNGrad(t,o,s,e,n,r,i)},{})}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}});var Mu=Ae({norm_:function(t,e,n,r){void 0===e&&(e="euclidean"),void 0===n&&(n=null),void 0===r&&(r=!1);var i=function t(e,n,r){if(void 0===r&&(r=null),0===e.rank)return e.abs();if(1!==e.rank&&null===r)return t(e.reshape([-1]),n,r);if(1===e.rank||"number"==typeof r||r instanceof Array&&1===r.length){if(1===n)return e.abs().sum(r);if(n===1/0)return e.abs().max(r);if(n===-1/0)return e.abs().min(r);if("euclidean"===n||2===n)return e.abs().pow(je(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(r instanceof Array&&2===r.length){if(1===n)return e.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return e.abs().sum(r[1]).max(r[0]);if(n===-1/0)return e.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return e.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Oe(t,"x","norm"),e,n),a=i.shape;if(r){var o=P(n,t.shape);a=oe(i.shape,o)}return i.reshape(a)}});function ju(t,e){for(var n=[],r=t;r<e;++r)n.push(r);return n}function Bu(t){for(var e=[],n=0;n<t.length;++n)for(var r=0;r<t[n].length;++r)e.push(t[n][r]);return e}var Lu=Ae({gather_:function(t,e,n){void 0===n&&(n=0);var r=Oe(t,"x","gather"),i=Oe(e,"indices","gather","int32");return n=P(n,r.shape)[0],Lt.engine.runKernel(function(t){return t.gather(r,i,n)},{$x:r},function(t){return{$x:function(){if(0===n)return zu(t,i,r.shape[n]);var e=r.shape,a=i.size,o=e.slice(0,n),s=o.length,u=e.slice(n,e.length).slice(1),c=u.length,l=ju(0,s),f=ju(s+1,s+1+c),h=Bu([o,[a],u]),p=t.reshape(h),d=i.reshape([a]),m=Bu([[s],l,f]),g=p.transpose(m),y=zu(g,d,r.shape[n]),v=ce(m);return y.transpose(v)}}})}}),zu=Ae({unsortedSegmentSum_:function(t,e,n){var r=Oe(t,"x","unsortedSegmentSum"),i=Oe(e,"segmentIds","unsortedSegmentSum","int32");return b(N(n),"numSegments must be of dtype int"),Lt.engine.runKernel(function(t){return t.unsortedSegmentSum(r,i,n)},{$x:r},function(t){return{$x:function(){return function(t,e){for(var n=uu(e,Xe(e)),r=Lu(t,n),i=Hs(e,je(0,"int32")),a=r.rank-i.rank,o=0;o<a;++o)i=Fa(i,o+1);i=xu(i,We(r.shape,"bool"));var s=Xe(r);return Iu(i,r,s)}(t,i)}}})}});var Fu=Ae({basicLSTMCell_:function(t,e,n,r,i,a){var o=Oe(t,"forgetBias","basicLSTMCell"),s=Oe(e,"lstmKernel","basicLSTMCell"),u=Oe(n,"lstmBias","basicLSTMCell"),c=Oe(r,"data","basicLSTMCell"),l=Oe(i,"c","basicLSTMCell"),f=Oe(a,"h","basicLSTMCell"),h=c.concat(f,1).matMul(s).add(u),p=h.shape[0],d=h.shape[1]/4,m=[p,d],g=h.slice([0,0],m),y=h.slice([0,d],m),v=h.slice([0,2*d],m),b=h.slice([0,3*d],m),w=g.sigmoid().mulStrict(y.tanh()).addStrict(l.mulStrict(o.add(v).sigmoid()));return[w,w.tanh().mulStrict(b.sigmoid())]}}),Uu=Ae({multiRNNCell_:function(t,e,n,r){for(var i=Oe(e,"data","multiRNNCell"),a=ke(n,"c","multiRNNCell"),o=ke(r,"h","multiRNNCell"),s=i,u=[],c=0;c<t.length;c++){var l=t[c](s,a[c],o[c]);u.push(l[0]),u.push(l[1]),s=l[1]}var f=[],h=[];for(c=0;c<u.length;c+=2)f.push(u[c]),h.push(u[c+1]);return[f,h]}});var Vu=Ae({movingAverage_:function(t,e,n,r,i){void 0===i&&(i=!0);var a=Oe(t,"v","movingAverage"),o=Oe(e,"x","movingAverage"),s=Oe(n,"decay","movingAverage");(function(t,e){b(t.dtype===e.dtype,"The dtypes of the first("+t.dtype+") and second("+e.dtype+") input must match")})(a,o),b(S(a.shape,o.shape),"Shape mismatch in v and x");var u=je(1),c=u.sub(s),l=o.sub(a).mul(c);if(i){b(null!=r,"When using zeroDebias: true, step is required.");var f=Oe(r,"step","movingAverage");l=l.div(u.sub(gu(s,f)))}return a.add(l)}});var Wu=Ae({stridedSlice_:function(t,e,n,r,i,a,o,s,u){if(void 0===i&&(i=0),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),void 0===u&&(u=0),0!==o)throw new Error("ellipsis mask is not yet supported");if(0!==s)throw new Error("new axis mask is not yet supported");var c=Oe(t,"x","stridedSlice");if(r.every(function(t){return 1===t})){var l=we(c.shape,e,n,r,i,a,o,s,u),f=l[0],h=l[1],p=l[2],d=h.filter(function(t,e){return-1===p.indexOf(e)});return Is(c,f,h).reshape(d)}return Lt.engine.runKernel(function(t){return t.stridedSlice(c,e,n,r,i,a,o,s,u)},{$x:c})}});var qu=Ae({topk_:function(t,e,n){void 0===e&&(e=1),void 0===n&&(n=!0);var r=Oe(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var i=r.shape[r.shape.length-1];if(e>i)throw new Error("'k' passed to topk() must be <= the last dimension ("+i+") but got "+e);var a=Lt.engine.runKernel(function(t){return t.topk(r,e,n)},{$x:r});return{values:a[0],indices:a[1]}}});var $u=Ae({scatterND_:function(t,e,n){var r=Oe(t,"indices","scatterND","int32"),i=Oe(e,"updates","scatterND");return ve(i,r,n),Lt.engine.runKernel(function(t){return t.scatterND(r,i,n)},{$indices:r,$updates:i})}});var Hu=Ae({fft_:function(t){b("complex64"===t.dtype,"The dtype for tf.spectral.fft() must be complex64 but got "+t.dtype+".");var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return Lt.engine.runKernel(function(t){return t.fft(r)},{input:t}).reshape(t.shape)}}),Ku=Ae({ifft_:function(t){b("complex64"===t.dtype,"The dtype for tf.spectral.ifft() must be complex64 but got "+t.dtype+".");var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return Lt.engine.runKernel(function(t){return t.ifft(r)},{input:t}).reshape(t.shape)}}),Gu=Ae({rfft_:function(t){b("float32"===t.dtype,"The dtype for rfft() must be real value but\n    got "+t.dtype);var e=t.shape[t.shape.length-1],n=t.size/e,r=t.zerosLike(),i=Te(t,r).as2D(n,e),a=Hu(i),o=Math.floor(e/2)+1,s=Re(a),u=De(a),c=s.split([o,e-o],s.shape.length-1),l=u.split([o,e-o],u.shape.length-1),f=t.shape.slice();return f[t.shape.length-1]=o,Te(c[0],l[0]).reshape(f)}}),Xu=Ae({irfft_:function(t){var e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){var r=t.as2D(n,e),i=Ku(r);return Re(i)}var a=[n,2*(e-1)],o=Re(t).as2D(n,e),s=De(t).as2D(n,e),u=o.slice([0,1],[n,e-2]).reverse(1),c=s.slice([0,1],[n,e-2]).reverse(1).mul(je(-1)),l=o.concat(u,1),f=s.concat(c,1);return r=Te(l,f).as2D(a[0],a[1]),i=Ku(r),Re(i)}}),Yu=Object.freeze({fft:Hu,ifft:Ku,rfft:Gu,irfft:Xu});var Ju=Ae({sparseToDense_:function(t,e,n,r){var i=Oe(t,"sparseIndices","sparseToDense","int32"),a=Oe(e,"sparseValues","sparseToDense"),o=Oe(r,"defaultValue","sparseToDense",a.dtype);return function(t,e,n,r){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+t.dtype+".");if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+t.shape+".");var i=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error("outputShape has incorrect number of elements:, "+n.length+", should be: "+a+".");var o=e.size;if(0!==e.rank&&(1!==e.rank||o!==i))throw new Error("sparseValues has incorrect shape "+e.shape+", should be [] or ["+i+"]");if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,a,n,o),Lt.engine.runKernel(function(t){return t.sparseToDense(i,a,n,o)},{$sparseIndices:i,$sparseValues:a,$defaultValue:o})}});var Zu,Qu=Ae({gatherND_:function(t,e){var n=Oe(e,"indices","gatherND","int32"),r=Oe(t,"x","gatherND");return Lt.engine.runKernel(function(t){return t.gatherND(r,n)},{$x:r,$indices:n})}});!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Zu||(Zu={}));var tc=Ae({absoluteDifference_:function(t,e,n,r){void 0===r&&(r=Zu.SUM_BY_NONZERO_WEIGHTS);var i=Oe(t,"labels","absoluteDifference"),a=Oe(e,"predictions","absoluteDifference"),o=null;null!=n&&(o=Oe(n,"weights","absoluteDifference")),w(i.shape,a.shape,"Error in absoluteDifference: ");var s=i.sub(a).abs();return ec(s,o,r)}}),ec=Ae({computeWeightedLoss_:function(t,e,n){void 0===n&&(n=Zu.SUM_BY_NONZERO_WEIGHTS);var r=Oe(t,"losses","computeWeightedLoss"),i=null;null!=e&&(i=Oe(e,"weights","computeWeightedLoss"));var a=null==i?r:r.mul(i);if(n===Zu.NONE)return a;if(n===Zu.SUM)return a.sum();if(n===Zu.MEAN){if(null==i)return a.mean();var o=E(r.shape)/E(i.shape),s=a.sum().div(i.sum());return o>1?s.div(je(o)):s}if(n===Zu.SUM_BY_NONZERO_WEIGHTS){if(null==i)return a.sum().div(je(r.size));var u=i.mul(We(r.shape)).notEqual(je(0)).sum().toFloat();return a.sum().div(u)}throw Error("Unknown reduction: "+n)}}),nc=Ae({cosineDistance_:function(t,e,n,r,i){void 0===i&&(i=Zu.SUM_BY_NONZERO_WEIGHTS);var a=Oe(t,"labels","cosineDistance"),o=Oe(e,"predictions","cosineDistance"),s=null;null!=r&&(s=Oe(r,"weights","cosineDistance")),w(a.shape,o.shape,"Error in cosineDistance: ");var u=je(1).sub(a.mul(o).sum(n,!0));return ec(u,s,i)}}),rc=Ae({hingeLoss_:function(t,e,n,r){void 0===r&&(r=Zu.SUM_BY_NONZERO_WEIGHTS);var i=Oe(t,"labels","hingeLoss"),a=Oe(e,"predictions","hingeLoss"),o=null;null!=n&&(o=Oe(n,"weights","hingeLoss")),w(i.shape,a.shape,"Error in hingeLoss: ");var s=je(1);i=je(2).mul(i).sub(s);var u=s.sub(i.mul(a)).relu();return ec(u,o,r)}}),ic=Ae({huberLoss_:function(t,e,n,r,i){void 0===r&&(r=1),void 0===i&&(i=Zu.SUM_BY_NONZERO_WEIGHTS);var a=Oe(t,"labels","huberLoss"),o=Oe(e,"predictions","huberLoss"),s=null;null!=n&&(s=Oe(n,"weights","huberLoss")),w(a.shape,o.shape,"Error in huberLoss: ");var u=je(r),c=o.sub(a).abs(),l=lu(c,u),f=c.sub(l),h=je(.5).mul(l.square()).add(u.mul(f));return ec(h,s,i)}}),ac=Ae({logLoss_:function(t,e,n,r,i){void 0===r&&(r=1e-7),void 0===i&&(i=Zu.SUM_BY_NONZERO_WEIGHTS);var a=Oe(t,"labels","logLoss"),o=Oe(e,"predictions","logLoss"),s=null;null!=n&&(s=Oe(n,"weights","logLoss")),w(a.shape,o.shape,"Error in logLoss: ");var u=je(1),c=je(r),l=a.mul(o.add(c).log()).neg().sub(u.sub(a).mul(u.sub(o).add(c).log()));return ec(l,s,i)}}),oc=Ae({meanSquaredError_:function(t,e,n,r){void 0===r&&(r=Zu.SUM_BY_NONZERO_WEIGHTS);var i=Oe(t,"labels","meanSquaredError"),a=Oe(e,"predictions","meanSquaredError"),o=null;null!=n&&(o=Oe(n,"weights","meanSquaredError")),w(i.shape,a.shape,"Error in meanSquaredError: ");var s=i.squaredDifference(a);return ec(s,o,r)}}),sc=Ae({sigmoidCrossEntropy_:function(t,e,n,r,i){void 0===r&&(r=0),void 0===i&&(i=Zu.SUM_BY_NONZERO_WEIGHTS);var a=Oe(t,"multiClassLabels","sigmoidCrossEntropy"),o=Oe(e,"logits","sigmoidCrossEntropy"),s=null;if(null!=n&&(s=Oe(n,"weights","sigmoidCrossEntropy")),w(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=je(r),c=je(1),l=je(.5);a=a.mul(c.sub(u)).add(l.mul(u))}var f=function(t,e){var n=Oe(t,"labels","sigmoidCrossEntropyWithLogits"),r=Oe(e,"logits","sigmoidCrossEntropyWithLogits");w(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");var i=r.relu(),a=r.mul(n),o=r.abs().neg().exp().log1p();return i.sub(a).add(o)}(a,o);return ec(f,s,i)}}),uc=Ae({softmaxCrossEntropy_:function(t,e,n,r,i){void 0===r&&(r=0),void 0===i&&(i=Zu.SUM_BY_NONZERO_WEIGHTS);var a=Oe(t,"onehotLabels","softmaxCrossEntropy"),o=Oe(e,"logits","softmaxCrossEntropy"),s=null;if(null!=n&&(s=Oe(n,"weights","softmaxCrossEntropy")),w(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){var u=je(r),c=je(1),l=je(a.shape[1]);a=a.mul(c.sub(u)).add(u.div(l))}var f=function(t,e,n){if(void 0===n&&(n=-1),-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+e.rank+" and dim was "+n);return $t(function(t,e){var r=e.logSumExp([n],!0),i=e.toFloat().sub(r);return{value:i.mul(t).neg().sum([n]),gradFunc:function(e){var r=oe(e.shape,[n]);return[e.reshape(r).mul(t.toFloat().sub(i.exp())),e.reshape(r).mul(i.exp().sub(t.toFloat()))]}}})(t,e)}(a,o);return ec(f,s,i)}}),cc=Object.freeze({get Reduction(){return Zu},absoluteDifference:tc,computeWeightedLoss:ec,cosineDistance:nc,hingeLoss:rc,huberLoss:ic,logLoss:ac,meanSquaredError:oc,sigmoidCrossEntropy:sc,softmaxCrossEntropy:uc});function lc(t,e){return void 0===e&&(e=!1),Lt.engine.tidy(function(){if(2!==t.shape.length)throw new Error("qr2d() requires a 2D Tensor, but got a "+t.shape.length+"D Tensor.");for(var n=t.shape[0],r=t.shape[1],i=Ua(n),a=t.clone(),o=Le([[1]],[1,1]),s=o.clone(),u=n>=r?r:n,c=function(t){var e,u=a,c=s,l=i;e=Lt.engine.tidy(function(){var e=a.slice([t,t],[n-t,1]),u=e.norm(),c=a.slice([t,t],[1,1]),l=c.sign().neg(),f=c.sub(l.mul(u)),h=e.div(f);s=1===h.shape[0]?o.clone():o.concat(h.slice([1,0],[h.shape[0]-1,h.shape[1]]),0);var p=l.matMul(f).div(u).neg(),d=a.slice([t,0],[n-t,r]),m=p.mul(s);a=0===t?d.sub(m.matMul(s.transpose().matMul(d))):a.slice([0,0],[t,r]).concat(d.sub(m.matMul(s.transpose().matMul(d))),0);var g=i.slice([0,t],[n,i.shape[1]-t]);return i=0===t?g.sub(g.matMul(s).matMul(m.transpose())):i.slice([0,0],[n,t]).concat(g.sub(g.matMul(s).matMul(m.transpose())),1),[s,a,i]}),s=e[0],a=e[1],i=e[2],Xt([u,c,l])},l=0;l<u;++l)c(l);return!e&&n>r&&(i=i.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[i,a]})}var fc=Ae({gramSchmidt_:function(t){var e;if(Array.isArray(t)){e=!1,b(null!=t&&t.length>0,"Gram-Schmidt process: input must not be null, undefined, or empty");for(var n=t[0].shape[0],r=1;r<t.length;++r)b(t[r].shape[0]===n,"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+t[r].shape[0]+" vs. "+n+")")}else e=!0,t=_a(t,t.shape[0],0).map(function(t){return eo(t,[0])});b(t.length<=t[0].shape[0],"Gram-Schmidt: Number of vectors ("+t.length+") exceeds number of dimensions ("+t[0].shape[0]+").");var i=[],a=t,o=function(t){i.push(Lt.engine.tidy(function(){var e=a[t];if(t>0)for(var n=0;n<t;++n){var r=Us(i[n].mulStrict(e)).mul(i[n]);e=e.sub(r)}return e.div(Mu(e,"euclidean"))}))};for(r=0;r<t.length;++r)o(r);return e?no(i,0):i}}),hc=Ae({qr_:function(t,e){if(void 0===e&&(e=!1),t.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+t.rank);if(2===t.rank)return lc(t,e);var n=t.shape.slice(0,t.shape.length-2).reduce(function(t,e){return t*e}),r=[],i=[];return ao(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0).forEach(function(t){var n=lc(t,e),a=n[0],o=n[1];r.push(a),i.push(o)}),[no(r,0).reshape(t.shape),no(i,0).reshape(t.shape)]}}),pc=Object.freeze({gramSchmidt:fc,qr:hc});function dc(t,e,n,r,i){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY);var a=t.shape[0];return n=Math.min(n,a),b(0<=r&&r<=1,"iouThreshold must be in [0, 1], but was '"+r+"'"),b(2===t.rank,"boxes must be a 2D tensor, but was of rank '"+t.rank+"'"),b(4===t.shape[1],"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),b(1===e.rank,"scores must be a 1D tensor"),b(e.shape[0]===a,"scores has incompatible shape with boxes. Expected "+a+", but was "+e.shape[0]),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i}}var mc=Ae({resizeBilinear_:function(t,e,n){void 0===n&&(n=!1);var r=Oe(t,"images","resizeBilinear");b(3===r.rank||4===r.rank,"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."),b(2===e.length,"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");var i=r,a=!1;3===r.rank&&(a=!0,i=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var o=e[0],s=e[1],u=Lt.engine.runKernel(function(t,e){return t.resizeBilinear(i,o,s,n)},{batchImages:i},function(t,e){return{batchImages:function(){return Lt.engine.runKernel(function(e){return e.resizeBilinearBackprop(t,i,n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),gc=Ae({resizeNearestNeighbor_:function(t,e,n){void 0===n&&(n=!1);var r=Oe(t,"images","resizeNearestNeighbor");b(3===r.rank||4===r.rank,"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."),b(2===e.length,"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),b("float32"===r.dtype||"int32"===r.dtype,"`images` must have `int32` or `float32` as dtype");var i=r,a=!1;3===r.rank&&(a=!0,i=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var o=e[0],s=e[1],u=Lt.engine.runKernel(function(t,e){return t.resizeNearestNeighbor(i,o,s,n)},{batchImages:i},function(t,e){return{batchImages:function(){return Lt.engine.runKernel(function(e){return e.resizeNearestNeighborBackprop(t,i,n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),yc=Ae({nonMaxSuppression_:function(t,e,n,r,i){void 0===r&&(r=.5),void 0===i&&(i=Number.NEGATIVE_INFINITY);var a=Oe(t,"boxes","nonMaxSuppression"),o=Oe(e,"scores","nonMaxSuppression"),s=dc(a,o,n,r,i);return n=s.maxOutputSize,r=s.iouThreshold,i=s.scoreThreshold,Lt.engine.runKernel(function(t){return t.nonMaxSuppression(a,o,n,r,i)},{$boxes:a})}}),vc=function(t,e,n,r,i){return void 0===r&&(r=.5),void 0===i&&(i=Number.NEGATIVE_INFINITY),c(this,void 0,void 0,function(){var a,o,s,u,c,f;return l(this,function(l){switch(l.label){case 0:return a=Oe(t,"boxes","nonMaxSuppressionAsync"),o=Oe(e,"scores","nonMaxSuppressionAsync"),s=dc(a,o,n,r,i),n=s.maxOutputSize,r=s.iouThreshold,i=s.scoreThreshold,[4,a.data()];case 1:return u=l.sent(),[4,o.data()];case 2:return c=l.sent(),f=an(u,c,n,r,i),a!==t&&a.dispose(),o!==e&&o.dispose(),[2,f]}})})},bc=function(t,e,n,r,i,a){var o=Oe(t,"image","cropAndResize","float32"),s=Oe(e,"boxes","cropAndResize","float32"),u=Oe(n,"boxInd","cropAndResize","int32");i=i||"bilinear",a=a||0;var c=s.shape[0];return b(4===o.rank,"Error in cropAndResize: image must be rank 4,but got rank "+o.rank+"."),b(2===s.rank&&4===s.shape[1],"Error in cropAndResize: boxes must be have size ["+c+",4] but had shape "+s.shape+"."),b(1===u.rank&&u.shape[0]===c,"Error in cropAndResize: boxInd must be have size ["+c+"] but had shape "+s.shape+"."),b(2===r.length,"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."),b(r[0]>=1&&r[1]>=1,"cropSize must be atleast [1,1], but was "+r),b("bilinear"===i||"nearest"===i,"method must be bilinear or nearest, but was "+i),Lt.engine.runKernel(function(t,e){return t.cropAndResize(o,s,u,r,i,a)},{$image:o,$boxes:s})},wc=Object.freeze({resizeBilinear:mc,resizeNearestNeighbor:gc,nonMaxSuppression:yc,nonMaxSuppressionAsync:vc,cropAndResize:bc}),_c=Object.freeze({image:wc,linalg:pc,losses:cc,spectral:Yu,op:Ae,batchNormalization2d:qo,batchNormalization3d:$o,batchNormalization4d:Ho,batchNormalization:Ko,complex:Te,real:Re,imag:De,concat:ga,concat1d:ya,concat2d:va,concat3d:ba,concat4d:wa,split:_a,conv1d:cs,conv2d:ls,conv3d:fs,conv2dDerFilter:hs,depthwiseConv2d:ps,separableConv2d:ds,conv2dTranspose:ms,matMul:rs,dot:is,outerProduct:as,reverse:gs,reverse1d:ys,reverse2d:vs,reverse3d:bs,reverse4d:ws,maxPool:Es,avgPool:Ss,pool:Ns,slice:Is,slice1d:Os,slice2d:ks,slice3d:As,slice4d:Cs,abs:lo,acos:fo,acosh:ho,asin:po,asinh:mo,atan:go,atanh:yo,ceil:vo,clipByValue:bo,cos:wo,cosh:_o,erf:xo,exp:Eo,expm1:So,floor:No,log:Io,log1p:Oo,logSigmoid:ko,neg:Ao,reciprocal:Co,round:Po,rsqrt:To,sigmoid:Ro,sign:Do,sin:Mo,sinh:jo,softplus:Bo,sqrt:Lo,square:zo,step:Fo,tan:Uo,tanh:Vo,all:Ts,any:Rs,argMax:Ds,argMin:Ms,logSumExp:js,max:Bs,mean:Ls,min:zs,moments:Fs,sum:Us,prod:Vs,equal:Ws,equalStrict:qs,greater:$s,greaterEqual:Hs,greaterEqualStrict:Ks,greaterStrict:Gs,less:Xs,lessEqual:Ys,lessEqualStrict:Js,lessStrict:Zs,notEqual:Qs,notEqualStrict:tu,add:eu,addN:nu,addStrict:ru,atan2:iu,div:au,divStrict:ou,floorDiv:su,maximum:uu,maximumStrict:cu,minimum:lu,minimumStrict:fu,mod:hu,modStrict:pu,mul:du,mulStrict:mu,pow:gu,powStrict:yu,squaredDifference:vu,squaredDifferenceStrict:bu,sub:wu,subStrict:_u,elu:ku,leakyRelu:Au,prelu:Cu,relu:Pu,selu:Tu,logicalAnd:xu,logicalNot:Eu,logicalOr:Su,logicalXor:Nu,where:Iu,whereAsync:Ou,buffer:Ra,toPixels:Ta,print:Da,batchToSpaceND:Ma,cast:ja,clone:Ba,cumsum:La,depthToSpace:za,expandDims:Fa,eye:Ua,fromPixels:Va,multinomial:Wa,oneHot:qa,pad:$a,pad1d:Ha,pad2d:Ka,pad3d:Ga,pad4d:Xa,rand:Ya,randomNormal:Ja,randomUniform:Za,reshape:Qa,spaceToBatchND:to,squeeze:eo,stack:no,tile:ro,truncatedNormal:io,unstack:ao,setdiff1dAsync:oo,fill:$e,linspace:He,ones:We,range:Ke,scalar:je,tensor:Me,tensor1d:Be,tensor2d:Le,tensor3d:ze,tensor4d:Fe,tensor5d:Ue,tensor6d:Ve,zeros:qe,onesLike:Ge,zerosLike:Xe,transpose:Ru,softmax:Ce,logSoftmax:Pe,localResponseNormalization:Du,norm:Mu,gather:Lu,unsortedSegmentSum:zu,basicLSTMCell:Fu,multiRNNCell:Uu,movingAverage:Vu,stridedSlice:Wu,topk:qu,scatterND:$u,fft:Hu,ifft:Ku,rfft:Gu,irfft:Xu,sparseToDense:Ju,gatherND:Qu}),xc=function(){function t(){this.blockSize=48,this.firstUse=!0,Lt.get("IS_BROWSER")&&(this.fromPixels2DContext=document.createElement("canvas").getContext("2d"))}return t.prototype.setDataMover=function(t){this.data=new Ye(t)},t.prototype.register=function(t,e,n){if(this.firstUse&&(this.firstUse=!1,Lt.get("IS_NODE")&&Zt("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================\n")),this.data.has(t))throw new Error("Data buffer is already registered");this.data.set(t,{dtype:n})},t.prototype.write=function(t,e){if(null==e)throw new Error("MathBackendCPU.write(): values can not be null");this.data.get(t).values=e},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error("pixels passed to tf.fromPixels() can not be null");var n,r;if(Lt.get("IS_NODE")&&null==t.getContext)throw new Error("When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package");if(null!=t.getContext)n=t.getContext("2d").getImageData(0,0,t.width,t.height).data;else if(t instanceof ImageData)n=t.data;else{if(!(t instanceof HTMLImageElement||t instanceof HTMLVideoElement))throw new Error("pixels passed to tf.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was "+t.constructor.name);if(null==this.fromPixels2DContext)throw new Error("Can't read pixels from HTMLImageElement outside the browser.");this.fromPixels2DContext.canvas.width=t.width,this.fromPixels2DContext.canvas.height=t.height,this.fromPixels2DContext.drawImage(t,0,0,t.width,t.height),n=this.fromPixels2DContext.getImageData(0,0,t.width,t.height).data}if(4===e)r=new Int32Array(n);else{var i=t.width*t.height;r=new Int32Array(i*e);for(var a=0;a<i;a++)for(var o=0;o<e;++o)r[a*e+o]=n[4*a+o]}return ze(r,[t.height,t.width,e],"int32")},t.prototype.read=function(t){return c(this,void 0,void 0,function(){return l(this,function(e){return[2,this.readSync(t)]})})},t.prototype.readSync=function(t){var e=this.data.get(t),n=e.dtype,r=e.complexTensors;return"complex64"===n?tn(r.real.dataSync(),r.imag.dataSync()):this.data.get(t).values},t.prototype.disposeData=function(t){if(this.data.has(t)){var e=this.data.get(t).complexTensors;null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}},t.prototype.time=function(t){return c(this,void 0,void 0,function(){var e;return l(this,function(n){return e=J(),t(),[2,{kernelMs:J()-e}]})})},t.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},t.prototype.complex=function(t,e){var n=ft.make(t.shape,{},"complex64");return this.data.get(n.dataId).complexTensors={real:Lt.engine.keep(t.clone()),imag:Lt.engine.keep(e.clone())},n},t.prototype.real=function(t){return this.data.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.data.get(t.dataId).complexTensors.imag.clone()},t.prototype.assertNotComplex=function(t,e){Array.isArray(t)||(t=[t]),t.forEach(function(t){null!=t&&b("complex64"!==t.dtype,e+" does not support complex64 tensors.")})},t.prototype.slice=function(t,e,n){if(this.assertNotComplex(t,"slice"),Ee(t.shape,e,n)){var r=Se(e,t.strides),i=E(n);return Me(t.dataSync().subarray(r,r+i),n,t.dtype)}for(var a=Ra(n,t.dtype),o=0;o<a.size;++o){var s=a.indexToLoc(o).map(function(t,n){return t+e[n]});a.values[o]=t.get.apply(t,s)}return a.toTensor()},t.prototype.stridedSlice=function(t,e,n,r,i,a,o,s,u){this.assertNotComplex(t,"stridedSlice");var c=we(t.shape,e,n,r,i,a,o,s,u),l=c[0],f=c[1],h=c[2],p=f.filter(function(t,e){return-1===h.indexOf(e)});if(p.some(function(t){return 0===t}))return Me([],p);for(var d=Ra(f,t.dtype),m=0;m<d.size;m++){for(var g=d.indexToLoc(m),y=new Array(g.length),v=0;v<y.length;v++)y[v]=g[v]*r[v]+l[v];d.set.apply(d,[t.get.apply(t,y)].concat(g))}return d.toTensor().reshape(p)},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),i=0,a=0;a<t.rank;a++)a!==e&&(r[i++]=t.shape[a]);var o=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)o[e]=a,u[a]=this.slice(t,o,s).reshape(r);return u},t.prototype.reverse=function(t,e){this.assertNotComplex(t,"reverse");for(var n=Ra(t.shape,t.dtype),r=t.buffer(),i=function(i){var a=n.indexToLoc(i),o=a.slice();e.forEach(function(e){return o[e]=t.shape[e]-1-o[e]}),n.set.apply(n,[r.get.apply(r,o)].concat(a))},a=0;a<n.size;a++)i(a);return n.toTensor()},t.prototype.concat=function(t,e){this.assertNotComplex(t,"concat");var n=t.map(function(t){var n=E(t.shape.slice(e));return t.as2D(-1,n)}),r=de(n.map(function(t){return t.shape}),1),i=Ra(r,t[0].dtype).values;if(1===n[0].shape[0]){var a=0;n.forEach(function(t){i.set(t.dataSync(),a),a+=t.size})}else{var o=0;n.forEach(function(t){for(var e=t.dataSync(),n=0,a=0;a<t.shape[0];++a)for(var s=a*r[1]+o,u=0;u<t.shape[1];++u)i[s+u]=e[n++];o+=t.shape[1]})}var s=de(t.map(function(t){return t.shape}),e);return Me(i,s,t[0].dtype)},t.prototype.neg=function(t){return this.assertNotComplex(t,"neg"),this.multiply(je(-1),t)},t.prototype.add=function(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),function(t,e,n,r){return{real:t+n,imag:e+r}}):this.broadcastedBinaryOp(t,e,_t(t.dtype,e.dtype),function(t,e){return t+e})},t.prototype.addN=function(t){this.assertNotComplex(t,"addN");for(var e=t.map(function(t){return t.dataSync()}),n=Ra(t[0].shape,t[0].dtype),r=n.values,i=0;i<t.length;i++)for(var a=e[i],o=0;o<r.length;o++)r[o]+=a[o];return n.toTensor()},t.prototype.subtract=function(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),function(t,e,n,r){return{real:t-n,imag:e-r}}):this.broadcastedBinaryOp(t,e,_t(t.dtype,e.dtype),function(t,e){return t-e})},t.prototype.pow=function(t,e){return this.assertNotComplex([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.pow(t,e)})},t.prototype.batchMatMul=function(t,e,n,r){this.assertNotComplex([t,e],"matMul");for(var i=n?t.shape[1]:t.shape[2],a=n?t.shape[2]:t.shape[1],o=r?e.shape[1]:e.shape[2],s=t.shape[0],u=t.dataSync(),c=e.dataSync(),l=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],f=l[0],h=l[1],p=l[2],d=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=d[0],g=d[1],y=d[2],v=a*o,b=Ra([s,a,o],t.dtype),w=b.values,_=this.blockSize,x=0;x<s;x++)for(var E=0;E<a;E+=_)for(var S=0;S<o;S+=_)for(var N=0;N<i;N+=_)for(var I=Math.min(E+_,a),O=Math.min(S+_,o),k=Math.min(N+_,i),A=E;A<I;A++)for(var C=S;C<O;C++){for(var P=0,T=N;T<k;T++)P+=u[x*f+A*h+T*p]*c[T*m+C*g+x*y];w[x*v+(A*o+C)]+=P}return b.toTensor()},t.prototype.multiply=function(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),function(t,e,n,r){return{real:t*n-e*r,imag:t*r+e*n}}):this.broadcastedBinaryOp(t,e,_t(t.dtype,e.dtype),function(t,e){return t*e})},t.prototype.realDivide=function(t,e){return this.assertNotComplex([t,e],"realDivide"),this.broadcastedBinaryOp(t,e,"float32",function(t,e){return t/e})},t.prototype.floorDiv=function(t,e){return this.assertNotComplex([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",function(t,e){return Math.floor(t/e)})},t.prototype.sum=function(t,e){this.assertNotComplex(t,"sum"),se("sum",e,t.rank);for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,_t(t.dtype,"int32")),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=0,h=0;h<o;++h)f+=u[l+h];s[c]=f}return a},t.prototype.prod=function(t,e){this.assertNotComplex(t,"sum");for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,_t(t.dtype,"int32")),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=1,h=0;h<o;++h)f*=u[l+h];s[c]=f}return a},t.prototype.unsortedSegmentSum=function(t,e,n){this.assertNotComplex(t,"unsortedSegmentSum");for(var r=[],i=t.rank-e.rank,a=0;a<i;++a)e=e.expandDims(a+1);for(a=0;a<n;++a){var o=je(a,"int32"),s=Ws(o,e).asType("float32").mul(t).sum(0);r.push(s)}return no(r)},t.prototype.argMin=function(t,e){this.assertNotComplex(t,"argMin");var n=[e];se("argMin",n,t.rank);for(var r=ae(t.shape,n),i=r[0],a=r[1],o=qe(i,"int32"),s=E(a),u=o.dataSync(),c=t.dataSync(),l=0;l<u.length;++l){for(var f=l*s,h=c[f],p=0,d=0;d<s;++d){var m=c[f+d];m<h&&(h=m,p=d)}u[l]=p}return o},t.prototype.argMax=function(t,e){this.assertNotComplex(t,"argMax");var n=[e];se("argMax",n,t.rank);for(var r=ae(t.shape,n),i=r[0],a=r[1],o=qe(i,"int32"),s=E(a),u=o.dataSync(),c=t.dataSync(),l=0;l<u.length;++l){for(var f=l*s,h=c[f],p=0,d=0;d<s;++d){var m=c[f+d];m>h&&(h=m,p=d)}u[l]=p}return o},t.prototype.cumsum=function(t,e,n,r){if(this.assertNotComplex(t,"cumsum"),e!==t.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(t.rank-1)+" but got axis="+e);for(var i=_t(t.dtype,"int32"),a=qe(t.shape,i),o=a.dataSync(),s=t.dataSync(),u=t.shape[t.rank-1],c=r?function(t,e){return t+u-e-1}:function(t,e){return t+e},l=0;l<s.length;l+=u)for(var f=0;f<u;f++){var h=c(l,f);if(0===f)o[h]=n?0:s[h];else{var p=c(l,f-1);o[h]=n?s[p]+o[p]:s[h]+o[p]}}return a},t.prototype.equal=function(t,e){return this.assertNotComplex([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t===e?1:0})},t.prototype.notEqual=function(t,e){return this.assertNotComplex([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t!==e?1:0})},t.prototype.less=function(t,e){return this.assertNotComplex([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t<e?1:0})},t.prototype.lessEqual=function(t,e){return this.assertNotComplex([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t<=e?1:0})},t.prototype.greater=function(t,e){return this.assertNotComplex([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t>e?1:0})},t.prototype.greaterEqual=function(t,e){return this.assertNotComplex([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t>=e?1:0})},t.prototype.logicalNot=function(t){this.assertNotComplex(t,"logicalNot");for(var e=t.dataSync(),n=new Uint8Array(e.length),r=0;r<e.length;++r)n[r]=e[r]?0:1;return ft.make(t.shape,{values:n},"bool")},t.prototype.logicalAnd=function(t,e){return this.assertNotComplex([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t&&e})},t.prototype.logicalOr=function(t,e){return this.assertNotComplex([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",function(t,e){return t||e})},t.prototype.select=function(t,e,n){this.assertNotComplex([t,e,n],"select");for(var r=t.dataSync(),i=e.dataSync(),a=n.dataSync(),o=qe(e.shape,_t(e.dtype,n.dtype)),s=o.dataSync(),u=0,c=0===t.rank||t.rank>1||1===e.rank?1:e.shape[1],l=0;l<r.length;l++)for(var f=0;f<c;f++)1===r[l]?s[u++]=i[l]:s[u++]=a[l];return o},t.prototype.where=function(t){this.assertNotComplex([t],"where");var e=t.dataSync();return so(t.shape,e)},t.prototype.topk=function(t,e,n){return this.assertNotComplex(t,"topk"),un(t.dataSync(),t.shape,t.dtype,e)},t.prototype.min=function(t,e){this.assertNotComplex(t,"min"),se("min",e,t.rank);for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,t.dtype),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=u[l],h=0;h<o;++h){var p=u[l+h];p<f&&(f=p)}s[c]=f}return a},t.prototype.minimum=function(t,e){return this.assertNotComplex([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.min(t,e)})},t.prototype.mod=function(t,e){return this.assertNotComplex([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})},t.prototype.max=function(t,e){this.assertNotComplex(t,"max"),se("max",e,t.rank);for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,t.dtype),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=u[l],h=0;h<o;++h){var p=u[l+h];p>f&&(f=p)}s[c]=f}return a},t.prototype.maximum=function(t,e){return this.assertNotComplex([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.max(t,e)})},t.prototype.all=function(t,e){this.assertNotComplex(t,"all"),se("all",e,t.rank);for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,t.dtype),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=u[l],h=0;h<o;++h){var p=u[l+h];f=f&&p}s[c]=f}return a},t.prototype.any=function(t,e){this.assertNotComplex(t,"any"),se("any",e,t.rank);for(var n=ae(t.shape,e),r=n[0],i=n[1],a=qe(r,t.dtype),o=E(i),s=a.dataSync(),u=t.dataSync(),c=0;c<s.length;++c){for(var l=c*o,f=u[l],h=0;h<o;++h){var p=u[l+h];f=f||p}s[c]=f}return a},t.prototype.squaredDifference=function(t,e){return this.assertNotComplex([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t-e;return n*n})},t.prototype.ceil=function(t){this.assertNotComplex(t,"ceil");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.ceil(e[r]);return ft.make(t.shape,{values:n})},t.prototype.floor=function(t){this.assertNotComplex(t,"floor");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.floor(e[r]);return ft.make(t.shape,{values:n})},t.prototype.sign=function(t){this.assertNotComplex(t,"x");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)e[r]<0?n[r]=-1:e[r]>0?n[r]=1:n[r]=0;return ft.make(t.shape,{values:n})},t.prototype.round=function(t){this.assertNotComplex(t,"round");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=Math.floor(e[r]);e[r]-i<.5?n[r]=Math.floor(e[r]):e[r]-i>.5?n[r]=Math.ceil(e[r]):n[r]=i%2==0?i:i+1}return ft.make(t.shape,{values:n})},t.prototype.exp=function(t){this.assertNotComplex(t,"exp");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.exp(e[r]);return ft.make(t.shape,{values:n})},t.prototype.expm1=function(t){this.assertNotComplex(t,"expm1");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.expm1(e[r]);return ft.make(t.shape,{values:n})},t.prototype.log=function(t){this.assertNotComplex(t,"log");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=e[r];n[r]=Math.log(i)}return ft.make(t.shape,{values:n})},t.prototype.log1p=function(t){this.assertNotComplex(t,"log1p");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=e[r];n[r]=Math.log1p(i)}return ft.make(t.shape,{values:n})},t.prototype.sqrt=function(t){this.assertNotComplex(t,"sqrt");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=e[r];n[r]=Math.sqrt(i)}return ft.make(t.shape,{values:n})},t.prototype.rsqrt=function(t){this.assertNotComplex(t,"rsqrt");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=e[r];n[r]=1/Math.sqrt(i)}return ft.make(t.shape,{values:n})},t.prototype.square=function(t){this.assertNotComplex(t,"square");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r){var i=e[r];n[r]=i*i}return ft.make(t.shape,{values:n})},t.prototype.reciprocal=function(t){this.assertNotComplex(t,"reciprocal");for(var e=t.dataSync(),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=1/e[r];return ft.make(t.shape,{values:n})},t.prototype.relu=function(t){this.assertNotComplex(t,"relu");for(var e=qe(t.shape,t.dtype),n=e.dataSync(),r=t.dataSync(),i=0;i<r.length;++i)n[i]=Math.max(0,r[i]);return e},t.prototype.prelu=function(t,e){return this.assertNotComplex([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return t<0?e*t:t})},t.prototype.elu=function(t){this.assertNotComplex(t,"elu");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r){var i=n[r];e[r]=i>=0?i:Math.exp(i)-1}return ft.make(t.shape,{values:e})},t.prototype.eluDer=function(t,e){this.assertNotComplex([t,e],"eluDer");for(var n=new Float32Array(e.size),r=e.dataSync(),i=t.dataSync(),a=0;a<r.length;++a){var o=r[a];n[a]=o>=1?i[a]:i[a]*(o+1)}return ft.make(e.shape,{values:n})},t.prototype.selu=function(t){this.assertNotComplex(t,"selu");for(var e=ia,n=aa,r=new Float32Array(t.size),i=t.dataSync(),a=0;a<i.length;++a){var o=i[a];r[a]=o>=0?n*o:e*(Math.exp(o)-1)}return ft.make(t.shape,{values:r})},t.prototype.clip=function(t,e,n){this.assertNotComplex(t,"clip");for(var r=new Float32Array(t.size),i=t.dataSync(),a=0;a<i.length;++a){var o=i[a];r[a]=o>n?n:o<e?e:o}return ft.make(t.shape,{values:r})},t.prototype.abs=function(t){for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.abs(n[r]);return ft.make(t.shape,{values:e})},t.prototype.complexAbs=function(t){for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<t.size;++r){var i=n[2*r],a=n[2*r+1];e[r]=Math.hypot(i,a)}return ft.make(t.shape,{values:e})},t.prototype.int=function(t){this.assertNotComplex(t,"int");for(var e=new Int32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=n[r];return ft.make(t.shape,{values:e},"int32")},t.prototype.sigmoid=function(t){this.assertNotComplex(t,"sigmoid");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=1/(1+Math.exp(-n[r]));return ft.make(t.shape,{values:e})},t.prototype.softplus=function(t){this.assertNotComplex(t,"softplus");for(var e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=t.dataSync(),i=0;i<r.length;++i){var a,o=r[i]>-e,s=r[i]<e,u=Math.exp(r[i]);a=s?u:o?r[i]:Math.log(1+u),n[i]=a}return ft.make(t.shape,{values:n})},t.prototype.sin=function(t){this.assertNotComplex(t,"sin");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.sin(n[r]);return ft.make(t.shape,{values:e})},t.prototype.cos=function(t){this.assertNotComplex(t,"cos");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.cos(n[r]);return ft.make(t.shape,{values:e})},t.prototype.tan=function(t){this.assertNotComplex(t,"tan");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.tan(n[r]);return ft.make(t.shape,{values:e})},t.prototype.asin=function(t){this.assertNotComplex(t,"asin");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.asin(n[r]);return ft.make(t.shape,{values:e})},t.prototype.acos=function(t){this.assertNotComplex(t,"acos");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.acos(n[r]);return ft.make(t.shape,{values:e})},t.prototype.atan=function(t){this.assertNotComplex(t,"atan");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.atan(n[r]);return ft.make(t.shape,{values:e})},t.prototype.atan2=function(t,e){return this.assertNotComplex([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.atan2(t,e)})},t.prototype.sinh=function(t){this.assertNotComplex(t,"sinh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.sinh(n[r]);return ft.make(t.shape,{values:e})},t.prototype.cosh=function(t){this.assertNotComplex(t,"cosh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.cosh(n[r]);return ft.make(t.shape,{values:e})},t.prototype.tanh=function(t){this.assertNotComplex(t,"tanh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=I(n[r]);return ft.make(t.shape,{values:e})},t.prototype.asinh=function(t){this.assertNotComplex(t,"asinh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.asinh(n[r]);return ft.make(t.shape,{values:e})},t.prototype.acosh=function(t){this.assertNotComplex(t,"acosh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.acosh(n[r]);return ft.make(t.shape,{values:e})},t.prototype.atanh=function(t){this.assertNotComplex(t,"atanh");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r)e[r]=Math.atanh(n[r]);return ft.make(t.shape,{values:e})},t.prototype.erf=function(t){this.assertNotComplex(t,"erf");for(var e=new Float32Array(t.size),n=t.dataSync(),r=0;r<n.length;++r){var i=n[r],a=1/(1+.3275911*i);e[r]=1-((((1.061405429*a-1.453152027)*a+1.421413741)*a-.284496736)*a+.254829592)*a*Math.exp(-i*i)}return ft.make(t.shape,{values:e})},t.prototype.step=function(t,e){void 0===e&&(e=0),this.assertNotComplex(t,"step");for(var n=new Float32Array(t.size),r=t.dataSync(),i=0;i<r.length;++i){var a=r[i];isNaN(a)?n[i]=NaN:n[i]=a>0?1:e}return ft.make(t.shape,{values:n})},t.prototype.conv2d=function(t,e,n){this.assertNotComplex([t,e],"conv2d");for(var r=n.filterHeight,i=n.filterWidth,a=n.dilationHeight,o=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=Ra(n.outShape,t.dtype),l=t.dataSync(),f=e.dataSync(),h=c.values,p=0;p<n.batchSize;++p)for(var d=p*t.strides[0],m=p*c.strides[0],g=0;g<n.outHeight;++g)for(var y=m+g*c.strides[1],v=g*n.strideHeight-s,b=0;b<r;b++){var w=v+b*a;if(!(w<0||w>=n.inHeight))for(var _=b*e.strides[0],x=d+w*t.strides[1],E=0;E<n.outWidth;++E)for(var S=y+E*n.outChannels,N=E*n.strideWidth-u,I=0;I<i;I++){var O=N+I*o;if(!(O<0||O>=n.inWidth))for(var k=_+I*e.strides[1],A=x+O*n.inChannels,C=k,P=0;P<n.inChannels;++P){for(var T=l[A+P],R=0;R<n.outChannels;++R)h[S+R]+=T*f[C+R];C+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(t,e,n){for(var r=n.filterDepth,i=n.filterHeight,a=n.filterWidth,o=n.dilationDepth,s=n.dilationHeight,u=n.dilationWidth,c=n.padInfo.front,l=n.padInfo.left,f=n.padInfo.top,h=Ra(n.outShape,t.dtype),p=t.dataSync(),d=e.dataSync(),m=h.values,g=0;g<n.batchSize;++g)for(var y=g*t.strides[0],v=g*h.strides[0],b=0;b<n.outDepth;++b)for(var w=v+b*h.strides[1],_=b*n.strideDepth-c,x=0;x<r;x++){var E=_+x*o;if(!(E<0||E>=n.inDepth))for(var S=x*e.strides[0],N=y+E*t.strides[1],I=0;I<n.outHeight;++I)for(var O=w+I*h.strides[2],k=I*n.strideHeight-f,A=0;A<i;A++){var C=k+A*s;if(!(C<0||C>=n.inHeight))for(var P=S+A*e.strides[1],T=N+C*t.strides[2],R=0;R<n.outWidth;++R)for(var D=O+R*n.outChannels,M=R*n.strideWidth-l,j=0;j<a;j++){var B=M+j*u;if(!(B<0||B>=n.inWidth))for(var L=P+j*e.strides[2],z=T+B*n.inChannels,F=L,U=0;U<n.inChannels;++U){for(var V=p[z+U],W=0;W<n.outChannels;++W)m[D+W]+=V*d[F+W];F+=n.outChannels}}}}return h.toTensor()},t.prototype.conv2dDerInput=function(t,e,n){this.assertNotComplex([t,e],"conv2dDerInput");for(var r=Ra(n.inShape,"float32"),i=r.values,a=r.strides,o=a[0],s=a[1],u=a[2],c=t.dataSync(),l=t.strides,f=l[0],h=l[1],p=l[2],d=e.dataSync(),m=e.strides,g=m[0],y=m[1],v=m[2],b=n.batchSize,w=n.filterHeight,_=n.filterWidth,x=n.inChannels,E=n.inHeight,S=n.inWidth,N=n.outChannels,I=n.outHeight,O=n.outWidth,k=n.strideHeight,A=n.strideWidth,C=w-1-n.padInfo.top,P=_-1-n.padInfo.left,T=0;T<b;++T)for(var R=0;R<x;++R)for(var D=0;D<E;++D)for(var M=D-C,j=Math.max(0,Math.ceil(M/k)),B=Math.min(I,(w+M)/k),L=0;L<S;++L){for(var z=L-P,F=Math.max(0,Math.ceil(z/A)),U=Math.min(O,(_+z)/A),V=0,W=j;W<B;++W)for(var q=W*k-M,$=F;$<U;++$)for(var H=f*T+h*W+p*$,K=g*(w-1-q)+y*(_-1-($*A-z))+v*R,G=0;G<N;++G)V+=c[H+G]*d[K+G];i[o*T+s*D+u*L+R]=V}return r.toTensor()},t.prototype.conv3dDerInput=function(t,e,n){for(var r=Ra(n.inShape,"float32"),i=r.values,a=r.strides,o=a[0],s=a[1],u=a[2],c=a[3],l=t.dataSync(),f=t.strides,h=f[0],p=f[1],d=f[2],m=f[3],g=e.dataSync(),y=e.strides,v=y[0],b=y[1],w=y[2],_=y[3],x=n.batchSize,E=n.filterDepth,S=n.filterHeight,N=n.filterWidth,I=n.inChannels,O=n.inDepth,k=n.inHeight,A=n.inWidth,C=n.outChannels,P=n.outDepth,T=n.outHeight,R=n.outWidth,D=n.strideDepth,M=n.strideHeight,j=n.strideWidth,B=E-1-n.padInfo.front,L=S-1-n.padInfo.top,z=N-1-n.padInfo.left,F=0;F<x;++F)for(var U=0;U<I;++U)for(var V=0;V<O;++V)for(var W=V-B,q=Math.max(0,Math.ceil(W/D)),$=Math.min(P,(E+W)/D),H=0;H<k;++H)for(var K=H-L,G=Math.max(0,Math.ceil(K/M)),X=Math.min(T,(S+K)/M),Y=0;Y<A;++Y){for(var J=Y-z,Z=Math.max(0,Math.ceil(J/j)),Q=Math.min(R,(N+J)/j),tt=0,et=q;et<$;++et)for(var nt=et*D-W,rt=G;rt<X;++rt)for(var it=rt*M-K,at=Z;at<Q;++at)for(var ot=h*F+p*et+d*rt+m*at,st=v*(E-1-nt)+b*(S-1-it)+w*(N-1-(at*j-J))+_*U,ut=0;ut<C;++ut)tt+=l[ot+ut]*g[st+ut];i[o*F+s*V+u*H+c*Y+U]=tt}return r.toTensor()},t.prototype.conv2dDerFilter=function(t,e,n){this.assertNotComplex([t,e],"conv2dDerFilter");for(var r=n.strideHeight,i=n.strideWidth,a=n.filterHeight,o=n.filterWidth,s=Ra(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,l=0;l<a;++l)for(var f=Math.max(0,Math.ceil((c-l)/r)),h=Math.min(n.outHeight,(n.inHeight+c-l)/r),p=0;p<o;++p)for(var d=Math.max(0,Math.ceil((u-p)/i)),m=Math.min(n.outWidth,(n.inWidth+u-p)/i),g=0;g<n.inChannels;++g)for(var y=0;y<n.outChannels;++y){for(var v=0,b=0;b<n.batchSize;++b)for(var w=f;w<h;++w)for(var _=l+w*r-c,x=d;x<m;++x){var E=p+x*i-u;v+=t.get(b,_,E,g)*e.get(b,w,x,y)}s.set(v,l,p,g,y)}return s.toTensor()},t.prototype.conv3dDerFilter=function(t,e,n){for(var r=n.strideDepth,i=n.strideHeight,a=n.strideWidth,o=n.filterDepth,s=n.filterHeight,u=n.filterWidth,c=Ra(n.filterShape,"float32"),l=c.values,f=c.strides,h=f[0],p=f[1],d=f[2],m=f[3],g=e.dataSync(),y=e.strides,v=y[0],b=y[1],w=y[2],_=y[3],x=t.dataSync(),E=t.strides,S=E[0],N=E[1],I=E[2],O=E[3],k=n.padInfo.front,A=n.padInfo.left,C=n.padInfo.top,P=0;P<o;++P)for(var T=Math.max(0,Math.ceil((k-P)/r)),R=Math.min(n.outDepth,(n.inDepth+k-P)/r),D=P*h,M=0;M<s;++M)for(var j=Math.max(0,Math.ceil((C-M)/i)),B=Math.min(n.outHeight,(n.inHeight+C-M)/i),L=M*p+D,z=0;z<u;++z)for(var F=Math.max(0,Math.ceil((A-z)/a)),U=Math.min(n.outWidth,(n.inWidth+A-z)/a),V=z*d+L,W=0;W<n.inChannels;++W)for(var q=W*m+V,$=0;$<n.outChannels;++$){for(var H=0,K=0;K<n.batchSize;++K)for(var G=K*S,X=K*v,Y=T;Y<R;++Y)for(var J=(P+Y*r-k)*N+G,Z=Y*b+X,Q=j;Q<B;++Q)for(var tt=(M+Q*i-C)*I+J,et=Q*w+Z,nt=F;nt<U;++nt){var rt=nt*_+et;H+=x[(z+nt*a-A)*O+tt+W]*g[rt+$]}l[q+$]=H}return c.toTensor()},t.prototype.depthwiseConv2D=function(t,e,n){this.assertNotComplex([t,e],"depthwiseConv2D");for(var r=n.filterHeight,i=n.filterWidth,a=n.dilationHeight,o=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,l=Ra(n.outShape,t.dtype),f=t.dataSync(),h=e.dataSync(),p=l.values,d=0;d<n.batchSize;++d)for(var m=d*t.strides[0],g=d*l.strides[0],y=0;y<n.outHeight;++y)for(var v=g+y*l.strides[1],b=y*n.strideHeight-s,w=0;w<r;++w){var _=b+w*a;if(!(_<0||_>=n.inHeight))for(var x=w*e.strides[0],E=m+_*t.strides[1],S=0;S<n.outWidth;++S)for(var N=v+S*l.strides[2],I=S*n.strideWidth-u,O=0;O<i;++O){var k=I+O*o;if(!(k<0||k>=n.inWidth))for(var A=x+O*e.strides[1],C=E+k*n.inChannels,P=N,T=A,R=0;R<n.inChannels;++R){for(var D=f[C+R],M=0;M<c;++M)p[P+M]+=D*h[T+M];P+=c,T+=c}}}return l.toTensor()},t.prototype.depthwiseConv2DDerInput=function(t,e,n){this.assertNotComplex([t,e],"depthwiseConv2DDerInput");for(var r=Ra(n.inShape,"float32"),i=r.values,a=r.strides,o=a[0],s=a[1],u=a[2],c=t.dataSync(),l=t.strides,f=l[0],h=l[1],p=l[2],d=e.dataSync(),m=e.strides,g=m[0],y=m[1],v=m[2],b=n.batchSize,w=n.filterHeight,_=n.filterWidth,x=n.inChannels,E=n.inHeight,S=n.inWidth,N=n.outChannels,I=n.outHeight,O=n.outWidth,k=n.strideHeight,A=n.strideWidth,C=w-1-n.padInfo.top,P=_-1-n.padInfo.left,T=N/x,R=0;R<b;++R)for(var D=0;D<x;++D)for(var M=0;M<E;++M)for(var j=M-C,B=Math.max(0,Math.ceil(j/k)),L=Math.min(I,(w+j)/k),z=0;z<S;++z){for(var F=z-P,U=Math.max(0,Math.ceil(F/A)),V=Math.min(O,(_+F)/A),W=0,q=B;q<L;++q)for(var $=q*k-j,H=U;H<V;++H)for(var K=f*R+h*q+p*H,G=g*(w-1-$)+y*(_-1-(H*A-F))+v*D,X=0;X<T;++X)W+=c[K+(D*T+X)]*d[G+X];i[o*R+s*M+u*z+D]=W}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){this.assertNotComplex([t,e],"depthwiseConv2DDerFilter");for(var r=n.strideHeight,i=n.strideWidth,a=n.filterHeight,o=n.filterWidth,s=Ra(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,l=n.outChannels/n.inChannels,f=0;f<a;++f)for(var h=Math.max(0,Math.ceil((c-f)/r)),p=Math.min(n.outHeight,(n.inHeight+c-f)/r),d=0;d<o;++d)for(var m=Math.max(0,Math.ceil((u-d)/i)),g=Math.min(n.outWidth,(n.inWidth+u-d)/i),y=0;y<n.outChannels;++y){for(var v=Math.trunc(y/l),b=y%l,w=0,_=0;_<n.batchSize;++_)for(var x=h;x<p;++x)for(var E=f+x*r-c,S=m;S<g;++S){var N=d+S*i-u;w+=t.get(_,E,N,v)*e.get(_,x,S,y)}s.set(w,f,d,v,b)}return s.toTensor()},t.prototype.tile=function(t,e){this.assertNotComplex(t,"tile");for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];var i=Ra(n,t.dtype),a=t.buffer();for(r=0;r<i.values.length;++r){for(var o=i.indexToLoc(r),s=new Array(t.rank),u=0;u<s.length;u++)s[u]=o[u]%t.shape[u];var c=a.locToIndex(s);i.values[r]=a.values[c]}return i.toTensor()},t.prototype.pad=function(t,e,n){this.assertNotComplex(t,"pad");var r=e.map(function(e,n){return e[0]+t.shape[n]+e[1]}),i=e.map(function(t){return t[0]}),a=t.buffer(),o=Ra(r,t.dtype);0!==n&&o.values.fill(n);for(var s=0;s<t.size;s++){var u=a.indexToLoc(s),c=u.map(function(t,e){return t+i[e]});o.set.apply(o,[t.get.apply(t,u)].concat(c))}return o.toTensor()},t.prototype.transpose=function(t,e){this.assertNotComplex(t,"transpose");for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[e[r]];var i=t.dataSync(),a=Ra(n,t.dtype),o=t.buffer();for(r=0;r<t.size;++r){for(var s=o.indexToLoc(r),u=new Array(s.length),c=0;c<u.length;c++)u[c]=s[e[c]];var l=a.locToIndex(u);a.values[l]=i[r]}return a.toTensor()},t.prototype.gather=function(t,e,n){this.assertNotComplex([t,e],"gather");var r=t.shape.slice(),i=e.dataSync();r[n]=i.length;for(var a=Ra(r,t.dtype),o=t.buffer(),s=0;s<a.size;++s){var u=a.indexToLoc(s),c=u.slice();c[n]=i[u[n]];var l=o.locToIndex(c);a.values[s]=o.values[l]}return a.toTensor()},t.prototype.batchToSpaceND=function(t,e,n){this.assertNotComplex([t],"batchToSpaceND");var r=e.reduce(function(t,e){return t*e}),i=Qt(t.shape,e,r),a=te(i.length,e.length),o=ee(t.shape,e,r),s=ne(n,e.length),u=re(o,n,e.length);return t.reshape(i).transpose(a).reshape(o).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){this.assertNotComplex([t],"spaceToBatchND");var r=e.reduce(function(t,e){return t*e}),i=[[0,0]];i.push.apply(i,n);for(var a=1+e.length;a<t.shape.length;++a)i.push([0,0]);var o=t.pad(i),s=Qt(o.shape,e,r,!1),u=te(s.length,e.length,!1),c=ee(o.shape,e,r,!1);return o.reshape(s).transpose(u).reshape(c)},t.prototype.pool=function(t,e,n){this.assertNotComplex(t,"pool");for(var r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,l=e.padInfo.left,f="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=t.dataSync(),p=Ra(e.outShape,t.dtype),d=p.values,m=e.outShape[1]*e.outShape[2]*e.outShape[3],g=e.outShape[2]*e.outShape[3],y=e.outShape[3],v=0;v<e.batchSize;++v)for(var b=v*m,w=v*t.strides[0],_=0;_<e.inChannels;++_)for(var x=0;x<e.outHeight;++x)for(var E=x*r-c,S=Math.max(0,E),N=Math.min(e.inHeight,s+E),I=b+x*g,O=0;O<e.outWidth;++O){for(var k=O*i-l,A=Math.max(0,k),C=Math.min(e.inWidth,u+k),P=f,T=0,R=0,D=S;D<N;D+=a){for(var M=w+D*t.strides[1],j=A;j<C;j+=o){var B=h[M+j*t.strides[2]+_];"max"===n&&B>P?P=B:"avg"===n&&(T+=B,R++)}if(isNaN(P))break}d[I+O*y+_]="avg"===n?T/R:P}return p.toTensor()},t.prototype.maxPool=function(t,e){return this.pool(t,e,"max")},t.prototype.maxPoolPositions=function(t,e){for(var n=Ra(e.outShape,"int32"),r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,l=e.padInfo.left,f=0;f<e.batchSize;++f)for(var h=0;h<e.inChannels;++h)for(var p=0;p<e.outHeight;++p){for(var d=p*r-c,m=d;m<0;)m+=a;for(var g=Math.min(e.inHeight,s+d),y=0;y<e.outWidth;++y){for(var v=y*i-l,b=v;b<0;)b+=o;for(var w=Math.min(e.inWidth,u+v),_=Number.NEGATIVE_INFINITY,x=-1,E=m;E<g;E+=a)for(var S=E-d,N=b;N<w;N+=o){var I=N-v,O=t.get(f,E,N,h);O>_&&(_=O,x=S*u+I)}n.set(x,f,p,y,h)}}return n.toTensor()},t.prototype.maxPoolBackprop=function(t,e,n,r){this.assertNotComplex([e,n],"maxPoolBackprop");for(var i=this.maxPoolPositions(e,r),a=r.strideHeight,o=r.strideWidth,s=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,l=r.effectiveFilterWidth,f=l-1-r.padInfo.left,h=c-1-r.padInfo.top,p=Ra(e.shape,"float32"),d=0;d<r.batchSize;++d)for(var m=0;m<r.inChannels;++m)for(var g=0;g<r.inHeight;++g)for(var y=0;y<r.inWidth;++y){for(var v=g-h,b=y-f,w=0,_=0;_<c;_+=s){var x=(v+_)/a;if(!(x<0||x>=r.outHeight||Math.floor(x)!==x))for(var E=0;E<l;E+=u){var S=(b+E)/o;if(!(S<0||S>=r.outWidth||Math.floor(S)!==S)){var N=c*l-1-i.get(d,x,S,m)===_*l+E?1:0;0!==N&&(w+=t.get(d,x,S,m)*N)}}}p.set(w,d,g,y,m)}return p.toTensor()},t.prototype.avgPoolBackprop=function(t,e,n){this.assertNotComplex([t,e],"avgPoolBackprop");for(var r=n.strideHeight,i=n.strideWidth,a=n.filterHeight,o=n.filterWidth,s=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,l=n.effectiveFilterWidth,f=l-1-n.padInfo.left,h=c-1-n.padInfo.top,p=Ra(e.shape,"float32"),d=1/(a*o),m=0;m<n.batchSize;++m)for(var g=0;g<n.inChannels;++g)for(var y=0;y<n.inHeight;++y)for(var v=0;v<n.inWidth;++v){for(var b=y-h,w=v-f,_=0,x=0;x<c;x+=s){var E=(b+x)/r;if(!(E<0||E>=n.outHeight||Math.floor(E)!==E))for(var S=0;S<l;S+=u){var N=(w+S)/i;N<0||N>=n.outWidth||Math.floor(N)!==N||(_+=t.get(m,E,N,g))}}p.set(_*d,m,y,v,g)}return p.toTensor()},t.prototype.cast=function(t,e){return Ze(t,e,this)},t.prototype.reshape=function(t,e){return Qe(t,e)},t.prototype.avgPool=function(t,e){return this.assertNotComplex(t,"avgPool"),this.pool(t,e,"avg").toFloat()},t.prototype.resizeBilinear=function(t,e,n,r){this.assertNotComplex(t,"resizeBilinear");for(var i=t.shape,a=i[0],o=i[1],s=i[2],u=i[3],c=t.dataSync(),l=new Float32Array(E([a,e,n,u])),f=[r&&e>1?o-1:o,r&&n>1?s-1:s],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=0,d=f[0]/h[0],m=f[1]/h[1],g=0;g<a;g++)for(var y=0;y<e;y++)for(var v=d*y,b=Math.floor(v),w=v-b,_=Math.min(o-1,Math.ceil(v)),x=g*t.strides[0]+b*t.strides[1],S=g*t.strides[0]+_*t.strides[1],N=0;N<n;N++)for(var I=m*N,O=Math.floor(I),k=I-O,A=Math.min(s-1,Math.ceil(I)),C=x+O*t.strides[2],P=S+O*t.strides[2],T=x+ +A*t.strides[2],R=S+A*t.strides[2],D=0;D<u;D++){var M=c[C+D],j=c[P+D],B=M+(c[T+D]-M)*k,L=B+(j+(c[R+D]-j)*k-B)*w;l[p++]=L}return Me(l,[a,e,n,u])},t.prototype.resizeBilinearBackprop=function(t,e,n){this.assertNotComplex([t,e],"resizeBilinearBackprop");for(var r=e.shape,i=r[0],a=r[1],o=r[2],s=r[3],u=t.shape,c=u[1],l=u[2],f=new Float32Array(i*a*o*s),h=[n&&c>1?a-1:a,n&&l>1?o-1:o],p=[n&&c>1?c-1:c,n&&l>1?l-1:l],d=h[0]/p[0],m=h[1]/p[1],g=t.dataSync(),y=0,v=0;v<i;v++)for(var b=v*e.strides[0],w=0;w<c;w++)for(var _=w*d,x=Math.floor(_),E=Math.min(Math.ceil(_),a-1),S=b+x*e.strides[1],N=b+E*e.strides[1],I=_-x,O=1-I,k=0;k<l;k++)for(var A=k*m,C=Math.floor(A),P=Math.min(Math.ceil(A),o-1),T=A-C,R=1-T,D=S+C*e.strides[2],M=S+P*e.strides[2],j=N+C*e.strides[2],B=N+P*e.strides[2],L=O*R,z=O*T,F=I*R,U=I*T,V=0;V<s;V++){var W=g[y++];f[D+V]+=W*L,f[M+V]+=W*z,f[j+V]+=W*F,f[B+V]+=W*U}return Fe(f,[i,o,a,s],e.dtype)},t.prototype.resizeNearestNeighbor=function(t,e,n,r){this.assertNotComplex(t,"resizeNearestNeighbor");for(var i=t.shape,a=i[0],o=i[1],s=i[2],u=i[3],c=t.dataSync(),l=new Float32Array(a*e*n*u),f=[r&&e>1?o-1:o,r&&n>1?s-1:s],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=f[0]/h[0],d=f[1]/h[1],m=0,g=0;g<a;g++)for(var y=g*t.strides[0],v=0;v<e;v++)for(var b=p*v,w=y+Math.min(o-1,r?Math.round(b):Math.floor(b))*t.strides[1],_=0;_<n;_++)for(var x=d*_,E=w+Math.min(s-1,r?Math.round(x):Math.floor(x))*t.strides[2],S=0;S<u;S++){var N=c[E+S];l[m++]=N}return Me(l,[a,e,n,u],t.dtype)},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){this.assertNotComplex([t,e],"resizeNearestNeighborBackprop");for(var r=e.shape,i=r[0],a=r[1],o=r[2],s=r[3],u=t.shape,c=u[1],l=u[2],f=new Float32Array(i*a*o*s),h=t.dataSync(),p=[n&&c>1?a-1:a,n&&l>1?o-1:o],d=[n&&c>1?c-1:c,n&&l>1?l-1:l],m=p[0]/d[0],g=p[1]/d[1],y=1/m,v=1/g,b=2*Math.ceil(y)+2,w=2*Math.ceil(v)+2,_=0;_<i;_++)for(var x=_*e.strides[0],E=0;E<a;E++)for(var S=x+E*e.strides[1],N=Math.floor(E*y),I=Math.floor(N-b/2),O=0;O<o;O++)for(var k=S+O*e.strides[2],A=Math.floor(O*v),C=Math.floor(A-w/2),P=0;P<s;P++){for(var T=0,R=0;R<b;R++){var D=R+I;if(!(D<0||D>=c)){var M=x+D*t.strides[1],j=D*m;if(E===Math.min(a-1,n?Math.round(j):Math.floor(j)))for(var B=0;B<w;B++){var L=B+C;if(!(L<0||L>=l)){var z=M+L*t.strides[2],F=L*g;O===Math.min(o-1,n?Math.round(F):Math.floor(F))&&(T+=h[z+P])}}}}f[k+P]=T}return Fe(f,e.shape,e.dtype)},t.prototype.batchNormalization=function(t,e,n,r,i,a){this.assertNotComplex([t,e,n,i,a],"batchNormalization");for(var o=t.dataSync(),s=e.dataSync(),u=n.dataSync(),c=i?i.dataSync():new Float32Array([1]),l=a?a.dataSync():new Float32Array([0]),f=new Float32Array(o.length),h=l.length,p=c.length,d=u.length,m=s.length,g=0,y=0,v=0,b=0,w=0;w<o.length;++w)f[w]=l[g++]+(o[w]-s[y++])*c[v++]/Math.sqrt(u[b++]+r),g>=h&&(g=0),y>=m&&(y=0),v>=p&&(v=0),b>=d&&(b=0);return Fe(f,t.shape)},t.prototype.localResponseNormalization4D=function(t,e,n,r,i){this.assertNotComplex(t,"localResponseNormalization4D");var a=t.shape[3],o=a-1,s=t.dataSync(),u=E(t.shape),c=new Float32Array(u);function l(t){for(var n=t%a,r=t-n+Math.max(0,n-e),i=t-n+Math.min(n+e,o),u=0;r<=i;r++){var c=s[r];u+=c*c}return u}for(var f=0;f<u;f++){var h=l(f),p=s[f]*Math.pow(n+r*h,-i);c[f]=p}return Fe(c,t.shape)},t.prototype.LRNGrad=function(t,e,n,r,i,a,o){this.assertNotComplex(t,"LRNGrad");for(var s=t.shape[3],u=t.dataSync(),c=e.dataSync(),l=n.dataSync(),f=new Float32Array(E(t.shape)),h=E(t.shape),p=0;p<h;p++){for(var d=p%s,m=p-d+Math.max(0,d-r),g=p-d+Math.min(s,d+r+1),y=0,v=m;v<g;v++)y+=Math.pow(c[v],2);for(y=a*y+i,v=m;v<g;v++){var b=-2*a*o*c[v]*l[p]/y;p===v&&(b+=Math.pow(y,-o)),b*=u[p],f[v]+=b}}return Fe(f,t.shape)},t.prototype.multinomial=function(t,e,n,r){this.assertNotComplex(t,"multinomial");for(var i=e?t:Ce(t),a=i.shape[0],o=i.shape[1],s=qe([a,n],"int32"),u=s.dataSync(),c=i.dataSync(),l=0;l<a;++l){var f=l*o,h=new Float32Array(o-1);h[0]=c[f];for(var p=1;p<h.length;++p)h[p]=h[p-1]+c[f+p];for(var d=Ca(r.toString()),m=l*n,g=0;g<n;++g){var y=d();u[m+g]=h.length;for(var v=0;v<h.length;v++)if(y<h[v]){u[m+g]=v;break}}}return s},t.prototype.oneHot=function(t,e,n,r){this.assertNotComplex(t,"oneHot");var i=new Float32Array(t.size*e);i.fill(r);for(var a=0;a<t.size;++a)t.get(a)>=0&&t.get(a)<e&&(i[a*e+t.get(a)]=n);return Le(i,[t.size,e],"int32")},t.prototype.nonMaxSuppression=function(t,e,n,r,i){return this.assertNotComplex(t,"nonMaxSuppression"),an(t.dataSync(),e.dataSync(),n,r,i)},t.prototype.fft=function(t){return this.fftBatch(t,!1)},t.prototype.ifft=function(t){return this.fftBatch(t,!0)},t.prototype.fftBatch=function(t,e){for(var n=t.shape[0],r=t.shape[1],i=Ra(t.shape,"float32"),a=Ra(t.shape,"float32"),o=Re(t).as2D(n,r),s=De(t).as2D(n,r),u=0;u<n;u++)for(var c=o.slice([u,0],[1,r]),l=s.slice([u,0],[1,r]),f=Te(c,l),h=this.fftImpl(f,e).dataSync(),p=0;p<r;p++){var d=en(h,p);i.values[u*r+p]=d.real,a.values[u*r+p]=d.imag}return Te(i.toTensor(),a.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(t,e){var n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){var i=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(i=Te(Re(i).div(je(r)),De(i).div(je(r)))),i}var a=t.dataSync(),o=function(t){for(var e=new Float32Array(t.length/2),n=new Float32Array(t.length/2),r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(this.fourierTransformByMatmul(a,r,e));return Te(o.real,o.imag).as2D(t.shape[0],t.shape[1])},t.prototype.isExponentOf2=function(t){return 0==(t&t-1)},t.prototype.fftRadix2=function(t,e,n){if(1===e)return t;var r=t.dataSync(),i=e/2,a=function(t){for(var e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e),i=0;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}(r),o=Te(a.real,a.imag).as1D(),s=function(t){for(var e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e),i=2;i<t.length;i+=4)n[Math.floor(i/4)]=t[i],r[Math.floor(i/4)]=t[i+1];return{real:n,imag:r}}(r),u=Te(s.real,s.imag).as1D();o=this.fftRadix2(o,i,n),u=this.fftRadix2(u,i,n);var c=function(t,e){for(var n=new Float32Array(t/2),r=new Float32Array(t/2),i=0;i<Math.ceil(t/2);i++){var a=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(a),r[i]=Math.sin(a)}return{real:n,imag:r}}(e,n),l=Te(c.real,c.imag).mul(u),f=o.add(l),h=o.sub(l),p=Re(f).concat(Re(h)),d=De(f).concat(De(h));return Te(p,d).as1D()},t.prototype.fourierTransformByMatmul=function(t,e,n){for(var r=new Float32Array(2*e),i=0;i<e;i++){for(var a=0,o=0,s=0;s<e;s++){var u=rn(i*s,e,n),c=en(t,s);a+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}n&&(a/=e,o/=e),nn(r,a,o,i)}return r},t.prototype.depthToSpace=function(t,e,n){b("NHWC"===n,"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),b(e>1,"blockSize should be > 1 for depthToSpace, but was: "+e);for(var r=t.shape[0],i=t.shape[1],a=t.shape[2],o=t.shape[3],s=i*e,u=a*e,c=o/(e*e),l=t.dataSync(),f=new Float32Array(r*s*u*c),h=0,p=0;p<r;++p)for(var d=0;d<s;++d)for(var m=Math.floor(d/e),g=d%e,y=0;y<u;++y)for(var v=Math.floor(y/e),w=(g*e+y%e)*c,_=0;_<c;++_){var x=_+w+o*(v+a*(m+i*p));f[h++]=l[x]}return Fe(f,[r,s,u,c])},t.prototype.broadcastedBinaryOp=function(t,e,n,r){var i=pe(t.shape,e.shape),a=Ra(i,n),o=t.dataSync(),s=e.dataSync(),u=fe(t.shape,i),c=fe(e.shape,i),l=a.values;if(u.length+c.length===0)for(var f=0;f<l.length;++f)l[f]=r(o[f%o.length],s[f%s.length]);else{var h=t.buffer(),p=e.buffer(),d=function(n){var i=a.indexToLoc(n),f=i.slice(-t.rank);u.forEach(function(t){return f[t]=0});var d=h.locToIndex(f),m=i.slice(-e.rank);c.forEach(function(t){return m[t]=0});var g=p.locToIndex(m);l[n]=r(o[d],s[g])};for(f=0;f<l.length;++f)d(f)}return a.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(t,e,n){var r=pe(t.shape,e.shape),i=Ra(r,"float32"),a=Ra(r,"float32"),o=t.dataSync(),s=e.dataSync(),u=fe(t.shape,r),c=fe(e.shape,r),l=i.values,f=a.values;if(u.length+c.length===0)for(var h=0;h<l.length;h++){var p=h%o.length,d=h%s.length,m=n(o[2*p],o[2*p+1],s[2*d],s[2*d+1]);l[h]=m.real,f[h]=m.imag}else{var g=this.data.get(t.dataId).complexTensors.real.buffer(),y=this.data.get(e.dataId).complexTensors.real.buffer(),v=function(r){var a=i.indexToLoc(r),h=a.slice(-t.rank);u.forEach(function(t){return h[t]=0});var p=g.locToIndex(h),d=a.slice(-e.rank);c.forEach(function(t){return d[t]=0});var m=y.locToIndex(d),v=n(o[2*p],o[2*p+1],s[2*m],s[2*m+1]);l[r]=v.real,f[r]=v.imag};for(h=0;h<l.length;h++)v(h)}return this.complex(i.toTensor(),a.toTensor())},t.prototype.split=function(t,e,n){return sn(t,e,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.cropAndResize=function(t,e,n,r,i,a){for(var o=t.shape,s=o[0],u=o[1],c=o[2],l=o[3],f=e.shape[0],h=r[0],p=r[1],d=Ra([f,h,p,l],t.dtype),m=e.dataSync(),g=n.dataSync(),y=t.dataSync(),v=t.strides,b=d.strides,w=0;w<f;w++){var _=4*w,x=m[_],E=m[_+1],S=m[_+2],N=m[_+3],I=g[w];if(!(I>=s))for(var O=h>1?(S-x)*(u-1)/(h-1):0,k=p>1?(N-E)*(c-1)/(p-1):0,A=0;A<h;A++){var C=h>1?x*(u-1)+A*O:.5*(x+S)*(u-1);if(C<0||C>u-1)for(var P=0;P<p;P++)for(var T=0;T<l;T++){var R=T+P*b[2]+A*b[1]+w*b[0];d.values[R]=a}else if("bilinear"===i){var D=Math.floor(C),M=Math.ceil(C),j=C-D;for(P=0;P<p;P++)if(($=p>1?E*(c-1)+P*k:.5*(E+N)*(c-1))<0||$>c-1)for(T=0;T<l;T++)R=T+P*b[2]+A*b[1]+w*b[0],d.values[R]=a;else{var B=Math.floor($),L=Math.ceil($),z=$-B;for(T=0;T<l;T++){var F=y[R=T+B*v[2]+D*v[1]+I*v[0]],U=y[R=T+L*v[2]+D*v[1]+I*v[0]],V=y[R=T+B*v[2]+M*v[1]+I*v[0]],W=F+(U-F)*z,q=V+(y[R=T+L*v[2]+M*v[1]+I*v[0]]-V)*z;R=T+P*b[2]+A*b[1]+w*b[0],d.values[R]=W+(q-W)*j}}}else for(P=0;P<p;++P){var $;if(($=p>1?E*(c-1)+P*k:.5*(E+N)*(c-1))<0||$>c-1)for(T=0;T<l;T++)R=T+P*b[2]+A*b[1]+w*b[0],d.values[R]=a;else{var H=Math.round($),K=Math.round(C);for(T=0;T<l;T++){var G=T+H*v[2]+K*v[1]+I*v[0],X=T+P*b[2]+A*b[1]+w*b[0];d.values[X]=y[G]}}}}}return d.toTensor()},t.prototype.sparseToDense=function(t,e,n,r){var i=be(0,t,n),a=i.sliceRank,o=i.numUpdates,s=i.sliceSize,u=i.strides,c=i.outputSize;return this.scatter(t,e,n,c,s,o,a,u,r,!1)},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],i=me(t,e),a=i[0],o=i[1],s=i[2],u=i[3];if(0===o)return Me([],a,t.dtype);for(var c=new st([o,s],t.dtype),l=e.dataSync(),f=t.dataSync(),h=0;h<o;h++){for(var p=[],d=0,m=0;m<r;m++){var g=l[h*r+m];d+=g*u[m],p.push(g)}if(d<0||d>=t.size/s)throw new Error("Invalid indices: "+p+" does not index into "+t.shape);for(var y=0;y<s;y++)c.values[h*s+y]=f[d*s+y]}return c.toTensor().reshape(a)},t.prototype.scatterND=function(t,e,n){var r=be(0,t,n),i=r.sliceRank,a=r.numUpdates,o=r.sliceSize,s=r.strides,u=r.outputSize,c=je(0);return this.scatter(t,e,n,u,o,a,i,s,c,!0)},t.prototype.scatter=function(t,e,n,r,i,a,o,s,u,c){var l=[r/i,i],f=t.dataSync(),h=e.dataSync();if(0===r)return Me([],n,e.dtype);var p=new st(l,e.dtype);p.values.fill(u.dataSync()[0]);for(var d=0;d<a;d++){for(var m=[],g=0,y=0;y<o;y++){var v=f[d*o+y];m.push(v),g+=v*s[y]}if(g<0||g>=r/i)throw new Error("Invalid indices: "+m+" does not index into "+n);for(var b=0;b<i;b++)c?p.values[g*i+b]+=h[d*i+b]:p.values[g*i+b]=0===e.rank?h[0]:h[d*i+b]}return p.toTensor().reshape(n)},t}();Lt.registerBackend("cpu",function(){return new xc},1,lt);var Ec="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:i;function Sc(){return new Promise(function(t){return Ec(function(){return t()})})}var Nc={float32:4,int32:4,uint16:2,uint8:1,bool:1};function Ic(t,e){for(var n={},r=0,i=function(e){var i=e.name,a=e.dtype,o=e.shape,s=E(o),u=void 0;if("quantization"in e){var c=e.quantization;if("uint8"!==c.dtype&&"uint16"!==c.dtype)throw new Error("Weight "+e.name+" has unknown quantization dtype "+c.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var l=Nc[c.dtype],f=t.slice(r,r+s*l),h="uint8"===c.dtype?new Uint8Array(f):new Uint16Array(f);if("float32"===a)u=Float32Array.from(h,function(t){return t*c.scale+c.min});else{if("int32"!==a)throw new Error("Unsupported dtype in weight '"+i+"': "+a);u=Int32Array.from(h,function(t){return Math.round(t*c.scale+c.min)})}r+=s*l}else{var p=Nc[a];if(f=t.slice(r,r+s*p),"float32"===a)u=new Float32Array(f);else if("int32"===a)u=new Int32Array(f);else{if("bool"!==a)throw new Error("Unsupported dtype in weight '"+i+"': "+a);u=new Uint8Array(f)}r+=s*p}var d=void 0;if("float32"===a)d=Me(u,o,"float32");else if("int32"===a)d=Me(u,o,"int32");else{if("bool"!==a)throw new Error("Unsupported dtype in weight '"+i+"': "+a);d=Me(u,o,"bool")}n[i]=d},a=0,o=e;a<o.length;a++)i(o[a]);return n}function Oc(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));var e=0,n=[];t.forEach(function(t){if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});var r=new Uint8Array(e),i=0;return n.forEach(function(t){r.set(new Uint8Array(t.buffer),i),i+=t.byteLength}),r.buffer}var kc=void 0!==a&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ac(t){return kc?a.byteLength(t):new Blob([t]).size}function Cc(t){var e=0;t.forEach(function(t){e+=t.byteLength});var n=new Uint8Array(e),r=0;return t.forEach(function(t){n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function Pc(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);var e=t.split("/");return e[e.length-1]}function Tc(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ac(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ac(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}var Rc=function(){function t(){this.saveRouters=[],this.loadRouters=[]}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerSaveRouter=function(e){t.getInstance().saveRouters.push(e)},t.registerLoadRouter=function(e){t.getInstance().loadRouters.push(e)},t.getSaveHandlers=function(e){return t.getHandlers(e,"save")},t.getLoadHandlers=function(e){return t.getHandlers(e,"load")},t.getHandlers=function(t,e){var n=[];return("load"===e?this.getInstance().loadRouters:this.getInstance().saveRouters).forEach(function(e){var r=e(t);null!==r&&n.push(r)}),n},t}(),Dc="://",Mc=function(){function t(){this.managers={}}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerManager=function(e,n){b(null!=e,"scheme must not be undefined or null."),e.endsWith(Dc)&&(e=e.slice(0,e.indexOf(Dc))),b(e.length>0,"scheme must not be an empty string.");var r=t.getInstance();b(null==r.managers[e],"A model store manager is already registered for scheme '"+e+"'."),r.managers[e]=n},t.getManager=function(t){var e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '"+t+"'");return e},t.getSchemes=function(){return Object.keys(this.getInstance().managers)},t}();function jc(t){if(-1===t.indexOf(Dc))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Mc.getSchemes().join(","));return{scheme:t.split(Dc)[0],path:t.split(Dc)[1]}}function Bc(t,e,n){return void 0===n&&(n=!1),c(this,void 0,void 0,function(){var r,i,a,o,s,u,c,f,h;return l(this,function(l){switch(l.label){case 0:return b(t!==e,"Old path and new path are the same: '"+t+"'"),b((r=Rc.getLoadHandlers(t)).length>0,"Copying failed because no load handler is found for source URL "+t+"."),b(r.length<2,"Copying failed because more than one ("+r.length+") load handlers for source URL "+t+"."),i=r[0],b((a=Rc.getSaveHandlers(e)).length>0,"Copying failed because no save handler is found for destination URL "+e+"."),b(a.length<2,"Copying failed because more than one ("+r.length+") save handlers for destination URL "+e+"."),o=a[0],s=jc(t).scheme,u=jc(t).path,c=s===jc(t).scheme,[4,i.load()];case 1:return f=l.sent(),n&&c?[4,Mc.getManager(s).removeModel(u)]:[3,3];case 2:l.sent(),l.label=3;case 3:return[4,o.save(f)];case 4:return h=l.sent(),!n||c?[3,6]:[4,Mc.getManager(s).removeModel(u)];case 5:l.sent(),l.label=6;case 6:return[2,h.modelArtifactsInfo]}})})}var Lc="models_store",zc="model_info_store";function Fc(){if(!Lt.get("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var t=window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Uc(t){var e=t.result;e.createObjectStore(Lc,{keyPath:"modelPath"}),e.createObjectStore(zc,{keyPath:"modelPath"})}var Vc=function(){function t(t){if(this.indexedDB=Fc(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}return t.prototype.save=function(t){return c(this,void 0,void 0,function(){return l(this,function(e){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,t)]})})},t.prototype.load=function(){return c(this,void 0,void 0,function(){return l(this,function(t){return[2,this.databaseAction(this.modelPath)]})})},t.prototype.databaseAction=function(t,e){var n=this;return new Promise(function(t,r){var i=n.indexedDB.open("tensorflowjs",1);i.onupgradeneeded=function(){return Uc(i)},i.onsuccess=function(){var a=i.result;if(null==e){var o=a.transaction(Lc,"readonly"),s=o.objectStore(Lc).get(n.modelPath);s.onsuccess=function(){if(null==s.result)return a.close(),r(new Error("Cannot find model with path '"+n.modelPath+"' in IndexedDB."));t(s.result.modelArtifacts)},s.onerror=function(t){return a.close(),r(s.error)},o.oncomplete=function(){return a.close()}}else{var u,c=Tc(e),l=a.transaction(zc,"readwrite"),f=l.objectStore(zc),h=f.put({modelPath:n.modelPath,modelArtifactsInfo:c});h.onsuccess=function(){var i=(u=a.transaction(Lc,"readwrite")).objectStore(Lc).put({modelPath:n.modelPath,modelArtifacts:e,modelArtifactsInfo:c});i.onsuccess=function(){return t({modelArtifactsInfo:c})},i.onerror=function(t){var e=(f=l.objectStore(zc)).delete(n.modelPath);e.onsuccess=function(){return a.close(),r(i.error)},e.onerror=function(t){return a.close(),r(i.error)}}},h.onerror=function(t){return a.close(),r(h.error)},l.oncomplete=function(){null==u?a.close():u.oncomplete=function(){return a.close()}}}},i.onerror=function(t){return r(i.error)}})},t.URL_SCHEME="indexeddb://",t}(),Wc=function(t){return Lt.get("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Vc.URL_SCHEME)?function(t){return new Vc(t)}(t.slice(Vc.URL_SCHEME.length)):null};Rc.registerSaveRouter(Wc),Rc.registerLoadRouter(Wc);var qc=function(){function t(){this.indexedDB=Fc()}return t.prototype.listModels=function(){return c(this,void 0,void 0,function(){var t=this;return l(this,function(e){return[2,new Promise(function(e,n){var r=t.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=function(){return Uc(r)},r.onsuccess=function(){var t=r.result,i=t.transaction(zc,"readonly"),a=i.objectStore(zc).getAll();a.onsuccess=function(){for(var t={},n=0,r=a.result;n<r.length;n++){var i=r[n];t[i.modelPath]=i.modelArtifactsInfo}e(t)},a.onerror=function(e){return t.close(),n(a.error)},i.oncomplete=function(){return t.close()}},r.onerror=function(t){return n(r.error)}})]})})},t.prototype.removeModel=function(t){return c(this,void 0,void 0,function(){var e=this;return l(this,function(n){return t=function(t){return t.startsWith(Vc.URL_SCHEME)?t.slice(Vc.URL_SCHEME.length):t}(t),[2,new Promise(function(n,r){var i=e.indexedDB.open("tensorflowjs",1);i.onupgradeneeded=function(){return Uc(i)},i.onsuccess=function(){var e,a=i.result,o=a.transaction(zc,"readwrite"),s=o.objectStore(zc),u=s.get(t);u.onsuccess=function(){if(null==u.result)return a.close(),r(new Error("Cannot find model with path '"+t+"' in IndexedDB."));var i=s.delete(t),o=function(){var i=(e=a.transaction(Lc,"readwrite")).objectStore(Lc).delete(t);i.onsuccess=function(){return n(u.result.modelArtifactsInfo)},i.onerror=function(t){return r(u.error)}};i.onsuccess=o,i.onerror=function(t){return o(),a.close(),r(u.error)}},u.onerror=function(t){return a.close(),r(u.error)},o.oncomplete=function(){null==e?a.close():e.oncomplete=function(){return a.close()}}},i.onerror=function(t){return r(i.error)}})]})})},t}();if(Lt.get("IS_BROWSER"))try{Mc.registerManager(Vc.URL_SCHEME,new qc)}catch(vt){}var $c="/",Hc="tensorflowjs_models",Kc="info",Gc="model_topology",Xc="weight_specs",Yc="weight_data";function Jc(t){return{info:[Hc,t,Kc].join($c),topology:[Hc,t,Gc].join($c),weightSpecs:[Hc,t,Xc].join($c),weightData:[Hc,t,Yc].join($c)}}function Zc(t){var e=t.split($c);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join($c)}var Qc=function(){function t(t){if(!Lt.get("IS_BROWSER")||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Jc(this.modelPath)}return t.prototype.save=function(t){return c(this,void 0,void 0,function(){var e,n,r,i;return l(this,function(o){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Tc(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){return kc?a.from(t).toString("base64"):btoa(String.fromCharCode.apply(null,new Uint8Array(t)))}(t.weightData)),[2,{modelArtifactsInfo:r}]}catch(t){for(i in this.keys)this.LS.removeItem(this.keys[i]);throw new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+r.modelTopologyBytes+", weightSpecsBytes="+r.weightSpecsBytes+", weightDataBytes="+r.weightDataBytes+".")}return[2]})})},t.prototype.load=function(){return c(this,void 0,void 0,function(){var t,e,n,r,i;return l(this,function(o){if(null==(t=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(e={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(e.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(e.weightSpecs=r,null==(i=this.LS.getItem(this.keys.weightData)))throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return e.weightData=function(t){if(kc){var e=a.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}for(var n=atob(t),r=new Uint8Array(n.length),i=0;i<n.length;++i)r.set([n.charCodeAt(i)],i);return r.buffer}(i),[2,e]})})},t.URL_SCHEME="localstorage://",t}(),tl=function(t){return Lt.get("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Qc.URL_SCHEME)?function(t){return new Qc(t)}(t.slice(Qc.URL_SCHEME.length)):null};Rc.registerSaveRouter(tl),Rc.registerLoadRouter(tl);var el=function(){function t(){b(Lt.get("IS_BROWSER"),"Current environment is not a web browser"),b(void 0!==window.localStorage,"Current browser does not appear to support localStorage"),this.LS=window.localStorage}return t.prototype.listModels=function(){return c(this,void 0,void 0,function(){var t,e,n,r,i,a;return l(this,function(o){for(t={},e=Hc+$c,n=$c+Kc,r=0;r<this.LS.length;++r)(i=this.LS.key(r)).startsWith(e)&&i.endsWith(n)&&(a=Zc(i),t[a]=JSON.parse(this.LS.getItem(i)));return[2,t]})})},t.prototype.removeModel=function(t){return c(this,void 0,void 0,function(){var e,n;return l(this,function(r){if(t=function(t){return t.startsWith(Qc.URL_SCHEME)?t.slice(Qc.URL_SCHEME.length):t}(t),e=Jc(t),null==this.LS.getItem(e.info))throw new Error("Cannot find model at path '"+t+"'");return n=JSON.parse(this.LS.getItem(e.info)),this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),[2,n]})})},t}();if(Lt.get("IS_BROWSER"))try{Mc.registerManager(Qc.URL_SCHEME,new el)}catch(vt){}var nl="model",rl=".json",il=".weights.bin",al=function(){function t(e){if(!Lt.get("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(t.URL_SCHEME)&&(e=e.slice(t.URL_SCHEME.length)),null!=e&&0!==e.length||(e=nl),this.modelTopologyFileName=e+rl,this.weightDataFileName=e+il}return t.prototype.save=function(t){return c(this,void 0,void 0,function(){var e,n,r,i,a,o;return l(this,function(s){if(e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"})),t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");return n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,weightsManifest:n},i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),(a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,a.href=i,a.click(),null!=t.weightData&&((o=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,o.href=e,o.click()),[2,{modelArtifactsInfo:Tc(t)}]})})},t.URL_SCHEME="downloads://",t}(),ol=function(){function t(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}return t.prototype.load=function(){return c(this,void 0,void 0,function(){var t,e,n=this;return l(this,function(r){return t=this.files[0],e=this.files.slice(1),[2,new Promise(function(r,i){var a=new FileReader;a.onload=function(a){var o=JSON.parse(a.target.result),s=o.modelTopology;if(null!=s){0===e.length&&r({modelTopology:s});var u=o.weightsManifest;if(null!=u){var c;try{c=n.checkManifestAndWeightFiles(u,e)}catch(t){return void i(t)}var l=[],f=[],h=[];u.forEach(function(t){t.paths.forEach(function(t){f.push(t),h.push(null)}),l.push.apply(l,t.weights)}),u.forEach(function(t){t.paths.forEach(function(t){var e=new FileReader;e.onload=function(e){var n=e.target.result,i=f.indexOf(t);h[i]=n,-1===h.indexOf(null)&&r({modelTopology:s,weightSpecs:l,weightData:Cc(h)})},e.onerror=function(e){return i("Failed to weights data from file of path '"+t+"'.")},e.readAsArrayBuffer(c[t])})})}else i(new Error("weightManifest field is missing from file "+t.name))}else i(new Error("modelTopology field is missing from file "+t.name))},a.onerror=function(e){return i("Failed to read model topology and weights manifest JSON from file '"+t.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},a.readAsText(t)})]})})},t.prototype.checkManifestAndWeightFiles=function(t,e){for(var n=[],r=e.map(function(t){return Pc(t.name)}),i={},a=0,o=t;a<o.length;a++)o[a].paths.forEach(function(t){var a=Pc(t);if(-1!==n.indexOf(a))throw new Error("Duplicate file basename found in weights manifest: '"+a+"'");if(n.push(a),-1===r.indexOf(a))throw new Error("Weight file with basename '"+a+"' is not provided.");i[t]=e[r.indexOf(a)]});if(n.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest ("+n.length+") and the number of weight files provided ("+e.length+").");return i},t}();function sl(t,e,n){return c(this,void 0,void 0,function(){var r,i;return l(this,function(a){switch(a.label){case 0:return null==n&&(n=fetch),r=t.map(function(t){return n(t,e)}),[4,Promise.all(r)];case 1:return i=a.sent(),[4,Promise.all(i.map(function(t){return t.arrayBuffer()}))];case 2:return[2,a.sent()]}})})}function ul(t){var e=this;return function(n,r,i){return void 0===r&&(r=""),c(e,void 0,void 0,function(){var e,a,o,s,u,c,f,h,p,d;return l(this,function(l){switch(l.label){case 0:if(e=n.map(function(){return!1}),a={},o=null!=i?i.map(function(){return!1}):[],s=[],n.forEach(function(t,n){var r=0;t.weights.forEach(function(t){var u="quantization"in t?t.quantization.dtype:t.dtype,c=Nc[u]*E(t.shape),l=function(){e[n]=!0,null==a[n]&&(a[n]=[]),a[n].push({manifestEntry:t,groupOffset:r,sizeBytes:c})};null!=i?i.forEach(function(e,n){e===t.name&&(l(),o[n]=!0)}):l(),s.push(t.name),r+=c})}),!o.every(function(t){return t}))throw u=i.filter(function(t,e){return!o[e]}),new Error("Could not find weights in manifest with names: "+u.join(", ")+". \nManifest JSON has weights with names: "+s.join(", ")+".");return c=e.reduce(function(t,e,n){return e&&t.push(n),t},[]),f=[],c.forEach(function(t){n[t].paths.forEach(function(t){var e=r+(r.endsWith("/")?"":"/")+t;f.push(e)})}),[4,t(f)];case 1:return h=l.sent(),p={},d=0,c.forEach(function(t){for(var e=n[t].paths.length,r=0,i=0;i<e;i++)r+=h[d+i].byteLength;for(var o=new ArrayBuffer(r),s=new Uint8Array(o),u=0,c=0;c<e;c++){var l=new Uint8Array(h[d+c]);s.set(l,u),u+=l.byteLength}a[t].forEach(function(t){var e=Ic(o.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(var n in e)p[n]=e[n]}),d+=e}),[2,p]}})})}}Rc.registerSaveRouter(function(t){return Lt.get("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(al.URL_SCHEME)?function(t){return void 0===t&&(t="model"),new al(t)}(t.slice(al.URL_SCHEME.length)):null});var cl=function(){function t(t,e,n,r){if(this.weightPathPrefix=n,this.DEFAULT_METHOD="POST",null==r){if("undefined"==typeof fetch)throw new Error("browserHTTPRequest is not supported outside the web browser without a fetch polyfill.");this.fetchFunc=fetch.bind("undefined"==typeof window?null:window)}else b("function"==typeof r,"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetchFunc=r;if(b(null!=t&&t.length>0,"URL path for browserHTTPRequest must not be null, undefined or empty."),Array.isArray(t)&&b(2===t.length,"URL paths for browserHTTPRequest must have a length of 2, (actual length is "+t.length+")."),this.path=t,null!=e&&null!=e.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e||{}}return t.prototype.save=function(t){return c(this,void 0,void 0,function(){var e,n,r,i;return l(this,function(a){switch(a.label){case 0:if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,weightsManifest:n},e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.getFetchFunc()(this.path,e)];case 1:if((i=a.sent()).ok)return[2,{modelArtifactsInfo:Tc(t),responses:[i]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+i.status+".")}})})},t.prototype.load=function(){return c(this,void 0,void 0,function(){return l(this,function(t){return[2,Array.isArray(this.path)?this.loadBinaryModel():this.loadJSONModel()]})})},t.prototype.loadBinaryTopology=function(){return c(this,void 0,void 0,function(){var t,e;return l(this,function(n){switch(n.label){case 0:return n.trys.push([0,3,,4]),[4,this.getFetchFunc()(this.path[0],this.requestInit)];case 1:if(!(t=n.sent()).ok)throw new Error("BrowserHTTPRequest.load() failed due to HTTP response: "+t.statusText);return[4,t.arrayBuffer()];case 2:return[2,n.sent()];case 3:throw e=n.sent(),new Error(this.path[0]+" not found. "+e);case 4:return[2]}})})},t.prototype.loadBinaryModel=function(){return c(this,void 0,void 0,function(){var t,e,n,r,i,a,o,s;return l(this,function(u){switch(u.label){case 0:return t=this.loadBinaryTopology(),[4,this.getFetchFunc()(this.path[1],this.requestInit)];case 1:if(!(e=u.sent()).ok)throw new Error("BrowserHTTPRequest.load() failed due to HTTP response: "+e.statusText);return[4,Promise.all([t,e])];case 2:return n=u.sent(),r=n[0],[4,n[1].json()];case 3:return null==(i=u.sent())?[3,5]:[4,this.loadWeights(i)];case 4:s=u.sent(),a=s[0],o=s[1],u.label=5;case 5:return[2,{modelTopology:r,weightSpecs:a,weightData:o}]}})})},t.prototype.loadJSONModel=function(){return c(this,void 0,void 0,function(){var t,e,n,r,i,a,o,s;return l(this,function(u){switch(u.label){case 0:return[4,this.getFetchFunc()(this.path,this.requestInit)];case 1:if(!(t=u.sent()).ok)throw new Error("BrowserHTTPRequest.load() failed due to HTTP response: "+t.statusText);return[4,t.json()];case 2:if(e=u.sent(),n=e.modelTopology,r=e.weightsManifest,null==n&&null==r)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==r?[3,4]:(o=e.weightsManifest,[4,this.loadWeights(o)]);case 3:s=u.sent(),i=s[0],a=s[1],u.label=4;case 4:return[2,{modelTopology:n,weightSpecs:i,weightData:a}]}})})},t.prototype.loadWeights=function(t){return c(this,void 0,void 0,function(){var e,n,r,i,a,o,s,u,c,f,h,p;return l(this,function(l){switch(l.label){case 0:for(e=Array.isArray(this.path)?this.path[1]:this.path,n=function(t){var e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=n[0],i=n[1],a=this.weightPathPrefix||r,o=[],s=0,u=t;s<u.length;s++)c=u[s],o.push.apply(o,c.weights);return f=[],t.forEach(function(t){t.paths.forEach(function(t){f.push(a+t+i)})}),h=[o],p=Cc,[4,sl(f,this.requestInit,this.getFetchFunc())];case 1:return[2,h.concat([p.apply(void 0,[l.sent()])])]}})})},t.prototype.getFetchFunc=function(){return this.fetchFunc},t.URL_SCHEME_REGEX=/^https?:\/\//,t}();function ll(t){return null!=t.match(cl.URL_SCHEME_REGEX)}var fl=function(t){return"undefined"==typeof fetch?null:(Array.isArray(t)?t.every(function(t){return ll(t)}):ll(t))?hl(t):null};function hl(t,e,n,r){return new cl(t,e,n,r)}Rc.registerSaveRouter(fl),Rc.registerLoadRouter(fl);var pl=function(){function t(t,e,n){this.modelTopology=t,this.weightSpecs=e,this.weightData=n}return t.prototype.load=function(){return c(this,void 0,void 0,function(){var t;return l(this,function(e){return t={},null!=this.modelTopology&&(t=u({modelTopology:this.modelTopology},t)),null!=this.weightSpecs&&this.weightSpecs.length>0&&(t=u({weightSpecs:this.weightSpecs},t)),null!=this.weightData&&this.weightData.byteLength>0&&(t=u({weightData:this.weightData},t)),[2,t]})})},t}(),dl=function(){function t(t){this.saveHandler=t}return t.prototype.save=function(t){return c(this,void 0,void 0,function(){return l(this,function(e){return[2,this.saveHandler(t)]})})},t}();var ml=Rc.registerSaveRouter,gl=Rc.registerLoadRouter,yl=Rc.getSaveHandlers,vl=Rc.getLoadHandlers,bl=Object.freeze({browserFiles:function(t){return new ol(t)},browserHTTPRequest:hl,concatenateArrayBuffers:Cc,decodeWeights:Ic,encodeWeights:function(t){return c(this,void 0,void 0,function(){var e,n,r,i;return l(this,function(a){switch(a.label){case 0:for(r in e=[],n=[],t){if("float32"!==(i=t[r]).dtype&&"int32"!==i.dtype&&"bool"!==i.dtype)throw new Error("Unsupported dtype in weight '"+r+"': "+i.dtype);e.push({name:r,shape:i.shape,dtype:i.dtype}),n.push(i.data())}return[4,Promise.all(n)];case 1:return[2,{data:Oc(a.sent()),specs:e}]}})})},fromMemory:function(t,e,n){return new pl(t,e,n)},getLoadHandlers:vl,getModelArtifactsInfoForJSON:Tc,getSaveHandlers:yl,isHTTPScheme:ll,loadWeights:function(t,e,n,r){return void 0===e&&(e=""),c(this,void 0,void 0,function(){return l(this,function(i){return[2,ul(function(t){return sl(t,r)})(t,e,n)]})})},registerLoadRouter:gl,registerSaveRouter:ml,weightsLoaderFactory:ul,withSaveHandler:function(t){return new dl(t)},copyModel:function(t,e){return c(this,void 0,void 0,function(){return l(this,function(n){switch(n.label){case 0:return[4,Bc(t,e,!1)];case 1:return[2,n.sent()]}})})},listModels:function(){return c(this,void 0,void 0,function(){var t,e,n,r,i,a,o;return l(this,function(s){switch(s.label){case 0:t=Mc.getSchemes(),e={},n=0,r=t,s.label=1;case 1:return n<r.length?(i=r[n],[4,Mc.getManager(i).listModels()]):[3,4];case 2:for(o in a=s.sent())e[i+Dc+o]=a[o];s.label=3;case 3:return n++,[3,1];case 4:return[2,e]}})})},moveModel:function(t,e){return c(this,void 0,void 0,function(){return l(this,function(n){switch(n.label){case 0:return[4,Bc(t,e,!0)];case 1:return[2,n.sent()]}})})},removeModel:function(t){return c(this,void 0,void 0,function(){var e;return l(this,function(n){switch(n.label){case 0:return e=jc(t),[4,Mc.getManager(e.scheme).removeModel(e.path)];case 1:return[2,n.sent()]}})})}});var wl=Ae({confusionMatrix_:function(t,e,n){var r=Oe(t,"labels","confusionMatrix"),i=Oe(e,"predictions","confusionMatrix");b(null==n||n>0&&Number.isInteger(n),"If provided, numClasses must be a positive integer, but got "+n),b(1===r.rank,"Expected the rank of labels to be 1, but got "+r.rank),b(1===i.rank,"Expected the rank of predictions to be 1, but got "+i.rank),b(r.shape[0]===i.shape[0],"Mismatch in the number of examples: "+r.shape[0]+" vs. "+i.shape[0]+". Labels and predictions should have the same number of elements."),b(n>0&&Number.isInteger(n),"numClasses is required to be a positive integer, but got "+n);var a=qa(r.asType("int32"),n),o=qa(i.asType("int32"),n);return a.transpose().matMul(o).asType("int32")}}),_l=Object.freeze({confusionMatrix:wl}),xl=function(){function t(){}return t.prototype.getClassName=function(){return this.constructor.className},t.fromConfig=function(t,e){return new t(e)},t}(),El=function(){function t(){this.classNameMap={}}return t.getMap=function(){return null==t.instance&&(t.instance=new t),t.instance},t.register=function(e){t.getMap().classNameMap[e.className]=[e,e.fromConfig]},t}();function Sl(t){b(null!=t.className,"Class being registered does not have the static className property defined."),b("string"==typeof t.className,"className is required to be a string, but got type "+typeof t.className),b(t.className.length>0,"Class being registered has an empty-string as its className, which is disallowed."),El.register(t)}var Nl=Object.freeze({Serializable:xl,SerializationMap:El,registerClass:Sl});function Il(t,e,n){return null==n&&(n=Lt.get("TEST_EPSILON")),Ol(t,e,function(t,e){return kl(t,Number(e),n)})}function Ol(t,e,n){if(t instanceof ft||e instanceof ft){if(t instanceof ft&&e instanceof ft){if(t.dtype!==e.dtype)throw new Error("Arrays are of different type actual: "+t.dtype+" vs expected: "+e.dtype+".");if(!S(t.shape,e.shape))throw new Error("Arrays are of different shape actual: "+t.shape+" vs expected: "+e.shape+".")}}else{var r=t.constructor.name,i=e.constructor.name;if(r!==i)throw new Error("Arrays are of different type actual: "+r+" vs expected: "+i)}var a,o;if(a=t instanceof ft?t.dataSync():t,o=e instanceof ft?e.dataSync():e,a.length!==o.length)throw new Error("Arrays have different lengths actual: "+a.length+" vs expected: "+o.length+".\nActual:   "+a+".\nExpected: "+o+".");for(var s=0;s<o.length;++s){var u=a[s],c=o[s];if(!n(u,c))throw new Error("Arrays differ: actual["+s+"] = "+u+", expected["+s+"] = "+c+".\nActual:   "+a+".\nExpected: "+o+".")}}function kl(t,e,n){return!(!isNaN(t)||!isNaN(e))||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}var Al=Object.freeze({WEBGL_ENVS:{HAS_WEBGL:!0},NODE_ENVS:{IS_NODE:!0},CHROME_ENVS:{IS_CHROME:!0},BROWSER_ENVS:{IS_BROWSER:!0},CPU_ENVS:{HAS_WEBGL:!1},ALL_ENVS:{},expectArraysClose:Il,expectPromiseToFail:function(t,e){t().then(function(){return e.fail()},function(){return e()})},expectArraysEqual:function(t,e){return t instanceof ft&&"string"===t.dtype||e instanceof ft&&"string"===e.dtype||t instanceof Array&&U(t[0])||e instanceof Array&&U(e[0])?Ol(t,e,function(t,e){return t==e}):Il(t,e,0)},expectNumbersClose:function(t,e,n){if(null==n&&(n=Lt.get("TEST_EPSILON")),!kl(t,e,n))throw new Error("Numbers differ: actual === "+t+", expected === "+e)},expectValuesInRange:function(t,e,n){var r;r=t instanceof ft?t.dataSync():t;for(var i=0;i<r.length;i++)if(r[i]<e||r[i]>n)throw new Error("Value out of range:"+r[i]+" low: "+e+", high: "+n)},expectArrayBuffersEqual:function(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}}),Cl="0.14.5",Pl=Object.freeze({gpgpu_util:Ni,webgl_util:ri,MathBackendWebGL:uo,GPGPUContext:Ii}),Tl=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.minimize=function(t,e,n){void 0===e&&(e=!1);var r=this.computeGradients(t,n),i=r.value,a=r.grads;return this.applyGradients(a),Object.keys(a).forEach(function(t){return a[t].dispose()}),e?i:(i.dispose(),null)},e.prototype.computeGradients=function(t,e){return qt(t,e)},e}(xl);Object.defineProperty(Tl,Symbol.hasInstance,{value:function(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});var Rl=function(t){function e(e,n,r){void 0===r&&(r=null);var i=t.call(this)||this;return i.learningRate=e,i.rho=n,i.epsilon=r,i.accumulatedGrads={},i.accumulatedUpdates={},i.c=Gt(je(-e)),i.rhoScalar=Gt(je(n)),i.oneMinusRho=Gt(je(1-n)),null===r&&(r=Lt.get("EPSILON")),i.epsilonScalar=Gt(je(r)),i}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=function(n){var i=Lt.engine.registeredVariables[n];null==r.accumulatedGrads[n]&&Kt(function(){e.accumulatedGrads[n]=Xe(i).variable(!1)}),null==r.accumulatedUpdates[n]&&Kt(function(){e.accumulatedUpdates[n]=Xe(i).variable(!1)});var a=t[n],o=r.accumulatedGrads[n],s=r.accumulatedUpdates[n];Kt(function(){var t=e.rhoScalar.mul(o).add(e.oneMinusRho.mul(a.square())),r=s.add(e.epsilonScalar).sqrt().div(o.add(e.epsilonScalar).sqrt()).mul(a),u=e.rhoScalar.mul(s).add(e.oneMinusRho.mul(r.square()));e.accumulatedGrads[n].assign(t),e.accumulatedUpdates[n].assign(u);var c=e.c.mul(r).add(i);i.assign(c)})},r=this;for(var i in t)n(i)},e.prototype.dispose=function(){var t=this;this.c.dispose(),this.epsilonScalar.dispose(),this.rhoScalar.dispose(),this.oneMinusRho.dispose(),null!=this.accumulatedUpdates&&(Object.keys(this.accumulatedUpdates).forEach(function(e){return t.accumulatedUpdates[e].dispose()}),Object.keys(this.accumulatedGrads).forEach(function(e){return t.accumulatedGrads[e].dispose()}))},e.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},e.fromConfig=function(t,e){return new t(e.learningRate,e.rho,e.epsilon)},e.className="AdadeltaOptimizer",e}(Tl);Sl(Rl);var Dl=function(t){function e(e,n){void 0===n&&(n=.1);var r=t.call(this)||this;return r.learningRate=e,r.initialAccumulatorValue=n,r.accumulatedGrads={},r.c=Gt(je(-e)),r.epsilon=Gt(je(Lt.get("EPSILON"))),r}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=function(n){var i=Lt.engine.registeredVariables[n];null==r.accumulatedGrads[n]&&Kt(function(){e.accumulatedGrads[n]=$e(i.shape,e.initialAccumulatorValue).variable(!1)});var a=t[n],o=r.accumulatedGrads[n];Kt(function(){var t=o.add(a.square());e.accumulatedGrads[n].assign(t);var r=e.c.mul(a.div(t.add(e.epsilon).sqrt())).add(i);i.assign(r)})},r=this;for(var i in t)n(i)},e.prototype.dispose=function(){var t=this;this.epsilon.dispose(),this.c.dispose(),null!=this.accumulatedGrads&&Object.keys(this.accumulatedGrads).forEach(function(e){return t.accumulatedGrads[e].dispose()})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},e.fromConfig=function(t,e){return new t(e.learningRate,e.initialAccumulatorValue)},e.className="AdagradOptimizer",e}(Tl);Sl(Dl);var Ml=function(t){function e(e,n,r,i){void 0===i&&(i=null);var a=t.call(this)||this;return a.learningRate=e,a.beta1=n,a.beta2=r,a.epsilon=i,a.accumulatedFirstMoment={},a.accumulatedSecondMoment={},a.c=Gt(je(-e)),a.beta1Scalar=Gt(je(n)),a.beta2Scalar=Gt(je(r)),Kt(function(){a.accBeta1=je(n).variable(),a.accBeta2=je(r).variable()}),a.oneMinusBeta1=Gt(je(1-n)),a.oneMinusBeta2=Gt(je(1-r)),a.one=Gt(je(1)),null===i&&(i=Lt.get("EPSILON")),a.epsScalar=Gt(je(i)),a}return s(e,t),e.prototype.applyGradients=function(t){var e=this;Kt(function(){var n=e.one.sub(e.accBeta1),r=e.one.sub(e.accBeta2);for(var i in t){var a=Lt.engine.registeredVariables[i];if(null==e.accumulatedFirstMoment[i]){var o=!1;e.accumulatedFirstMoment[i]=Xe(a).variable(o)}null==e.accumulatedSecondMoment[i]&&(o=!1,e.accumulatedSecondMoment[i]=Xe(a).variable(o));var s=t[i],u=e.accumulatedFirstMoment[i],c=e.accumulatedSecondMoment[i],l=e.beta1Scalar.mul(u).add(e.oneMinusBeta1.mul(s)),f=e.beta2Scalar.mul(c).add(e.oneMinusBeta2.mul(s.square())),h=l.div(n),p=f.div(r);e.accumulatedFirstMoment[i].assign(l),e.accumulatedSecondMoment[i].assign(f);var d=e.c.mul(h.div(e.epsScalar.add(p.sqrt()))).add(a);a.assign(d)}e.accBeta1.assign(e.accBeta1.mul(e.beta1Scalar)),e.accBeta2.assign(e.accBeta2.mul(e.beta2Scalar))})},e.prototype.dispose=function(){var t=this;this.c.dispose(),this.epsScalar.dispose(),this.beta1Scalar.dispose(),this.beta2Scalar.dispose(),this.accBeta1.dispose(),this.accBeta2.dispose(),this.oneMinusBeta1.dispose(),this.oneMinusBeta2.dispose(),this.one.dispose(),null!=this.accumulatedFirstMoment&&Object.keys(this.accumulatedFirstMoment).forEach(function(e){return t.accumulatedFirstMoment[e].dispose()}),null!=this.accumulatedSecondMoment&&Object.keys(this.accumulatedSecondMoment).forEach(function(e){return t.accumulatedSecondMoment[e].dispose()})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},e.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)},e.className="AdamOptimizer",e}(Tl);Sl(Ml);var jl=function(t){function e(e,n,r,i,a){void 0===i&&(i=null),void 0===a&&(a=0);var o=t.call(this)||this;return o.learningRate=e,o.beta1=n,o.beta2=r,o.epsilon=i,o.decay=a,o.accumulatedFirstMoment={},o.accumulatedWeightedInfNorm={},o.c=Gt(je(-e)),o.beta1Scalar=Gt(je(n)),o.beta2Scalar=Gt(je(r)),o.decayScalar=Gt(je(a)),Kt(function(){o.iteration=je(0).variable(),o.accBeta1=je(n).variable()}),o.oneMinusBeta1=Gt(je(1-n)),o.one=Gt(je(1)),null===i&&(i=Lt.get("EPSILON")),o.epsScalar=Gt(je(i)),o}return s(e,t),e.prototype.applyGradients=function(t){var e=this;Kt(function(){var n=e.one.sub(e.accBeta1),r=e.c.div(e.one.add(e.decayScalar.mul(e.iteration)));for(var i in t){var a=Lt.engine.registeredVariables[i];if(null==e.accumulatedFirstMoment[i]){var o=!1;e.accumulatedFirstMoment[i]=Xe(a).variable(o)}null==e.accumulatedWeightedInfNorm[i]&&(o=!1,e.accumulatedWeightedInfNorm[i]=Xe(a).variable(o));var s=t[i],u=e.accumulatedFirstMoment[i],c=e.accumulatedWeightedInfNorm[i],l=e.beta1Scalar.mul(u).add(e.oneMinusBeta1.mul(s)),f=e.beta2Scalar.mul(c),h=s.abs(),p=f.maximum(h);e.accumulatedFirstMoment[i].assign(l),e.accumulatedWeightedInfNorm[i].assign(p);var d=r.div(n).mul(l.div(e.epsScalar.add(p))).add(a);a.assign(d)}e.iteration.assign(e.iteration.add(e.one)),e.accBeta1.assign(e.accBeta1.mul(e.beta1Scalar))})},e.prototype.dispose=function(){var t=this;this.c.dispose(),this.epsScalar.dispose(),this.accBeta1.dispose(),this.beta1Scalar.dispose(),this.beta2Scalar.dispose(),this.oneMinusBeta1.dispose(),this.decayScalar.dispose(),this.iteration.dispose(),this.one.dispose(),null!=this.accumulatedFirstMoment&&Object.keys(this.accumulatedFirstMoment).forEach(function(e){return t.accumulatedFirstMoment[e].dispose()}),null!=this.accumulatedWeightedInfNorm&&Object.keys(this.accumulatedWeightedInfNorm).forEach(function(e){return t.accumulatedWeightedInfNorm[e].dispose()})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},e.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)},e.className="AdamaxOptimizer",e}(Tl);Sl(jl);var Bl=function(t){function e(e){var n=t.call(this)||this;return n.learningRate=e,n.setLearningRate(e),n}return s(e,t),e.prototype.applyGradients=function(t){var e=this;Object.keys(t).forEach(function(n){var r=t[n],i=Lt.engine.registeredVariables[n];Kt(function(){var t=e.c.mul(r).add(i);i.assign(t)})})},e.prototype.setLearningRate=function(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Gt(je(-t))},e.prototype.dispose=function(){this.c.dispose()},e.prototype.getConfig=function(){return{learningRate:this.learningRate}},e.fromConfig=function(t,e){return new t(e.learningRate)},e.className="SGDOptimizer",e}(Tl);Sl(Bl);var Ll=function(t){function e(e,n,r){void 0===r&&(r=!1);var i=t.call(this,e)||this;return i.learningRate=e,i.momentum=n,i.useNesterov=r,i.m=je(i.momentum),i.accumulations={},i}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=function(n){var i=Lt.engine.registeredVariables[n];null==r.accumulations[n]&&Kt(function(){e.accumulations[n]=Xe(i).variable(!1)});var a=r.accumulations[n],o=t[n];Kt(function(){var t,r=e.m.mul(a).add(o);t=e.useNesterov?e.c.mul(o.add(r.mul(e.m))).add(i):e.c.mul(r).add(i),e.accumulations[n].assign(r),i.assign(t)})},r=this;for(var i in t)n(i)},e.prototype.dispose=function(){if(t.prototype.dispose.call(this),this.m.dispose(),null!=this.accumulations)for(var e in this.accumulations)this.accumulations[e].dispose()},e.prototype.setMomentum=function(t){this.momentum=t},e.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},e.fromConfig=function(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)},e.className="MomentumOptimizer",e}(Bl);Sl(Ll);var zl=function(t){function e(e,n,r,i,a){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===i&&(i=null),void 0===a&&(a=!1);var o=t.call(this)||this;return o.learningRate=e,o.decay=n,o.momentum=r,o.epsilon=i,o.accumulatedMeanSquares={},o.accumulatedMeanGrads={},o.accumulatedMoments={},o.c=Gt(je(e)),o.decayScalar=Gt(je(n)),o.momentumScalar=Gt(je(r)),o.oneMinusDecay=Gt(je(1-n)),o.centered=a,null===i&&(i=Lt.get("EPSILON")),o.epsilonScalar=Gt(je(i)),o}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=function(n){var i=Lt.engine.registeredVariables[n];null==r.accumulatedMeanSquares[n]&&Kt(function(){e.accumulatedMeanSquares[n]=Xe(i).variable(!1)}),null==r.accumulatedMeanGrads[n]&&r.centered&&Kt(function(){e.accumulatedMeanGrads[n]=Xe(i).variable(!1)}),null==r.accumulatedMoments[n]&&Kt(function(){e.accumulatedMoments[n]=Xe(i).variable(!1)});var a=r.accumulatedMeanSquares[n],o=r.accumulatedMeanGrads[n],s=r.accumulatedMoments[n],u=t[n];Kt(function(){var t=e.decayScalar.mul(a).add(e.oneMinusDecay.mul(u.square()));if(e.centered){var r=e.decayScalar.mul(o).add(e.oneMinusDecay.mul(u)),c=e.momentumScalar.mul(s).add(e.c.mul(u).div(t.sub(r.square().add(e.epsilonScalar)).sqrt()));e.accumulatedMeanSquares[n].assign(t),e.accumulatedMeanGrads[n].assign(r),e.accumulatedMoments[n].assign(c);var l=i.sub(c);i.assign(l)}else{var f=e.decayScalar.mul(a).add(e.oneMinusDecay.mul(u.square()));c=e.momentumScalar.mul(s).add(e.c.mul(u).div(f.add(e.epsilonScalar).sqrt())),e.accumulatedMeanSquares[n].assign(f),e.accumulatedMoments[n].assign(c),l=i.sub(c),i.assign(l)}})},r=this;for(var i in t)n(i)},e.prototype.dispose=function(){var t=this;this.c.dispose(),this.epsilonScalar.dispose(),this.decayScalar.dispose(),this.momentumScalar.dispose(),this.oneMinusDecay.dispose(),null!=this.accumulatedMeanSquares&&Object.keys(this.accumulatedMeanSquares).forEach(function(e){return t.accumulatedMeanSquares[e].dispose()}),null!=this.accumulatedMeanGrads&&this.centered&&Object.keys(this.accumulatedMeanGrads).forEach(function(e){return t.accumulatedMeanGrads[e].dispose()}),null!=this.accumulatedMoments&&Object.keys(this.accumulatedMoments).forEach(function(e){return t.accumulatedMoments[e].dispose()})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},e.fromConfig=function(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)},e.className="RMSPropOptimizer",e}(Tl);Sl(zl);var Fl=function(){function t(){}return t.sgd=function(t){return new Bl(t)},t.momentum=function(t,e,n){return void 0===n&&(n=!1),new Ll(t,e,n)},t.rmsprop=function(t,e,n,r,i){return void 0===e&&(e=.9),void 0===n&&(n=0),void 0===r&&(r=null),void 0===i&&(i=!1),new zl(t,e,n,r,i)},t.adam=function(t,e,n,r){return void 0===t&&(t=.001),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),new Ml(t,e,n,r)},t.adadelta=function(t,e,n){return void 0===t&&(t=.001),void 0===e&&(e=.95),void 0===n&&(n=null),new Rl(t,e,n)},t.adamax=function(t,e,n,r,i){return void 0===t&&(t=.002),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),void 0===i&&(i=0),new jl(t,e,n,r,i)},t.adagrad=function(t,e){return void 0===e&&(e=.1),new Dl(t,e)},t}(),Ul={sgd:Fl.sgd,momentum:Fl.momentum,adadelta:Fl.adadelta,adagrad:Fl.adagrad,rmsprop:Fl.rmsprop,adamax:Fl.adamax,adam:Fl.adam},Vl=jt.setBackend,Wl=jt.getBackend,ql=jt.disposeVariables,$l=jt.memory;!function(t){ct=t}(_c)}).call(this,n(14),n(11),n(83).setImmediate,n(4).Buffer)},,function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){var r=n(4),i=r.Buffer;function a(t,e){for(var n in t)e[n]=t[n]}function o(t,e,n){return i(t,e,n)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=r:(a(r,e),e.Buffer=o),a(i,o),o.from=function(t,e,n){if("number"==typeof t)throw new TypeError("Argument must not be a number");return i(t,e,n)},o.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError("Argument must be a number");var r=i(t);return void 0!==e?"string"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r},o.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i(t)},o.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r.SlowBuffer(t)}},function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var r=n(137),i=n(138),a=n(84);function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return f(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=h(t,e);return t}(t,e,n,r):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(e,n),i=(t=s(t,r)).write(e,n);i!==r&&(t=t.slice(0,i));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=s(t,n)).length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(r=e.length)!=r?s(t,0):h(t,e);if("Buffer"===e.type&&a(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function f(t,e){if(l(e),t=s(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=s(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function d(t,e){if(u.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return F(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return U(t).length;default:if(r)return F(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,i){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(i)return-1;n=t.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,i);if("number"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,i);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,i){var a,o=1,s=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;o=2,s/=2,u/=2,n/=2}function c(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(i){var l=-1;for(a=n;a<s;a++)if(c(t,a)===c(e,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===u)return l*o}else-1!==l&&(a-=a-l),l=-1}else for(n+u>s&&(n=s-u),a=n;a>=0;a--){for(var f=!0,h=0;h<u;h++)if(c(t,a+h)!==c(e,h)){f=!1;break}if(f)return a}return-1}function v(t,e,n,r){n=Number(n)||0;var i=t.length-n;r?(r=Number(r))>i&&(r=i):r=i;var a=e.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var o=0;o<r;++o){var s=parseInt(e.substr(2*o,2),16);if(isNaN(s))return o;t[n+o]=s}return o}function b(t,e,n,r){return V(F(e,t.length-n),t,n,r)}function w(t,e,n,r){return V(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function _(t,e,n,r){return w(t,e,n,r)}function x(t,e,n,r){return V(U(e),t,n,r)}function E(t,e,n,r){return V(function(t,e){for(var n,r,i,a=[],o=0;o<t.length&&!((e-=2)<0);++o)n=t.charCodeAt(o),r=n>>8,i=n%256,a.push(i),a.push(r);return a}(e,t.length-n),t,n,r)}function S(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function N(t,e,n){n=Math.min(t.length,n);for(var r=[],i=e;i<n;){var a,o,s,u,c=t[i],l=null,f=c>239?4:c>223?3:c>191?2:1;if(i+f<=n)switch(f){case 1:c<128&&(l=c);break;case 2:128==(192&(a=t[i+1]))&&(u=(31&c)<<6|63&a)>127&&(l=u);break;case 3:a=t[i+1],o=t[i+2],128==(192&a)&&128==(192&o)&&(u=(15&c)<<12|(63&a)<<6|63&o)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:a=t[i+1],o=t[i+2],s=t[i+3],128==(192&a)&&128==(192&o)&&128==(192&s)&&(u=(15&c)<<18|(63&a)<<12|(63&o)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,f=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),i+=f}return function(t){var e=t.length;if(e<=I)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=I));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=o(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?s(t,e):void 0!==n?"string"==typeof r?s(t,e).fill(n,r):s(t,e).fill(n):s(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return f(null,t)},u.allocUnsafeSlow=function(t){return f(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,i=0,a=Math.min(n,r);i<a;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!a(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),i=0;for(n=0;n<t.length;++n){var o=t[n];if(!u.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,i),i+=o.length}return r},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)m(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)m(this,e,e+3),m(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)m(this,e,e+7),m(this,e+1,e+6),m(this,e+2,e+5),m(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?N(this,0,t):function(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return A(this,e,n);case"utf8":case"utf-8":return N(this,e,n);case"ascii":return O(this,e,n);case"latin1":case"binary":return k(this,e,n);case"base64":return S(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,i){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),e<0||n>t.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&e>=n)return 0;if(r>=i)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(i>>>=0)-(r>>>=0),o=(n>>>=0)-(e>>>=0),s=Math.min(a,o),c=this.slice(r,i),l=t.slice(e,n),f=0;f<s;++f)if(c[f]!==l[f]){a=c[f],o=l[f];break}return a<o?-1:o<a?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-e;if((void 0===n||n>i)&&(n=i),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return b(this,t,e,n);case"ascii":return w(this,t,e,n);case"latin1":case"binary":return _(this,t,e,n);case"base64":return x(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var I=4096;function O(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(127&t[i]);return r}function k(t,e,n){var r="";n=Math.min(t.length,n);for(var i=e;i<n;++i)r+=String.fromCharCode(t[i]);return r}function A(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var i="",a=e;a<n;++a)i+=z(t[a]);return i}function C(t,e,n){for(var r=t.slice(e,n),i="",a=0;a<r.length;a+=2)i+=String.fromCharCode(r[a]+256*r[a+1]);return i}function P(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function T(t,e,n,r,i,a){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function R(t,e,n,r){e<0&&(e=65535+e+1);for(var i=0,a=Math.min(t.length-n,2);i<a;++i)t[n+i]=(e&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var i=0,a=Math.min(t.length-n,4);i<a;++i)t[n+i]=e>>>8*(r?i:3-i)&255}function M(t,e,n,r,i,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function j(t,e,n,r,a){return a||M(t,0,n,4),i.write(t,e,n,r,23,4),n+4}function B(t,e,n,r,a){return a||M(t,0,n,8),i.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var i=e-t;n=new u(i,void 0);for(var a=0;a<i;++a)n[a]=this[a+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t],i=1,a=0;++a<e&&(i*=256);)r+=this[t+a]*i;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t+--e],i=1;e>0&&(i*=256);)r+=this[t+--e]*i;return r},u.prototype.readUInt8=function(t,e){return e||P(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||P(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||P(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||P(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||P(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=this[t],i=1,a=0;++a<e&&(i*=256);)r+=this[t+a]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||P(t,e,this.length);for(var r=e,i=1,a=this[t+--r];r>0&&(i*=256);)a+=this[t+--r]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*e)),a},u.prototype.readInt8=function(t,e){return e||P(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||P(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||P(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||P(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||P(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||P(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||P(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||P(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||P(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||T(this,t,e,n,Math.pow(2,8*n)-1,0);var i=1,a=0;for(this[e]=255&t;++a<n&&(i*=256);)this[e+a]=t/i&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||T(this,t,e,n,Math.pow(2,8*n)-1,0);var i=n-1,a=1;for(this[e+i]=255&t;--i>=0&&(a*=256);)this[e+i]=t/a&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);T(this,t,e,n,i-1,-i)}var a=0,o=1,s=0;for(this[e]=255&t;++a<n&&(o*=256);)t<0&&0===s&&0!==this[e+a-1]&&(s=1),this[e+a]=(t/o>>0)-s&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var i=Math.pow(2,8*n-1);T(this,t,e,n,i-1,-i)}var a=n-1,o=1,s=0;for(this[e+a]=255&t;--a>=0&&(o*=256);)t<0&&0===s&&0!==this[e+a+1]&&(s=1),this[e+a]=(t/o>>0)-s&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||T(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return j(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return j(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return B(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return B(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var i,a=r-n;if(this===t&&n<e&&e<r)for(i=a-1;i>=0;--i)t[i+e]=this[i+n];else if(a<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<a;++i)t[i+e]=this[i+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},u.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var o=u.isBuffer(t)?t:F(new u(t,r).toString()),s=o.length;for(a=0;a<n-e;++a)this[a+e]=o[a%s]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function z(t){return t<16?"0"+t.toString(16):t.toString(16)}function F(t,e){var n;e=e||1/0;for(var r=t.length,i=null,a=[],o=0;o<r;++o){if((n=t.charCodeAt(o))>55295&&n<57344){if(!i){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(o+1===r){(e-=3)>-1&&a.push(239,191,189);continue}i=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(e-=3)>-1&&a.push(239,191,189);if(i=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function U(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(L,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function V(t,e,n,r){for(var i=0;i<r&&!(i+n>=e.length||i>=t.length);++i)e[i+n]=t[i];return i}}).call(this,n(11))},function(t,e,n){(function(t){!function(t,e){"use strict";function r(t,e){if(!t)throw new Error(e||"Assertion failed")}function i(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}function a(t,e,n){if(a.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(n=e,e=10),this._init(t||0,e||10,n||"be"))}var o;"object"==typeof t?t.exports=a:e.BN=a,a.BN=a,a.wordSize=26;try{o=n(174).Buffer}catch(t){}function s(t,e,n){for(var r=0,i=Math.min(t.length,n),a=e;a<i;a++){var o=t.charCodeAt(a)-48;r<<=4,r|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return r}function u(t,e,n,r){for(var i=0,a=Math.min(t.length,n),o=e;o<a;o++){var s=t.charCodeAt(o)-48;i*=r,i+=s>=49?s-49+10:s>=17?s-17+10:s}return i}a.isBN=function(t){return t instanceof a||null!==t&&"object"==typeof t&&t.constructor.wordSize===a.wordSize&&Array.isArray(t.words)},a.max=function(t,e){return t.cmp(e)>0?t:e},a.min=function(t,e){return t.cmp(e)<0?t:e},a.prototype._init=function(t,e,n){if("number"==typeof t)return this._initNumber(t,e,n);if("object"==typeof t)return this._initArray(t,e,n);"hex"===e&&(e=16),r(e===(0|e)&&e>=2&&e<=36);var i=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&i++,16===e?this._parseHex(t,i):this._parseBase(t,e,i),"-"===t[0]&&(this.negative=1),this.strip(),"le"===n&&this._initArray(this.toArray(),e,n)},a.prototype._initNumber=function(t,e,n){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),e,n)},a.prototype._initArray=function(t,e,n){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var a,o,s=0;if("be"===n)for(i=t.length-1,a=0;i>=0;i-=3)o=t[i]|t[i-1]<<8|t[i-2]<<16,this.words[a]|=o<<s&67108863,this.words[a+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,a++);else if("le"===n)for(i=0,a=0;i<t.length;i+=3)o=t[i]|t[i+1]<<8|t[i+2]<<16,this.words[a]|=o<<s&67108863,this.words[a+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,a++);return this.strip()},a.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var r,i,a=0;for(n=t.length-6,r=0;n>=e;n-=6)i=s(t,n,n+6),this.words[r]|=i<<a&67108863,this.words[r+1]|=i>>>26-a&4194303,(a+=24)>=26&&(a-=26,r++);n+6!==e&&(i=s(t,e,n+6),this.words[r]|=i<<a&67108863,this.words[r+1]|=i>>>26-a&4194303),this.strip()},a.prototype._parseBase=function(t,e,n){this.words=[0],this.length=1;for(var r=0,i=1;i<=67108863;i*=e)r++;r--,i=i/e|0;for(var a=t.length-n,o=a%r,s=Math.min(a,a-o)+n,c=0,l=n;l<s;l+=r)c=u(t,l,l+r,e),this.imuln(i),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==o){var f=1;for(c=u(t,l,t.length,e),l=0;l<o;l++)f*=e;this.imuln(f),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}},a.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},a.prototype.clone=function(){var t=new a(null);return this.copy(t),t},a.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},a.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},a.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},a.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],f=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function h(t,e,n){n.negative=e.negative^t.negative;var r=t.length+e.length|0;n.length=r,r=r-1|0;var i=0|t.words[0],a=0|e.words[0],o=i*a,s=67108863&o,u=o/67108864|0;n.words[0]=s;for(var c=1;c<r;c++){for(var l=u>>>26,f=67108863&u,h=Math.min(c,e.length-1),p=Math.max(0,c-t.length+1);p<=h;p++){var d=c-p|0;l+=(o=(i=0|t.words[d])*(a=0|e.words[p])+f)/67108864|0,f=67108863&o}n.words[c]=0|f,u=0|l}return 0!==u?n.words[c]=0|u:n.length--,n.strip()}a.prototype.toString=function(t,e){var n;if(e=0|e||1,16===(t=t||10)||"hex"===t){n="";for(var i=0,a=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<i|a)).toString(16);n=0!==(a=s>>>24-i&16777215)||o!==this.length-1?c[6-u.length]+u+n:u+n,(i+=2)>=26&&(i-=26,o--)}for(0!==a&&(n=a.toString(16)+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(t===(0|t)&&t>=2&&t<=36){var h=l[t],p=f[t];n="";var d=this.clone();for(d.negative=0;!d.isZero();){var m=d.modn(p).toString(t);n=(d=d.idivn(p)).isZero()?m+n:c[h-m.length]+m+n}for(this.isZero()&&(n="0"+n);n.length%e!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},a.prototype.toJSON=function(){return this.toString(16)},a.prototype.toBuffer=function(t,e){return r(void 0!==o),this.toArrayLike(o,t,e)},a.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},a.prototype.toArrayLike=function(t,e,n){var i=this.byteLength(),a=n||Math.max(1,i);r(i<=a,"byte array longer than desired length"),r(a>0,"Requested array length <= 0"),this.strip();var o,s,u="le"===e,c=new t(a),l=this.clone();if(u){for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),c[s]=o;for(;s<a;s++)c[s]=0}else{for(s=0;s<a-i;s++)c[s]=0;for(s=0;!l.isZero();s++)o=l.andln(255),l.iushrn(8),c[a-s-1]=o}return c},Math.clz32?a.prototype._countBits=function(t){return 32-Math.clz32(t)}:a.prototype._countBits=function(t){var e=t,n=0;return e>=4096&&(n+=13,e>>>=13),e>=64&&(n+=7,e>>>=7),e>=8&&(n+=4,e>>>=4),e>=2&&(n+=2,e>>>=2),n+e},a.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,n=0;return 0==(8191&e)&&(n+=13,e>>>=13),0==(127&e)&&(n+=7,e>>>=7),0==(15&e)&&(n+=4,e>>>=4),0==(3&e)&&(n+=2,e>>>=2),0==(1&e)&&n++,n},a.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var n=this._zeroBits(this.words[e]);if(t+=n,26!==n)break}return t},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},a.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return 0!==this.negative},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},a.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},a.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},a.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},a.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var n=0;n<e.length;n++)this.words[n]=this.words[n]&t.words[n];return this.length=e.length,this.strip()},a.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},a.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},a.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},a.prototype.iuxor=function(t){var e,n;this.length>t.length?(e=this,n=t):(e=t,n=this);for(var r=0;r<n.length;r++)this.words[r]=e.words[r]^n.words[r];if(this!==e)for(;r<e.length;r++)this.words[r]=e.words[r];return this.length=e.length,this.strip()},a.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},a.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},a.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},a.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),n=t%26;this._expand(e),n>0&&e--;for(var i=0;i<e;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this.strip()},a.prototype.notn=function(t){return this.clone().inotn(t)},a.prototype.setn=function(t,e){r("number"==typeof t&&t>=0);var n=t/26|0,i=t%26;return this._expand(n+1),this.words[n]=e?this.words[n]|1<<i:this.words[n]&~(1<<i),this.strip()},a.prototype.iadd=function(t){var e,n,r;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(n=this,r=t):(n=t,r=this);for(var i=0,a=0;a<r.length;a++)e=(0|n.words[a])+(0|r.words[a])+i,this.words[a]=67108863&e,i=e>>>26;for(;0!==i&&a<n.length;a++)e=(0|n.words[a])+i,this.words[a]=67108863&e,i=e>>>26;if(this.length=n.length,0!==i)this.words[this.length]=i,this.length++;else if(n!==this)for(;a<n.length;a++)this.words[a]=n.words[a];return this},a.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},a.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var n,r,i=this.cmp(t);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(n=this,r=t):(n=t,r=this);for(var a=0,o=0;o<r.length;o++)a=(e=(0|n.words[o])-(0|r.words[o])+a)>>26,this.words[o]=67108863&e;for(;0!==a&&o<n.length;o++)a=(e=(0|n.words[o])+a)>>26,this.words[o]=67108863&e;if(0===a&&o<n.length&&n!==this)for(;o<n.length;o++)this.words[o]=n.words[o];return this.length=Math.max(this.length,o),n!==this&&(this.negative=1),this.strip()},a.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,e,n){var r,i,a,o=t.words,s=e.words,u=n.words,c=0,l=0|o[0],f=8191&l,h=l>>>13,p=0|o[1],d=8191&p,m=p>>>13,g=0|o[2],y=8191&g,v=g>>>13,b=0|o[3],w=8191&b,_=b>>>13,x=0|o[4],E=8191&x,S=x>>>13,N=0|o[5],I=8191&N,O=N>>>13,k=0|o[6],A=8191&k,C=k>>>13,P=0|o[7],T=8191&P,R=P>>>13,D=0|o[8],M=8191&D,j=D>>>13,B=0|o[9],L=8191&B,z=B>>>13,F=0|s[0],U=8191&F,V=F>>>13,W=0|s[1],q=8191&W,$=W>>>13,H=0|s[2],K=8191&H,G=H>>>13,X=0|s[3],Y=8191&X,J=X>>>13,Z=0|s[4],Q=8191&Z,tt=Z>>>13,et=0|s[5],nt=8191&et,rt=et>>>13,it=0|s[6],at=8191&it,ot=it>>>13,st=0|s[7],ut=8191&st,ct=st>>>13,lt=0|s[8],ft=8191&lt,ht=lt>>>13,pt=0|s[9],dt=8191&pt,mt=pt>>>13;n.negative=t.negative^e.negative,n.length=19;var gt=(c+(r=Math.imul(f,U))|0)+((8191&(i=(i=Math.imul(f,V))+Math.imul(h,U)|0))<<13)|0;c=((a=Math.imul(h,V))+(i>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(d,U),i=(i=Math.imul(d,V))+Math.imul(m,U)|0,a=Math.imul(m,V);var yt=(c+(r=r+Math.imul(f,q)|0)|0)+((8191&(i=(i=i+Math.imul(f,$)|0)+Math.imul(h,q)|0))<<13)|0;c=((a=a+Math.imul(h,$)|0)+(i>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(y,U),i=(i=Math.imul(y,V))+Math.imul(v,U)|0,a=Math.imul(v,V),r=r+Math.imul(d,q)|0,i=(i=i+Math.imul(d,$)|0)+Math.imul(m,q)|0,a=a+Math.imul(m,$)|0;var vt=(c+(r=r+Math.imul(f,K)|0)|0)+((8191&(i=(i=i+Math.imul(f,G)|0)+Math.imul(h,K)|0))<<13)|0;c=((a=a+Math.imul(h,G)|0)+(i>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(w,U),i=(i=Math.imul(w,V))+Math.imul(_,U)|0,a=Math.imul(_,V),r=r+Math.imul(y,q)|0,i=(i=i+Math.imul(y,$)|0)+Math.imul(v,q)|0,a=a+Math.imul(v,$)|0,r=r+Math.imul(d,K)|0,i=(i=i+Math.imul(d,G)|0)+Math.imul(m,K)|0,a=a+Math.imul(m,G)|0;var bt=(c+(r=r+Math.imul(f,Y)|0)|0)+((8191&(i=(i=i+Math.imul(f,J)|0)+Math.imul(h,Y)|0))<<13)|0;c=((a=a+Math.imul(h,J)|0)+(i>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(E,U),i=(i=Math.imul(E,V))+Math.imul(S,U)|0,a=Math.imul(S,V),r=r+Math.imul(w,q)|0,i=(i=i+Math.imul(w,$)|0)+Math.imul(_,q)|0,a=a+Math.imul(_,$)|0,r=r+Math.imul(y,K)|0,i=(i=i+Math.imul(y,G)|0)+Math.imul(v,K)|0,a=a+Math.imul(v,G)|0,r=r+Math.imul(d,Y)|0,i=(i=i+Math.imul(d,J)|0)+Math.imul(m,Y)|0,a=a+Math.imul(m,J)|0;var wt=(c+(r=r+Math.imul(f,Q)|0)|0)+((8191&(i=(i=i+Math.imul(f,tt)|0)+Math.imul(h,Q)|0))<<13)|0;c=((a=a+Math.imul(h,tt)|0)+(i>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(I,U),i=(i=Math.imul(I,V))+Math.imul(O,U)|0,a=Math.imul(O,V),r=r+Math.imul(E,q)|0,i=(i=i+Math.imul(E,$)|0)+Math.imul(S,q)|0,a=a+Math.imul(S,$)|0,r=r+Math.imul(w,K)|0,i=(i=i+Math.imul(w,G)|0)+Math.imul(_,K)|0,a=a+Math.imul(_,G)|0,r=r+Math.imul(y,Y)|0,i=(i=i+Math.imul(y,J)|0)+Math.imul(v,Y)|0,a=a+Math.imul(v,J)|0,r=r+Math.imul(d,Q)|0,i=(i=i+Math.imul(d,tt)|0)+Math.imul(m,Q)|0,a=a+Math.imul(m,tt)|0;var _t=(c+(r=r+Math.imul(f,nt)|0)|0)+((8191&(i=(i=i+Math.imul(f,rt)|0)+Math.imul(h,nt)|0))<<13)|0;c=((a=a+Math.imul(h,rt)|0)+(i>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(A,U),i=(i=Math.imul(A,V))+Math.imul(C,U)|0,a=Math.imul(C,V),r=r+Math.imul(I,q)|0,i=(i=i+Math.imul(I,$)|0)+Math.imul(O,q)|0,a=a+Math.imul(O,$)|0,r=r+Math.imul(E,K)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(S,K)|0,a=a+Math.imul(S,G)|0,r=r+Math.imul(w,Y)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(_,Y)|0,a=a+Math.imul(_,J)|0,r=r+Math.imul(y,Q)|0,i=(i=i+Math.imul(y,tt)|0)+Math.imul(v,Q)|0,a=a+Math.imul(v,tt)|0,r=r+Math.imul(d,nt)|0,i=(i=i+Math.imul(d,rt)|0)+Math.imul(m,nt)|0,a=a+Math.imul(m,rt)|0;var xt=(c+(r=r+Math.imul(f,at)|0)|0)+((8191&(i=(i=i+Math.imul(f,ot)|0)+Math.imul(h,at)|0))<<13)|0;c=((a=a+Math.imul(h,ot)|0)+(i>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(T,U),i=(i=Math.imul(T,V))+Math.imul(R,U)|0,a=Math.imul(R,V),r=r+Math.imul(A,q)|0,i=(i=i+Math.imul(A,$)|0)+Math.imul(C,q)|0,a=a+Math.imul(C,$)|0,r=r+Math.imul(I,K)|0,i=(i=i+Math.imul(I,G)|0)+Math.imul(O,K)|0,a=a+Math.imul(O,G)|0,r=r+Math.imul(E,Y)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(S,Y)|0,a=a+Math.imul(S,J)|0,r=r+Math.imul(w,Q)|0,i=(i=i+Math.imul(w,tt)|0)+Math.imul(_,Q)|0,a=a+Math.imul(_,tt)|0,r=r+Math.imul(y,nt)|0,i=(i=i+Math.imul(y,rt)|0)+Math.imul(v,nt)|0,a=a+Math.imul(v,rt)|0,r=r+Math.imul(d,at)|0,i=(i=i+Math.imul(d,ot)|0)+Math.imul(m,at)|0,a=a+Math.imul(m,ot)|0;var Et=(c+(r=r+Math.imul(f,ut)|0)|0)+((8191&(i=(i=i+Math.imul(f,ct)|0)+Math.imul(h,ut)|0))<<13)|0;c=((a=a+Math.imul(h,ct)|0)+(i>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(M,U),i=(i=Math.imul(M,V))+Math.imul(j,U)|0,a=Math.imul(j,V),r=r+Math.imul(T,q)|0,i=(i=i+Math.imul(T,$)|0)+Math.imul(R,q)|0,a=a+Math.imul(R,$)|0,r=r+Math.imul(A,K)|0,i=(i=i+Math.imul(A,G)|0)+Math.imul(C,K)|0,a=a+Math.imul(C,G)|0,r=r+Math.imul(I,Y)|0,i=(i=i+Math.imul(I,J)|0)+Math.imul(O,Y)|0,a=a+Math.imul(O,J)|0,r=r+Math.imul(E,Q)|0,i=(i=i+Math.imul(E,tt)|0)+Math.imul(S,Q)|0,a=a+Math.imul(S,tt)|0,r=r+Math.imul(w,nt)|0,i=(i=i+Math.imul(w,rt)|0)+Math.imul(_,nt)|0,a=a+Math.imul(_,rt)|0,r=r+Math.imul(y,at)|0,i=(i=i+Math.imul(y,ot)|0)+Math.imul(v,at)|0,a=a+Math.imul(v,ot)|0,r=r+Math.imul(d,ut)|0,i=(i=i+Math.imul(d,ct)|0)+Math.imul(m,ut)|0,a=a+Math.imul(m,ct)|0;var St=(c+(r=r+Math.imul(f,ft)|0)|0)+((8191&(i=(i=i+Math.imul(f,ht)|0)+Math.imul(h,ft)|0))<<13)|0;c=((a=a+Math.imul(h,ht)|0)+(i>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(L,U),i=(i=Math.imul(L,V))+Math.imul(z,U)|0,a=Math.imul(z,V),r=r+Math.imul(M,q)|0,i=(i=i+Math.imul(M,$)|0)+Math.imul(j,q)|0,a=a+Math.imul(j,$)|0,r=r+Math.imul(T,K)|0,i=(i=i+Math.imul(T,G)|0)+Math.imul(R,K)|0,a=a+Math.imul(R,G)|0,r=r+Math.imul(A,Y)|0,i=(i=i+Math.imul(A,J)|0)+Math.imul(C,Y)|0,a=a+Math.imul(C,J)|0,r=r+Math.imul(I,Q)|0,i=(i=i+Math.imul(I,tt)|0)+Math.imul(O,Q)|0,a=a+Math.imul(O,tt)|0,r=r+Math.imul(E,nt)|0,i=(i=i+Math.imul(E,rt)|0)+Math.imul(S,nt)|0,a=a+Math.imul(S,rt)|0,r=r+Math.imul(w,at)|0,i=(i=i+Math.imul(w,ot)|0)+Math.imul(_,at)|0,a=a+Math.imul(_,ot)|0,r=r+Math.imul(y,ut)|0,i=(i=i+Math.imul(y,ct)|0)+Math.imul(v,ut)|0,a=a+Math.imul(v,ct)|0,r=r+Math.imul(d,ft)|0,i=(i=i+Math.imul(d,ht)|0)+Math.imul(m,ft)|0,a=a+Math.imul(m,ht)|0;var Nt=(c+(r=r+Math.imul(f,dt)|0)|0)+((8191&(i=(i=i+Math.imul(f,mt)|0)+Math.imul(h,dt)|0))<<13)|0;c=((a=a+Math.imul(h,mt)|0)+(i>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,r=Math.imul(L,q),i=(i=Math.imul(L,$))+Math.imul(z,q)|0,a=Math.imul(z,$),r=r+Math.imul(M,K)|0,i=(i=i+Math.imul(M,G)|0)+Math.imul(j,K)|0,a=a+Math.imul(j,G)|0,r=r+Math.imul(T,Y)|0,i=(i=i+Math.imul(T,J)|0)+Math.imul(R,Y)|0,a=a+Math.imul(R,J)|0,r=r+Math.imul(A,Q)|0,i=(i=i+Math.imul(A,tt)|0)+Math.imul(C,Q)|0,a=a+Math.imul(C,tt)|0,r=r+Math.imul(I,nt)|0,i=(i=i+Math.imul(I,rt)|0)+Math.imul(O,nt)|0,a=a+Math.imul(O,rt)|0,r=r+Math.imul(E,at)|0,i=(i=i+Math.imul(E,ot)|0)+Math.imul(S,at)|0,a=a+Math.imul(S,ot)|0,r=r+Math.imul(w,ut)|0,i=(i=i+Math.imul(w,ct)|0)+Math.imul(_,ut)|0,a=a+Math.imul(_,ct)|0,r=r+Math.imul(y,ft)|0,i=(i=i+Math.imul(y,ht)|0)+Math.imul(v,ft)|0,a=a+Math.imul(v,ht)|0;var It=(c+(r=r+Math.imul(d,dt)|0)|0)+((8191&(i=(i=i+Math.imul(d,mt)|0)+Math.imul(m,dt)|0))<<13)|0;c=((a=a+Math.imul(m,mt)|0)+(i>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(L,K),i=(i=Math.imul(L,G))+Math.imul(z,K)|0,a=Math.imul(z,G),r=r+Math.imul(M,Y)|0,i=(i=i+Math.imul(M,J)|0)+Math.imul(j,Y)|0,a=a+Math.imul(j,J)|0,r=r+Math.imul(T,Q)|0,i=(i=i+Math.imul(T,tt)|0)+Math.imul(R,Q)|0,a=a+Math.imul(R,tt)|0,r=r+Math.imul(A,nt)|0,i=(i=i+Math.imul(A,rt)|0)+Math.imul(C,nt)|0,a=a+Math.imul(C,rt)|0,r=r+Math.imul(I,at)|0,i=(i=i+Math.imul(I,ot)|0)+Math.imul(O,at)|0,a=a+Math.imul(O,ot)|0,r=r+Math.imul(E,ut)|0,i=(i=i+Math.imul(E,ct)|0)+Math.imul(S,ut)|0,a=a+Math.imul(S,ct)|0,r=r+Math.imul(w,ft)|0,i=(i=i+Math.imul(w,ht)|0)+Math.imul(_,ft)|0,a=a+Math.imul(_,ht)|0;var Ot=(c+(r=r+Math.imul(y,dt)|0)|0)+((8191&(i=(i=i+Math.imul(y,mt)|0)+Math.imul(v,dt)|0))<<13)|0;c=((a=a+Math.imul(v,mt)|0)+(i>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,r=Math.imul(L,Y),i=(i=Math.imul(L,J))+Math.imul(z,Y)|0,a=Math.imul(z,J),r=r+Math.imul(M,Q)|0,i=(i=i+Math.imul(M,tt)|0)+Math.imul(j,Q)|0,a=a+Math.imul(j,tt)|0,r=r+Math.imul(T,nt)|0,i=(i=i+Math.imul(T,rt)|0)+Math.imul(R,nt)|0,a=a+Math.imul(R,rt)|0,r=r+Math.imul(A,at)|0,i=(i=i+Math.imul(A,ot)|0)+Math.imul(C,at)|0,a=a+Math.imul(C,ot)|0,r=r+Math.imul(I,ut)|0,i=(i=i+Math.imul(I,ct)|0)+Math.imul(O,ut)|0,a=a+Math.imul(O,ct)|0,r=r+Math.imul(E,ft)|0,i=(i=i+Math.imul(E,ht)|0)+Math.imul(S,ft)|0,a=a+Math.imul(S,ht)|0;var kt=(c+(r=r+Math.imul(w,dt)|0)|0)+((8191&(i=(i=i+Math.imul(w,mt)|0)+Math.imul(_,dt)|0))<<13)|0;c=((a=a+Math.imul(_,mt)|0)+(i>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(L,Q),i=(i=Math.imul(L,tt))+Math.imul(z,Q)|0,a=Math.imul(z,tt),r=r+Math.imul(M,nt)|0,i=(i=i+Math.imul(M,rt)|0)+Math.imul(j,nt)|0,a=a+Math.imul(j,rt)|0,r=r+Math.imul(T,at)|0,i=(i=i+Math.imul(T,ot)|0)+Math.imul(R,at)|0,a=a+Math.imul(R,ot)|0,r=r+Math.imul(A,ut)|0,i=(i=i+Math.imul(A,ct)|0)+Math.imul(C,ut)|0,a=a+Math.imul(C,ct)|0,r=r+Math.imul(I,ft)|0,i=(i=i+Math.imul(I,ht)|0)+Math.imul(O,ft)|0,a=a+Math.imul(O,ht)|0;var At=(c+(r=r+Math.imul(E,dt)|0)|0)+((8191&(i=(i=i+Math.imul(E,mt)|0)+Math.imul(S,dt)|0))<<13)|0;c=((a=a+Math.imul(S,mt)|0)+(i>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(L,nt),i=(i=Math.imul(L,rt))+Math.imul(z,nt)|0,a=Math.imul(z,rt),r=r+Math.imul(M,at)|0,i=(i=i+Math.imul(M,ot)|0)+Math.imul(j,at)|0,a=a+Math.imul(j,ot)|0,r=r+Math.imul(T,ut)|0,i=(i=i+Math.imul(T,ct)|0)+Math.imul(R,ut)|0,a=a+Math.imul(R,ct)|0,r=r+Math.imul(A,ft)|0,i=(i=i+Math.imul(A,ht)|0)+Math.imul(C,ft)|0,a=a+Math.imul(C,ht)|0;var Ct=(c+(r=r+Math.imul(I,dt)|0)|0)+((8191&(i=(i=i+Math.imul(I,mt)|0)+Math.imul(O,dt)|0))<<13)|0;c=((a=a+Math.imul(O,mt)|0)+(i>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(L,at),i=(i=Math.imul(L,ot))+Math.imul(z,at)|0,a=Math.imul(z,ot),r=r+Math.imul(M,ut)|0,i=(i=i+Math.imul(M,ct)|0)+Math.imul(j,ut)|0,a=a+Math.imul(j,ct)|0,r=r+Math.imul(T,ft)|0,i=(i=i+Math.imul(T,ht)|0)+Math.imul(R,ft)|0,a=a+Math.imul(R,ht)|0;var Pt=(c+(r=r+Math.imul(A,dt)|0)|0)+((8191&(i=(i=i+Math.imul(A,mt)|0)+Math.imul(C,dt)|0))<<13)|0;c=((a=a+Math.imul(C,mt)|0)+(i>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,r=Math.imul(L,ut),i=(i=Math.imul(L,ct))+Math.imul(z,ut)|0,a=Math.imul(z,ct),r=r+Math.imul(M,ft)|0,i=(i=i+Math.imul(M,ht)|0)+Math.imul(j,ft)|0,a=a+Math.imul(j,ht)|0;var Tt=(c+(r=r+Math.imul(T,dt)|0)|0)+((8191&(i=(i=i+Math.imul(T,mt)|0)+Math.imul(R,dt)|0))<<13)|0;c=((a=a+Math.imul(R,mt)|0)+(i>>>13)|0)+(Tt>>>26)|0,Tt&=67108863,r=Math.imul(L,ft),i=(i=Math.imul(L,ht))+Math.imul(z,ft)|0,a=Math.imul(z,ht);var Rt=(c+(r=r+Math.imul(M,dt)|0)|0)+((8191&(i=(i=i+Math.imul(M,mt)|0)+Math.imul(j,dt)|0))<<13)|0;c=((a=a+Math.imul(j,mt)|0)+(i>>>13)|0)+(Rt>>>26)|0,Rt&=67108863;var Dt=(c+(r=Math.imul(L,dt))|0)+((8191&(i=(i=Math.imul(L,mt))+Math.imul(z,dt)|0))<<13)|0;return c=((a=Math.imul(z,mt))+(i>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,u[0]=gt,u[1]=yt,u[2]=vt,u[3]=bt,u[4]=wt,u[5]=_t,u[6]=xt,u[7]=Et,u[8]=St,u[9]=Nt,u[10]=It,u[11]=Ot,u[12]=kt,u[13]=At,u[14]=Ct,u[15]=Pt,u[16]=Tt,u[17]=Rt,u[18]=Dt,0!==c&&(u[19]=c,n.length++),n};function d(t,e,n){return(new m).mulp(t,e,n)}function m(t,e){this.x=t,this.y=e}Math.imul||(p=h),a.prototype.mulTo=function(t,e){var n=this.length+t.length;return 10===this.length&&10===t.length?p(this,t,e):n<63?h(this,t,e):n<1024?function(t,e,n){n.negative=e.negative^t.negative,n.length=t.length+e.length;for(var r=0,i=0,a=0;a<n.length-1;a++){var o=i;i=0;for(var s=67108863&r,u=Math.min(a,e.length-1),c=Math.max(0,a-t.length+1);c<=u;c++){var l=a-c,f=(0|t.words[l])*(0|e.words[c]),h=67108863&f;s=67108863&(h=h+s|0),i+=(o=(o=o+(f/67108864|0)|0)+(h>>>26)|0)>>>26,o&=67108863}n.words[a]=s,r=o,o=i}return 0!==r?n.words[a]=r:n.length--,n.strip()}(this,t,e):d(this,t,e)},m.prototype.makeRBT=function(t){for(var e=new Array(t),n=a.prototype._countBits(t)-1,r=0;r<t;r++)e[r]=this.revBin(r,n,t);return e},m.prototype.revBin=function(t,e,n){if(0===t||t===n-1)return t;for(var r=0,i=0;i<e;i++)r|=(1&t)<<e-i-1,t>>=1;return r},m.prototype.permute=function(t,e,n,r,i,a){for(var o=0;o<a;o++)r[o]=e[t[o]],i[o]=n[t[o]]},m.prototype.transform=function(t,e,n,r,i,a){this.permute(a,t,e,n,r,i);for(var o=1;o<i;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),c=Math.sin(2*Math.PI/s),l=0;l<i;l+=s)for(var f=u,h=c,p=0;p<o;p++){var d=n[l+p],m=r[l+p],g=n[l+p+o],y=r[l+p+o],v=f*g-h*y;y=f*y+h*g,g=v,n[l+p]=d+g,r[l+p]=m+y,n[l+p+o]=d-g,r[l+p+o]=m-y,p!==s&&(v=u*f-c*h,h=u*h+c*f,f=v)}},m.prototype.guessLen13b=function(t,e){var n=1|Math.max(e,t),r=1&n,i=0;for(n=n/2|0;n;n>>>=1)i++;return 1<<i+1+r},m.prototype.conjugate=function(t,e,n){if(!(n<=1))for(var r=0;r<n/2;r++){var i=t[r];t[r]=t[n-r-1],t[n-r-1]=i,i=e[r],e[r]=-e[n-r-1],e[n-r-1]=-i}},m.prototype.normalize13b=function(t,e){for(var n=0,r=0;r<e/2;r++){var i=8192*Math.round(t[2*r+1]/e)+Math.round(t[2*r]/e)+n;t[r]=67108863&i,n=i<67108864?0:i/67108864|0}return t},m.prototype.convert13b=function(t,e,n,i){for(var a=0,o=0;o<e;o++)a+=0|t[o],n[2*o]=8191&a,a>>>=13,n[2*o+1]=8191&a,a>>>=13;for(o=2*e;o<i;++o)n[o]=0;r(0===a),r(0==(-8192&a))},m.prototype.stub=function(t){for(var e=new Array(t),n=0;n<t;n++)e[n]=0;return e},m.prototype.mulp=function(t,e,n){var r=2*this.guessLen13b(t.length,e.length),i=this.makeRBT(r),a=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),c=new Array(r),l=new Array(r),f=new Array(r),h=n.words;h.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(e.words,e.length,c,r),this.transform(o,a,s,u,r,i),this.transform(c,a,l,f,r,i);for(var p=0;p<r;p++){var d=s[p]*l[p]-u[p]*f[p];u[p]=s[p]*f[p]+u[p]*l[p],s[p]=d}return this.conjugate(s,u,r),this.transform(s,u,h,a,r,i),this.conjugate(h,a,r),this.normalize13b(h,r),n.negative=t.negative^e.negative,n.length=t.length+e.length,n.strip()},a.prototype.mul=function(t){var e=new a(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},a.prototype.mulf=function(t){var e=new a(null);return e.words=new Array(this.length+t.length),d(this,t,e)},a.prototype.imul=function(t){return this.clone().mulTo(t,this)},a.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var e=0,n=0;n<this.length;n++){var i=(0|this.words[n])*t,a=(67108863&i)+(67108863&e);e>>=26,e+=i/67108864|0,e+=a>>>26,this.words[n]=67108863&a}return 0!==e&&(this.words[n]=e,this.length++),this},a.prototype.muln=function(t){return this.clone().imuln(t)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),n=0;n<e.length;n++){var r=n/26|0,i=n%26;e[n]=(t.words[r]&1<<i)>>>i}return e}(t);if(0===e.length)return new a(1);for(var n=this,r=0;r<e.length&&0===e[r];r++,n=n.sqr());if(++r<e.length)for(var i=n.sqr();r<e.length;r++,i=i.sqr())0!==e[r]&&(n=n.mul(i));return n},a.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var e,n=t%26,i=(t-n)/26,a=67108863>>>26-n<<26-n;if(0!==n){var o=0;for(e=0;e<this.length;e++){var s=this.words[e]&a,u=(0|this.words[e])-s<<n;this.words[e]=u|o,o=s>>>26-n}o&&(this.words[e]=o,this.length++)}if(0!==i){for(e=this.length-1;e>=0;e--)this.words[e+i]=this.words[e];for(e=0;e<i;e++)this.words[e]=0;this.length+=i}return this.strip()},a.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},a.prototype.iushrn=function(t,e,n){var i;r("number"==typeof t&&t>=0),i=e?(e-e%26)/26:0;var a=t%26,o=Math.min((t-a)/26,this.length),s=67108863^67108863>>>a<<a,u=n;if(i-=o,i=Math.max(0,i),u){for(var c=0;c<o;c++)u.words[c]=this.words[c];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,c=0;c<this.length;c++)this.words[c]=this.words[c+o];else this.words[0]=0,this.length=1;var l=0;for(c=this.length-1;c>=0&&(0!==l||c>=i);c--){var f=0|this.words[c];this.words[c]=l<<26-a|f>>>a,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},a.prototype.ishrn=function(t,e,n){return r(0===this.negative),this.iushrn(t,e,n)},a.prototype.shln=function(t){return this.clone().ishln(t)},a.prototype.ushln=function(t){return this.clone().iushln(t)},a.prototype.shrn=function(t){return this.clone().ishrn(t)},a.prototype.ushrn=function(t){return this.clone().iushrn(t)},a.prototype.testn=function(t){r("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26,i=1<<e;return!(this.length<=n)&&!!(this.words[n]&i)},a.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var e=t%26,n=(t-e)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==e&&n++,this.length=Math.min(n,this.length),0!==e){var i=67108863^67108863>>>e<<e;this.words[this.length-1]&=i}return this.strip()},a.prototype.maskn=function(t){return this.clone().imaskn(t)},a.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},a.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},a.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},a.prototype.addn=function(t){return this.clone().iaddn(t)},a.prototype.subn=function(t){return this.clone().isubn(t)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(t,e,n){var i,a,o=t.length+n;this._expand(o);var s=0;for(i=0;i<t.length;i++){a=(0|this.words[i+n])+s;var u=(0|t.words[i])*e;s=((a-=67108863&u)>>26)-(u/67108864|0),this.words[i+n]=67108863&a}for(;i<this.length-n;i++)s=(a=(0|this.words[i+n])+s)>>26,this.words[i+n]=67108863&a;if(0===s)return this.strip();for(r(-1===s),s=0,i=0;i<this.length;i++)s=(a=-(0|this.words[i])+s)>>26,this.words[i]=67108863&a;return this.negative=1,this.strip()},a.prototype._wordDiv=function(t,e){var n=(this.length,t.length),r=this.clone(),i=t,o=0|i.words[i.length-1];0!==(n=26-this._countBits(o))&&(i=i.ushln(n),r.iushln(n),o=0|i.words[i.length-1]);var s,u=r.length-i.length;if("mod"!==e){(s=new a(null)).length=u+1,s.words=new Array(s.length);for(var c=0;c<s.length;c++)s.words[c]=0}var l=r.clone()._ishlnsubmul(i,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var h=67108864*(0|r.words[i.length+f])+(0|r.words[i.length+f-1]);for(h=Math.min(h/o|0,67108863),r._ishlnsubmul(i,h,f);0!==r.negative;)h--,r.negative=0,r._ishlnsubmul(i,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=h)}return s&&s.strip(),r.strip(),"div"!==e&&0!==n&&r.iushrn(n),{div:s||null,mod:r}},a.prototype.divmod=function(t,e,n){return r(!t.isZero()),this.isZero()?{div:new a(0),mod:new a(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,e),"mod"!==e&&(i=s.div.neg()),"div"!==e&&(o=s.mod.neg(),n&&0!==o.negative&&o.iadd(t)),{div:i,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),e),"mod"!==e&&(i=s.div.neg()),{div:i,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),e),"div"!==e&&(o=s.mod.neg(),n&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new a(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new a(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new a(this.modn(t.words[0]))}:this._wordDiv(t,e);var i,o,s},a.prototype.div=function(t){return this.divmod(t,"div",!1).div},a.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},a.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},a.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var n=0!==e.div.negative?e.mod.isub(t):e.mod,r=t.ushrn(1),i=t.andln(1),a=n.cmp(r);return a<0||1===i&&0===a?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},a.prototype.modn=function(t){r(t<=67108863);for(var e=(1<<26)%t,n=0,i=this.length-1;i>=0;i--)n=(e*n+(0|this.words[i]))%t;return n},a.prototype.idivn=function(t){r(t<=67108863);for(var e=0,n=this.length-1;n>=0;n--){var i=(0|this.words[n])+67108864*e;this.words[n]=i/t|0,e=i%t}return this.strip()},a.prototype.divn=function(t){return this.clone().idivn(t)},a.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i=new a(1),o=new a(0),s=new a(0),u=new a(1),c=0;e.isEven()&&n.isEven();)e.iushrn(1),n.iushrn(1),++c;for(var l=n.clone(),f=e.clone();!e.isZero();){for(var h=0,p=1;0==(e.words[0]&p)&&h<26;++h,p<<=1);if(h>0)for(e.iushrn(h);h-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(l),o.isub(f)),i.iushrn(1),o.iushrn(1);for(var d=0,m=1;0==(n.words[0]&m)&&d<26;++d,m<<=1);if(d>0)for(n.iushrn(d);d-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);e.cmp(n)>=0?(e.isub(n),i.isub(s),o.isub(u)):(n.isub(e),s.isub(i),u.isub(o))}return{a:s,b:u,gcd:n.iushln(c)}},a.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var e=this,n=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var i,o=new a(1),s=new a(0),u=n.clone();e.cmpn(1)>0&&n.cmpn(1)>0;){for(var c=0,l=1;0==(e.words[0]&l)&&c<26;++c,l<<=1);if(c>0)for(e.iushrn(c);c-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,h=1;0==(n.words[0]&h)&&f<26;++f,h<<=1);if(f>0)for(n.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);e.cmp(n)>=0?(e.isub(n),o.isub(s)):(n.isub(e),s.isub(o))}return(i=0===e.cmpn(1)?o:s).cmpn(0)<0&&i.iadd(t),i},a.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),n=t.clone();e.negative=0,n.negative=0;for(var r=0;e.isEven()&&n.isEven();r++)e.iushrn(1),n.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;n.isEven();)n.iushrn(1);var i=e.cmp(n);if(i<0){var a=e;e=n,n=a}else if(0===i||0===n.cmpn(1))break;e.isub(n)}return n.iushln(r)},a.prototype.invm=function(t){return this.egcd(t).a.umod(t)},a.prototype.isEven=function(){return 0==(1&this.words[0])},a.prototype.isOdd=function(){return 1==(1&this.words[0])},a.prototype.andln=function(t){return this.words[0]&t},a.prototype.bincn=function(t){r("number"==typeof t);var e=t%26,n=(t-e)/26,i=1<<e;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var a=i,o=n;0!==a&&o<this.length;o++){var s=0|this.words[o];a=(s+=a)>>>26,s&=67108863,this.words[o]=s}return 0!==a&&(this.words[o]=a,this.length++),this},a.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},a.prototype.cmpn=function(t){var e,n=t<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this.strip(),this.length>1)e=1;else{n&&(t=-t),r(t<=67108863,"Number is too big");var i=0|this.words[0];e=i===t?0:i<t?-1:1}return 0!==this.negative?0|-e:e},a.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},a.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,n=this.length-1;n>=0;n--){var r=0|this.words[n],i=0|t.words[n];if(r!==i){r<i?e=-1:r>i&&(e=1);break}}return e},a.prototype.gtn=function(t){return 1===this.cmpn(t)},a.prototype.gt=function(t){return 1===this.cmp(t)},a.prototype.gten=function(t){return this.cmpn(t)>=0},a.prototype.gte=function(t){return this.cmp(t)>=0},a.prototype.ltn=function(t){return-1===this.cmpn(t)},a.prototype.lt=function(t){return-1===this.cmp(t)},a.prototype.lten=function(t){return this.cmpn(t)<=0},a.prototype.lte=function(t){return this.cmp(t)<=0},a.prototype.eqn=function(t){return 0===this.cmpn(t)},a.prototype.eq=function(t){return 0===this.cmp(t)},a.red=function(t){return new x(t)},a.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},a.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(t){return this.red=t,this},a.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},a.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},a.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},a.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},a.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},a.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},a.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},a.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},a.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var g={k256:null,p224:null,p192:null,p25519:null};function y(t,e){this.name=t,this.p=new a(e,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function b(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function x(t){if("string"==typeof t){var e=a._prime(t);this.m=e.p,this.prime=e}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function E(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var t=new a(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var e,n=t;do{this.split(n,this.tmp),e=(n=(n=this.imulK(n)).iadd(this.tmp)).bitLength()}while(e>this.n);var r=e<this.n?-1:n.ucmp(this.p);return 0===r?(n.words[0]=0,n.length=1):r>0?n.isub(this.p):n.strip(),n},y.prototype.split=function(t,e){t.iushrn(this.n,0,e)},y.prototype.imulK=function(t){return t.imul(this.k)},i(v,y),v.prototype.split=function(t,e){for(var n=Math.min(t.length,9),r=0;r<n;r++)e.words[r]=t.words[r];if(e.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var i=t.words[9];for(e.words[e.length++]=4194303&i,r=10;r<t.length;r++){var a=0|t.words[r];t.words[r-10]=(4194303&a)<<4|i>>>22,i=a}i>>>=22,t.words[r-10]=i,0===i&&t.length>10?t.length-=10:t.length-=9},v.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,n=0;n<t.length;n++){var r=0|t.words[n];e+=977*r,t.words[n]=67108863&e,e=64*r+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},i(b,y),i(w,y),i(_,y),_.prototype.imulK=function(t){for(var e=0,n=0;n<t.length;n++){var r=19*(0|t.words[n])+e,i=67108863&r;r>>>=26,t.words[n]=i,e=r}return 0!==e&&(t.words[t.length++]=e),t},a._prime=function(t){if(g[t])return g[t];var e;if("k256"===t)e=new v;else if("p224"===t)e=new b;else if("p192"===t)e=new w;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new _}return g[t]=e,e},x.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},x.prototype._verify2=function(t,e){r(0==(t.negative|e.negative),"red works only with positives"),r(t.red&&t.red===e.red,"red works only with red numbers")},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,e){this._verify2(t,e);var n=t.add(e);return n.cmp(this.m)>=0&&n.isub(this.m),n._forceRed(this)},x.prototype.iadd=function(t,e){this._verify2(t,e);var n=t.iadd(e);return n.cmp(this.m)>=0&&n.isub(this.m),n},x.prototype.sub=function(t,e){this._verify2(t,e);var n=t.sub(e);return n.cmpn(0)<0&&n.iadd(this.m),n._forceRed(this)},x.prototype.isub=function(t,e){this._verify2(t,e);var n=t.isub(e);return n.cmpn(0)<0&&n.iadd(this.m),n},x.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},x.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},x.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(r(e%2==1),3===e){var n=this.m.add(new a(1)).iushrn(2);return this.pow(t,n)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);r(!i.isZero());var s=new a(1).toRed(this),u=s.redNeg(),c=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new a(2*l*l).toRed(this);0!==this.pow(l,c).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,i),h=this.pow(t,i.addn(1).iushrn(1)),p=this.pow(t,i),d=o;0!==p.cmp(s);){for(var m=p,g=0;0!==m.cmp(s);g++)m=m.redSqr();r(g<d);var y=this.pow(f,new a(1).iushln(d-g-1));h=h.redMul(y),f=y.redSqr(),p=p.redMul(f),d=g}return h},x.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},x.prototype.pow=function(t,e){if(e.isZero())return new a(1).toRed(this);if(0===e.cmpn(1))return t.clone();var n=new Array(16);n[0]=new a(1).toRed(this),n[1]=t;for(var r=2;r<n.length;r++)n[r]=this.mul(n[r-1],t);var i=n[0],o=0,s=0,u=e.bitLength()%26;for(0===u&&(u=26),r=e.length-1;r>=0;r--){for(var c=e.words[r],l=u-1;l>=0;l--){var f=c>>l&1;i!==n[0]&&(i=this.sqr(i)),0!==f||0!==o?(o<<=1,o|=f,(4===++s||0===r&&0===l)&&(i=this.mul(i,n[o]),s=0,o=0)):s=0}u=26}return i},x.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},x.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},a.mont=function(t){return new E(t)},i(E,x),E.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},E.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},E.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var n=t.imul(e),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),a=i;return i.cmp(this.m)>=0?a=i.isub(this.m):i.cmpn(0)<0&&(a=i.iadd(this.m)),a._forceRed(this)},E.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new a(0)._forceRed(this);var n=t.mul(e),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},E.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t,this)}).call(this,n(173)(t))},,,function(t,e,n){"use strict";var r=e;r.version=n(180).version,r.utils=n(181),r.rand=n(107),r.curve=n(45),r.curves=n(186),r.ec=n(194),r.eddsa=n(198)},,,function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){function n(t,e){if(!t)throw new Error(e||"Assertion failed")}t.exports=n,n.equal=function(t,e,n){if(t!=e)throw new Error(n||"Assertion failed: "+t+" != "+e)}},,function(t,e){var n,r,i=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(t){r=o}}();var u,c=[],l=!1,f=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!l){var t=s(h);l=!0;for(var e=c.length;e;){for(u=c,c=[];++f<e;)u&&u[f].run();f=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function m(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||l||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){"use strict";var r=n(12),i=n(2);function a(t,e){return 55296==(64512&t.charCodeAt(e))&&(!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1)))}function o(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function s(t){return 1===t.length?"0"+t:t}function u(t){return 7===t.length?"0"+t:6===t.length?"00"+t:5===t.length?"000"+t:4===t.length?"0000"+t:3===t.length?"00000"+t:2===t.length?"000000"+t:1===t.length?"0000000"+t:t}e.inherits=i,e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var n=[];if("string"==typeof t)if(e){if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),i=0;i<t.length;i+=2)n.push(parseInt(t[i]+t[i+1],16))}else for(var r=0,i=0;i<t.length;i++){var o=t.charCodeAt(i);o<128?n[r++]=o:o<2048?(n[r++]=o>>6|192,n[r++]=63&o|128):a(t,i)?(o=65536+((1023&o)<<10)+(1023&t.charCodeAt(++i)),n[r++]=o>>18|240,n[r++]=o>>12&63|128,n[r++]=o>>6&63|128,n[r++]=63&o|128):(n[r++]=o>>12|224,n[r++]=o>>6&63|128,n[r++]=63&o|128)}else for(i=0;i<t.length;i++)n[i]=0|t[i];return n},e.toHex=function(t){for(var e="",n=0;n<t.length;n++)e+=s(t[n].toString(16));return e},e.htonl=o,e.toHex32=function(t,e){for(var n="",r=0;r<t.length;r++){var i=t[r];"little"===e&&(i=o(i)),n+=u(i.toString(16))}return n},e.zero2=s,e.zero8=u,e.join32=function(t,e,n,i){var a=n-e;r(a%4==0);for(var o=new Array(a/4),s=0,u=e;s<o.length;s++,u+=4){var c;c="big"===i?t[u]<<24|t[u+1]<<16|t[u+2]<<8|t[u+3]:t[u+3]<<24|t[u+2]<<16|t[u+1]<<8|t[u],o[s]=c>>>0}return o},e.split32=function(t,e){for(var n=new Array(4*t.length),r=0,i=0;r<t.length;r++,i+=4){var a=t[r];"big"===e?(n[i]=a>>>24,n[i+1]=a>>>16&255,n[i+2]=a>>>8&255,n[i+3]=255&a):(n[i+3]=a>>>24,n[i+2]=a>>>16&255,n[i+1]=a>>>8&255,n[i]=255&a)}return n},e.rotr32=function(t,e){return t>>>e|t<<32-e},e.rotl32=function(t,e){return t<<e|t>>>32-e},e.sum32=function(t,e){return t+e>>>0},e.sum32_3=function(t,e,n){return t+e+n>>>0},e.sum32_4=function(t,e,n,r){return t+e+n+r>>>0},e.sum32_5=function(t,e,n,r,i){return t+e+n+r+i>>>0},e.sum64=function(t,e,n,r){var i=t[e],a=r+t[e+1]>>>0,o=(a<r?1:0)+n+i;t[e]=o>>>0,t[e+1]=a},e.sum64_hi=function(t,e,n,r){return(e+r>>>0<e?1:0)+t+n>>>0},e.sum64_lo=function(t,e,n,r){return e+r>>>0},e.sum64_4_hi=function(t,e,n,r,i,a,o,s){var u=0,c=e;return u+=(c=c+r>>>0)<e?1:0,u+=(c=c+a>>>0)<a?1:0,t+n+i+o+(u+=(c=c+s>>>0)<s?1:0)>>>0},e.sum64_4_lo=function(t,e,n,r,i,a,o,s){return e+r+a+s>>>0},e.sum64_5_hi=function(t,e,n,r,i,a,o,s,u,c){var l=0,f=e;return l+=(f=f+r>>>0)<e?1:0,l+=(f=f+a>>>0)<a?1:0,l+=(f=f+s>>>0)<s?1:0,t+n+i+o+u+(l+=(f=f+c>>>0)<c?1:0)>>>0},e.sum64_5_lo=function(t,e,n,r,i,a,o,s,u,c){return e+r+a+s+c>>>0},e.rotr64_hi=function(t,e,n){return(e<<32-n|t>>>n)>>>0},e.rotr64_lo=function(t,e,n){return(t<<32-n|e>>>n)>>>0},e.shr64_hi=function(t,e,n){return t>>>n},e.shr64_lo=function(t,e,n){return(t<<32-n|e>>>n)>>>0}},,,function(t,e,n){var r=n(3).Buffer,i=n(57).Transform,a=n(42).StringDecoder;function o(t){i.call(this),this.hashMode="string"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}n(2)(o,i),o.prototype.update=function(t,e,n){"string"==typeof t&&(t=r.from(t,e));var i=this._update(t);return this.hashMode?this:(n&&(i=this._toString(i,n)),i)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},o.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},o.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},o.prototype._transform=function(t,e,n){var r;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){r=t}finally{n(r)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||r.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,n){if(this._decoder||(this._decoder=new a(e),this._encoding=e),this._encoding!==e)throw new Error("can't switch encodings");var r=this._decoder.write(t);return n&&(r+=this._decoder.end()),r},t.exports=o},,,function(t,e,n){"use strict";var r=n(41),i=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};t.exports=f;var a=n(31);a.inherits=n(2);var o=n(87),s=n(60);a.inherits(f,o);for(var u=i(s.prototype),c=0;c<u.length;c++){var l=u[c];f.prototype[l]||(f.prototype[l]=s.prototype[l])}function f(t){if(!(this instanceof f))return new f(t);o.call(this,t),s.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",h)}function h(){this.allowHalfOpen||this._writableState.ended||r.nextTick(p,this)}function p(t){t.end()}Object.defineProperty(f.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(f.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),f.prototype._destroy=function(t,e){this.push(null),this.end(),r.nextTick(e,t)}},function(t,e,n){"use strict";(function(e,r){var i=n(3).Buffer,a=e.crypto||e.msCrypto;a&&a.getRandomValues?t.exports=function(t,n){if(t>65536)throw new Error("requested too many random bytes");var o=new e.Uint8Array(t);t>0&&a.getRandomValues(o);var s=i.from(o.buffer);if("function"==typeof n)return r.nextTick(function(){n(null,s)});return s}:t.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}}).call(this,n(11),n(14))},function(t,e,n){var r=n(3).Buffer;function i(t,e){this._block=r.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}i.prototype.update=function(t,e){"string"==typeof t&&(e=e||"utf8",t=r.from(t,e));for(var n=this._block,i=this._blockSize,a=t.length,o=this._len,s=0;s<a;){for(var u=o%i,c=Math.min(a-s,i-u),l=0;l<c;l++)n[u+l]=t[s+l];s+=c,(o+=c)%i==0&&this._update(n)}return this._len+=a,this},i.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var n=8*this._len;if(n<=4294967295)this._block.writeUInt32BE(n,this._blockSize-4);else{var r=(4294967295&n)>>>0,i=(n-r)/4294967296;this._block.writeUInt32BE(i,this._blockSize-8),this._block.writeUInt32BE(r,this._blockSize-4)}this._update(this._block);var a=this._hash();return t?a.toString(t):a},i.prototype._update=function(){throw new Error("_update must be implemented by subclass")},t.exports=i},,,,,,,function(t,e,n){"use strict";var r=n(2),i=n(56),a=n(61),o=n(62),s=n(18);function u(t){s.call(this,"digest"),this._hash=t}r(u,s),u.prototype._update=function(t){this._hash.update(t)},u.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return"md5"===(t=t.toLowerCase())?new i:"rmd160"===t||"ripemd160"===t?new a:new u(o(t))}},function(t,e,n){(function(t){function n(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):"[object Array]"===n(t)},e.isBoolean=function(t){return"boolean"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return"number"==typeof t},e.isString=function(t){return"string"==typeof t},e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return"[object RegExp]"===n(t)},e.isObject=function(t){return"object"==typeof t&&null!==t},e.isDate=function(t){return"[object Date]"===n(t)},e.isError=function(t){return"[object Error]"===n(t)||t instanceof Error},e.isFunction=function(t){return"function"==typeof t},e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,n(4).Buffer)},function(t,e,n){(function(e){t.exports=function(t,n){for(var r=Math.min(t.length,n.length),i=new e(r),a=0;a<r;++a)i[a]=t[a]^n[a];return i}}).call(this,n(4).Buffer)},function(t,e,n){"use strict";var r=n(15),i=n(12);function a(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}e.BlockHash=a,a.prototype.update=function(t,e){if(t=r.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var n=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-n,t.length),0===this.pending.length&&(this.pending=null),t=r.join32(t,0,t.length-n,this.endian);for(var i=0;i<t.length;i+=this._delta32)this._update(t,i,i+this._delta32)}return this},a.prototype.digest=function(t){return this.update(this._pad()),i(null===this.pending),this._digest(t)},a.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,n=e-(t+this.padLength)%e,r=new Array(n+this.padLength);r[0]=128;for(var i=1;i<n;i++)r[i]=0;if(t<<=3,"big"===this.endian){for(var a=8;a<this.padLength;a++)r[i++]=0;r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=t>>>24&255,r[i++]=t>>>16&255,r[i++]=t>>>8&255,r[i++]=255&t}else for(r[i++]=255&t,r[i++]=t>>>8&255,r[i++]=t>>>16&255,r[i++]=t>>>24&255,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,a=8;a<this.padLength;a++)r[i++]=0;return r}},function(t,e,n){var r=e;r.bignum=n(5),r.define=n(202).define,r.base=n(35),r.constants=n(113),r.decoders=n(208),r.encoders=n(210)},function(t,e,n){var r=e;r.Reporter=n(205).Reporter,r.DecoderBuffer=n(112).DecoderBuffer,r.EncoderBuffer=n(112).EncoderBuffer,r.Node=n(206)},,,,,,function(t,e,n){"use strict";(function(e){!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports={nextTick:function(t,n,r,i){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var a,o,s=arguments.length;switch(s){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick(function(){t.call(null,n)});case 3:return e.nextTick(function(){t.call(null,n,r)});case 4:return e.nextTick(function(){t.call(null,n,r,i)});default:for(a=new Array(s-1),o=0;o<a.length;)a[o++]=arguments[o];return e.nextTick(function(){t.apply(null,a)})}}}:t.exports=e}).call(this,n(14))},function(t,e,n){"use strict";var r=n(3).Buffer,i=r.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function a(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(r.isEncoding===i||!i(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=u,this.end=c,e=4;break;case"utf8":this.fillLast=s,e=4;break;case"base64":this.text=l,this.end=f,e=3;break;default:return this.write=h,void(this.end=p)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t){var e=this.lastTotal-this.lastNeed,n=function(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function c(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function l(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function f(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function h(t){return t.toString(this.encoding)}function p(t){return t&&t.length?this.write(t):""}e.StringDecoder=a,a.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},a.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},a.prototype.text=function(t,e){var n=function(t,e,n){var r=e.length-1;if(r<n)return 0;var i=o(e[r]);if(i>=0)return i>0&&(t.lastNeed=i-1),i;if(--r<n||-2===i)return 0;if((i=o(e[r]))>=0)return i>0&&(t.lastNeed=i-2),i;if(--r<n||-2===i)return 0;if((i=o(e[r]))>=0)return i>0&&(2===i?i=0:t.lastNeed=i-3),i;return 0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=n;var r=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,r),t.toString("utf8",e,r)},a.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,n){var r=n(3).Buffer;function i(t){r.isBuffer(t)||(t=r.from(t));for(var e=t.length/4|0,n=new Array(e),i=0;i<e;i++)n[i]=t.readUInt32BE(4*i);return n}function a(t){for(;0<t.length;t++)t[0]=0}function o(t,e,n,r,i){for(var a,o,s,u,c=n[0],l=n[1],f=n[2],h=n[3],p=t[0]^e[0],d=t[1]^e[1],m=t[2]^e[2],g=t[3]^e[3],y=4,v=1;v<i;v++)a=c[p>>>24]^l[d>>>16&255]^f[m>>>8&255]^h[255&g]^e[y++],o=c[d>>>24]^l[m>>>16&255]^f[g>>>8&255]^h[255&p]^e[y++],s=c[m>>>24]^l[g>>>16&255]^f[p>>>8&255]^h[255&d]^e[y++],u=c[g>>>24]^l[p>>>16&255]^f[d>>>8&255]^h[255&m]^e[y++],p=a,d=o,m=s,g=u;return a=(r[p>>>24]<<24|r[d>>>16&255]<<16|r[m>>>8&255]<<8|r[255&g])^e[y++],o=(r[d>>>24]<<24|r[m>>>16&255]<<16|r[g>>>8&255]<<8|r[255&p])^e[y++],s=(r[m>>>24]<<24|r[g>>>16&255]<<16|r[p>>>8&255]<<8|r[255&d])^e[y++],u=(r[g>>>24]<<24|r[p>>>16&255]<<16|r[d>>>8&255]<<8|r[255&m])^e[y++],[a>>>=0,o>>>=0,s>>>=0,u>>>=0]}var s=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;for(var n=[],r=[],i=[[],[],[],[]],a=[[],[],[],[]],o=0,s=0,u=0;u<256;++u){var c=s^s<<1^s<<2^s<<3^s<<4;c=c>>>8^255&c^99,n[o]=c,r[c]=o;var l=t[o],f=t[l],h=t[f],p=257*t[c]^16843008*c;i[0][o]=p<<24|p>>>8,i[1][o]=p<<16|p>>>16,i[2][o]=p<<8|p>>>24,i[3][o]=p,p=16843009*h^65537*f^257*l^16843008*o,a[0][c]=p<<24|p>>>8,a[1][c]=p<<16|p>>>16,a[2][c]=p<<8|p>>>24,a[3][c]=p,0===o?o=s=1:(o=l^t[t[t[h^l]]],s^=t[t[s]])}return{SBOX:n,INV_SBOX:r,SUB_MIX:i,INV_SUB_MIX:a}}();function c(t){this._key=i(t),this._reset()}c.blockSize=16,c.keySize=32,c.prototype.blockSize=c.blockSize,c.prototype.keySize=c.keySize,c.prototype._reset=function(){for(var t=this._key,e=t.length,n=e+6,r=4*(n+1),i=[],a=0;a<e;a++)i[a]=t[a];for(a=e;a<r;a++){var o=i[a-1];a%e==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=s[a/e|0]<<24):e>6&&a%e==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),i[a]=i[a-e]^o}for(var c=[],l=0;l<r;l++){var f=r-l,h=i[f-(l%4?0:4)];c[l]=l<4||f<=4?h:u.INV_SUB_MIX[0][u.SBOX[h>>>24]]^u.INV_SUB_MIX[1][u.SBOX[h>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[h>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&h]]}this._nRounds=n,this._keySchedule=i,this._invKeySchedule=c},c.prototype.encryptBlockRaw=function(t){return o(t=i(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},c.prototype.encryptBlock=function(t){var e=this.encryptBlockRaw(t),n=r.allocUnsafe(16);return n.writeUInt32BE(e[0],0),n.writeUInt32BE(e[1],4),n.writeUInt32BE(e[2],8),n.writeUInt32BE(e[3],12),n},c.prototype.decryptBlock=function(t){var e=(t=i(t))[1];t[1]=t[3],t[3]=e;var n=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),a=r.allocUnsafe(16);return a.writeUInt32BE(n[0],0),a.writeUInt32BE(n[3],4),a.writeUInt32BE(n[2],8),a.writeUInt32BE(n[1],12),a},c.prototype.scrub=function(){a(this._keySchedule),a(this._invKeySchedule),a(this._key)},t.exports.AES=c},function(t,e,n){var r=n(3).Buffer,i=n(56);t.exports=function(t,e,n,a){if(r.isBuffer(t)||(t=r.from(t,"binary")),e&&(r.isBuffer(e)||(e=r.from(e,"binary")),8!==e.length))throw new RangeError("salt should be Buffer with 8 byte length");for(var o=n/8,s=r.alloc(o),u=r.alloc(a||0),c=r.alloc(0);o>0||a>0;){var l=new i;l.update(c),l.update(t),e&&l.update(e),c=l.digest();var f=0;if(o>0){var h=s.length-o;f=Math.min(o,c.length),c.copy(s,h,0,f),o-=f}if(f<c.length&&a>0){var p=u.length-a,d=Math.min(a,c.length-f);c.copy(u,p,f,f+d),a-=d}}return c.fill(0),{key:s,iv:u}}},function(t,e,n){"use strict";var r=e;r.base=n(182),r.short=n(183),r.mont=n(184),r.edwards=n(185)},function(t,e,n){(function(e){var r=n(201),i=n(213),a=n(214),o=n(64),s=n(96);function u(t){var n;"object"!=typeof t||e.isBuffer(t)||(n=t.passphrase,t=t.key),"string"==typeof t&&(t=new e(t));var u,c,l=a(t,n),f=l.tag,h=l.data;switch(f){case"CERTIFICATE":c=r.certificate.decode(h,"der").tbsCertificate.subjectPublicKeyInfo;case"PUBLIC KEY":switch(c||(c=r.PublicKey.decode(h,"der")),u=c.algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return r.RSAPublicKey.decode(c.subjectPublicKey.data,"der");case"1.2.840.10045.2.1":return c.subjectPrivateKey=c.subjectPublicKey,{type:"ec",data:c};case"1.2.840.10040.4.1":return c.algorithm.params.pub_key=r.DSAparam.decode(c.subjectPublicKey.data,"der"),{type:"dsa",data:c.algorithm.params};default:throw new Error("unknown key id "+u)}throw new Error("unknown key type "+f);case"ENCRYPTED PRIVATE KEY":h=function(t,n){var r=t.algorithm.decrypt.kde.kdeparams.salt,a=parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(),10),u=i[t.algorithm.decrypt.cipher.algo.join(".")],c=t.algorithm.decrypt.cipher.iv,l=t.subjectPrivateKey,f=parseInt(u.split("-")[1],10)/8,h=s.pbkdf2Sync(n,r,a,f),p=o.createDecipheriv(u,h,c),d=[];return d.push(p.update(l)),d.push(p.final()),e.concat(d)}(h=r.EncryptedPrivateKey.decode(h,"der"),n);case"PRIVATE KEY":switch(u=(c=r.PrivateKey.decode(h,"der")).algorithm.algorithm.join(".")){case"1.2.840.113549.1.1.1":return r.RSAPrivateKey.decode(c.subjectPrivateKey,"der");case"1.2.840.10045.2.1":return{curve:c.algorithm.curve,privateKey:r.ECPrivateKey.decode(c.subjectPrivateKey,"der").privateKey};case"1.2.840.10040.4.1":return c.algorithm.params.priv_key=r.DSAparam.decode(c.subjectPrivateKey,"der"),{type:"dsa",params:c.algorithm.params};default:throw new Error("unknown key id "+u)}throw new Error("unknown key type "+f);case"RSA PUBLIC KEY":return r.RSAPublicKey.decode(h,"der");case"RSA PRIVATE KEY":return r.RSAPrivateKey.decode(h,"der");case"DSA PRIVATE KEY":return{type:"dsa",params:r.DSAPrivateKey.decode(h,"der")};case"EC PRIVATE KEY":return{curve:(h=r.ECPrivateKey.decode(h,"der")).parameters.value,privateKey:h.privateKey};default:throw new Error("unknown key type "+f)}}t.exports=u,u.signature=r.signature}).call(this,n(4).Buffer)},,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global){__webpack_require__.d(__webpack_exports__,"a",function(){return FrozenModel}),__webpack_require__.d(__webpack_exports__,"b",function(){return loadFrozenModel}),__webpack_require__.d(__webpack_exports__,"c",function(){return loadTfHubModule}),__webpack_require__.d(__webpack_exports__,"d",function(){return version});var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),__assign=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __awaiter(t,e,n,r){return new(n||(n=Promise))(function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?i(t.value):new n(function(e){e(t.value)}).then(o,s)}u((r=r.apply(t,e||[])).next())})}function __generator(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(i=r[2&a[0]?"return":a[0]?"throw":"next"])&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[0,i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var commonjsGlobal="undefined"!=typeof window?window:void 0!==global?global:"undefined"!=typeof self?self:{};function createCommonjsModule(t,e){return t(e={exports:{}},e.exports),e.exports}var aspromise=asPromise;function asPromise(t,e){for(var n=new Array(arguments.length-1),r=0,i=2,a=!0;i<arguments.length;)n[r++]=arguments[i++];return new Promise(function(i,o){n[r]=function(t){if(a)if(a=!1,t)o(t);else{for(var e=new Array(arguments.length-1),n=0;n<e.length;)e[n++]=arguments[n];i.apply(null,e)}};try{t.apply(e||null,n)}catch(t){a&&(a=!1,o(t))}})}var base64_1=createCommonjsModule(function(t,e){var n=e;n.length=function(t){var e=t.length;if(!e)return 0;for(var n=0;--e%4>1&&"="===t.charAt(e);)++n;return Math.ceil(3*t.length)/4-n};for(var r=new Array(64),i=new Array(123),a=0;a<64;)i[r[a]=a<26?a+65:a<52?a+71:a<62?a-4:a-59|43]=a++;n.encode=function(t,e,n){for(var i,a=null,o=[],s=0,u=0;e<n;){var c=t[e++];switch(u){case 0:o[s++]=r[c>>2],i=(3&c)<<4,u=1;break;case 1:o[s++]=r[i|c>>4],i=(15&c)<<2,u=2;break;case 2:o[s++]=r[i|c>>6],o[s++]=r[63&c],u=0}s>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,o)),s=0)}return u&&(o[s++]=r[i],o[s++]=61,1===u&&(o[s++]=61)),a?(s&&a.push(String.fromCharCode.apply(String,o.slice(0,s))),a.join("")):String.fromCharCode.apply(String,o.slice(0,s))},n.decode=function(t,e,n){for(var r,a=n,o=0,s=0;s<t.length;){var u=t.charCodeAt(s++);if(61===u&&o>1)break;if(void 0===(u=i[u]))throw Error("invalid encoding");switch(o){case 0:r=u,o=1;break;case 1:e[n++]=r<<2|(48&u)>>4,r=u,o=2;break;case 2:e[n++]=(15&r)<<4|(60&u)>>2,r=u,o=3;break;case 3:e[n++]=(3&r)<<6|u,o=0}}if(1===o)throw Error("invalid encoding");return n-a},n.test=function(t){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(t)}}),eventemitter=EventEmitter;function EventEmitter(){this._listeners={}}EventEmitter.prototype.on=function(t,e,n){return(this._listeners[t]||(this._listeners[t]=[])).push({fn:e,ctx:n||this}),this},EventEmitter.prototype.off=function(t,e){if(void 0===t)this._listeners={};else if(void 0===e)this._listeners[t]=[];else for(var n=this._listeners[t],r=0;r<n.length;)n[r].fn===e?n.splice(r,1):++r;return this},EventEmitter.prototype.emit=function(t){var e=this._listeners[t];if(e){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<e.length;)e[r].fn.apply(e[r++].ctx,n)}return this};var float_1=factory(factory);function factory(t){return"undefined"!=typeof Float32Array?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),r=128===n[3];function i(t,r,i){e[0]=t,r[i]=n[0],r[i+1]=n[1],r[i+2]=n[2],r[i+3]=n[3]}function a(t,r,i){e[0]=t,r[i]=n[3],r[i+1]=n[2],r[i+2]=n[1],r[i+3]=n[0]}function o(t,r){return n[0]=t[r],n[1]=t[r+1],n[2]=t[r+2],n[3]=t[r+3],e[0]}function s(t,r){return n[3]=t[r],n[2]=t[r+1],n[1]=t[r+2],n[0]=t[r+3],e[0]}t.writeFloatLE=r?i:a,t.writeFloatBE=r?a:i,t.readFloatLE=r?o:s,t.readFloatBE=r?s:o}():function(){function e(t,e,n,r){var i=e<0?1:0;if(i&&(e=-e),0===e)t(1/e>0?0:2147483648,n,r);else if(isNaN(e))t(2143289344,n,r);else if(e>3.4028234663852886e38)t((i<<31|2139095040)>>>0,n,r);else if(e<1.1754943508222875e-38)t((i<<31|Math.round(e/1.401298464324817e-45))>>>0,n,r);else{var a=Math.floor(Math.log(e)/Math.LN2);t((i<<31|a+127<<23|8388607&Math.round(e*Math.pow(2,-a)*8388608))>>>0,n,r)}}function n(t,e,n){var r=t(e,n),i=2*(r>>31)+1,a=r>>>23&255,o=8388607&r;return 255===a?o?NaN:i*(1/0):0===a?1.401298464324817e-45*i*o:i*Math.pow(2,a-150)*(o+8388608)}t.writeFloatLE=e.bind(null,writeUintLE),t.writeFloatBE=e.bind(null,writeUintBE),t.readFloatLE=n.bind(null,readUintLE),t.readFloatBE=n.bind(null,readUintBE)}(),"undefined"!=typeof Float64Array?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),r=128===n[7];function i(t,r,i){e[0]=t,r[i]=n[0],r[i+1]=n[1],r[i+2]=n[2],r[i+3]=n[3],r[i+4]=n[4],r[i+5]=n[5],r[i+6]=n[6],r[i+7]=n[7]}function a(t,r,i){e[0]=t,r[i]=n[7],r[i+1]=n[6],r[i+2]=n[5],r[i+3]=n[4],r[i+4]=n[3],r[i+5]=n[2],r[i+6]=n[1],r[i+7]=n[0]}function o(t,r){return n[0]=t[r],n[1]=t[r+1],n[2]=t[r+2],n[3]=t[r+3],n[4]=t[r+4],n[5]=t[r+5],n[6]=t[r+6],n[7]=t[r+7],e[0]}function s(t,r){return n[7]=t[r],n[6]=t[r+1],n[5]=t[r+2],n[4]=t[r+3],n[3]=t[r+4],n[2]=t[r+5],n[1]=t[r+6],n[0]=t[r+7],e[0]}t.writeDoubleLE=r?i:a,t.writeDoubleBE=r?a:i,t.readDoubleLE=r?o:s,t.readDoubleBE=r?s:o}():function(){function e(t,e,n,r,i,a){var o=r<0?1:0;if(o&&(r=-r),0===r)t(0,i,a+e),t(1/r>0?0:2147483648,i,a+n);else if(isNaN(r))t(0,i,a+e),t(2146959360,i,a+n);else if(r>1.7976931348623157e308)t(0,i,a+e),t((o<<31|2146435072)>>>0,i,a+n);else{var s;if(r<2.2250738585072014e-308)t((s=r/5e-324)>>>0,i,a+e),t((o<<31|s/4294967296)>>>0,i,a+n);else{var u=Math.floor(Math.log(r)/Math.LN2);1024===u&&(u=1023),t(4503599627370496*(s=r*Math.pow(2,-u))>>>0,i,a+e),t((o<<31|u+1023<<20|1048576*s&1048575)>>>0,i,a+n)}}}function n(t,e,n,r,i){var a=t(r,i+e),o=t(r,i+n),s=2*(o>>31)+1,u=o>>>20&2047,c=4294967296*(1048575&o)+a;return 2047===u?c?NaN:s*(1/0):0===u?5e-324*s*c:s*Math.pow(2,u-1075)*(c+4503599627370496)}t.writeDoubleLE=e.bind(null,writeUintLE,0,4),t.writeDoubleBE=e.bind(null,writeUintBE,4,0),t.readDoubleLE=n.bind(null,readUintLE,0,4),t.readDoubleBE=n.bind(null,readUintBE,4,0)}(),t}function writeUintLE(t,e,n){e[n]=255&t,e[n+1]=t>>>8&255,e[n+2]=t>>>16&255,e[n+3]=t>>>24}function writeUintBE(t,e,n){e[n]=t>>>24,e[n+1]=t>>>16&255,e[n+2]=t>>>8&255,e[n+3]=255&t}function readUintLE(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function readUintBE(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod$$1=eval("quire".replace(/^/,"re"))(moduleName);if(mod$$1&&(mod$$1.length||Object.keys(mod$$1).length))return mod$$1}catch(t){}return null}var utf8_1=createCommonjsModule(function(t,e){var n=e;n.length=function(t){for(var e=0,n=0,r=0;r<t.length;++r)(n=t.charCodeAt(r))<128?e+=1:n<2048?e+=2:55296==(64512&n)&&56320==(64512&t.charCodeAt(r+1))?(++r,e+=4):e+=3;return e},n.read=function(t,e,n){if(n-e<1)return"";for(var r,i=null,a=[],o=0;e<n;)(r=t[e++])<128?a[o++]=r:r>191&&r<224?a[o++]=(31&r)<<6|63&t[e++]:r>239&&r<365?(r=((7&r)<<18|(63&t[e++])<<12|(63&t[e++])<<6|63&t[e++])-65536,a[o++]=55296+(r>>10),a[o++]=56320+(1023&r)):a[o++]=(15&r)<<12|(63&t[e++])<<6|63&t[e++],o>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,a)),o=0);return i?(o&&i.push(String.fromCharCode.apply(String,a.slice(0,o))),i.join("")):String.fromCharCode.apply(String,a.slice(0,o))},n.write=function(t,e,n){for(var r,i,a=n,o=0;o<t.length;++o)(r=t.charCodeAt(o))<128?e[n++]=r:r<2048?(e[n++]=r>>6|192,e[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(i=t.charCodeAt(o+1)))?(r=65536+((1023&r)<<10)+(1023&i),++o,e[n++]=r>>18|240,e[n++]=r>>12&63|128,e[n++]=r>>6&63|128,e[n++]=63&r|128):(e[n++]=r>>12|224,e[n++]=r>>6&63|128,e[n++]=63&r|128);return n-a}}),pool_1=pool;function pool(t,e,n){var r=n||8192,i=r>>>1,a=null,o=r;return function(n){if(n<1||n>i)return t(n);o+n>r&&(a=t(r),o=0);var s=e.call(a,o,o+=n);return 7&o&&(o=1+(7|o)),s}}var longbits=LongBits;function LongBits(t,e){this.lo=t>>>0,this.hi=e>>>0}var zero=LongBits.zero=new LongBits(0,0);zero.toNumber=function(){return 0},zero.zzEncode=zero.zzDecode=function(){return this},zero.length=function(){return 1};var zeroHash=LongBits.zeroHash="\0\0\0\0\0\0\0\0";LongBits.fromNumber=function(t){if(0===t)return zero;var e=t<0;e&&(t=-t);var n=t>>>0,r=(t-n)/4294967296>>>0;return e&&(r=~r>>>0,n=~n>>>0,++n>4294967295&&(n=0,++r>4294967295&&(r=0))),new LongBits(n,r)},LongBits.from=function(t){if("number"==typeof t)return LongBits.fromNumber(t);if(minimal.isString(t)){if(!minimal.Long)return LongBits.fromNumber(parseInt(t,10));t=minimal.Long.fromString(t)}return t.low||t.high?new LongBits(t.low>>>0,t.high>>>0):zero},LongBits.prototype.toNumber=function(t){if(!t&&this.hi>>>31){var e=1+~this.lo>>>0,n=~this.hi>>>0;return e||(n=n+1>>>0),-(e+4294967296*n)}return this.lo+4294967296*this.hi},LongBits.prototype.toLong=function(t){return minimal.Long?new minimal.Long(0|this.lo,0|this.hi,Boolean(t)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(t)}};var charCodeAt=String.prototype.charCodeAt;LongBits.fromHash=function(t){return t===zeroHash?zero:new LongBits((charCodeAt.call(t,0)|charCodeAt.call(t,1)<<8|charCodeAt.call(t,2)<<16|charCodeAt.call(t,3)<<24)>>>0,(charCodeAt.call(t,4)|charCodeAt.call(t,5)<<8|charCodeAt.call(t,6)<<16|charCodeAt.call(t,7)<<24)>>>0)},LongBits.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},LongBits.prototype.zzEncode=function(){var t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this},LongBits.prototype.zzDecode=function(){var t=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this},LongBits.prototype.length=function(){var t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===e?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:n<128?9:10};var minimal=createCommonjsModule(function(t,e){var n=e;function r(t,e,n){for(var r=Object.keys(e),i=0;i<r.length;++i)void 0!==t[r[i]]&&n||(t[r[i]]=e[r[i]]);return t}function i(t){function e(t,n){if(!(this instanceof e))return new e(t,n);Object.defineProperty(this,"message",{get:function(){return t}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),n&&r(this,n)}return(e.prototype=Object.create(Error.prototype)).constructor=e,Object.defineProperty(e.prototype,"name",{get:function(){return t}}),e.prototype.toString=function(){return this.name+": "+this.message},e}n.asPromise=aspromise,n.base64=base64_1,n.EventEmitter=eventemitter,n.float=float_1,n.inquire=inquire_1,n.utf8=utf8_1,n.pool=pool_1,n.LongBits=longbits,n.emptyArray=Object.freeze?Object.freeze([]):[],n.emptyObject=Object.freeze?Object.freeze({}):{},n.isNode=Boolean(commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),n.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},n.isString=function(t){return"string"==typeof t||t instanceof String},n.isObject=function(t){return t&&"object"==typeof t},n.isset=n.isSet=function(t,e){var n=t[e];return!(null==n||!t.hasOwnProperty(e))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},n.Buffer=function(){try{var t=n.inquire("buffer").Buffer;return t.prototype.utf8Write?t:null}catch(t){return null}}(),n._Buffer_from=null,n._Buffer_allocUnsafe=null,n.newBuffer=function(t){return"number"==typeof t?n.Buffer?n._Buffer_allocUnsafe(t):new n.Array(t):n.Buffer?n._Buffer_from(t):"undefined"==typeof Uint8Array?t:new Uint8Array(t)},n.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,n.Long=commonjsGlobal.dcodeIO&&commonjsGlobal.dcodeIO.Long||n.inquire("long"),n.key2Re=/^true|false|0|1$/,n.key32Re=/^-?(?:0|[1-9][0-9]*)$/,n.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,n.longToHash=function(t){return t?n.LongBits.from(t).toHash():n.LongBits.zeroHash},n.longFromHash=function(t,e){var r=n.LongBits.fromHash(t);return n.Long?n.Long.fromBits(r.lo,r.hi,e):r.toNumber(Boolean(e))},n.merge=r,n.lcFirst=function(t){return t.charAt(0).toLowerCase()+t.substring(1)},n.newError=i,n.ProtocolError=i("ProtocolError"),n.oneOfGetter=function(t){for(var e={},n=0;n<t.length;++n)e[t[n]]=1;return function(){for(var t=Object.keys(this),n=t.length-1;n>-1;--n)if(1===e[t[n]]&&void 0!==this[t[n]]&&null!==this[t[n]])return t[n]}},n.oneOfSetter=function(t){return function(e){for(var n=0;n<t.length;++n)t[n]!==e&&delete this[t[n]]}},n.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},n._configure=function(){var t=n.Buffer;t?(n._Buffer_from=t.from!==Uint8Array.from&&t.from||function(e,n){return new t(e,n)},n._Buffer_allocUnsafe=t.allocUnsafe||function(e){return new t(e)}):n._Buffer_from=n._Buffer_allocUnsafe=null}}),writer=Writer,BufferWriter,LongBits$1=minimal.LongBits,base64=minimal.base64,utf8=minimal.utf8;function Op(t,e,n){this.fn=t,this.len=e,this.next=void 0,this.val=n}function noop(){}function State(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function Writer(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}function writeByte(t,e,n){e[n]=255&t}function writeVarint32(t,e,n){for(;t>127;)e[n++]=127&t|128,t>>>=7;e[n]=t}function VarintOp(t,e){this.len=t,this.next=void 0,this.val=e}function writeVarint64(t,e,n){for(;t.hi;)e[n++]=127&t.lo|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[n++]=127&t.lo|128,t.lo=t.lo>>>7;e[n++]=t.lo}function writeFixed32(t,e,n){e[n]=255&t,e[n+1]=t>>>8&255,e[n+2]=t>>>16&255,e[n+3]=t>>>24}Writer.create=minimal.Buffer?function(){return(Writer.create=function(){return new BufferWriter})()}:function(){return new Writer},Writer.alloc=function(t){return new minimal.Array(t)},minimal.Array!==Array&&(Writer.alloc=minimal.pool(Writer.alloc,minimal.Array.prototype.subarray)),Writer.prototype._push=function(t,e,n){return this.tail=this.tail.next=new Op(t,e,n),this.len+=e,this},VarintOp.prototype=Object.create(Op.prototype),VarintOp.prototype.fn=writeVarint32,Writer.prototype.uint32=function(t){return this.len+=(this.tail=this.tail.next=new VarintOp((t>>>=0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this},Writer.prototype.int32=function(t){return t<0?this._push(writeVarint64,10,LongBits$1.fromNumber(t)):this.uint32(t)},Writer.prototype.sint32=function(t){return this.uint32((t<<1^t>>31)>>>0)},Writer.prototype.uint64=function(t){var e=LongBits$1.from(t);return this._push(writeVarint64,e.length(),e)},Writer.prototype.int64=Writer.prototype.uint64,Writer.prototype.sint64=function(t){var e=LongBits$1.from(t).zzEncode();return this._push(writeVarint64,e.length(),e)},Writer.prototype.bool=function(t){return this._push(writeByte,1,t?1:0)},Writer.prototype.fixed32=function(t){return this._push(writeFixed32,4,t>>>0)},Writer.prototype.sfixed32=Writer.prototype.fixed32,Writer.prototype.fixed64=function(t){var e=LongBits$1.from(t);return this._push(writeFixed32,4,e.lo)._push(writeFixed32,4,e.hi)},Writer.prototype.sfixed64=Writer.prototype.fixed64,Writer.prototype.float=function(t){return this._push(minimal.float.writeFloatLE,4,t)},Writer.prototype.double=function(t){return this._push(minimal.float.writeDoubleLE,8,t)};var writeBytes=minimal.Array.prototype.set?function(t,e,n){e.set(t,n)}:function(t,e,n){for(var r=0;r<t.length;++r)e[n+r]=t[r]};Writer.prototype.bytes=function(t){var e=t.length>>>0;if(!e)return this._push(writeByte,1,0);if(minimal.isString(t)){var n=Writer.alloc(e=base64.length(t));base64.decode(t,n,0),t=n}return this.uint32(e)._push(writeBytes,e,t)},Writer.prototype.string=function(t){var e=utf8.length(t);return e?this.uint32(e)._push(utf8.write,e,t):this._push(writeByte,1,0)},Writer.prototype.fork=function(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this},Writer.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this},Writer.prototype.ldelim=function(){var t=this.head,e=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=t.next,this.tail=e,this.len+=n),this},Writer.prototype.finish=function(){for(var t=this.head.next,e=this.constructor.alloc(this.len),n=0;t;)t.fn(t.val,e,n),n+=t.len,t=t.next;return e},Writer._configure=function(t){BufferWriter=t};var writer_buffer=BufferWriter$1;(BufferWriter$1.prototype=Object.create(writer.prototype)).constructor=BufferWriter$1;var Buffer=minimal.Buffer;function BufferWriter$1(){writer.call(this)}BufferWriter$1.alloc=function(t){return(BufferWriter$1.alloc=minimal._Buffer_allocUnsafe)(t)};var writeBytesBuffer=Buffer&&Buffer.prototype instanceof Uint8Array&&"set"===Buffer.prototype.set.name?function(t,e,n){e.set(t,n)}:function(t,e,n){if(t.copy)t.copy(e,n,0,t.length);else for(var r=0;r<t.length;)e[n++]=t[r++]};function writeStringBuffer(t,e,n){t.length<40?minimal.utf8.write(t,e,n):e.utf8Write(t,n)}BufferWriter$1.prototype.bytes=function(t){minimal.isString(t)&&(t=minimal._Buffer_from(t,"base64"));var e=t.length>>>0;return this.uint32(e),e&&this._push(writeBytesBuffer,e,t),this},BufferWriter$1.prototype.string=function(t){var e=Buffer.byteLength(t);return this.uint32(e),e&&this._push(writeStringBuffer,e,t),this};var reader=Reader,BufferReader,LongBits$2=minimal.LongBits,utf8$1=minimal.utf8;function indexOutOfRange(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function Reader(t){this.buf=t,this.pos=0,this.len=t.length}var create_array="undefined"!=typeof Uint8Array?function(t){if(t instanceof Uint8Array||Array.isArray(t))return new Reader(t);throw Error("illegal buffer")}:function(t){if(Array.isArray(t))return new Reader(t);throw Error("illegal buffer")},e;function readLongVarint(){var t=new LongBits$2(0,0),e=0;if(!(this.len-this.pos>4)){for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.lo=(t.lo|(127&this.buf[this.pos])<<7*e)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(127&this.buf[this.pos++])<<7*e)>>>0,t}for(;e<4;++e)if(t.lo=(t.lo|(127&this.buf[this.pos])<<7*e)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(127&this.buf[this.pos])<<28)>>>0,t.hi=(t.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return t;if(e=0,this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(127&this.buf[this.pos])<<7*e+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.hi=(t.hi|(127&this.buf[this.pos])<<7*e+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}function readFixed32_end(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits$2(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader.create=minimal.Buffer?function(t){return(Reader.create=function(t){return minimal.Buffer.isBuffer(t)?new BufferReader(t):create_array(t)})(t)}:create_array,Reader.prototype._slice=minimal.Array.prototype.subarray||minimal.Array.prototype.slice,Reader.prototype.uint32=(e=4294967295,function(){if(e=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}),Reader.prototype.int32=function(){return 0|this.uint32()},Reader.prototype.sint32=function(){var t=this.uint32();return t>>>1^-(1&t)|0},Reader.prototype.bool=function(){return 0!==this.uint32()},Reader.prototype.fixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.sfixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return 0|readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.float=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var t=minimal.float.readFloatLE(this.buf,this.pos);return this.pos+=4,t},Reader.prototype.double=function(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var t=minimal.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,t},Reader.prototype.bytes=function(){var t=this.uint32(),e=this.pos,n=this.pos+t;if(n>this.len)throw indexOutOfRange(this,t);return this.pos+=t,Array.isArray(this.buf)?this.buf.slice(e,n):e===n?new this.buf.constructor(0):this._slice.call(this.buf,e,n)},Reader.prototype.string=function(){var t=this.bytes();return utf8$1.read(t,0,t.length)},Reader.prototype.skip=function(t){if("number"==typeof t){if(this.pos+t>this.len)throw indexOutOfRange(this,t);this.pos+=t}else do{if(this.pos>=this.len)throw indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this},Reader.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(t=7&this.uint32());)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this},Reader._configure=function(t){BufferReader=t;var e=minimal.Long?"toLong":"toNumber";minimal.merge(Reader.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};var reader_buffer=BufferReader$1;function BufferReader$1(t){reader.call(this,t)}(BufferReader$1.prototype=Object.create(reader.prototype)).constructor=BufferReader$1,minimal.Buffer&&(BufferReader$1.prototype._slice=minimal.Buffer.prototype.slice),BufferReader$1.prototype.string=function(){var t=this.uint32();return this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+t,this.len))};var service=Service;function Service(t,e,n){if("function"!=typeof t)throw TypeError("rpcImpl must be a function");minimal.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=Boolean(e),this.responseDelimited=Boolean(n)}(Service.prototype=Object.create(minimal.EventEmitter.prototype)).constructor=Service,Service.prototype.rpcCall=function t(e,n,r,i,a){if(!i)throw TypeError("request must be specified");var o=this;if(!a)return minimal.asPromise(t,o,e,n,r,i);if(o.rpcImpl)try{return o.rpcImpl(e,n[o.requestDelimited?"encodeDelimited":"encode"](i).finish(),function(t,n){if(t)return o.emit("error",t,e),a(t);if(null!==n){if(!(n instanceof r))try{n=r[o.responseDelimited?"decodeDelimited":"decode"](n)}catch(t){return o.emit("error",t,e),a(t)}return o.emit("data",n,e),a(null,n)}o.end(!0)})}catch(t){return o.emit("error",t,e),void setTimeout(function(){a(t)},0)}else setTimeout(function(){a(Error("already ended"))},0)},Service.prototype.end=function(t){return this.rpcImpl&&(t||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};var rpc_1=createCommonjsModule(function(t,e){e.Service=service}),roots={},indexMinimal=createCommonjsModule(function(t,e){var n=e;function r(){n.Reader._configure(n.BufferReader),n.util._configure()}n.build="minimal",n.Writer=writer,n.BufferWriter=writer_buffer,n.Reader=reader,n.BufferReader=reader_buffer,n.util=minimal,n.rpc=rpc_1,n.roots=roots,n.configure=r,n.Writer._configure(n.BufferWriter),r()}),minimal$1=indexMinimal,minimal_1=minimal$1.roots,minimal_2=minimal$1.Reader,minimal_3=minimal$1.util,$Reader=minimal$1.Reader,$util=minimal$1.util,$root=minimal$1.roots.default||(minimal$1.roots.default={});$root.tensorflow=function(){var t,e,n={};return n.Any=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.typeUrl="",t.prototype.value=$util.newBuffer([]),t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.Any;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.typeUrl=t.string();break;case 2:r.value=t.bytes();break;default:t.skipType(7&i)}}return r},t}(),n.DataType=(t={},(e=Object.create(t))[t[0]="DT_INVALID"]=0,e[t[1]="DT_FLOAT"]=1,e[t[2]="DT_DOUBLE"]=2,e[t[3]="DT_INT32"]=3,e[t[4]="DT_UINT8"]=4,e[t[5]="DT_INT16"]=5,e[t[6]="DT_INT8"]=6,e[t[7]="DT_STRING"]=7,e[t[8]="DT_COMPLEX64"]=8,e[t[9]="DT_INT64"]=9,e[t[10]="DT_BOOL"]=10,e[t[11]="DT_QINT8"]=11,e[t[12]="DT_QUINT8"]=12,e[t[13]="DT_QINT32"]=13,e[t[14]="DT_BFLOAT16"]=14,e[t[101]="DT_FLOAT_REF"]=101,e[t[102]="DT_DOUBLE_REF"]=102,e[t[103]="DT_INT32_REF"]=103,e[t[104]="DT_UINT8_REF"]=104,e[t[105]="DT_INT16_REF"]=105,e[t[106]="DT_INT8_REF"]=106,e[t[107]="DT_STRING_REF"]=107,e[t[108]="DT_COMPLEX64_REF"]=108,e[t[109]="DT_INT64_REF"]=109,e[t[110]="DT_BOOL_REF"]=110,e[t[111]="DT_QINT8_REF"]=111,e[t[112]="DT_QUINT8_REF"]=112,e[t[113]="DT_QINT32_REF"]=113,e[t[114]="DT_BFLOAT16_REF"]=114,e),n.TensorShape=function(){function t(t){if(this.dim=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.dim=$util.emptyArray,t.prototype.unknownRank=!1,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.TensorShape;t.pos<n;){var i=t.uint32();switch(i>>>3){case 2:r.dim&&r.dim.length||(r.dim=[]),r.dim.push($root.tensorflow.TensorShape.Dim.decode(t,t.uint32()));break;case 3:r.unknownRank=t.bool();break;default:t.skipType(7&i)}}return r},t.Dim=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.size=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.name="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.TensorShape.Dim;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.size=t.int64();break;case 2:r.name=t.string();break;default:t.skipType(7&i)}}return r},t}(),t}(),n.Tensor=function(){function t(t){if(this.floatVal=[],this.doubleVal=[],this.intVal=[],this.stringVal=[],this.scomplexVal=[],this.int64Val=[],this.boolVal=[],this.uint32Val=[],this.uint64Val=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.dtype=0,t.prototype.tensorShape=null,t.prototype.versionNumber=0,t.prototype.tensorContent=$util.newBuffer([]),t.prototype.floatVal=$util.emptyArray,t.prototype.doubleVal=$util.emptyArray,t.prototype.intVal=$util.emptyArray,t.prototype.stringVal=$util.emptyArray,t.prototype.scomplexVal=$util.emptyArray,t.prototype.int64Val=$util.emptyArray,t.prototype.boolVal=$util.emptyArray,t.prototype.uint32Val=$util.emptyArray,t.prototype.uint64Val=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.Tensor;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.dtype=t.int32();break;case 2:r.tensorShape=$root.tensorflow.TensorShape.decode(t,t.uint32());break;case 3:r.versionNumber=t.int32();break;case 4:r.tensorContent=t.bytes();break;case 5:if(r.floatVal&&r.floatVal.length||(r.floatVal=[]),2==(7&i))for(var a=t.uint32()+t.pos;t.pos<a;)r.floatVal.push(t.float());else r.floatVal.push(t.float());break;case 6:if(r.doubleVal&&r.doubleVal.length||(r.doubleVal=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.doubleVal.push(t.double());else r.doubleVal.push(t.double());break;case 7:if(r.intVal&&r.intVal.length||(r.intVal=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.intVal.push(t.int32());else r.intVal.push(t.int32());break;case 8:r.stringVal&&r.stringVal.length||(r.stringVal=[]),r.stringVal.push(t.bytes());break;case 9:if(r.scomplexVal&&r.scomplexVal.length||(r.scomplexVal=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.scomplexVal.push(t.float());else r.scomplexVal.push(t.float());break;case 10:if(r.int64Val&&r.int64Val.length||(r.int64Val=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.int64Val.push(t.int64());else r.int64Val.push(t.int64());break;case 11:if(r.boolVal&&r.boolVal.length||(r.boolVal=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.boolVal.push(t.bool());else r.boolVal.push(t.bool());break;case 16:if(r.uint32Val&&r.uint32Val.length||(r.uint32Val=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.uint32Val.push(t.uint32());else r.uint32Val.push(t.uint32());break;case 17:if(r.uint64Val&&r.uint64Val.length||(r.uint64Val=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.uint64Val.push(t.uint64());else r.uint64Val.push(t.uint64());break;default:t.skipType(7&i)}}return r},t}(),n.AttrValue=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}var e;return t.prototype.list=null,t.prototype.s=$util.newBuffer([]),t.prototype.i=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.f=0,t.prototype.b=!1,t.prototype.type=0,t.prototype.shape=null,t.prototype.tensor=null,t.prototype.placeholder="",t.prototype.func=null,Object.defineProperty(t.prototype,"value",{get:$util.oneOfGetter(e=["list","s","i","f","b","type","shape","tensor","placeholder","func"]),set:$util.oneOfSetter(e)}),t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.AttrValue;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.list=$root.tensorflow.AttrValue.ListValue.decode(t,t.uint32());break;case 2:r.s=t.bytes();break;case 3:r.i=t.int64();break;case 4:r.f=t.float();break;case 5:r.b=t.bool();break;case 6:r.type=t.int32();break;case 7:r.shape=$root.tensorflow.TensorShape.decode(t,t.uint32());break;case 8:r.tensor=$root.tensorflow.Tensor.decode(t,t.uint32());break;case 9:r.placeholder=t.string();break;case 10:r.func=$root.tensorflow.NameAttrList.decode(t,t.uint32());break;default:t.skipType(7&i)}}return r},t.ListValue=function(){function t(t){if(this.s=[],this.i=[],this.f=[],this.b=[],this.type=[],this.shape=[],this.tensor=[],this.func=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.s=$util.emptyArray,t.prototype.i=$util.emptyArray,t.prototype.f=$util.emptyArray,t.prototype.b=$util.emptyArray,t.prototype.type=$util.emptyArray,t.prototype.shape=$util.emptyArray,t.prototype.tensor=$util.emptyArray,t.prototype.func=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.AttrValue.ListValue;t.pos<n;){var i=t.uint32();switch(i>>>3){case 2:r.s&&r.s.length||(r.s=[]),r.s.push(t.bytes());break;case 3:if(r.i&&r.i.length||(r.i=[]),2==(7&i))for(var a=t.uint32()+t.pos;t.pos<a;)r.i.push(t.int64());else r.i.push(t.int64());break;case 4:if(r.f&&r.f.length||(r.f=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.f.push(t.float());else r.f.push(t.float());break;case 5:if(r.b&&r.b.length||(r.b=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.b.push(t.bool());else r.b.push(t.bool());break;case 6:if(r.type&&r.type.length||(r.type=[]),2==(7&i))for(a=t.uint32()+t.pos;t.pos<a;)r.type.push(t.int32());else r.type.push(t.int32());break;case 7:r.shape&&r.shape.length||(r.shape=[]),r.shape.push($root.tensorflow.TensorShape.decode(t,t.uint32()));break;case 8:r.tensor&&r.tensor.length||(r.tensor=[]),r.tensor.push($root.tensorflow.Tensor.decode(t,t.uint32()));break;case 9:r.func&&r.func.length||(r.func=[]),r.func.push($root.tensorflow.NameAttrList.decode(t,t.uint32()));break;default:t.skipType(7&i)}}return r},t}(),t}(),n.NameAttrList=function(){function t(t){if(this.attr={},t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.name="",t.prototype.attr=$util.emptyObject,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n,r=void 0===e?t.len:t.pos+e,i=new $root.tensorflow.NameAttrList;t.pos<r;){var a=t.uint32();switch(a>>>3){case 1:i.name=t.string();break;case 2:t.skip().pos++,i.attr===$util.emptyObject&&(i.attr={}),n=t.string(),t.pos++,i.attr[n]=$root.tensorflow.AttrValue.decode(t,t.uint32());break;default:t.skipType(7&a)}}return i},t}(),n.NodeDef=function(){function t(t){if(this.input=[],this.attr={},t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.name="",t.prototype.op="",t.prototype.input=$util.emptyArray,t.prototype.device="",t.prototype.attr=$util.emptyObject,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n,r=void 0===e?t.len:t.pos+e,i=new $root.tensorflow.NodeDef;t.pos<r;){var a=t.uint32();switch(a>>>3){case 1:i.name=t.string();break;case 2:i.op=t.string();break;case 3:i.input&&i.input.length||(i.input=[]),i.input.push(t.string());break;case 4:i.device=t.string();break;case 5:t.skip().pos++,i.attr===$util.emptyObject&&(i.attr={}),n=t.string(),t.pos++,i.attr[n]=$root.tensorflow.AttrValue.decode(t,t.uint32());break;default:t.skipType(7&a)}}return i},t}(),n.VersionDef=function(){function t(t){if(this.badConsumers=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.producer=0,t.prototype.minConsumer=0,t.prototype.badConsumers=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.VersionDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.producer=t.int32();break;case 2:r.minConsumer=t.int32();break;case 3:if(r.badConsumers&&r.badConsumers.length||(r.badConsumers=[]),2==(7&i))for(var a=t.uint32()+t.pos;t.pos<a;)r.badConsumers.push(t.int32());else r.badConsumers.push(t.int32());break;default:t.skipType(7&i)}}return r},t}(),n.GraphDef=function(){function t(t){if(this.node=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.node=$util.emptyArray,t.prototype.versions=null,t.prototype.library=null,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.GraphDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.node&&r.node.length||(r.node=[]),r.node.push($root.tensorflow.NodeDef.decode(t,t.uint32()));break;case 4:r.versions=$root.tensorflow.VersionDef.decode(t,t.uint32());break;case 2:r.library=$root.tensorflow.FunctionDefLibrary.decode(t,t.uint32());break;default:t.skipType(7&i)}}return r},t}(),n.CollectionDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}var e;return t.prototype.nodeList=null,t.prototype.bytesList=null,t.prototype.int64List=null,t.prototype.floatList=null,t.prototype.anyList=null,Object.defineProperty(t.prototype,"kind",{get:$util.oneOfGetter(e=["nodeList","bytesList","int64List","floatList","anyList"]),set:$util.oneOfSetter(e)}),t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.nodeList=$root.tensorflow.CollectionDef.NodeList.decode(t,t.uint32());break;case 2:r.bytesList=$root.tensorflow.CollectionDef.BytesList.decode(t,t.uint32());break;case 3:r.int64List=$root.tensorflow.CollectionDef.Int64List.decode(t,t.uint32());break;case 4:r.floatList=$root.tensorflow.CollectionDef.FloatList.decode(t,t.uint32());break;case 5:r.anyList=$root.tensorflow.CollectionDef.AnyList.decode(t,t.uint32());break;default:t.skipType(7&i)}}return r},t.NodeList=function(){function t(t){if(this.value=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.value=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef.NodeList;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.value&&r.value.length||(r.value=[]),r.value.push(t.string());break;default:t.skipType(7&i)}}return r},t}(),t.BytesList=function(){function t(t){if(this.value=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.value=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef.BytesList;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.value&&r.value.length||(r.value=[]),r.value.push(t.bytes());break;default:t.skipType(7&i)}}return r},t}(),t.Int64List=function(){function t(t){if(this.value=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.value=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef.Int64List;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:if(r.value&&r.value.length||(r.value=[]),2==(7&i))for(var a=t.uint32()+t.pos;t.pos<a;)r.value.push(t.int64());else r.value.push(t.int64());break;default:t.skipType(7&i)}}return r},t}(),t.FloatList=function(){function t(t){if(this.value=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.value=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef.FloatList;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:if(r.value&&r.value.length||(r.value=[]),2==(7&i))for(var a=t.uint32()+t.pos;t.pos<a;)r.value.push(t.float());else r.value.push(t.float());break;default:t.skipType(7&i)}}return r},t}(),t.AnyList=function(){function t(t){if(this.value=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.value=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.CollectionDef.AnyList;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.value&&r.value.length||(r.value=[]),r.value.push($root.tensorflow.Any.decode(t,t.uint32()));break;default:t.skipType(7&i)}}return r},t}(),t}(),n.SaverDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}var e,n;return t.prototype.filenameTensorName="",t.prototype.saveTensorName="",t.prototype.restoreOpName="",t.prototype.maxToKeep=0,t.prototype.sharded=!1,t.prototype.keepCheckpointEveryNHours=0,t.prototype.version=0,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.SaverDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.filenameTensorName=t.string();break;case 2:r.saveTensorName=t.string();break;case 3:r.restoreOpName=t.string();break;case 4:r.maxToKeep=t.int32();break;case 5:r.sharded=t.bool();break;case 6:r.keepCheckpointEveryNHours=t.float();break;case 7:r.version=t.int32();break;default:t.skipType(7&i)}}return r},t.CheckpointFormatVersion=(e={},(n=Object.create(e))[e[0]="LEGACY"]=0,n[e[1]="V1"]=1,n[e[2]="V2"]=2,n),t}(),n.TensorInfo=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}var e;return t.prototype.name="",t.prototype.cooSparse=null,t.prototype.dtype=0,t.prototype.tensorShape=null,Object.defineProperty(t.prototype,"encoding",{get:$util.oneOfGetter(e=["name","cooSparse"]),set:$util.oneOfSetter(e)}),t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.TensorInfo;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.name=t.string();break;case 4:r.cooSparse=$root.tensorflow.TensorInfo.CooSparse.decode(t,t.uint32());break;case 2:r.dtype=t.int32();break;case 3:r.tensorShape=$root.tensorflow.TensorShape.decode(t,t.uint32());break;default:t.skipType(7&i)}}return r},t.CooSparse=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.valuesTensorName="",t.prototype.indicesTensorName="",t.prototype.denseShapeTensorName="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.TensorInfo.CooSparse;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.valuesTensorName=t.string();break;case 2:r.indicesTensorName=t.string();break;case 3:r.denseShapeTensorName=t.string();break;default:t.skipType(7&i)}}return r},t}(),t}(),n.SignatureDef=function(){function t(t){if(this.inputs={},this.outputs={},t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.inputs=$util.emptyObject,t.prototype.outputs=$util.emptyObject,t.prototype.methodName="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n,r=void 0===e?t.len:t.pos+e,i=new $root.tensorflow.SignatureDef;t.pos<r;){var a=t.uint32();switch(a>>>3){case 1:t.skip().pos++,i.inputs===$util.emptyObject&&(i.inputs={}),n=t.string(),t.pos++,i.inputs[n]=$root.tensorflow.TensorInfo.decode(t,t.uint32());break;case 2:t.skip().pos++,i.outputs===$util.emptyObject&&(i.outputs={}),n=t.string(),t.pos++,i.outputs[n]=$root.tensorflow.TensorInfo.decode(t,t.uint32());break;case 3:i.methodName=t.string();break;default:t.skipType(7&a)}}return i},t}(),n.AssetFileDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.tensorInfo=null,t.prototype.filename="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.AssetFileDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.tensorInfo=$root.tensorflow.TensorInfo.decode(t,t.uint32());break;case 2:r.filename=t.string();break;default:t.skipType(7&i)}}return r},t}(),n.OpDef=function(){function t(t){if(this.inputArg=[],this.outputArg=[],this.attr=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.name="",t.prototype.inputArg=$util.emptyArray,t.prototype.outputArg=$util.emptyArray,t.prototype.attr=$util.emptyArray,t.prototype.deprecation=null,t.prototype.summary="",t.prototype.description="",t.prototype.isCommutative=!1,t.prototype.isAggregate=!1,t.prototype.isStateful=!1,t.prototype.allowsUninitializedInput=!1,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.OpDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.name=t.string();break;case 2:r.inputArg&&r.inputArg.length||(r.inputArg=[]),r.inputArg.push($root.tensorflow.OpDef.ArgDef.decode(t,t.uint32()));break;case 3:r.outputArg&&r.outputArg.length||(r.outputArg=[]),r.outputArg.push($root.tensorflow.OpDef.ArgDef.decode(t,t.uint32()));break;case 4:r.attr&&r.attr.length||(r.attr=[]),r.attr.push($root.tensorflow.OpDef.AttrDef.decode(t,t.uint32()));break;case 8:r.deprecation=$root.tensorflow.OpDef.OpDeprecation.decode(t,t.uint32());break;case 5:r.summary=t.string();break;case 6:r.description=t.string();break;case 18:r.isCommutative=t.bool();break;case 16:r.isAggregate=t.bool();break;case 17:r.isStateful=t.bool();break;case 19:r.allowsUninitializedInput=t.bool();break;default:t.skipType(7&i)}}return r},t.ArgDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.name="",t.prototype.description="",t.prototype.type=0,t.prototype.typeAttr="",t.prototype.numberAttr="",t.prototype.typeListAttr="",t.prototype.isRef=!1,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.OpDef.ArgDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.name=t.string();break;case 2:r.description=t.string();break;case 3:r.type=t.int32();break;case 4:r.typeAttr=t.string();break;case 5:r.numberAttr=t.string();break;case 6:r.typeListAttr=t.string();break;case 16:r.isRef=t.bool();break;default:t.skipType(7&i)}}return r},t}(),t.AttrDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.name="",t.prototype.type="",t.prototype.defaultValue=null,t.prototype.description="",t.prototype.hasMinimum=!1,t.prototype.minimum=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.allowedValues=null,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.OpDef.AttrDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.name=t.string();break;case 2:r.type=t.string();break;case 3:r.defaultValue=$root.tensorflow.AttrValue.decode(t,t.uint32());break;case 4:r.description=t.string();break;case 5:r.hasMinimum=t.bool();break;case 6:r.minimum=t.int64();break;case 7:r.allowedValues=$root.tensorflow.AttrValue.decode(t,t.uint32());break;default:t.skipType(7&i)}}return r},t}(),t.OpDeprecation=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.version=0,t.prototype.explanation="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.OpDef.OpDeprecation;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.version=t.int32();break;case 2:r.explanation=t.string();break;default:t.skipType(7&i)}}return r},t}(),t}(),n.OpList=function(){function t(t){if(this.op=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.op=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.OpList;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.op&&r.op.length||(r.op=[]),r.op.push($root.tensorflow.OpDef.decode(t,t.uint32()));break;default:t.skipType(7&i)}}return r},t}(),n.MetaGraphDef=function(){function t(t){if(this.collectionDef={},this.signatureDef={},this.assetFileDef=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.metaInfoDef=null,t.prototype.graphDef=null,t.prototype.saverDef=null,t.prototype.collectionDef=$util.emptyObject,t.prototype.signatureDef=$util.emptyObject,t.prototype.assetFileDef=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n,r=void 0===e?t.len:t.pos+e,i=new $root.tensorflow.MetaGraphDef;t.pos<r;){var a=t.uint32();switch(a>>>3){case 1:i.metaInfoDef=$root.tensorflow.MetaGraphDef.MetaInfoDef.decode(t,t.uint32());break;case 2:i.graphDef=$root.tensorflow.GraphDef.decode(t,t.uint32());break;case 3:i.saverDef=$root.tensorflow.SaverDef.decode(t,t.uint32());break;case 4:t.skip().pos++,i.collectionDef===$util.emptyObject&&(i.collectionDef={}),n=t.string(),t.pos++,i.collectionDef[n]=$root.tensorflow.CollectionDef.decode(t,t.uint32());break;case 5:t.skip().pos++,i.signatureDef===$util.emptyObject&&(i.signatureDef={}),n=t.string(),t.pos++,i.signatureDef[n]=$root.tensorflow.SignatureDef.decode(t,t.uint32());break;case 6:i.assetFileDef&&i.assetFileDef.length||(i.assetFileDef=[]),i.assetFileDef.push($root.tensorflow.AssetFileDef.decode(t,t.uint32()));break;default:t.skipType(7&a)}}return i},t.MetaInfoDef=function(){function t(t){if(this.tags=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.metaGraphVersion="",t.prototype.strippedOpList=null,t.prototype.anyInfo=null,t.prototype.tags=$util.emptyArray,t.prototype.tensorflowVersion="",t.prototype.tensorflowGitVersion="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.MetaGraphDef.MetaInfoDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.metaGraphVersion=t.string();break;case 2:r.strippedOpList=$root.tensorflow.OpList.decode(t,t.uint32());break;case 3:r.anyInfo=$root.tensorflow.Any.decode(t,t.uint32());break;case 4:r.tags&&r.tags.length||(r.tags=[]),r.tags.push(t.string());break;case 5:r.tensorflowVersion=t.string();break;case 6:r.tensorflowGitVersion=t.string();break;default:t.skipType(7&i)}}return r},t}(),t}(),n.SavedModel=function(){function t(t){if(this.metaGraphs=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.savedModelSchemaVersion=$util.Long?$util.Long.fromBits(0,0,!1):0,t.prototype.metaGraphs=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.SavedModel;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.savedModelSchemaVersion=t.int64();break;case 2:r.metaGraphs&&r.metaGraphs.length||(r.metaGraphs=[]),r.metaGraphs.push($root.tensorflow.MetaGraphDef.decode(t,t.uint32()));break;default:t.skipType(7&i)}}return r},t}(),n.FunctionDefLibrary=function(){function t(t){if(this.function=[],this.gradient=[],t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.function=$util.emptyArray,t.prototype.gradient=$util.emptyArray,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.FunctionDefLibrary;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.function&&r.function.length||(r.function=[]),r.function.push($root.tensorflow.FunctionDef.decode(t,t.uint32()));break;case 2:r.gradient&&r.gradient.length||(r.gradient=[]),r.gradient.push($root.tensorflow.GradientDef.decode(t,t.uint32()));break;default:t.skipType(7&i)}}return r},t}(),n.FunctionDef=function(){function t(t){if(this.attr={},this.nodeDef=[],this.ret={},t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.signature=null,t.prototype.attr=$util.emptyObject,t.prototype.nodeDef=$util.emptyArray,t.prototype.ret=$util.emptyObject,t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n,r=void 0===e?t.len:t.pos+e,i=new $root.tensorflow.FunctionDef;t.pos<r;){var a=t.uint32();switch(a>>>3){case 1:i.signature=$root.tensorflow.OpDef.decode(t,t.uint32());break;case 5:t.skip().pos++,i.attr===$util.emptyObject&&(i.attr={}),n=t.string(),t.pos++,i.attr[n]=$root.tensorflow.AttrValue.decode(t,t.uint32());break;case 3:i.nodeDef&&i.nodeDef.length||(i.nodeDef=[]),i.nodeDef.push($root.tensorflow.NodeDef.decode(t,t.uint32()));break;case 4:t.skip().pos++,i.ret===$util.emptyObject&&(i.ret={}),n=t.string(),t.pos++,i.ret[n]=t.string();break;default:t.skipType(7&a)}}return i},t}(),n.GradientDef=function(){function t(t){if(t)for(var e=Object.keys(t),n=0;n<e.length;++n)null!=t[e[n]]&&(this[e[n]]=t[e[n]])}return t.prototype.functionName="",t.prototype.gradientFunc="",t.decode=function(t,e){t instanceof $Reader||(t=$Reader.create(t));for(var n=void 0===e?t.len:t.pos+e,r=new $root.tensorflow.GradientDef;t.pos<n;){var i=t.uint32();switch(i>>>3){case 1:r.functionName=t.string();break;case 2:r.gradientFunc=t.string();break;default:t.skipType(7&i)}}return r},t}(),n}();var compiled_api=$root,compiled_api_1=compiled_api.tensorflow;function getParamValue(t,e,n,r){var i=e.params[t];if(i&&void 0!==i.inputIndex){if("tensor"===i.type)return getTensor(e.inputNames[i.inputIndex],n,r);if("tensors"===i.type)return(0===i.inputIndex?0===i.inputParamLength?e.inputNames:e.inputNames.slice(i.inputIndex,-i.inputParamLength):e.inputNames.splice(i.inputIndex)).map(function(t){return getTensor(t,n,r)});var a=Array.prototype.slice.call(getTensor(e.inputNames.slice(i.inputIndex)[0],n,r).dataSync());return"number"===i.type?a[0]:a}return i&&i.value}function getTensor(t,e,n){var r=parseNodeName(t),i=r[0],a=r[1],o=n.currentContextIds.find(function(t){return!!e[getNodeNameWithContextId(i,t)]});return void 0!==o?e[getNodeNameWithContextId(i,o)][a]:void 0}function getTensorsForCurrentContenxt(t,e,n){return e[getNodeNameWithContextId(t,n.currentContextId)]}function getNodeNameAndIndex(t,e){var n=parseNodeName(t),r=n[0],i=n[1];return[getNodeNameWithContextId(r,e&&e.currentContextId),i]}function getNodeNameWithContextId(t,e){return e?t+"-"+e:t}function parseNodeName(t){var e=t.lastIndexOf(":");return-1===e?[t,0]:[t.substring(0,e),Number(t.substring(e+1))]}function split$1(t,e){for(var n=[],r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n}var json=[{tfOpName:"Add",dlOpName:"add",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",dlOpName:"addN",category:"arithmetic",params:[{tfInputIndex:0,tfInputParamLength:0,dlParamName:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",dlOpName:"add",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",dlOpName:"sub",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",dlOpName:"div",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",dlOpName:"div",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",dlOpName:"floorDiv",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",dlOpName:"mul",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",dlOpName:"maximum",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"}]},{tfOpName:"Minimum",dlOpName:"minimum",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"}]},{tfOpName:"Pow",dlOpName:"pow",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",dlOpName:"squaredDifference",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",dlOpName:"mod",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",dlOpName:"mod",category:"arithmetic",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]}],arithmetic=Object.freeze({json:json}),json$1=[{tfOpName:"Abs",dlOpName:"abs",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",dlOpName:"acos",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",dlOpName:"asin",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",dlOpName:"atan",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",dlOpName:"atan2",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"y",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",dlOpName:"ceil",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",dlOpName:"clipByValue",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"clip_value_min",dlParamName:"clipValueMin",type:"number"},{tfParamName:"clip_value_max",dlParamName:"clipValueMax",type:"number"}]},{tfOpName:"Cos",dlOpName:"cos",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",dlOpName:"cosh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",dlOpName:"elu",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",dlOpName:"exp",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",dlOpName:"floor",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",dlOpName:"log",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",dlOpName:"neg",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",dlOpName:"relu",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",dlOpName:"clipByValue",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0},{dlParamName:"clipValueMin",type:"number",defaultValue:0},{dlParamName:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",dlOpName:"selu",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",dlOpName:"sigmoid",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",dlOpName:"sin",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",dlOpName:"sinh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",dlOpName:"sqrt",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",dlOpName:"rsqrt",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",dlOpName:"square",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",dlOpName:"tan",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",dlOpName:"tanh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",dlOpName:"sign",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",dlOpName:"round",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",dlOpName:"expm1",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",dlOpName:"log1p",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",dlOpName:"reciprocal",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",dlOpName:"reciprocal",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",dlOpName:"softplus",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",dlOpName:"asinh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",dlOpName:"acosh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",dlOpName:"atanh",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",dlOpName:"erf",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",dlOpName:"prod",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axes",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool",notSupported:!0},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",dlOpName:"leakyRelu",category:"basic_math",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"alpha",dlParamName:"alpha",type:"number",defaultValue:.2},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]}],basicMath=Object.freeze({json:json$1}),json$2=[{tfOpName:"LoopCond",dlOpName:"loopCond",category:"control",params:[{tfInputIndex:0,dlParamName:"pred",type:"tensor"}]},{tfOpName:"Switch",dlOpName:"switch",category:"control",params:[{tfInputIndex:0,dlParamName:"data",type:"tensor"},{tfInputIndex:1,dlParamName:"pred",type:"tensor"}]},{tfOpName:"Merge",dlOpName:"merge",category:"control",params:[{tfInputIndex:0,tfInputParamLength:0,dlParamName:"tensors",type:"tensors"}]},{tfOpName:"Enter",dlOpName:"enter",category:"control",params:[{tfInputIndex:0,dlParamName:"tensor",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0},{tfParamName:"frame_name",dlParamName:"frameName",type:"string"},{tfParamName:"is_constant",dlParamName:"isConstant",type:"bool"}]},{tfOpName:"Exit",dlOpName:"exit",category:"control",params:[{tfInputIndex:0,dlParamName:"tensor",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",dlOpName:"nextIteration",category:"control",params:[{tfInputIndex:0,dlParamName:"tensor",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",dlOpName:"tensorArray",category:"control",params:[{tfInputIndex:0,dlParamName:"size",type:"number"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"},{tfParamName:"element_shape",dlParamName:"elementShape",type:"shape"},{tfParamName:"dynamic_size",dlParamName:"dynamicSize",type:"bool"},{tfParamName:"clear_after_read",dlParamName:"clearAfterRead",type:"bool"},{tfParamName:"identical_element_shapes",dlParamName:"identicalElementShapes",type:"bool"},{tfParamName:"tensor_array_name",dlParamName:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",dlOpName:"tensorArrayWrite",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"index",type:"number"},{tfInputIndex:2,dlParamName:"tensor",type:"tensor"},{tfInputIndex:3,dlParamName:"flowIn",type:"number"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",dlOpName:"tensorArrayRead",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"index",type:"number"},{tfInputIndex:2,dlParamName:"flowIn",type:"number"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",dlOpName:"tensorArrayGather",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"indices",type:"number[]"},{tfInputIndex:2,dlParamName:"flowIn",type:"number"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"},{tfParamName:"element_shape",dlParamName:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",dlOpName:"tensorArrayScatter",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"indices",type:"number[]"},{tfInputIndex:2,dlParamName:"tensor",type:"tensor"},{tfInputIndex:3,dlParamName:"flowIn",type:"number"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",dlOpName:"tensorArrayConcat",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"flowIn",type:"number"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"},{tfParamName:"element_shape_except0",dlParamName:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",dlOpName:"tensorArraySplit",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"tensor",type:"tensor"},{tfInputIndex:2,dlParamName:"lengths",type:"number[]"},{tfInputIndex:3,dlParamName:"flowIn",type:"number"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",dlOpName:"tensorArraySize",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"},{tfInputIndex:1,dlParamName:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",dlOpName:"tensorArrayClose",category:"control",params:[{tfInputIndex:0,dlParamName:"tensorArrayId",type:"number"}]}],control=Object.freeze({json:json$2}),json$3=[{tfOpName:"AvgPool",dlOpName:"avgPool",category:"convolution",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",notSupported:!0},{tfParamName:"ksize",dlParamName:"kernelSize",type:"number[]"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",dlOpName:"maxPool",category:"convolution",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",notSupported:!0},{tfParamName:"ksize",dlParamName:"kernelSize",type:"number[]"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",dlOpName:"conv1d",category:"convolution",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"filter",type:"tensor"},{tfParamName:"stride",dlParamName:"stride",type:"number"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",defaultValue:"NWC"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0},{tfParamName:"dilation",dlParamName:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",dlOpName:"conv2d",category:"convolution",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"filter",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"useCudnnOnGpu",dlParamName:"useCudnnOnGpu",type:"bool"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",defaultValue:"NHWC"},{tfParamName:"dilations",dlParamName:"dilations",type:"number[]"}]},{tfOpName:"Conv2DBackpropInput",dlOpName:"conv2dTranspose",category:"convolution",params:[{tfInputIndex:2,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"filter",type:"tensor"},{tfInputIndex:0,dlParamName:"outputShape",type:"number[]"},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",dlOpName:"depthwiseConv2d",category:"convolution",params:[{tfInputIndex:0,dlParamName:"input",type:"tensor"},{tfInputIndex:1,dlParamName:"filter",type:"tensor"},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",defaultValue:"NHWC"},{tfParamName:"dilations",dlParamName:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",dlOpName:"depthwiseConv2d",category:"convolution",params:[{tfInputIndex:0,dlParamName:"input",type:"tensor"},{tfInputIndex:1,dlParamName:"filter",type:"tensor"},{tfParamName:"strides",dlParamName:"strides",type:"number[]"},{tfParamName:"padding",dlParamName:"pad",type:"string"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",defaultValue:"NHWC"},{tfParamName:"dilations",dlParamName:"dilations",type:"number[]"}]}],convolution=Object.freeze({json:json$3}),json$4=[{tfOpName:"Fill",dlOpName:"fill",category:"creation",params:[{tfInputIndex:0,dlParamName:"shape",type:"number[]"},{tfInputIndex:1,dlParamName:"value",type:"number"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",dlOpName:"linspace",category:"creation",params:[{tfInputIndex:0,dlParamName:"start",type:"number"},{tfInputIndex:1,dlParamName:"stop",type:"number"},{tfInputIndex:2,dlParamName:"num",type:"number"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",dlOpName:"oneHot",category:"creation",params:[{tfInputIndex:0,dlParamName:"indices",type:"tensor"},{tfInputIndex:1,dlParamName:"depth",type:"number"},{tfInputIndex:2,dlParamName:"onValue",type:"number",defaultValue:1},{tfInputIndex:3,dlParamName:"offValue",type:"number",defaultValue:0},{tfParamName:"axis",dlParamName:"axis",type:"number",notSupported:!0},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",dlOpName:"ones",category:"creation",params:[{tfInputIndex:0,dlParamName:"shape",type:"number[]"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",dlOpName:"onesLike",category:"creation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",dlOpName:"randomUniform",category:"creation",params:[{tfInputIndex:0,dlParamName:"shape",type:"number[]"},{tfParamName:"minval",dlParamName:"minval",type:"number",defaultValue:0},{tfParamName:"maxval",dlParamName:"maxval",type:"number",defaultValue:1},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"},{tfParamName:"seed",dlParamName:"seed",type:"number",defaultValue:0},{tfParamName:"seed2",dlParamName:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfParamName:"T",dlParamName:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",dlOpName:"range",category:"creation",params:[{tfInputIndex:0,dlParamName:"start",type:"number"},{tfInputIndex:1,dlParamName:"stop",type:"number"},{tfInputIndex:2,dlParamName:"step",type:"number",defaultValue:0},{tfParamName:"Tidx",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"truncatedNormal",dlOpName:"truncatedNormal",category:"creation",params:[{tfInputIndex:0,dlParamName:"shape",type:"number[]"},{tfParamName:"means",dlParamName:"mean",type:"number",defaultValue:0},{tfParamName:"stddev",dlParamName:"stdDev",type:"number",defaultValue:1},{tfParamName:"seed",dlParamName:"seed",type:"number"},{tfParamName:"seed2",dlParamName:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"},{tfParamName:"T",dlParamName:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",dlOpName:"zeros",category:"creation",params:[{tfInputIndex:0,dlParamName:"shape",type:"number[]"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",dlOpName:"zerosLike",category:"creation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype"}]}],creation=Object.freeze({json:json$4}),json$5=[{tfOpName:"NonMaxSuppressionV2",dlOpName:"nonMaxSuppression",category:"dynamic",params:[{tfInputIndex:0,dlParamName:"boxes",type:"tensor"},{tfInputIndex:1,dlParamName:"scores",type:"tensor"},{tfInputIndex:2,dlParamName:"maxOutputSize",type:"number"},{tfInputIndex:3,dlParamName:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",dlOpName:"nonMaxSuppression",category:"dynamic",params:[{tfInputIndex:0,dlParamName:"boxes",type:"tensor"},{tfInputIndex:1,dlParamName:"scores",type:"tensor"},{tfInputIndex:2,dlParamName:"maxOutputSize",type:"number"},{tfInputIndex:3,dlParamName:"iouThreshold",type:"number"},{tfInputIndex:4,dlParamName:"scoreThreshold",type:"number"}]},{tfOpName:"Where",dlOpName:"whereAsync",category:"dynamic",params:[{tfInputIndex:0,dlParamName:"condition",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",dlOpName:"setdiff1dAsync",category:"dynamic",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"y",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]}],dynamic=Object.freeze({json:json$5}),json$6=[{tfOpName:"TopKV2",dlOpName:"topK",category:"evaluation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"k",type:"number"},{tfParamName:"sorted",dlParamName:"sorted",type:"bool"}]}],evaluation=Object.freeze({json:json$6}),json$7=[{tfOpName:"PlaceholderWithDefault",dlOpName:"placeholder",category:"graph",params:[{tfInputIndex:0,dlParamName:"default",type:"tensor"},{tfParamName:"shape",dlParamName:"shape",type:"shape"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",dlOpName:"placeholder",category:"graph",params:[{tfParamName:"shape",dlParamName:"shape",type:"shape"},{tfParamName:"dtype",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"Const",dlOpName:"const",category:"graph"},{tfOpName:"Identity",dlOpName:"identity",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"Snapshot",dlOpName:"snapshot",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"Rank",dlOpName:"rank",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"Size",dlOpName:"size",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"Shape",dlOpName:"shape",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"ShapeN",dlOpName:"shapeN",category:"graph",params:[{tfInputIndex:0,tfInputParamLength:0,dlParamName:"x",type:"tensors"}]},{tfOpName:"Print",dlOpName:"print",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,tfInputParamLength:1,dlParamName:"data",type:"tensors"},{tfParamName:"message",dlParamName:"message",type:"string"},{tfParamName:"first_n",dlParamName:"firstN",type:"number",notSupprted:!0},{tfParamName:"summarize",dlParamName:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",dlOpName:"noop",category:"graph",params:[]},{tfOpName:"StopGradient",dlOpName:"stopGradient",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",dlOpName:"fakeQuantWithMinMaxVars",category:"graph",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"min",dlParamName:"min",type:"number"},{tfParamName:"max",dlParamName:"max",type:"number"}]}],graph=Object.freeze({json:json$7}),json$8=[{tfOpName:"ResizeBilinear",dlOpName:"resizeBilinear",category:"image",params:[{tfInputIndex:0,dlParamName:"images",type:"tensor"},{tfInputIndex:1,dlParamName:"size",type:"number[]"},{tfParamName:"align_corners",dlParamName:"alignCorners",type:"bool"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",dlOpName:"resizeNearestNeighbor",category:"image",params:[{tfInputIndex:0,dlParamName:"images",type:"tensor"},{tfInputIndex:1,dlParamName:"size",type:"number[]"},{tfParamName:"align_corners",dlParamName:"alignCorners",type:"bool"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",dlOpName:"cropAndResize",category:"image",params:[{tfInputIndex:0,dlParamName:"image",type:"tensor"},{tfInputIndex:1,dlParamName:"boxes",type:"tensor"},{tfInputIndex:2,dlParamName:"boxInd",type:"tensor"},{tfInputIndex:3,dlParamName:"cropSize",type:"number[]"},{tfParamName:"method",dlParamName:"method",type:"string"},{tfParamName:"extrapolation_value",dlParamName:"extrapolationValue",type:"number"}]}],image$1=Object.freeze({json:json$8}),json$9=[{tfOpName:"Equal",dlOpName:"equal",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",dlOpName:"notEqual",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",dlOpName:"greater",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",dlOpName:"greaterEqual",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",dlOpName:"less",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",dlOpName:"lessEqual",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",dlOpName:"logicalAnd",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",dlOpName:"logicalNot",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",dlOpName:"logicalOr",category:"logical",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",dlOpName:"where",category:"logical",params:[{tfInputIndex:0,dlParamName:"condition",type:"tensor"},{tfInputIndex:1,dlParamName:"a",type:"tensor"},{tfInputIndex:2,dlParamName:"b",type:"tensor"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]}],logical=Object.freeze({json:json$9}),json$10=[{tfOpName:"MatMul",dlOpName:"matMul",category:"matrices",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"transpose_a",dlParamName:"transposeA",type:"bool",defaultValue:!1},{tfParamName:"transpose_b",dlParamName:"transposeB",type:"bool",defaultValue:!1},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",dlOpName:"matMul",category:"matrices",params:[{tfInputIndex:0,dlParamName:"a",type:"tensor"},{tfInputIndex:1,dlParamName:"b",type:"tensor"},{tfParamName:"adj_x",dlParamName:"transposeA",type:"bool",defaultValue:!1},{tfParamName:"adj_y",dlParamName:"transposeB",type:"bool",defaultValue:!1},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",dlOpName:"transpose",category:"matrices",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"perm",type:"number[]"},{tfParamName:"T",dlParamName:"dtype",type:"dtype",notSupported:!0}]}],matrices=Object.freeze({json:json$10}),json$11=[{tfOpName:"FusedBatchNorm",dlOpName:"batchNormalization",category:"normalization",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"scale",type:"tensor"},{tfInputIndex:2,dlParamName:"offset",type:"tensor"},{tfInputIndex:3,dlParamName:"mean",type:"tensor"},{tfInputIndex:4,dlParamName:"variance",type:"tensor"},{tfParamName:"epsilon",dlParamName:"epsilon",type:"number",defaultValue:.001},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",dlOpName:"batchNormalization",category:"normalization",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"scale",type:"tensor"},{tfInputIndex:2,dlParamName:"offset",type:"tensor"},{tfInputIndex:3,dlParamName:"mean",type:"tensor"},{tfInputIndex:4,dlParamName:"variance",type:"tensor"},{tfParamName:"epsilon",dlParamName:"epsilon",type:"number",defaultValue:.001},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",dlOpName:"localResponseNormalization",category:"normalization",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"depth_radius",dlParamName:"radius",type:"number",defaultValue:5},{tfParamName:"bias",dlParamName:"bias",type:"number",defaultValue:1},{tfParamName:"alpha",dlParamName:"alpha",type:"number",defaultValue:1},{tfParamName:"beta",dlParamName:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",dlOpName:"softmax",category:"normalization",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",dlOpName:"logSoftmax",category:"normalization",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"SparseToDense",dlOpName:"sparseToDense",category:"normalization",params:[{tfInputIndex:0,dlParamName:"sparseIndices",type:"tensor"},{tfInputIndex:1,dlParamName:"outputShape",type:"number[]"},{tfInputIndex:2,dlParamName:"sparseValues",type:"tensor"},{tfInputIndex:3,dlParamName:"defaultValue",type:"tensor"},{tfParamName:"validate_indices",dlParamName:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],normalization=Object.freeze({json:json$11}),json$12=[{tfOpName:"Max",dlOpName:"max",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"Mean",dlOpName:"mean",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"Min",dlOpName:"min",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"Sum",dlOpName:"sum",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"All",dlOpName:"all",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"Any",dlOpName:"any",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",dlOpName:"argMax",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number"}]},{tfOpName:"ArgMin",dlOpName:"argMin",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number"}]},{tfOpName:"Prod",dlOpName:"prod",category:"reduction",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"},{tfParamName:"keep_dims",dlParamName:"keepDims",type:"bool"}]}],reduction=Object.freeze({json:json$12}),json$13=[{tfOpName:"ConcatV2",dlOpName:"concat",category:"slice_join",params:[{tfInputIndex:0,tfInputParamLength:1,dlParamName:"tensors",type:"tensors"},{tfInputIndex:-1,dlParamName:"axis",type:"number"}]},{tfOpName:"Concat",dlOpName:"concat",category:"slice_join",params:[{tfInputIndex:1,tfInputParamLength:1,dlParamName:"tensors",type:"tensors"},{tfInputIndex:0,dlParamName:"axis",type:"number"}]},{tfOpName:"GatherV2",dlOpName:"gather",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"indices",type:"tensor"},{tfInputIndex:2,dlParamName:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",dlOpName:"gather",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"indices",type:"tensor"},{tfParamName:"axis",dlParamName:"axis",type:"number",defaultValue:0},{tfParamName:"validate_indices",dlParamName:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",dlOpName:"reverse",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",dlOpName:"reverse",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"axis",type:"number[]"}]},{tfOpName:"Slice",dlOpName:"slice",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"begin",type:"number[]"},{tfInputIndex:2,dlParamName:"size",type:"number[]"}]},{tfOpName:"StridedSlice",dlOpName:"stridedSlice",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"begin",type:"number[]"},{tfInputIndex:2,dlParamName:"end",type:"number[]"},{tfInputIndex:3,dlParamName:"strides",type:"number[]"},{tfParamName:"begin_mask",dlParamName:"beginMask",type:"number",defaultValue:0},{tfParamName:"end_mask",dlParamName:"endMask",type:"number",defaultValue:0},{tfParamName:"new_axis_mask",dlParamName:"newAxisMask",type:"number",defaultValue:0},{tfParamName:"ellipsis_mask",dlParamName:"ellipsisMask",type:"number",defaultValue:0},{tfParamName:"shrink_axis_mask",dlParamName:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",dlOpName:"stack",category:"slice_join",params:[{tfInputIndex:0,tfInputParamLength:0,dlParamName:"tensors",type:"tensors"},{tfParamName:"axis",dlParamName:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",dlOpName:"unstack",category:"slice_join",params:[{tfInputIndex:0,tfInputParamLength:0,dlParamName:"tensor",type:"tensor"},{tfParamName:"axis",dlParamName:"axis",type:"number",defaultValue:0},{tfParamName:"num",dlParamName:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",dlOpName:"tile",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"reps",type:"number[]"}]},{tfOpName:"Split",dlOpName:"split",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"axis",type:"number",defaultValue:0},{tfInputIndex:1,dlParamName:"x",type:"tensor"},{tfParamName:"num_split",dlParamName:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",dlOpName:"split",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"numOrSizeSplits",type:"number[]"},{tfInputIndex:2,dlParamName:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",dlOpName:"scatterNd",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"indices",type:"tensor"},{tfInputIndex:1,dlParamName:"values",type:"tensor"},{tfInputIndex:2,dlParamName:"shape",type:"number[]"}]},{tfOpName:"GatherNd",dlOpName:"gatherNd",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",dlOpName:"sparseToDense",category:"slice_join",params:[{tfInputIndex:0,dlParamName:"sparseIndices",type:"tensor"},{tfInputIndex:1,dlParamName:"outputShape",type:"number[]"},{tfInputIndex:2,dlParamName:"sparseValues",type:"tensor"},{tfInputIndex:3,dlParamName:"defaultValue",type:"tensor"},{tfParamName:"validate_indices",dlParamName:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sliceJoin=Object.freeze({json:json$13}),json$14=[{tfOpName:"FFT",dlOpName:"fft",category:"spectral",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"IFFT",dlOpName:"ifft",category:"spectral",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"}]},{tfOpName:"RFFT",dlOpName:"rfft",category:"spectral",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"fft_length",type:"number",unsupported:!0}]},{tfOpName:"IRFFT",dlOpName:"irfft",category:"spectral",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"fft_length",type:"number",unsupported:!0}]}],spectral=Object.freeze({json:json$14}),json$15=[{tfOpName:"Cast",dlOpName:"cast",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"SrcT",dlParamName:"sdtype",type:"dtype",notSupported:!0},{tfParamName:"DstT",dlParamName:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",dlOpName:"expandDims",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,tfParamNameDeprecated:"dim",dlParamName:"axis",type:"number"}]},{tfOpName:"Pad",dlOpName:"pad",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"padding",type:"number[]"},{tfParamName:"constant_value",dlParamName:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",dlOpName:"pad",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"padding",type:"number[]"},{tfInputIndex:2,dlParamName:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",dlOpName:"reshape",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"shape",type:"number[]"}]},{tfOpName:"Squeeze",dlOpName:"squeeze",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"axis",tfParamNameDeprecated:"squeeze_dims",dlParamName:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",dlOpName:"spaceToBatchND",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"blockShape",type:"number[]"},{tfInputIndex:2,dlParamName:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",dlOpName:"batchToSpaceND",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfInputIndex:1,dlParamName:"blockShape",type:"number[]"},{tfInputIndex:2,dlParamName:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",dlOpName:"depthToSpace",category:"transformation",params:[{tfInputIndex:0,dlParamName:"x",type:"tensor"},{tfParamName:"block_size",dlParamName:"blockSize",type:"number"},{tfParamName:"data_format",dlParamName:"dataFormat",type:"string"}]}],transformation=Object.freeze({json:json$15}),CONTROL_FLOW_OPS=["Switch","Merge","Enter","Exit","NextIteration"],DYNAMIC_SHAPE_OPS=["NonMaxSuppressionV2","NonMaxSuppressionV3","Where"],OperationMapper=function(){function t(){var t=[arithmetic,basicMath,control,convolution,creation,dynamic,evaluation,logical,image$1,graph,matrices,normalization,reduction,sliceJoin,spectral,transformation],e=[].concat.apply([],t.map(function(t){return t.json}));this.opMappers=e.reduce(function(t,e){return t[e.tfOpName]=e,t},{})}return Object.defineProperty(t,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),t.prototype.isControlFlow=function(t){return CONTROL_FLOW_OPS.some(function(e){return e===t.op})},t.prototype.isDynamicShape=function(t){return DYNAMIC_SHAPE_OPS.some(function(e){return e===t.op})},t.prototype.transformGraph=function(t){var e=this,n=!1,r=!1,i=[],a=[],o=t.node.reduce(function(t,o){return t[o.name]=e.mapNode(o),e.isControlFlow(o)&&(n=!0),e.isDynamicShape(o)&&(r=!0),"Placeholder"===o.op&&i.push(t[o.name]),"Const"===o.op&&a.push(t[o.name]),t},{}),s=[],u=[];return Object.keys(o).forEach(function(t){var e=o[t];e.inputNames.forEach(function(t){var n=getNodeNameAndIndex(t)[0];e.inputs.push(o[n]),o[n].children.push(e)}),0===e.inputs.length&&s.push(e)}),Object.keys(o).forEach(function(t){var e=o[t];0===e.children.length&&u.push(e)}),{nodes:o,inputs:s,outputs:u,weights:a,placeholders:i,withControlFlow:n,withDynamicShape:r}},t.prototype.mapNode=function(t){var e=this,n=this.opMappers[t.op];if(void 0===n)throw new Error("Tensorflow Op is not supported: "+t.op);var r={name:t.name,op:n.dlOpName,category:n.category,inputNames:(t.input||[]).map(function(t){return t.startsWith("^")?t.substr(1):t}),inputs:[],children:[],params:{}};return n.params&&(r.params=n.params.reduce(function(n,r){var i=r.tfInputIndex,a=r.tfInputParamLength,o=r.type,s=void 0;if(void 0===i)switch(r.type){case"string":void 0===(s=e.getStringParam(t.attr,r.tfParamName,r.defaultValue))&&r.tfParamNameDeprecated&&(s=e.getStringParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"number":void 0===(s=e.getNumberParam(t.attr,r.tfParamName,r.defaultValue||0))&&r.tfParamNameDeprecated&&(s=e.getNumberParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"number[]":void 0===(s=e.getNumericArrayParam(t.attr,r.tfParamName,r.defaultValue))&&r.tfParamNameDeprecated&&(s=e.getNumericArrayParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"bool":void 0===(s=e.getBoolParam(t.attr,r.tfParamName,r.defaultValue))&&r.tfParamNameDeprecated&&(s=e.getBoolParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"shape":void 0===(s=e.getTensorShapeParam(t.attr,r.tfParamName,r.defaultValue))&&r.tfParamNameDeprecated&&(s=e.getTensorShapeParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"dtype":void 0===(s=e.getDtypeParam(t.attr,r.tfParamName,r.defaultValue))&&r.tfParamNameDeprecated&&(s=e.getDtypeParam(t.attr,r.tfParamNameDeprecated,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+r.type+" for op: "+t.op)}return n[r.dlParamName]={value:s,inputIndex:i,type:o,inputParamLength:a},n},{})),r},t.prototype.getStringParam=function(t,e,n,r){void 0===r&&(r=!1);var i=t[e];if(void 0!==i){var a=String.fromCharCode.apply(null,i.s);return r?a:a.toLowerCase()}return n},t.prototype.getBoolParam=function(t,e,n){var r=t[e];return r?r.b:n},t.prototype.getNumberParam=function(t,e,n){var r=t[e],i=r?r[r.value]:n;return"number"==typeof i?i:i.toInt()},t.prototype.getDtypeParam=function(t,e,n){var r=t[e];if(r&&r.type)switch(r.type){case compiled_api_1.DataType.DT_FLOAT:return"float32";case compiled_api_1.DataType.DT_INT32:return"int32";case compiled_api_1.DataType.DT_BOOL:return"bool";default:return n}return n},t.prototype.getTensorShapeParam=function(t,e,n){var r=t[e];return r&&r.shape?r.shape.dim.map(function(t){return"number"==typeof t.size?t.size:t.size.toInt()}):n},t.prototype.getNumericArrayParam=function(t,e,n){var r=t[e];return r?(r.list.f&&r.list.f.length?r.list.f:r.list.i).map(function(t){return"number"==typeof t?t:t.toInt()}):n},t}(),executeOp=function(t,e,n){switch(t.op){case"add":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.u)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"addN":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.v)(getParamValue("tensors",t,e,n))];case"mod":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.vc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"mul":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.zc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"div":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.lb)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"floorDiv":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Bb)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"sub":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Td)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"minimum":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"maximum":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.oc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"pow":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"squaredDifference":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Nd)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$1=function(t,e,n){switch(t.op){case"abs":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.r)(getParamValue("x",t,e,n))];case"acos":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.s)(getParamValue("x",t,e,n))];case"acosh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.t)(getParamValue("x",t,e,n))];case"asin":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.B)(getParamValue("x",t,e,n))];case"asinh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.C)(getParamValue("x",t,e,n))];case"atan":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.D)(getParamValue("x",t,e,n))];case"atan2":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.E)(getParamValue("x",t,e,n),getParamValue("y",t,e,n))];case"atanh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.F)(getParamValue("x",t,e,n))];case"ceil":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.P)(getParamValue("x",t,e,n))];case"cos":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.db)(getParamValue("x",t,e,n))];case"cosh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.eb)(getParamValue("x",t,e,n))];case"elu":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ob)(getParamValue("x",t,e,n))];case"erf":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tb)(getParamValue("x",t,e,n))];case"exp":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ub)(getParamValue("x",t,e,n))];case"expm1":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.wb)(getParamValue("x",t,e,n))];case"floor":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ab)(getParamValue("x",t,e,n))];case"log":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ac)(getParamValue("x",t,e,n))];case"log1p":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.bc)(getParamValue("x",t,e,n))];case"neg":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dc)(getParamValue("x",t,e,n))];case"reciprocal":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ed)(getParamValue("x",t,e,n))];case"relu":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.fd)(getParamValue("x",t,e,n))];case"round":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.nd)(getParamValue("x",t,e,n))];case"selu":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.rd)(getParamValue("x",t,e,n))];case"sigmoid":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.wd)(getParamValue("x",t,e,n))];case"sin":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.yd)(getParamValue("x",t,e,n))];case"sign":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.xd)(getParamValue("x",t,e,n))];case"sinh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.zd)(getParamValue("x",t,e,n))];case"softplus":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Gd)(getParamValue("x",t,e,n))];case"sqrt":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ld)(getParamValue("x",t,e,n))];case"square":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Md)(getParamValue("x",t,e,n))];case"tanh":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Xd)(getParamValue("x",t,e,n))];case"tan":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Wd)(getParamValue("x",t,e,n))];case"clipByValue":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Q)(getParamValue("x",t,e,n),getParamValue("clipValueMin",t,e,n),getParamValue("clipValueMax",t,e,n))];case"rsqrt":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.lb)(Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(1,"float32"),Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ld)(getTensor(t.inputNames[0],e,n)))];case"prod":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Xc)(getParamValue("x",t,e,n),getParamValue("axes",t,e,n))];case"leakyRelu":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sb)(getParamValue("x",t,e,n),getParamValue("alpha",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},TensorArray=function(){function t(e,n,r,i,a,o,s){this.name=e,this.dtype=n,this.maxSize=r,this.elementShape=i,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.id=t.nextId++}return Object.defineProperty(t.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),t.prototype.clearAndClose=function(){this.tensors.forEach(function(t){return t.tensor.dispose()}),this.tensors=[],this.closed_=!0},t.prototype.size=function(){return this.tensors.length},t.prototype.read=function(t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(t<0||t>=this.tensors.length)throw new Error("Tried to read from index "+t+", but array size is: "+this.tensors.length);var e=this.tensors[t];if(e.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+t+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor},t.prototype.readMany=function(t){var e=this;return t.map(function(t){return e.read(t)})},t.prototype.write=function(t,e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index "+t+", but array is not resizeable and size is: "+this.maxSize);var n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+t+",\n          because the value dtype is "+e.dtype+", but TensorArray dtype is "+this.dtype+".");if(0===this.size()&&0===this.elementShape.length&&(this.elementShape=e.shape),this.assertShapesMatch(this.elementShape,e.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+t+"."),n&&n.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+t+", because it has already been read.");if(n&&n.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+t+", because it has already been written.");n.tensor=e,n.written=!0,this.tensors[t]=n},t.prototype.writeMany=function(t,e){var n=this;if(t.length!==e.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+t.length+" is not the same as tensors size: "+e.length+".");t.forEach(function(t,r){return n.write(t,e[r])})},t.prototype.gather=function(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+e);if(!t){t=[];for(var n=0;n<this.size();n++)t.push(n)}if(0===t.length)return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Yd)([],[0].concat(this.elementShape));var r=this.readMany(t);return this.assertShapesMatch(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Qd)(r,0)},t.prototype.concat=function(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+t);if(0===this.size())return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Yd)([],[0].concat(this.elementShape));for(var e=[],n=0;n<this.size();n++)e.push(n);var r=this.readMany(e);return this.assertShapesMatch(this.elementShape,r[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+r[0].shape+")"),Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.T)(r,0)},t.prototype.scatter=function(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+e.dtype);if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+t.length+" vs. "+e.shape[0]);var n=Math.max.apply(Math,t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size ("+n+"  vs. "+this.maxSize+")");this.writeMany(t,Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pe)(e,0))},t.prototype.split=function(t,e){var n=this;if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+e.dtype);var r=0,i=t.map(function(t){return r+=t});if(r!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        "+r+", and tensor's shape is: "+e.shape);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+t.length+"), and the TensorArray is not marked as dynamically resizeable");var a=0===r?0:e.size/r,o=[];Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ge)(function(){e=e.reshape([1,r,a]);for(var s=0;s<t.length;++s){var u=[0,0===s?0:i[s-1],0],c=[1,t[s],a];o[s]=Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ad)(e,u,c).reshape(n.elementShape)}return o});for(var s=[],u=0;u<t.length;u++)s[u]=u;this.writeMany(s,o)},t.prototype.assertShapesMatch=function(t,e,n){void 0===n&&(n=""),_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qe.assert(this.arraysEqual(t,e),n+" Shapes "+t+" and "+e+" must match")},t.prototype.arraysEqual=function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0},t.nextId=0,t}();function executeOp$2(t,e,n){return __awaiter(this,void 0,void 0,function(){var r,i,a,o,s,u,c,l,f,h,p,d,m,g,y,v,b,w,_,x,E,S,N,I,O,k,A,C,P,T,R,D,M,j,B;return __generator(this,function(L){switch(L.label){case 0:switch(t.op){case"loopCond":return[3,1];case"switch":return[3,2];case"merge":return[3,4];case"enter":return[3,5];case"exit":return[3,6];case"nextIteration":return[3,7];case"tensorArray":return[3,8];case"tensorArrayWrite":return[3,9];case"tensorArrayRead":return[3,10];case"tensorArrayGather":return[3,11];case"tensorArrayScatter":return[3,12];case"tensorArrayConcat":return[3,13];case"tensorArraySplit":return[3,14];case"tensorArraySize":return[3,15];case"tensorArrayClose":return[3,16]}return[3,17];case 1:return[2,[getParamValue("pred",t,e,n).clone()]];case 2:return r=getParamValue("pred",t,e,n),i=getParamValue("data",t,e,n),[4,r.data()];case 3:return[2,L.sent()[0]?[void 0,i.clone()]:[i.clone(),void 0]];case 4:return[2,(a=t.inputNames.find(function(t){return void 0!==getTensor(t,e,n)}))?[getTensor(a,e,n).clone()]:void 0];case 5:return o=getParamValue("frameName",t,e,n),s=getParamValue("tensor",t,e,n),n.enterFrame(o),[2,[s.clone()]];case 6:return u=getParamValue("tensor",t,e,n),n.exitFrame(),[2,[u.clone()]];case 7:return c=getParamValue("tensor",t,e,n),n.nextIteration(),[2,[c.clone()]];case 8:return l=getParamValue("size",t,e,n),f=getParamValue("dtype",t,e,n),h=getParamValue("elementShape",t,e,n),p=getParamValue("dynamicSize",t,e,n),d=getParamValue("clearAfterRead",t,e,n),m=getParamValue("identicalElementShapes",t,e,n),g=getParamValue("name",t,e,n),y=new TensorArray(g,f,l,h,m,p,d),n.addTensorArray(y),[2,[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(y.id),Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(1)]];case 9:return v=getParamValue("tensorArrayId",t,e,n),b=getParamValue("index",t,e,n),w=getParamValue("tensor",t,e,n),n.getTensorArray(v).write(b,w),[2,[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(1)]];case 10:return _=getParamValue("tensorArrayId",t,e,n),x=getParamValue("index",t,e,n),[2,[n.getTensorArray(_).read(x)]];case 11:return E=getParamValue("tensorArrayId",t,e,n),S=getParamValue("indices",t,e,n),N=getParamValue("dtype",t,e,n),[2,[n.getTensorArray(E).gather(S,N)]];case 12:return I=getParamValue("tensorArrayId",t,e,n),O=getParamValue("indices",t,e,n),k=getParamValue("tensor",t,e,n),n.getTensorArray(I).scatter(O,k),[2,[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(1)]];case 13:return A=getParamValue("tensorArrayId",t,e,n),C=n.getTensorArray(A),P=getParamValue("dtype",t,e,n),[2,[C.concat(P)]];case 14:return T=getParamValue("tensorArrayId",t,e,n),R=getParamValue("tensor",t,e,n),D=getParamValue("lengths",t,e,n),n.getTensorArray(T).split(D,R),[2,[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(1)]];case 15:return M=getParamValue("tensorArrayId",t,e,n),j=n.getTensorArray(M),[2,[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(j.size(),"int32")]];case 16:return B=getParamValue("tensorArrayId",t,e,n),n.getTensorArray(B).clearAndClose(),[2,[]];case 17:throw TypeError("Node type "+t.op+" is not implemented")}})})}var executeOp$3=function(t,e,n){switch(t.op){case"conv1d":var r=getParamValue("stride",t,e,n),i=getParamValue("pad",t,e,n),a=getParamValue("dataFormat",t,e,n).toUpperCase(),o=getParamValue("dilation",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Y)(getParamValue("x",t,e,n),getParamValue("filter",t,e,n),r,i,a,o)];case"conv2d":r=getParamValue("strides",t,e,n),i=getParamValue("pad",t,e,n),a=getParamValue("dataFormat",t,e,n).toUpperCase();var s=getParamValue("dilations",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Z)(getParamValue("x",t,e,n),getParamValue("filter",t,e,n),[r[1],r[2]],i,a,[s[0],s[1]])];case"conv2dTranspose":var u=getParamValue("outputShape",t,e,n);return r=getParamValue("strides",t,e,n),i=getParamValue("pad",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.bb)(getParamValue("x",t,e,n),getParamValue("filter",t,e,n),u,[r[1],r[2]],i)];case"depthwiseConv2d":return r=getParamValue("strides",t,e,n),i=getParamValue("pad",t,e,n),s=getParamValue("dilations",t,e,n),a=getParamValue("dataFormat",t,e,n).toUpperCase(),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ib)(getParamValue("input",t,e,n),getParamValue("filter",t,e,n),[r[1],r[2]],i,a,[s[0],s[1]])];case"avgPool":r=getParamValue("strides",t,e,n),i=getParamValue("pad",t,e,n);var c=getParamValue("kernelSize",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.G)(getParamValue("x",t,e,n),[c[1],c[2]],[r[1],r[2]],i)];case"maxPool":return r=getParamValue("strides",t,e,n),i=getParamValue("pad",t,e,n),c=getParamValue("kernelSize",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.nc)(getParamValue("x",t,e,n),[c[1],c[2]],[r[1],r[2]],i)];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$4=function(t,e,n){switch(t.op){case"fill":var r=getParamValue("shape",t,e,n),i=getParamValue("dtype",t,e,n),a=getParamValue("value",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.zb)(r,a,i)];case"linspace":var o=getParamValue("start",t,e,n),s=getParamValue("stop",t,e,n),u=getParamValue("num",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Yb)(o,s,u)];case"oneHot":var c=getParamValue("indices",t,e,n),l=getParamValue("depth",t,e,n),f=getParamValue("onValue",t,e,n),h=getParamValue("offValue",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ic)(c,l,f,h)];case"ones":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Jc)(getParamValue("shape",t,e,n),getParamValue("dtype",t,e,n))];case"onesLike":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Kc)(getParamValue("x",t,e,n))];case"randomUniform":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.bd)(getParamValue("shape",t,e,n),getParamValue("minval",t,e,n),getParamValue("maxval",t,e,n),getParamValue("dtype",t,e,n))];case"range":o=getParamValue("start",t,e,n);var p=getParamValue("stop",t,e,n),d=getParamValue("step",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cd)(o,p,d,getParamValue("dtype",t,e,n))];case"truncatedNormal":r=getParamValue("shape",t,e,n);var m=getParamValue("mean",t,e,n),g=getParamValue("stdDev",t,e,n),y=getParamValue("seed",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ne)(r,m,g,getParamValue("dtype",t,e,n),y)];case"zeros":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ze)(getParamValue("shape",t,e,n),getParamValue("dtype",t,e,n))];case"zerosLike":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ae)(getParamValue("x",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}};function executeOp$5(t,e,n){return __awaiter(this,void 0,void 0,function(){var r,i,a,o,s;return __generator(this,function(u){switch(u.label){case 0:switch(t.op){case"nonMaxSuppression":return[3,1];case"whereAsync":return[3,3];case"setdiff1dAsync":return[3,5]}return[3,7];case 1:return r=getParamValue("boxes",t,e,n),i=getParamValue("scores",t,e,n),a=getParamValue("maxOutputSize",t,e,n),o=getParamValue("iouThreshold",t,e,n),s=getParamValue("scoreThreshold",t,e,n),[4,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ob.nonMaxSuppressionAsync(r,i,a,o,s)];case 2:return[2,[u.sent()]];case 3:return[4,Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ye)(getParamValue("condition",t,e,n))];case 4:return[2,[u.sent()]];case 5:return[4,Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.vd)(getParamValue("x",t,e,n),getParamValue("y",t,e,n))];case 6:return[2,u.sent()];case 7:throw TypeError("Node type "+t.op+" is not implemented")}})})}var executeOp$6=function(t,e,n){switch(t.op){case"topK":var r=getParamValue("x",t,e,n),i=getParamValue("k",t,e,n),a=getParamValue("sorted",t,e,n),o=Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ke)(r,i,a);return[o.values,o.indices];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$7=function(t,e,n){switch(t.op){case"const":return e[t.name];case"placeholder":var r=getParamValue("default",t,e,n);return[getTensor(t.name,e,n)||r];case"identity":case"stopGradient":case"fakeQuantWithMinMaxVars":case"snapshot":return[getParamValue("x",t,e,n).clone()];case"shape":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Zd)(getParamValue("x",t,e,n).shape,"int32")];case"shapeN":return getParamValue("x",t,e,n).map(function(t){return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Zd)(t.shape)});case"size":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(getParamValue("x",t,e,n).size,"int32")];case"rank":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pd)(getParamValue("x",t,e,n).rank,"int32")];case"noop":return[];case"print":var i=getParamValue("x",t,e,n),a=getParamValue("data",t,e,n),o=getParamValue("message",t,e,n),s=getParamValue("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(var u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[0].dataSync()).slice(0,s));return[i];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$8=function(t,e,n){switch(t.op){case"resizeBilinear":var r=getParamValue("images",t,e,n),i=getParamValue("size",t,e,n),a=getParamValue("alignCorners",t,e,n);return[_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ob.resizeBilinear(r,[i[0],i[1]],a)];case"resizeNearestNeighbor":return r=getParamValue("images",t,e,n),i=getParamValue("size",t,e,n),a=getParamValue("alignCorners",t,e,n),[_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ob.resizeNearestNeighbor(r,[i[0],i[1]],a)];case"cropAndResize":var o=getParamValue("image",t,e,n),s=getParamValue("boxes",t,e,n),u=getParamValue("boxInd",t,e,n),c=getParamValue("cropSize",t,e,n),l=getParamValue("method",t,e,n),f=getParamValue("extrapolationValue",t,e,n);return[_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ob.cropAndResize(o,s,u,c,l,f)];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$9=function(t,e,n){switch(t.op){case"equal":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.rb)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"notEqual":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Gc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"greater":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ib)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"greaterEqual":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Jb)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"less":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tb)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"lessEqual":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ub)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"logicalAnd":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.fc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"logicalNot":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.gc)(getParamValue("a",t,e,n))];case"logicalOr":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.hc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n))];case"where":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.xe)(getParamValue("condition",t,e,n),getParamValue("a",t,e,n),getParamValue("b",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$10=function(t,e,n){switch(t.op){case"matMul":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kc)(getParamValue("a",t,e,n),getParamValue("b",t,e,n),getParamValue("transposeA",t,e,n),getParamValue("transposeB",t,e,n))];case"transpose":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.me)(getParamValue("x",t,e,n),getParamValue("perm",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$11=function(t,e,n){switch(t.op){case"batchNormalization":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.I)(getParamValue("x",t,e,n),getParamValue("mean",t,e,n),getParamValue("variance",t,e,n),getParamValue("epsilon",t,e,n),getParamValue("scale",t,e,n),getParamValue("offset",t,e,n))];case"localResponseNormalization":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Zb)(getParamValue("x",t,e,n),getParamValue("radius",t,e,n),getParamValue("bias",t,e,n),getParamValue("alpha",t,e,n),getParamValue("beta",t,e,n))];case"softmax":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Fd)(getParamValue("x",t,e,n))];case"logSoftmax":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dc)(getParamValue("x",t,e,n))];case"sparseToDense":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Id)(getParamValue("sparseIndices",t,e,n),getParamValue("outputShape",t,e,n),getParamValue("sparseValues",t,e,n),getParamValue("defaultValue",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$12=function(t,e,n){switch(t.op){case"max":var r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mc)(getParamValue("x",t,e,n),r,i)];case"mean":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qc)(getParamValue("x",t,e,n),r,i)];case"min":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sc)(getParamValue("x",t,e,n),r,i)];case"sum":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Vd)(getParamValue("x",t,e,n),r,i)];case"all":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.x)(getParamValue("x",t,e,n),r,i)];case"any":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.y)(getParamValue("x",t,e,n),r,i)];case"argMax":return r=getParamValue("axis",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.z)(getParamValue("x",t,e,n),r)];case"argMin":return r=getParamValue("axis",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.A)(getParamValue("x",t,e,n),r)];case"prod":return r=getParamValue("axis",t,e,n),i=getParamValue("keepDims",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Xc)(getParamValue("x",t,e,n),r,i)];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$13=function(t,e,n){switch(t.op){case"concat":var r=getParamValue("axis",t,e,n),i=getParamValue("tensors",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.T)(i,r)];case"gather":r=getParamValue("axis",t,e,n);var a=getParamValue("x",t,e,n),o=getParamValue("indices",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Db)(a,o,r)];case"reverse":return r=getParamValue("axis",t,e,n),a=getParamValue("x",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.hd)(a,r)];case"slice":var s=getParamValue("begin",t,e,n),u=getParamValue("size",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ad)(getParamValue("x",t,e,n),s,u)];case"stridedSlice":s=getParamValue("begin",t,e,n);var c=getParamValue("end",t,e,n),l=getParamValue("strides",t,e,n),f=getParamValue("beginMask",t,e,n),h=getParamValue("endMask",t,e,n),p=getParamValue("ellipsisMask",t,e,n),d=getParamValue("newAxisMask",t,e,n),m=getParamValue("shrinkAxisMask",t,e,n),g=getParamValue("x",t,e,n);if(1===s.length&&g.shape.length>1)for(var y=1;y<g.shape.length;y++)s.push(0),c.push(g.shape[y]),l.push(l[0]);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sd)(g,s,c,l,f,h,p,d,m)];case"stack":return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ge)(function(){var r=getParamValue("axis",t,e,n),i=getParamValue("tensors",t,e,n),a=i[0].shape,o=i[0].squeeze().shape,s=i.map(function(t){var e=_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qe.arraysEqual(t.shape,a);if(!e&&!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qe.arraysEqual(t.squeeze().shape,o))throw new Error("the input tensors shape does not match");return e?t:t.reshape(a)});return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Qd)(s,r)]});case"unstack":return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ge)(function(){var r=getParamValue("axis",t,e,n),i=getParamValue("tensor",t,e,n);return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pe)(i,r)});case"tile":var v=getParamValue("reps",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.he)(getParamValue("x",t,e,n),v)];case"split":r=getParamValue("axis",t,e,n);var b=getParamValue("numOrSizeSplits",t,e,n);return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Kd)(getParamValue("x",t,e,n),b,r);case"scatterNd":o=getParamValue("indices",t,e,n);var w=getParamValue("values",t,e,n),_=getParamValue("shape",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qd)(o,w,_)];case"gatherNd":var x=getParamValue("x",t,e,n);return o=getParamValue("indices",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Eb)(x,o)];case"sparseToDense":o=getParamValue("sparseIndices",t,e,n),_=getParamValue("outputShape",t,e,n);var E=getParamValue("sparseValues",t,e,n),S=getParamValue("defaultValue",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Id)(o,E,_,S)];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$14=function(t,e,n){switch(t.op){case"fft":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.yb)(getParamValue("x",t,e,n))];case"ifft":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mb)(getParamValue("x",t,e,n))];case"rfft":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.md)(getParamValue("x",t,e,n))];case"irfft":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Qb)(getParamValue("x",t,e,n))];default:throw TypeError("Node type "+t.op+" is not implemented")}},executeOp$15=function(t,e,n){switch(t.op){case"cast":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.O)(getParamValue("x",t,e,n),getParamValue("dtype",t,e,n))];case"expandDims":var r=getParamValue("axis",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.vb)(getParamValue("x",t,e,n),r)];case"squeeze":return r=getParamValue("axis",t,e,n),[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pd)(getParamValue("x",t,e,n),r)];case"reshape":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.gd)(getParamValue("x",t,e,n),getParamValue("shape",t,e,n))];case"pad":return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Nc)(getParamValue("x",t,e,n),split$1(getParamValue("padding",t,e,n),2),getParamValue("constantValue",t,e,n))];case"spaceToBatchND":var i=getParamValue("blockShape",t,e,n),a=split$1(getParamValue("paddings",t,e,n),2);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Hd)(getParamValue("x",t,e,n),i,a)];case"batchToSpaceND":i=getParamValue("blockShape",t,e,n);var o=split$1(getParamValue("crops",t,e,n),2);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.M)(getParamValue("x",t,e,n),i,o)];case"depthToSpace":var s=getParamValue("blockSize",t,e,n),u=getParamValue("dataFormat",t,e,n);return[Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.hb)(getParamValue("x",t,e,n),s,u)];default:throw TypeError("Node type "+t.op+" is not implemented")}};function executeOp$16(t,e,n){switch(t.category){case"arithmetic":return executeOp(t,e,n);case"basic_math":return executeOp$1(t,e,n);case"control":return executeOp$2(t,e,n);case"convolution":return executeOp$3(t,e,n);case"creation":return executeOp$4(t,e,n);case"dynamic":return executeOp$5(t,e,n);case"evaluation":return executeOp$6(t,e,n);case"image":return executeOp$8(t,e,n);case"graph":return executeOp$7(t,e,n);case"logical":return executeOp$9(t,e,n);case"matrices":return executeOp$10(t,e,n);case"normalization":return executeOp$11(t,e,n);case"reduction":return executeOp$12(t,e,n);case"slice_join":return executeOp$13(t,e,n);case"spectral":return executeOp$14(t,e,n);case"transformation":return executeOp$15(t,e,n);default:throw TypeError("Node type "+t.op+" is not implemented")}}var ExecutionContext=function(){function t(t,e){this.weightMap=t,this.tensorArrayMap=e,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return t.prototype.newFrame=function(t,e){return{id:t,frameName:e,iterationId:0}},Object.defineProperty(t.prototype,"currentContext",{get:function(){return this.contexts},set:function(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),t.prototype.generateCurrentContextIds=function(){for(var t=[],e=0;e<this.contexts.length-1;e++){var n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t},t.prototype.contextIdforContexts=function(t){return t?t.map(function(t){return 0===t.id&&0===t.iterationId?"":t.frameName+"-"+t.iterationId}).join("/"):""},t.prototype.enterFrame=function(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},t.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},t.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},t.prototype.getWeight=function(t){return this.weightMap[t]},t.prototype.addTensorArray=function(t){this.tensorArrayMap[t.id]=t},t.prototype.getTensorArray=function(t){return this.tensorArrayMap[t]},t}(),GraphExecutor=function(){function t(t){this.graph=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this.placeholders=t.placeholders,this._outputs=t.outputs,this.compile()}return Object.defineProperty(t.prototype,"weightMap",{get:function(){return this._weightMap},set:function(t){var e=Object.keys(t).map(function(e){return t[e].map(function(t){return t.id})});this.weightIds=[].concat.apply([],e),this._weightMap=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"inputs",{get:function(){return this.placeholders.map(function(t){return{name:t.name,shape:t.params.shape?t.params.shape.value:void 0,dtype:t.params.dtype?t.params.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outputs",{get:function(){return this._outputs.map(function(t){return{name:t.name,shape:t.params.shape?t.params.shape.value:void 0,dtype:t.params.dtype?t.params.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"inputNodes",{get:function(){return this.placeholders.map(function(t){return t.name})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outputNodes",{get:function(){return this.outputs.map(function(t){return t.name})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isControlFlowModel",{get:function(){return this.graph.withControlFlow},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isDynamicShapeModel",{get:function(){return this.graph.withDynamicShape},enumerable:!0,configurable:!0}),t.prototype.compile=function(t){if(!this.graph.withControlFlow&&!this.graph.withDynamicShape){var e=[],n=t||this.graph.placeholders,r=n.map(function(t){return t.name}).sort().join(this.SEPERATOR);if(!this.compiledMap.get(r)){for(var i=n.concat(this.graph.weights),a={};i.length>0;){var o=i.pop();a[o.name]=!0,e.push(o),o.children.forEach(function(t){!a[t.name]&&t.inputNames.every(function(t){var e=getNodeNameAndIndex(t)[0];return a[e]})&&i.push(t)})}this.compiledMap.set(r,e)}}},t.prototype.execute=function(t,e,n){var r=this;void 0===e&&(e=!0);var i=Object.keys(t).sort();this.checkInput(t,e),this.checkInputShapeAndType(t,e),this.compile(i.map(function(t){return r.graph.nodes[t]}));var a=this.calculateOutputs(n);this.checkOutput(this.compiledMap.get(i.join(this.SEPERATOR)),a);var o={};return Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ge)(function(){for(var e=new ExecutionContext(r._weightMap,o),n=__assign({},r.weightMap,t),s=r.getFrozenTensorIds(n),u={},c=r.compiledMap.get(i.join(r.SEPERATOR)),l=0;l<c.length;l++){var f=c[l];if(n[f.name]||(n[f.name]=executeOp$16(f,n,e),r.checkTensorForDisposal(f.name,f,n,e,s,a,u)),a.every(function(t){return!!n[t]}))break}return r.findOutputs(n,e,a)})},t.prototype.getFrozenTensorIds=function(t){var e=[].concat.apply([],Object.keys(t).map(function(e){return t[e]}).map(function(t){return t.map(function(t){return t.id})}));return new Set(e)},t.prototype.checkTensorForDisposal=function(t,e,n,r,i,a,o){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach(function(t){null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(function(t){if("control"!==t.category){var e=getTensorsForCurrentContenxt(t.name,n,r);null!=e&&e.forEach(function(t){if(t&&!i.has(t.id)){var e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}})}}))},t.prototype.executeAsync=function(t,e){return __awaiter(this,void 0,void 0,function(){var n,r,i,a,o,s,u,c,l=this;return __generator(this,function(f){switch(f.label){case 0:return this.checkInput(t,!1),this.checkInputShapeAndType(t,!1),n={},r=new ExecutionContext(this._weightMap,n),i=this.calculateOutputs(e),[4,this.executeWithControlFlow(t,r,i)];case 1:return a=f.sent(),o=this.findOutputs(a,r,e),s=Object.keys(o).map(function(t){return o[t].id}),u=Object.keys(t).map(function(e){return t[e].map(function(t){return t.id})}),c=[].concat.apply([],u),Object.keys(a).forEach(function(t){a[t].forEach(function(t){t&&-1===s.indexOf(t.id)&&-1===c.indexOf(t.id)&&-1===l.weightIds.indexOf(t.id)&&t.dispose()})}),[2,o]}})})},t.prototype.executeWithControlFlow=function(t,e,n){return __awaiter(this,void 0,void 0,function(){var r,i,a,o,s,u,c,l,f=this;return __generator(this,function(h){switch(h.label){case 0:r=Object.keys(t),i=r.map(function(t){return f.graph.nodes[t]}),a=i.concat(this.graph.weights).map(function(t){return{node:t,contexts:e.currentContext}}),o=__assign({},this.weightMap,t),s={},u=this.getFrozenTensorIds(o),c={},h.label=1;case 1:return a.length>0?(l=this.processStack(i,a,e,o,c,u,n,s),[4,Promise.all(l)]):[3,3];case 2:return h.sent(),[3,1];case 3:return[2,o]}})})},t.prototype.processStack=function(t,e,n,r,i,a,o,s){for(var u=this,c=[],l=function(){var l=e.pop();n.currentContext=l.contexts;var h="";if("enter"===l.node.op&&getParamValue("isConstant",l.node,r,n)&&(h=getNodeNameAndIndex(l.node.name,n)[0]),-1===t.indexOf(l.node)){var p=executeOp$16(l.node,r,n);h||(h=getNodeNameAndIndex(l.node.name,n)[0]);var d=n.currentContext;p instanceof Promise?c.push(p.then(function(t){return r[h]=t,n.currentContext=d,u.checkTensorForDisposal(h,l.node,r,n,a,o,s),u.processChildNodes(l.node,e,n,r,i),t})):(r[h]=p,f.checkTensorForDisposal(h,l.node,r,n,a,o,s),f.processChildNodes(l.node,e,n,r,i))}else f.processChildNodes(l.node,e,n,r,i)},f=this;e.length>0;)l();return c},t.prototype.processChildNodes=function(t,e,n,r,i){t.children.forEach(function(t){var a=getNodeNameAndIndex(t.name,n)[0];i[a]||("merge"===t.op?t.inputNames.some(function(t){return!!getTensor(t,r,n)})&&(i[a]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(function(t){return!!getTensor(t,r,n)})&&(i[a]=!0,e.push({contexts:n.currentContext,node:t})))})},t.prototype.calculateOutputs=function(t){return!t||t instanceof Array||(t=[t]),t||this.graph.outputs.map(function(t){return t.name})},t.prototype.findOutputs=function(t,e,n){return this.calculateOutputs(n).reduce(function(n,r){return n[r]=getTensor(r,t,e),n},{})},t.prototype.dispose=function(){var t=this;Object.keys(this.weightMap).forEach(function(e){return t.weightMap[e].forEach(function(t){return t.dispose()})})},t.prototype.checkInputShapeAndType=function(t,e){void 0===e&&(e=!0),this.placeholders.forEach(function(n){var r=t[n.name];if(e||r){var i=r[0];if(n.params.shape&&n.params.shape.value){var a=n.params.shape.value,o=a.length===i.shape.length&&i.shape.every(function(t,e){return-1===a[e]||a[e]===t});_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qe.assert(o,"The shape of dict['"+n.name+"'] provided in model.execute(dict) must be ["+a+"], but was ["+i.shape+"]")}n.params.dtype&&n.params.dtype.value&&_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.qe.assert(i.dtype===n.params.dtype.value,"The dtype of dict['"+n.name+"'] provided in model.execute(dict) must be "+n.params.dtype.value+", but was "+i.dtype)}})},t.prototype.checkInput=function(t,e){var n=this;void 0===e&&(e=!0);var r=Object.keys(t),i=[],a=[];this.inputNodes.forEach(function(t){-1===r.indexOf(t)&&i.push(t)}),r.forEach(function(t){-1===n.inputNodes.indexOf(t)&&a.push(t)});var o=a.filter(function(t){return!n.graph.nodes[t]});if(i.length>0&&e)throw new Error("The dict provided in model.execute(dict) has the keys ["+r+"], but is missing the required keys: ["+i+"].");if(a.length>0&&e)throw new Error("The dict provided in model.execute(dict) has unused keys: ["+a+"]. Please provide only the following keys: ["+this.inputNodes+"].");if(o.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+o+"] not part of model graph.")},t.prototype.checkOutput=function(t,e){var n=t.map(function(t){return t.name}),r=[];if(e.forEach(function(t){-1===n.indexOf(t)&&r.push(t)}),r.length>0)throw new Error("The following outputs are not generated by the execution: ["+r+"].")},t}(),TFHUB_SEARCH_PARAM="?tfjs-format=file",DEFAULT_MODEL_NAME="tensorflowjs_model.pb",DEFAULT_MANIFEST_NAME="weights_manifest.json",FrozenModel=function(){function t(t,e,n,r){this.modelUrl=t,this.weightManifestUrl=e,this.requestOption=n,this.weightPrefix=r,this.version="n/a"}return Object.defineProperty(t.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),t.prototype.findIOHandler=function(){var t=[this.modelUrl,this.weightManifestUrl];if(this.requestOption)this.handler=_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pb.browserHTTPRequest(t,this.requestOption,this.weightPrefix);else{var e=_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pb.getLoadHandlers(t);if(0===e.length)e.push(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pb.browserHTTPRequest(t,this.requestOption));else if(e.length>1)throw new Error("Found more than one ("+e.length+") load handlers for URL '"+[t]+"'");this.handler=e[0]}},t.prototype.load=function(){return __awaiter(this,void 0,void 0,function(){var t,e,n;return __generator(this,function(r){switch(r.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return[4,this.handler.load()];case 1:return t=r.sent(),e=compiled_api_1.GraphDef.decode(new Uint8Array(t.modelTopology)),this.version=e.versions.producer+"."+e.versions.minConsumer,n=_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pb.decodeWeights(t.weightData,t.weightSpecs),this.executor=new GraphExecutor(OperationMapper.Instance.transformGraph(e)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),[2,!0]}})})},t.prototype.predict=function(t,e){return this.execute_(t,!0,this.outputNodes)},t.prototype.constructTensorMap=function(t){var e=t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.o?[t]:t;if(e.length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the frozen model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce(function(t,n,r){return t[n]=e[r],t},{})},t.prototype.execute=function(t,e){return this.execute_(t,!1,e)},t.prototype.execute_=function(t,e,n){if(void 0===e&&(e=!0),n=n||this.outputNodes,(t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.o||Array.isArray(t))&&(t=this.constructTensorMap(t)),this.executor.isControlFlowModel||this.executor.isDynamicShapeModel)throw new Error("The model contains control flow or dynamic shape ops, please use executeAsync method");var r=this.executor.execute(this.convertTensorMapToTensorsMap(t),e,n),i=Object.keys(r);return Array.isArray(n)&&n.length>1?n.map(function(t){return r[t]}):r[i[0]]},t.prototype.executeAsync=function(t,e){return __awaiter(this,void 0,void 0,function(){var n,r;return __generator(this,function(i){switch(i.label){case 0:if(!this.executor.isControlFlowModel&&!this.executor.isDynamicShapeModel)throw new Error("The model does not contain control flow or dynamic shape ops, please use execute method for better performance.");return e=e||this.outputNodes,(t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.o||Array.isArray(t))&&(t=this.constructTensorMap(t)),[4,this.executor.executeAsync(this.convertTensorMapToTensorsMap(t),e)];case 1:return n=i.sent(),r=Object.keys(n),[2,Array.isArray(e)&&e.length>1?e.map(function(t){return n[t]}):n[r[0]]]}})})},t.prototype.convertTensorMapToTensorsMap=function(t){return Object.keys(t).reduce(function(e,n){return e[n]=[t[n]],e},{})},t.prototype.dispose=function(){this.executor.dispose()},t}();function loadFrozenModel(t,e,n){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(i){switch(i.label){case 0:return[4,(r=new FrozenModel(t,e,n)).load()];case 1:return i.sent(),[2,r]}})})}function loadTfHubModule(t,e){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(n){return t.endsWith("/")||(t+="/"),[2,loadFrozenModel(""+t+DEFAULT_MODEL_NAME+TFHUB_SEARCH_PARAM,""+t+DEFAULT_MANIFEST_NAME+TFHUB_SEARCH_PARAM,e)]})})}var version="0.7.2"}).call(this,__webpack_require__(11))},function(t,e,n){"use strict";n.r(e),function(t,r,i){n.d(e,"array",function(){return ot}),n.d(e,"Dataset",function(){return it}),n.d(e,"zip",function(){return st}),n.d(e,"CSVDataset",function(){return gt}),n.d(e,"TextLineDataset",function(){return lt}),n.d(e,"csv",function(){return Ot}),n.d(e,"generator",function(){return kt}),n.d(e,"FileDataSource",function(){return At}),n.d(e,"URLDataSource",function(){return It}),n.d(e,"version_data",function(){return Ct});var a=n(0),o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function u(t,e,n,r){return new(n||(n=Promise))(function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?i(t.value):new n(function(e){e(t.value)}).then(o,s)}u((r=r.apply(t,e||[])).next())})}function c(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var l="undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{};function f(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function h(t,e){return t(e={exports:{}},e.exports),e.exports}var p=h(function(t){!function(t,e,n){function r(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function i(t,e){var n=new function(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}(t),i=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+1.1102230246251565e-16*(2097152*a()|0)},a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.alea=i}(0,t)}),d=h(function(t){!function(t,e,n){function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function i(t,e){var n=new function(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xor128=i}(0,t)}),m=h(function(t){!function(t,e,n){function r(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function i(t,e){var n=new function(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xorwow=i}(0,t)}),g=h(function(t){!function(t,e,n){function r(t,e){return e.x=t.x.slice(),e.i=t.i,e}function i(t,e){null==t&&(t=+new Date);var n=new function(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.x&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xorshift7=i}(0,t)}),y=h(function(t){!function(t,e,n){function r(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function i(t,e){null==t&&(t=+new Date);var n=new function(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,a=e.i;return e.w=r=r+1640531527|0,n=i[a+34&127],t=i[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,i,a,o,s=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),i=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,i=0==(n=s[127&a]^=r+o)?i+1:0);for(i>=128&&(s[127&(e&&e.length||0)]=-1),i=127,a=512;a>0;--a)r=s[i+34&127],n=s[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,s[i]=r^n;t.w=o,t.X=s,t.i=i}(e,t)}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&(i.X&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.xor4096=i}(0,t)}),v=h(function(t){!function(t,e,n){function r(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function i(t,e){var n=new function(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}(t),i=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,i&&("object"==typeof i&&r(i,n),a.state=function(){return r(n,{})}),a}e&&e.exports?e.exports=i:this.tychei=i}(0,t)}),b=h(function(t){!function(e,r){var i,a=(0,eval)("this"),o=256,s=6,u="random",c=r.pow(o,s),l=r.pow(2,52),f=2*l,h=o-1;function p(t,n,p){var y=[],v=m(function t(e,n){var r,i=[],a=typeof e;if(n&&"object"==a)for(r in e)try{i.push(t(e[r],n-1))}catch(t){}return i.length?i:"string"==a?e:e+"\0"}((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(o):(t=new Uint8Array(o),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=a.navigator,r=n&&n.plugins;return[+new Date,a,r,a.screen,g(e)]}}():t,3),y),b=new function(t){var e,n=t.length,r=this,i=0,a=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);i<o;)s[i]=i++;for(i=0;i<o;i++)s[i]=s[a=h&a+t[i%n]+(e=s[i])],s[a]=e;(r.g=function(t){for(var e,n=0,i=r.i,a=r.j,s=r.S;t--;)e=s[i=h&i+1],n=n*o+s[h&(s[i]=s[a=h&a+e])+(s[a]=e)];return r.i=i,r.j=a,n})(o)}(y),w=function(){for(var t=b.g(s),e=c,n=0;t<l;)t=(t+n)*o,e*=o,n=b.g(1);for(;t>=f;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,m(g(b.S),e),(n.pass||p||function(t,e,n,i){return i&&(i.S&&d(i,b),t.state=function(){return d(b,{})}),n?(r[u]=t,e):t})(w,v,"global"in n?n.global:this==r,n.state)}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){for(var n,r=t+"",i=0;i<r.length;)e[h&i]=h&(n^=19*e[h&i])+r.charCodeAt(i++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(r["seed"+u]=p,m(r.random(),e),t.exports){t.exports=p;try{i=n(85)}catch(t){}}}([],Math)});b.alea=p,b.xor128=d,b.xorwow=m,b.xorshift7=g,b.xor4096=y,b.tychei=v;var w=b.alea,_=h(function(t,e){function n(t){for(var e=t.length,n=0,r=0;e>0;)r=Math.random()*e|0,n=t[--e],t[e]=t[r],t[r]=n}function i(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function a(t,e){if(void 0===e&&(e=[]),Array.isArray(t)||l(t))for(var n=0;n<t.length;++n)a(t[n],e);else e.push(t);return e}function o(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function s(t){return t%1==0}function u(t,e){var n=e.length;return i((t=null==t?e.map(function(t,e){return e}):[].concat(t)).every(function(t){return t>=-n&&t<n}),"All values in axis param must be in range [-"+n+", "+n+") but got axis "+t),i(t.every(function(t){return s(t)}),"All values in axis param must be integers but got axis "+t),t.map(function(t){return t<0?n+t:t})}function c(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+e+" being uploaded contains "+r+".")}}function l(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function f(t){return"string"==typeof t||t instanceof String}function h(t){return"boolean"==typeof t}function p(t){return"number"==typeof t}function d(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}Object.defineProperty(e,"__esModule",{value:!0}),e.shuffle=n,e.clamp=function(t,e,n){return Math.max(t,Math.min(e,n))},e.nearestLargerEven=function(t){return t%2==0?t:t+1},e.sum=function(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e},e.randUniform=function(t,e){var n=Math.random();return e*n+(1-n)*t},e.distSquared=function(t,e){for(var n=0,r=0;r<t.length;r++){var i=Number(t[r])-Number(e[r]);n+=i*i}return n},e.assert=i,e.assertShapesMatch=function(t,e,n){void 0===n&&(n=""),i(o(t,e),n+" Shapes "+t+" and "+e+" must match")},e.assertNonNull=function(t){i(null!=t,"The input to the tensor constructor must be a non-null value.")},e.flatten=a,e.sizeFromShape=function(t){if(0===t.length)return 1;for(var e=t[0],n=1;n<t.length;n++)e*=t[n];return e},e.isScalarShape=function(t){return 0===t.length},e.arraysEqual=o,e.isInt=s,e.tanh=function(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;var e=Math.exp(2*t);return(e-1)/(e+1)},e.sizeToSquarishShape=function(t){for(var e=Math.floor(Math.sqrt(t));e>1;--e)if(t%e==0)return[e,t/e];return[1,t]},e.createShuffledIndices=function(t){for(var e=new Uint32Array(t),r=0;r<t;++r)e[r]=r;return n(e),e},e.rightPad=function(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)},e.repeatedTry=function(t,e,n){return void 0===e&&(e=function(t){return 0}),new Promise(function(r,i){var a=0,o=function(){if(t())r();else{var s=e(++a);null!=n&&a>=n?i():setTimeout(o,s)}};o()})},e.inferFromImplicitShape=function(t,e){for(var n=1,r=-1,i=0;i<t.length;++i)if(t[i]>=0)n*=t[i];else if(-1===t[i]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+i);r=i}else if(t[i]<0)throw Error("Shapes can not be < 0. Found "+t[i]+" at dim "+i);if(-1===r){if(e>0&&e!==n)throw Error("Size("+e+") must match the product of shape "+t);return t}if(0===n)throw Error("Cannot infer the missing size in ["+t+"] when there are 0 elements");if(e%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+e+" / "+n);var a=t.slice();return a[r]=e/n,a},e.parseAxisParam=u,e.squeezeShape=function(t,e){for(var n=[],r=[],i=null==e?null:u(e,t).sort(),a=0,o=0;o<t.length;++o){if(null!=i){if(i[a]===o&&1!==t[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+t[o]+"' is not 1");(null==i[a]||i[a]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),i[a]<=o&&a++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}},e.getTypedArrayFromDType=function(t,e){var n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n},e.getArrayFromDType=function(t,e){var n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n},e.checkComputationForErrors=function(t,e,n){if("float32"===e)for(var r=0;r<t.length;r++){var i=t[r];if(isNaN(i)||!isFinite(i))throw Error("The result of the '"+n+"' is "+i+".")}},e.checkConversionForErrors=c,e.hasEncodingLoss=function(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)},e.isTypedArray=l,e.bytesPerElement=function(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)},e.bytesFromStringArray=function(t){if(null==t)return 0;var e=0;return t.forEach(function(t){return e+=2*t.length}),e},e.isString=f,e.isBoolean=h,e.isNumber=p,e.inferDtype=function t(e){return e instanceof Array?t(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":p(e)?"float32":f(e)?"string":h(e)?"bool":"float32"},e.isFunction=function(t){return!!(t&&t.constructor&&t.call&&t.apply)},e.nearestDivisor=function(t,e){for(var n=e;n<t;++n)if(t%n==0)return n;return t},e.computeStrides=function(t){var e=t.length;if(e<2)return[];var n=new Array(e-1);n[e-2]=t[e-1];for(var r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n},e.toTypedArray=function(t,e,n){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a(t)),n&&c(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){for(var r=new Uint8Array(t.length),i=0;i<r.length;++i)0!==Math.round(t[i])&&(r[i]=1);return r}throw new Error("Unknown data type "+e)},e.makeOnesTypedArray=function(t,e){for(var n=d(t,e),r=0;r<n.length;r++)n[r]=1;return n},e.makeZerosTypedArray=d,e.now=function(){if("undefined"!=typeof performance)return performance.now();if(void 0!==r){var t=r.hrtime();return 1e3*t[0]+t[1]/1e6}throw new Error("Cannot measure time in this environment. You should run tf.js in the browser or in Node.js")}});f(_);_.shuffle,_.clamp,_.nearestLargerEven,_.sum,_.randUniform,_.distSquared,_.assert,_.assertShapesMatch,_.assertNonNull,_.flatten,_.sizeFromShape,_.isScalarShape,_.arraysEqual,_.isInt,_.tanh,_.sizeToSquarishShape,_.createShuffledIndices,_.rightPad,_.repeatedTry,_.inferFromImplicitShape,_.parseAxisParam,_.squeezeShape,_.getTypedArrayFromDType,_.getArrayFromDType,_.checkComputationForErrors,_.checkConversionForErrors,_.hasEncodingLoss,_.isTypedArray,_.bytesPerElement,_.bytesFromStringArray,_.isString,_.isBoolean,_.isNumber,_.inferDtype,_.isFunction,_.nearestDivisor,_.computeStrides,_.toTypedArray,_.makeOnesTypedArray,_.makeZerosTypedArray,_.now;var x=h(function(t,e){Object.defineProperty(e,"__esModule",{value:!0});var n=7;function r(t,e){var r;return r=Array.isArray(t)?parseFloat(t[0].toFixed(n))+" + "+parseFloat(t[1].toFixed(n))+"j":_.isString(t)?"'"+t+"'":parseFloat(t.toFixed(n)).toString(),_.rightPad(r,e)}function i(t){for(var e=[],n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}e.tensorToString=function(t,e,n,a){var o=_.computeStrides(e),s=function(t,e,n,a){var o=_.sizeFromShape(e),s=a[a.length-1],u=new Array(s).fill(0),c=e.length,l="complex64"===n?i(t):t;if(c>1)for(var f=0;f<o/s;f++)for(var h=f*s,p=0;p<s;p++)u[p]=Math.max(u[p],r(l[h+p],0).length);return u}(t,e,n,o),u=e.length,c=function t(e,n,a,o,s,u){void 0===u&&(u=!0);var c="complex64"===a?2:1,l=n[0],f=n.length;if(0===f)return"complex64"===a?[r(i(e)[0],0)]:[e[0].toString()];if(1===f){if(l>20){var h=3*c,p=Array.from(e.slice(0,h)),d=Array.from(e.slice(l-3*c,l));return"complex64"===a&&(p=i(p),d=i(d)),["["+p.map(function(t,e){return r(t,s[e])}).join(", ")+", ..., "+d.map(function(t,e){return r(t,s[l-3+e])}).join(", ")+"]"]}return["["+("complex64"===a?i(e):Array.from(e)).map(function(t,e){return r(t,s[e])}).join(", ")+"]"]}var m=n.slice(1),g=o.slice(1),y=o[0]*c,v=[];if(l>20){for(var b=0;b<3;b++){var w=(_=b*y)+y;v.push.apply(v,t(e.slice(_,w),m,a,g,s,!1))}v.push("...");for(b=l-3;b<l;b++){w=(_=b*y)+y;v.push.apply(v,t(e.slice(_,w),m,a,g,s,b===l-1))}}else for(b=0;b<l;b++){var _;w=(_=b*y)+y;v.push.apply(v,t(e.slice(_,w),m,a,g,s,b===l-1))}var x=2===f?",":"";v[0]="["+v[0]+x;for(b=1;b<v.length-1;b++)v[b]=" "+v[b]+x;var E=",\n";for(b=2;b<f;b++)E+="\n";return v[v.length-1]=" "+v[v.length-1]+"]"+(u?"":E),v}(t,e,n,o,s),l=["Tensor"];return a&&(l.push("  dtype: "+n),l.push("  rank: "+u),l.push("  shape: ["+e+"]"),l.push("  values:")),l.push(c.map(function(t){return"    "+t}).join("\n")),l.join("\n")}});f(x);x.tensorToString;var E=h(function(t,e){var n,r=l&&l.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),i=l&&l.__awaiter||function(t,e,n,r){return new(n||(n=Promise))(function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?i(t.value):new n(function(e){e(t.value)}).then(o,s)}u((r=r.apply(t,e||[])).next())})},a=l&&l.__generator||function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var o=_,s=function(){function t(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=_.sizeFromShape(t),null!=n){var r=n.length;_.assert(r===this.size,"Length of values '"+r+"' does not match the size inferred by the shape '"+this.size+"'.")}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||_.getArrayFromDType(e,_.sizeFromShape(this.shape)),this.strides=o.computeStrides(t)}return t.prototype.set=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];0===e.length&&(e=[0]),_.assert(e.length===this.rank,"The number of provided coordinates ("+e.length+") must match the rank ("+this.rank+")");var r=this.locToIndex(e);this.values[r]=t},t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];0===t.length&&(t=[0]);for(var n=t[t.length-1],r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]},t.prototype.locToIndex=function(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];for(var e=t[t.length-1],n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e},t.prototype.indexToLoc=function(t){if(0===this.rank)return[];if(1===this.rank)return[t];for(var e=new Array(this.shape.length),n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e},Object.defineProperty(t.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.toTensor=function(){return f.make(this.shape,{values:this.values},this.dtype)},t}();e.TensorBuffer=s;var u=null,c=null;e.setTensorTracker=function(t){u=t},e.setOpHandler=function(t){c=t};var f=function(){function t(t,e,n,r){this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=_.sizeFromShape(t),this.strides=o.computeStrides(t),this.dataId=null!=r?r:{},this.id=u().nextTensorId(),this.rankType=this.rank<5?this.rank.toString():"higher",u().registerTensor(this),null!=n&&u().write(this.dataId,n)}return t.make=function(e,n,r){return new t(e,r,n.values,n.dataId)},t.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},t.prototype.asScalar=function(){return this.throwIfDisposed(),_.assert(1===this.size,"The array must have only 1 element."),this.reshape([])},t.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},t.prototype.as2D=function(t,e){return this.throwIfDisposed(),this.reshape([t,e])},t.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])},t.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])},t.prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),this.reshape([t,e,n,r,i])},t.prototype.asType=function(t){return this.throwIfDisposed(),c.cast(this,t)},Object.defineProperty(t.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];_.assert(t.length===this.rank,"Number of coordinates in get() must match the rank of the tensor"),_.assert("complex64"!==this.dtype,"Tensor.get() is not supported for complex64 tensors yet."),this.throwIfDisposed(),0===t.length&&(t=[0]);for(var n=t[t.length-1],r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.dataSync()[n]},t.prototype.buffer=function(){return c.buffer(this.shape,this.dtype,this.dataSync())},t.prototype.data=function(){return i(this,void 0,void 0,function(){return a(this,function(t){return this.throwIfDisposed(),[2,u().read(this.dataId)]})})},t.prototype.dataSync=function(){return this.throwIfDisposed(),u().readSync(this.dataId)},t.prototype.dispose=function(){this.isDisposed||(u().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(t.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),t.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},t.prototype.toFloat=function(){return this.asType("float32")},t.prototype.toInt=function(){return this.asType("int32")},t.prototype.toBool=function(){return this.asType("bool")},t.prototype.print=function(t){return void 0===t&&(t=!1),c.print(this,t)},t.prototype.reshape=function(t){return this.throwIfDisposed(),c.reshape(this,t)},t.prototype.reshapeAs=function(t){return this.throwIfDisposed(),this.reshape(t.shape)},t.prototype.expandDims=function(t){return void 0===t&&(t=0),c.expandDims(this,t)},t.prototype.cumsum=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=!1),void 0===n&&(n=!1),c.cumsum(this,t,e,n)},t.prototype.squeeze=function(t){return this.throwIfDisposed(),c.squeeze(this,t)},t.prototype.clone=function(){return this.throwIfDisposed(),c.clone(this)},t.prototype.toString=function(t){void 0===t&&(t=!1);var e=this.dataSync();return x.tensorToString(e,this.shape,this.dtype,t)},t.prototype.tile=function(t){return this.throwIfDisposed(),c.tile(this,t)},t.prototype.gather=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),c.gather(this,t,e)},t.prototype.matMul=function(t,e,n){return void 0===e&&(e=!1),void 0===n&&(n=!1),this.throwIfDisposed(),c.matMul(this,t,e,n)},t.prototype.dot=function(t){return this.throwIfDisposed(),c.dot(this,t)},t.prototype.norm=function(t,e,n){return void 0===t&&(t="euclidean"),void 0===e&&(e=null),void 0===n&&(n=!1),this.throwIfDisposed(),c.norm(this,t,e,n)},t.prototype.slice=function(t,e){return this.throwIfDisposed(),c.slice(this,t,e)},t.prototype.reverse=function(t){return this.throwIfDisposed(),c.reverse(this,t)},t.prototype.concat=function(e,n){return void 0===n&&(n=0),this.throwIfDisposed(),e instanceof t&&(e=[e]),c.concat([this].concat(e),n)},t.prototype.split=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),c.split(this,t,e)},t.prototype.stack=function(t,e){return void 0===e&&(e=0),c.stack([this,t],e)},t.prototype.unstack=function(t,e){return void 0===e&&(e=0),c.unstack(this,e)},t.prototype.pad=function(t,e){return void 0===e&&(e=0),c.pad(this,t,e)},t.prototype.batchNormalization=function(t,e,n,r,i){return void 0===n&&(n=.001),this.throwIfDisposed(),c.batchNormalization(this,t,e,n,r,i)},t.prototype.all=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.all(this,t,e)},t.prototype.any=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.any(this,t,e)},t.prototype.logSumExp=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.logSumExp(this,t,e)},t.prototype.sum=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.sum(this,t,e)},t.prototype.prod=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.prod(this,t,e)},t.prototype.mean=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.mean(this,t,e)},t.prototype.min=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.min(this,t,e)},t.prototype.max=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),c.max(this,t,e)},t.prototype.argMin=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),c.argMin(this,t)},t.prototype.argMax=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),c.argMax(this,t)},t.prototype.cast=function(t){return this.throwIfDisposed(),c.cast(this,t)},t.prototype.add=function(t){return this.throwIfDisposed(),c.add(this,t)},t.prototype.addStrict=function(t){return this.throwIfDisposed(),c.addStrict(this,t)},t.prototype.atan2=function(t){return this.throwIfDisposed(),c.atan2(this,t)},t.prototype.sub=function(t){return this.throwIfDisposed(),c.sub(this,t)},t.prototype.subStrict=function(t){return this.throwIfDisposed(),c.subStrict(this,t)},t.prototype.pow=function(t){return this.throwIfDisposed(),c.pow(this,t)},t.prototype.powStrict=function(t){return this.throwIfDisposed(),c.powStrict(this,t)},t.prototype.mul=function(t){return this.throwIfDisposed(),c.mul(this,t)},t.prototype.mulStrict=function(t){return this.throwIfDisposed(),c.mulStrict(this,t)},t.prototype.div=function(t){return this.throwIfDisposed(),c.div(this,t)},t.prototype.floorDiv=function(t){return this.throwIfDisposed(),c.floorDiv(this,t)},t.prototype.divStrict=function(t){return this.throwIfDisposed(),c.divStrict(this,t)},t.prototype.minimum=function(t){return this.throwIfDisposed(),c.minimum(this,t)},t.prototype.minimumStrict=function(t){return this.throwIfDisposed(),c.minimumStrict(this,t)},t.prototype.maximum=function(t){return this.throwIfDisposed(),c.maximum(this,t)},t.prototype.maximumStrict=function(t){return this.throwIfDisposed(),c.maximumStrict(this,t)},t.prototype.mod=function(t){return this.throwIfDisposed(),c.mod(this,t)},t.prototype.modStrict=function(t){return this.throwIfDisposed(),c.modStrict(this,t)},t.prototype.squaredDifference=function(t){return this.throwIfDisposed(),c.squaredDifference(this,t)},t.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),c.squaredDifferenceStrict(this,t)},t.prototype.transpose=function(t){return this.throwIfDisposed(),c.transpose(this,t)},t.prototype.notEqual=function(t){return this.throwIfDisposed(),c.notEqual(this,t)},t.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),c.notEqualStrict(this,t)},t.prototype.less=function(t){return this.throwIfDisposed(),c.less(this,t)},t.prototype.lessStrict=function(t){return this.throwIfDisposed(),c.lessStrict(this,t)},t.prototype.equal=function(t){return this.throwIfDisposed(),c.equal(this,t)},t.prototype.equalStrict=function(t){return this.throwIfDisposed(),c.equalStrict(this,t)},t.prototype.lessEqual=function(t){return this.throwIfDisposed(),c.lessEqual(this,t)},t.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),c.lessEqualStrict(this,t)},t.prototype.greater=function(t){return this.throwIfDisposed(),c.greater(this,t)},t.prototype.greaterStrict=function(t){return this.throwIfDisposed(),c.greaterStrict(this,t)},t.prototype.greaterEqual=function(t){return this.throwIfDisposed(),c.greaterEqual(this,t)},t.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),c.greaterEqualStrict(this,t)},t.prototype.logicalAnd=function(t){return this.throwIfDisposed(),c.logicalAnd(this,t)},t.prototype.logicalOr=function(t){return this.throwIfDisposed(),c.logicalOr(this,t)},t.prototype.logicalNot=function(){return this.throwIfDisposed(),c.logicalNot(this)},t.prototype.logicalXor=function(t){return this.throwIfDisposed(),c.logicalXor(this,t)},t.prototype.where=function(t,e){return this.throwIfDisposed(),c.where(t,this,e)},t.prototype.neg=function(){return this.throwIfDisposed(),c.neg(this)},t.prototype.ceil=function(){return this.throwIfDisposed(),c.ceil(this)},t.prototype.floor=function(){return this.throwIfDisposed(),c.floor(this)},t.prototype.sign=function(){return this.throwIfDisposed(),c.sign(this)},t.prototype.exp=function(){return this.throwIfDisposed(),c.exp(this)},t.prototype.expm1=function(){return this.throwIfDisposed(),c.expm1(this)},t.prototype.log=function(){return this.throwIfDisposed(),c.log(this)},t.prototype.log1p=function(){return this.throwIfDisposed(),c.log1p(this)},t.prototype.sqrt=function(){return this.throwIfDisposed(),c.sqrt(this)},t.prototype.rsqrt=function(){return this.throwIfDisposed(),c.rsqrt(this)},t.prototype.square=function(){return this.throwIfDisposed(),c.square(this)},t.prototype.reciprocal=function(){return this.throwIfDisposed(),c.reciprocal(this)},t.prototype.abs=function(){return this.throwIfDisposed(),c.abs(this)},t.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),c.clipByValue(this,t,e)},t.prototype.relu=function(){return this.throwIfDisposed(),c.relu(this)},t.prototype.elu=function(){return this.throwIfDisposed(),c.elu(this)},t.prototype.selu=function(){return this.throwIfDisposed(),c.selu(this)},t.prototype.leakyRelu=function(t){return void 0===t&&(t=.2),this.throwIfDisposed(),c.leakyRelu(this,t)},t.prototype.prelu=function(t){return this.throwIfDisposed(),c.prelu(this,t)},t.prototype.sigmoid=function(){return this.throwIfDisposed(),c.sigmoid(this)},t.prototype.logSigmoid=function(){return this.throwIfDisposed(),c.logSigmoid(this)},t.prototype.softplus=function(){return this.throwIfDisposed(),c.softplus(this)},t.prototype.zerosLike=function(){return this.throwIfDisposed(),c.zerosLike(this)},t.prototype.onesLike=function(){return this.throwIfDisposed(),c.onesLike(this)},t.prototype.sin=function(){return this.throwIfDisposed(),c.sin(this)},t.prototype.cos=function(){return this.throwIfDisposed(),c.cos(this)},t.prototype.tan=function(){return this.throwIfDisposed(),c.tan(this)},t.prototype.asin=function(){return this.throwIfDisposed(),c.asin(this)},t.prototype.acos=function(){return this.throwIfDisposed(),c.acos(this)},t.prototype.atan=function(){return this.throwIfDisposed(),c.atan(this)},t.prototype.sinh=function(){return this.throwIfDisposed(),c.sinh(this)},t.prototype.cosh=function(){return this.throwIfDisposed(),c.cosh(this)},t.prototype.tanh=function(){return this.throwIfDisposed(),c.tanh(this)},t.prototype.asinh=function(){return this.throwIfDisposed(),c.asinh(this)},t.prototype.acosh=function(){return this.throwIfDisposed(),c.acosh(this)},t.prototype.atanh=function(){return this.throwIfDisposed(),c.atanh(this)},t.prototype.erf=function(){return this.throwIfDisposed(),c.erf(this)},t.prototype.round=function(){return this.throwIfDisposed(),c.round(this)},t.prototype.step=function(t){return void 0===t&&(t=0),this.throwIfDisposed(),c.step(this,t)},t.prototype.softmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),c.softmax(this,t)},t.prototype.logSoftmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),c.logSoftmax(this,t)},t.prototype.resizeBilinear=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),c.image.resizeBilinear(this,t,e)},t.prototype.resizeNearestNeighbor=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),c.image.resizeNearestNeighbor(this,t,e)},t.prototype.conv1d=function(t,e,n,r,i,a){return void 0===r&&(r="NWC"),void 0===i&&(i=1),this.throwIfDisposed(),c.conv1d(this,t,e,n,r,i,a)},t.prototype.conv2d=function(t,e,n,r,i,a){return void 0===r&&(r="NHWC"),void 0===i&&(i=[1,1]),this.throwIfDisposed(),c.conv2d(this,t,e,n,r,i,a)},t.prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),c.conv2dTranspose(this,t,e,n,r,i)},t.prototype.depthwiseConv2D=function(t,e,n,r,i,a){return void 0===r&&(r="NHWC"),void 0===i&&(i=[1,1]),this.throwIfDisposed(),c.depthwiseConv2d(this,t,e,n,r,i,a)},t.prototype.separableConv2d=function(t,e,n,r,i,a){return void 0===i&&(i=[1,1]),void 0===a&&(a="NHWC"),this.throwIfDisposed(),c.separableConv2d(this,t,e,n,r,i,a)},t.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),c.avgPool(this,t,e,n,r)},t.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),c.maxPool(this,t,e,n,r)},t.prototype.localResponseNormalization=function(t,e,n,r){return void 0===t&&(t=5),void 0===e&&(e=1),void 0===n&&(n=1),void 0===r&&(r=.5),c.localResponseNormalization(this,t,e,n,r)},t.prototype.pool=function(t,e,n,r,i){return this.throwIfDisposed(),c.pool(this,t,e,n,r,i)},t.prototype.variable=function(t,e,n){return void 0===t&&(t=!0),this.throwIfDisposed(),h.variable(this,t,e,n)},t.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),c.unsortedSegmentSum(this,t,e)},t.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),c.batchToSpaceND(this,t,e)},t.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),c.spaceToBatchND(this,t,e)},t.prototype.topk=function(t,e){return void 0===t&&(t=1),void 0===e&&(e=!0),this.throwIfDisposed(),c.topk(this,t,e)},t.prototype.stridedSlice=function(t,e,n,r,i,a,o,s){return void 0===r&&(r=0),void 0===i&&(i=0),void 0===a&&(a=0),void 0===o&&(o=0),void 0===s&&(s=0),this.throwIfDisposed(),c.stridedSlice(this,t,e,n,r,i,a,o,s)},t.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),c.depthToSpace(this,t,e)},t.prototype.fft=function(){return this.throwIfDisposed(),c.spectral.fft(this)},t.prototype.ifft=function(){return this.throwIfDisposed(),c.spectral.ifft(this)},t.prototype.rfft=function(){return this.throwIfDisposed(),c.spectral.rfft(this)},t.prototype.irfft=function(){return this.throwIfDisposed(),c.spectral.irfft(this)},t}();e.Tensor=f,Object.defineProperty(f,Symbol.hasInstance,{value:function(t){return!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype}});var h=function(t){function e(e,n,r){void 0===n&&(n=!0);var i=t.call(this,e.shape,e.dtype,null,e.dataId)||this;i.trainable=n,i.name=r,null==i.name&&(i.name=u().nextVariableId().toString());try{u().registerVariable(i)}catch(t){throw u().disposeTensor(i),t}return i}return r(e,t),e.variable=function(t,n,r,i){return void 0===n&&(n=!0),null!=i&&i!==t.dtype&&(t=t.asType(i)),new e(t,n,r)},e.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value ("+t.dtype+") and previous value ("+this.dtype+") must match");if(!_.arraysEqual(t.shape,this.shape))throw new Error("shape of the new value ("+t.shape+") and previous value ("+this.shape+") must match");u().disposeTensor(this),this.dataId=t.dataId,u().registerTensor(this)},e}(f);e.Variable=h,Object.defineProperty(h,Symbol.hasInstance,{value:function(t){return t instanceof f&&null!=t.assign&&t.assign instanceof Function}});var p=h.variable;e.variable=p});f(E);E.TensorBuffer,E.setTensorTracker,E.setOpHandler,E.Tensor,E.Variable,E.variable;var S=h(function(t,e){var n,r,i,a;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(e.Rank||(e.Rank={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(n||(n={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(r||(r={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(a||(a={}));var o={float32:i,int32:n,bool:r,complex64:a};function s(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast "+t+" with "+e)}return o[t][e]}e.upcastType=s,e.sumOutType=function(t){return s(t,"int32")}});f(S);S.Rank,S.upcastType,S.sumOutType;var N=h(function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.makeTypesMatch=function(t,e){if(t.dtype===e.dtype)return[t,e];var n=S.upcastType(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]},e.assertTypesMatch=function(t,e){_.assert(t.dtype===e.dtype,"The dtypes of the first("+t.dtype+") and second("+e.dtype+") input must match")},e.isTensorInList=function(t,e){for(var n=0;n<e.length;n++)if(e[n].id===t.id)return!0;return!1},e.flattenNameArrayMap=function(t,e){var n=[];if(t instanceof E.Tensor)n.push(t);else for(var r=t,i=0;i<e.length;i++)n.push(r[e[i]]);return n},e.unflattenToNameArrayMap=function(t,e){if(t.length!==e.length)throw new Error("Cannot unflatten Tensor[], keys and arrays are not of same length.");for(var n={},r=0;r<t.length;r++)n[t[r]]=e[r];return n},e.getTensorsInContainer=function(t){var e=[];return function t(e,n,r){if(null!=e)if(e instanceof E.Tensor)n.push(e);else if(i=e,Array.isArray(i)||"object"==typeof i){var i,a=e;for(var o in a){var s=a[o];r.has(s)||(r.add(s),t(s,n,r))}}}(t,e,new Set),e}});f(N);N.makeTypesMatch,N.assertTypesMatch;var I=N.isTensorInList,O=(N.flattenNameArrayMap,N.unflattenToNameArrayMap,N.getTensorsInContainer);function k(t,e,n,r){if(void 0===n&&(n=new Map),void 0===r&&(r=new Set),null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);var i=e(t);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(T(t)){var a=Array.isArray(t)?[]:{};for(var o in r.add(t),t){var s=k(t[o],e,n,r);a[o]=s}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,i.value),i.value}function A(t,e){return void 0===e&&(e=C),function t(e,n,r){void 0===r&&(r=new Set);var i=e[0];if(r.has(i))throw new Error("Circular references are not supported.");var a=n(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(T(i)){var o=Array.isArray(i)?[]:{};r.add(i);var s=function(i){var a=t(e.map(function(t){return t[i]}),n,r);o[i]=a};for(var u in i)s(u);return r.delete(i),o}throw new Error("Can't recurse into non-iterable type: "+i)}return a.value}(t,e)}function C(t){return null===t?null:T(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function P(t,e){return u(this,void 0,void 0,function(){var n,r,i,a,o,s;return c(this,function(u){switch(u.label){case 0:n=new Map,k(t,e,n),r=0,i=Array.from(n.keys()),u.label=1;case 1:return r<i.length?(a=i[r],(o=n.get(a))instanceof Promise?[4,o]:[3,3]):[3,4];case 2:s=u.sent(),n.set(a,s),u.label=3;case 3:return r++,[3,1];case 4:return[2,k(t,e,n)]}})})}function T(t){return null!=t&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof a.o))}var R=function(){function t(t){if(this.capacity=t,this.begin=0,this.end=0,t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}return t.prototype.wrap=function(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity},t.prototype.get=function(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]},t.prototype.set=function(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e},t.prototype.length=function(){var t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t},t.prototype.isFull=function(){return this.length()===this.capacity},t.prototype.isEmpty=function(){return 0===this.length()},t.prototype.push=function(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)},t.prototype.pushAll=function(t){for(var e=0,n=t;e<n.length;e++){var r=n[e];this.push(r)}},t.prototype.pop=function(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);var t=this.get(this.end);return this.set(this.end,void 0),t},t.prototype.unshift=function(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)},t.prototype.shift=function(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t},t.prototype.shuffleExcise=function(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n},t}(),D=function(t){function e(){return t.call(this,e.INITIAL_CAPACITY)||this}return s(e,t),e.prototype.isFull=function(){return!1},e.prototype.push=function(e){t.prototype.isFull.call(this)&&this.expand(),t.prototype.push.call(this,e)},e.prototype.unshift=function(e){t.prototype.isFull.call(this)&&this.expand(),t.prototype.unshift.call(this,e)},e.prototype.expand=function(){for(var t=2*this.capacity,e=new Array(t),n=this.length(),r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n},e.INITIAL_CAPACITY=32,e}(R);function M(t){return new V(t)}function j(t){return new W(t)}function B(t,e){return new tt(t,e)}function L(t,e){return void 0===e&&(e=z.FAIL),new et(t,e)}var z,F,U=function(){function t(){}return t.prototype.collect=function(t,e){return void 0===t&&(t=1e3),void 0===e&&(e=100),u(this,void 0,void 0,function(){var n,r,i,a;return c(this,function(o){switch(o.label){case 0:return n=e>0?this.prefetch(e):this,r=[],i=0,[4,n.next()];case 1:a=o.sent(),o.label=2;case 2:return a.done?[3,4]:(r.push(a.value),++i>=t?[2,r]:[4,n.next()]);case 3:return a=o.sent(),[3,2];case 4:return[2,r]}})})},t.prototype.resolveFully=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return[4,this.next()];case 1:t=e.sent(),e.label=2;case 2:return t.done?[3,4]:[4,this.next()];case 3:return t=e.sent(),[3,2];case 4:return[2]}})})},t.prototype.resolveWhile=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){switch(r.label){case 0:return[4,this.next()];case 1:e=r.sent(),n=t(e.value),r.label=2;case 2:return e.done||!n?[3,4]:[4,this.next()];case 3:return e=r.sent(),n=t(e.value),[3,2];case 4:return[2]}})})},t.prototype.handleErrors=function(t){return new Y(this,t)},t.prototype.filter=function(t){return new G(this,t)},t.prototype.map=function(t){return new X(this,t)},t.prototype.mapAsync=function(t){return new J(this,t)},t.prototype.serialMapAsync=function(t){return new J(this,t).serial()},t.prototype.flatmap=function(t){return new Q(this,t)},t.prototype.forEach=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){return[2,this.map(t).resolveFully()]})})},t.prototype.serialForEach=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){return[2,this.serialMapAsync(t).resolveWhile(function(t){return!0===t})]})})},t.prototype.rowMajorBatch=function(t,e){return void 0===e&&(e=!0),new K(this,t,e)},t.prototype.columnMajorBatch=function(t,e,n){return void 0===e&&(e=!0),void 0===n&&(n=C),this.rowMajorBatch(t,e).map(function(t){return A(t,n)})},t.prototype.concatenate=function(t,e){return new tt(M([this,t]),e)},t.prototype.take=function(t){return t<0||null==t?this:new H(this,t)},t.prototype.skip=function(t){return t<0||null==t?this:new $(this,t)},t.prototype.prefetch=function(t){return new nt(this,t)},t.prototype.shuffle=function(t,e){return new rt(this,t,e)},t.prototype.serial=function(){return new q(this)},t}(),V=function(t){function e(e){var n=t.call(this)||this;return n.items=e,n.trav=0,n}return s(e,t),e.prototype.summary=function(){return"Array of "+this.items.length+" items"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t,e;return c(this,function(n){return this.trav>=this.items.length?[2,{value:null,done:!0}]:(t=this.items[this.trav],e=t instanceof a.o?Object(a.R)(t):t,this.trav++,[2,{value:e,done:!1}])})})},e}(U),W=function(t){function e(e){var n=t.call(this)||this;return n.nextFn=e,n}return s(e,t),e.prototype.summary=function(){return"Function call"},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){try{return[2,this.nextFn()]}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}return[2]})})},e}(U),q=function(t){function e(e){var n=t.call(this)||this;return n.upstream=e,n.lastRead=Promise.resolve({value:null,done:!1}),n}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Serial"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,this.upstream.next()]})})},e}(U),$=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.maxCount=n,r.count=0,r.lastRead=Promise.resolve({value:null,done:!1}),r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Skip"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return this.count++<this.maxCount?[4,this.upstream.next()]:[3,2];case 1:return(t=e.sent()).done?[2,t]:(Object(a.jb)(t.value),[3,0]);case 2:return[2,this.upstream.next()]}})})},e}(U),H=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.maxCount=n,r.count=0,r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Take"},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return this.count++>=this.maxCount?[2,{value:null,done:!0}]:[2,this.upstream.next()]})})},e}(U),K=function(t){function e(e,n,r){void 0===r&&(r=!0);var i=t.call(this)||this;return i.upstream=e,i.batchSize=n,i.enableSmallLastBatch=r,i.lastRead=Promise.resolve({value:null,done:!1}),i}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> RowMajorBatch"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){var t,e;return c(this,function(n){switch(n.label){case 0:t=[],n.label=1;case 1:return t.length<this.batchSize?[4,this.upstream.next()]:[3,3];case 2:return(e=n.sent()).done?this.enableSmallLastBatch&&t.length>0?[2,{value:t,done:!1}]:[2,{value:null,done:!0}]:(t.push(e.value),[3,1]);case 3:return[2,{value:t,done:!1}]}})})},e}(U),G=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.predicate=n,r.lastRead=Promise.resolve({value:null,done:!1}),r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Filter"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return[4,this.upstream.next()];case 1:return(t=e.sent()).done||this.predicate(t.value)?[2,t]:(Object(a.jb)(t.value),[3,0]);case 2:return[2]}})})},e}(U),X=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.transform=n,r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Map"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i,a,o;return c(this,function(s){switch(s.label){case 0:return[4,this.upstream.next()];case 1:if((t=s.sent()).done)return[2,{value:null,done:!0}];for(e=O(t.value),n=this.transform(t.value),r=O(n),i=0,a=e;i<a.length;i++)o=a[i],I(o,r)||o.dispose();return[2,{value:n,done:!1}]}})})},e}(U),Y=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.handler=n,r.count=0,r.lastRead=Promise.resolve({value:null,done:!1}),r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> handleErrors"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.upstream.next()];case 2:return[2,e.sent()];case 3:return t=e.sent(),this.handler(t)?[3,4]:[2,{value:null,done:!0}];case 4:return[3,0];case 5:return[2]}})})},e}(U),J=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.transform=n,r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> AsyncMap"},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i,a,o;return c(this,function(s){switch(s.label){case 0:return[4,this.upstream.next()];case 1:return(t=s.sent()).done?[2,{value:null,done:!0}]:(e=O(t.value),[4,this.transform(t.value)]);case 2:for(n=s.sent(),r=O(n),i=0,a=e;i<a.length;i++)o=a[i],I(o,r)||o.dispose();return[2,{value:n,done:!1}]}})})},e}(U),Z=function(t){function e(){var e=t.call(this)||this;return e.outputQueue=new D,e.lastRead=Promise.resolve({value:null,done:!1}),e}return s(e,t),e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return 0!==this.outputQueue.length()?[3,2]:[4,this.pump()];case 1:return t.sent()?[3,0]:[2,{value:null,done:!0}];case 2:return[2,{value:this.outputQueue.shift(),done:!1}]}})})},e}(U),Q=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.transform=n,r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Flatmap"},e.prototype.pump=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i,a,o;return c(this,function(s){switch(s.label){case 0:return[4,this.upstream.next()];case 1:if((t=s.sent()).done)return[2,!1];for(e=O(t.value),n=this.transform(t.value),r=O(n),this.outputQueue.pushAll(n),i=0,a=e;i<a.length;i++)o=a[i],I(o,r)||o.dispose();return[2,!0]}})})},e}(Z),tt=function(t){function e(e,n){var r=t.call(this)||this;return r.baseErrorHandler=n,r.lastRead=null,r.iterator=null,r.moreIterators=e,r}return s(e,t),e.prototype.summary=function(){return"TODO: fill in upstream of chained summaries -> Chained"},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return this.lastRead=this.readFromChain(this.lastRead),[2,this.lastRead]})})},e.prototype.readFromChain=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){switch(r.label){case 0:return[4,t];case 1:return r.sent(),null!=this.iterator?[3,3]:[4,this.moreIterators.next()];case 2:if((e=r.sent()).done)return[2,{value:null,done:!0}];this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler)),r.label=3;case 3:return[4,this.iterator.next()];case 4:return(n=r.sent()).done?(this.iterator=null,[2,this.readFromChain(t)]):[2,n]}})})},e}(U);(F=z||(z={}))[F.FAIL=0]="FAIL",F[F.SHORTEST=1]="SHORTEST",F[F.LONGEST=2]="LONGEST";var et=function(t){function e(e,n){void 0===n&&(n=z.FAIL);var r=t.call(this)||this;return r.iterators=e,r.mismatchMode=n,r.count=0,r.currentPromise=null,r}return s(e,t),e.prototype.summary=function(){return"{TODO: fill in upstream of zip summaries} -> Zip"},e.prototype.nextState=function(t){return u(this,void 0,void 0,function(){function e(t){return t instanceof U?{value:t.next().then(function(t){return n++,t.done&&r++,t.value}),recurse:!1}:{value:null,recurse:!0}}var n,r,i;return c(this,function(a){switch(a.label){case 0:return[4,t];case 1:return a.sent(),n=0,r=0,[4,P(this.iterators,e)];case 2:if(i=a.sent(),n===r)return[2,{value:null,done:!0}];if(r>0)switch(this.mismatchMode){case z.FAIL:throw new Error("Zipped streams should have the same length. Mismatched at element "+this.count+".");case z.SHORTEST:return[2,{value:null,done:!0}];case z.LONGEST:}return this.count++,[2,{value:i,done:!1}]}})})},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return this.currentPromise=this.nextState(this.currentPromise),[4,this.currentPromise];case 1:return[2,t.sent()]}})})},e}(U),nt=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.bufferSize=n,r.buffer=new R(n),r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Prefetch"},e.prototype.refill=function(){for(;!this.buffer.isFull();){var t=this.upstream.next();this.buffer.push(t)}},e.prototype.next=function(){return this.refill(),this.buffer.shift()},e}(U),rt=function(t){function e(e,n,r){var i=t.call(this,e,n)||this;return i.upstream=e,i.windowSize=n,i.upstreamExhausted=!1,i.random=w(r||a.qe.now().toString()),i.lastRead=Promise.resolve({value:null,done:!1}),i}return s(e,t),e.prototype.next=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return this.lastRead=this.lastRead.then(function(){return t.serialNext()}),[2,this.lastRead]})})},e.prototype.randomInt=function(t){return Math.floor(this.random()*t)},e.prototype.chooseIndex=function(){return this.randomInt(this.buffer.length())},e.prototype.serialNext=function(){return u(this,void 0,void 0,function(){var t,e;return c(this,function(n){switch(n.label){case 0:this.upstreamExhausted||this.refill(),n.label=1;case 1:return this.buffer.isEmpty()?[3,3]:(t=this.chooseIndex(),[4,this.buffer.shuffleExcise(t)]);case 2:return(e=n.sent()).done?(this.upstreamExhausted=!0,[3,1]):(this.refill(),[2,e]);case 3:return[2,{value:null,done:!0}]}})})},e}(nt),it=function(){function t(){}return t.prototype.filter=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().filter(function(e){return Object(a.ge)(function(){return t(e)})})]}})})})},t.prototype.map=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().map(function(e){return Object(a.ge)(function(){return t(e)})})]}})})})},t.prototype.mapAsync=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().mapAsync(t)]}})})})},t.prototype.batch=function(t,e){var n=this;void 0===e&&(e=!0);var r=this;return at(function(){return u(n,void 0,void 0,function(){return c(this,function(n){switch(n.label){case 0:return[4,r.iterator()];case 1:return[2,n.sent().columnMajorBatch(t,e,ut)]}})})})},t.prototype.concatenate=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){var e,r;return c(this,function(i){switch(i.label){case 0:return[4,n.iterator()];case 1:return r=(e=i.sent()).concatenate,[4,t.iterator()];case 2:return[2,r.apply(e,[i.sent()])]}})})})},t.prototype.repeat=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){var e=this;return c(this,function(r){return[2,B(j(function(){return u(e,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return t={},[4,n.iterator()];case 1:return[2,(t.value=e.sent(),t.done=!1,t)]}})})}).take(t))]})})})},t.prototype.take=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().take(t)]}})})})},t.prototype.skip=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().skip(t)]}})})})},t.prototype.shuffle=function(t,e,n){var r=this;void 0===n&&(n=!0);var i=this,o=w(e||a.qe.now().toString());return at(function(){return u(r,void 0,void 0,function(){var e;return c(this,function(r){switch(r.label){case 0:return e=o.int32(),n&&(e+=o.int32()),[4,i.iterator()];case 1:return[2,r.sent().shuffle(t,e.toString())]}})})})},t.prototype.prefetch=function(t){var e=this,n=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,n.iterator()];case 1:return[2,e.sent().prefetch(t)]}})})})},t.prototype.toArray=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return[4,this.iterator()];case 1:return[2,t.sent().collect()]}})})},t.prototype.forEach=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,this.iterator()];case 1:return[2,e.sent().forEach(t)]}})})},t}();function at(t){return new(function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return s(n,e),n.prototype.iterator=function(){return u(this,void 0,void 0,function(){return c(this,function(e){return[2,t()]})})},n}(it))}function ot(t){var e=this;return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){return[2,M(t)]})})})}function st(t){var e=this;if(!T(t))throw new Error("The argument to zip() must be an object or array.");return at(function(){return u(e,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,P(t,function(t){if(t instanceof it)return{value:t.iterator(),recurse:!1};if(T(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})];case 1:return[2,L(e.sent(),z.SHORTEST)]}})})})}function ut(t){if(null===t)return null;var e=t[0];return"string"==typeof e?{value:t,recurse:!1}:T(e)?function(t){if(null==t)return!1;if(!Array.isArray(t))return!1;for(var e in t)if("number"!=typeof t[e])return!1;return!0}(e)?{value:ct(t),recurse:!1}:{value:null,recurse:!0}:{value:ct(t),recurse:!1}}function ct(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");if(t[0]instanceof a.o)return Object(a.Qd)(t);if(Array.isArray(t[0]))return function(t){for(var e=t[0].length,n=[t.length,t[0].length],r=new Float32Array(t.length*e),i=0,o=0,s=t;o<s.length;o++){var u=s[o];if(u.length!==e)throw new Error("Elements must have the same shape to be batched");r.set(u,i),i+=e}return a.o.make(n,{values:r})}(t);var e=t;return a.o.make([e.length],{values:new Float32Array(e)})}var lt=function(t){function e(e){var n=t.call(this)||this;return n.input=e,n}return s(e,t),e.prototype.iterator=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return[4,this.input.iterator()];case 1:return t=e.sent(),[2,t.decodeUTF8().split("\n")]}})})},e}(it),ft=Symbol("out"),ht=Symbol("field"),pt=Symbol("quote"),dt=Symbol("quoteafterquote"),mt=Symbol("quoteinquote"),gt=function(t){function e(e,n){var r=t.call(this)||this;return r.input=e,r.hasHeader=!0,r.fullColumnNames=null,r.columnNamesValidated=!1,r.columnConfigs=null,r.configuredColumnsOnly=!1,r.delimiter=",",r.base=new lt(e),n||(n={}),r.hasHeader=!1!==n.hasHeader,r.fullColumnNames=n.columnNames,r.columnConfigs=n.columnConfigs,r.configuredColumnsOnly=n.configuredColumnsOnly,r.delimiter=n.delimiter?n.delimiter:",",r}return s(e,t),e.prototype.columnNames=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return this.columnNamesValidated?[3,2]:[4,this.setColumnNames()];case 1:t.sent(),t.label=2;case 2:return[2,this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames]}})})},e.prototype.setColumnNames=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i,o;return c(this,function(s){switch(s.label){case 0:return[4,this.maybeReadHeaderLine()];case 1:if(t=s.sent(),!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");if(this.fullColumnNames&&t&&a.qe.assert(t.length===this.fullColumnNames.length,"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t),e=this.fullColumnNames.reduce(function(t,e){return t[e]=t[e]+1||1,t},{}),n=Object.keys(e).filter(function(t){return e[t]>1}),a.qe.assert(0===n.length,"Duplicate column names found: "+n.toString()),this.columnConfigs)for(r=0,i=Object.keys(this.columnConfigs);r<i.length;r++)if(o=i[r],-1===this.fullColumnNames.indexOf(o))throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");return this.columnNamesValidated=!0,[2]}})})},e.prototype.maybeReadHeaderLine=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return this.hasHeader?[4,this.base.iterator()]:[3,3];case 1:return[4,e.sent().next()];case 2:if((t=e.sent()).done)throw new Error("No data was found for CSV parsing.");return[2,t.value.split(this.delimiter)];case 3:return[2,null]}})})},e.prototype.iterator=function(){return u(this,void 0,void 0,function(){var t,e=this;return c(this,function(n){switch(n.label){case 0:return this.columnNamesValidated?[3,2]:[4,this.setColumnNames()];case 1:n.sent(),n.label=2;case 2:return[4,this.base.iterator()];case 3:return t=n.sent(),this.hasHeader&&(t=t.skip(1)),[2,t.map(function(t){return e.makeDataElement(t)})]}})})},e.prototype.makeDataElement=function(t){for(var e=this.parseRow(t),n={},r={},i=0;i<this.fullColumnNames.length;i++){var a=this.fullColumnNames[i],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){var s=e[i],u=null;if(""===s)if(o&&void 0!==o.default)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error("Required column "+a+" is empty in this line: "+t);u=void 0}else{var c=Number(s);if(isNaN(c))u=o&&"bool"===o.dtype?this.getBoolean(s):s;else if(o&&o.dtype)switch(o.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(s);break;default:u=c}else u=c}o&&o.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:[n,r]},e.prototype.getBoolean=function(t){return"1"===t||"true"===t.toLowerCase()?1:0},e.prototype.parseRow=function(t){for(var e=[],n=0,r=t.length,i=ht,a=0;a<r;a++)switch(i){case ft:switch(t.charAt(a)){case'"':n=a+1,i=pt;break;case this.delimiter:e.push(""),i=ft,n=a+1;break;default:i=ht,n=a}break;case ht:switch(t.charAt(a)){case this.delimiter:e.push(t.substring(n,a)),i=ft,n=a+1}break;case pt:switch(t.charAt(a)){case'"':i=dt}break;case dt:switch(t.charAt(a)){case this.delimiter:e.push(t.substring(n,a-1)),i=ft,n=a+1;break;case'"':i=pt;break;default:i=mt}break;case mt:switch(t.charAt(a)){case'"':i=pt}}return i===dt?e.push(t.substring(n,r-1)):e.push(t.substring(n)),e},e}(it),yt=function(){},vt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.split=function(t){return new bt(this,t)},e}(U),bt=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.impl=new wt(e,n),r}return s(e,t),e.prototype.summary=function(){return this.impl.summary()},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,this.impl.next()]})})},e}(vt),wt=function(t){function e(e,n){var r=t.call(this)||this;return r.upstream=e,r.separator=n,r.carryover="",r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Split('"+this.separator+"')"},e.prototype.pump=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i;return c(this,function(a){switch(a.label){case 0:return[4,this.upstream.next()];case 1:if((t=a.sent()).done)return""===this.carryover?[2,!1]:(this.outputQueue.push(this.carryover),this.carryover="",[2,!0]);for((e=t.value.split(this.separator))[0]=this.carryover+e[0],n=0,r=e.slice(0,-1);n<r.length;n++)i=r[n],this.outputQueue.push(i);return this.carryover=e[e.length-1],[2,!0]}})})},e}(Z),_t=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.decodeUTF8=function(){return new xt(this)},e}(U),xt=function(t){function e(e){var n=t.call(this)||this;return n.upstream=e,n.impl=new Et(e),n}return s(e,t),e.prototype.summary=function(){return this.impl.summary()},e.prototype.next=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,this.impl.next()]})})},e}(vt),Et=function(t){function e(e){var r=t.call(this)||this;if(r.upstream=e,a.f.get("IS_BROWSER"))r.decoder=new TextDecoder("utf-8");else{var i=n(42).StringDecoder;r.decoder=new i("utf8")}return r}return s(e,t),e.prototype.summary=function(){return this.upstream.summary()+" -> Utf8"},e.prototype.pump=function(){return u(this,void 0,void 0,function(){var t,e,n;return c(this,function(r){switch(r.label){case 0:return[4,this.upstream.next()];case 1:return(t=r.sent()).done?[2,!1]:(e=t.value,n=a.f.get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(i.from(e.buffer)),this.outputQueue.push(n),[2,!0])}})})},e}(Z),St=function(t){function e(e,n){void 0===n&&(n={});var r=t.call(this)||this;return r.file=e,r.options=n,a.qe.assert(e instanceof Uint8Array||!!a.f.get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),"FileChunkIterator only supports File, Blob and Uint8Array right now."),r.offset=n.offset||0,r.chunkSize=n.chunkSize||1048576,r}return s(e,t),e.prototype.summary=function(){return"FileChunks "+this.file},e.prototype.next=function(){return u(this,void 0,void 0,function(){var t,e,n=this;return c(this,function(r){switch(r.label){case 0:return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?[2,{value:null,done:!0}]:(t=new Promise(function(t,e){var r=n.offset+n.chunkSize;if(n.file instanceof Uint8Array)t(new Uint8Array(n.file.slice(n.offset,r)));else{var i=new FileReader;i.onload=function(n){var r=i.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(r)},i.onabort=function(t){return e(new Error("Aborted"))},i.onerror=function(t){return e(new Error(t.type))};var a=n.file.slice(n.offset,r);i.readAsArrayBuffer(a)}n.offset=r}),e={},[4,t]);case 1:return[2,(e.value=r.sent(),e.done=!1,e)]}})})},e}(_t);function Nt(t,e){return void 0===e&&(e={}),u(this,void 0,void 0,function(){var r,i,o,s;return c(this,function(u){switch(u.label){case 0:return a.f.get("IS_BROWSER")?[4,fetch(t)]:[3,5];case 1:return(r=u.sent()).ok?[4,r.blob()]:[3,3];case 2:return i=u.sent(),[2,new St(i,e)];case 3:throw new Error(r.statusText);case 4:return[3,9];case 5:if(o=n(221),"string"!=typeof t)throw new Error("URL must be a string. Request objects are not supported in the node.js environment yet.");return[4,o(t)];case 6:return(r=u.sent()).ok?[4,r.buffer()]:[3,8];case 7:return s=u.sent(),[2,new St(s,e)];case 8:throw new Error(r.statusText);case 9:return[2]}})})}var It=function(t){function e(e,n){void 0===n&&(n={});var r=t.call(this)||this;return r.url=e,r.fileOptions=n,r}return s(e,t),e.prototype.iterator=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,Nt(this.url,this.fileOptions)]})})},e}(yt);function Ot(t,e){return void 0===e&&(e={}),new gt(new It(t),e)}function kt(t){var e=this,n=j(t);return at(function(){return u(e,void 0,void 0,function(){return c(this,function(t){return[2,n]})})})}var At=function(t){function e(e,n){void 0===n&&(n={});var r=t.call(this)||this;return r.input=e,r.options=n,r}return s(e,t),e.prototype.iterator=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,new St(this.input,this.options)]})})},e}(yt),Ct="0.1.7"}.call(this,n(11),n(14),n(4).Buffer)},,,function(t,e,n){"use strict";var r=n(2),i=n(86),a=n(3).Buffer,o=new Array(16);function s(){i.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function u(t,e){return t<<e|t>>>32-e}function c(t,e,n,r,i,a,o){return u(t+(e&n|~e&r)+i+a|0,o)+e|0}function l(t,e,n,r,i,a,o){return u(t+(e&r|n&~r)+i+a|0,o)+e|0}function f(t,e,n,r,i,a,o){return u(t+(e^n^r)+i+a|0,o)+e|0}function h(t,e,n,r,i,a,o){return u(t+(n^(e|~r))+i+a|0,o)+e|0}r(s,i),s.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var n=this._a,r=this._b,i=this._c,a=this._d;n=c(n,r,i,a,t[0],3614090360,7),a=c(a,n,r,i,t[1],3905402710,12),i=c(i,a,n,r,t[2],606105819,17),r=c(r,i,a,n,t[3],3250441966,22),n=c(n,r,i,a,t[4],4118548399,7),a=c(a,n,r,i,t[5],1200080426,12),i=c(i,a,n,r,t[6],2821735955,17),r=c(r,i,a,n,t[7],4249261313,22),n=c(n,r,i,a,t[8],1770035416,7),a=c(a,n,r,i,t[9],2336552879,12),i=c(i,a,n,r,t[10],4294925233,17),r=c(r,i,a,n,t[11],2304563134,22),n=c(n,r,i,a,t[12],1804603682,7),a=c(a,n,r,i,t[13],4254626195,12),i=c(i,a,n,r,t[14],2792965006,17),n=l(n,r=c(r,i,a,n,t[15],1236535329,22),i,a,t[1],4129170786,5),a=l(a,n,r,i,t[6],3225465664,9),i=l(i,a,n,r,t[11],643717713,14),r=l(r,i,a,n,t[0],3921069994,20),n=l(n,r,i,a,t[5],3593408605,5),a=l(a,n,r,i,t[10],38016083,9),i=l(i,a,n,r,t[15],3634488961,14),r=l(r,i,a,n,t[4],3889429448,20),n=l(n,r,i,a,t[9],568446438,5),a=l(a,n,r,i,t[14],3275163606,9),i=l(i,a,n,r,t[3],4107603335,14),r=l(r,i,a,n,t[8],1163531501,20),n=l(n,r,i,a,t[13],2850285829,5),a=l(a,n,r,i,t[2],4243563512,9),i=l(i,a,n,r,t[7],1735328473,14),n=f(n,r=l(r,i,a,n,t[12],2368359562,20),i,a,t[5],4294588738,4),a=f(a,n,r,i,t[8],2272392833,11),i=f(i,a,n,r,t[11],1839030562,16),r=f(r,i,a,n,t[14],4259657740,23),n=f(n,r,i,a,t[1],2763975236,4),a=f(a,n,r,i,t[4],1272893353,11),i=f(i,a,n,r,t[7],4139469664,16),r=f(r,i,a,n,t[10],3200236656,23),n=f(n,r,i,a,t[13],681279174,4),a=f(a,n,r,i,t[0],3936430074,11),i=f(i,a,n,r,t[3],3572445317,16),r=f(r,i,a,n,t[6],76029189,23),n=f(n,r,i,a,t[9],3654602809,4),a=f(a,n,r,i,t[12],3873151461,11),i=f(i,a,n,r,t[15],530742520,16),n=h(n,r=f(r,i,a,n,t[2],3299628645,23),i,a,t[0],4096336452,6),a=h(a,n,r,i,t[7],1126891415,10),i=h(i,a,n,r,t[14],2878612391,15),r=h(r,i,a,n,t[5],4237533241,21),n=h(n,r,i,a,t[12],1700485571,6),a=h(a,n,r,i,t[3],2399980690,10),i=h(i,a,n,r,t[10],4293915773,15),r=h(r,i,a,n,t[1],2240044497,21),n=h(n,r,i,a,t[8],1873313359,6),a=h(a,n,r,i,t[15],4264355552,10),i=h(i,a,n,r,t[6],2734768916,15),r=h(r,i,a,n,t[13],1309151649,21),n=h(n,r,i,a,t[4],4149444226,6),a=h(a,n,r,i,t[11],3174756917,10),i=h(i,a,n,r,t[2],718787259,15),r=h(r,i,a,n,t[9],3951481745,21),this._a=this._a+n|0,this._b=this._b+r|0,this._c=this._c+i|0,this._d=this._d+a|0},s.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=a.allocUnsafe(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=s},function(t,e,n){t.exports=i;var r=n(58).EventEmitter;function i(){r.call(this)}n(2)(i,r),i.Readable=n(59),i.Writable=n(144),i.Duplex=n(145),i.Transform=n(146),i.PassThrough=n(147),i.Stream=i,i.prototype.pipe=function(t,e){var n=this;function i(e){t.writable&&!1===t.write(e)&&n.pause&&n.pause()}function a(){n.readable&&n.resume&&n.resume()}n.on("data",i),t.on("drain",a),t._isStdio||e&&!1===e.end||(n.on("end",s),n.on("close",u));var o=!1;function s(){o||(o=!0,t.end())}function u(){o||(o=!0,"function"==typeof t.destroy&&t.destroy())}function c(t){if(l(),0===r.listenerCount(this,"error"))throw t}function l(){n.removeListener("data",i),t.removeListener("drain",a),n.removeListener("end",s),n.removeListener("close",u),n.removeListener("error",c),t.removeListener("error",c),n.removeListener("end",l),n.removeListener("close",l),t.removeListener("close",l)}return n.on("error",c),t.on("error",c),n.on("end",l),n.on("close",l),t.on("close",l),t.emit("pipe",n),t}},function(t,e){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(t){return"function"==typeof t}function i(t){return"object"==typeof t&&null!==t}function a(t){return void 0===t}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},n.prototype.emit=function(t){var e,n,o,s,u,c;if(this._events||(this._events={}),"error"===t&&(!this._events.error||i(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var l=new Error('Uncaught, unspecified "error" event. ('+e+")");throw l.context=e,l}if(a(n=this._events[t]))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:s=Array.prototype.slice.call(arguments,1),n.apply(this,s)}else if(i(n))for(s=Array.prototype.slice.call(arguments,1),o=(c=n.slice()).length,u=0;u<o;u++)c[u].apply(this,s);return!0},n.prototype.addListener=function(t,e){var o;if(!r(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,r(e.listener)?e.listener:e),this._events[t]?i(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,i(this._events[t])&&!this._events[t].warned&&(o=a(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[t].length>o&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(t,e){if(!r(e))throw TypeError("listener must be a function");var n=!1;function i(){this.removeListener(t,i),n||(n=!0,e.apply(this,arguments))}return i.listener=e,this.on(t,i),this},n.prototype.removeListener=function(t,e){var n,a,o,s;if(!r(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(o=(n=this._events[t]).length,a=-1,n===e||r(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(i(n)){for(s=o;s-- >0;)if(n[s]===e||n[s].listener&&n[s].listener===e){a=s;break}if(a<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(a,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},n.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(r(n=this._events[t]))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},n.prototype.listeners=function(t){return this._events&&this._events[t]?r(this._events[t])?[this._events[t]]:this._events[t].slice():[]},n.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(r(e))return 1;if(e)return e.length}return 0},n.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,n){(e=t.exports=n(87)).Stream=e,e.Readable=e,e.Writable=n(60),e.Duplex=n(21),e.Transform=n(90),e.PassThrough=n(143)},function(t,e,n){"use strict";(function(e,r,i){var a=n(41);function o(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,n){var r=t.entry;t.entry=null;for(;r;){var i=r.callback;e.pendingcb--,i(n),r=r.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}(e,t)}}t.exports=v;var s,u=!e.browser&&["v0.10","v0.9."].indexOf(e.version.slice(0,5))>-1?r:a.nextTick;v.WritableState=y;var c=n(31);c.inherits=n(2);var l={deprecate:n(142)},f=n(88),h=n(3).Buffer,p=i.Uint8Array||function(){};var d,m=n(89);function g(){}function y(t,e){s=s||n(21),t=t||{};var r=e instanceof s;this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var i=t.highWaterMark,c=t.writableHighWaterMark,l=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(c||0===c)?c:l,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var f=!1===t.decodeStrings;this.decodeStrings=!f,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var n=t._writableState,r=n.sync,i=n.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(n),e)!function(t,e,n,r,i){--e.pendingcb,n?(a.nextTick(i,r),a.nextTick(S,t,e),t._writableState.errorEmitted=!0,t.emit("error",r)):(i(r),t._writableState.errorEmitted=!0,t.emit("error",r),S(t,e))}(t,n,r,e,i);else{var o=x(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||_(t,n),r?u(w,t,n,o,i):w(t,n,o,i)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function v(t){if(s=s||n(21),!(d.call(v,this)||this instanceof s))return new v(t);this._writableState=new y(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),f.call(this)}function b(t,e,n,r,i,a,o){e.writelen=r,e.writecb=o,e.writing=!0,e.sync=!0,n?t._writev(i,e.onwrite):t._write(i,a,e.onwrite),e.sync=!1}function w(t,e,n,r){n||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,r(),S(t,e)}function _(t,e){e.bufferProcessing=!0;var n=e.bufferedRequest;if(t._writev&&n&&n.next){var r=e.bufferedRequestCount,i=new Array(r),a=e.corkedRequestsFree;a.entry=n;for(var s=0,u=!0;n;)i[s]=n,n.isBuf||(u=!1),n=n.next,s+=1;i.allBuffers=u,b(t,e,!0,e.length,i,"",a.finish),e.pendingcb++,e.lastBufferedRequest=null,a.next?(e.corkedRequestsFree=a.next,a.next=null):e.corkedRequestsFree=new o(e),e.bufferedRequestCount=0}else{for(;n;){var c=n.chunk,l=n.encoding,f=n.callback;if(b(t,e,!1,e.objectMode?1:c.length,c,l,f),n=n.next,e.bufferedRequestCount--,e.writing)break}null===n&&(e.lastBufferedRequest=null)}e.bufferedRequest=n,e.bufferProcessing=!1}function x(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function E(t,e){t._final(function(n){e.pendingcb--,n&&t.emit("error",n),e.prefinished=!0,t.emit("prefinish"),S(t,e)})}function S(t,e){var n=x(e);return n&&(!function(t,e){e.prefinished||e.finalCalled||("function"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,a.nextTick(E,t,e)):(e.prefinished=!0,t.emit("prefinish")))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit("finish"))),n}c.inherits(v,f),y.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(y.prototype,"buffer",{get:l.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(t){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(d=Function.prototype[Symbol.hasInstance],Object.defineProperty(v,Symbol.hasInstance,{value:function(t){return!!d.call(this,t)||this===v&&(t&&t._writableState instanceof y)}})):d=function(t){return t instanceof this},v.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},v.prototype.write=function(t,e,n){var r,i=this._writableState,o=!1,s=!i.objectMode&&(r=t,h.isBuffer(r)||r instanceof p);return s&&!h.isBuffer(t)&&(t=function(t){return h.from(t)}(t)),"function"==typeof e&&(n=e,e=null),s?e="buffer":e||(e=i.defaultEncoding),"function"!=typeof n&&(n=g),i.ended?function(t,e){var n=new Error("write after end");t.emit("error",n),a.nextTick(e,n)}(this,n):(s||function(t,e,n,r){var i=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||e.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(t.emit("error",o),a.nextTick(r,o),i=!1),i}(this,i,t,n))&&(i.pendingcb++,o=function(t,e,n,r,i,a){if(!n){var o=function(t,e,n){t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=h.from(e,n));return e}(e,r,i);r!==o&&(n=!0,i="buffer",r=o)}var s=e.objectMode?1:r.length;e.length+=s;var u=e.length<e.highWaterMark;u||(e.needDrain=!0);if(e.writing||e.corked){var c=e.lastBufferedRequest;e.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:a,next:null},c?c.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else b(t,e,!1,s,r,i,a);return u}(this,i,s,t,e,n)),o},v.prototype.cork=function(){this._writableState.corked++},v.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||_(this,t))},v.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(v.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),v.prototype._write=function(t,e,n){n(new Error("_write() is not implemented"))},v.prototype._writev=null,v.prototype.end=function(t,e,n){var r=this._writableState;"function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!=t&&this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||function(t,e,n){e.ending=!0,S(t,e),n&&(e.finished?a.nextTick(n):t.once("finish",n));e.ended=!0,t.writable=!1}(this,r,n)},Object.defineProperty(v.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),v.prototype.destroy=m.destroy,v.prototype._undestroy=m.undestroy,v.prototype._destroy=function(t,e){this.end(),e(t)}}).call(this,n(14),n(83).setImmediate,n(11))},function(t,e,n){"use strict";var r=n(4).Buffer,i=n(2),a=n(86),o=new Array(16),s=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],u=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],c=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],l=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],f=[0,1518500249,1859775393,2400959708,2840853838],h=[1352829926,1548603684,1836072691,2053994217,0];function p(){a.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function d(t,e){return t<<e|t>>>32-e}function m(t,e,n,r,i,a,o,s){return d(t+(e^n^r)+a+o|0,s)+i|0}function g(t,e,n,r,i,a,o,s){return d(t+(e&n|~e&r)+a+o|0,s)+i|0}function y(t,e,n,r,i,a,o,s){return d(t+((e|~n)^r)+a+o|0,s)+i|0}function v(t,e,n,r,i,a,o,s){return d(t+(e&r|n&~r)+a+o|0,s)+i|0}function b(t,e,n,r,i,a,o,s){return d(t+(e^(n|~r))+a+o|0,s)+i|0}i(p,a),p.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var n=0|this._a,r=0|this._b,i=0|this._c,a=0|this._d,p=0|this._e,w=0|this._a,_=0|this._b,x=0|this._c,E=0|this._d,S=0|this._e,N=0;N<80;N+=1){var I,O;N<16?(I=m(n,r,i,a,p,t[s[N]],f[0],c[N]),O=b(w,_,x,E,S,t[u[N]],h[0],l[N])):N<32?(I=g(n,r,i,a,p,t[s[N]],f[1],c[N]),O=v(w,_,x,E,S,t[u[N]],h[1],l[N])):N<48?(I=y(n,r,i,a,p,t[s[N]],f[2],c[N]),O=y(w,_,x,E,S,t[u[N]],h[2],l[N])):N<64?(I=v(n,r,i,a,p,t[s[N]],f[3],c[N]),O=g(w,_,x,E,S,t[u[N]],h[3],l[N])):(I=b(n,r,i,a,p,t[s[N]],f[4],c[N]),O=m(w,_,x,E,S,t[u[N]],h[4],l[N])),n=p,p=a,a=d(i,10),i=r,r=I,w=S,S=E,E=d(x,10),x=_,_=O}var k=this._b+i+E|0;this._b=this._c+a+S|0,this._c=this._d+p+w|0,this._d=this._e+n+_|0,this._e=this._a+r+x|0,this._a=k},p.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=r.alloc?r.alloc(20):new r(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=p},function(t,e,n){(e=t.exports=function(t){t=t.toLowerCase();var n=e[t];if(!n)throw new Error(t+" is not supported (we accept pull requests)");return new n}).sha=n(148),e.sha1=n(149),e.sha224=n(150),e.sha256=n(91),e.sha384=n(151),e.sha512=n(92)},function(t,e,n){"use strict";e.utils=n(157),e.Cipher=n(158),e.DES=n(159),e.CBC=n(160),e.EDE=n(161)},function(t,e,n){var r=n(162),i=n(170),a=n(102);e.createCipher=e.Cipher=r.createCipher,e.createCipheriv=e.Cipheriv=r.createCipheriv,e.createDecipher=e.Decipher=i.createDecipher,e.createDecipheriv=e.Decipheriv=i.createDecipheriv,e.listCiphers=e.getCiphers=function(){return Object.keys(a)}},function(t,e,n){var r={ECB:n(163),CBC:n(164),CFB:n(165),CFB8:n(166),CFB1:n(167),OFB:n(168),CTR:n(100),GCM:n(100)},i=n(102);for(var a in i)i[a].module=r[i[a].mode];t.exports=i},function(t,e,n){(function(e){var r=n(5),i=n(22);function a(t,n){var i=function(t){var e=o(t);return{blinder:e.toRed(r.mont(t.modulus)).redPow(new r(t.publicExponent)).fromRed(),unblinder:e.invm(t.modulus)}}(n),a=n.modulus.byteLength(),s=(r.mont(n.modulus),new r(t).mul(i.blinder).umod(n.modulus)),u=s.toRed(r.mont(n.prime1)),c=s.toRed(r.mont(n.prime2)),l=n.coefficient,f=n.prime1,h=n.prime2,p=u.redPow(n.exponent1),d=c.redPow(n.exponent2);p=p.fromRed(),d=d.fromRed();var m=p.isub(d).imul(l).umod(f);return m.imul(h),d.iadd(m),new e(d.imul(i.unblinder).umod(n.modulus).toArray(!1,a))}function o(t){for(var e=t.modulus.byteLength(),n=new r(i(e));n.cmp(t.modulus)>=0||!n.umod(t.prime1)||!n.umod(t.prime2);)n=new r(i(e));return n}t.exports=a,a.getr=o}).call(this,n(4).Buffer)},function(t,e,n){var r=e;r.utils=n(15),r.common=n(33),r.sha=n(187),r.ripemd=n(191),r.hmac=n(192),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160},,,,,,,,,,,,,,,,function(t,e,n){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function a(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new a(i.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new a(i.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(136),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(11))},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";e.randomBytes=e.rng=e.pseudoRandomBytes=e.prng=n(22),e.createHash=e.Hash=n(30),e.createHmac=e.Hmac=n(93);var r=n(153),i=Object.keys(r),a=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(i);e.getHashes=function(){return a};var o=n(96);e.pbkdf2=o.pbkdf2,e.pbkdf2Sync=o.pbkdf2Sync;var s=n(155);e.Cipher=s.Cipher,e.createCipher=s.createCipher,e.Cipheriv=s.Cipheriv,e.createCipheriv=s.createCipheriv,e.Decipher=s.Decipher,e.createDecipher=s.createDecipher,e.Decipheriv=s.Decipheriv,e.createDecipheriv=s.createDecipheriv,e.getCiphers=s.getCiphers,e.listCiphers=s.listCiphers;var u=n(172);e.DiffieHellmanGroup=u.DiffieHellmanGroup,e.createDiffieHellmanGroup=u.createDiffieHellmanGroup,e.getDiffieHellman=u.getDiffieHellman,e.createDiffieHellman=u.createDiffieHellman,e.DiffieHellman=u.DiffieHellman;var c=n(178);e.createSign=c.createSign,e.Sign=c.Sign,e.createVerify=c.createVerify,e.Verify=c.Verify,e.createECDH=n(216);var l=n(217);e.publicEncrypt=l.publicEncrypt,e.privateEncrypt=l.privateEncrypt,e.publicDecrypt=l.publicDecrypt,e.privateDecrypt=l.privateDecrypt;var f=n(220);e.randomFill=f.randomFill,e.randomFillSync=f.randomFillSync,e.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},e.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},function(t,e,n){"use strict";var r=n(3).Buffer,i=n(57).Transform;function a(t){i.call(this),this._block=r.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}n(2)(a,i),a.prototype._transform=function(t,e,n){var r=null;try{this.update(t,e)}catch(t){r=t}n(r)},a.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},a.prototype.update=function(t,e){if(function(t,e){if(!r.isBuffer(t)&&"string"!=typeof t)throw new TypeError(e+" must be a string or a buffer")}(t,"Data"),this._finalized)throw new Error("Digest already called");r.isBuffer(t)||(t=r.from(t,e));for(var n=this._block,i=0;this._blockOffset+t.length-i>=this._blockSize;){for(var a=this._blockOffset;a<this._blockSize;)n[a++]=t[i++];this._update(),this._blockOffset=0}for(;i<t.length;)n[this._blockOffset++]=t[i++];for(var o=0,s=8*t.length;s>0;++o)this._length[o]+=s,(s=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*s);return this},a.prototype._update=function(){throw new Error("_update is not implemented")},a.prototype.digest=function(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var n=0;n<4;++n)this._length[n]=0;return e},a.prototype._digest=function(){throw new Error("_digest is not implemented")},t.exports=a},function(t,e,n){"use strict";(function(e,r){var i=n(41);t.exports=b;var a,o=n(84);b.ReadableState=v;n(58).EventEmitter;var s=function(t,e){return t.listeners(e).length},u=n(88),c=n(3).Buffer,l=e.Uint8Array||function(){};var f=n(31);f.inherits=n(2);var h=n(139),p=void 0;p=h&&h.debuglog?h.debuglog("stream"):function(){};var d,m=n(140),g=n(89);f.inherits(b,u);var y=["error","close","destroy","pause","resume"];function v(t,e){t=t||{};var r=e instanceof(a=a||n(21));this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var i=t.highWaterMark,o=t.readableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(o||0===o)?o:s,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new m,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(d||(d=n(42).StringDecoder),this.decoder=new d(t.encoding),this.encoding=t.encoding)}function b(t){if(a=a||n(21),!(this instanceof b))return new b(t);this._readableState=new v(t,this),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),u.call(this)}function w(t,e,n,r,i){var a,o=t._readableState;null===e?(o.reading=!1,function(t,e){if(e.ended)return;if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,S(t)}(t,o)):(i||(a=function(t,e){var n;r=e,c.isBuffer(r)||r instanceof l||"string"==typeof e||void 0===e||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk"));var r;return n}(o,e)),a?t.emit("error",a):o.objectMode||e&&e.length>0?("string"==typeof e||o.objectMode||Object.getPrototypeOf(e)===c.prototype||(e=function(t){return c.from(t)}(e)),r?o.endEmitted?t.emit("error",new Error("stream.unshift() after end event")):_(t,o,e,!0):o.ended?t.emit("error",new Error("stream.push() after EOF")):(o.reading=!1,o.decoder&&!n?(e=o.decoder.write(e),o.objectMode||0!==e.length?_(t,o,e,!1):I(t,o)):_(t,o,e,!1))):r||(o.reading=!1));return function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(o)}function _(t,e,n,r){e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,r?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&S(t)),I(t,e)}Object.defineProperty(b.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),b.prototype.destroy=g.destroy,b.prototype._undestroy=g.undestroy,b.prototype._destroy=function(t,e){this.push(null),e(t)},b.prototype.push=function(t,e){var n,r=this._readableState;return r.objectMode?n=!0:"string"==typeof t&&((e=e||r.defaultEncoding)!==r.encoding&&(t=c.from(t,e),e=""),n=!0),w(this,t,e,!1,n)},b.prototype.unshift=function(t){return w(this,t,null,!0,!1)},b.prototype.isPaused=function(){return!1===this._readableState.flowing},b.prototype.setEncoding=function(t){return d||(d=n(42).StringDecoder),this._readableState.decoder=new d(t),this._readableState.encoding=t,this};var x=8388608;function E(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=x?t=x:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function S(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(p("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?i.nextTick(N,t):N(t))}function N(t){p("emit readable"),t.emit("readable"),C(t)}function I(t,e){e.readingMore||(e.readingMore=!0,i.nextTick(O,t,e))}function O(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(p("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function k(t){p("readable nexttick read 0"),t.read(0)}function A(t,e){e.reading||(p("resume read 0"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit("resume"),C(t),e.flowing&&!e.reading&&t.read(0)}function C(t){var e=t._readableState;for(p("flow",e.flowing);e.flowing&&null!==t.read(););}function P(t,e){return 0===e.length?null:(e.objectMode?n=e.buffer.shift():!t||t>=e.length?(n=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):n=function(t,e,n){var r;t<e.head.data.length?(r=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):r=t===e.head.data.length?e.shift():n?function(t,e){var n=e.head,r=1,i=n.data;t-=i.length;for(;n=n.next;){var a=n.data,o=t>a.length?a.length:t;if(o===a.length?i+=a:i+=a.slice(0,t),0===(t-=o)){o===a.length?(++r,n.next?e.head=n.next:e.head=e.tail=null):(e.head=n,n.data=a.slice(o));break}++r}return e.length-=r,i}(t,e):function(t,e){var n=c.allocUnsafe(t),r=e.head,i=1;r.data.copy(n),t-=r.data.length;for(;r=r.next;){var a=r.data,o=t>a.length?a.length:t;if(a.copy(n,n.length-t,0,o),0===(t-=o)){o===a.length?(++i,r.next?e.head=r.next:e.head=e.tail=null):(e.head=r,r.data=a.slice(o));break}++i}return e.length-=i,n}(t,e);return r}(t,e.buffer,e.decoder),n);var n}function T(t){var e=t._readableState;if(e.length>0)throw new Error('"endReadable()" called on non-empty stream');e.endEmitted||(e.ended=!0,i.nextTick(R,e,t))}function R(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}function D(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1}b.prototype.read=function(t){p("read",t),t=parseInt(t,10);var e=this._readableState,n=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return p("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?T(this):S(this),null;if(0===(t=E(t,e))&&e.ended)return 0===e.length&&T(this),null;var r,i=e.needReadable;return p("need readable",i),(0===e.length||e.length-t<e.highWaterMark)&&p("length less than watermark",i=!0),e.ended||e.reading?p("reading or ended",i=!1):i&&(p("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=E(n,e))),null===(r=t>0?P(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&T(this)),null!==r&&this.emit("data",r),r},b.prototype._read=function(t){this.emit("error",new Error("_read() is not implemented"))},b.prototype.pipe=function(t,e){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=t;break;case 1:a.pipes=[a.pipes,t];break;default:a.pipes.push(t)}a.pipesCount+=1,p("pipe count=%d opts=%j",a.pipesCount,e);var u=(!e||!1!==e.end)&&t!==r.stdout&&t!==r.stderr?l:b;function c(e,r){p("onunpipe"),e===n&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,p("cleanup"),t.removeListener("close",y),t.removeListener("finish",v),t.removeListener("drain",f),t.removeListener("error",g),t.removeListener("unpipe",c),n.removeListener("end",l),n.removeListener("end",b),n.removeListener("data",m),h=!0,!a.awaitDrain||t._writableState&&!t._writableState.needDrain||f())}function l(){p("onend"),t.end()}a.endEmitted?i.nextTick(u):n.once("end",u),t.on("unpipe",c);var f=function(t){return function(){var e=t._readableState;p("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&s(t,"data")&&(e.flowing=!0,C(t))}}(n);t.on("drain",f);var h=!1;var d=!1;function m(e){p("ondata"),d=!1,!1!==t.write(e)||d||((1===a.pipesCount&&a.pipes===t||a.pipesCount>1&&-1!==D(a.pipes,t))&&!h&&(p("false write response, pause",n._readableState.awaitDrain),n._readableState.awaitDrain++,d=!0),n.pause())}function g(e){p("onerror",e),b(),t.removeListener("error",g),0===s(t,"error")&&t.emit("error",e)}function y(){t.removeListener("finish",v),b()}function v(){p("onfinish"),t.removeListener("close",y),b()}function b(){p("unpipe"),n.unpipe(t)}return n.on("data",m),function(t,e,n){if("function"==typeof t.prependListener)return t.prependListener(e,n);t._events&&t._events[e]?o(t._events[e])?t._events[e].unshift(n):t._events[e]=[n,t._events[e]]:t.on(e,n)}(t,"error",g),t.once("close",y),t.once("finish",v),t.emit("pipe",n),a.flowing||(p("pipe resume"),n.resume()),t},b.prototype.unpipe=function(t){var e=this._readableState,n={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this,n),this);if(!t){var r=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var a=0;a<i;a++)r[a].emit("unpipe",this,n);return this}var o=D(e.pipes,t);return-1===o?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this,n),this)},b.prototype.on=function(t,e){var n=u.prototype.on.call(this,t,e);if("data"===t)!1!==this._readableState.flowing&&this.resume();else if("readable"===t){var r=this._readableState;r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.emittedReadable=!1,r.reading?r.length&&S(this):i.nextTick(k,this))}return n},b.prototype.addListener=b.prototype.on,b.prototype.resume=function(){var t=this._readableState;return t.flowing||(p("resume"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,i.nextTick(A,t,e))}(this,t)),this},b.prototype.pause=function(){return p("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(p("pause"),this._readableState.flowing=!1,this.emit("pause")),this},b.prototype.wrap=function(t){var e=this,n=this._readableState,r=!1;for(var i in t.on("end",function(){if(p("wrapped end"),n.decoder&&!n.ended){var t=n.decoder.end();t&&t.length&&e.push(t)}e.push(null)}),t.on("data",function(i){(p("wrapped data"),n.decoder&&(i=n.decoder.write(i)),n.objectMode&&null==i)||(n.objectMode||i&&i.length)&&(e.push(i)||(r=!0,t.pause()))}),t)void 0===this[i]&&"function"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));for(var a=0;a<y.length;a++)t.on(y[a],this.emit.bind(this,y[a]));return this._read=function(e){p("wrapped _read",e),r&&(r=!1,t.resume())},this},Object.defineProperty(b.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),b._fromList=P}).call(this,n(11),n(14))},function(t,e,n){t.exports=n(58).EventEmitter},function(t,e,n){"use strict";var r=n(41);function i(t,e){t.emit("error",e)}t.exports={destroy:function(t,e){var n=this,a=this._readableState&&this._readableState.destroyed,o=this._writableState&&this._writableState.destroyed;return a||o?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||r.nextTick(i,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!e&&t?(r.nextTick(i,n,t),n._writableState&&(n._writableState.errorEmitted=!0)):e&&e(t)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(t,e,n){"use strict";t.exports=o;var r=n(21),i=n(31);function a(t,e){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(!r)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,null!=e&&this.push(e),r(t);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function o(t){if(!(this instanceof o))return new o(t);r.call(this,t),this._transformState={afterTransform:a.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",s)}function s(){var t=this;"function"==typeof this._flush?this._flush(function(e,n){u(t,e,n)}):u(this,null,null)}function u(t,e,n){if(e)return t.emit("error",e);if(null!=n&&t.push(n),t._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(t._transformState.transforming)throw new Error("Calling transform done when still transforming");return t.push(null)}i.inherits=n(2),i.inherits(o,r),o.prototype.push=function(t,e){return this._transformState.needTransform=!1,r.prototype.push.call(this,t,e)},o.prototype._transform=function(t,e,n){throw new Error("_transform() is not implemented")},o.prototype._write=function(t,e,n){var r=this._transformState;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},o.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},o.prototype._destroy=function(t,e){var n=this;r.prototype._destroy.call(this,t,function(t){e(t),n.emit("close")})}},function(t,e,n){var r=n(2),i=n(23),a=n(3).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=new Array(64);function u(){this.init(),this._w=s,i.call(this,64,56)}function c(t,e,n){return n^t&(e^n)}function l(t,e,n){return t&e|n&(t|e)}function f(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function h(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function p(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}r(u,i),u.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},u.prototype._update=function(t){for(var e,n=this._w,r=0|this._a,i=0|this._b,a=0|this._c,s=0|this._d,u=0|this._e,d=0|this._f,m=0|this._g,g=0|this._h,y=0;y<16;++y)n[y]=t.readInt32BE(4*y);for(;y<64;++y)n[y]=0|(((e=n[y-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+n[y-7]+p(n[y-15])+n[y-16];for(var v=0;v<64;++v){var b=g+h(u)+c(u,d,m)+o[v]+n[v]|0,w=f(r)+l(r,i,a)|0;g=m,m=d,d=u,u=s+b|0,s=a,a=i,i=r,r=b+w|0}this._a=r+this._a|0,this._b=i+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0,this._f=d+this._f|0,this._g=m+this._g|0,this._h=g+this._h|0},u.prototype._hash=function(){var t=a.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=u},function(t,e,n){var r=n(2),i=n(23),a=n(3).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],s=new Array(160);function u(){this.init(),this._w=s,i.call(this,128,112)}function c(t,e,n){return n^t&(e^n)}function l(t,e,n){return t&e|n&(t|e)}function f(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function h(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function p(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function d(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function m(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function g(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function y(t,e){return t>>>0<e>>>0?1:0}r(u,i),u.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},u.prototype._update=function(t){for(var e=this._w,n=0|this._ah,r=0|this._bh,i=0|this._ch,a=0|this._dh,s=0|this._eh,u=0|this._fh,v=0|this._gh,b=0|this._hh,w=0|this._al,_=0|this._bl,x=0|this._cl,E=0|this._dl,S=0|this._el,N=0|this._fl,I=0|this._gl,O=0|this._hl,k=0;k<32;k+=2)e[k]=t.readInt32BE(4*k),e[k+1]=t.readInt32BE(4*k+4);for(;k<160;k+=2){var A=e[k-30],C=e[k-30+1],P=p(A,C),T=d(C,A),R=m(A=e[k-4],C=e[k-4+1]),D=g(C,A),M=e[k-14],j=e[k-14+1],B=e[k-32],L=e[k-32+1],z=T+j|0,F=P+M+y(z,T)|0;F=(F=F+R+y(z=z+D|0,D)|0)+B+y(z=z+L|0,L)|0,e[k]=F,e[k+1]=z}for(var U=0;U<160;U+=2){F=e[U],z=e[U+1];var V=l(n,r,i),W=l(w,_,x),q=f(n,w),$=f(w,n),H=h(s,S),K=h(S,s),G=o[U],X=o[U+1],Y=c(s,u,v),J=c(S,N,I),Z=O+K|0,Q=b+H+y(Z,O)|0;Q=(Q=(Q=Q+Y+y(Z=Z+J|0,J)|0)+G+y(Z=Z+X|0,X)|0)+F+y(Z=Z+z|0,z)|0;var tt=$+W|0,et=q+V+y(tt,$)|0;b=v,O=I,v=u,I=N,u=s,N=S,s=a+Q+y(S=E+Z|0,E)|0,a=i,E=x,i=r,x=_,r=n,_=w,n=Q+et+y(w=Z+tt|0,Z)|0}this._al=this._al+w|0,this._bl=this._bl+_|0,this._cl=this._cl+x|0,this._dl=this._dl+E|0,this._el=this._el+S|0,this._fl=this._fl+N|0,this._gl=this._gl+I|0,this._hl=this._hl+O|0,this._ah=this._ah+n+y(this._al,w)|0,this._bh=this._bh+r+y(this._bl,_)|0,this._ch=this._ch+i+y(this._cl,x)|0,this._dh=this._dh+a+y(this._dl,E)|0,this._eh=this._eh+s+y(this._el,S)|0,this._fh=this._fh+u+y(this._fl,N)|0,this._gh=this._gh+v+y(this._gl,I)|0,this._hh=this._hh+b+y(this._hl,O)|0},u.prototype._hash=function(){var t=a.allocUnsafe(64);function e(e,n,r){t.writeInt32BE(e,r),t.writeInt32BE(n,r+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=u},function(t,e,n){"use strict";var r=n(2),i=n(152),a=n(18),o=n(3).Buffer,s=n(94),u=n(61),c=n(62),l=o.alloc(128);function f(t,e){a.call(this,"digest"),"string"==typeof e&&(e=o.from(e));var n="sha512"===t||"sha384"===t?128:64;(this._alg=t,this._key=e,e.length>n)?e=("rmd160"===t?new u:c(t)).update(e).digest():e.length<n&&(e=o.concat([e,l],n));for(var r=this._ipad=o.allocUnsafe(n),i=this._opad=o.allocUnsafe(n),s=0;s<n;s++)r[s]=54^e[s],i[s]=92^e[s];this._hash="rmd160"===t?new u:c(t),this._hash.update(r)}r(f,a),f.prototype._update=function(t){this._hash.update(t)},f.prototype._final=function(){var t=this._hash.digest();return("rmd160"===this._alg?new u:c(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,e){return"rmd160"===(t=t.toLowerCase())||"ripemd160"===t?new f("rmd160",e):"md5"===t?new i(s,e):new f(t,e)}},function(t,e,n){var r=n(56);t.exports=function(t){return(new r).update(t).digest()}},function(t){t.exports={sha224WithRSAEncryption:{sign:"rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},"RSA-SHA224":{sign:"ecdsa/rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},sha256WithRSAEncryption:{sign:"rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},"RSA-SHA256":{sign:"ecdsa/rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},sha384WithRSAEncryption:{sign:"rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},"RSA-SHA384":{sign:"ecdsa/rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},sha512WithRSAEncryption:{sign:"rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA512":{sign:"ecdsa/rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA1":{sign:"rsa",hash:"sha1",id:"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{sign:"ecdsa",hash:"sha1",id:""},sha256:{sign:"ecdsa",hash:"sha256",id:""},sha224:{sign:"ecdsa",hash:"sha224",id:""},sha384:{sign:"ecdsa",hash:"sha384",id:""},sha512:{sign:"ecdsa",hash:"sha512",id:""},"DSA-SHA":{sign:"dsa",hash:"sha1",id:""},"DSA-SHA1":{sign:"dsa",hash:"sha1",id:""},DSA:{sign:"dsa",hash:"sha1",id:""},"DSA-WITH-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-WITH-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-WITH-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-WITH-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-RIPEMD160":{sign:"dsa",hash:"rmd160",id:""},ripemd160WithRSA:{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},"RSA-RIPEMD160":{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},md5WithRSAEncryption:{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"},"RSA-MD5":{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"}}},function(t,e,n){e.pbkdf2=n(154),e.pbkdf2Sync=n(99)},function(t,e,n){(function(e){var n=Math.pow(2,30)-1;function r(t,n){if("string"!=typeof t&&!e.isBuffer(t))throw new TypeError(n+" must be a buffer or string")}t.exports=function(t,e,i,a){if(r(t,"Password"),r(e,"Salt"),"number"!=typeof i)throw new TypeError("Iterations not a number");if(i<0)throw new TypeError("Bad iterations");if("number"!=typeof a)throw new TypeError("Key length not a number");if(a<0||a>n||a!=a)throw new TypeError("Bad key length")}}).call(this,n(4).Buffer)},function(t,e,n){(function(e){var n;e.browser?n="utf-8":n=parseInt(e.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary";t.exports=n}).call(this,n(14))},function(t,e,n){var r=n(94),i=n(61),a=n(62),o=n(97),s=n(98),u=n(3).Buffer,c=u.alloc(128),l={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function f(t,e,n){var o=function(t){return"rmd160"===t||"ripemd160"===t?function(t){return(new i).update(t).digest()}:"md5"===t?r:function(e){return a(t).update(e).digest()}}(t),s="sha512"===t||"sha384"===t?128:64;e.length>s?e=o(e):e.length<s&&(e=u.concat([e,c],s));for(var f=u.allocUnsafe(s+l[t]),h=u.allocUnsafe(s+l[t]),p=0;p<s;p++)f[p]=54^e[p],h[p]=92^e[p];var d=u.allocUnsafe(s+n+4);f.copy(d,0,0,s),this.ipad1=d,this.ipad2=f,this.opad=h,this.alg=t,this.blocksize=s,this.hash=o,this.size=l[t]}f.prototype.run=function(t,e){return t.copy(e,this.blocksize),this.hash(e).copy(this.opad,this.blocksize),this.hash(this.opad)},t.exports=function(t,e,n,r,i){o(t,e,n,r),u.isBuffer(t)||(t=u.from(t,s)),u.isBuffer(e)||(e=u.from(e,s));var a=new f(i=i||"sha1",t,e.length),c=u.allocUnsafe(r),h=u.allocUnsafe(e.length+4);e.copy(h,0,0,e.length);for(var p=0,d=l[i],m=Math.ceil(r/d),g=1;g<=m;g++){h.writeUInt32BE(g,e.length);for(var y=a.run(h,a.ipad1),v=y,b=1;b<n;b++){v=a.run(v,a.ipad2);for(var w=0;w<d;w++)y[w]^=v[w]}y.copy(c,p),p+=d}return c}},function(t,e,n){var r=n(32),i=n(3).Buffer,a=n(101);function o(t){var e=t._cipher.encryptBlockRaw(t._prev);return a(t._prev),e}e.encrypt=function(t,e){var n=Math.ceil(e.length/16),a=t._cache.length;t._cache=i.concat([t._cache,i.allocUnsafe(16*n)]);for(var s=0;s<n;s++){var u=o(t),c=a+16*s;t._cache.writeUInt32BE(u[0],c+0),t._cache.writeUInt32BE(u[1],c+4),t._cache.writeUInt32BE(u[2],c+8),t._cache.writeUInt32BE(u[3],c+12)}var l=t._cache.slice(0,e.length);return t._cache=t._cache.slice(e.length),r(e,l)}},function(t,e){t.exports=function(t){for(var e,n=t.length;n--;){if(255!==(e=t.readUInt8(n))){e++,t.writeUInt8(e,n);break}t.writeUInt8(0,n)}}},function(t){t.exports={"aes-128-ecb":{cipher:"AES",key:128,iv:0,mode:"ECB",type:"block"},"aes-192-ecb":{cipher:"AES",key:192,iv:0,mode:"ECB",type:"block"},"aes-256-ecb":{cipher:"AES",key:256,iv:0,mode:"ECB",type:"block"},"aes-128-cbc":{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},"aes-192-cbc":{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},"aes-256-cbc":{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},aes128:{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},aes192:{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},aes256:{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},"aes-128-cfb":{cipher:"AES",key:128,iv:16,mode:"CFB",type:"stream"},"aes-192-cfb":{cipher:"AES",key:192,iv:16,mode:"CFB",type:"stream"},"aes-256-cfb":{cipher:"AES",key:256,iv:16,mode:"CFB",type:"stream"},"aes-128-cfb8":{cipher:"AES",key:128,iv:16,mode:"CFB8",type:"stream"},"aes-192-cfb8":{cipher:"AES",key:192,iv:16,mode:"CFB8",type:"stream"},"aes-256-cfb8":{cipher:"AES",key:256,iv:16,mode:"CFB8",type:"stream"},"aes-128-cfb1":{cipher:"AES",key:128,iv:16,mode:"CFB1",type:"stream"},"aes-192-cfb1":{cipher:"AES",key:192,iv:16,mode:"CFB1",type:"stream"},"aes-256-cfb1":{cipher:"AES",key:256,iv:16,mode:"CFB1",type:"stream"},"aes-128-ofb":{cipher:"AES",key:128,iv:16,mode:"OFB",type:"stream"},"aes-192-ofb":{cipher:"AES",key:192,iv:16,mode:"OFB",type:"stream"},"aes-256-ofb":{cipher:"AES",key:256,iv:16,mode:"OFB",type:"stream"},"aes-128-ctr":{cipher:"AES",key:128,iv:16,mode:"CTR",type:"stream"},"aes-192-ctr":{cipher:"AES",key:192,iv:16,mode:"CTR",type:"stream"},"aes-256-ctr":{cipher:"AES",key:256,iv:16,mode:"CTR",type:"stream"},"aes-128-gcm":{cipher:"AES",key:128,iv:12,mode:"GCM",type:"auth"},"aes-192-gcm":{cipher:"AES",key:192,iv:12,mode:"GCM",type:"auth"},"aes-256-gcm":{cipher:"AES",key:256,iv:12,mode:"GCM",type:"auth"}}},function(t,e,n){var r=n(43),i=n(3).Buffer,a=n(18),o=n(2),s=n(169),u=n(32),c=n(101);function l(t,e,n,o){a.call(this);var u=i.alloc(4,0);this._cipher=new r.AES(e);var l=this._cipher.encryptBlock(u);this._ghash=new s(l),n=function(t,e,n){if(12===e.length)return t._finID=i.concat([e,i.from([0,0,0,1])]),i.concat([e,i.from([0,0,0,2])]);var r=new s(n),a=e.length,o=a%16;r.update(e),o&&(o=16-o,r.update(i.alloc(o,0))),r.update(i.alloc(8,0));var u=8*a,l=i.alloc(8);l.writeUIntBE(u,0,8),r.update(l),t._finID=r.state;var f=i.from(t._finID);return c(f),f}(this,n,l),this._prev=i.from(n),this._cache=i.allocUnsafe(0),this._secCache=i.allocUnsafe(0),this._decrypt=o,this._alen=0,this._len=0,this._mode=t,this._authTag=null,this._called=!1}o(l,a),l.prototype._update=function(t){if(!this._called&&this._alen){var e=16-this._alen%16;e<16&&(e=i.alloc(e,0),this._ghash.update(e))}this._called=!0;var n=this._mode.encrypt(this,t);return this._decrypt?this._ghash.update(t):this._ghash.update(n),this._len+=t.length,n},l.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var t=u(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(t,e){var n=0;t.length!==e.length&&n++;for(var r=Math.min(t.length,e.length),i=0;i<r;++i)n+=t[i]^e[i];return n}(t,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=t,this._cipher.scrub()},l.prototype.getAuthTag=function(){if(this._decrypt||!i.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},l.prototype.setAuthTag=function(t){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=t},l.prototype.setAAD=function(t){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(t),this._alen+=t.length},t.exports=l},function(t,e,n){var r=n(43),i=n(3).Buffer,a=n(18);function o(t,e,n,o){a.call(this),this._cipher=new r.AES(e),this._prev=i.from(n),this._cache=i.allocUnsafe(0),this._secCache=i.allocUnsafe(0),this._decrypt=o,this._mode=t}n(2)(o,a),o.prototype._update=function(t){return this._mode.encrypt(this,t,this._decrypt)},o.prototype._final=function(){this._cipher.scrub()},t.exports=o},function(t,e,n){var r=n(22);t.exports=v,v.simpleSieve=g,v.fermatTest=y;var i=n(5),a=new i(24),o=new(n(106)),s=new i(1),u=new i(2),c=new i(5),l=(new i(16),new i(8),new i(10)),f=new i(3),h=(new i(7),new i(11)),p=new i(4),d=(new i(12),null);function m(){if(null!==d)return d;var t=[];t[0]=2;for(var e=1,n=3;n<1048576;n+=2){for(var r=Math.ceil(Math.sqrt(n)),i=0;i<e&&t[i]<=r&&n%t[i]!=0;i++);e!==i&&t[i]<=r||(t[e++]=n)}return d=t,t}function g(t){for(var e=m(),n=0;n<e.length;n++)if(0===t.modn(e[n]))return 0===t.cmpn(e[n]);return!0}function y(t){var e=i.mont(t);return 0===u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1)}function v(t,e){if(t<16)return new i(2===e||5===e?[140,123]:[140,39]);var n,d;for(e=new i(e);;){for(n=new i(r(Math.ceil(t/8)));n.bitLength()>t;)n.ishrn(1);if(n.isEven()&&n.iadd(s),n.testn(1)||n.iadd(u),e.cmp(u)){if(!e.cmp(c))for(;n.mod(l).cmp(f);)n.iadd(p)}else for(;n.mod(a).cmp(h);)n.iadd(p);if(g(d=n.shrn(1))&&g(n)&&y(d)&&y(n)&&o.test(d)&&o.test(n))return n}}},function(t,e,n){var r=n(5),i=n(107);function a(t){this.rand=t||new i.Rand}t.exports=a,a.create=function(t){return new a(t)},a.prototype._randbelow=function(t){var e=t.bitLength(),n=Math.ceil(e/8);do{var i=new r(this.rand.generate(n))}while(i.cmp(t)>=0);return i},a.prototype._randrange=function(t,e){var n=e.sub(t);return t.add(this._randbelow(n))},a.prototype.test=function(t,e,n){var i=t.bitLength(),a=r.mont(t),o=new r(1).toRed(a);e||(e=Math.max(1,i/48|0));for(var s=t.subn(1),u=0;!s.testn(u);u++);for(var c=t.shrn(u),l=s.toRed(a);e>0;e--){var f=this._randrange(new r(2),s);n&&n(f);var h=f.toRed(a).redPow(c);if(0!==h.cmp(o)&&0!==h.cmp(l)){for(var p=1;p<u;p++){if(0===(h=h.redSqr()).cmp(o))return!1;if(0===h.cmp(l))break}if(p===u)return!1}}return!0},a.prototype.getDivisor=function(t,e){var n=t.bitLength(),i=r.mont(t),a=new r(1).toRed(i);e||(e=Math.max(1,n/48|0));for(var o=t.subn(1),s=0;!o.testn(s);s++);for(var u=t.shrn(s),c=o.toRed(i);e>0;e--){var l=this._randrange(new r(2),o),f=t.gcd(l);if(0!==f.cmpn(1))return f;var h=l.toRed(i).redPow(u);if(0!==h.cmp(a)&&0!==h.cmp(c)){for(var p=1;p<s;p++){if(0===(h=h.redSqr()).cmp(a))return h.fromRed().subn(1).gcd(t);if(0===h.cmp(c))break}if(p===s)return(h=h.redSqr()).fromRed().subn(1).gcd(t)}}return!1}},function(t,e,n){var r;function i(t){this.rand=t}if(t.exports=function(t){return r||(r=new i(null)),r.generate(t)},t.exports.Rand=i,i.prototype.generate=function(t){return this._rand(t)},i.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var e=new Uint8Array(t),n=0;n<e.length;n++)e[n]=this.rand.getByte();return e},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.crypto.getRandomValues(e),e}:self.msCrypto&&self.msCrypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.msCrypto.getRandomValues(e),e}:"object"==typeof window&&(i.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var a=n(175);if("function"!=typeof a.randomBytes)throw new Error("Not supported");i.prototype._rand=function(t){return a.randomBytes(t)}}catch(t){}},function(t,e,n){"use strict";var r=e;function i(t){return 1===t.length?"0"+t:t}function a(t){for(var e="",n=0;n<t.length;n++)e+=i(t[n].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var n=[];if("string"!=typeof t){for(var r=0;r<t.length;r++)n[r]=0|t[r];return n}if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),r=0;r<t.length;r+=2)n.push(parseInt(t[r]+t[r+1],16));else for(r=0;r<t.length;r++){var i=t.charCodeAt(r),a=i>>8,o=255&i;a?n.push(a,o):n.push(o)}return n},r.zero2=i,r.toHex=a,r.encode=function(t,e){return"hex"===e?a(t):t}},function(t,e,n){"use strict";var r=n(15).rotr32;function i(t,e,n){return t&e^~t&n}function a(t,e,n){return t&e^t&n^e&n}function o(t,e,n){return t^e^n}e.ft_1=function(t,e,n,r){return 0===t?i(e,n,r):1===t||3===t?o(e,n,r):2===t?a(e,n,r):void 0},e.ch32=i,e.maj32=a,e.p32=o,e.s0_256=function(t){return r(t,2)^r(t,13)^r(t,22)},e.s1_256=function(t){return r(t,6)^r(t,11)^r(t,25)},e.g0_256=function(t){return r(t,7)^r(t,18)^t>>>3},e.g1_256=function(t){return r(t,17)^r(t,19)^t>>>10}},function(t,e,n){"use strict";var r=n(15),i=n(33),a=n(109),o=n(12),s=r.sum32,u=r.sum32_4,c=r.sum32_5,l=a.ch32,f=a.maj32,h=a.s0_256,p=a.s1_256,d=a.g0_256,m=a.g1_256,g=i.BlockHash,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;g.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=y,this.W=new Array(64)}r.inherits(v,g),t.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(t,e){for(var n=this.W,r=0;r<16;r++)n[r]=t[e+r];for(;r<n.length;r++)n[r]=u(m(n[r-2]),n[r-7],d(n[r-15]),n[r-16]);var i=this.h[0],a=this.h[1],g=this.h[2],y=this.h[3],v=this.h[4],b=this.h[5],w=this.h[6],_=this.h[7];for(o(this.k.length===n.length),r=0;r<n.length;r++){var x=c(_,p(v),l(v,b,w),this.k[r],n[r]),E=s(h(i),f(i,a,g));_=w,w=b,b=v,v=s(y,x),y=g,g=a,a=i,i=s(x,E)}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],g),this.h[3]=s(this.h[3],y),this.h[4]=s(this.h[4],v),this.h[5]=s(this.h[5],b),this.h[6]=s(this.h[6],w),this.h[7]=s(this.h[7],_)},v.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(t,e,n){"use strict";var r=n(15),i=n(33),a=n(12),o=r.rotr64_hi,s=r.rotr64_lo,u=r.shr64_hi,c=r.shr64_lo,l=r.sum64,f=r.sum64_hi,h=r.sum64_lo,p=r.sum64_4_hi,d=r.sum64_4_lo,m=r.sum64_5_hi,g=r.sum64_5_lo,y=i.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function b(){if(!(this instanceof b))return new b;y.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160)}function w(t,e,n,r,i){var a=t&n^~t&i;return a<0&&(a+=4294967296),a}function _(t,e,n,r,i,a){var o=e&r^~e&a;return o<0&&(o+=4294967296),o}function x(t,e,n,r,i){var a=t&n^t&i^n&i;return a<0&&(a+=4294967296),a}function E(t,e,n,r,i,a){var o=e&r^e&a^r&a;return o<0&&(o+=4294967296),o}function S(t,e){var n=o(t,e,28)^o(e,t,2)^o(e,t,7);return n<0&&(n+=4294967296),n}function N(t,e){var n=s(t,e,28)^s(e,t,2)^s(e,t,7);return n<0&&(n+=4294967296),n}function I(t,e){var n=o(t,e,14)^o(t,e,18)^o(e,t,9);return n<0&&(n+=4294967296),n}function O(t,e){var n=s(t,e,14)^s(t,e,18)^s(e,t,9);return n<0&&(n+=4294967296),n}function k(t,e){var n=o(t,e,1)^o(t,e,8)^u(t,e,7);return n<0&&(n+=4294967296),n}function A(t,e){var n=s(t,e,1)^s(t,e,8)^c(t,e,7);return n<0&&(n+=4294967296),n}function C(t,e){var n=o(t,e,19)^o(e,t,29)^u(t,e,6);return n<0&&(n+=4294967296),n}function P(t,e){var n=s(t,e,19)^s(e,t,29)^c(t,e,6);return n<0&&(n+=4294967296),n}r.inherits(b,y),t.exports=b,b.blockSize=1024,b.outSize=512,b.hmacStrength=192,b.padLength=128,b.prototype._prepareBlock=function(t,e){for(var n=this.W,r=0;r<32;r++)n[r]=t[e+r];for(;r<n.length;r+=2){var i=C(n[r-4],n[r-3]),a=P(n[r-4],n[r-3]),o=n[r-14],s=n[r-13],u=k(n[r-30],n[r-29]),c=A(n[r-30],n[r-29]),l=n[r-32],f=n[r-31];n[r]=p(i,a,o,s,u,c,l,f),n[r+1]=d(i,a,o,s,u,c,l,f)}},b.prototype._update=function(t,e){this._prepareBlock(t,e);var n=this.W,r=this.h[0],i=this.h[1],o=this.h[2],s=this.h[3],u=this.h[4],c=this.h[5],p=this.h[6],d=this.h[7],y=this.h[8],v=this.h[9],b=this.h[10],k=this.h[11],A=this.h[12],C=this.h[13],P=this.h[14],T=this.h[15];a(this.k.length===n.length);for(var R=0;R<n.length;R+=2){var D=P,M=T,j=I(y,v),B=O(y,v),L=w(y,v,b,k,A),z=_(y,v,b,k,A,C),F=this.k[R],U=this.k[R+1],V=n[R],W=n[R+1],q=m(D,M,j,B,L,z,F,U,V,W),$=g(D,M,j,B,L,z,F,U,V,W);D=S(r,i),M=N(r,i),j=x(r,i,o,s,u),B=E(r,i,o,s,u,c);var H=f(D,M,j,B),K=h(D,M,j,B);P=A,T=C,A=b,C=k,b=y,k=v,y=f(p,d,q,$),v=h(d,d,q,$),p=u,d=c,u=o,c=s,o=r,s=i,r=f(q,$,H,K),i=h(q,$,H,K)}l(this.h,0,r,i),l(this.h,2,o,s),l(this.h,4,u,c),l(this.h,6,p,d),l(this.h,8,y,v),l(this.h,10,b,k),l(this.h,12,A,C),l(this.h,14,P,T)},b.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(t,e,n){var r=n(2),i=n(35).Reporter,a=n(4).Buffer;function o(t,e){i.call(this,e),a.isBuffer(t)?(this.base=t,this.offset=0,this.length=t.length):this.error("Input not Buffer")}function s(t,e){if(Array.isArray(t))this.length=0,this.value=t.map(function(t){return t instanceof s||(t=new s(t,e)),this.length+=t.length,t},this);else if("number"==typeof t){if(!(0<=t&&t<=255))return e.error("non-byte EncoderBuffer value");this.value=t,this.length=1}else if("string"==typeof t)this.value=t,this.length=a.byteLength(t);else{if(!a.isBuffer(t))return e.error("Unsupported type: "+typeof t);this.value=t,this.length=t.length}}r(o,i),e.DecoderBuffer=o,o.prototype.save=function(){return{offset:this.offset,reporter:i.prototype.save.call(this)}},o.prototype.restore=function(t){var e=new o(this.base);return e.offset=t.offset,e.length=this.offset,this.offset=t.offset,i.prototype.restore.call(this,t.reporter),e},o.prototype.isEmpty=function(){return this.offset===this.length},o.prototype.readUInt8=function(t){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(t||"DecoderBuffer overrun")},o.prototype.skip=function(t,e){if(!(this.offset+t<=this.length))return this.error(e||"DecoderBuffer overrun");var n=new o(this.base);return n._reporterState=this._reporterState,n.offset=this.offset,n.length=this.offset+t,this.offset+=t,n},o.prototype.raw=function(t){return this.base.slice(t?t.offset:this.offset,this.length)},e.EncoderBuffer=s,s.prototype.join=function(t,e){return t||(t=new a(this.length)),e||(e=0),0===this.length?t:(Array.isArray(this.value)?this.value.forEach(function(n){n.join(t,e),e+=n.length}):("number"==typeof this.value?t[e]=this.value:"string"==typeof this.value?t.write(this.value,e):a.isBuffer(this.value)&&this.value.copy(t,e),e+=this.length),t)}},function(t,e,n){var r=e;r._reverse=function(t){var e={};return Object.keys(t).forEach(function(n){(0|n)==n&&(n|=0);var r=t[n];e[r]=n}),e},r.der=n(207)},function(t,e,n){var r=n(2),i=n(34),a=i.base,o=i.bignum,s=i.constants.der;function u(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new c,this.tree._init(t.body)}function c(t){a.Node.call(this,"der",t)}function l(t,e){var n=t.readUInt8(e);if(t.isError(n))return n;var r=s.tagClass[n>>6],i=0==(32&n);if(31==(31&n)){var a=n;for(n=0;128==(128&a);){if(a=t.readUInt8(e),t.isError(a))return a;n<<=7,n|=127&a}}else n&=31;return{cls:r,primitive:i,tag:n,tagStr:s.tag[n]}}function f(t,e,n){var r=t.readUInt8(n);if(t.isError(r))return r;if(!e&&128===r)return null;if(0==(128&r))return r;var i=127&r;if(i>4)return t.error("length octect is too long");r=0;for(var a=0;a<i;a++){r<<=8;var o=t.readUInt8(n);if(t.isError(o))return o;r|=o}return r}t.exports=u,u.prototype.decode=function(t,e){return t instanceof a.DecoderBuffer||(t=new a.DecoderBuffer(t,e)),this.tree._decode(t,e)},r(c,a.Node),c.prototype._peekTag=function(t,e,n){if(t.isEmpty())return!1;var r=t.save(),i=l(t,'Failed to peek tag: "'+e+'"');return t.isError(i)?i:(t.restore(r),i.tag===e||i.tagStr===e||i.tagStr+"of"===e||n)},c.prototype._decodeTag=function(t,e,n){var r=l(t,'Failed to decode tag of "'+e+'"');if(t.isError(r))return r;var i=f(t,r.primitive,'Failed to get length of "'+e+'"');if(t.isError(i))return i;if(!n&&r.tag!==e&&r.tagStr!==e&&r.tagStr+"of"!==e)return t.error('Failed to match tag: "'+e+'"');if(r.primitive||null!==i)return t.skip(i,'Failed to match body of: "'+e+'"');var a=t.save(),o=this._skipUntilEnd(t,'Failed to skip indefinite length body: "'+this.tag+'"');return t.isError(o)?o:(i=t.offset-a.offset,t.restore(a),t.skip(i,'Failed to match body of: "'+e+'"'))},c.prototype._skipUntilEnd=function(t,e){for(;;){var n=l(t,e);if(t.isError(n))return n;var r,i=f(t,n.primitive,e);if(t.isError(i))return i;if(r=n.primitive||null!==i?t.skip(i):this._skipUntilEnd(t,e),t.isError(r))return r;if("end"===n.tagStr)break}},c.prototype._decodeList=function(t,e,n,r){for(var i=[];!t.isEmpty();){var a=this._peekTag(t,"end");if(t.isError(a))return a;var o=n.decode(t,"der",r);if(t.isError(o)&&a)break;i.push(o)}return i},c.prototype._decodeStr=function(t,e){if("bitstr"===e){var n=t.readUInt8();return t.isError(n)?n:{unused:n,data:t.raw()}}if("bmpstr"===e){var r=t.raw();if(r.length%2==1)return t.error("Decoding of string type: bmpstr length mismatch");for(var i="",a=0;a<r.length/2;a++)i+=String.fromCharCode(r.readUInt16BE(2*a));return i}if("numstr"===e){var o=t.raw().toString("ascii");return this._isNumstr(o)?o:t.error("Decoding of string type: numstr unsupported characters")}if("octstr"===e)return t.raw();if("objDesc"===e)return t.raw();if("printstr"===e){var s=t.raw().toString("ascii");return this._isPrintstr(s)?s:t.error("Decoding of string type: printstr unsupported characters")}return/str$/.test(e)?t.raw().toString():t.error("Decoding of string type: "+e+" unsupported")},c.prototype._decodeObjid=function(t,e,n){for(var r,i=[],a=0;!t.isEmpty();){var o=t.readUInt8();a<<=7,a|=127&o,0==(128&o)&&(i.push(a),a=0)}128&o&&i.push(a);var s=i[0]/40|0,u=i[0]%40;if(r=n?i:[s,u].concat(i.slice(1)),e){var c=e[r.join(" ")];void 0===c&&(c=e[r.join(".")]),void 0!==c&&(r=c)}return r},c.prototype._decodeTime=function(t,e){var n=t.raw().toString();if("gentime"===e)var r=0|n.slice(0,4),i=0|n.slice(4,6),a=0|n.slice(6,8),o=0|n.slice(8,10),s=0|n.slice(10,12),u=0|n.slice(12,14);else{if("utctime"!==e)return t.error("Decoding "+e+" time is not supported yet");r=0|n.slice(0,2),i=0|n.slice(2,4),a=0|n.slice(4,6),o=0|n.slice(6,8),s=0|n.slice(8,10),u=0|n.slice(10,12);r=r<70?2e3+r:1900+r}return Date.UTC(r,i-1,a,o,s,u,0)},c.prototype._decodeNull=function(t){return null},c.prototype._decodeBool=function(t){var e=t.readUInt8();return t.isError(e)?e:0!==e},c.prototype._decodeInt=function(t,e){var n=t.raw(),r=new o(n);return e&&(r=e[r.toString(10)]||r),r},c.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getDecoder("der").tree}},function(t,e,n){var r=n(2),i=n(4).Buffer,a=n(34),o=a.base,s=a.constants.der;function u(t){this.enc="der",this.name=t.name,this.entity=t,this.tree=new c,this.tree._init(t.body)}function c(t){o.Node.call(this,"der",t)}function l(t){return t<10?"0"+t:t}t.exports=u,u.prototype.encode=function(t,e){return this.tree._encode(t,e).join()},r(c,o.Node),c.prototype._encodeComposite=function(t,e,n,r){var a,o=function(t,e,n,r){var i;"seqof"===t?t="seq":"setof"===t&&(t="set");if(s.tagByName.hasOwnProperty(t))i=s.tagByName[t];else{if("number"!=typeof t||(0|t)!==t)return r.error("Unknown tag: "+t);i=t}if(i>=31)return r.error("Multi-octet tag encoding unsupported");e||(i|=32);return i|=s.tagClassByName[n||"universal"]<<6}(t,e,n,this.reporter);if(r.length<128)return(a=new i(2))[0]=o,a[1]=r.length,this._createEncoderBuffer([a,r]);for(var u=1,c=r.length;c>=256;c>>=8)u++;(a=new i(2+u))[0]=o,a[1]=128|u;c=1+u;for(var l=r.length;l>0;c--,l>>=8)a[c]=255&l;return this._createEncoderBuffer([a,r])},c.prototype._encodeStr=function(t,e){if("bitstr"===e)return this._createEncoderBuffer([0|t.unused,t.data]);if("bmpstr"===e){for(var n=new i(2*t.length),r=0;r<t.length;r++)n.writeUInt16BE(t.charCodeAt(r),2*r);return this._createEncoderBuffer(n)}return"numstr"===e?this._isNumstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: numstr supports only digits and space"):"printstr"===e?this._isPrintstr(t)?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(e)?this._createEncoderBuffer(t):"objDesc"===e?this._createEncoderBuffer(t):this.reporter.error("Encoding of string type: "+e+" unsupported")},c.prototype._encodeObjid=function(t,e,n){if("string"==typeof t){if(!e)return this.reporter.error("string objid given, but no values map found");if(!e.hasOwnProperty(t))return this.reporter.error("objid not found in values map");t=e[t].split(/[\s\.]+/g);for(var r=0;r<t.length;r++)t[r]|=0}else if(Array.isArray(t)){t=t.slice();for(r=0;r<t.length;r++)t[r]|=0}if(!Array.isArray(t))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(t));if(!n){if(t[1]>=40)return this.reporter.error("Second objid identifier OOB");t.splice(0,2,40*t[0]+t[1])}var a=0;for(r=0;r<t.length;r++){var o=t[r];for(a++;o>=128;o>>=7)a++}var s=new i(a),u=s.length-1;for(r=t.length-1;r>=0;r--){o=t[r];for(s[u--]=127&o;(o>>=7)>0;)s[u--]=128|127&o}return this._createEncoderBuffer(s)},c.prototype._encodeTime=function(t,e){var n,r=new Date(t);return"gentime"===e?n=[l(r.getFullYear()),l(r.getUTCMonth()+1),l(r.getUTCDate()),l(r.getUTCHours()),l(r.getUTCMinutes()),l(r.getUTCSeconds()),"Z"].join(""):"utctime"===e?n=[l(r.getFullYear()%100),l(r.getUTCMonth()+1),l(r.getUTCDate()),l(r.getUTCHours()),l(r.getUTCMinutes()),l(r.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+e+" time is not supported yet"),this._encodeStr(n,"octstr")},c.prototype._encodeNull=function(){return this._createEncoderBuffer("")},c.prototype._encodeInt=function(t,e){if("string"==typeof t){if(!e)return this.reporter.error("String int or enum given, but no values map");if(!e.hasOwnProperty(t))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(t));t=e[t]}if("number"!=typeof t&&!i.isBuffer(t)){var n=t.toArray();!t.sign&&128&n[0]&&n.unshift(0),t=new i(n)}if(i.isBuffer(t)){var r=t.length;0===t.length&&r++;var a=new i(r);return t.copy(a),0===t.length&&(a[0]=0),this._createEncoderBuffer(a)}if(t<128)return this._createEncoderBuffer(t);if(t<256)return this._createEncoderBuffer([0,t]);r=1;for(var o=t;o>=256;o>>=8)r++;for(o=(a=new Array(r)).length-1;o>=0;o--)a[o]=255&t,t>>=8;return 128&a[0]&&a.unshift(0),this._createEncoderBuffer(new i(a))},c.prototype._encodeBool=function(t){return this._createEncoderBuffer(t?255:0)},c.prototype._use=function(t,e){return"function"==typeof t&&(t=t(e)),t._getEncoder("der").tree},c.prototype._skipDefault=function(t,e,n){var r,i=this._baseState;if(null===i.default)return!1;var a=t.join();if(void 0===i.defaultBuffer&&(i.defaultBuffer=this._encodeValue(i.default,e,n).join()),a.length!==i.defaultBuffer.length)return!1;for(r=0;r<a.length;r++)if(a[r]!==i.defaultBuffer[r])return!1;return!0}},function(t){t.exports={"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}},function(t,e,n){var r=n(30),i=n(3).Buffer;function a(t){var e=i.allocUnsafe(4);return e.writeUInt32BE(t,0),e}t.exports=function(t,e){for(var n,o=i.alloc(0),s=0;o.length<e;)n=a(s++),o=i.concat([o,r("sha1").update(t).update(n).digest()]);return o.slice(0,e)}},function(t,e){t.exports=function(t,e){for(var n=t.length,r=-1;++r<n;)t[r]^=e[r];return t}},function(t,e,n){var r=n(5),i=n(3).Buffer;t.exports=function(t,e){return i.from(t.toRed(r.mont(e.modulus)).redPow(new r(e.publicExponent)).fromRed().toArray())}},,,,,,,,,,,,,,,,function(t,e,n){var r,i,a;i=[e],void 0===(a="function"==typeof(r=function(t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=class{constructor(){var t=n(252);this.T=t}get CoreTensor(){return this.T}}})?r.apply(e,i):r)||(t.exports=a)},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,i,a,o,s,u=1,c={},l=!1,f=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick(function(){d(t)})}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?t.MessageChannel?((a=new MessageChannel).port1.onmessage=function(t){d(t.data)},r=function(t){a.port2.postMessage(t)}):f&&"onreadystatechange"in f.createElement("script")?(i=f.documentElement,r=function(t){var e=f.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):r=function(t){setTimeout(d,0,t)}:(o="setImmediate$"+Math.random()+"$",s=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(o)&&d(+e.data.slice(o.length))},t.addEventListener?t.addEventListener("message",s,!1):t.attachEvent("onmessage",s),r=function(e){t.postMessage(o+e,"*")}),h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var i={callback:t,args:e};return c[u]=i,r(u),u++},h.clearImmediate=p}function p(t){delete c[t]}function d(t){if(l)setTimeout(d,0,t);else{var e=c[t];if(e){l=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(n,r)}}(e)}finally{p(t),l=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(11),n(14))},function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){for(var e,n=c(t),r=n[0],o=n[1],s=new a(function(t,e,n){return 3*(e+n)/4-n}(0,r,o)),u=0,l=o>0?r-4:r,f=0;f<l;f+=4)e=i[t.charCodeAt(f)]<<18|i[t.charCodeAt(f+1)]<<12|i[t.charCodeAt(f+2)]<<6|i[t.charCodeAt(f+3)],s[u++]=e>>16&255,s[u++]=e>>8&255,s[u++]=255&e;2===o&&(e=i[t.charCodeAt(f)]<<2|i[t.charCodeAt(f+1)]>>4,s[u++]=255&e);1===o&&(e=i[t.charCodeAt(f)]<<10|i[t.charCodeAt(f+1)]<<4|i[t.charCodeAt(f+2)]>>2,s[u++]=e>>8&255,s[u++]=255&e);return s},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,a=[],o=0,s=n-i;o<s;o+=16383)a.push(l(t,o,o+16383>s?s:o+16383));1===i?(e=t[n-1],a.push(r[e>>2]+r[e<<4&63]+"==")):2===i&&(e=(t[n-2]<<8)+t[n-1],a.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return a.join("")};for(var r=[],i=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=o.length;s<u;++s)r[s]=o[s],i[o.charCodeAt(s)]=s;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var i,a,o=[],s=e;s<n;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),o.push(r[(a=i)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return o.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,i){var a,o,s=8*i-r-1,u=(1<<s)-1,c=u>>1,l=-7,f=n?i-1:0,h=n?-1:1,p=t[e+f];for(f+=h,a=p&(1<<-l)-1,p>>=-l,l+=s;l>0;a=256*a+t[e+f],f+=h,l-=8);for(o=a&(1<<-l)-1,a>>=-l,l+=r;l>0;o=256*o+t[e+f],f+=h,l-=8);if(0===a)a=1-c;else{if(a===u)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,r),a-=c}return(p?-1:1)*o*Math.pow(2,a-r)},e.write=function(t,e,n,r,i,a){var o,s,u,c=8*a-i-1,l=(1<<c)-1,f=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:a-1,d=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,o=l):(o=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-o))<1&&(o--,u*=2),(e+=o+f>=1?h/u:h*Math.pow(2,1-f))*u>=2&&(o++,u/=2),o+f>=l?(s=0,o=l):o+f>=1?(s=(e*u-1)*Math.pow(2,i),o+=f):(s=e*Math.pow(2,f-1)*Math.pow(2,i),o=0));i>=8;t[n+p]=255&s,p+=d,s/=256,i-=8);for(o=o<<i|s,c+=i;c>0;t[n+p]=255&o,p+=d,o/=256,c-=8);t[n+p-d]|=128*m}},function(t,e){},function(t,e,n){"use strict";var r=n(3).Buffer,i=n(141);t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.head=null,this.tail=null,this.length=0}return t.prototype.push=function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length},t.prototype.unshift=function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length},t.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}},t.prototype.clear=function(){this.head=this.tail=null,this.length=0},t.prototype.join=function(t){if(0===this.length)return"";for(var e=this.head,n=""+e.data;e=e.next;)n+=t+e.data;return n},t.prototype.concat=function(t){if(0===this.length)return r.alloc(0);if(1===this.length)return this.head.data;for(var e,n,i,a=r.allocUnsafe(t>>>0),o=this.head,s=0;o;)e=o.data,n=a,i=s,e.copy(n,i),s+=o.data.length,o=o.next;return a},t}(),i&&i.inspect&&i.inspect.custom&&(t.exports.prototype[i.inspect.custom]=function(){var t=i.inspect({length:this.length});return this.constructor.name+" "+t})},function(t,e){},function(t,e,n){(function(e){function n(t){try{if(!e.localStorage)return!1}catch(t){return!1}var n=e.localStorage[t];return null!=n&&"true"===String(n).toLowerCase()}t.exports=function(t,e){if(n("noDeprecation"))return t;var r=!1;return function(){if(!r){if(n("throwDeprecation"))throw new Error(e);n("traceDeprecation")?console.trace(e):console.warn(e),r=!0}return t.apply(this,arguments)}}}).call(this,n(11))},function(t,e,n){"use strict";t.exports=a;var r=n(90),i=n(31);function a(t){if(!(this instanceof a))return new a(t);r.call(this,t)}i.inherits=n(2),i.inherits(a,r),a.prototype._transform=function(t,e,n){n(null,t)}},function(t,e,n){t.exports=n(60)},function(t,e,n){t.exports=n(21)},function(t,e,n){t.exports=n(59).Transform},function(t,e,n){t.exports=n(59).PassThrough},function(t,e,n){var r=n(2),i=n(23),a=n(3).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function u(){this.init(),this._w=s,i.call(this,64,56)}function c(t){return t<<30|t>>>2}function l(t,e,n,r){return 0===t?e&n|~e&r:2===t?e&n|e&r|n&r:e^n^r}r(u,i),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,n=this._w,r=0|this._a,i=0|this._b,a=0|this._c,s=0|this._d,u=0|this._e,f=0;f<16;++f)n[f]=t.readInt32BE(4*f);for(;f<80;++f)n[f]=n[f-3]^n[f-8]^n[f-14]^n[f-16];for(var h=0;h<80;++h){var p=~~(h/20),d=0|((e=r)<<5|e>>>27)+l(p,i,a,s)+u+n[h]+o[p];u=s,s=a,a=c(i),i=r,r=d}this._a=r+this._a|0,this._b=i+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=a.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},function(t,e,n){var r=n(2),i=n(23),a=n(3).Buffer,o=[1518500249,1859775393,-1894007588,-899497514],s=new Array(80);function u(){this.init(),this._w=s,i.call(this,64,56)}function c(t){return t<<5|t>>>27}function l(t){return t<<30|t>>>2}function f(t,e,n,r){return 0===t?e&n|~e&r:2===t?e&n|e&r|n&r:e^n^r}r(u,i),u.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},u.prototype._update=function(t){for(var e,n=this._w,r=0|this._a,i=0|this._b,a=0|this._c,s=0|this._d,u=0|this._e,h=0;h<16;++h)n[h]=t.readInt32BE(4*h);for(;h<80;++h)n[h]=(e=n[h-3]^n[h-8]^n[h-14]^n[h-16])<<1|e>>>31;for(var p=0;p<80;++p){var d=~~(p/20),m=c(r)+f(d,i,a,s)+u+n[p]+o[d]|0;u=s,s=a,a=l(i),i=r,r=m}this._a=r+this._a|0,this._b=i+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0},u.prototype._hash=function(){var t=a.allocUnsafe(20);return t.writeInt32BE(0|this._a,0),t.writeInt32BE(0|this._b,4),t.writeInt32BE(0|this._c,8),t.writeInt32BE(0|this._d,12),t.writeInt32BE(0|this._e,16),t},t.exports=u},function(t,e,n){var r=n(2),i=n(91),a=n(23),o=n(3).Buffer,s=new Array(64);function u(){this.init(),this._w=s,a.call(this,64,56)}r(u,i),u.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(28);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t},t.exports=u},function(t,e,n){var r=n(2),i=n(92),a=n(23),o=n(3).Buffer,s=new Array(160);function u(){this.init(),this._w=s,a.call(this,128,112)}r(u,i),u.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},u.prototype._hash=function(){var t=o.allocUnsafe(48);function e(e,n,r){t.writeInt32BE(e,r),t.writeInt32BE(n,r+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),t},t.exports=u},function(t,e,n){"use strict";var r=n(2),i=n(3).Buffer,a=n(18),o=i.alloc(128),s=64;function u(t,e){a.call(this,"digest"),"string"==typeof e&&(e=i.from(e)),this._alg=t,this._key=e,e.length>s?e=t(e):e.length<s&&(e=i.concat([e,o],s));for(var n=this._ipad=i.allocUnsafe(s),r=this._opad=i.allocUnsafe(s),u=0;u<s;u++)n[u]=54^e[u],r[u]=92^e[u];this._hash=[n]}r(u,a),u.prototype._update=function(t){this._hash.push(t)},u.prototype._final=function(){var t=this._alg(i.concat(this._hash));return this._alg(i.concat([this._opad,t]))},t.exports=u},function(t,e,n){t.exports=n(95)},function(t,e,n){(function(e,r){var i,a=n(97),o=n(98),s=n(99),u=n(3).Buffer,c=e.crypto&&e.crypto.subtle,l={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},f=[];function h(t,e,n,r,i){return c.importKey("raw",t,{name:"PBKDF2"},!1,["deriveBits"]).then(function(t){return c.deriveBits({name:"PBKDF2",salt:e,iterations:n,hash:{name:i}},t,r<<3)}).then(function(t){return u.from(t)})}t.exports=function(t,n,p,d,m,g){"function"==typeof m&&(g=m,m=void 0);var y=l[(m=m||"sha1").toLowerCase()];if(!y||"function"!=typeof e.Promise)return r.nextTick(function(){var e;try{e=s(t,n,p,d,m)}catch(t){return g(t)}g(null,e)});if(a(t,n,p,d),"function"!=typeof g)throw new Error("No callback provided to pbkdf2");u.isBuffer(t)||(t=u.from(t,o)),u.isBuffer(n)||(n=u.from(n,o)),function(t,e){t.then(function(t){r.nextTick(function(){e(null,t)})},function(t){r.nextTick(function(){e(t)})})}(function(t){if(e.process&&!e.process.browser)return Promise.resolve(!1);if(!c||!c.importKey||!c.deriveBits)return Promise.resolve(!1);if(void 0!==f[t])return f[t];var n=h(i=i||u.alloc(8),i,10,128,t).then(function(){return!0}).catch(function(){return!1});return f[t]=n,n}(y).then(function(e){return e?h(t,n,p,d,y):s(t,n,p,d,m)}),g)}}).call(this,n(11),n(14))},function(t,e,n){var r=n(156),i=n(64),a=n(65),o=n(171),s=n(44);function u(t,e,n){if(t=t.toLowerCase(),a[t])return i.createCipheriv(t,e,n);if(o[t])return new r({key:e,iv:n,mode:t});throw new TypeError("invalid suite type")}function c(t,e,n){if(t=t.toLowerCase(),a[t])return i.createDecipheriv(t,e,n);if(o[t])return new r({key:e,iv:n,mode:t,decrypt:!0});throw new TypeError("invalid suite type")}e.createCipher=e.Cipher=function(t,e){var n,r;if(t=t.toLowerCase(),a[t])n=a[t].key,r=a[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");n=8*o[t].key,r=o[t].iv}var i=s(e,!1,n,r);return u(t,i.key,i.iv)},e.createCipheriv=e.Cipheriv=u,e.createDecipher=e.Decipher=function(t,e){var n,r;if(t=t.toLowerCase(),a[t])n=a[t].key,r=a[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");n=8*o[t].key,r=o[t].iv}var i=s(e,!1,n,r);return c(t,i.key,i.iv)},e.createDecipheriv=e.Decipheriv=c,e.listCiphers=e.getCiphers=function(){return Object.keys(o).concat(i.getCiphers())}},function(t,e,n){var r=n(18),i=n(63),a=n(2),o=n(3).Buffer,s={"des-ede3-cbc":i.CBC.instantiate(i.EDE),"des-ede3":i.EDE,"des-ede-cbc":i.CBC.instantiate(i.EDE),"des-ede":i.EDE,"des-cbc":i.CBC.instantiate(i.DES),"des-ecb":i.DES};function u(t){r.call(this);var e,n=t.mode.toLowerCase(),i=s[n];e=t.decrypt?"decrypt":"encrypt";var a=t.key;o.isBuffer(a)||(a=o.from(a)),"des-ede"!==n&&"des-ede-cbc"!==n||(a=o.concat([a,a.slice(0,8)]));var u=t.iv;o.isBuffer(u)||(u=o.from(u)),this._des=i.create({key:a,iv:u,type:e})}s.des=s["des-cbc"],s.des3=s["des-ede3-cbc"],t.exports=u,a(u,r),u.prototype._update=function(t){return o.from(this._des.update(t))},u.prototype._final=function(){return o.from(this._des.final())}},function(t,e,n){"use strict";e.readUInt32BE=function(t,e){return(t[0+e]<<24|t[1+e]<<16|t[2+e]<<8|t[3+e])>>>0},e.writeUInt32BE=function(t,e,n){t[0+n]=e>>>24,t[1+n]=e>>>16&255,t[2+n]=e>>>8&255,t[3+n]=255&e},e.ip=function(t,e,n,r){for(var i=0,a=0,o=6;o>=0;o-=2){for(var s=0;s<=24;s+=8)i<<=1,i|=e>>>s+o&1;for(s=0;s<=24;s+=8)i<<=1,i|=t>>>s+o&1}for(o=6;o>=0;o-=2){for(s=1;s<=25;s+=8)a<<=1,a|=e>>>s+o&1;for(s=1;s<=25;s+=8)a<<=1,a|=t>>>s+o&1}n[r+0]=i>>>0,n[r+1]=a>>>0},e.rip=function(t,e,n,r){for(var i=0,a=0,o=0;o<4;o++)for(var s=24;s>=0;s-=8)i<<=1,i|=e>>>s+o&1,i<<=1,i|=t>>>s+o&1;for(o=4;o<8;o++)for(s=24;s>=0;s-=8)a<<=1,a|=e>>>s+o&1,a<<=1,a|=t>>>s+o&1;n[r+0]=i>>>0,n[r+1]=a>>>0},e.pc1=function(t,e,n,r){for(var i=0,a=0,o=7;o>=5;o--){for(var s=0;s<=24;s+=8)i<<=1,i|=e>>s+o&1;for(s=0;s<=24;s+=8)i<<=1,i|=t>>s+o&1}for(s=0;s<=24;s+=8)i<<=1,i|=e>>s+o&1;for(o=1;o<=3;o++){for(s=0;s<=24;s+=8)a<<=1,a|=e>>s+o&1;for(s=0;s<=24;s+=8)a<<=1,a|=t>>s+o&1}for(s=0;s<=24;s+=8)a<<=1,a|=t>>s+o&1;n[r+0]=i>>>0,n[r+1]=a>>>0},e.r28shl=function(t,e){return t<<e&268435455|t>>>28-e};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];e.pc2=function(t,e,n,i){for(var a=0,o=0,s=r.length>>>1,u=0;u<s;u++)a<<=1,a|=t>>>r[u]&1;for(u=s;u<r.length;u++)o<<=1,o|=e>>>r[u]&1;n[i+0]=a>>>0,n[i+1]=o>>>0},e.expand=function(t,e,n){var r=0,i=0;r=(1&t)<<5|t>>>27;for(var a=23;a>=15;a-=4)r<<=6,r|=t>>>a&63;for(a=11;a>=3;a-=4)i|=t>>>a&63,i<<=6;i|=(31&t)<<1|t>>>31,e[n+0]=r>>>0,e[n+1]=i>>>0};var i=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];e.substitute=function(t,e){for(var n=0,r=0;r<4;r++){n<<=4,n|=i[64*r+(t>>>18-6*r&63)]}for(r=0;r<4;r++){n<<=4,n|=i[256+64*r+(e>>>18-6*r&63)]}return n>>>0};var a=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];e.permute=function(t){for(var e=0,n=0;n<a.length;n++)e<<=1,e|=t>>>a[n]&1;return e>>>0},e.padSplit=function(t,e,n){for(var r=t.toString(2);r.length<e;)r="0"+r;for(var i=[],a=0;a<e;a+=n)i.push(r.slice(a,a+n));return i.join(" ")}},function(t,e,n){"use strict";var r=n(12);function i(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0}t.exports=i,i.prototype._init=function(){},i.prototype.update=function(t){return 0===t.length?[]:"decrypt"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},i.prototype._buffer=function(t,e){for(var n=Math.min(this.buffer.length-this.bufferOff,t.length-e),r=0;r<n;r++)this.buffer[this.bufferOff+r]=t[e+r];return this.bufferOff+=n,n},i.prototype._flushBuffer=function(t,e){return this._update(this.buffer,0,t,e),this.bufferOff=0,this.blockSize},i.prototype._updateEncrypt=function(t){var e=0,n=0,r=(this.bufferOff+t.length)/this.blockSize|0,i=new Array(r*this.blockSize);0!==this.bufferOff&&(e+=this._buffer(t,e),this.bufferOff===this.buffer.length&&(n+=this._flushBuffer(i,n)));for(var a=t.length-(t.length-e)%this.blockSize;e<a;e+=this.blockSize)this._update(t,e,i,n),n+=this.blockSize;for(;e<t.length;e++,this.bufferOff++)this.buffer[this.bufferOff]=t[e];return i},i.prototype._updateDecrypt=function(t){for(var e=0,n=0,r=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,i=new Array(r*this.blockSize);r>0;r--)e+=this._buffer(t,e),n+=this._flushBuffer(i,n);return e+=this._buffer(t,e),i},i.prototype.final=function(t){var e,n;return t&&(e=this.update(t)),n="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),e?e.concat(n):n},i.prototype._pad=function(t,e){if(0===e)return!1;for(;e<t.length;)t[e++]=0;return!0},i.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=new Array(this.blockSize);return this._update(this.buffer,0,t,0),t},i.prototype._unpad=function(t){return t},i.prototype._finalDecrypt=function(){r.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var t=new Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}},function(t,e,n){"use strict";var r=n(12),i=n(2),a=n(63),o=a.utils,s=a.Cipher;function u(){this.tmp=new Array(2),this.keys=null}function c(t){s.call(this,t);var e=new u;this._desState=e,this.deriveKeys(e,t.key)}i(c,s),t.exports=c,c.create=function(t){return new c(t)};var l=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];c.prototype.deriveKeys=function(t,e){t.keys=new Array(32),r.equal(e.length,this.blockSize,"Invalid key length");var n=o.readUInt32BE(e,0),i=o.readUInt32BE(e,4);o.pc1(n,i,t.tmp,0),n=t.tmp[0],i=t.tmp[1];for(var a=0;a<t.keys.length;a+=2){var s=l[a>>>1];n=o.r28shl(n,s),i=o.r28shl(i,s),o.pc2(n,i,t.keys,a)}},c.prototype._update=function(t,e,n,r){var i=this._desState,a=o.readUInt32BE(t,e),s=o.readUInt32BE(t,e+4);o.ip(a,s,i.tmp,0),a=i.tmp[0],s=i.tmp[1],"encrypt"===this.type?this._encrypt(i,a,s,i.tmp,0):this._decrypt(i,a,s,i.tmp,0),a=i.tmp[0],s=i.tmp[1],o.writeUInt32BE(n,a,r),o.writeUInt32BE(n,s,r+4)},c.prototype._pad=function(t,e){for(var n=t.length-e,r=e;r<t.length;r++)t[r]=n;return!0},c.prototype._unpad=function(t){for(var e=t[t.length-1],n=t.length-e;n<t.length;n++)r.equal(t[n],e);return t.slice(0,t.length-e)},c.prototype._encrypt=function(t,e,n,r,i){for(var a=e,s=n,u=0;u<t.keys.length;u+=2){var c=t.keys[u],l=t.keys[u+1];o.expand(s,t.tmp,0),c^=t.tmp[0],l^=t.tmp[1];var f=o.substitute(c,l),h=s;s=(a^o.permute(f))>>>0,a=h}o.rip(s,a,r,i)},c.prototype._decrypt=function(t,e,n,r,i){for(var a=n,s=e,u=t.keys.length-2;u>=0;u-=2){var c=t.keys[u],l=t.keys[u+1];o.expand(a,t.tmp,0),c^=t.tmp[0],l^=t.tmp[1];var f=o.substitute(c,l),h=a;a=(s^o.permute(f))>>>0,s=h}o.rip(a,s,r,i)}},function(t,e,n){"use strict";var r=n(12),i=n(2),a={};function o(t){r.equal(t.length,8,"Invalid IV length"),this.iv=new Array(8);for(var e=0;e<this.iv.length;e++)this.iv[e]=t[e]}e.instantiate=function(t){function e(e){t.call(this,e),this._cbcInit()}i(e,t);for(var n=Object.keys(a),r=0;r<n.length;r++){var o=n[r];e.prototype[o]=a[o]}return e.create=function(t){return new e(t)},e},a._cbcInit=function(){var t=new o(this.options.iv);this._cbcState=t},a._update=function(t,e,n,r){var i=this._cbcState,a=this.constructor.super_.prototype,o=i.iv;if("encrypt"===this.type){for(var s=0;s<this.blockSize;s++)o[s]^=t[e+s];a._update.call(this,o,0,n,r);for(s=0;s<this.blockSize;s++)o[s]=n[r+s]}else{a._update.call(this,t,e,n,r);for(s=0;s<this.blockSize;s++)n[r+s]^=o[s];for(s=0;s<this.blockSize;s++)o[s]=t[e+s]}}},function(t,e,n){"use strict";var r=n(12),i=n(2),a=n(63),o=a.Cipher,s=a.DES;function u(t,e){r.equal(e.length,24,"Invalid key length");var n=e.slice(0,8),i=e.slice(8,16),a=e.slice(16,24);this.ciphers="encrypt"===t?[s.create({type:"encrypt",key:n}),s.create({type:"decrypt",key:i}),s.create({type:"encrypt",key:a})]:[s.create({type:"decrypt",key:a}),s.create({type:"encrypt",key:i}),s.create({type:"decrypt",key:n})]}function c(t){o.call(this,t);var e=new u(this.type,this.options.key);this._edeState=e}i(c,o),t.exports=c,c.create=function(t){return new c(t)},c.prototype._update=function(t,e,n,r){var i=this._edeState;i.ciphers[0]._update(t,e,n,r),i.ciphers[1]._update(n,r,n,r),i.ciphers[2]._update(n,r,n,r)},c.prototype._pad=s.prototype._pad,c.prototype._unpad=s.prototype._unpad},function(t,e,n){var r=n(65),i=n(103),a=n(3).Buffer,o=n(104),s=n(18),u=n(43),c=n(44);function l(t,e,n){s.call(this),this._cache=new h,this._cipher=new u.AES(e),this._prev=a.from(n),this._mode=t,this._autopadding=!0}n(2)(l,s),l.prototype._update=function(t){var e,n;this._cache.add(t);for(var r=[];e=this._cache.get();)n=this._mode.encrypt(this,e),r.push(n);return a.concat(r)};var f=a.alloc(16,16);function h(){this.cache=a.allocUnsafe(0)}function p(t,e,n){var s=r[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof e&&(e=a.from(e)),e.length!==s.key/8)throw new TypeError("invalid key length "+e.length);if("string"==typeof n&&(n=a.from(n)),"GCM"!==s.mode&&n.length!==s.iv)throw new TypeError("invalid iv length "+n.length);return"stream"===s.type?new o(s.module,e,n):"auth"===s.type?new i(s.module,e,n):new l(s.module,e,n)}l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return t=this._mode.encrypt(this,t),this._cipher.scrub(),t;if(!t.equals(f))throw this._cipher.scrub(),new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},h.prototype.add=function(t){this.cache=a.concat([this.cache,t])},h.prototype.get=function(){if(this.cache.length>15){var t=this.cache.slice(0,16);return this.cache=this.cache.slice(16),t}return null},h.prototype.flush=function(){for(var t=16-this.cache.length,e=a.allocUnsafe(t),n=-1;++n<t;)e.writeUInt8(t,n);return a.concat([this.cache,e])},e.createCipheriv=p,e.createCipher=function(t,e){var n=r[t.toLowerCase()];if(!n)throw new TypeError("invalid suite type");var i=c(e,!1,n.key,n.iv);return p(t,i.key,i.iv)}},function(t,e){e.encrypt=function(t,e){return t._cipher.encryptBlock(e)},e.decrypt=function(t,e){return t._cipher.decryptBlock(e)}},function(t,e,n){var r=n(32);e.encrypt=function(t,e){var n=r(e,t._prev);return t._prev=t._cipher.encryptBlock(n),t._prev},e.decrypt=function(t,e){var n=t._prev;t._prev=e;var i=t._cipher.decryptBlock(e);return r(i,n)}},function(t,e,n){var r=n(3).Buffer,i=n(32);function a(t,e,n){var a=e.length,o=i(e,t._cache);return t._cache=t._cache.slice(a),t._prev=r.concat([t._prev,n?e:o]),o}e.encrypt=function(t,e,n){for(var i,o=r.allocUnsafe(0);e.length;){if(0===t._cache.length&&(t._cache=t._cipher.encryptBlock(t._prev),t._prev=r.allocUnsafe(0)),!(t._cache.length<=e.length)){o=r.concat([o,a(t,e,n)]);break}i=t._cache.length,o=r.concat([o,a(t,e.slice(0,i),n)]),e=e.slice(i)}return o}},function(t,e,n){var r=n(3).Buffer;function i(t,e,n){var i=t._cipher.encryptBlock(t._prev)[0]^e;return t._prev=r.concat([t._prev.slice(1),r.from([n?e:i])]),i}e.encrypt=function(t,e,n){for(var a=e.length,o=r.allocUnsafe(a),s=-1;++s<a;)o[s]=i(t,e[s],n);return o}},function(t,e,n){var r=n(3).Buffer;function i(t,e,n){for(var r,i,o=-1,s=0;++o<8;)r=e&1<<7-o?128:0,s+=(128&(i=t._cipher.encryptBlock(t._prev)[0]^r))>>o%8,t._prev=a(t._prev,n?r:i);return s}function a(t,e){var n=t.length,i=-1,a=r.allocUnsafe(t.length);for(t=r.concat([t,r.from([e])]);++i<n;)a[i]=t[i]<<1|t[i+1]>>7;return a}e.encrypt=function(t,e,n){for(var a=e.length,o=r.allocUnsafe(a),s=-1;++s<a;)o[s]=i(t,e[s],n);return o}},function(t,e,n){(function(t){var r=n(32);function i(t){return t._prev=t._cipher.encryptBlock(t._prev),t._prev}e.encrypt=function(e,n){for(;e._cache.length<n.length;)e._cache=t.concat([e._cache,i(e)]);var a=e._cache.slice(0,n.length);return e._cache=e._cache.slice(n.length),r(n,a)}}).call(this,n(4).Buffer)},function(t,e,n){var r=n(3).Buffer,i=r.alloc(16,0);function a(t){var e=r.allocUnsafe(16);return e.writeUInt32BE(t[0]>>>0,0),e.writeUInt32BE(t[1]>>>0,4),e.writeUInt32BE(t[2]>>>0,8),e.writeUInt32BE(t[3]>>>0,12),e}function o(t){this.h=t,this.state=r.alloc(16,0),this.cache=r.allocUnsafe(0)}o.prototype.ghash=function(t){for(var e=-1;++e<t.length;)this.state[e]^=t[e];this._multiply()},o.prototype._multiply=function(){for(var t,e,n,r=[(t=this.h).readUInt32BE(0),t.readUInt32BE(4),t.readUInt32BE(8),t.readUInt32BE(12)],i=[0,0,0,0],o=-1;++o<128;){for(0!=(this.state[~~(o/8)]&1<<7-o%8)&&(i[0]^=r[0],i[1]^=r[1],i[2]^=r[2],i[3]^=r[3]),n=0!=(1&r[3]),e=3;e>0;e--)r[e]=r[e]>>>1|(1&r[e-1])<<31;r[0]=r[0]>>>1,n&&(r[0]=r[0]^225<<24)}this.state=a(i)},o.prototype.update=function(t){var e;for(this.cache=r.concat([this.cache,t]);this.cache.length>=16;)e=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(e)},o.prototype.final=function(t,e){return this.cache.length&&this.ghash(r.concat([this.cache,i],16)),this.ghash(a([0,t,0,e])),this.state},t.exports=o},function(t,e,n){var r=n(103),i=n(3).Buffer,a=n(65),o=n(104),s=n(18),u=n(43),c=n(44);function l(t,e,n){s.call(this),this._cache=new f,this._last=void 0,this._cipher=new u.AES(e),this._prev=i.from(n),this._mode=t,this._autopadding=!0}function f(){this.cache=i.allocUnsafe(0)}function h(t,e,n){var s=a[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof n&&(n=i.from(n)),"GCM"!==s.mode&&n.length!==s.iv)throw new TypeError("invalid iv length "+n.length);if("string"==typeof e&&(e=i.from(e)),e.length!==s.key/8)throw new TypeError("invalid key length "+e.length);return"stream"===s.type?new o(s.module,e,n,!0):"auth"===s.type?new r(s.module,e,n,!0):new l(s.module,e,n)}n(2)(l,s),l.prototype._update=function(t){var e,n;this._cache.add(t);for(var r=[];e=this._cache.get(this._autopadding);)n=this._mode.decrypt(this,e),r.push(n);return i.concat(r)},l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return function(t){var e=t[15];if(e<1||e>16)throw new Error("unable to decrypt data");var n=-1;for(;++n<e;)if(t[n+(16-e)]!==e)throw new Error("unable to decrypt data");if(16===e)return;return t.slice(0,16-e)}(this._mode.decrypt(this,t));if(t)throw new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},f.prototype.add=function(t){this.cache=i.concat([this.cache,t])},f.prototype.get=function(t){var e;if(t){if(this.cache.length>16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e}else if(this.cache.length>=16)return e=this.cache.slice(0,16),this.cache=this.cache.slice(16),e;return null},f.prototype.flush=function(){if(this.cache.length)return this.cache},e.createDecipher=function(t,e){var n=a[t.toLowerCase()];if(!n)throw new TypeError("invalid suite type");var r=c(e,!1,n.key,n.iv);return h(t,r.key,r.iv)},e.createDecipheriv=h},function(t,e){e["des-ecb"]={key:8,iv:0},e["des-cbc"]=e.des={key:8,iv:8},e["des-ede3-cbc"]=e.des3={key:24,iv:8},e["des-ede3"]={key:24,iv:0},e["des-ede-cbc"]={key:16,iv:8},e["des-ede"]={key:16,iv:0}},function(t,e,n){(function(t){var r=n(105),i=n(176),a=n(177);var o={binary:!0,hex:!0,base64:!0};e.DiffieHellmanGroup=e.createDiffieHellmanGroup=e.getDiffieHellman=function(e){var n=new t(i[e].prime,"hex"),r=new t(i[e].gen,"hex");return new a(n,r)},e.createDiffieHellman=e.DiffieHellman=function e(n,i,s,u){return t.isBuffer(i)||void 0===o[i]?e(n,"binary",i,s):(i=i||"binary",u=u||"binary",s=s||new t([2]),t.isBuffer(s)||(s=new t(s,u)),"number"==typeof n?new a(r(n,s),s,!0):(t.isBuffer(n)||(n=new t(n,i)),new a(n,s,!0)))}}).call(this,n(4).Buffer)},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){},function(t,e){},function(t){t.exports={modp1:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},modp2:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},modp5:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},modp14:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},modp15:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},modp16:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},modp17:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},modp18:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}},function(t,e,n){(function(e){var r=n(5),i=new(n(106)),a=new r(24),o=new r(11),s=new r(10),u=new r(3),c=new r(7),l=n(105),f=n(22);function h(t,n){return n=n||"utf8",e.isBuffer(t)||(t=new e(t,n)),this._pub=new r(t),this}function p(t,n){return n=n||"utf8",e.isBuffer(t)||(t=new e(t,n)),this._priv=new r(t),this}t.exports=m;var d={};function m(t,e,n){this.setGenerator(e),this.__prime=new r(t),this._prime=r.mont(this.__prime),this._primeLen=t.length,this._pub=void 0,this._priv=void 0,this._primeCode=void 0,n?(this.setPublicKey=h,this.setPrivateKey=p):this._primeCode=8}function g(t,n){var r=new e(t.toArray());return n?r.toString(n):r}Object.defineProperty(m.prototype,"verifyError",{enumerable:!0,get:function(){return"number"!=typeof this._primeCode&&(this._primeCode=function(t,e){var n=e.toString("hex"),r=[n,t.toString(16)].join("_");if(r in d)return d[r];var f,h=0;if(t.isEven()||!l.simpleSieve||!l.fermatTest(t)||!i.test(t))return h+=1,h+="02"===n||"05"===n?8:4,d[r]=h,h;switch(i.test(t.shrn(1))||(h+=2),n){case"02":t.mod(a).cmp(o)&&(h+=8);break;case"05":(f=t.mod(s)).cmp(u)&&f.cmp(c)&&(h+=8);break;default:h+=4}return d[r]=h,h}(this.__prime,this.__gen)),this._primeCode}}),m.prototype.generateKeys=function(){return this._priv||(this._priv=new r(f(this._primeLen))),this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed(),this.getPublicKey()},m.prototype.computeSecret=function(t){var n=(t=(t=new r(t)).toRed(this._prime)).redPow(this._priv).fromRed(),i=new e(n.toArray()),a=this.getPrime();if(i.length<a.length){var o=new e(a.length-i.length);o.fill(0),i=e.concat([o,i])}return i},m.prototype.getPublicKey=function(t){return g(this._pub,t)},m.prototype.getPrivateKey=function(t){return g(this._priv,t)},m.prototype.getPrime=function(t){return g(this.__prime,t)},m.prototype.getGenerator=function(t){return g(this._gen,t)},m.prototype.setGenerator=function(t,n){return n=n||"utf8",e.isBuffer(t)||(t=new e(t,n)),this.__gen=t,this._gen=new r(t),this}}).call(this,n(4).Buffer)},function(t,e,n){(function(e){var r=n(30),i=n(57),a=n(2),o=n(179),s=n(215),u=n(95);function c(t){i.Writable.call(this);var e=u[t];if(!e)throw new Error("Unknown message digest");this._hashType=e.hash,this._hash=r(e.hash),this._tag=e.id,this._signType=e.sign}function l(t){i.Writable.call(this);var e=u[t];if(!e)throw new Error("Unknown message digest");this._hash=r(e.hash),this._tag=e.id,this._signType=e.sign}function f(t){return new c(t)}function h(t){return new l(t)}Object.keys(u).forEach(function(t){u[t].id=new e(u[t].id,"hex"),u[t.toLowerCase()]=u[t]}),a(c,i.Writable),c.prototype._write=function(t,e,n){this._hash.update(t),n()},c.prototype.update=function(t,n){return"string"==typeof t&&(t=new e(t,n)),this._hash.update(t),this},c.prototype.sign=function(t,e){this.end();var n=this._hash.digest(),r=o(n,t,this._hashType,this._signType,this._tag);return e?r.toString(e):r},a(l,i.Writable),l.prototype._write=function(t,e,n){this._hash.update(t),n()},l.prototype.update=function(t,n){return"string"==typeof t&&(t=new e(t,n)),this._hash.update(t),this},l.prototype.verify=function(t,n,r){"string"==typeof n&&(n=new e(n,r)),this.end();var i=this._hash.digest();return s(n,i,t,this._signType,this._tag)},t.exports={Sign:f,Verify:h,createSign:f,createVerify:h}}).call(this,n(4).Buffer)},function(t,e,n){(function(e){var r=n(93),i=n(66),a=n(8).ec,o=n(5),s=n(46),u=n(116);function c(t,n,i,a){if((t=new e(t.toArray())).length<n.byteLength()){var o=new e(n.byteLength()-t.length);o.fill(0),t=e.concat([o,t])}var s=i.length,u=function(t,n){t=(t=l(t,n)).mod(n);var r=new e(t.toArray());if(r.length<n.byteLength()){var i=new e(n.byteLength()-r.length);i.fill(0),r=e.concat([i,r])}return r}(i,n),c=new e(s);c.fill(1);var f=new e(s);return f.fill(0),f=r(a,f).update(c).update(new e([0])).update(t).update(u).digest(),c=r(a,f).update(c).digest(),{k:f=r(a,f).update(c).update(new e([1])).update(t).update(u).digest(),v:c=r(a,f).update(c).digest()}}function l(t,e){var n=new o(t),r=(t.length<<3)-e.bitLength();return r>0&&n.ishrn(r),n}function f(t,n,i){var a,o;do{for(a=new e(0);8*a.length<t.bitLength();)n.v=r(i,n.k).update(n.v).digest(),a=e.concat([a,n.v]);o=l(a,t),n.k=r(i,n.k).update(n.v).update(new e([0])).digest(),n.v=r(i,n.k).update(n.v).digest()}while(-1!==o.cmp(t));return o}function h(t,e,n,r){return t.toRed(o.mont(n)).redPow(e).fromRed().mod(r)}t.exports=function(t,n,r,p,d){var m=s(n);if(m.curve){if("ecdsa"!==p&&"ecdsa/rsa"!==p)throw new Error("wrong private key type");return function(t,n){var r=u[n.curve.join(".")];if(!r)throw new Error("unknown curve "+n.curve.join("."));var i=new a(r).keyFromPrivate(n.privateKey).sign(t);return new e(i.toDER())}(t,m)}if("dsa"===m.type){if("dsa"!==p)throw new Error("wrong private key type");return function(t,n,r){for(var i,a=n.params.priv_key,s=n.params.p,u=n.params.q,p=n.params.g,d=new o(0),m=l(t,u).mod(u),g=!1,y=c(a,u,t,r);!1===g;)i=f(u,y,r),d=h(p,i,s,u),0===(g=i.invm(u).imul(m.add(a.mul(d))).mod(u)).cmpn(0)&&(g=!1,d=new o(0));return function(t,n){t=t.toArray(),n=n.toArray(),128&t[0]&&(t=[0].concat(t)),128&n[0]&&(n=[0].concat(n));var r=[48,t.length+n.length+4,2,t.length];return r=r.concat(t,[2,n.length],n),new e(r)}(d,g)}(t,m,r)}if("rsa"!==p&&"ecdsa/rsa"!==p)throw new Error("wrong private key type");t=e.concat([d,t]);for(var g=m.modulus.byteLength(),y=[0,1];t.length+y.length+1<g;)y.push(255);y.push(0);for(var v=-1;++v<t.length;)y.push(t[v]);return i(y,m)},t.exports.getKey=c,t.exports.makeKey=f}).call(this,n(4).Buffer)},function(t){t.exports={name:"elliptic",version:"6.4.1",description:"EC cryptography",main:"lib/elliptic.js",files:["lib"],scripts:{jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},repository:{type:"git",url:"git@github.com:indutny/elliptic"},keywords:["EC","Elliptic","curve","Cryptography"],author:"Fedor Indutny <fedor@indutny.com>",license:"MIT",bugs:{url:"https://github.com/indutny/elliptic/issues"},homepage:"https://github.com/indutny/elliptic",devDependencies:{brfs:"^1.4.3",coveralls:"^2.11.3",grunt:"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2",istanbul:"^0.4.2",jscs:"^2.9.0",jshint:"^2.6.0",mocha:"^2.1.0"},dependencies:{"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}},function(t,e,n){"use strict";var r=e,i=n(5),a=n(12),o=n(108);r.assert=a,r.toArray=o.toArray,r.zero2=o.zero2,r.toHex=o.toHex,r.encode=o.encode,r.getNAF=function(t,e){for(var n=[],r=1<<e+1,i=t.clone();i.cmpn(1)>=0;){var a;if(i.isOdd()){var o=i.andln(r-1);a=o>(r>>1)-1?(r>>1)-o:o,i.isubn(a)}else a=0;n.push(a);for(var s=0!==i.cmpn(0)&&0===i.andln(r-1)?e+1:1,u=1;u<s;u++)n.push(0);i.iushrn(s)}return n},r.getJSF=function(t,e){var n=[[],[]];t=t.clone(),e=e.clone();for(var r=0,i=0;t.cmpn(-r)>0||e.cmpn(-i)>0;){var a,o,s,u=t.andln(3)+r&3,c=e.andln(3)+i&3;3===u&&(u=-1),3===c&&(c=-1),a=0==(1&u)?0:3!=(s=t.andln(7)+r&7)&&5!==s||2!==c?u:-u,n[0].push(a),o=0==(1&c)?0:3!=(s=e.andln(7)+i&7)&&5!==s||2!==u?c:-c,n[1].push(o),2*r===a+1&&(r=1-r),2*i===o+1&&(i=1-i),t.iushrn(1),e.iushrn(1)}return n},r.cachedProperty=function(t,e,n){var r="_"+e;t.prototype[e]=function(){return void 0!==this[r]?this[r]:this[r]=n.call(this)}},r.parseBytes=function(t){return"string"==typeof t?r.toArray(t,"hex"):t},r.intFromLE=function(t){return new i(t,"hex","le")}},function(t,e,n){"use strict";var r=n(5),i=n(8).utils,a=i.getNAF,o=i.getJSF,s=i.assert;function u(t,e){this.type=t,this.p=new r(e.p,16),this.red=e.prime?r.red(e.prime):r.mont(this.p),this.zero=new r(0).toRed(this.red),this.one=new r(1).toRed(this.red),this.two=new r(2).toRed(this.red),this.n=e.n&&new r(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4);var n=this.n&&this.p.div(this.n);!n||n.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function c(t,e){this.curve=t,this.type=e,this.precomputed=null}t.exports=u,u.prototype.point=function(){throw new Error("Not implemented")},u.prototype.validate=function(){throw new Error("Not implemented")},u.prototype._fixedNafMul=function(t,e){s(t.precomputed);var n=t._getDoubles(),r=a(e,1),i=(1<<n.step+1)-(n.step%2==0?2:1);i/=3;for(var o=[],u=0;u<r.length;u+=n.step){var c=0;for(e=u+n.step-1;e>=u;e--)c=(c<<1)+r[e];o.push(c)}for(var l=this.jpoint(null,null,null),f=this.jpoint(null,null,null),h=i;h>0;h--){for(u=0;u<o.length;u++){(c=o[u])===h?f=f.mixedAdd(n.points[u]):c===-h&&(f=f.mixedAdd(n.points[u].neg()))}l=l.add(f)}return l.toP()},u.prototype._wnafMul=function(t,e){var n=4,r=t._getNAFPoints(n);n=r.wnd;for(var i=r.points,o=a(e,n),u=this.jpoint(null,null,null),c=o.length-1;c>=0;c--){for(e=0;c>=0&&0===o[c];c--)e++;if(c>=0&&e++,u=u.dblp(e),c<0)break;var l=o[c];s(0!==l),u="affine"===t.type?l>0?u.mixedAdd(i[l-1>>1]):u.mixedAdd(i[-l-1>>1].neg()):l>0?u.add(i[l-1>>1]):u.add(i[-l-1>>1].neg())}return"affine"===t.type?u.toP():u},u.prototype._wnafMulAdd=function(t,e,n,r,i){for(var s=this._wnafT1,u=this._wnafT2,c=this._wnafT3,l=0,f=0;f<r;f++){var h=(N=e[f])._getNAFPoints(t);s[f]=h.wnd,u[f]=h.points}for(f=r-1;f>=1;f-=2){var p=f-1,d=f;if(1===s[p]&&1===s[d]){var m=[e[p],null,null,e[d]];0===e[p].y.cmp(e[d].y)?(m[1]=e[p].add(e[d]),m[2]=e[p].toJ().mixedAdd(e[d].neg())):0===e[p].y.cmp(e[d].y.redNeg())?(m[1]=e[p].toJ().mixedAdd(e[d]),m[2]=e[p].add(e[d].neg())):(m[1]=e[p].toJ().mixedAdd(e[d]),m[2]=e[p].toJ().mixedAdd(e[d].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],y=o(n[p],n[d]);l=Math.max(y[0].length,l),c[p]=new Array(l),c[d]=new Array(l);for(var v=0;v<l;v++){var b=0|y[0][v],w=0|y[1][v];c[p][v]=g[3*(b+1)+(w+1)],c[d][v]=0,u[p]=m}}else c[p]=a(n[p],s[p]),c[d]=a(n[d],s[d]),l=Math.max(c[p].length,l),l=Math.max(c[d].length,l)}var _=this.jpoint(null,null,null),x=this._wnafT4;for(f=l;f>=0;f--){for(var E=0;f>=0;){var S=!0;for(v=0;v<r;v++)x[v]=0|c[v][f],0!==x[v]&&(S=!1);if(!S)break;E++,f--}if(f>=0&&E++,_=_.dblp(E),f<0)break;for(v=0;v<r;v++){var N,I=x[v];0!==I&&(I>0?N=u[v][I-1>>1]:I<0&&(N=u[v][-I-1>>1].neg()),_="affine"===N.type?_.mixedAdd(N):_.add(N))}}for(f=0;f<r;f++)u[f]=null;return i?_:_.toP()},u.BasePoint=c,c.prototype.eq=function(){throw new Error("Not implemented")},c.prototype.validate=function(){return this.curve.validate(this)},u.prototype.decodePoint=function(t,e){t=i.toArray(t,e);var n=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*n)return 6===t[0]?s(t[t.length-1]%2==0):7===t[0]&&s(t[t.length-1]%2==1),this.point(t.slice(1,1+n),t.slice(1+n,1+2*n));if((2===t[0]||3===t[0])&&t.length-1===n)return this.pointFromX(t.slice(1,1+n),3===t[0]);throw new Error("Unknown point format")},c.prototype.encodeCompressed=function(t){return this.encode(t,!0)},c.prototype._encode=function(t){var e=this.curve.p.byteLength(),n=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(n):[4].concat(n,this.getY().toArray("be",e))},c.prototype.encode=function(t,e){return i.encode(this._encode(e),t)},c.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},c.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},c.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var n=[this],r=this,i=0;i<e;i+=t){for(var a=0;a<t;a++)r=r.dbl();n.push(r)}return{step:t,points:n}},c.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],n=(1<<t)-1,r=1===n?null:this.dbl(),i=1;i<n;i++)e[i]=e[i-1].add(r);return{wnd:t,points:e}},c.prototype._getBeta=function(){return null},c.prototype.dblp=function(t){for(var e=this,n=0;n<t;n++)e=e.dbl();return e}},function(t,e,n){"use strict";var r=n(45),i=n(8),a=n(5),o=n(2),s=r.base,u=i.utils.assert;function c(t){s.call(this,"short",t),this.a=new a(t.a,16).toRed(this.red),this.b=new a(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function l(t,e,n,r){s.BasePoint.call(this,t,"affine"),null===e&&null===n?(this.x=null,this.y=null,this.inf=!0):(this.x=new a(e,16),this.y=new a(n,16),r&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function f(t,e,n,r){s.BasePoint.call(this,t,"jacobian"),null===e&&null===n&&null===r?(this.x=this.curve.one,this.y=this.curve.one,this.z=new a(0)):(this.x=new a(e,16),this.y=new a(n,16),this.z=new a(r,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}o(c,s),t.exports=c,c.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,n;if(t.beta)e=new a(t.beta,16).toRed(this.red);else{var r=this._getEndoRoots(this.p);e=(e=r[0].cmp(r[1])<0?r[0]:r[1]).toRed(this.red)}if(t.lambda)n=new a(t.lambda,16);else{var i=this._getEndoRoots(this.n);0===this.g.mul(i[0]).x.cmp(this.g.x.redMul(e))?n=i[0]:(n=i[1],u(0===this.g.mul(n).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:n,basis:t.basis?t.basis.map(function(t){return{a:new a(t.a,16),b:new a(t.b,16)}}):this._getEndoBasis(n)}}},c.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:a.mont(t),n=new a(2).toRed(e).redInvm(),r=n.redNeg(),i=new a(3).toRed(e).redNeg().redSqrt().redMul(n);return[r.redAdd(i).fromRed(),r.redSub(i).fromRed()]},c.prototype._getEndoBasis=function(t){for(var e,n,r,i,o,s,u,c,l,f=this.n.ushrn(Math.floor(this.n.bitLength()/2)),h=t,p=this.n.clone(),d=new a(1),m=new a(0),g=new a(0),y=new a(1),v=0;0!==h.cmpn(0);){var b=p.div(h);c=p.sub(b.mul(h)),l=g.sub(b.mul(d));var w=y.sub(b.mul(m));if(!r&&c.cmp(f)<0)e=u.neg(),n=d,r=c.neg(),i=l;else if(r&&2==++v)break;u=c,p=h,h=c,g=d,d=l,y=m,m=w}o=c.neg(),s=l;var _=r.sqr().add(i.sqr());return o.sqr().add(s.sqr()).cmp(_)>=0&&(o=e,s=n),r.negative&&(r=r.neg(),i=i.neg()),o.negative&&(o=o.neg(),s=s.neg()),[{a:r,b:i},{a:o,b:s}]},c.prototype._endoSplit=function(t){var e=this.endo.basis,n=e[0],r=e[1],i=r.b.mul(t).divRound(this.n),a=n.b.neg().mul(t).divRound(this.n),o=i.mul(n.a),s=a.mul(r.a),u=i.mul(n.b),c=a.mul(r.b);return{k1:t.sub(o).sub(s),k2:u.add(c).neg()}},c.prototype.pointFromX=function(t,e){(t=new a(t,16)).red||(t=t.toRed(this.red));var n=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),r=n.redSqrt();if(0!==r.redSqr().redSub(n).cmp(this.zero))throw new Error("invalid point");var i=r.fromRed().isOdd();return(e&&!i||!e&&i)&&(r=r.redNeg()),this.point(t,r)},c.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,n=t.y,r=this.a.redMul(e),i=e.redSqr().redMul(e).redIAdd(r).redIAdd(this.b);return 0===n.redSqr().redISub(i).cmpn(0)},c.prototype._endoWnafMulAdd=function(t,e,n){for(var r=this._endoWnafT1,i=this._endoWnafT2,a=0;a<t.length;a++){var o=this._endoSplit(e[a]),s=t[a],u=s._getBeta();o.k1.negative&&(o.k1.ineg(),s=s.neg(!0)),o.k2.negative&&(o.k2.ineg(),u=u.neg(!0)),r[2*a]=s,r[2*a+1]=u,i[2*a]=o.k1,i[2*a+1]=o.k2}for(var c=this._wnafMulAdd(1,r,i,2*a,n),l=0;l<2*a;l++)r[l]=null,i[l]=null;return c},o(l,s.BasePoint),c.prototype.point=function(t,e,n){return new l(this,t,e,n)},c.prototype.pointFromJSON=function(t,e){return l.fromJSON(this,t,e)},l.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var n=this.curve,r=function(t){return n.point(t.x.redMul(n.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(r)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(r)}}}return e}},l.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},l.fromJSON=function(t,e,n){"string"==typeof e&&(e=JSON.parse(e));var r=t.point(e[0],e[1],n);if(!e[2])return r;function i(e){return t.point(e[0],e[1],n)}var a=e[2];return r.precomputed={beta:null,doubles:a.doubles&&{step:a.doubles.step,points:[r].concat(a.doubles.points.map(i))},naf:a.naf&&{wnd:a.naf.wnd,points:[r].concat(a.naf.points.map(i))}},r},l.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},l.prototype.isInfinity=function(){return this.inf},l.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var n=e.redSqr().redISub(this.x).redISub(t.x),r=e.redMul(this.x.redSub(n)).redISub(this.y);return this.curve.point(n,r)},l.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,n=this.x.redSqr(),r=t.redInvm(),i=n.redAdd(n).redIAdd(n).redIAdd(e).redMul(r),a=i.redSqr().redISub(this.x.redAdd(this.x)),o=i.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,o)},l.prototype.getX=function(){return this.x.fromRed()},l.prototype.getY=function(){return this.y.fromRed()},l.prototype.mul=function(t){return t=new a(t,16),this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},l.prototype.mulAdd=function(t,e,n){var r=[this,e],i=[t,n];return this.curve.endo?this.curve._endoWnafMulAdd(r,i):this.curve._wnafMulAdd(1,r,i,2)},l.prototype.jmulAdd=function(t,e,n){var r=[this,e],i=[t,n];return this.curve.endo?this.curve._endoWnafMulAdd(r,i,!0):this.curve._wnafMulAdd(1,r,i,2,!0)},l.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},l.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var n=this.precomputed,r=function(t){return t.neg()};e.precomputed={naf:n.naf&&{wnd:n.naf.wnd,points:n.naf.points.map(r)},doubles:n.doubles&&{step:n.doubles.step,points:n.doubles.points.map(r)}}}return e},l.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},o(f,s.BasePoint),c.prototype.jpoint=function(t,e,n){return new f(this,t,e,n)},f.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),n=this.x.redMul(e),r=this.y.redMul(e).redMul(t);return this.curve.point(n,r)},f.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},f.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),n=this.z.redSqr(),r=this.x.redMul(e),i=t.x.redMul(n),a=this.y.redMul(e.redMul(t.z)),o=t.y.redMul(n.redMul(this.z)),s=r.redSub(i),u=a.redSub(o);if(0===s.cmpn(0))return 0!==u.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=s.redSqr(),l=c.redMul(s),f=r.redMul(c),h=u.redSqr().redIAdd(l).redISub(f).redISub(f),p=u.redMul(f.redISub(h)).redISub(a.redMul(l)),d=this.z.redMul(t.z).redMul(s);return this.curve.jpoint(h,p,d)},f.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),n=this.x,r=t.x.redMul(e),i=this.y,a=t.y.redMul(e).redMul(this.z),o=n.redSub(r),s=i.redSub(a);if(0===o.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var u=o.redSqr(),c=u.redMul(o),l=n.redMul(u),f=s.redSqr().redIAdd(c).redISub(l).redISub(l),h=s.redMul(l.redISub(f)).redISub(i.redMul(c)),p=this.z.redMul(o);return this.curve.jpoint(f,h,p)},f.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var e=this,n=0;n<t;n++)e=e.dbl();return e}var r=this.curve.a,i=this.curve.tinv,a=this.x,o=this.y,s=this.z,u=s.redSqr().redSqr(),c=o.redAdd(o);for(n=0;n<t;n++){var l=a.redSqr(),f=c.redSqr(),h=f.redSqr(),p=l.redAdd(l).redIAdd(l).redIAdd(r.redMul(u)),d=a.redMul(f),m=p.redSqr().redISub(d.redAdd(d)),g=d.redISub(m),y=p.redMul(g);y=y.redIAdd(y).redISub(h);var v=c.redMul(s);n+1<t&&(u=u.redMul(h)),a=m,s=v,c=y}return this.curve.jpoint(a,c.redMul(i),s)},f.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},f.prototype._zeroDbl=function(){var t,e,n;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),a=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(r).redISub(a);o=o.redIAdd(o);var s=r.redAdd(r).redIAdd(r),u=s.redSqr().redISub(o).redISub(o),c=a.redIAdd(a);c=(c=c.redIAdd(c)).redIAdd(c),t=u,e=s.redMul(o.redISub(u)).redISub(c),n=this.y.redAdd(this.y)}else{var l=this.x.redSqr(),f=this.y.redSqr(),h=f.redSqr(),p=this.x.redAdd(f).redSqr().redISub(l).redISub(h);p=p.redIAdd(p);var d=l.redAdd(l).redIAdd(l),m=d.redSqr(),g=h.redIAdd(h);g=(g=g.redIAdd(g)).redIAdd(g),t=m.redISub(p).redISub(p),e=d.redMul(p.redISub(t)).redISub(g),n=(n=this.y.redMul(this.z)).redIAdd(n)}return this.curve.jpoint(t,e,n)},f.prototype._threeDbl=function(){var t,e,n;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),a=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(r).redISub(a);o=o.redIAdd(o);var s=r.redAdd(r).redIAdd(r).redIAdd(this.curve.a),u=s.redSqr().redISub(o).redISub(o);t=u;var c=a.redIAdd(a);c=(c=c.redIAdd(c)).redIAdd(c),e=s.redMul(o.redISub(u)).redISub(c),n=this.y.redAdd(this.y)}else{var l=this.z.redSqr(),f=this.y.redSqr(),h=this.x.redMul(f),p=this.x.redSub(l).redMul(this.x.redAdd(l));p=p.redAdd(p).redIAdd(p);var d=h.redIAdd(h),m=(d=d.redIAdd(d)).redAdd(d);t=p.redSqr().redISub(m),n=this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);var g=f.redSqr();g=(g=(g=g.redIAdd(g)).redIAdd(g)).redIAdd(g),e=p.redMul(d.redISub(t)).redISub(g)}return this.curve.jpoint(t,e,n)},f.prototype._dbl=function(){var t=this.curve.a,e=this.x,n=this.y,r=this.z,i=r.redSqr().redSqr(),a=e.redSqr(),o=n.redSqr(),s=a.redAdd(a).redIAdd(a).redIAdd(t.redMul(i)),u=e.redAdd(e),c=(u=u.redIAdd(u)).redMul(o),l=s.redSqr().redISub(c.redAdd(c)),f=c.redISub(l),h=o.redSqr();h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var p=s.redMul(f).redISub(h),d=n.redAdd(n).redMul(r);return this.curve.jpoint(l,p,d)},f.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),n=this.z.redSqr(),r=e.redSqr(),i=t.redAdd(t).redIAdd(t),a=i.redSqr(),o=this.x.redAdd(e).redSqr().redISub(t).redISub(r),s=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(a)).redSqr(),u=r.redIAdd(r);u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var c=i.redIAdd(o).redSqr().redISub(a).redISub(s).redISub(u),l=e.redMul(c);l=(l=l.redIAdd(l)).redIAdd(l);var f=this.x.redMul(s).redISub(l);f=(f=f.redIAdd(f)).redIAdd(f);var h=this.y.redMul(c.redMul(u.redISub(c)).redISub(o.redMul(s)));h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var p=this.z.redAdd(o).redSqr().redISub(n).redISub(s);return this.curve.jpoint(f,h,p)},f.prototype.mul=function(t,e){return t=new a(t,e),this.curve._wnafMul(this,t)},f.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),n=t.z.redSqr();if(0!==this.x.redMul(n).redISub(t.x.redMul(e)).cmpn(0))return!1;var r=e.redMul(this.z),i=n.redMul(t.z);return 0===this.y.redMul(i).redISub(t.y.redMul(r)).cmpn(0)},f.prototype.eqXToP=function(t){var e=this.z.redSqr(),n=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(n))return!0;for(var r=t.clone(),i=this.curve.redN.redMul(e);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(n.redIAdd(i),0===this.x.cmp(n))return!0}},f.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},f.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},function(t,e,n){"use strict";var r=n(45),i=n(5),a=n(2),o=r.base,s=n(8).utils;function u(t){o.call(this,"mont",t),this.a=new i(t.a,16).toRed(this.red),this.b=new i(t.b,16).toRed(this.red),this.i4=new i(4).toRed(this.red).redInvm(),this.two=new i(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function c(t,e,n){o.BasePoint.call(this,t,"projective"),null===e&&null===n?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new i(e,16),this.z=new i(n,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}a(u,o),t.exports=u,u.prototype.validate=function(t){var e=t.normalize().x,n=e.redSqr(),r=n.redMul(e).redAdd(n.redMul(this.a)).redAdd(e);return 0===r.redSqrt().redSqr().cmp(r)},a(c,o.BasePoint),u.prototype.decodePoint=function(t,e){return this.point(s.toArray(t,e),1)},u.prototype.point=function(t,e){return new c(this,t,e)},u.prototype.pointFromJSON=function(t){return c.fromJSON(this,t)},c.prototype.precompute=function(){},c.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},c.fromJSON=function(t,e){return new c(t,e[0],e[1]||t.one)},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},c.prototype.dbl=function(){var t=this.x.redAdd(this.z).redSqr(),e=this.x.redSub(this.z).redSqr(),n=t.redSub(e),r=t.redMul(e),i=n.redMul(e.redAdd(this.curve.a24.redMul(n)));return this.curve.point(r,i)},c.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.diffAdd=function(t,e){var n=this.x.redAdd(this.z),r=this.x.redSub(this.z),i=t.x.redAdd(t.z),a=t.x.redSub(t.z).redMul(n),o=i.redMul(r),s=e.z.redMul(a.redAdd(o).redSqr()),u=e.x.redMul(a.redISub(o).redSqr());return this.curve.point(s,u)},c.prototype.mul=function(t){for(var e=t.clone(),n=this,r=this.curve.point(null,null),i=[];0!==e.cmpn(0);e.iushrn(1))i.push(e.andln(1));for(var a=i.length-1;a>=0;a--)0===i[a]?(n=n.diffAdd(r,this),r=r.dbl()):(r=n.diffAdd(r,this),n=n.dbl());return r},c.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.eq=function(t){return 0===this.getX().cmp(t.getX())},c.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},function(t,e,n){"use strict";var r=n(45),i=n(8),a=n(5),o=n(2),s=r.base,u=i.utils.assert;function c(t){this.twisted=1!=(0|t.a),this.mOneA=this.twisted&&-1==(0|t.a),this.extended=this.mOneA,s.call(this,"edwards",t),this.a=new a(t.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new a(t.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new a(t.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),u(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|t.c)}function l(t,e,n,r,i){s.BasePoint.call(this,t,"projective"),null===e&&null===n&&null===r?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new a(e,16),this.y=new a(n,16),this.z=r?new a(r,16):this.curve.one,this.t=i&&new a(i,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}o(c,s),t.exports=c,c.prototype._mulA=function(t){return this.mOneA?t.redNeg():this.a.redMul(t)},c.prototype._mulC=function(t){return this.oneC?t:this.c.redMul(t)},c.prototype.jpoint=function(t,e,n,r){return this.point(t,e,n,r)},c.prototype.pointFromX=function(t,e){(t=new a(t,16)).red||(t=t.toRed(this.red));var n=t.redSqr(),r=this.c2.redSub(this.a.redMul(n)),i=this.one.redSub(this.c2.redMul(this.d).redMul(n)),o=r.redMul(i.redInvm()),s=o.redSqrt();if(0!==s.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");var u=s.fromRed().isOdd();return(e&&!u||!e&&u)&&(s=s.redNeg()),this.point(t,s)},c.prototype.pointFromY=function(t,e){(t=new a(t,16)).red||(t=t.toRed(this.red));var n=t.redSqr(),r=n.redSub(this.c2),i=n.redMul(this.d).redMul(this.c2).redSub(this.a),o=r.redMul(i.redInvm());if(0===o.cmp(this.zero)){if(e)throw new Error("invalid point");return this.point(this.zero,t)}var s=o.redSqrt();if(0!==s.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");return s.fromRed().isOdd()!==e&&(s=s.redNeg()),this.point(s,t)},c.prototype.validate=function(t){if(t.isInfinity())return!0;t.normalize();var e=t.x.redSqr(),n=t.y.redSqr(),r=e.redMul(this.a).redAdd(n),i=this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(n)));return 0===r.cmp(i)},o(l,s.BasePoint),c.prototype.pointFromJSON=function(t){return l.fromJSON(this,t)},c.prototype.point=function(t,e,n,r){return new l(this,t,e,n,r)},l.fromJSON=function(t,e){return new l(t,e[0],e[1],e[2])},l.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},l.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},l.prototype._extDbl=function(){var t=this.x.redSqr(),e=this.y.redSqr(),n=this.z.redSqr();n=n.redIAdd(n);var r=this.curve._mulA(t),i=this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),a=r.redAdd(e),o=a.redSub(n),s=r.redSub(e),u=i.redMul(o),c=a.redMul(s),l=i.redMul(s),f=o.redMul(a);return this.curve.point(u,c,f,l)},l.prototype._projDbl=function(){var t,e,n,r=this.x.redAdd(this.y).redSqr(),i=this.x.redSqr(),a=this.y.redSqr();if(this.curve.twisted){var o=(c=this.curve._mulA(i)).redAdd(a);if(this.zOne)t=r.redSub(i).redSub(a).redMul(o.redSub(this.curve.two)),e=o.redMul(c.redSub(a)),n=o.redSqr().redSub(o).redSub(o);else{var s=this.z.redSqr(),u=o.redSub(s).redISub(s);t=r.redSub(i).redISub(a).redMul(u),e=o.redMul(c.redSub(a)),n=o.redMul(u)}}else{var c=i.redAdd(a);s=this.curve._mulC(this.z).redSqr(),u=c.redSub(s).redSub(s);t=this.curve._mulC(r.redISub(c)).redMul(u),e=this.curve._mulC(c).redMul(i.redISub(a)),n=c.redMul(u)}return this.curve.point(t,e,n)},l.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},l.prototype._extAdd=function(t){var e=this.y.redSub(this.x).redMul(t.y.redSub(t.x)),n=this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),r=this.t.redMul(this.curve.dd).redMul(t.t),i=this.z.redMul(t.z.redAdd(t.z)),a=n.redSub(e),o=i.redSub(r),s=i.redAdd(r),u=n.redAdd(e),c=a.redMul(o),l=s.redMul(u),f=a.redMul(u),h=o.redMul(s);return this.curve.point(c,l,h,f)},l.prototype._projAdd=function(t){var e,n,r=this.z.redMul(t.z),i=r.redSqr(),a=this.x.redMul(t.x),o=this.y.redMul(t.y),s=this.curve.d.redMul(a).redMul(o),u=i.redSub(s),c=i.redAdd(s),l=this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(a).redISub(o),f=r.redMul(u).redMul(l);return this.curve.twisted?(e=r.redMul(c).redMul(o.redSub(this.curve._mulA(a))),n=u.redMul(c)):(e=r.redMul(c).redMul(o.redSub(a)),n=this.curve._mulC(u).redMul(c)),this.curve.point(f,e,n)},l.prototype.add=function(t){return this.isInfinity()?t:t.isInfinity()?this:this.curve.extended?this._extAdd(t):this._projAdd(t)},l.prototype.mul=function(t){return this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve._wnafMul(this,t)},l.prototype.mulAdd=function(t,e,n){return this.curve._wnafMulAdd(1,[this,e],[t,n],2,!1)},l.prototype.jmulAdd=function(t,e,n){return this.curve._wnafMulAdd(1,[this,e],[t,n],2,!0)},l.prototype.normalize=function(){if(this.zOne)return this;var t=this.z.redInvm();return this.x=this.x.redMul(t),this.y=this.y.redMul(t),this.t&&(this.t=this.t.redMul(t)),this.z=this.curve.one,this.zOne=!0,this},l.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},l.prototype.getX=function(){return this.normalize(),this.x.fromRed()},l.prototype.getY=function(){return this.normalize(),this.y.fromRed()},l.prototype.eq=function(t){return this===t||0===this.getX().cmp(t.getX())&&0===this.getY().cmp(t.getY())},l.prototype.eqXToP=function(t){var e=t.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(e))return!0;for(var n=t.clone(),r=this.curve.redN.redMul(this.z);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(r),0===this.x.cmp(e))return!0}},l.prototype.toP=l.prototype.normalize,l.prototype.mixedAdd=l.prototype.add},function(t,e,n){"use strict";var r,i=e,a=n(67),o=n(8),s=o.utils.assert;function u(t){"short"===t.type?this.curve=new o.curve.short(t):"edwards"===t.type?this.curve=new o.curve.edwards(t):this.curve=new o.curve.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,s(this.g.validate(),"Invalid curve"),s(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function c(t,e){Object.defineProperty(i,t,{configurable:!0,enumerable:!0,get:function(){var n=new u(e);return Object.defineProperty(i,t,{configurable:!0,enumerable:!0,value:n}),n}})}i.PresetCurve=u,c("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:a.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),c("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:a.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),c("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:a.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),c("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:a.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),c("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:a.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),c("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:a.sha256,gRed:!1,g:["9"]}),c("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:a.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=n(193)}catch(t){r=void 0}c("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:a.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})},function(t,e,n){"use strict";e.sha1=n(188),e.sha224=n(189),e.sha256=n(110),e.sha384=n(190),e.sha512=n(111)},function(t,e,n){"use strict";var r=n(15),i=n(33),a=n(109),o=r.rotl32,s=r.sum32,u=r.sum32_5,c=a.ft_1,l=i.BlockHash,f=[1518500249,1859775393,2400959708,3395469782];function h(){if(!(this instanceof h))return new h;l.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}r.inherits(h,l),t.exports=h,h.blockSize=512,h.outSize=160,h.hmacStrength=80,h.padLength=64,h.prototype._update=function(t,e){for(var n=this.W,r=0;r<16;r++)n[r]=t[e+r];for(;r<n.length;r++)n[r]=o(n[r-3]^n[r-8]^n[r-14]^n[r-16],1);var i=this.h[0],a=this.h[1],l=this.h[2],h=this.h[3],p=this.h[4];for(r=0;r<n.length;r++){var d=~~(r/20),m=u(o(i,5),c(d,a,l,h),p,n[r],f[d]);p=h,h=l,l=o(a,30),a=i,i=m}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],a),this.h[2]=s(this.h[2],l),this.h[3]=s(this.h[3],h),this.h[4]=s(this.h[4],p)},h.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(t,e,n){"use strict";var r=n(15),i=n(110);function a(){if(!(this instanceof a))return new a;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}r.inherits(a,i),t.exports=a,a.blockSize=512,a.outSize=224,a.hmacStrength=192,a.padLength=64,a.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h.slice(0,7),"big"):r.split32(this.h.slice(0,7),"big")}},function(t,e,n){"use strict";var r=n(15),i=n(111);function a(){if(!(this instanceof a))return new a;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}r.inherits(a,i),t.exports=a,a.blockSize=1024,a.outSize=384,a.hmacStrength=192,a.padLength=128,a.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h.slice(0,12),"big"):r.split32(this.h.slice(0,12),"big")}},function(t,e,n){"use strict";var r=n(15),i=n(33),a=r.rotl32,o=r.sum32,s=r.sum32_3,u=r.sum32_4,c=i.BlockHash;function l(){if(!(this instanceof l))return new l;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function f(t,e,n,r){return t<=15?e^n^r:t<=31?e&n|~e&r:t<=47?(e|~n)^r:t<=63?e&r|n&~r:e^(n|~r)}function h(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function p(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}r.inherits(l,c),e.ripemd160=l,l.blockSize=512,l.outSize=160,l.hmacStrength=192,l.padLength=64,l.prototype._update=function(t,e){for(var n=this.h[0],r=this.h[1],i=this.h[2],c=this.h[3],l=this.h[4],v=n,b=r,w=i,_=c,x=l,E=0;E<80;E++){var S=o(a(u(n,f(E,r,i,c),t[d[E]+e],h(E)),g[E]),l);n=l,l=c,c=a(i,10),i=r,r=S,S=o(a(u(v,f(79-E,b,w,_),t[m[E]+e],p(E)),y[E]),x),v=x,x=_,_=a(w,10),w=b,b=S}S=s(this.h[1],i,_),this.h[1]=s(this.h[2],c,x),this.h[2]=s(this.h[3],l,v),this.h[3]=s(this.h[4],n,b),this.h[4]=s(this.h[0],r,w),this.h[0]=S},l.prototype._digest=function(t){return"hex"===t?r.toHex32(this.h,"little"):r.split32(this.h,"little")};var d=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],m=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],g=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],y=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(t,e,n){"use strict";var r=n(15),i=n(12);function a(t,e,n){if(!(this instanceof a))return new a(t,e,n);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(r.toArray(e,n))}t.exports=a,a.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),i(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},a.prototype.update=function(t,e){return this.inner.update(t,e),this},a.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)}},function(t,e){t.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},function(t,e,n){"use strict";var r=n(5),i=n(195),a=n(8),o=a.utils.assert,s=n(196),u=n(197);function c(t){if(!(this instanceof c))return new c(t);"string"==typeof t&&(o(a.curves.hasOwnProperty(t),"Unknown curve "+t),t=a.curves[t]),t instanceof a.curves.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}t.exports=c,c.prototype.keyPair=function(t){return new s(this,t)},c.prototype.keyFromPrivate=function(t,e){return s.fromPrivate(this,t,e)},c.prototype.keyFromPublic=function(t,e){return s.fromPublic(this,t,e)},c.prototype.genKeyPair=function(t){t||(t={});for(var e=new i({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||a.rand(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),n=this.n.byteLength(),o=this.n.sub(new r(2));;){var s=new r(e.generate(n));if(!(s.cmp(o)>0))return s.iaddn(1),this.keyFromPrivate(s)}},c.prototype._truncateToN=function(t,e){var n=8*t.byteLength()-this.n.bitLength();return n>0&&(t=t.ushrn(n)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},c.prototype.sign=function(t,e,n,a){"object"==typeof n&&(a=n,n=null),a||(a={}),e=this.keyFromPrivate(e,n),t=this._truncateToN(new r(t,16));for(var o=this.n.byteLength(),s=e.getPrivate().toArray("be",o),c=t.toArray("be",o),l=new i({hash:this.hash,entropy:s,nonce:c,pers:a.pers,persEnc:a.persEnc||"utf8"}),f=this.n.sub(new r(1)),h=0;;h++){var p=a.k?a.k(h):new r(l.generate(this.n.byteLength()));if(!((p=this._truncateToN(p,!0)).cmpn(1)<=0||p.cmp(f)>=0)){var d=this.g.mul(p);if(!d.isInfinity()){var m=d.getX(),g=m.umod(this.n);if(0!==g.cmpn(0)){var y=p.invm(this.n).mul(g.mul(e.getPrivate()).iadd(t));if(0!==(y=y.umod(this.n)).cmpn(0)){var v=(d.getY().isOdd()?1:0)|(0!==m.cmp(g)?2:0);return a.canonical&&y.cmp(this.nh)>0&&(y=this.n.sub(y),v^=1),new u({r:g,s:y,recoveryParam:v})}}}}}},c.prototype.verify=function(t,e,n,i){t=this._truncateToN(new r(t,16)),n=this.keyFromPublic(n,i);var a=(e=new u(e,"hex")).r,o=e.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var s,c=o.invm(this.n),l=c.mul(t).umod(this.n),f=c.mul(a).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(l,n.getPublic(),f)).isInfinity()&&s.eqXToP(a):!(s=this.g.mulAdd(l,n.getPublic(),f)).isInfinity()&&0===s.getX().umod(this.n).cmp(a)},c.prototype.recoverPubKey=function(t,e,n,i){o((3&n)===n,"The recovery param is more than two bits"),e=new u(e,i);var a=this.n,s=new r(t),c=e.r,l=e.s,f=1&n,h=n>>1;if(c.cmp(this.curve.p.umod(this.curve.n))>=0&&h)throw new Error("Unable to find sencond key candinate");c=h?this.curve.pointFromX(c.add(this.curve.n),f):this.curve.pointFromX(c,f);var p=e.r.invm(a),d=a.sub(s).mul(p).umod(a),m=l.mul(p).umod(a);return this.g.mulAdd(d,c,m)},c.prototype.getKeyRecoveryParam=function(t,e,n,r){if(null!==(e=new u(e,r)).recoveryParam)return e.recoveryParam;for(var i=0;i<4;i++){var a;try{a=this.recoverPubKey(t,e,i)}catch(t){continue}if(a.eq(n))return i}throw new Error("Unable to find valid recovery factor")}},function(t,e,n){"use strict";var r=n(67),i=n(108),a=n(12);function o(t){if(!(this instanceof o))return new o(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=i.toArray(t.entropy,t.entropyEnc||"hex"),n=i.toArray(t.nonce,t.nonceEnc||"hex"),r=i.toArray(t.pers,t.persEnc||"hex");a(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,n,r)}t.exports=o,o.prototype._init=function(t,e,n){var r=t.concat(e).concat(n);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(r),this._reseed=1,this.reseedInterval=281474976710656},o.prototype._hmac=function(){return new r.hmac(this.hash,this.K)},o.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},o.prototype.reseed=function(t,e,n,r){"string"!=typeof e&&(r=n,n=e,e=null),t=i.toArray(t,e),n=i.toArray(n,r),a(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(t.concat(n||[])),this._reseed=1},o.prototype.generate=function(t,e,n,r){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof e&&(r=n,n=e,e=null),n&&(n=i.toArray(n,r||"hex"),this._update(n));for(var a=[];a.length<t;)this.V=this._hmac().update(this.V).digest(),a=a.concat(this.V);var o=a.slice(0,t);return this._update(n),this._reseed++,i.encode(o,e)}},function(t,e,n){"use strict";var r=n(5),i=n(8).utils.assert;function a(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}t.exports=a,a.fromPublic=function(t,e,n){return e instanceof a?e:new a(t,{pub:e,pubEnc:n})},a.fromPrivate=function(t,e,n){return e instanceof a?e:new a(t,{priv:e,privEnc:n})},a.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},a.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},a.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},a.prototype._importPrivate=function(t,e){this.priv=new r(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},a.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?i(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||i(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},a.prototype.derive=function(t){return t.mul(this.priv).getX()},a.prototype.sign=function(t,e,n){return this.ec.sign(t,this,e,n)},a.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},a.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},function(t,e,n){"use strict";var r=n(5),i=n(8).utils,a=i.assert;function o(t,e){if(t instanceof o)return t;this._importDER(t,e)||(a(t.r&&t.s,"Signature without r or s"),this.r=new r(t.r,16),this.s=new r(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}function s(){this.place=0}function u(t,e){var n=t[e.place++];if(!(128&n))return n;for(var r=15&n,i=0,a=0,o=e.place;a<r;a++,o++)i<<=8,i|=t[o];return e.place=o,i}function c(t){for(var e=0,n=t.length-1;!t[e]&&!(128&t[e+1])&&e<n;)e++;return 0===e?t:t.slice(e)}function l(t,e){if(e<128)t.push(e);else{var n=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|n);--n;)t.push(e>>>(n<<3)&255);t.push(e)}}t.exports=o,o.prototype._importDER=function(t,e){t=i.toArray(t,e);var n=new s;if(48!==t[n.place++])return!1;if(u(t,n)+n.place!==t.length)return!1;if(2!==t[n.place++])return!1;var a=u(t,n),o=t.slice(n.place,a+n.place);if(n.place+=a,2!==t[n.place++])return!1;var c=u(t,n);if(t.length!==c+n.place)return!1;var l=t.slice(n.place,c+n.place);return 0===o[0]&&128&o[1]&&(o=o.slice(1)),0===l[0]&&128&l[1]&&(l=l.slice(1)),this.r=new r(o),this.s=new r(l),this.recoveryParam=null,!0},o.prototype.toDER=function(t){var e=this.r.toArray(),n=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&n[0]&&(n=[0].concat(n)),e=c(e),n=c(n);!(n[0]||128&n[1]);)n=n.slice(1);var r=[2];l(r,e.length),(r=r.concat(e)).push(2),l(r,n.length);var a=r.concat(n),o=[48];return l(o,a.length),o=o.concat(a),i.encode(o,t)}},function(t,e,n){"use strict";var r=n(67),i=n(8),a=i.utils,o=a.assert,s=a.parseBytes,u=n(199),c=n(200);function l(t){if(o("ed25519"===t,"only tested with ed25519 so far"),!(this instanceof l))return new l(t);t=i.curves[t].curve;this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8),this.hash=r.sha512}t.exports=l,l.prototype.sign=function(t,e){t=s(t);var n=this.keyFromSecret(e),r=this.hashInt(n.messagePrefix(),t),i=this.g.mul(r),a=this.encodePoint(i),o=this.hashInt(a,n.pubBytes(),t).mul(n.priv()),u=r.add(o).umod(this.curve.n);return this.makeSignature({R:i,S:u,Rencoded:a})},l.prototype.verify=function(t,e,n){t=s(t),e=this.makeSignature(e);var r=this.keyFromPublic(n),i=this.hashInt(e.Rencoded(),r.pubBytes(),t),a=this.g.mul(e.S());return e.R().add(r.pub().mul(i)).eq(a)},l.prototype.hashInt=function(){for(var t=this.hash(),e=0;e<arguments.length;e++)t.update(arguments[e]);return a.intFromLE(t.digest()).umod(this.curve.n)},l.prototype.keyFromPublic=function(t){return u.fromPublic(this,t)},l.prototype.keyFromSecret=function(t){return u.fromSecret(this,t)},l.prototype.makeSignature=function(t){return t instanceof c?t:new c(this,t)},l.prototype.encodePoint=function(t){var e=t.getY().toArray("le",this.encodingLength);return e[this.encodingLength-1]|=t.getX().isOdd()?128:0,e},l.prototype.decodePoint=function(t){var e=(t=a.parseBytes(t)).length-1,n=t.slice(0,e).concat(-129&t[e]),r=0!=(128&t[e]),i=a.intFromLE(n);return this.curve.pointFromY(i,r)},l.prototype.encodeInt=function(t){return t.toArray("le",this.encodingLength)},l.prototype.decodeInt=function(t){return a.intFromLE(t)},l.prototype.isPoint=function(t){return t instanceof this.pointClass}},function(t,e,n){"use strict";var r=n(8).utils,i=r.assert,a=r.parseBytes,o=r.cachedProperty;function s(t,e){this.eddsa=t,this._secret=a(e.secret),t.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=a(e.pub)}s.fromPublic=function(t,e){return e instanceof s?e:new s(t,{pub:e})},s.fromSecret=function(t,e){return e instanceof s?e:new s(t,{secret:e})},s.prototype.secret=function(){return this._secret},o(s,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),o(s,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),o(s,"privBytes",function(){var t=this.eddsa,e=this.hash(),n=t.encodingLength-1,r=e.slice(0,t.encodingLength);return r[0]&=248,r[n]&=127,r[n]|=64,r}),o(s,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),o(s,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()}),o(s,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)}),s.prototype.sign=function(t){return i(this._secret,"KeyPair can only verify"),this.eddsa.sign(t,this)},s.prototype.verify=function(t,e){return this.eddsa.verify(t,e,this)},s.prototype.getSecret=function(t){return i(this._secret,"KeyPair is public only"),r.encode(this.secret(),t)},s.prototype.getPublic=function(t){return r.encode(this.pubBytes(),t)},t.exports=s},function(t,e,n){"use strict";var r=n(5),i=n(8).utils,a=i.assert,o=i.cachedProperty,s=i.parseBytes;function u(t,e){this.eddsa=t,"object"!=typeof e&&(e=s(e)),Array.isArray(e)&&(e={R:e.slice(0,t.encodingLength),S:e.slice(t.encodingLength)}),a(e.R&&e.S,"Signature without R or S"),t.isPoint(e.R)&&(this._R=e.R),e.S instanceof r&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}o(u,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),o(u,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),o(u,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),o(u,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),u.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},u.prototype.toHex=function(){return i.encode(this.toBytes(),"hex").toUpperCase()},t.exports=u},function(t,e,n){"use strict";var r=n(34);e.certificate=n(212);var i=r.define("RSAPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())});e.RSAPrivateKey=i;var a=r.define("RSAPublicKey",function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())});e.RSAPublicKey=a;var o=r.define("SubjectPublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(s),this.key("subjectPublicKey").bitstr())});e.PublicKey=o;var s=r.define("AlgorithmIdentifier",function(){this.seq().obj(this.key("algorithm").objid(),this.key("none").null_().optional(),this.key("curve").objid().optional(),this.key("params").seq().obj(this.key("p").int(),this.key("q").int(),this.key("g").int()).optional())}),u=r.define("PrivateKeyInfo",function(){this.seq().obj(this.key("version").int(),this.key("algorithm").use(s),this.key("subjectPrivateKey").octstr())});e.PrivateKey=u;var c=r.define("EncryptedPrivateKeyInfo",function(){this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(),this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(),this.key("kdeparams").seq().obj(this.key("salt").octstr(),this.key("iters").int())),this.key("cipher").seq().obj(this.key("algo").objid(),this.key("iv").octstr()))),this.key("subjectPrivateKey").octstr())});e.EncryptedPrivateKey=c;var l=r.define("DSAPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("p").int(),this.key("q").int(),this.key("g").int(),this.key("pub_key").int(),this.key("priv_key").int())});e.DSAPrivateKey=l,e.DSAparam=r.define("DSAparam",function(){this.int()});var f=r.define("ECPrivateKey",function(){this.seq().obj(this.key("version").int(),this.key("privateKey").octstr(),this.key("parameters").optional().explicit(0).use(h),this.key("publicKey").optional().explicit(1).bitstr())});e.ECPrivateKey=f;var h=r.define("ECParameters",function(){this.choice({namedCurve:this.objid()})});e.signature=r.define("signature",function(){this.seq().obj(this.key("r").int(),this.key("s").int())})},function(t,e,n){var r=n(34),i=n(2);function a(t,e){this.name=t,this.body=e,this.decoders={},this.encoders={}}e.define=function(t,e){return new a(t,e)},a.prototype._createNamed=function(t){var e;try{e=n(203).runInThisContext("(function "+this.name+"(entity) {\n  this._initNamed(entity);\n})")}catch(t){e=function(t){this._initNamed(t)}}return i(e,t),e.prototype._initNamed=function(e){t.call(this,e)},new e(this)},a.prototype._getDecoder=function(t){return t=t||"der",this.decoders.hasOwnProperty(t)||(this.decoders[t]=this._createNamed(r.decoders[t])),this.decoders[t]},a.prototype.decode=function(t,e,n){return this._getDecoder(e).decode(t,n)},a.prototype._getEncoder=function(t){return t=t||"der",this.encoders.hasOwnProperty(t)||(this.encoders[t]=this._createNamed(r.encoders[t])),this.encoders[t]},a.prototype.encode=function(t,e,n){return this._getEncoder(e).encode(t,n)}},function(module,exports,__webpack_require__){var indexOf=__webpack_require__(204),Object_keys=function(t){if(Object.keys)return Object.keys(t);var e=[];for(var n in t)e.push(n);return e},forEach=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n++)e(t[n],n,t)},defineProp=function(){try{return Object.defineProperty({},"_",{}),function(t,e,n){Object.defineProperty(t,e,{writable:!0,enumerable:!1,configurable:!0,value:n})}}catch(t){return function(t,e,n){t[e]=n}}}(),globals=["Array","Boolean","Date","Error","EvalError","Function","Infinity","JSON","Math","NaN","Number","Object","RangeError","ReferenceError","RegExp","String","SyntaxError","TypeError","URIError","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","eval","isFinite","isNaN","parseFloat","parseInt","undefined","unescape"];function Context(){}Context.prototype={};var Script=exports.Script=function(t){if(!(this instanceof Script))return new Script(t);this.code=t};Script.prototype.runInContext=function(t){if(!(t instanceof Context))throw new TypeError("needs a 'context' argument.");var e=document.createElement("iframe");e.style||(e.style={}),e.style.display="none",document.body.appendChild(e);var n=e.contentWindow,r=n.eval,i=n.execScript;!r&&i&&(i.call(n,"null"),r=n.eval),forEach(Object_keys(t),function(e){n[e]=t[e]}),forEach(globals,function(e){t[e]&&(n[e]=t[e])});var a=Object_keys(n),o=r.call(n,this.code);return forEach(Object_keys(n),function(e){(e in t||-1===indexOf(a,e))&&(t[e]=n[e])}),forEach(globals,function(e){e in t||defineProp(t,e,n[e])}),document.body.removeChild(e),o},Script.prototype.runInThisContext=function(){return eval(this.code)},Script.prototype.runInNewContext=function(t){var e=Script.createContext(t),n=this.runInContext(e);return forEach(Object_keys(e),function(n){t[n]=e[n]}),n},forEach(Object_keys(Script.prototype),function(t){exports[t]=Script[t]=function(e){var n=Script(e);return n[t].apply(n,[].slice.call(arguments,1))}}),exports.createScript=function(t){return exports.Script(t)},exports.createContext=Script.createContext=function(t){var e=new Context;return"object"==typeof t&&forEach(Object_keys(t),function(n){e[n]=t[n]}),e}},function(t,e){var n=[].indexOf;t.exports=function(t,e){if(n)return t.indexOf(e);for(var r=0;r<t.length;++r)if(t[r]===e)return r;return-1}},function(t,e,n){var r=n(2);function i(t){this._reporterState={obj:null,path:[],options:t||{},errors:[]}}function a(t,e){this.path=t,this.rethrow(e)}e.Reporter=i,i.prototype.isError=function(t){return t instanceof a},i.prototype.save=function(){var t=this._reporterState;return{obj:t.obj,pathLen:t.path.length}},i.prototype.restore=function(t){var e=this._reporterState;e.obj=t.obj,e.path=e.path.slice(0,t.pathLen)},i.prototype.enterKey=function(t){return this._reporterState.path.push(t)},i.prototype.exitKey=function(t){var e=this._reporterState;e.path=e.path.slice(0,t-1)},i.prototype.leaveKey=function(t,e,n){var r=this._reporterState;this.exitKey(t),null!==r.obj&&(r.obj[e]=n)},i.prototype.path=function(){return this._reporterState.path.join("/")},i.prototype.enterObject=function(){var t=this._reporterState,e=t.obj;return t.obj={},e},i.prototype.leaveObject=function(t){var e=this._reporterState,n=e.obj;return e.obj=t,n},i.prototype.error=function(t){var e,n=this._reporterState,r=t instanceof a;if(e=r?t:new a(n.path.map(function(t){return"["+JSON.stringify(t)+"]"}).join(""),t.message||t,t.stack),!n.options.partial)throw e;return r||n.errors.push(e),e},i.prototype.wrapResult=function(t){var e=this._reporterState;return e.options.partial?{result:this.isError(t)?null:t,errors:e.errors}:t},r(a,Error),a.prototype.rethrow=function(t){if(this.message=t+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,a),!this.stack)try{throw new Error(this.message)}catch(t){this.stack=t.stack}return this}},function(t,e,n){var r=n(35).Reporter,i=n(35).EncoderBuffer,a=n(35).DecoderBuffer,o=n(12),s=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],u=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(s);function c(t,e){var n={};this._baseState=n,n.enc=t,n.parent=e||null,n.children=null,n.tag=null,n.args=null,n.reverseArgs=null,n.choice=null,n.optional=!1,n.any=!1,n.obj=!1,n.use=null,n.useDecoder=null,n.key=null,n.default=null,n.explicit=null,n.implicit=null,n.contains=null,n.parent||(n.children=[],this._wrap())}t.exports=c;var l=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];c.prototype.clone=function(){var t=this._baseState,e={};l.forEach(function(n){e[n]=t[n]});var n=new this.constructor(e.parent);return n._baseState=e,n},c.prototype._wrap=function(){var t=this._baseState;u.forEach(function(e){this[e]=function(){var n=new this.constructor(this);return t.children.push(n),n[e].apply(n,arguments)}},this)},c.prototype._init=function(t){var e=this._baseState;o(null===e.parent),t.call(this),e.children=e.children.filter(function(t){return t._baseState.parent===this},this),o.equal(e.children.length,1,"Root node can have only one child")},c.prototype._useArgs=function(t){var e=this._baseState,n=t.filter(function(t){return t instanceof this.constructor},this);t=t.filter(function(t){return!(t instanceof this.constructor)},this),0!==n.length&&(o(null===e.children),e.children=n,n.forEach(function(t){t._baseState.parent=this},this)),0!==t.length&&(o(null===e.args),e.args=t,e.reverseArgs=t.map(function(t){if("object"!=typeof t||t.constructor!==Object)return t;var e={};return Object.keys(t).forEach(function(n){n==(0|n)&&(n|=0);var r=t[n];e[r]=n}),e}))},["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"].forEach(function(t){c.prototype[t]=function(){var e=this._baseState;throw new Error(t+" not implemented for encoding: "+e.enc)}}),s.forEach(function(t){c.prototype[t]=function(){var e=this._baseState,n=Array.prototype.slice.call(arguments);return o(null===e.tag),e.tag=t,this._useArgs(n),this}}),c.prototype.use=function(t){o(t);var e=this._baseState;return o(null===e.use),e.use=t,this},c.prototype.optional=function(){return this._baseState.optional=!0,this},c.prototype.def=function(t){var e=this._baseState;return o(null===e.default),e.default=t,e.optional=!0,this},c.prototype.explicit=function(t){var e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.explicit=t,this},c.prototype.implicit=function(t){var e=this._baseState;return o(null===e.explicit&&null===e.implicit),e.implicit=t,this},c.prototype.obj=function(){var t=this._baseState,e=Array.prototype.slice.call(arguments);return t.obj=!0,0!==e.length&&this._useArgs(e),this},c.prototype.key=function(t){var e=this._baseState;return o(null===e.key),e.key=t,this},c.prototype.any=function(){return this._baseState.any=!0,this},c.prototype.choice=function(t){var e=this._baseState;return o(null===e.choice),e.choice=t,this._useArgs(Object.keys(t).map(function(e){return t[e]})),this},c.prototype.contains=function(t){var e=this._baseState;return o(null===e.use),e.contains=t,this},c.prototype._decode=function(t,e){var n=this._baseState;if(null===n.parent)return t.wrapResult(n.children[0]._decode(t,e));var r,i=n.default,o=!0,s=null;if(null!==n.key&&(s=t.enterKey(n.key)),n.optional){var u=null;if(null!==n.explicit?u=n.explicit:null!==n.implicit?u=n.implicit:null!==n.tag&&(u=n.tag),null!==u||n.any){if(o=this._peekTag(t,u,n.any),t.isError(o))return o}else{var c=t.save();try{null===n.choice?this._decodeGeneric(n.tag,t,e):this._decodeChoice(t,e),o=!0}catch(t){o=!1}t.restore(c)}}if(n.obj&&o&&(r=t.enterObject()),o){if(null!==n.explicit){var l=this._decodeTag(t,n.explicit);if(t.isError(l))return l;t=l}var f=t.offset;if(null===n.use&&null===n.choice){if(n.any)c=t.save();var h=this._decodeTag(t,null!==n.implicit?n.implicit:n.tag,n.any);if(t.isError(h))return h;n.any?i=t.raw(c):t=h}if(e&&e.track&&null!==n.tag&&e.track(t.path(),f,t.length,"tagged"),e&&e.track&&null!==n.tag&&e.track(t.path(),t.offset,t.length,"content"),i=n.any?i:null===n.choice?this._decodeGeneric(n.tag,t,e):this._decodeChoice(t,e),t.isError(i))return i;if(n.any||null!==n.choice||null===n.children||n.children.forEach(function(n){n._decode(t,e)}),n.contains&&("octstr"===n.tag||"bitstr"===n.tag)){var p=new a(i);i=this._getUse(n.contains,t._reporterState.obj)._decode(p,e)}}return n.obj&&o&&(i=t.leaveObject(r)),null===n.key||null===i&&!0!==o?null!==s&&t.exitKey(s):t.leaveKey(s,n.key,i),i},c.prototype._decodeGeneric=function(t,e,n){var r=this._baseState;return"seq"===t||"set"===t?null:"seqof"===t||"setof"===t?this._decodeList(e,t,r.args[0],n):/str$/.test(t)?this._decodeStr(e,t,n):"objid"===t&&r.args?this._decodeObjid(e,r.args[0],r.args[1],n):"objid"===t?this._decodeObjid(e,null,null,n):"gentime"===t||"utctime"===t?this._decodeTime(e,t,n):"null_"===t?this._decodeNull(e,n):"bool"===t?this._decodeBool(e,n):"objDesc"===t?this._decodeStr(e,t,n):"int"===t||"enum"===t?this._decodeInt(e,r.args&&r.args[0],n):null!==r.use?this._getUse(r.use,e._reporterState.obj)._decode(e,n):e.error("unknown tag: "+t)},c.prototype._getUse=function(t,e){var n=this._baseState;return n.useDecoder=this._use(t,e),o(null===n.useDecoder._baseState.parent),n.useDecoder=n.useDecoder._baseState.children[0],n.implicit!==n.useDecoder._baseState.implicit&&(n.useDecoder=n.useDecoder.clone(),n.useDecoder._baseState.implicit=n.implicit),n.useDecoder},c.prototype._decodeChoice=function(t,e){var n=this._baseState,r=null,i=!1;return Object.keys(n.choice).some(function(a){var o=t.save(),s=n.choice[a];try{var u=s._decode(t,e);if(t.isError(u))return!1;r={type:a,value:u},i=!0}catch(e){return t.restore(o),!1}return!0},this),i?r:t.error("Choice not matched")},c.prototype._createEncoderBuffer=function(t){return new i(t,this.reporter)},c.prototype._encode=function(t,e,n){var r=this._baseState;if(null===r.default||r.default!==t){var i=this._encodeValue(t,e,n);if(void 0!==i&&!this._skipDefault(i,e,n))return i}},c.prototype._encodeValue=function(t,e,n){var i=this._baseState;if(null===i.parent)return i.children[0]._encode(t,e||new r);var a=null;if(this.reporter=e,i.optional&&void 0===t){if(null===i.default)return;t=i.default}var o=null,s=!1;if(i.any)a=this._createEncoderBuffer(t);else if(i.choice)a=this._encodeChoice(t,e);else if(i.contains)o=this._getUse(i.contains,n)._encode(t,e),s=!0;else if(i.children)o=i.children.map(function(n){if("null_"===n._baseState.tag)return n._encode(null,e,t);if(null===n._baseState.key)return e.error("Child should have a key");var r=e.enterKey(n._baseState.key);if("object"!=typeof t)return e.error("Child expected, but input is not object");var i=n._encode(t[n._baseState.key],e,t);return e.leaveKey(r),i},this).filter(function(t){return t}),o=this._createEncoderBuffer(o);else if("seqof"===i.tag||"setof"===i.tag){if(!i.args||1!==i.args.length)return e.error("Too many args for : "+i.tag);if(!Array.isArray(t))return e.error("seqof/setof, but data is not Array");var u=this.clone();u._baseState.implicit=null,o=this._createEncoderBuffer(t.map(function(n){var r=this._baseState;return this._getUse(r.args[0],t)._encode(n,e)},u))}else null!==i.use?a=this._getUse(i.use,n)._encode(t,e):(o=this._encodePrimitive(i.tag,t),s=!0);if(!i.any&&null===i.choice){var c=null!==i.implicit?i.implicit:i.tag,l=null===i.implicit?"universal":"context";null===c?null===i.use&&e.error("Tag could be omitted only for .use()"):null===i.use&&(a=this._encodeComposite(c,s,l,o))}return null!==i.explicit&&(a=this._encodeComposite(i.explicit,!1,"context",a)),a},c.prototype._encodeChoice=function(t,e){var n=this._baseState,r=n.choice[t.type];return r||o(!1,t.type+" not found in "+JSON.stringify(Object.keys(n.choice))),r._encode(t.value,e)},c.prototype._encodePrimitive=function(t,e){var n=this._baseState;if(/str$/.test(t))return this._encodeStr(e,t);if("objid"===t&&n.args)return this._encodeObjid(e,n.reverseArgs[0],n.args[1]);if("objid"===t)return this._encodeObjid(e,null,null);if("gentime"===t||"utctime"===t)return this._encodeTime(e,t);if("null_"===t)return this._encodeNull();if("int"===t||"enum"===t)return this._encodeInt(e,n.args&&n.reverseArgs[0]);if("bool"===t)return this._encodeBool(e);if("objDesc"===t)return this._encodeStr(e,t);throw new Error("Unsupported tag: "+t)},c.prototype._isNumstr=function(t){return/^[0-9 ]*$/.test(t)},c.prototype._isPrintstr=function(t){return/^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t)}},function(t,e,n){var r=n(113);e.tagClass={0:"universal",1:"application",2:"context",3:"private"},e.tagClassByName=r._reverse(e.tagClass),e.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},e.tagByName=r._reverse(e.tag)},function(t,e,n){var r=e;r.der=n(114),r.pem=n(209)},function(t,e,n){var r=n(2),i=n(4).Buffer,a=n(114);function o(t){a.call(this,t),this.enc="pem"}r(o,a),t.exports=o,o.prototype.decode=function(t,e){for(var n=t.toString().split(/[\r\n]+/g),r=e.label.toUpperCase(),o=/^-----(BEGIN|END) ([^-]+)-----$/,s=-1,u=-1,c=0;c<n.length;c++){var l=n[c].match(o);if(null!==l&&l[2]===r){if(-1!==s){if("END"!==l[1])break;u=c;break}if("BEGIN"!==l[1])break;s=c}}if(-1===s||-1===u)throw new Error("PEM section not found for: "+r);var f=n.slice(s+1,u).join("");f.replace(/[^a-z0-9\+\/=]+/gi,"");var h=new i(f,"base64");return a.prototype.decode.call(this,h,e)}},function(t,e,n){var r=e;r.der=n(115),r.pem=n(211)},function(t,e,n){var r=n(2),i=n(115);function a(t){i.call(this,t),this.enc="pem"}r(a,i),t.exports=a,a.prototype.encode=function(t,e){for(var n=i.prototype.encode.call(this,t).toString("base64"),r=["-----BEGIN "+e.label+"-----"],a=0;a<n.length;a+=64)r.push(n.slice(a,a+64));return r.push("-----END "+e.label+"-----"),r.join("\n")}},function(t,e,n){"use strict";var r=n(34),i=r.define("Time",function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})}),a=r.define("AttributeTypeValue",function(){this.seq().obj(this.key("type").objid(),this.key("value").any())}),o=r.define("AlgorithmIdentifier",function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional())}),s=r.define("SubjectPublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(o),this.key("subjectPublicKey").bitstr())}),u=r.define("RelativeDistinguishedName",function(){this.setof(a)}),c=r.define("RDNSequence",function(){this.seqof(u)}),l=r.define("Name",function(){this.choice({rdnSequence:this.use(c)})}),f=r.define("Validity",function(){this.seq().obj(this.key("notBefore").use(i),this.key("notAfter").use(i))}),h=r.define("Extension",function(){this.seq().obj(this.key("extnID").objid(),this.key("critical").bool().def(!1),this.key("extnValue").octstr())}),p=r.define("TBSCertificate",function(){this.seq().obj(this.key("version").explicit(0).int(),this.key("serialNumber").int(),this.key("signature").use(o),this.key("issuer").use(l),this.key("validity").use(f),this.key("subject").use(l),this.key("subjectPublicKeyInfo").use(s),this.key("issuerUniqueID").implicit(1).bitstr().optional(),this.key("subjectUniqueID").implicit(2).bitstr().optional(),this.key("extensions").explicit(3).seqof(h).optional())}),d=r.define("X509Certificate",function(){this.seq().obj(this.key("tbsCertificate").use(p),this.key("signatureAlgorithm").use(o),this.key("signatureValue").bitstr())});t.exports=d},function(t){t.exports={"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}},function(t,e,n){(function(e){var r=/Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m,i=/^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m,a=/^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m,o=n(44),s=n(64);t.exports=function(t,n){var u,c=t.toString(),l=c.match(r);if(l){var f="aes"+l[1],h=new e(l[2],"hex"),p=new e(l[3].replace(/[\r\n]/g,""),"base64"),d=o(n,h.slice(0,8),parseInt(l[1],10)).key,m=[],g=s.createDecipheriv(f,d,h);m.push(g.update(p)),m.push(g.final()),u=e.concat(m)}else{var y=c.match(a);u=new e(y[2].replace(/[\r\n]/g,""),"base64")}return{tag:c.match(i)[1],data:u}}}).call(this,n(4).Buffer)},function(t,e,n){(function(e){var r=n(5),i=n(8).ec,a=n(46),o=n(116);function s(t,e){if(t.cmpn(0)<=0)throw new Error("invalid sig");if(t.cmp(e)>=e)throw new Error("invalid sig")}t.exports=function(t,n,u,c,l){var f=a(u);if("ec"===f.type){if("ecdsa"!==c&&"ecdsa/rsa"!==c)throw new Error("wrong public key type");return function(t,e,n){var r=o[n.data.algorithm.curve.join(".")];if(!r)throw new Error("unknown curve "+n.data.algorithm.curve.join("."));var a=new i(r),s=n.data.subjectPrivateKey.data;return a.verify(e,t,s)}(t,n,f)}if("dsa"===f.type){if("dsa"!==c)throw new Error("wrong public key type");return function(t,e,n){var i=n.data.p,o=n.data.q,u=n.data.g,c=n.data.pub_key,l=a.signature.decode(t,"der"),f=l.s,h=l.r;s(f,o),s(h,o);var p=r.mont(i),d=f.invm(o);return 0===u.toRed(p).redPow(new r(e).mul(d).mod(o)).fromRed().mul(c.toRed(p).redPow(h.mul(d).mod(o)).fromRed()).mod(i).mod(o).cmp(h)}(t,n,f)}if("rsa"!==c&&"ecdsa/rsa"!==c)throw new Error("wrong public key type");n=e.concat([l,n]);for(var h=f.modulus.byteLength(),p=[1],d=0;n.length+p.length+2<h;)p.push(255),d++;p.push(0);for(var m=-1;++m<n.length;)p.push(n[m]);p=new e(p);var g=r.mont(f.modulus);t=(t=new r(t).toRed(g)).redPow(new r(f.publicExponent)),t=new e(t.fromRed().toArray());var y=d<8?1:0;for(h=Math.min(t.length,p.length),t.length!==p.length&&(y=1),m=-1;++m<h;)y|=t[m]^p[m];return 0===y}}).call(this,n(4).Buffer)},function(t,e,n){(function(e){var r=n(8),i=n(5);t.exports=function(t){return new o(t)};var a={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};function o(t){this.curveType=a[t],this.curveType||(this.curveType={name:t}),this.curve=new r.ec(this.curveType.name),this.keys=void 0}function s(t,n,r){Array.isArray(t)||(t=t.toArray());var i=new e(t);if(r&&i.length<r){var a=new e(r-i.length);a.fill(0),i=e.concat([a,i])}return n?i.toString(n):i}a.p224=a.secp224r1,a.p256=a.secp256r1=a.prime256v1,a.p192=a.secp192r1=a.prime192v1,a.p384=a.secp384r1,a.p521=a.secp521r1,o.prototype.generateKeys=function(t,e){return this.keys=this.curve.genKeyPair(),this.getPublicKey(t,e)},o.prototype.computeSecret=function(t,n,r){return n=n||"utf8",e.isBuffer(t)||(t=new e(t,n)),s(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(),r,this.curveType.byteLength)},o.prototype.getPublicKey=function(t,e){var n=this.keys.getPublic("compressed"===e,!0);return"hybrid"===e&&(n[n.length-1]%2?n[0]=7:n[0]=6),s(n,t)},o.prototype.getPrivateKey=function(t){return s(this.keys.getPrivate(),t)},o.prototype.setPublicKey=function(t,n){return n=n||"utf8",e.isBuffer(t)||(t=new e(t,n)),this.keys._importPublic(t),this},o.prototype.setPrivateKey=function(t,n){n=n||"utf8",e.isBuffer(t)||(t=new e(t,n));var r=new i(t);return r=r.toString(16),this.keys=this.curve.genKeyPair(),this.keys._importPrivate(r),this}}).call(this,n(4).Buffer)},function(t,e,n){e.publicEncrypt=n(218),e.privateDecrypt=n(219),e.privateEncrypt=function(t,n){return e.publicEncrypt(t,n,!0)},e.publicDecrypt=function(t,n){return e.privateDecrypt(t,n,!0)}},function(t,e,n){var r=n(46),i=n(22),a=n(30),o=n(117),s=n(118),u=n(5),c=n(119),l=n(66),f=n(3).Buffer;t.exports=function(t,e,n){var h;h=t.padding?t.padding:n?1:4;var p,d=r(t);if(4===h)p=function(t,e){var n=t.modulus.byteLength(),r=e.length,c=a("sha1").update(f.alloc(0)).digest(),l=c.length,h=2*l;if(r>n-h-2)throw new Error("message too long");var p=f.alloc(n-r-h-2),d=n-l-1,m=i(l),g=s(f.concat([c,p,f.alloc(1,1),e],d),o(m,d)),y=s(m,o(g,l));return new u(f.concat([f.alloc(1),y,g],n))}(d,e);else if(1===h)p=function(t,e,n){var r,a=e.length,o=t.modulus.byteLength();if(a>o-11)throw new Error("message too long");r=n?f.alloc(o-a-3,255):function(t){var e,n=f.allocUnsafe(t),r=0,a=i(2*t),o=0;for(;r<t;)o===a.length&&(a=i(2*t),o=0),(e=a[o++])&&(n[r++]=e);return n}(o-a-3);return new u(f.concat([f.from([0,n?1:2]),r,f.alloc(1),e],o))}(d,e,n);else{if(3!==h)throw new Error("unknown padding");if((p=new u(e)).cmp(d.modulus)>=0)throw new Error("data too long for modulus")}return n?l(p,d):c(p,d)}},function(t,e,n){var r=n(46),i=n(117),a=n(118),o=n(5),s=n(66),u=n(30),c=n(119),l=n(3).Buffer;t.exports=function(t,e,n){var f;f=t.padding?t.padding:n?1:4;var h,p=r(t),d=p.modulus.byteLength();if(e.length>d||new o(e).cmp(p.modulus)>=0)throw new Error("decryption error");h=n?c(new o(e),p):s(e,p);var m=l.alloc(d-h.length);if(h=l.concat([m,h],d),4===f)return function(t,e){var n=t.modulus.byteLength(),r=u("sha1").update(l.alloc(0)).digest(),o=r.length;if(0!==e[0])throw new Error("decryption error");var s=e.slice(1,o+1),c=e.slice(o+1),f=a(s,i(c,o)),h=a(c,i(f,n-o-1));if(function(t,e){t=l.from(t),e=l.from(e);var n=0,r=t.length;t.length!==e.length&&(n++,r=Math.min(t.length,e.length));var i=-1;for(;++i<r;)n+=t[i]^e[i];return n}(r,h.slice(0,o)))throw new Error("decryption error");var p=o;for(;0===h[p];)p++;if(1!==h[p++])throw new Error("decryption error");return h.slice(p)}(p,h);if(1===f)return function(t,e,n){var r=e.slice(0,2),i=2,a=0;for(;0!==e[i++];)if(i>=e.length){a++;break}var o=e.slice(2,i-1);("0002"!==r.toString("hex")&&!n||"0001"!==r.toString("hex")&&n)&&a++;o.length<8&&a++;if(a)throw new Error("decryption error");return e.slice(i)}(0,h,n);if(3===f)return h;throw new Error("unknown padding")}},function(t,e,n){"use strict";(function(t,r){function i(){throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")}var a=n(3),o=n(22),s=a.Buffer,u=a.kMaxLength,c=t.crypto||t.msCrypto,l=Math.pow(2,32)-1;function f(t,e){if("number"!=typeof t||t!=t)throw new TypeError("offset must be a number");if(t>l||t<0)throw new TypeError("offset must be a uint32");if(t>u||t>e)throw new RangeError("offset out of range")}function h(t,e,n){if("number"!=typeof t||t!=t)throw new TypeError("size must be a number");if(t>l||t<0)throw new TypeError("size must be a uint32");if(t+e>n||t>u)throw new RangeError("buffer too small")}function p(t,e,n,i){if(r.browser){var a=t.buffer,s=new Uint8Array(a,e,n);return c.getRandomValues(s),i?void r.nextTick(function(){i(null,t)}):t}if(!i)return o(n).copy(t,e),t;o(n,function(n,r){if(n)return i(n);r.copy(t,e),i(null,t)})}c&&c.getRandomValues||!r.browser?(e.randomFill=function(e,n,r,i){if(!(s.isBuffer(e)||e instanceof t.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');if("function"==typeof n)i=n,n=0,r=e.length;else if("function"==typeof r)i=r,r=e.length-n;else if("function"!=typeof i)throw new TypeError('"cb" argument must be a function');return f(n,e.length),h(r,n,e.length),p(e,n,r,i)},e.randomFillSync=function(e,n,r){void 0===n&&(n=0);if(!(s.isBuffer(e)||e instanceof t.Uint8Array))throw new TypeError('"buf" argument must be a Buffer or Uint8Array');f(n,e.length),void 0===r&&(r=e.length-n);return h(r,n,e.length),p(e,n,r)}):(e.randomFill=i,e.randomFillSync=i)}).call(this,n(11),n(14))},function(t,e){t.exports=e=window.fetch,e.default=window.fetch.bind(window),e.Headers=window.Headers,e.Request=window.Request,e.Response=window.Response},function(t,e,n){var r,i,a;i=[e,n(251)],void 0===(a="function"==typeof(r=function(t,e){"use strict";var r=n(223);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,e=r(e),t.default=class{constructor(){this.R=e}get CoreFunction(){return this.R}getIn(t,n,r){return e.pathOr(r,t,n)}setIn(t,n,r){return e.assocPath(t,n,r)}vstack(...t){}hstack(...t){}vsplit(t){}hsplit(t){return null}hsplitEvery(t,e){return console.log({vlen:t.length,splitSize:e}),this.R.splitEvery(e,t)}vsplitEvery(t,e){return null}zip(t,e){this.R.zip(t,e)}unzip(){}}})?r.apply(e,i):r)||(t.exports=a)},function(t,e){t.exports=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};r.get||r.set?Object.defineProperty(e,n,r):e[n]=t[n]}return e.default=t,e}},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";n.r(e);var r=function(){return!1},i=function(){return!0},a={"@@functional/placeholder":!0};function o(t){return null!=t&&"object"==typeof t&&!0===t["@@functional/placeholder"]}function s(t){return function e(n){return 0===arguments.length||o(n)?e:t.apply(this,arguments)}}function u(t){return function e(n,r){switch(arguments.length){case 0:return e;case 1:return o(n)?e:s(function(e){return t(n,e)});default:return o(n)&&o(r)?e:o(n)?s(function(e){return t(e,r)}):o(r)?s(function(e){return t(n,e)}):t(n,r)}}}var c=u(function(t,e){return Number(t)+Number(e)});function l(t,e){var n;e=e||[];var r=(t=t||[]).length,i=e.length,a=[];for(n=0;n<r;)a[a.length]=t[n],n+=1;for(n=0;n<i;)a[a.length]=e[n],n+=1;return a}function f(t,e){switch(t){case 0:return function(){return e.apply(this,arguments)};case 1:return function(t){return e.apply(this,arguments)};case 2:return function(t,n){return e.apply(this,arguments)};case 3:return function(t,n,r){return e.apply(this,arguments)};case 4:return function(t,n,r,i){return e.apply(this,arguments)};case 5:return function(t,n,r,i,a){return e.apply(this,arguments)};case 6:return function(t,n,r,i,a,o){return e.apply(this,arguments)};case 7:return function(t,n,r,i,a,o,s){return e.apply(this,arguments)};case 8:return function(t,n,r,i,a,o,s,u){return e.apply(this,arguments)};case 9:return function(t,n,r,i,a,o,s,u,c){return e.apply(this,arguments)};case 10:return function(t,n,r,i,a,o,s,u,c,l){return e.apply(this,arguments)};default:throw new Error("First argument to _arity must be a non-negative integer no greater than ten")}}function h(t,e,n){return function(){for(var r=[],i=0,a=t,s=0;s<e.length||i<arguments.length;){var u;s<e.length&&(!o(e[s])||i>=arguments.length)?u=e[s]:(u=arguments[i],i+=1),r[s]=u,o(u)||(a-=1),s+=1}return a<=0?n.apply(this,r):f(a,h(t,r,n))}}var p=u(function(t,e){return 1===t?s(e):f(t,h(t,[],e))}),d=s(function(t){return p(t.length,function(){var e=0,n=arguments[0],r=arguments[arguments.length-1],i=Array.prototype.slice.call(arguments,0);return i[0]=function(){var t=n.apply(this,l(arguments,[e,r]));return e+=1,t},t.apply(this,i)})});function m(t){return function e(n,r,i){switch(arguments.length){case 0:return e;case 1:return o(n)?e:u(function(e,r){return t(n,e,r)});case 2:return o(n)&&o(r)?e:o(n)?u(function(e,n){return t(e,r,n)}):o(r)?u(function(e,r){return t(n,e,r)}):s(function(e){return t(n,r,e)});default:return o(n)&&o(r)&&o(i)?e:o(n)&&o(r)?u(function(e,n){return t(e,n,i)}):o(n)&&o(i)?u(function(e,n){return t(e,r,n)}):o(r)&&o(i)?u(function(e,r){return t(n,e,r)}):o(n)?s(function(e){return t(e,r,i)}):o(r)?s(function(e){return t(n,e,i)}):o(i)?s(function(e){return t(n,r,e)}):t(n,r,i)}}}var g=m(function(t,e,n){if(t>=n.length||t<-n.length)return n;var r=(t<0?n.length:0)+t,i=l(n);return i[r]=e(n[r]),i}),y=Array.isArray||function(t){return null!=t&&t.length>=0&&"[object Array]"===Object.prototype.toString.call(t)};function v(t){return null!=t&&"function"==typeof t["@@transducer/step"]}function b(t,e,n){return function(){if(0===arguments.length)return n();var r=Array.prototype.slice.call(arguments,0),i=r.pop();if(!y(i)){for(var a=0;a<t.length;){if("function"==typeof i[t[a]])return i[t[a]].apply(i,r);a+=1}if(v(i))return e.apply(null,r)(i)}return n.apply(this,arguments)}}function w(t){return t&&t["@@transducer/reduced"]?t:{"@@transducer/value":t,"@@transducer/reduced":!0}}var _={init:function(){return this.xf["@@transducer/init"]()},result:function(t){return this.xf["@@transducer/result"](t)}},x=function(){function t(t,e){this.xf=e,this.f=t,this.all=!0}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.all&&(t=this.xf["@@transducer/step"](t,!0)),this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.f(e)||(this.all=!1,t=w(this.xf["@@transducer/step"](t,!1))),t},t}(),E=u(b(["all"],u(function(t,e){return new x(t,e)}),function(t,e){for(var n=0;n<e.length;){if(!t(e[n]))return!1;n+=1}return!0})),S=u(function(t,e){return e>t?e:t});function N(t,e){for(var n=0,r=e.length,i=Array(r);n<r;)i[n]=t(e[n]),n+=1;return i}function I(t){return"[object String]"===Object.prototype.toString.call(t)}var O=s(function(t){return!!y(t)||!!t&&("object"==typeof t&&(!I(t)&&(1===t.nodeType?!!t.length:0===t.length||t.length>0&&(t.hasOwnProperty(0)&&t.hasOwnProperty(t.length-1)))))}),k=function(){function t(t){this.f=t}return t.prototype["@@transducer/init"]=function(){throw new Error("init not implemented on XWrap")},t.prototype["@@transducer/result"]=function(t){return t},t.prototype["@@transducer/step"]=function(t,e){return this.f(t,e)},t}();function A(t){return new k(t)}var C=u(function(t,e){return f(t.length,function(){return t.apply(e,arguments)})});function P(t,e,n){for(var r=n.next();!r.done;){if((e=t["@@transducer/step"](e,r.value))&&e["@@transducer/reduced"]){e=e["@@transducer/value"];break}r=n.next()}return t["@@transducer/result"](e)}function T(t,e,n,r){return t["@@transducer/result"](n[r](C(t["@@transducer/step"],t),e))}var R="undefined"!=typeof Symbol?Symbol.iterator:"@@iterator";function D(t,e,n){if("function"==typeof t&&(t=A(t)),O(n))return function(t,e,n){for(var r=0,i=n.length;r<i;){if((e=t["@@transducer/step"](e,n[r]))&&e["@@transducer/reduced"]){e=e["@@transducer/value"];break}r+=1}return t["@@transducer/result"](e)}(t,e,n);if("function"==typeof n["fantasy-land/reduce"])return T(t,e,n,"fantasy-land/reduce");if(null!=n[R])return P(t,e,n[R]());if("function"==typeof n.next)return P(t,e,n);if("function"==typeof n.reduce)return T(t,e,n,"reduce");throw new TypeError("reduce: list must be array or iterable")}var M=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){return this.xf["@@transducer/step"](t,this.f(e))},t}(),j=u(function(t,e){return new M(t,e)});function B(t,e){return Object.prototype.hasOwnProperty.call(e,t)}var L=Object.prototype.toString,z=function(){return"[object Arguments]"===L.call(arguments)?function(t){return"[object Arguments]"===L.call(t)}:function(t){return B("callee",t)}}(),F=!{toString:null}.propertyIsEnumerable("toString"),U=["constructor","valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],V=function(){return arguments.propertyIsEnumerable("length")}(),W=function(t,e){for(var n=0;n<t.length;){if(t[n]===e)return!0;n+=1}return!1},q="function"!=typeof Object.keys||V?s(function(t){if(Object(t)!==t)return[];var e,n,r=[],i=V&&z(t);for(e in t)!B(e,t)||i&&"length"===e||(r[r.length]=e);if(F)for(n=U.length-1;n>=0;)B(e=U[n],t)&&!W(r,e)&&(r[r.length]=e),n-=1;return r}):s(function(t){return Object(t)!==t?[]:Object.keys(t)}),$=u(b(["fantasy-land/map","map"],j,function(t,e){switch(Object.prototype.toString.call(e)){case"[object Function]":return p(e.length,function(){return t.call(this,e.apply(this,arguments))});case"[object Object]":return D(function(n,r){return n[r]=t(e[r]),n},{},q(e));default:return N(t,e)}})),H=u(function(t,e){for(var n=e,r=0;r<t.length;){if(null==n)return;n=n[t[r]],r+=1}return n}),K=u(function(t,e){return H([t],e)}),G=u(function(t,e){return $(K(t),e)}),X=m(D),Y=s(function(t){return p(X(S,0,G("length",t)),function(){for(var e=0,n=t.length;e<n;){if(!t[e].apply(this,arguments))return!1;e+=1}return!0})}),J=s(function(t){return function(){return t}}),Z=u(function(t,e){return t&&e}),Q=function(){function t(t,e){this.xf=e,this.f=t,this.any=!1}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.any||(t=this.xf["@@transducer/step"](t,!1)),this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.f(e)&&(this.any=!0,t=w(this.xf["@@transducer/step"](t,!0))),t},t}(),tt=u(b(["any"],u(function(t,e){return new Q(t,e)}),function(t,e){for(var n=0;n<e.length;){if(t(e[n]))return!0;n+=1}return!1})),et=s(function(t){return p(X(S,0,G("length",t)),function(){for(var e=0,n=t.length;e<n;){if(t[e].apply(this,arguments))return!0;e+=1}return!1})}),nt=u(function(t,e){return"function"==typeof e["fantasy-land/ap"]?e["fantasy-land/ap"](t):"function"==typeof t.ap?t.ap(e):"function"==typeof t?function(n){return t(n)(e(n))}:D(function(t,n){return l(t,$(n,e))},[],t)});function rt(t,e){for(var n=0,r=e.length-(t-1),i=new Array(r>=0?r:0);n<r;)i[n]=Array.prototype.slice.call(e,n,n+t),n+=1;return i}var it=function(){function t(t,e){this.xf=e,this.pos=0,this.full=!1,this.acc=new Array(t)}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.acc=null,this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.store(e),this.full?this.xf["@@transducer/step"](t,this.getCopy()):t},t.prototype.store=function(t){this.acc[this.pos]=t,this.pos+=1,this.pos===this.acc.length&&(this.pos=0,this.full=!0)},t.prototype.getCopy=function(){return l(Array.prototype.slice.call(this.acc,this.pos),Array.prototype.slice.call(this.acc,0,this.pos))},t}(),at=u(b([],u(function(t,e){return new it(t,e)}),rt)),ot=u(function(t,e){return l(e,[t])}),st=u(function(t,e){return t.apply(this,e)}),ut=s(function(t){for(var e=q(t),n=e.length,r=[],i=0;i<n;)r[i]=t[e[i]],i+=1;return r});function ct(t,e){return q(e).reduce(function(n,r){return n[r]=t(e[r]),n},{})}var lt=s(function t(e){return e=ct(function(e){return"function"==typeof e?e:t(e)},e),p(X(S,0,G("length",ut(e))),function(){var t=arguments;return ct(function(e){return st(e,t)},e)})}),ft=u(function(t,e){return e(t)}),ht=m(function(t,e,n){var r=t(e),i=t(n);return r<i?-1:r>i?1:0}),pt=m(function(t,e,n){var r={};for(var i in n)r[i]=n[i];return r[t]=e,r}),dt=Number.isInteger||function(t){return t<<0===t},mt=s(function(t){return null==t}),gt=m(function t(e,n,r){if(0===e.length)return n;var i=e[0];if(e.length>1){var a=!mt(r)&&B(i,r)?r[i]:dt(e[1])?[]:{};n=t(Array.prototype.slice.call(e,1),n,a)}if(dt(i)&&y(r)){var o=[].concat(r);return o[i]=n,o}return pt(i,n,r)}),yt=u(function(t,e){switch(t){case 0:return function(){return e.call(this)};case 1:return function(t){return e.call(this,t)};case 2:return function(t,n){return e.call(this,t,n)};case 3:return function(t,n,r){return e.call(this,t,n,r)};case 4:return function(t,n,r,i){return e.call(this,t,n,r,i)};case 5:return function(t,n,r,i,a){return e.call(this,t,n,r,i,a)};case 6:return function(t,n,r,i,a,o){return e.call(this,t,n,r,i,a,o)};case 7:return function(t,n,r,i,a,o,s){return e.call(this,t,n,r,i,a,o,s)};case 8:return function(t,n,r,i,a,o,s,u){return e.call(this,t,n,r,i,a,o,s,u)};case 9:return function(t,n,r,i,a,o,s,u,c){return e.call(this,t,n,r,i,a,o,s,u,c)};case 10:return function(t,n,r,i,a,o,s,u,c,l){return e.call(this,t,n,r,i,a,o,s,u,c,l)};default:throw new Error("First argument to nAry must be a non-negative integer no greater than ten")}}),vt=s(function(t){return yt(2,t)});function bt(t){return"[object Function]"===Object.prototype.toString.call(t)}var wt=u(function(t,e){var n=p(t,e);return p(t,function(){return D(nt,$(n,arguments[0]),Array.prototype.slice.call(arguments,1))})}),_t=s(function(t){return wt(t.length,t)}),xt=u(function(t,e){return bt(t)?function(){return t.apply(this,arguments)&&e.apply(this,arguments)}:_t(Z)(t,e)}),Et=s(function(t){return p(t.length,t)}),St=Et(function(t){return t.apply(this,Array.prototype.slice.call(arguments,1))});function Nt(t){return function e(n){for(var r,i,a,o=[],s=0,u=n.length;s<u;){if(O(n[s]))for(a=0,i=(r=t?e(n[s]):n[s]).length;a<i;)o[o.length]=r[a],a+=1;else o[o.length]=n[s];s+=1}return o}}var It=function(t){var e=function(t){return{"@@transducer/init":_.init,"@@transducer/result":function(e){return t["@@transducer/result"](e)},"@@transducer/step":function(e,n){var r=t["@@transducer/step"](e,n);return r["@@transducer/reduced"]?{"@@transducer/value":r,"@@transducer/reduced":!0}:r}}}(t);return{"@@transducer/init":_.init,"@@transducer/result":function(t){return e["@@transducer/result"](t)},"@@transducer/step":function(t,n){return O(n)?D(e,t,n):D(e,t,[n])}}},Ot=u(b(["fantasy-land/chain","chain"],u(function(t,e){return $(t,It(e))}),function(t,e){return"function"==typeof e?function(n){return t(e(n))(n)}:Nt(!1)($(t,e))})),kt=m(function(t,e,n){if(t>e)throw new Error("min must not be greater than max in clamp(min, max, value)");return n<t?t:n>e?e:n});function At(t){return new RegExp(t.source,(t.global?"g":"")+(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.sticky?"y":"")+(t.unicode?"u":""))}var Ct=s(function(t){return null===t?"Null":void 0===t?"Undefined":Object.prototype.toString.call(t).slice(8,-1)});function Pt(t,e,n,r){var i=function(i){for(var a=e.length,o=0;o<a;){if(t===e[o])return n[o];o+=1}for(var s in e[o+1]=t,n[o+1]=i,t)i[s]=r?Pt(t[s],e,n,!0):t[s];return i};switch(Ct(t)){case"Object":return i({});case"Array":return i([]);case"Date":return new Date(t.valueOf());case"RegExp":return At(t);default:return t}}var Tt=s(function(t){return null!=t&&"function"==typeof t.clone?t.clone():Pt(t,[],[],!0)}),Rt=s(function(t){return function(e,n){return t(e,n)?-1:t(n,e)?1:0}}),Dt=s(function(t){return!t}),Mt=_t(Dt);function jt(t,e){return function(){return e.call(this,t.apply(this,arguments))}}function Bt(t,e){return function(){var n=arguments.length;if(0===n)return e();var r=arguments[n-1];return y(r)||"function"!=typeof r[t]?e.apply(this,arguments):r[t].apply(r,Array.prototype.slice.call(arguments,0,n-1))}}var Lt=m(Bt("slice",function(t,e,n){return Array.prototype.slice.call(n,t,e)})),zt=s(Bt("tail",Lt(1,1/0)));function Ft(){if(0===arguments.length)throw new Error("pipe requires at least one argument");return f(arguments[0].length,X(jt,arguments[0],zt(arguments)))}var Ut=s(function(t){return I(t)?t.split("").reverse().join(""):Array.prototype.slice.call(t,0).reverse()});function Vt(){if(0===arguments.length)throw new Error("compose requires at least one argument");return Ft.apply(this,Ut(arguments))}function Wt(){if(0===arguments.length)throw new Error("composeK requires at least one argument");var t=Array.prototype.slice.call(arguments),e=t.pop();return Vt(Vt.apply(this,$(Ot,t)),e)}function qt(t,e){return function(){var n=this;return t.apply(n,arguments).then(function(t){return e.call(n,t)})}}function $t(){if(0===arguments.length)throw new Error("pipeP requires at least one argument");return f(arguments[0].length,X(qt,arguments[0],zt(arguments)))}function Ht(){if(0===arguments.length)throw new Error("composeP requires at least one argument");return $t.apply(this,Ut(arguments))}var Kt=u(function(t,e){var n=t<0?e.length+t:t;return I(e)?e.charAt(n):e[n]}),Gt=Kt(0);function Xt(t){return t}var Yt=s(Xt),Jt=u(function(t,e){if(e.length<=0)return Yt;var n=Gt(e),r=zt(e);return f(n.length,function(){return D(function(e,n){return t.call(this,n,e)},n.apply(this,arguments),r)})}),Zt=u(function(t,e){return Jt.apply(this,[t,Ut(e)])});function Qt(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}function te(t,e,n){for(var r=0,i=n.length;r<i;){if(t(e,n[r]))return!0;r+=1}return!1}var ee="function"==typeof Object.is?Object.is:function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e};function ne(t,e,n,r){var i=Qt(t);function a(t,e){return re(t,e,n.slice(),r.slice())}return!te(function(t,e){return!te(a,e,t)},Qt(e),i)}function re(t,e,n,r){if(ee(t,e))return!0;var i,a,o=Ct(t);if(o!==Ct(e))return!1;if(null==t||null==e)return!1;if("function"==typeof t["fantasy-land/equals"]||"function"==typeof e["fantasy-land/equals"])return"function"==typeof t["fantasy-land/equals"]&&t["fantasy-land/equals"](e)&&"function"==typeof e["fantasy-land/equals"]&&e["fantasy-land/equals"](t);if("function"==typeof t.equals||"function"==typeof e.equals)return"function"==typeof t.equals&&t.equals(e)&&"function"==typeof e.equals&&e.equals(t);switch(o){case"Arguments":case"Array":case"Object":if("function"==typeof t.constructor&&"Promise"===(i=t.constructor,null==(a=String(i).match(/^function (\w*)/))?"":a[1]))return t===e;break;case"Boolean":case"Number":case"String":if(typeof t!=typeof e||!ee(t.valueOf(),e.valueOf()))return!1;break;case"Date":if(!ee(t.valueOf(),e.valueOf()))return!1;break;case"Error":return t.name===e.name&&t.message===e.message;case"RegExp":if(t.source!==e.source||t.global!==e.global||t.ignoreCase!==e.ignoreCase||t.multiline!==e.multiline||t.sticky!==e.sticky||t.unicode!==e.unicode)return!1}for(var s=n.length-1;s>=0;){if(n[s]===t)return r[s]===e;s-=1}switch(o){case"Map":return t.size===e.size&&ne(t.entries(),e.entries(),n.concat([t]),r.concat([e]));case"Set":return t.size===e.size&&ne(t.values(),e.values(),n.concat([t]),r.concat([e]));case"Arguments":case"Array":case"Object":case"Boolean":case"Number":case"String":case"Date":case"Error":case"RegExp":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"ArrayBuffer":break;default:return!1}var u=q(t);if(u.length!==q(e).length)return!1;var c=n.concat([t]),l=r.concat([e]);for(s=u.length-1;s>=0;){var f=u[s];if(!B(f,e)||!re(e[f],t[f],c,l))return!1;s-=1}return!0}var ie=u(function(t,e){return re(t,e,[],[])});function ae(t,e,n){var r,i;if("function"==typeof t.indexOf)switch(typeof e){case"number":if(0===e){for(r=1/e;n<t.length;){if(0===(i=t[n])&&1/i===r)return n;n+=1}return-1}if(e!=e){for(;n<t.length;){if("number"==typeof(i=t[n])&&i!=i)return n;n+=1}return-1}return t.indexOf(e,n);case"string":case"boolean":case"function":case"undefined":return t.indexOf(e,n);case"object":if(null===e)return t.indexOf(e,n)}for(;n<t.length;){if(ie(t[n],e))return n;n+=1}return-1}function oe(t,e){return ae(e,t,0)>=0}function se(t){return'"'+t.replace(/\\/g,"\\\\").replace(/[\b]/g,"\\b").replace(/\f/g,"\\f").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t").replace(/\v/g,"\\v").replace(/\0/g,"\\0").replace(/"/g,'\\"')+'"'}var ue=function(t){return(t<10?"0":"")+t},ce="function"==typeof Date.prototype.toISOString?function(t){return t.toISOString()}:function(t){return t.getUTCFullYear()+"-"+ue(t.getUTCMonth()+1)+"-"+ue(t.getUTCDate())+"T"+ue(t.getUTCHours())+":"+ue(t.getUTCMinutes())+":"+ue(t.getUTCSeconds())+"."+(t.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"};function le(t){return function(){return!t.apply(this,arguments)}}function fe(t,e){for(var n=0,r=e.length,i=[];n<r;)t(e[n])&&(i[i.length]=e[n]),n+=1;return i}function he(t){return"[object Object]"===Object.prototype.toString.call(t)}var pe=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){return this.f(e)?this.xf["@@transducer/step"](t,e):t},t}(),de=u(b(["filter"],u(function(t,e){return new pe(t,e)}),function(t,e){return he(e)?D(function(n,r){return t(e[r])&&(n[r]=e[r]),n},{},q(e)):fe(t,e)})),me=u(function(t,e){return de(le(t),e)});function ge(t,e){var n=function(n){var r=e.concat([t]);return oe(n,r)?"<Circular>":ge(n,r)},r=function(t,e){return N(function(e){return se(e)+": "+n(t[e])},e.slice().sort())};switch(Object.prototype.toString.call(t)){case"[object Arguments]":return"(function() { return arguments; }("+N(n,t).join(", ")+"))";case"[object Array]":return"["+N(n,t).concat(r(t,me(function(t){return/^\d+$/.test(t)},q(t)))).join(", ")+"]";case"[object Boolean]":return"object"==typeof t?"new Boolean("+n(t.valueOf())+")":t.toString();case"[object Date]":return"new Date("+(isNaN(t.valueOf())?n(NaN):se(ce(t)))+")";case"[object Null]":return"null";case"[object Number]":return"object"==typeof t?"new Number("+n(t.valueOf())+")":1/t==-1/0?"-0":t.toString(10);case"[object String]":return"object"==typeof t?"new String("+n(t.valueOf())+")":se(t);case"[object Undefined]":return"undefined";default:if("function"==typeof t.toString){var i=t.toString();if("[object Object]"!==i)return i}return"{"+r(t,q(t)).join(", ")+"}"}}var ye=s(function(t){return ge(t,[])}),ve=u(function(t,e){if(y(t)){if(y(e))return t.concat(e);throw new TypeError(ye(e)+" is not an array")}if(I(t)){if(I(e))return t+e;throw new TypeError(ye(e)+" is not a string")}if(null!=t&&bt(t["fantasy-land/concat"]))return t["fantasy-land/concat"](e);if(null!=t&&bt(t.concat))return t.concat(e);throw new TypeError(ye(t)+' does not have a method named "concat" or "fantasy-land/concat"')}),be=s(function(t){return f(X(S,0,$(function(t){return t[0].length},t)),function(){for(var e=0;e<t.length;){if(t[e][0].apply(this,arguments))return t[e][1].apply(this,arguments);e+=1}})}),we=u(function(t,e){if(t>10)throw new Error("Constructor with greater than ten arguments");return 0===t?function(){return new e}:Et(yt(t,function(t,n,r,i,a,o,s,u,c,l){switch(arguments.length){case 1:return new e(t);case 2:return new e(t,n);case 3:return new e(t,n,r);case 4:return new e(t,n,r,i);case 5:return new e(t,n,r,i,a);case 6:return new e(t,n,r,i,a,o);case 7:return new e(t,n,r,i,a,o,s);case 8:return new e(t,n,r,i,a,o,s,u);case 9:return new e(t,n,r,i,a,o,s,u,c);case 10:return new e(t,n,r,i,a,o,s,u,c,l)}}))}),_e=s(function(t){return we(t.length,t)}),xe=u(oe),Ee=u(function(t,e){return p(X(S,0,G("length",e)),function(){var n=arguments,r=this;return t.apply(r,N(function(t){return t.apply(r,n)},e))})}),Se=function(){function t(t,e,n,r){this.valueFn=t,this.valueAcc=e,this.keyFn=n,this.xf=r,this.inputs={}}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){var e;for(e in this.inputs)if(B(e,this.inputs)&&(t=this.xf["@@transducer/step"](t,this.inputs[e]))["@@transducer/reduced"]){t=t["@@transducer/value"];break}return this.inputs=null,this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){var n=this.keyFn(e);return this.inputs[n]=this.inputs[n]||[n,this.valueAcc],this.inputs[n][1]=this.valueFn(this.inputs[n][1],e),t},t}(),Ne=h(4,[],b([],h(4,[],function(t,e,n,r){return new Se(t,e,n,r)}),function(t,e,n,r){return D(function(r,i){var a=n(i);return r[a]=t(B(a,r)?r[a]:e,i),r},{},r)})),Ie=Ne(function(t,e){return t+1},0),Oe=c(-1),ke=u(function(t,e){return null==e||e!=e?t:e}),Ae=m(function(t,e,n){var r=t(e),i=t(n);return r>i?-1:r<i?1:0});function Ce(t,e,n){var r,i=typeof t;switch(i){case"string":case"number":return 0===t&&1/t==-1/0?!!n._items["-0"]||(e&&(n._items["-0"]=!0),!1):null!==n._nativeSet?e?(r=n._nativeSet.size,n._nativeSet.add(t),n._nativeSet.size===r):n._nativeSet.has(t):i in n._items?t in n._items[i]||(e&&(n._items[i][t]=!0),!1):(e&&(n._items[i]={},n._items[i][t]=!0),!1);case"boolean":if(i in n._items){var a=t?1:0;return!!n._items[i][a]||(e&&(n._items[i][a]=!0),!1)}return e&&(n._items[i]=t?[!1,!0]:[!0,!1]),!1;case"function":return null!==n._nativeSet?e?(r=n._nativeSet.size,n._nativeSet.add(t),n._nativeSet.size===r):n._nativeSet.has(t):i in n._items?!!oe(t,n._items[i])||(e&&n._items[i].push(t),!1):(e&&(n._items[i]=[t]),!1);case"undefined":return!!n._items[i]||(e&&(n._items[i]=!0),!1);case"object":if(null===t)return!!n._items.null||(e&&(n._items.null=!0),!1);default:return(i=Object.prototype.toString.call(t))in n._items?!!oe(t,n._items[i])||(e&&n._items[i].push(t),!1):(e&&(n._items[i]=[t]),!1)}}var Pe=function(){function t(){this._nativeSet="function"==typeof Set?new Set:null,this._items={}}return t.prototype.add=function(t){return!Ce(t,!0,this)},t.prototype.has=function(t){return Ce(t,!1,this)},t}(),Te=u(function(t,e){for(var n=[],r=0,i=t.length,a=e.length,o=new Pe,s=0;s<a;s+=1)o.add(e[s]);for(;r<i;)o.add(t[r])&&(n[n.length]=t[r]),r+=1;return n}),Re=m(function(t,e,n){for(var r=[],i=0,a=e.length;i<a;)te(t,e[i],n)||te(t,e[i],r)||r.push(e[i]),i+=1;return r}),De=u(function(t,e){var n={};for(var r in e)n[r]=e[r];return delete n[t],n}),Me=m(function(t,e,n){var r=Array.prototype.slice.call(n,0);return r.splice(t,e),r}),je=m(function(t,e,n){return g(t,J(e),n)}),Be=u(function t(e,n){switch(e.length){case 0:return n;case 1:return dt(e[0])&&y(n)?Me(e[0],1,n):De(e[0],n);default:var r=e[0],i=Array.prototype.slice.call(e,1);return null==n[r]?n:dt(r)&&y(n)?je(r,t(i,n[r]),n):pt(r,t(i,n[r]),n)}}),Le=u(function(t,e){return t/e}),ze=function(){function t(t,e){this.xf=e,this.n=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){return this.n>0?(this.n-=1,t):this.xf["@@transducer/step"](t,e)},t}(),Fe=u(b(["drop"],u(function(t,e){return new ze(t,e)}),function(t,e){return Lt(Math.max(0,t),1/0,e)})),Ue=function(){function t(t,e){this.xf=e,this.n=t,this.i=0}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){this.i+=1;var n=0===this.n?t:this.xf["@@transducer/step"](t,e);return this.n>=0&&this.i>=this.n?w(n):n},t}(),Ve=u(b(["take"],u(function(t,e){return new Ue(t,e)}),function(t,e){return Lt(0,t<0?1/0:t,e)}));function We(t,e){return Ve(t<e.length?e.length-t:0,e)}var qe=function(){function t(t,e){this.xf=e,this.pos=0,this.full=!1,this.acc=new Array(t)}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.acc=null,this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.full&&(t=this.xf["@@transducer/step"](t,this.acc[this.pos])),this.store(e),t},t.prototype.store=function(t){this.acc[this.pos]=t,this.pos+=1,this.pos===this.acc.length&&(this.pos=0,this.full=!0)},t}(),$e=u(b([],u(function(t,e){return new qe(t,e)}),We));function He(t,e){for(var n=e.length-1;n>=0&&t(e[n]);)n-=1;return Lt(0,n+1,e)}var Ke=function(){function t(t,e){this.f=t,this.retained=[],this.xf=e}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.retained=null,this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.f(e)?this.retain(t,e):this.flush(t,e)},t.prototype.flush=function(t,e){return t=D(this.xf["@@transducer/step"],t,this.retained),this.retained=[],this.xf["@@transducer/step"](t,e)},t.prototype.retain=function(t,e){return this.retained.push(e),t},t}(),Ge=u(b([],u(function(t,e){return new Ke(t,e)}),He)),Xe=function(){function t(t,e){this.xf=e,this.pred=t,this.lastValue=void 0,this.seenFirstValue=!1}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){var n=!1;return this.seenFirstValue?this.pred(this.lastValue,e)&&(n=!0):this.seenFirstValue=!0,this.lastValue=e,n?t:this.xf["@@transducer/step"](t,e)},t}(),Ye=u(function(t,e){return new Xe(t,e)}),Je=Kt(-1),Ze=u(b([],Ye,function(t,e){var n=[],r=1,i=e.length;if(0!==i)for(n[0]=e[0];r<i;)t(Je(n),e[r])||(n[n.length]=e[r]),r+=1;return n})),Qe=s(b([],Ye(ie),Ze(ie))),tn=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){if(this.f){if(this.f(e))return t;this.f=null}return this.xf["@@transducer/step"](t,e)},t}(),en=u(b(["dropWhile"],u(function(t,e){return new tn(t,e)}),function(t,e){for(var n=0,r=e.length;n<r&&t(e[n]);)n+=1;return Lt(n,1/0,e)})),nn=u(function(t,e){return t||e}),rn=u(function(t,e){return bt(t)?function(){return t.apply(this,arguments)||e.apply(this,arguments)}:_t(nn)(t,e)}),an=s(function(t){return null!=t&&"function"==typeof t["fantasy-land/empty"]?t["fantasy-land/empty"]():null!=t&&null!=t.constructor&&"function"==typeof t.constructor["fantasy-land/empty"]?t.constructor["fantasy-land/empty"]():null!=t&&"function"==typeof t.empty?t.empty():null!=t&&null!=t.constructor&&"function"==typeof t.constructor.empty?t.constructor.empty():y(t)?[]:I(t)?"":he(t)?{}:z(t)?function(){return arguments}():void 0}),on=u(function(t,e){return Fe(t>=0?e.length-t:0,e)}),sn=u(function(t,e){return ie(on(t.length,e),t)}),un=m(function(t,e,n){return ie(t(e),t(n))}),cn=m(function(t,e,n){return ie(e[t],n[t])}),ln=u(function t(e,n){var r,i,a,o=n instanceof Array?[]:{};for(i in n)a=typeof(r=e[i]),o[i]="function"===a?r(n[i]):r&&"object"===a?t(r,n[i]):n[i];return o}),fn=function(){function t(t,e){this.xf=e,this.f=t,this.found=!1}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.found||(t=this.xf["@@transducer/step"](t,void 0)),this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.f(e)&&(this.found=!0,t=w(this.xf["@@transducer/step"](t,e))),t},t}(),hn=u(b(["find"],u(function(t,e){return new fn(t,e)}),function(t,e){for(var n=0,r=e.length;n<r;){if(t(e[n]))return e[n];n+=1}})),pn=function(){function t(t,e){this.xf=e,this.f=t,this.idx=-1,this.found=!1}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.found||(t=this.xf["@@transducer/step"](t,-1)),this.xf["@@transducer/result"](t)},t.prototype["@@transducer/step"]=function(t,e){return this.idx+=1,this.f(e)&&(this.found=!0,t=w(this.xf["@@transducer/step"](t,this.idx))),t},t}(),dn=u(b([],u(function(t,e){return new pn(t,e)}),function(t,e){for(var n=0,r=e.length;n<r;){if(t(e[n]))return n;n+=1}return-1})),mn=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.xf["@@transducer/result"](this.xf["@@transducer/step"](t,this.last))},t.prototype["@@transducer/step"]=function(t,e){return this.f(e)&&(this.last=e),t},t}(),gn=u(b([],u(function(t,e){return new mn(t,e)}),function(t,e){for(var n=e.length-1;n>=0;){if(t(e[n]))return e[n];n-=1}})),yn=function(){function t(t,e){this.xf=e,this.f=t,this.idx=-1,this.lastIdx=-1}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=function(t){return this.xf["@@transducer/result"](this.xf["@@transducer/step"](t,this.lastIdx))},t.prototype["@@transducer/step"]=function(t,e){return this.idx+=1,this.f(e)&&(this.lastIdx=this.idx),t},t}(),vn=u(b([],u(function(t,e){return new yn(t,e)}),function(t,e){for(var n=e.length-1;n>=0;){if(t(e[n]))return n;n-=1}return-1})),bn=s(Nt(!0)),wn=s(function(t){return p(t.length,function(e,n){var r=Array.prototype.slice.call(arguments,0);return r[0]=n,r[1]=e,t.apply(this,r)})}),_n=u(Bt("forEach",function(t,e){for(var n=e.length,r=0;r<n;)t(e[r]),r+=1;return e})),xn=u(function(t,e){for(var n=q(e),r=0;r<n.length;){var i=n[r];t(e[i],i,e),r+=1}return e}),En=s(function(t){for(var e={},n=0;n<t.length;)e[t[n][0]]=t[n][1],n+=1;return e}),Sn=u(Bt("groupBy",Ne(function(t,e){return null==t&&(t=[]),t.push(e),t},null))),Nn=u(function(t,e){for(var n=[],r=0,i=e.length;r<i;){for(var a=r+1;a<i&&t(e[a-1],e[a]);)a+=1;n.push(e.slice(r,a)),r=a}return n}),In=u(function(t,e){return t>e}),On=u(function(t,e){return t>=e}),kn=u(function(t,e){if(0===t.length)return!1;for(var n=e,r=0;r<t.length;){if(!B(t[r],n))return!1;n=n[t[r]],r+=1}return!0}),An=u(function(t,e){return kn([t],e)}),Cn=u(function(t,e){return t in e}),Pn=u(ee),Tn=m(function(t,e,n){return p(Math.max(t.length,e.length,n.length),function(){return t.apply(this,arguments)?e.apply(this,arguments):n.apply(this,arguments)})}),Rn=c(1),Dn=u(oe),Mn=Ne(function(t,e){return e},null),jn=u(function(t,e){return"function"!=typeof e.indexOf||y(e)?ae(e,t,0):e.indexOf(t)}),Bn=Lt(0,-1),Ln=m(function(t,e,n){return fe(function(e){return te(t,e,n)},e)}),zn=m(function(t,e,n){t=t<n.length&&t>=0?t:n.length;var r=Array.prototype.slice.call(n,0);return r.splice(t,0,e),r}),Fn=m(function(t,e,n){return t=t<n.length&&t>=0?t:n.length,[].concat(Array.prototype.slice.call(n,0,t),e,Array.prototype.slice.call(n,t))}),Un=u(function(t,e){for(var n,r,i=new Pe,a=[],o=0;o<e.length;)n=t(r=e[o]),i.add(n)&&a.push(r),o+=1;return a}),Vn=Un(Yt),Wn=u(function(t,e){var n,r;return t.length>e.length?(n=t,r=e):(n=e,r=t),Vn(fe(wn(oe)(n),r))}),qn=u(Bt("intersperse",function(t,e){for(var n=[],r=0,i=e.length;r<i;)r===i-1?n.push(e[r]):n.push(e[r],t),r+=1;return n}));var $n="function"==typeof Object.assign?Object.assign:function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1,r=arguments.length;n<r;){var i=arguments[n];if(null!=i)for(var a in i)B(a,i)&&(e[a]=i[a]);n+=1}return e},Hn=u(function(t,e){var n={};return n[t]=e,n}),Kn={"@@transducer/init":Array,"@@transducer/step":function(t,e){return t.push(e),t},"@@transducer/result":Xt},Gn={"@@transducer/init":String,"@@transducer/step":function(t,e){return t+e},"@@transducer/result":Xt},Xn={"@@transducer/init":Object,"@@transducer/step":function(t,e){return $n(t,O(e)?Hn(e[0],e[1]):e)},"@@transducer/result":Xt};var Yn=m(function(t,e,n){return v(t)?D(e(t),t["@@transducer/init"](),n):D(e(function(t){if(v(t))return t;if(O(t))return Kn;if("string"==typeof t)return Gn;if("object"==typeof t)return Xn;throw new Error("Cannot create transformer for "+t)}(t)),Pt(t,[],[],!1),n)}),Jn=s(function(t){for(var e=q(t),n=e.length,r=0,i={};r<n;){var a=e[r],o=t[a],s=B(o,i)?i[o]:i[o]=[];s[s.length]=a,r+=1}return i}),Zn=s(function(t){for(var e=q(t),n=e.length,r=0,i={};r<n;){var a=e[r];i[t[a]]=a,r+=1}return i}),Qn=u(function(t,e){return p(t+1,function(){var n=arguments[t];if(null!=n&&bt(n[e]))return n[e].apply(n,Array.prototype.slice.call(arguments,0,t));throw new TypeError(ye(n)+' does not have a method named "'+e+'"')})}),tr=u(function(t,e){return null!=e&&e.constructor===t||e instanceof t}),er=s(function(t){return null!=t&&ie(t,an(t))}),nr=Qn(1,"join"),rr=s(function(t){return Ee(function(){return Array.prototype.slice.call(arguments,0)},t)}),ir=s(function(t){var e,n=[];for(e in t)n[n.length]=e;return n}),ar=u(function(t,e){if("function"!=typeof e.lastIndexOf||y(e)){for(var n=e.length-1;n>=0;){if(ie(e[n],t))return n;n-=1}return-1}return e.lastIndexOf(t)});function or(t){return"[object Number]"===Object.prototype.toString.call(t)}var sr=s(function(t){return null!=t&&or(t.length)?t.length:NaN}),ur=u(function(t,e){return function(n){return function(r){return $(function(t){return e(t,r)},n(t(r)))}}}),cr=s(function(t){return ur(Kt(t),je(t))}),lr=s(function(t){return ur(H(t),gt(t))}),fr=s(function(t){return ur(K(t),pt(t))}),hr=u(function(t,e){return t<e}),pr=u(function(t,e){return t<=e}),dr=m(function(t,e,n){for(var r=0,i=n.length,a=[],o=[e];r<i;)o=t(o[0],n[r]),a[r]=o[1],r+=1;return[o[0],a]}),mr=m(function(t,e,n){for(var r=n.length-1,i=[],a=[e];r>=0;)a=t(a[0],n[r]),i[r]=a[1],r-=1;return[a[0],i]}),gr=u(function(t,e){return D(function(n,r){return n[r]=t(e[r],r,e),n},{},q(e))}),yr=u(function(t,e){return e.match(t)||[]}),vr=u(function(t,e){return dt(t)?!dt(e)||e<1?NaN:(t%e+e)%e:NaN}),br=m(function(t,e,n){return t(n)>t(e)?n:e}),wr=X(c,0),_r=s(function(t){return wr(t)/t.length}),xr=s(function(t){var e=t.length;if(0===e)return NaN;var n=2-e%2,r=(e-n)/2;return _r(Array.prototype.slice.call(t,0).sort(function(t,e){return t<e?-1:t>e?1:0}).slice(r,r+n))}),Er=u(function(t,e){var n={};return f(e.length,function(){var r=t.apply(this,arguments);return B(r,n)||(n[r]=e.apply(this,arguments)),n[r]})}),Sr=u(function(t,e){return $n({},t,e)}),Nr=s(function(t){return $n.apply(null,[{}].concat(t))}),Ir=m(function(t,e,n){var r,i={};for(r in e)B(r,e)&&(i[r]=B(r,n)?t(r,e[r],n[r]):e[r]);for(r in n)B(r,n)&&!B(r,i)&&(i[r]=n[r]);return i}),Or=m(function t(e,n,r){return Ir(function(n,r,i){return he(r)&&he(i)?t(e,r,i):e(n,r,i)},n,r)}),kr=u(function(t,e){return Or(function(t,e,n){return e},t,e)}),Ar=u(function(t,e){return Or(function(t,e,n){return n},t,e)}),Cr=m(function(t,e,n){return Or(function(e,n,r){return t(n,r)},e,n)}),Pr=u(function(t,e){return $n({},e,t)}),Tr=u(function(t,e){return $n({},t,e)}),Rr=m(function(t,e,n){return Ir(function(e,n,r){return t(n,r)},e,n)}),Dr=u(function(t,e){return e<t?e:t}),Mr=m(function(t,e,n){return t(n)<t(e)?n:e}),jr=u(function(t,e){return t%e}),Br=m(function(t,e,n){var r=n.length,i=n.slice(),a=t<0?r+t:t,o=e<0?r+e:e,s=i.splice(a,1);return a<0||a>=n.length||o<0||o>=n.length?n:[].concat(i.slice(0,o)).concat(s).concat(i.slice(o,n.length))}),Lr=u(function(t,e){return t*e}),zr=s(function(t){return-t}),Fr=u(function(t,e){return E(le(t),e)}),Ur=s(function(t){return p(t<0?1:t+1,function(){return Kt(t,arguments)})}),Vr=m(function(t,e,n){return t(e(n))});function Wr(t){return[t]}var qr=s(Wr),$r=u(function(t,e){for(var n={},r={},i=0,a=t.length;i<a;)r[t[i]]=1,i+=1;for(var o in e)r.hasOwnProperty(o)||(n[o]=e[o]);return n}),Hr=s(function(t){var e,n=!1;return f(t.length,function(){return n?e:(n=!0,e=t.apply(this,arguments))})});function Kr(t,e){if(null==e||!bt(e.then))throw new TypeError("`"+t+"` expected a Promise, received "+ge(e,[]))}var Gr=u(function(t,e){return Kr("otherwise",e),e.then(null,t)}),Xr=function(t){return{value:t,map:function(e){return Xr(e(t))}}},Yr=m(function(t,e,n){return t(function(t){return Xr(e(t))})(n).value}),Jr=u(function(t,e){return[t,e]});function Zr(t){return u(function(e,n){return f(Math.max(0,e.length-n.length),function(){return e.apply(this,t(n,arguments))})})}var Qr=Zr(l),ti=Zr(wn(l)),ei=rr([de,me]),ni=m(function(t,e,n){return ie(H(t,n),e)}),ri=m(function(t,e,n){return ke(t,H(e,n))}),ii=m(function(t,e,n){return e.length>0&&t(H(e,n))}),ai=u(function(t,e){for(var n={},r=0;r<t.length;)t[r]in e&&(n[t[r]]=e[t[r]]),r+=1;return n}),oi=u(function(t,e){for(var n={},r=0,i=t.length;r<i;){var a=t[r];n[a]=e[a],r+=1}return n}),si=u(function(t,e){var n={};for(var r in e)t(e[r],r,e)&&(n[r]=e[r]);return n});function ui(){if(0===arguments.length)throw new Error("pipeK requires at least one argument");return Wt.apply(this,Ut(arguments))}var ci=u(function(t,e){return l([t],e)}),li=X(Lr,1),fi=u(function(t,e){return p(e.length,function(){for(var n=[],r=0;r<e.length;)n.push(e[r].call(this,arguments[r])),r+=1;return t.apply(this,n.concat(Array.prototype.slice.call(arguments,e.length)))})}),hi=fi(N,[oi,Yt]),pi=m(function(t,e,n){return ie(e,n[t])}),di=m(function(t,e,n){return tr(t,n[e])}),mi=m(function(t,e,n){return ri(t,[e],n)}),gi=m(function(t,e,n){return t(n[e])}),yi=u(function(t,e){for(var n=t.length,r=[],i=0;i<n;)r[i]=e[t[i]],i+=1;return r}),vi=u(function(t,e){if(!or(t)||!or(e))throw new TypeError("Both arguments to range must be numbers");for(var n=[],r=t;r<e;)n.push(r),r+=1;return n}),bi=m(function(t,e,n){for(var r=n.length-1;r>=0;)e=t(n[r],e),r-=1;return e}),wi=h(4,[],function(t,e,n,r){return D(function(n,r){return t(n,r)?e(n,r):w(n)},n,r)}),_i=s(w),xi=u(function(t,e){var n,r=Number(e),i=0;if(r<0||isNaN(r))throw new RangeError("n must be a non-negative number");for(n=new Array(r);i<r;)n[i]=t(i),i+=1;return n}),Ei=u(function(t,e){return xi(J(t),e)}),Si=m(function(t,e,n){return n.replace(t,e)}),Ni=m(function(t,e,n){for(var r=0,i=n.length,a=[e];r<i;)e=t(e,n[r]),a[r+1]=e,r+=1;return a}),Ii=u(function(t,e){return"function"==typeof e.sequence?e.sequence(t):bi(function(t,e){return nt($(ci,t),e)},t([]),e)}),Oi=m(function(t,e,n){return Yr(t,J(e),n)}),ki=u(function(t,e){return Array.prototype.slice.call(e,0).sort(t)}),Ai=u(function(t,e){return Array.prototype.slice.call(e,0).sort(function(e,n){var r=t(e),i=t(n);return r<i?-1:r>i?1:0})}),Ci=u(function(t,e){return Array.prototype.slice.call(e,0).sort(function(e,n){for(var r=0,i=0;0===r&&i<t.length;)r=t[i](e,n),i+=1;return r})}),Pi=Qn(1,"split"),Ti=u(function(t,e){return[Lt(0,t,e),Lt(t,sr(e),e)]}),Ri=u(function(t,e){if(t<=0)throw new Error("First argument to splitEvery must be a positive integer");for(var n=[],r=0;r<e.length;)n.push(Lt(r,r+=t,e));return n}),Di=u(function(t,e){for(var n=0,r=e.length,i=[];n<r&&!t(e[n]);)i.push(e[n]),n+=1;return[i,Array.prototype.slice.call(e,n)]}),Mi=u(function(t,e){return ie(Ve(t.length,e),t)}),ji=u(function(t,e){return Number(t)-Number(e)}),Bi=u(function(t,e){return ve(Te(t,e),Te(e,t))}),Li=m(function(t,e,n){return ve(Re(t,e,n),Re(t,n,e))}),zi=u(function(t,e){for(var n=e.length-1;n>=0&&t(e[n]);)n-=1;return Lt(n+1,1/0,e)}),Fi=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){return this.f(e)?this.xf["@@transducer/step"](t,e):w(t)},t}(),Ui=u(b(["takeWhile"],u(function(t,e){return new Fi(t,e)}),function(t,e){for(var n=0,r=e.length;n<r&&t(e[n]);)n+=1;return Lt(0,n,e)})),Vi=function(){function t(t,e){this.xf=e,this.f=t}return t.prototype["@@transducer/init"]=_.init,t.prototype["@@transducer/result"]=_.result,t.prototype["@@transducer/step"]=function(t,e){return this.f(e),this.xf["@@transducer/step"](t,e)},t}(),Wi=u(b([],u(function(t,e){return new Vi(t,e)}),function(t,e){return t(e),e}));var qi=u(function(t,e){if(n=t,"[object RegExp]"!==Object.prototype.toString.call(n))throw new TypeError("‘test’ requires a value of type RegExp as its first argument; received "+ye(t));var n;return At(t).test(e)}),$i=u(function(t,e){return Kr("then",e),e.then(t)}),Hi=Qn(0,"toLowerCase"),Ki=s(function(t){var e=[];for(var n in t)B(n,t)&&(e[e.length]=[n,t[n]]);return e}),Gi=s(function(t){var e=[];for(var n in t)e[e.length]=[n,t[n]];return e}),Xi=Qn(0,"toUpperCase"),Yi=p(4,function(t,e,n,r){return D(t("function"==typeof e?A(e):e),n,r)}),Ji=s(function(t){for(var e=0,n=[];e<t.length;){for(var r=t[e],i=0;i<r.length;)void 0===n[i]&&(n[i]=[]),n[i].push(r[i]),i+=1;e+=1}return n}),Zi=m(function(t,e,n){return"function"==typeof n["fantasy-land/traverse"]?n["fantasy-land/traverse"](e,t):Ii(t,$(e,n))}),Qi="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff",ta=s("function"==typeof String.prototype.trim&&!Qi.trim()&&"​".trim()?function(t){return t.trim()}:function(t){var e=new RegExp("^["+Qi+"]["+Qi+"]*"),n=new RegExp("["+Qi+"]["+Qi+"]*$");return t.replace(e,"").replace(n,"")}),ea=u(function(t,e){return f(t.length,function(){try{return t.apply(this,arguments)}catch(t){return e.apply(this,l([t],arguments))}})}),na=s(function(t){return function(){return t(Array.prototype.slice.call(arguments,0))}}),ra=s(function(t){return yt(1,t)}),ia=u(function(t,e){return p(t,function(){for(var n,r=1,i=e,a=0;r<=t&&"function"==typeof i;)n=r===t?arguments.length:a+i.length,i=i.apply(this,Array.prototype.slice.call(arguments,a,n)),r+=1,a=n;return i})}),aa=u(function(t,e){for(var n=t(e),r=[];n&&n.length;)r[r.length]=n[0],n=t(n[1]);return r}),oa=u(Vt(Vn,l)),sa=u(function(t,e){for(var n,r=0,i=e.length,a=[];r<i;)te(t,n=e[r],a)||(a[a.length]=n),r+=1;return a}),ua=m(function(t,e,n){return sa(t,l(e,n))}),ca=m(function(t,e,n){return t(n)?n:e(n)}),la=Ot(Xt),fa=m(function(t,e,n){for(var r=n;!t(r);)r=e(r);return r}),ha=s(function(t){var e,n=[];for(e in t)n[n.length]=t[e];return n}),pa=function(t){return{value:t,"fantasy-land/map":function(){return this}}},da=u(function(t,e){return t(pa)(e).value}),ma=m(function(t,e,n){return t(n)?e(n):n}),ga=u(function(t,e){for(var n in t)if(B(n,t)&&!t[n](e[n]))return!1;return!0}),ya=u(function(t,e){return ga($(ie,t),e)}),va=u(function(t,e){return me(wn(oe)(t),e)}),ba=u(function(t,e){for(var n,r=0,i=t.length,a=e.length,o=[];r<i;){for(n=0;n<a;)o[o.length]=[t[r],e[n]],n+=1;r+=1}return o}),wa=u(function(t,e){for(var n=[],r=0,i=Math.min(t.length,e.length);r<i;)n[r]=[t[r],e[r]],r+=1;return n}),_a=u(function(t,e){for(var n=0,r=Math.min(t.length,e.length),i={};n<r;)i[t[n]]=e[n],n+=1;return i}),xa=m(function(t,e,n){for(var r=[],i=0,a=Math.min(e.length,n.length);i<a;)r[i]=t(e[i],n[i]),i+=1;return r}),Ea=s(function(t){return p(t.length,function(){var e=arguments;return function(){return t.apply(this,e)}})});n.d(e,"F",function(){return r}),n.d(e,"T",function(){return i}),n.d(e,"__",function(){return a}),n.d(e,"add",function(){return c}),n.d(e,"addIndex",function(){return d}),n.d(e,"adjust",function(){return g}),n.d(e,"all",function(){return E}),n.d(e,"allPass",function(){return Y}),n.d(e,"always",function(){return J}),n.d(e,"and",function(){return Z}),n.d(e,"any",function(){return tt}),n.d(e,"anyPass",function(){return et}),n.d(e,"ap",function(){return nt}),n.d(e,"aperture",function(){return at}),n.d(e,"append",function(){return ot}),n.d(e,"apply",function(){return st}),n.d(e,"applySpec",function(){return lt}),n.d(e,"applyTo",function(){return ft}),n.d(e,"ascend",function(){return ht}),n.d(e,"assoc",function(){return pt}),n.d(e,"assocPath",function(){return gt}),n.d(e,"binary",function(){return vt}),n.d(e,"bind",function(){return C}),n.d(e,"both",function(){return xt}),n.d(e,"call",function(){return St}),n.d(e,"chain",function(){return Ot}),n.d(e,"clamp",function(){return kt}),n.d(e,"clone",function(){return Tt}),n.d(e,"comparator",function(){return Rt}),n.d(e,"complement",function(){return Mt}),n.d(e,"compose",function(){return Vt}),n.d(e,"composeK",function(){return Wt}),n.d(e,"composeP",function(){return Ht}),n.d(e,"composeWith",function(){return Zt}),n.d(e,"concat",function(){return ve}),n.d(e,"cond",function(){return be}),n.d(e,"construct",function(){return _e}),n.d(e,"constructN",function(){return we}),n.d(e,"contains",function(){return xe}),n.d(e,"converge",function(){return Ee}),n.d(e,"countBy",function(){return Ie}),n.d(e,"curry",function(){return Et}),n.d(e,"curryN",function(){return p}),n.d(e,"dec",function(){return Oe}),n.d(e,"defaultTo",function(){return ke}),n.d(e,"descend",function(){return Ae}),n.d(e,"difference",function(){return Te}),n.d(e,"differenceWith",function(){return Re}),n.d(e,"dissoc",function(){return De}),n.d(e,"dissocPath",function(){return Be}),n.d(e,"divide",function(){return Le}),n.d(e,"drop",function(){return Fe}),n.d(e,"dropLast",function(){return $e}),n.d(e,"dropLastWhile",function(){return Ge}),n.d(e,"dropRepeats",function(){return Qe}),n.d(e,"dropRepeatsWith",function(){return Ze}),n.d(e,"dropWhile",function(){return en}),n.d(e,"either",function(){return rn}),n.d(e,"empty",function(){return an}),n.d(e,"endsWith",function(){return sn}),n.d(e,"eqBy",function(){return un}),n.d(e,"eqProps",function(){return cn}),n.d(e,"equals",function(){return ie}),n.d(e,"evolve",function(){return ln}),n.d(e,"filter",function(){return de}),n.d(e,"find",function(){return hn}),n.d(e,"findIndex",function(){return dn}),n.d(e,"findLast",function(){return gn}),n.d(e,"findLastIndex",function(){return vn}),n.d(e,"flatten",function(){return bn}),n.d(e,"flip",function(){return wn}),n.d(e,"forEach",function(){return _n}),n.d(e,"forEachObjIndexed",function(){return xn}),n.d(e,"fromPairs",function(){return En}),n.d(e,"groupBy",function(){return Sn}),n.d(e,"groupWith",function(){return Nn}),n.d(e,"gt",function(){return In}),n.d(e,"gte",function(){return On}),n.d(e,"has",function(){return An}),n.d(e,"hasIn",function(){return Cn}),n.d(e,"hasPath",function(){return kn}),n.d(e,"head",function(){return Gt}),n.d(e,"identical",function(){return Pn}),n.d(e,"identity",function(){return Yt}),n.d(e,"ifElse",function(){return Tn}),n.d(e,"inc",function(){return Rn}),n.d(e,"includes",function(){return Dn}),n.d(e,"indexBy",function(){return Mn}),n.d(e,"indexOf",function(){return jn}),n.d(e,"init",function(){return Bn}),n.d(e,"innerJoin",function(){return Ln}),n.d(e,"insert",function(){return zn}),n.d(e,"insertAll",function(){return Fn}),n.d(e,"intersection",function(){return Wn}),n.d(e,"intersperse",function(){return qn}),n.d(e,"into",function(){return Yn}),n.d(e,"invert",function(){return Jn}),n.d(e,"invertObj",function(){return Zn}),n.d(e,"invoker",function(){return Qn}),n.d(e,"is",function(){return tr}),n.d(e,"isEmpty",function(){return er}),n.d(e,"isNil",function(){return mt}),n.d(e,"join",function(){return nr}),n.d(e,"juxt",function(){return rr}),n.d(e,"keys",function(){return q}),n.d(e,"keysIn",function(){return ir}),n.d(e,"last",function(){return Je}),n.d(e,"lastIndexOf",function(){return ar}),n.d(e,"length",function(){return sr}),n.d(e,"lens",function(){return ur}),n.d(e,"lensIndex",function(){return cr}),n.d(e,"lensPath",function(){return lr}),n.d(e,"lensProp",function(){return fr}),n.d(e,"lift",function(){return _t}),n.d(e,"liftN",function(){return wt}),n.d(e,"lt",function(){return hr}),n.d(e,"lte",function(){return pr}),n.d(e,"map",function(){return $}),n.d(e,"mapAccum",function(){return dr}),n.d(e,"mapAccumRight",function(){return mr}),n.d(e,"mapObjIndexed",function(){return gr}),n.d(e,"match",function(){return yr}),n.d(e,"mathMod",function(){return vr}),n.d(e,"max",function(){return S}),n.d(e,"maxBy",function(){return br}),n.d(e,"mean",function(){return _r}),n.d(e,"median",function(){return xr}),n.d(e,"memoizeWith",function(){return Er}),n.d(e,"merge",function(){return Sr}),n.d(e,"mergeAll",function(){return Nr}),n.d(e,"mergeDeepLeft",function(){return kr}),n.d(e,"mergeDeepRight",function(){return Ar}),n.d(e,"mergeDeepWith",function(){return Cr}),n.d(e,"mergeDeepWithKey",function(){return Or}),n.d(e,"mergeLeft",function(){return Pr}),n.d(e,"mergeRight",function(){return Tr}),n.d(e,"mergeWith",function(){return Rr}),n.d(e,"mergeWithKey",function(){return Ir}),n.d(e,"min",function(){return Dr}),n.d(e,"minBy",function(){return Mr}),n.d(e,"modulo",function(){return jr}),n.d(e,"move",function(){return Br}),n.d(e,"multiply",function(){return Lr}),n.d(e,"nAry",function(){return yt}),n.d(e,"negate",function(){return zr}),n.d(e,"none",function(){return Fr}),n.d(e,"not",function(){return Dt}),n.d(e,"nth",function(){return Kt}),n.d(e,"nthArg",function(){return Ur}),n.d(e,"o",function(){return Vr}),n.d(e,"objOf",function(){return Hn}),n.d(e,"of",function(){return qr}),n.d(e,"omit",function(){return $r}),n.d(e,"once",function(){return Hr}),n.d(e,"or",function(){return nn}),n.d(e,"otherwise",function(){return Gr}),n.d(e,"over",function(){return Yr}),n.d(e,"pair",function(){return Jr}),n.d(e,"partial",function(){return Qr}),n.d(e,"partialRight",function(){return ti}),n.d(e,"partition",function(){return ei}),n.d(e,"path",function(){return H}),n.d(e,"pathEq",function(){return ni}),n.d(e,"pathOr",function(){return ri}),n.d(e,"pathSatisfies",function(){return ii}),n.d(e,"pick",function(){return ai}),n.d(e,"pickAll",function(){return oi}),n.d(e,"pickBy",function(){return si}),n.d(e,"pipe",function(){return Ft}),n.d(e,"pipeK",function(){return ui}),n.d(e,"pipeP",function(){return $t}),n.d(e,"pipeWith",function(){return Jt}),n.d(e,"pluck",function(){return G}),n.d(e,"prepend",function(){return ci}),n.d(e,"product",function(){return li}),n.d(e,"project",function(){return hi}),n.d(e,"prop",function(){return K}),n.d(e,"propEq",function(){return pi}),n.d(e,"propIs",function(){return di}),n.d(e,"propOr",function(){return mi}),n.d(e,"propSatisfies",function(){return gi}),n.d(e,"props",function(){return yi}),n.d(e,"range",function(){return vi}),n.d(e,"reduce",function(){return X}),n.d(e,"reduceBy",function(){return Ne}),n.d(e,"reduceRight",function(){return bi}),n.d(e,"reduceWhile",function(){return wi}),n.d(e,"reduced",function(){return _i}),n.d(e,"reject",function(){return me}),n.d(e,"remove",function(){return Me}),n.d(e,"repeat",function(){return Ei}),n.d(e,"replace",function(){return Si}),n.d(e,"reverse",function(){return Ut}),n.d(e,"scan",function(){return Ni}),n.d(e,"sequence",function(){return Ii}),n.d(e,"set",function(){return Oi}),n.d(e,"slice",function(){return Lt}),n.d(e,"sort",function(){return ki}),n.d(e,"sortBy",function(){return Ai}),n.d(e,"sortWith",function(){return Ci}),n.d(e,"split",function(){return Pi}),n.d(e,"splitAt",function(){return Ti}),n.d(e,"splitEvery",function(){return Ri}),n.d(e,"splitWhen",function(){return Di}),n.d(e,"startsWith",function(){return Mi}),n.d(e,"subtract",function(){return ji}),n.d(e,"sum",function(){return wr}),n.d(e,"symmetricDifference",function(){return Bi}),n.d(e,"symmetricDifferenceWith",function(){return Li}),n.d(e,"tail",function(){return zt}),n.d(e,"take",function(){return Ve}),n.d(e,"takeLast",function(){return on}),n.d(e,"takeLastWhile",function(){return zi}),n.d(e,"takeWhile",function(){return Ui}),n.d(e,"tap",function(){return Wi}),n.d(e,"test",function(){return qi}),n.d(e,"then",function(){return $i}),n.d(e,"times",function(){return xi}),n.d(e,"toLower",function(){return Hi}),n.d(e,"toPairs",function(){return Ki}),n.d(e,"toPairsIn",function(){return Gi}),n.d(e,"toString",function(){return ye}),n.d(e,"toUpper",function(){return Xi}),n.d(e,"transduce",function(){return Yi}),n.d(e,"transpose",function(){return Ji}),n.d(e,"traverse",function(){return Zi}),n.d(e,"trim",function(){return ta}),n.d(e,"tryCatch",function(){return ea}),n.d(e,"type",function(){return Ct}),n.d(e,"unapply",function(){return na}),n.d(e,"unary",function(){return ra}),n.d(e,"uncurryN",function(){return ia}),n.d(e,"unfold",function(){return aa}),n.d(e,"union",function(){return oa}),n.d(e,"unionWith",function(){return ua}),n.d(e,"uniq",function(){return Vn}),n.d(e,"uniqBy",function(){return Un}),n.d(e,"uniqWith",function(){return sa}),n.d(e,"unless",function(){return ca}),n.d(e,"unnest",function(){return la}),n.d(e,"until",function(){return fa}),n.d(e,"update",function(){return je}),n.d(e,"useWith",function(){return fi}),n.d(e,"values",function(){return ut}),n.d(e,"valuesIn",function(){return ha}),n.d(e,"view",function(){return da}),n.d(e,"when",function(){return ma}),n.d(e,"where",function(){return ga}),n.d(e,"whereEq",function(){return ya}),n.d(e,"without",function(){return va}),n.d(e,"xprod",function(){return ba}),n.d(e,"zip",function(){return wa}),n.d(e,"zipObj",function(){return _a}),n.d(e,"zipWith",function(){return xa}),n.d(e,"thunkify",function(){return Ea})},function(t,e,n){"use strict";n.r(e);var r=n(0),i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var o,s=function(){return(s=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function u(t,e,n,r){return new(n||(n=Promise))(function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?i(t.value):new n(function(e){e(t.value)}).then(o,s)}u((r=r.apply(t,e||[])).next())})}function c(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}function l(){return null==o&&(o=r.f.get("EPSILON")),o}var f=0;function h(){return f++}var p={};function d(t){return void 0===t&&(t=""),t in p||(p[t]=0),p[t]+=1,t+p[t].toString()}var m={float32:{},int32:{}},g="float32";function y(t,e){return void 0===e&&(e=g),null==m[e][t]&&(m[e][t]=Object(r.pd)(t,e),Object(r.Rb)(m[e][t])),m[e][t]}var v=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return a(e,t),e}(Error),b=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return a(e,t),e}(Error),w=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return a(e,t),e}(Error),_=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return a(e,t),e}(Error),x=function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}return a(e,t),e}(Error);!function(t){function e(n){var r=t.call(this,n)||this;return Object.setPrototypeOf(r,e.prototype),r}a(e,t)}(Error);function E(t,e){if(Array.isArray(t)){for(var n=[],r=0;r<e;r++)n=n.concat(t);return n}return(n=new Array(e)).fill(t),n}function S(t,e){if(!t)throw new x(e)}function N(t,e){for(var n=0,r=0,i=t;r<i.length;r++)i[r]===e&&n++;return n}function I(t){return 1===t.length?t[0]:t}function O(t){return Array.isArray(t)?t:[t]}function k(t){var e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function A(t){return t.length<=1?t:-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,function(t,e){return e.toUpperCase()})}var C={};function P(t){return null==t?null:{className:t.getClassName(),config:t.getConfig()}}function T(t,e,n,r,i){if(void 0===e&&(e={}),void 0===n&&(n={}),void 0===r&&(r="object"),void 0===i&&(i=!1),"string"==typeof t){var a=t,o=void 0;if(a in n)o=n[a];else if(a in C)o=C[a];else if(null==(o=e[a]))throw new w("Unknown "+r+": "+t+". This may be due to one of the following reasons:\n1. The "+r+" is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom "+r+" is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().");return o}var u=t;if(null==u.className||null==u.config)throw new w(r+": Improper config format: "+JSON.stringify(u)+".\n'className' and 'config' must set.");var c,l,f,h=u.className,p=void 0,d=void 0;if(h in n?(p=(c=n.get(h))[0],d=c[1]):h in C?(p=(l=C.className)[0],d=l[1]):h in e&&(p=(f=e[h])[0],d=f[1]),null==p)throw new w("Unknown "+r+": "+h+". This may be due to one of the following reasons:\n1. The "+r+" is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom "+r+" is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().");if(null!=d){for(var m={},g=0,y=Object.keys(C);g<y.length;g++)m[S=y[g]]=C[S];for(var v=0,b=Object.keys(n);v<b.length;v++)m[S=b[v]]=n[S];u.config.customObjects=m;for(var _=s({},C),x=0,E=Object.keys(n);x<E.length;x++){var S=E[x];C[S]=n[S]}var N=d(p,u.config,n,i);return C=s({},_),N}_=s({},C);for(var I=0,O=Object.keys(n);I<O.length;I++)S=O[I],C[S]=n[S];return N=new p(u.config),C=s({},_),N}function R(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function D(t){if(null==t)return t;for(var e=[],n=0,r=t;n<r.length;n++){var i=r[n];-1===e.indexOf(i)&&e.push(i)}return e}function M(t){if(null==t)throw new w("Invalid value in obj: "+JSON.stringify(t));for(var e in t)if(t.hasOwnProperty(e))return!1;return!0}function j(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new w(n+" is not a valid "+e+".  Valid values are "+t+" or null/undefined.")}function B(t,e,n,r){return void 0===n&&(n=0),void 0===r&&(r=1/0),S(n>=0),S(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(function(t){return typeof t===e})}function L(t,e){return Object(r.ge)(function(){return Object(r.Ld)(Object(r.Vd)(Object(r.Ac)(t,t),e,!0))})}var z=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.getConfig=function(){return{}},e}(r.td.Serializable),F=function(t){function e(e){var n=t.call(this)||this;return n.defaultMaxValue=2,n.defaultAxis=0,n.maxValue=null!=e.maxValue?e.maxValue:n.defaultMaxValue,n.axis=null!=e.axis?e.axis:n.defaultAxis,n}return a(e,t),e.prototype.apply=function(t){var e=this;return Object(r.ge)(function(){var n=L(t,e.axis),i=Object(r.Q)(n,0,e.maxValue);return Object(r.zc)(t,Object(r.lb)(i,Object(r.u)(y(l()),n)))})},e.prototype.getConfig=function(){return{maxValue:this.maxValue,axis:this.axis}},e.className="MaxNorm",e}(z);r.td.registerClass(F);var U=function(t){function e(e){var n=t.call(this)||this;return n.defaultAxis=0,n.axis=null!=e.axis?e.axis:n.defaultAxis,n}return a(e,t),e.prototype.apply=function(t){var e=this;return Object(r.ge)(function(){return Object(r.lb)(t,Object(r.u)(y(l()),L(t,e.axis)))})},e.prototype.getConfig=function(){return{axis:this.axis}},e.className="UnitNorm",e}(z);r.td.registerClass(U);var V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.fd)(t)},e.className="NonNeg",e}(z);r.td.registerClass(V);var W=function(t){function e(e){var n=t.call(this)||this;return n.defaultMinValue=0,n.defaultMaxValue=1,n.defaultRate=1,n.defaultAxis=0,n.minValue=null!=e.minValue?e.minValue:n.defaultMinValue,n.maxValue=null!=e.maxValue?e.maxValue:n.defaultMaxValue,n.rate=null!=e.rate?e.rate:n.defaultRate,n.axis=null!=e.axis?e.axis:n.defaultAxis,n}return a(e,t),e.prototype.apply=function(t){var e=this;return Object(r.ge)(function(){var n=L(t,e.axis),i=Object(r.u)(Object(r.zc)(y(e.rate),Object(r.Q)(n,e.minValue,e.maxValue)),Object(r.zc)(y(1-e.rate),n));return Object(r.zc)(t,Object(r.lb)(i,Object(r.u)(y(l()),n)))})},e.prototype.getConfig=function(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}},e.className="MinMaxNorm",e}(z);r.td.registerClass(W);var q={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function $(t){return P(t)}function H(t,e){return void 0===e&&(e={}),T(t,r.td.SerializationMap.getMap().classNameMap,e,"constraint")}function K(t){return null==t?null:"string"==typeof t?H({className:t in q?q[t]:t,config:{}}):t instanceof z?t:H(t)}var G=Object.freeze({maxNorm:function(t){return new F(t)},unitNorm:function(t){return new U(t)},nonNeg:function(){return new V},minMaxNorm:function(t){return new W(t)}}),X=new Map,Y=["channelsFirst","channelsLast"];function J(t){j(Y,"DataFormat",t)}var Z=["valid","same","causal"];function Q(t){j(Z,"PaddingMode",t)}var tt=["max","avg"];var et=[],nt="/";function rt(t,e){et.push(t);try{var n=e();return et.pop(),n}catch(t){throw et.pop(),t}}function it(t){if(!st(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===et.length?"":et.join(nt)+nt)+t}function at(t){if(!st(t))throw new Error("Not a valid tensor name: '"+t+"'");X.has(t)||X.set(t,0);var e=X.get(t);if(X.set(t,X.get(t)+1),e>0){var n=t+"_"+e;return X.set(n,1),n}return t}var ot=new RegExp(/^[A-Za-z][-A-Za-z0-9\._\/]*$/);function st(t){return!!t.match(ot)}function ut(t){return t===parseInt(t.toString(),10)}function ct(t,e,n){null==e&&(e=0),null==n&&(n=t.length);for(var r=1,i=e;i<n;++i)r*=t[i];return r}function lt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(r.Zd)(t)}function ft(t){return Object(r.sc)(lt(t)).dataSync()[0]}function ht(t){return Object(r.mc)(lt(t)).dataSync()[0]}function pt(t,e){if(e<t)throw new w("end ("+e+") < begin ("+t+") is forbidden.");for(var n=[],r=t;r<e;++r)n.push(r);return n}function dt(t,e){return t.asType(e)}function mt(t,e){void 0===e&&(e=-1);var n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function gt(t,e,n){return Object(r.ge)(function(){switch(t.rank){case 1:return Object(r.Bd)(t,e,n);case 2:return Object(r.Cd)(t,[e,0],[n,t.shape[1]]);case 3:return Object(r.Dd)(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Object(r.Ed)(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);default:throw new w("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function yt(t,e,n){return Object(r.ge)(function(){switch(t.rank){case 1:return Object(r.Bd)(t,e,n);case 2:return Object(r.Cd)(t,[0,e],[t.shape[0],n]);case 3:return Object(r.Dd)(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Object(r.Ed)(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new w("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function vt(t,e,n,i){return Object(r.ge)(function(){switch(t.rank){case 1:return Object(r.Bd)(t,e,n);case 2:switch(i){case 1:return gt(t,e,n);case 2:return yt(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+i)}case 3:switch(i){case 1:return gt(t,e,n);case 2:return Object(r.Dd)(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return yt(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+i)}case 4:switch(i){case 1:return gt(t,e,n);case 2:return Object(r.Ed)(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Object(r.Ed)(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return yt(t,e,n);default:throw new w("The axis is not within the rank of the tensor "+i)}default:throw new w("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function bt(t,e){var n;return void 0===e&&(e=-1),e<0&&(e=0!==(n=t[0].rank)?n:0),e===t[0].rank&&(e=-1),Object(r.T)(t,e)}function wt(t,e){switch(t.rank){case 1:return Object(r.U)([t,e]);case 2:return Object(r.V)([t,e],0);case 3:return Object(r.W)([t,e],0);case 4:return Object(r.X)([t,e],0);default:throw new w("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function _t(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new w("The length of input n ("+e.length+") does not match the number of dimensions in input x ("+t.rank+")");return Object(r.he)(t,e)}function xt(t,e,n,i,a){return void 0===e&&(e=0),void 0===n&&(n=1),Object(r.ad)(t,e,n,i,a)}function Et(t,e){if(t.rank<2||e.rank<2)throw new _("dot requires both inputs to be rank >= 2 but got x shape = "+t.shape+" and y shape = "+e.shape);if(e.rank>=3&&(i=t.shape.slice(-1)[0])!==(s=e.shape.slice(-2)[0]))throw new _("If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = "+t.shape+" and  y shape = "+e.shape);if(2===t.rank&&2===e.rank)return Object(r.kc)(t,e);var n=t.shape.slice(),i=n.pop();t=t.reshape([-1,i]);var a=e.shape.slice(),o=a.pop(),s=a.pop(),u=a.concat([o]),c=Array.from({length:e.rank},function(t,n){return 0===n?e.rank-2:n<=e.rank-2?n-1:n});e=e.transpose(c).reshape([s,-1]);var l=n.concat(u);return Object(r.kc)(t,e).reshape(l)}function St(t,e,n){return Object(r.ge)(function(){return e=Array.isArray(e)?Object(r.Zd)(e,"int32"):e.toInt(),Object(r.Db)(t,e,n)})}function Nt(t){return Object(r.Ac)(t,t)}function It(t,e,n){return Object(r.ge)(function(){if(null==n&&(n="channelsLast"),J(n),1!==e.rank&&e.rank!==t.rank)throw new w("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t.rank);var r,i=e.shape;if(5===t.rank)"channelsFirst"===n?r=1===i.length?t.add(e.reshape([1,i[0],1,1,1])):t.add(e.reshape([1,i[3],i[0],i[1],i[2]])):"channelsLast"===n&&(r=1===i.length?t.add(e.reshape([1,1,1,1,i[0]])):t.add(e.reshape([1].concat(i))));else if(4===t.rank)"channelsFirst"===n?r=1===i.length?t.add(e.reshape([1,i[0],1,1])):t.add(e.reshape([1,i[2],i[0],i[1]])):"channelsLast"===n&&(r=1===i.length?t.add(e.reshape([1,1,1,i[0]])):t.add(e.reshape([1].concat(i))));else if(3===t.rank)"channelsFirst"===n?r=1===i.length?t.add(e.reshape([1,i[0],1])):t.add(e.reshape([1,i[1],i[0]])):"channelsLast"===n&&(r=1===i.length?t.add(e.reshape([1,1,i[0]])):t.add(e.reshape([1].concat(i))));else{if(!(t.rank<3))throw new w("Unsupported input rank by biasAdd: "+t.rank);r=t.add(e)}return r})}function Ot(t,e,n,i){return Object(r.ge)(function(){if(null!=n&&!r.qe.arraysEqual(t.shape,n))throw new _("Non-default noise shape is not implemented yet: "+JSON.stringify(n));if(null!=i)throw new _("seed is not implemented for dropout yet.");var a=Object(r.Rd)(Object(r.u)(Object(r.Dc)(e),Object(r.bd)(t.shape,0,1,"float32")));return a=Object(r.zc)(Object(r.lb)(y(1),Object(r.Td)(y(1),e)),a),Object(r.zc)(t,a)})}function kt(t,e,n){return void 0===n&&(n=!1),n?t():e()}var At=["fanIn","fanOut","fanAvg"];var Ct=["normal","uniform"];var Pt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.fromConfigUsesCustomObjects=function(){return!1},e.prototype.getConfig=function(){return{}},e}(r.td.Serializable),Tt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t,e){return Object(r.ze)(t,e)},e.className="Zeros",e}(Pt);r.td.registerClass(Tt);var Rt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t,e){return Object(r.Jc)(t,e)},e.className="Ones",e}(Pt);r.td.registerClass(Rt);var Dt=function(t){function e(e){var n=t.call(this)||this;if("object"!=typeof e)throw new w("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new w("config must have value set but got "+e);return n.value=e.value,n}return a(e,t),e.prototype.apply=function(t,e){var n=this;return Object(r.ge)(function(){return Object(r.zc)(Object(r.pd)(n.value),Object(r.Jc)(t,e))})},e.prototype.getConfig=function(){return{value:this.value}},e.className="Constant",e}(Pt);r.td.registerClass(Dt);var Mt=function(t){function e(e){var n=t.call(this)||this;return n.DEFAULT_MINVAL=-.05,n.DEFAULT_MAXVAL=.05,n.minval=e.minval||n.DEFAULT_MINVAL,n.maxval=e.maxval||n.DEFAULT_MAXVAL,n.seed=e.seed,n}return a(e,t),e.prototype.apply=function(t,e){return Object(r.bd)(t,this.minval,this.maxval,e)},e.prototype.getConfig=function(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}},e.className="RandomUniform",e}(Pt);r.td.registerClass(Mt);var jt=function(t){function e(e){var n=t.call(this)||this;return n.DEFAULT_MEAN=0,n.DEFAULT_STDDEV=.05,n.mean=e.mean||n.DEFAULT_MEAN,n.stddev=e.stddev||n.DEFAULT_STDDEV,n.seed=e.seed,n}return a(e,t),e.prototype.apply=function(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new _("randomNormal does not support dType "+e+".");return xt(t,this.mean,this.stddev,e,this.seed)},e.prototype.getConfig=function(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}},e.className="RandomNormal",e}(Pt);r.td.registerClass(jt);var Bt=function(t){function e(e){var n=t.call(this)||this;return n.DEFAULT_MEAN=0,n.DEFAULT_STDDEV=.05,n.mean=e.mean||n.DEFAULT_MEAN,n.stddev=e.stddev||n.DEFAULT_STDDEV,n.seed=e.seed,n}return a(e,t),e.prototype.apply=function(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new _("truncatedNormal does not support dType "+e+".");return Object(r.ne)(t,this.mean,this.stddev,e,this.seed)},e.prototype.getConfig=function(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}},e.className="TruncatedNormal",e}(Pt);r.td.registerClass(Bt);var Lt=function(t){function e(e){var n=t.call(this)||this;return n.gain=null!=e.gain?Object(r.pd)(e.gain):y(1),n}return a(e,t),e.prototype.apply=function(t,e){var n=this;return Object(r.ge)(function(){if(2!==t.length||t[0]!==t[1])throw new w("Identity matrix initializer can only be used for 2D square matrices.");return Object(r.zc)(n.gain,Object(r.xb)(t[0]))})},e.prototype.getConfig=function(){return{gain:this.gain.get()}},e.className="Identity",e}(Pt);r.td.registerClass(Lt);var zt=function(t){function e(e){var n=t.call(this)||this;if(e.scale<0)throw new w("scale must be a positive float. Got: "+e.scale);return n.scale=null==e.scale?1:e.scale,n.mode=e.mode,function(t){j(At,"FanMode",t)}(n.mode),n.distribution=e.distribution,function(t){j(Ct,"Distribution",t)}(n.distribution),n.seed=e.seed,n}return a(e,t),e.prototype.apply=function(t,e){var n=function(t,e){var n,r;if(void 0===e&&(e="channelsLast"),J(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length))if("channelsFirst"===e){var i=ct(t,2);n=t[1]*i,r=t[0]*i}else"channelsLast"===e&&(i=ct(t,0,t.length-2),n=t[t.length-2]*i,r=t[t.length-1]*i);else{var a=ct(t);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}(t),i=n[0],a=n[1],o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,i):"fanOut"===this.mode?o/=Math.max(1,a):o/=Math.max(1,(i+a)/2),"normal"===this.distribution){var s=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new _(this.getClassName()+" does not support dType "+e+".");return Object(r.ne)(t,0,s,e,this.seed)}var u=Math.sqrt(3*o);return Object(r.bd)(t,-u,u,e)},e.prototype.getConfig=function(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}},e.className="VarianceScaling",e}(Pt);r.td.registerClass(zt);var Ft=function(t){function e(e){return t.call(this,{scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})||this}return a(e,t),e.prototype.getClassName=function(){return zt.className},e.className="GlorotUniform",e}(zt);r.td.registerClass(Ft);var Ut=function(t){function e(e){return t.call(this,{scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})||this}return a(e,t),e.prototype.getClassName=function(){return zt.className},e.className="GlorotNormal",e}(zt);r.td.registerClass(Ut);var Vt=function(t){function e(e){return t.call(this,{scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})||this}return a(e,t),e.prototype.getClassName=function(){return zt.className},e.className="HeNormal",e}(zt);r.td.registerClass(Vt);var Wt=function(t){function e(e){return t.call(this,{scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})||this}return a(e,t),e.prototype.getClassName=function(){return zt.className},e.className="LeCunNormal",e}(zt);r.td.registerClass(Wt);var qt=function(t){function e(e){var n=t.call(this)||this;if(n.DEFAULT_GAIN=1,n.gain=null==e.gain?n.DEFAULT_GAIN:e.gain,n.seed=e.seed,null!=n.seed)throw new _("Random seed is not implemented for Orthogonal Initializer yet.");return n}return a(e,t),e.prototype.apply=function(t,e){var n=this;return Object(r.ge)(function(){if(2!==t.length)throw new _("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more than 2000 ("+t[0]*t[1]+") elements: Slowness may result.");var e=xt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32"),i=r.Xb.gramSchmidt(e);return t[0]>t[1]&&(i=i.transpose()),Object(r.zc)(y(n.gain),i)})},e.prototype.getConfig=function(){return{gain:this.gain,seed:this.seed}},e.className="Orthogonal",e}(Pt);r.td.registerClass(qt);var $t={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",identity:"Identity",leCunNormal:"LeCunNormal",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ht(t,e){return void 0===e&&(e={}),T(t,r.td.SerializationMap.getMap().classNameMap,e,"initializer")}function Kt(t){return P(t)}function Gt(t){if("string"==typeof t){var e=t in $t?$t[t]:t;return"GlorotUniform"===e?new Ft:"GlorotNormal"===e?new Ut:"HeNormal"===e?new Vt:"LeCunNormal"===e?new Wt:Ht({className:e,config:{}})}return t instanceof Pt?t:Ht(t)}var Xt=Object.freeze({zeros:function(){return new Tt},ones:function(){return new Rt},constant:function(t){return new Dt(t)},randomUniform:function(t){return new Mt(t)},randomNormal:function(t){return new jt(t)},truncatedNormal:function(t){return new Bt(t)},identity:function(t){return new Lt(t)},varianceScaling:function(t){return new zt(t)},glorotUniform:function(t){return new Ft(t)},glorotNormal:function(t){return new Ut(t)},heNormal:function(t){return new Vt(t)},leCunNormal:function(t){return new Wt(t)},orthogonal:function(t){return new qt(t)}});function Yt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Jt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Zt(t){var e;if(Array.isArray(t)){if(1!==t.length)throw new w("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function Qt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new w("Expected exactly 1 Shape; got "+t.length)}return t}function te(t){for(var e=0,n=0,r=t;n<r.length;n++){var i=r[n];0===i.shape.length?e+=1:e+=i.shape.reduce(function(t,e){return t*e})}return e}var ee="Variable",ne=function(){function t(t,e,n,i,a){void 0===e&&(e="float32"),void 0===n&&(n=ee),void 0===i&&(i=!0),void 0===a&&(a=null),this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=h(),n=null==n?ee:n,this.originalName=it(n),this.name=at(this.originalName),this.trainable=i,this.constraint=a,this.val=Object(r.te)(t,this.trainable,this.name,this.dtype)}return t.prototype.read=function(){return this.assertNotDisposed(),this.val},t.prototype.write=function(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this},t.prototype.dispose=function(){this.assertNotDisposed(),this.val.dispose()},t.prototype.assertNotDisposed=function(){if(this.val.isDisposed)throw new Error("LayersVariable "+this.name+" is already disposed.")},t}();function re(t){return t.map(function(t){return t.read()})}function ie(t){t.map(function(t){t[0].write(t[1])})}var ae=function(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}},oe=function(t,e,n,r,i,a,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=i,this.outputTensorIndex=o,this.id=h(),null!=a&&(this.originalName=it(a),this.name=at(this.originalName)),this.rank=e.length},se=0,ue=function(){function t(t,e){this.callArgs=e,this.id=se++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(var n=0,r=t.inboundLayers;n<r.length;n++){var i=r[n];null!=i&&i.outboundNodes.push(this)}t.outboundLayer.inboundNodes.push(this)}return t.prototype.getConfig=function(){for(var t=[],e=0,n=this.inboundLayers;e<n.length;e++){var r=n[e];null!=r?t.push(r.name):t.push(null)}return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}},t}(),ce=0,le=function(t){function e(e){var n=t.call(this)||this;n._callHook=null,n._addedWeightNames=[],n._stateful=!1,n.id=ce++,n.activityRegularizer=null,n.inputSpec=null,n.supportsMasking=!1,n._trainableWeights=[],n._nonTrainableWeights=[],n._losses=[],n._updates=[],n._built=!1,n.inboundNodes=[],n.outboundNodes=[];var r=e.name;if(!r){var i=n.getClassName();r=k(i)+"_"+d(i)}if(n.name=r,n.trainable=null==e.trainable||e.trainable,n.updatable=null==e.updatable||e.updatable,null!=e.inputShape||null!=e.batchInputShape){var a=void 0;if(null!=e.batchInputShape)a=e.batchInputShape;else if(null!=e.inputShape){var o=null;null!=e.batchSize&&(o=e.batchSize),a=[o].concat(e.inputShape)}n.batchInputShape=a;var s=e.dtype;null==s&&(s=e.inputDType),null==s&&(s="float32"),n.dtype=s}return null!=e.weights?n.initialWeights=e.weights:n.initialWeights=null,n._refCount=null,n.fastWeightInitDuringBuild=!1,n}return a(e,t),e.nodeKey=function(t,e){return t.name+"_ib-"+e.toString()},e.prototype.getNodeAtIndex=function(t,e){if(0===this.inboundNodes.length)throw new b("The layer has never been called and thus has no defined "+e+".");if(this.inboundNodes.length<=t)throw new w("Asked to get "+e+" at node "+t+", but the layer has only "+this.inboundNodes.length+" inbound nodes.");return this.inboundNodes[t]},e.prototype.getInputAt=function(t){return I(this.getNodeAtIndex(t,"input").inputTensors)},e.prototype.getOutputAt=function(t){return I(this.getNodeAtIndex(t,"output").outputTensors)},Object.defineProperty(e.prototype,"input",{get:function(){if(this.inboundNodes.length>1)throw new v("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new v("Layer "+this.name+" is not connected, no input to return.");return I(this.getNodeAtIndex(0,"input").inputTensors)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"output",{get:function(){if(0===this.inboundNodes.length)throw new v("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new v("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return I(this.getNodeAtIndex(0,"output").outputTensors)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"losses",{get:function(){return this._losses},enumerable:!0,configurable:!0}),e.prototype.calculateLosses=function(){return this.losses.map(function(t){return t()})},Object.defineProperty(e.prototype,"updates",{get:function(){return this._updates},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"built",{get:function(){return this._built},set:function(t){this._built=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"trainableWeights",{get:function(){return this.trainable?this._trainableWeights:[]},set:function(t){this._trainableWeights=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){return this.trainable?this._nonTrainableWeights:this._trainableWeights.concat(this._nonTrainableWeights)},set:function(t){this._nonTrainableWeights=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.trainableWeights.concat(this.nonTrainableWeights)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"stateful",{get:function(){return this._stateful},enumerable:!0,configurable:!0}),e.prototype.resetStates=function(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")},e.prototype.assertInputCompatibility=function(t){if(t=O(t),null!=this.inputSpec&&0!==this.inputSpec.length){var e=O(this.inputSpec);if(t.length!==e.length)throw new w("Layer "+this.name+" expects "+e.length+" inputs, but it received "+t.length+" input tensors. Input received: "+t);for(var n=0;n<t.length;n++){var r=t[n],i=e[n];if(null!=i){var a=r.rank;if(null!=i.ndim&&a!==i.ndim)throw new w("Input "+n+" is incompatible with layer "+this.name+": expected ndim="+i.ndim+", found ndim="+a);if(null!=i.maxNDim&&a>i.maxNDim)throw new w("Input "+n+" is incompatible with layer "+this.name+": expected max_ndim="+i.maxNDim+", found ndim="+a);if(null!=i.minNDim&&a<i.minNDim)throw new w("Input "+n+" is incompatible with layer "+this.name+": expected min_ndim="+i.minNDim+", found ndim="+a+".");if(null!=i.dtype&&r.dtype!==i.dtype)throw new w("Input "+n+" is incompatible with layer "+this.name+" : expected dtype="+i.dtype+", found dtype="+r.dtype+".");if(i.axes){var o=r.shape;for(var s in i.axes){var u=Number(s),c=i.axes[s],l=u>=0?o[u]:o[o.length+u];if(null!=c&&-1===[c,null].indexOf(l))throw new w("Input "+n+" is incompatible with layer "+this.name+": expected axis "+u+" of input shape to have value "+c+" but got shape "+o+".")}}if(null!=i.shape)for(var f=0;f<i.shape.length;++f){var h=i.shape[f],p=r.shape[f];if(null!=h&&null!=p&&h!==p)throw new w("Input "+n+" is incompatible with layer "+this.name+": expected shape="+i.shape+", found shape=${xShape}.")}}}}},e.prototype.call=function(t,e){return t},e.prototype.invokeCallHook=function(t,e){null!=this._callHook&&this._callHook(t,e)},e.prototype.setCallHook=function(t){this._callHook=t},e.prototype.clearCallHook=function(){this._callHook=null},e.prototype.apply=function(t,e){var n=this;e=e||{},this.assertNotDisposed();for(var r=O(t),i=!0,a=0,o=r;a<o.length;a++)if(!(o[a]instanceof oe)){i=!1;break}for(var s=!0,u=0,c=r;u<c.length;u++)if(c[u]instanceof oe){s=!1;break}if(i===s)throw new w("Arguments to apply() must be all SymbolicTensors or all Tensors");return rt(this.name,function(){if(!n.built){n.assertInputCompatibility(t);for(var i=[],a=0,o=O(t);a<o.length;a++){var u=o[a];i.push(u.shape)}n.build(I(i)),n.built=!0,n.initialWeights&&n.setWeights(n.initialWeights),null===n._refCount&&s&&(n._refCount=1)}if(n.assertInputCompatibility(t),s){for(var c=[],l=0,f=O(m=n.call(t,e));l<f.length;l++){var h=f[l];-1!==r.indexOf(h)&&(h=h.clone()),c.push(h)}if(m=I(c),null!=n.activityRegularizer)throw new _("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return m}var p=function(t){for(var e=[],n=0,r=t=O(t);n<r.length;n++){var i=r[n];e.push(i.shape)}return I(e)}(t),d=n.computeOutputShape(p),m=void 0,g="float32";if(n.warnOnIncompatibleInputShape(Array.isArray(t)?p[0]:p),m=null!=d&&d.length>0&&Array.isArray(d[0])?d.map(function(r,i){return new oe(g,r,n,O(t),e,n.name,i)}):new oe(g,d,n,O(t),e,n.name),n.addInboundNode(t,m,null,null,p,d,e),n._refCount++,null!=n.activityRegularizer)throw new _("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return m})},e.prototype.warnOnIncompatibleInputShape=function(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the batchInputShape ("+JSON.stringify(this.batchInputShape)+") of the layer "+this.name);else{var e=!1;this.batchInputShape.forEach(function(n,r){null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn("The shape of the input tensor ("+JSON.stringify(t)+") does not match the expectation of layer "+this.name+": "+JSON.stringify(this.batchInputShape))}},Object.defineProperty(e.prototype,"outputShape",{get:function(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new v("The layer "+this.name+" has never been called and thus has no defined output shape.");for(var t=[],e=0,n=this.inboundNodes;e<n.length;e++){var r=n[e],i=JSON.stringify(r.outputShapes);-1===t.indexOf(i)&&t.push(i)}if(1===t.length){var a=this.inboundNodes[0].outputShapes;return Array.isArray(a)&&Array.isArray(a[0])&&1===a.length?a[0]:a}throw new v("The layer "+this.name+' has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.')},enumerable:!0,configurable:!0}),e.prototype.countParams=function(){if(!this.built)throw new b("You tried to call countParams() on "+this.name+", but the layer is not built yet. Build it first by calling build(batchInputShape).");return te(this.weights)},e.prototype.build=function(t){this.built=!0},e.prototype.getWeights=function(t){return void 0===t&&(t=!1),re(t?this.trainableWeights:this.weights)},e.prototype.setWeights=function(t){var e=this;Object(r.ge)(function(){var n=e.weights;if(n.length!==t.length)throw new w('You called setWeights(weights) on layer "'+e.name+'" with a weight list of length '+t.length+", but the layer was expecting "+n.length+" weights. Provided weights: "+t+"...");if(0!==n.length){for(var i=[],a=re(n),o=0;o<a.length;++o){var s=a[o],u=n[o],c=t[o];if(!r.qe.arraysEqual(s.shape,c.shape))throw new w("Layer weight shape "+s.shape+" not compatible with provided weight shape "+c.shape);i.push([u,c])}ie(i)}})},e.prototype.addWeight=function(t,e,n,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new w("Duplicate weight name "+t+" for layer "+this.name);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Gt("zeros"));var s=r.apply(e,n),u=new ne(s,n,t,a,o);return s.dispose(),null!=i&&this.addLoss(function(){return i.apply(u.read())}),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u},e.prototype.setFastWeightInitDuringBuild=function(t){this.fastWeightInitDuringBuild=t},e.prototype.addLoss=function(t){var e;null==t||Array.isArray(t)&&0===t.length||(t=O(t),void 0!==this._losses&&null!==this._losses&&(e=this.losses).push.apply(e,t))},e.prototype.computeOutputShape=function(t){return t},e.prototype.computeMask=function(t,e){var n=this;if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer "+this.name+" does not support masking, but was passed an inputMask.");e.forEach(function(t){if(null!=t)throw new TypeError("Layer "+n.name+" does not support masking, but was passed an inputMask.")})}return null}return e},e.prototype.addInboundNode=function(t,e,n,r,i,a,o){void 0===o&&(o=null);var s=O(t);e=O(e),n=O(n),r=O(r),i=Jt(i),a=Jt(a);for(var u=[],c=[],l=[],f=0,h=s;f<h.length;f++){var p=h[f];u.push(p.sourceLayer),c.push(p.nodeIndex),l.push(p.tensorIndex)}new ue({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:s,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:i,outputShapes:a},o);for(var d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d},e.prototype.getConfig=function(){var t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t},e.prototype.disposeWeights=function(){return this.weights.forEach(function(t){return t.dispose()}),this.weights.length},e.prototype.assertNotDisposed=function(){if(0===this._refCount)throw new Error("Layer '"+this.name+"' is already disposed.")},e.prototype.dispose=function(){if(!this.built)throw new Error("Cannot dispose Layer "+this.name+" because it has not been built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer "+this.name+" because it has not been used yet.");this.assertNotDisposed();var t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}},e}(r.td.Serializable);var fe,he,pe=function(t){function e(e){var n=t.call(this,{dtype:e.dtype,name:null!=e.name?e.name:d("input").toString()})||this;if(null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),n.trainable=!1,n.built=!0,n.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new w("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");var r=e.batchInputShape;if(null==r){if(null==e.inputShape)throw new w("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");r=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new w("Cannot specify batchSize if batchInputShape isspecified when creating an InputLayer.");var i=e.dtype||"float32";n.batchInputShape=r,n.dtype=i,n.inputSpec=[{shape:r}];var a=new oe(n.dtype,n.batchInputShape,n,[],{},n.name);return a.nodeIndex=0,a.tensorIndex=0,new ue({outboundLayer:n,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[r],outputShapes:[r]}),n}return a(e,t),e.prototype.apply=function(t,e){throw new w("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)},e.prototype.dispose=function(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}},e.prototype.getConfig=function(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}},e.className="InputLayer",e}(le);function de(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new w("Please provide either a `shape` or `batchShape` argument to Input, but not both.");var e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));var n=t.dtype;return null==n&&(n="float32"),new pe({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}function me(t){return u(this,void 0,void 0,function(){var e,n,i,a,o,s,u,l;return c(this,function(c){switch(c.label){case 0:if(null==t)return[2];for(a in e=[],n=[],i=[],t)"number"!=typeof(o=t[a])&&(s=o,e.push(s.data()),n.push(a),i.push(s));return[4,Promise.all(e)];case 1:for(u=c.sent(),l=0;l<u.length;++l)t[n[l]]=u[l][0];return Object(r.jb)(i),[2]}})})}function ge(t){if(null!=t)for(var e in t){var n=t[e];"number"!=typeof n&&n.dispose()}}r.td.registerClass(pe),(he=fe||(fe={}))[he.SILENT=0]="SILENT",he[he.VERBOSE=1]="VERBOSE";var ye=function(){function t(){this.validationData=null}return t.prototype.setParams=function(t){this.params=t},t.prototype.onEpochBegin=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.onEpochEnd=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.onBatchBegin=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.onBatchEnd=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.onTrainBegin=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.onTrainEnd=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){return[2]})})},t.prototype.setModel=function(t){},t}(),ve=function(){function t(t,e){void 0===e&&(e=10),null==t&&(t=[]),this.callbacks=t,this.queueLength=e}return t.prototype.append=function(t){this.callbacks.push(t)},t.prototype.setParams=function(t){for(var e=0,n=this.callbacks;e<n.length;e++)n[e].setParams(t)},t.prototype.setModel=function(t){for(var e=0,n=this.callbacks;e<n.length;e++)n[e].setModel(t)},t.prototype.onEpochBegin=function(t,e){return u(this,void 0,void 0,function(){var n,r;return c(this,function(i){switch(i.label){case 0:null==e&&(e={}),n=0,r=this.callbacks,i.label=1;case 1:return n<r.length?[4,r[n].onEpochBegin(t,e)]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return[2]}})})},t.prototype.onEpochEnd=function(t,e){return u(this,void 0,void 0,function(){var n,r;return c(this,function(i){switch(i.label){case 0:null==e&&(e={}),n=0,r=this.callbacks,i.label=1;case 1:return n<r.length?[4,r[n].onEpochEnd(t,e)]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return[2]}})})},t.prototype.onBatchBegin=function(t,e){return u(this,void 0,void 0,function(){var n,r;return c(this,function(i){switch(i.label){case 0:null==e&&(e={}),n=0,r=this.callbacks,i.label=1;case 1:return n<r.length?[4,r[n].onBatchBegin(t,e)]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return[2]}})})},t.prototype.onBatchEnd=function(t,e){return u(this,void 0,void 0,function(){var n,r;return c(this,function(i){switch(i.label){case 0:null==e&&(e={}),n=0,r=this.callbacks,i.label=1;case 1:return n<r.length?[4,r[n].onBatchEnd(t,e)]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return[2]}})})},t.prototype.onTrainBegin=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){switch(r.label){case 0:null==t&&(t={}),e=0,n=this.callbacks,r.label=1;case 1:return e<n.length?[4,n[e].onTrainBegin(t)]:[3,4];case 2:r.sent(),r.label=3;case 3:return e++,[3,1];case 4:return[2]}})})},t.prototype.onTrainEnd=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){switch(r.label){case 0:null==t&&(t={}),e=0,n=this.callbacks,r.label=1;case 1:return e<n.length?[4,n[e].onTrainEnd(t)]:[3,4];case 2:r.sent(),r.label=3;case 3:return e++,[3,1];case 4:return[2]}})})},t}(),be=function(){function t(t){this.yieldEvery=t,this.batchCount=0,this.batchDurationsMillis=[],this.autoYieldEveryBatches=null,this.batchStartMillis=r.qe.now()}return t.prototype.resolveOneTensorInLogs=function(t){return u(this,void 0,void 0,function(){var e,n,r,i,a;return c(this,function(o){switch(o.label){case 0:for(n in e=[],t)e.push(n);r=0,o.label=1;case 1:return r<e.length?(i=e[r],"number"==typeof(a=t[i])?[3,3]:[4,a.data()]):[3,4];case 2:return o.sent(),[3,4];case 3:return r++,[3,1];case 4:return[2]}})})},t.prototype.maybeYieldOnBatch=function(e){return u(this,void 0,void 0,function(){var n,i;return c(this,function(a){switch(a.label){case 0:return"auto"!==this.yieldEvery?[3,7]:(this.batchCount++,null!=this.autoYieldEveryBatches?[3,3]:[4,this.resolveOneTensorInLogs(e)]);case 1:return a.sent(),n=r.qe.now(),[4,Object(r.Ec)()];case 2:return a.sent(),this.batchCount>t.SKIP_FIRST_BATCHES&&(this.batchDurationsMillis.push(n-this.batchStartMillis),this.batchDurationsMillis.length>=t.DECISION_BATCH_COUNT&&(i=this.batchDurationsMillis.reduce(function(t,e){return t+e})/this.batchDurationsMillis.length,this.autoYieldEveryBatches=Math.round(t.THRESHOLD_MILLIS/i),this.autoYieldEveryBatches<1&&(this.autoYieldEveryBatches=1))),this.batchStartMillis=r.qe.now(),this.lastYieldBatchCount=this.batchCount,[3,6];case 3:return this.batchCount-this.lastYieldBatchCount>=this.autoYieldEveryBatches?[4,Object(r.Ec)()]:[3,6];case 4:return a.sent(),[4,this.resolveOneTensorInLogs(e)];case 5:a.sent(),this.lastYieldBatchCount=this.batchCount,a.label=6;case 6:return[3,9];case 7:return"batch"!==this.yieldEvery?[3,9]:[4,Object(r.Ec)()];case 8:a.sent(),a.label=9;case 9:return[2]}})})},t.prototype.maybeYieldOnEpoch=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return"epoch"!==this.yieldEvery?[3,2]:[4,Object(r.Ec)()];case 1:t.sent(),t.label=2;case 2:return[2]}})})},t.SKIP_FIRST_BATCHES=1,t.DECISION_BATCH_COUNT=2,t.THRESHOLD_MILLIS=16,t}(),we=function(t){function e(e){var n=t.call(this)||this;return n.yieldEvery=e||"auto",n}return a(e,t),e.prototype.onTrainBegin=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){return this.autoYielder=new be(this.yieldEvery),[2]})})},e.prototype.onEpochBegin=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){return this.seen=0,this.totals={},[2]})})},e.prototype.onBatchEnd=function(t,e){return u(this,void 0,void 0,function(){var t,n,i,a,o=this;return c(this,function(s){switch(s.label){case 0:return[4,this.autoYielder.maybeYieldOnBatch(e)];case 1:for(a in s.sent(),null==e&&(e={}),t=null==e.size?0:e.size,this.seen+=t,n=function(n){var a=e[n];if("number"==typeof a)i.totals.hasOwnProperty(n)||(i.totals[n]=0),i.totals[n]=i.totals[n]+a*t;else{var s=void 0;n in i.totals?s=i.totals[n]:i.totals[n]=y(0),i.totals[n]=Object(r.ge)(function(){return Object(r.u)(o.totals[n],Object(r.zc)(a,y(t)))}),null!=s&&s.dispose()}},i=this,e)n(a);return[2]}})})},e.prototype.onEpochEnd=function(t,e){return u(this,void 0,void 0,function(){var t,n,i,a,o,s=this;return c(this,function(u){switch(u.label){case 0:return[4,this.autoYielder.maybeYieldOnEpoch()];case 1:if(u.sent(),null!=e)for(t=function(t){if(null==n.totals[t])return"continue";"number"==typeof n.totals[t]?e[t]=n.totals[t]/n.seen:Object(r.ge)(function(){e[t]=Object(r.zc)(Object(r.lb)(y(1),y(s.seen)),s.totals[t]),s.totals[t].dispose(),Object(r.Rb)(e[t])})},n=this,i=0,a=this.params.metrics;i<a.length;i++)o=a[i],t(o);return[2]}})})},e}(ye),_e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.onTrainBegin=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){return this.epoch=[],this.history={},[2]})})},e.prototype.onEpochEnd=function(t,e){return u(this,void 0,void 0,function(){var n;return c(this,function(r){for(n in null==e&&(e={}),this.epoch.push(t),e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n]);return[2]})})},e.prototype.syncData=function(){return u(this,void 0,void 0,function(){var t,e,n,r,i,a,o,s,u;return c(this,function(c){switch(c.label){case 0:for(r in t=[],e=[],n=[],this.history)for(i=this.history[r],a=0;a<i.length;++a)"number"!=typeof i[a]&&(o=i[a],t.push(o.data()),e.push(r),n.push(a));return[4,Promise.all(t)];case 1:for(s=c.sent(),u=0;u<s.length;++u)this.history[e[u]][n[u]].dispose(),this.history[e[u]][n[u]]=s[u][0];return[2]}})})},e}(ye),xe=function(t){function e(e){var n=t.call(this)||this;return n.trainBegin=e.onTrainBegin,n.trainEnd=e.onTrainEnd,n.epochBegin=e.onEpochBegin,n.epochEnd=e.onEpochEnd,n.batchBegin=e.onBatchBegin,n.batchEnd=e.onBatchEnd,n}return a(e,t),e.prototype.onEpochBegin=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){switch(n.label){case 0:return null==this.epochBegin?[3,3]:[4,me(e)];case 1:return n.sent(),[4,this.epochBegin(t,e)];case 2:n.sent(),n.label=3;case 3:return[2]}})})},e.prototype.onEpochEnd=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){switch(n.label){case 0:return null==this.epochEnd?[3,3]:[4,me(e)];case 1:return n.sent(),[4,this.epochEnd(t,e)];case 2:n.sent(),n.label=3;case 3:return[2]}})})},e.prototype.onBatchBegin=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){switch(n.label){case 0:return null==this.batchBegin?[3,3]:[4,me(e)];case 1:return n.sent(),[4,this.batchBegin(t,e)];case 2:n.sent(),n.label=3;case 3:return[2]}})})},e.prototype.onBatchEnd=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){switch(n.label){case 0:return null==this.batchEnd?[3,3]:[4,me(e)];case 1:return n.sent(),[4,this.batchEnd(t,e)];case 2:n.sent(),n.label=3;case 3:return[2]}})})},e.prototype.onTrainBegin=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return null==this.trainBegin?[3,3]:[4,me(t)];case 1:return e.sent(),[4,this.trainBegin(t)];case 2:e.sent(),e.label=3;case 3:return[2]}})})},e.prototype.onTrainEnd=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return null==this.trainEnd?[3,3]:[4,me(t)];case 1:return e.sent(),[4,this.trainEnd(t)];case 2:e.sent(),e.label=3;case 3:return[2]}})})},e}(ye);function Ee(t){return null==t?null:t instanceof ye?[t]:Array.isArray(t)&&t[0]instanceof ye?t:O(t).map(function(t){return new xe(t)})}var Se=function(){function t(){}return t.registerCallbackConstructor=function(e,n){r.qe.assert(e>=0&&Number.isInteger(e),"Verbosity level is expected to be an integer >= 0, but got "+e),t.checkForDuplicate(n),null==t.constructors[e]&&(t.constructors[e]=[]),t.constructors[e].push(n)},t.checkForDuplicate=function(e){for(var n in t.constructors)t.constructors[+n].forEach(function(t){if(t===e)throw new w("Duplicate callback constructor.")})},t.clear=function(){t.constructors={}},t.createCallbacks=function(e){var n=[];for(var r in t.constructors){var i=+r;e>=i&&n.push.apply(n,t.constructors[i])}return n.map(function(t){return new t})},t.constructors={},t}();function Ne(t,e,n,r,i,a,o,s,u,c){var l=new _e,f=[new we(e)].concat(Se.createCallbacks(n));null!=t&&f.push.apply(f,t),f.push(l);var h=new ve(f);return h.setParams({epochs:r,initialEpoch:i,samples:a,steps:o,batchSize:s,verbose:n,doValidation:u,metrics:c}),{callbackList:h,history:l}}function Ie(t,e){return Object(r.ge)(function(){var n=Object(r.Vd)(Nt(t),e,!0),i=Object(r.zc)(Object(r.pd)(l()),Object(r.Kc)(t)),a=Object(r.Ld)(Object(r.oc)(n,i));return Object(r.lb)(t,a)})}function Oe(t,e){return Object(r.ge)(function(){return Object(r.qc)(Nt(Object(r.Td)(e,t)),-1)})}function ke(t,e){return Object(r.ge)(function(){return Object(r.qc)(Object(r.r)(Object(r.Td)(e,t)),-1)})}function Ae(t,e){return Object(r.ge)(function(){var n=Object(r.Td)(t,e),i=Object(r.Q)(Object(r.r)(t),l(),Number.MAX_VALUE),a=Object(r.r)(Object(r.lb)(n,i));return Object(r.zc)(y(100),Object(r.qc)(a,-1))})}function Ce(t,e){return Object(r.ge)(function(){var n=y(1),i=Object(r.Q)(e,l(),Number.MAX_VALUE),a=Object(r.ac)(Object(r.u)(n,i)),o=Object(r.Q)(t,l(),Number.MAX_VALUE),s=Object(r.ac)(Object(r.u)(n,o));return Object(r.qc)(Nt(Object(r.Td)(a,s)),-1)})}function Pe(t,e){return Object(r.ge)(function(){var n=y(0),i=y(1),a=Object(r.oc)(n,Object(r.Td)(i,Object(r.zc)(t,e)));return Object(r.qc)(Nt(a),-1)})}function Te(t,e){return Object(r.ge)(function(){var n=y(0),i=y(1),a=Object(r.oc)(n,Object(r.Td)(i,Object(r.zc)(t,e)));return Object(r.qc)(a,-1)})}function Re(t,e){return Object(r.ge)(function(){var n=y(0),i=y(1),a=Object(r.Vd)(Object(r.zc)(t,e),-1),o=Object(r.mc)(Object(r.zc)(Object(r.Td)(i,t),e),-1);return Object(r.oc)(n,Object(r.u)(i,Object(r.Td)(o,a)))})}function De(t,e){return Object(r.ge)(function(){var n=y(Math.log(2)),i=Object(r.Td)(e,t),a=Object(r.Td)(Object(r.u)(i,Object(r.Gd)(Object(r.zc)(y(-2),i))),n);return Object(r.qc)(a,-1)})}function Me(t,e,n){return void 0===n&&(n=!1),Object(r.ge)(function(){if(n)e=Object(r.Fd)(e);else{var i=Object(r.Vd)(e,e.shape.length-1,!0);e=Object(r.lb)(e,i)}return e=Object(r.Q)(e,l(),1-l()),Object(r.Dc)(Object(r.Vd)(Object(r.zc)(t.toFloat(),Object(r.ac)(e)),e.shape.length-1))})}function je(t,e){return Object(r.ge)(function(){var n=Object(r.Ab)(function(t){var e=[ct(t.shape)];return t.reshape(e)}(t)).toInt(),i=(e=Object(r.Q)(e,l(),1-l())).shape;return Me(Object(r.Ic)(n,i[i.length-1]).reshape(i),e,!1)})}function Be(t,e){return Object(r.ge)(function(){var n;return n=Object(r.Q)(e,l(),1-l()),n=Object(r.ac)(Object(r.lb)(n,Object(r.Td)(y(1),n))),Object(r.qc)(function(t,e){if(!r.qe.arraysEqual(t.shape,e.shape))throw new w("logits and labels must have the same shape, but got shapes "+JSON.stringify(t.shape)+" and "+JSON.stringify(e.shape));return Object(r.ge)(function(){var n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Le(t,e){return Object(r.ge)(function(){var n=Object(r.Q)(t,l(),1),i=Object(r.Q)(e,l(),1);return Object(r.Vd)(Object(r.zc)(t,Object(r.ac)(Object(r.lb)(n,i))),-1)})}function ze(t,e){return Object(r.ge)(function(){var n=Object(r.ac)(Object(r.u)(y(l()),e));return Object(r.qc)(Object(r.Td)(e,Object(r.zc)(t,n)),-1)})}function Fe(t,e){return Object(r.ge)(function(){var n=Ie(t,-1),i=Ie(e,-1),a=Object(r.zc)(n,i);return Object(r.Dc)(Object(r.Vd)(a,-1))})}function Ue(t){var e={meanSquaredError:Oe,meanAbsoluteError:ke,meanAbsolutePercentageError:Ae,meanSquaredLogarithmicError:Ce,squaredHinge:Pe,hinge:Te,categoricalHinge:Re,logcosh:De,categoricalCrossentropy:Me,sparseCategoricalCrossentropy:je,binaryCrossentropy:Be,kullbackLeiblerDivergence:Le,poisson:ze,cosineProximity:Fe};if("string"==typeof t){if(t in e)return e[t];var n="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(n="Unknown loss "+t+'. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new w(n)}return t}function Ve(t,e){return Object(r.ge)(function(){var n=Object(r.zc)(y(.5),Object(r.Kc)(e)),i=dt(Object(r.Ib)(e,n),t.dtype);return Object(r.qc)(Object(r.rb)(t,i),-1)})}function We(t,e){return Object(r.ge)(function(){return dt(Object(r.rb)(Object(r.z)(t,-1),Object(r.z)(e,-1)),"float32")})}function qe(t,e){return Object(r.ge)(function(){var n=y(1);return Object(r.fc)(t.equal(n),e.equal(n)).sum().cast("float32")})}function $e(t,e){return Object(r.ge)(function(){var n=y(0),i=qe(t,e),a=function(t,e){return Object(r.ge)(function(){var n=y(1),i=y(0);return Object(r.fc)(t.equal(i),e.equal(n)).sum().cast("float32")})}(t,e),o=i.add(a);return Object(r.xe)(Object(r.Ib)(o,n),i.div(o),n).cast("float32")})}function He(t,e){return Object(r.ge)(function(){var n=y(0),i=qe(t,e),a=function(t,e){return Object(r.ge)(function(){var n=y(1),i=y(0);return Object(r.fc)(t.equal(n),e.equal(i)).sum().cast("float32")})}(t,e),o=i.add(a);return Object(r.xe)(Object(r.Ib)(o,n),i.div(o),n).cast("float32")})}function Ke(t,e){return Be(t,e)}function Ge(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Object(r.rb)(t,e).asType("float32")}var Xe=Oe,Ye=Oe,Je=ke,Ze=ke,Qe=Ae,tn=Ae,en=Me,nn=Fe,rn=je;function an(t,e,n,r){void 0===r&&(r=console.log);var i,a=function(t){var e=!0,n=[],r=[];for(var i in t.nodesByDepth)n.push(t.nodesByDepth[i]);for(var a=0,o=n;a<o.length;a++){var s=o[a];if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push.apply(r,s)}if(e)for(var u=0,c=t.layers;u<c.length;u++){for(var l=!1,f=0,h=c[u].inboundNodes;f<h.length;f++){var p=h[f];if(-1!==r.indexOf(p)){if(l){e=!1;break}l=!0}}if(!e)break}return e}(t),o=["Layer (type)","Output shape","Param #"];if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(function(t){return Math.floor(e*t)})),!a)for(var s in o.push("Receives inputs"),i=[],t.nodesByDepth)i.push.apply(i,t.nodesByDepth[s]);r("_".repeat(e)),on(o,n,r),r("=".repeat(e));for(var u=t.layers,c=0;c<u.length;++c)a?sn(u[c],n,r):un(u[c],n,i,r),r((c===u.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();var l=function(t){return null!=t.collectedTrainableWeights?te(t.collectedTrainableWeights):te(t.trainableWeights)}(t),f=te(t.nonTrainableWeights);r("Total params: "+(l+f)),r("Trainable params: "+l),r("Non-trainable params: "+f),r("_".repeat(e))}function on(t,e,n){void 0===n&&(n=console.log);for(var r="",i=0;i<t.length;++i)i>0&&(r=r.slice(0,r.length-1)+" "),r=(r+=t[i]).slice(0,e[i]),r+=" ".repeat(e[i]-r.length);n(r)}function sn(t,e,n){var r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}on([t.name+" ("+t.getClassName()+")",r,t.countParams().toString()],e,n)}function un(t,e,n,r){var i;try{i=JSON.stringify(t.outputShape)}catch(t){i="multiple"}for(var a=[],o=0,s=t.inboundNodes;o<s.length;o++){var u=s[o];if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(var c=0;c<u.inboundLayers.length;++c){var l=u.inboundLayers[c].name,f=u.nodeIndices[c],h=u.tensorIndices[c];a.push(l+"["+f+"]["+h+"]")}}var p=t.name,d=t.getClassName(),m=0===a.length?"":a[0];for(on([p+" ("+d+")",i,t.countParams().toString(),m],e,r),c=1;c<a.length;++c)on(["","","",a[c]],e,r)}function cn(t,e,n){return void 0===e&&(e={}),void 0===n&&(n=!1),T(t,r.td.SerializationMap.getMap().classNameMap,e,"layer",n)}function ln(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function fn(t,e){if(null===t)return null;if("string"==typeof t)return A(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){for(var n=[],r=t.length,i=0;i<r;++i){var a=t[i];ln(e,i,a)?n.push(a):n.push(fn(a,e))}return n}for(var o={},s=0,u=Object.keys(t);s<u.length;s++){var c=u[s],l=t[c];if("name"===c&&"string"==typeof l)o[c]=l;else{var f=A(c);o[f]=fn(l,f)}}return o}var hn=function(){function t(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof t)for(var n in e.id2Value)this.id2Value[n]=e.id2Value[n],n in e.id2Mask&&(this.id2Mask[n]=e.id2Mask[n]);else{if(null==e)return;for(var r=0,i=e;r<i.length;r++){var a=i[r];this.add(a.key,a.value)}}}return t.prototype.add=function(t,e,n){if(null!=this.id2Value[t.id])throw new w("Duplicate key: name="+t.name+", id="+t.id);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(r.O)(e,t.dtype)}catch(n){throw new w("The dtype of the feed ("+e.dtype+") can not be cast to the dtype of the key '"+t.name+"' ("+t.dtype+").")}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this},t.prototype.addFeed=function(t){this.add(t.key,t.value)},t.prototype.hasKey=function(t){return null!=this.id2Value[t.id]},t.prototype.names=function(){return Object.keys(this.name2Id)},t.prototype.getValue=function(t){if(t instanceof oe){if(null==this.id2Value[t.id])throw new w("Nonexistent key: "+t.name);return this.id2Value[t.id]}var e=this.name2Id[t];if(null==e)throw new w("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]},t.prototype.getMask=function(t){if(t instanceof oe){if(null==this.id2Value[t.id])throw new w("Nonexistent key: "+t.name);return this.id2Mask[t.id]}var e=this.name2Id[t];if(null==e)throw new w("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]},t.prototype.disposeMasks=function(){null!=this.id2Mask&&Object(r.jb)(this.id2Mask)},t}(),pn={},dn={};function mn(t,e,n,i){for(var a=null!=n&&n.training,o=Array.isArray(t),s=o?t:[t],u=s.map(function(t){return t.name}),c=[],l=e.names(),f=0,h=u;f<h.length;f++){var p=h[f];-1!==l.indexOf(p)?c.push(e.getValue(p)):c.push(null)}null!=i&&(i.maxNumTensors=-1/0,i.minNumTensors=1/0);var d,m,g=u.join(",")+"|"+e.names().join(",");if(null==pn[g]){var y=function(t,e){r.qe.assert(null!=t&&t.length>0,"Exepcted at least one fetch, got none");var n=[],i={};if(1===t.length){var a=yn(t[0],e);n=a.sorted,i=a.recipientMap}else for(var o=new Set,s=0,u=t;s<u.length;s++){for(var c=yn(u[s],e),l=c.sorted,f=c.recipientMap,h=0,p=l;h<p.length;h++){var d=p[h];o.has(d.name)||(n.push(d),o.add(d.name))}var m=function(t){null==i[t]&&(i[t]=new Set),f[t].forEach(function(e){return i[t].add(e)})};for(var g in f)m(g)}return{sorted:n,recipientCounts:gn(i)}}(s,e);d=y.sorted,m=y.recipientCounts,pn[g]=d,dn[g]=m}d=pn[g],m={},a||Object.assign(m,dn[g]);for(var v=new hn(e),b=0;b<d.length;++b){if(null!=i){var w=Object(r.rc)().numTensors;w>i.maxNumTensors&&(i.maxNumTensors=w),w<i.minNumTensors&&(i.minNumTensors=w)}var _=d[b],x=_.sourceLayer;if(!(x instanceof pe)){for(var E=[],S=[],N=[],I=!1,k=0,A=_.inputs;k<A.length;k++){var C=A[k],P=v.getValue(C),T=v.getMask(C);E.push(P),S.push(T),null!=T&&(I=!0),a||(m[C.name]--,0!==m[C.name]||e.hasKey(C)||-1!==u.indexOf(C.name)||P.isDisposed||N.push(P))}I&&((n=n||{}).mask=S[0]);var R=O(x.apply(E,n)),D=null;x.supportsMasking&&(D=x.computeMask(E,S));for(var M=vn(_),j=Array.isArray(M)?M:[M],B=0;B<j.length;++B){v.hasKey(j[B])||v.add(j[B],R[B],Array.isArray(D)?D[0]:D);var L=u.indexOf(j[B].name);-1!==L&&(c[L]=R[B])}a||Object(r.jb)(N)}}return v.disposeMasks(),o?c:c[0]}function gn(t){var e={};for(var n in t)e[n]=t[n].size;return e}function yn(t,e){for(var n=new Set,r=[],i={},a=0,o=e.names();a<o.length;a++){var s=o[a];n.add(s)}var u=[],c=[];for(u.push(t);u.length>0;){var l=u[u.length-1];if(n.has(l.name))u.pop();else{var f=c[c.length-1]===u.length-1;if(0===l.inputs.length||f)u.pop(),r.push(l),n.add(l.name),f&&c.pop();else{c.push(u.length-1);for(var h=0,p=l.inputs;h<p.length;h++){var d=p[h];null==i[d.name]&&(i[d.name]=new Set),i[d.name].add(l.name),n.has(d.name)||u.push(d)}}}}return{sorted:r,recipientMap:i}}function vn(t){var e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{for(var n=null,r=0;r<t.sourceLayer.inboundNodes.length;++r)for(var i=0,a=t.sourceLayer.inboundNodes[r].outputTensors;i<a.length;i++)if(a[i].id===t.id){n=r;break}e=t.sourceLayer.getOutputAt(n)}return e}function bn(t,e,n,r){if(!n.startsWith("2."))throw new w("Unsupported Keras version in weights being loaded: "+n);return e}function wn(t,e,n){var i=function(t){switch(t){case"float32":return"float32";default:throw new w("Invalid dtype: "+t)}}(t);return r.o.make(e,{values:0===e.length?n:r.qe.flatten(n)},i)}var _n=function(t){function e(n){var r=t.call(this,{})||this;if(r.containerNodes=new Set,r.name=n.name,null==r.name){var i=r.getClassName().toLowerCase();r.name=d(i)}if(r.supportsMasking=!1,r.trainable=!0,r.updatable=!0,Array.isArray(n.inputs)?r.inputs=n.inputs.slice():r.inputs=[n.inputs],Array.isArray(n.outputs)?r.outputs=n.outputs.slice():r.outputs=[n.outputs],D(r.inputs).length!==r.inputs.length)throw new w("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+r.inputs.map(function(t){return t.name}));D(r.outputs).length!==r.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+r.outputs.map(function(t){return t.name})),r.inputLayers=[],r.inputLayersNodeIndices=[],r.inputLayersTensorIndices=[],r.outputLayers=[],r.outputLayersNodeIndices=[],r.outputLayersTensorIndices=[],r.layers=[];for(var a=0,o=r.outputs;a<o.length;a++){var s=(C=o[a]).sourceLayer,u=C.nodeIndex,c=C.tensorIndex;r.outputLayers.push(s),r.outputLayersNodeIndices.push(u),r.outputLayersTensorIndices.push(c)}for(var l=0,f=r.inputs;l<f.length;l++)s=(C=f[l]).sourceLayer,u=C.nodeIndex,c=C.tensorIndex,S(0===u,"input layer has >1 nodes"),S(0===c,"input layer has >1 tensors"),r.inputLayers.push(s),r.inputLayersNodeIndices.push(u),r.inputLayersTensorIndices.push(c);r.inputNames=[],r.outputNames=[],r.feedInputShapes=[],r.feedInputNames=[],r.feedOutputNames=[];for(var h=0;h<r.inputLayers.length;h++){if(!((s=r.inputLayers[h])instanceof pe))throw new TypeError("Input layers to a Model must be InputLayer objects. Received inputs: "+n.inputs+". Input "+h+" (0-based) originates from layer type "+s.getClassName()+".");r.inputNames.push(s.name),r.feedInputShapes.push(s.batchInputShape),r.feedInputNames.push(s.name)}for(var p=0,m=r.outputLayers;p<m.length;p++)s=m[p],r.outputNames.push(s.name);r.internalInputShapes=r.inputs.map(function(t){return t.shape}),r.internalOutputShapes=r.outputs.map(function(t){return t.shape});for(var g={},y={},v={},_={},x={},E=[],N=function(t,n,i,a,o,s){null!=a&&null!=o&&null!=s||(a=t.sourceLayer,o=t.nodeIndex,s=t.tensorIndex);var u=a.inboundNodes[o];if(-1!==i.indexOf(u))throw new b("The tensor "+t.name+' at layer "'+a.name+'" is part of a cycle.');if(-1===n.indexOf(u)){r.containerNodes.add(e.nodeKey(a,o)),a.id in x||(x[a.id]=Object.keys(x).length),-1===i.indexOf(u)&&i.push(u);for(var c=u.inboundLayers.length,l=0;l<c;l++){var f=u.inputTensors[l],h=u.inboundLayers[l],p=u.nodeIndices[l],d=u.tensorIndices[l];N(f,n,i,h,p,d)}for(n.push(u);i.indexOf(u)>=0;)i.splice(i.indexOf(u),1);E.push(u)}},I=[],O=[],k=0,A=r.outputs;k<A.length;k++){var C=A[k];N(C,I,O)}for(var P=0,T=E.slice().reverse();P<T.length;P++){y[(nt=T[P]).id]=nt,nt.id in g||(g[nt.id]=0);var M=g[nt.id],j=null==v[nt.outboundLayer.id]?0:v[nt.outboundLayer.id];for(M=Math.max(M,j),v[nt.outboundLayer.id]=M,_[nt.outboundLayer.id]=nt.outboundLayer,g[nt.id]=M,h=0;h<nt.inboundLayers.length;h++){var B=nt.inboundLayers[h],L=(u=nt.nodeIndices[h],B.inboundNodes[u]),z=null==g[L.id]?0:g[L.id];g[L.id]=Math.max(M+1,z),y[L.id]=L}}var F={};for(var U in g)(M=g[U])in F||(F[M]=[]),F[M].push(y[U]);var V={};for(var W in v)(M=v[W])in V||(V[M]=[]),V[M].push(_[W]);var q=Object.keys(V).map(function(t){return parseInt(t,10)}).sort(R);r.layers=[];for(var $=0,H=q;$<H.length;$++){var K=V[M=H[$]];K.sort(function(t,e){var n=x[t.id],r=x[e.id];return n<r?-1:n>r?1:0});for(var G=0,X=K;G<X.length;G++)s=X[G],r.layers.push(s)}r.layersByDepth=V,q=Object.keys(F).map(function(t){return parseInt(t,10)}).sort(R);for(var Y=r.inputs.slice(),J=[],Z=0,Q=q;Z<Q.length;Z++)for(var tt=0,et=F[M=Q[Z]];tt<et.length;tt++){var nt;if(null!=(s=(nt=et[tt]).outboundLayer)){for(var rt=0,it=nt.inputTensors;rt<it.length;rt++)if(C=it[rt],-1===Y.indexOf(C))throw new b("Graph disconnected: cannot obtain value for tensor "+C+' at layer "'+s.name+'". The following previous layers were accessed without issue: '+J);for(var at=0,ot=nt.outputTensors;at<ot.length;at++)C=ot[at],Y.push(C);J.push(s.name)}}r.nodesByDepth=F;for(var st=r.layers.map(function(t){return t.name}),ut=function(t){var e=st.filter(function(e){return e===t}).length;if(1!==e)throw new b('The name "'+t+'" is used '+e+" times in the model. All layer names should be unique. Layer names: "+JSON.stringify(st))},ct=0,lt=st;ct<lt.length;ct++)ut(lt[ct]);return r.outboundNodes=[],r.inboundNodes=[],new ue({outboundLayer:r,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:r.inputs,outputTensors:r.outputs,inputMasks:r.inputs.map(function(t){return null}),outputMasks:r.outputs.map(function(t){return null}),inputShapes:r.inputs.map(function(t){return t.shape}),outputShapes:r.outputs.map(function(t){return t.shape})}),r.built=!0,r._refCount=1,r}return a(e,t),e.prototype.assertNotDisposed=function(){if(0===this._refCount)throw new Error("Container '"+this.name+"' is already disposed.")},e.prototype.dispose=function(){this.assertNotDisposed();var t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount)for(var e=0,n=this.layers;e<n.length;e++){var r=n[e];t.numDisposedVariables+=r.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t},Object.defineProperty(e.prototype,"trainableWeights",{get:function(){if(this._trainableWeights.length>0)throw new w("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];for(var t=[],e=0,n=this.layers;e<n.length;e++){var r=n[e];t=t.concat(r.trainableWeights)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){for(var t=[],e=0,n=this.layers;e<n.length;e++){var r=n[e];t.push.apply(t,r.nonTrainableWeights)}if(!this.trainable){for(var i=[],a=0,o=this.layers;a<o.length;a++)r=o[a],i.push.apply(i,r.trainableWeights);return i.concat(t)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.trainableWeights.concat(this.nonTrainableWeights)},enumerable:!0,configurable:!0}),e.prototype.loadWeights=function(t,e,n,i){void 0===e&&(e=!1),void 0===n&&(n=!1),void 0===i&&(i=!0),n?function(t,e,n){void 0===n&&(n=!0);for(var r={},i=0,a=0,o=e;a<o.length;a++)for(var s=0,u=o[a].weights;s<u.length;s++){var c=u[s];if(null!=r[c.originalName])throw new w("Duplicate weight name: "+c.originalName);r[c.originalName]=c,i++}var l=[];for(var f in t){if(null!=r[f])l.push([r[f],t[f]]);else if(n)throw new w("Provided weight data has no target variable: "+f);delete r[f]}if(n){var h=[];for(var p in r)h.push(p);if(h.length>0)throw new w(h.length+" of "+i+" weights are not set: "+h)}ie(l)}(t,this.layers,i):function(t,e,n){void 0===n&&(n=!1);for(var i=t.keras_version,a=(t.backend,e.map(function(t){return t.name})),o={},s=0,u=e;s<u.length;s++)null!=(b=u[s]).name&&(null==o[b.name]&&(o[b.name]=[]),o[b.name].push(b));for(var c=t.weights,l=[],f=0;f<a.length;++f){var h=a[f],p=c[h];null==p&&(p=[]);for(var d=[],m=0;m<p.length;++m){var g=p[m];d.push(new ne(wn(g.dtype,g.shape,g.value)))}for(var y=0,v=o[h];y<v.length;y++){var b,_=(b=v[y]).weights;if((d=bn(0,d,i)).length!==_.length){if(!n)throw new w("Layer #"+f+' (named "'+b.name+'") expects '+_.length+" weight(s), but the saved weights have "+d.length+" element(s).");console.warn("Skipping loading of weights of layer "+b.name+" due to mismatch in number of weights: ("+d.length+" vs "+_.length+").")}for(var x=0;x<d.length;++x)!n||r.qe.arraysEqual(_[x].shape,d[x].shape)?l.push([_[x],d[x].read()]):console.warn("Skipping loading of weights for layer "+b.name+" due to mismatch in shape ("+_[x].shape+" vs "+d[x].shape+")")}}ie(l)}(t,this.layers,e)},e.prototype.updatedConfig=function(){var t=this.getConfig();return{className:this.getClassName(),config:t,kerasVersion:"tfjs-layers 0.9.2",backend:"TensorFlow.js"}},e.prototype.toJSON=function(t,e){void 0===e&&(e=!0);var n=function t(e,n){if(null==e)return null;if("string"==typeof e)return k(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){for(var r=[],i=e.length,a=0;a<i;++a){var o=e[a];ln(n,a,o)?r.push(o):r.push(t(o,n))}return r}for(var s={},u=0,c=Object.keys(e);u<c.length;u++){var l=c[u],f=e[l];s[k(l)]="name"!==l&&"className"!==l||"string"!=typeof f?t(f,l):f}return s}(this.updatedConfig());return e?JSON.stringify(n):n},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){t=O(t);for(var r=new hn,i=0;i<n.inputs.length;++i)r.add(n.inputs[i],t[i]);return mn(n.outputs,r,e)})},e.prototype.computeMask=function(t,e){var n=this;return Object(r.ge)(function(){var r;return t=O(t),r=null==e?E(null,t.length):O(e),n.runInternalGraph(t,r)[1]})},e.prototype.computeOutputShape=function(t){var e=Jt(t);if(e.length!==this.inputLayers.length)throw new w("Invalid inputShape argument "+t+": model has "+this.inputLayers.length+" tensor inputs.");for(var n={},r=0;r<e.length;r++){var i=this.inputLayers[r],a=e[r];n[N=i.name+"_0_0"]=a}var o=Object.keys(this.nodesByDepth).map(function(t){return parseInt(t,10)}).sort(R);if(o.length>1)for(var s=0,u=o;s<u.length;s++)for(var c=u[s],l=0,f=this.nodesByDepth[c];l<f.length;l++){var h=f[l];if(i=h.outboundLayer,-1===this.inputLayers.map(function(t){return t.id}).indexOf(i.id)){for(var p=[],d=0;d<h.inboundLayers.length;d++){var m=h.inboundLayers[d],g=h.nodeIndices[d],y=h.tensorIndices[d],v=n[N=m.name+"_"+g+"_"+y];p.push(v)}var b=Jt(i.computeOutputShape(I(p))),_=i.inboundNodes.indexOf(h);for(d=0;d<b.length;d++)n[N=i.name+"_"+_+"_"+d]=b[d]}}var x=[],E=[];for(r=0;r<this.outputLayers.length;r++){i=this.outputLayers[r],_=this.outputLayersNodeIndices[r],y=this.outputLayersTensorIndices[r];var N=i.name+"_"+_+"_"+y;E.push(N)}for(r=0;r<E.length;r++){var O=E[r];S(O in n),x.push(n[O])}return I(x)},e.prototype.runInternalGraph=function(t,e){null==e&&(e=E(null,t.length));for(var n={},r=0;r<this.inputs.length;++r){var i=this.inputs[r],a=t[r],o=e[r];n[i.id]=[a,o]}for(var s=0,u=Object.keys(this.nodesByDepth).map(function(t){return parseInt(t,10)}).sort(R);s<u.length;s++)for(var c=u[s],l=0,f=this.nodesByDepth[c];l<f.length;l++){for(var h=f[l],p=h.outboundLayer,d=h.inputTensors,m=h.outputTensors,g=new Array,y=0,v=d;y<v.length;y++)(i=v[y]).id in n&&g.push(n[i.id]);if(g.length===d.length){var b={},w=void 0,x=void 0,N=void 0,I=void 0;if(null!=h.callArgs&&(b=h.callArgs),1===g.length){var k=g[0],A=k[0],C=k[1];null==b.mask&&(b.mask=C),N=O(p.call(A,b)),I=O(p.computeMask(A,C)),w=[A],x=[C]}else w=g.map(function(t){return t[0]}),x=g.map(function(t){return t[1]}),null==b.mask&&(b.mask=x),N=O(p.call(w,b)),I=O(p.computeMask(w,x));if(p.activityRegularizer)throw new _("Model invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(r=0;r<m.length;++r)i=m[r],a=N[r],o=I[r],n[i.id]=[a,o]}}for(var P=[],T=[],D=[],M=0,j=this.outputs;M<j.length;M++){S((i=j[M]).id in n,"Could not compute output "+i.name+" : "+i.id);var B=n[i.id],L=B[0];o=B[1],D.push(L.shape),P.push(L),T.push(o)}return[P,T,D]},e.prototype.buildNodeConversionMap=function(t){for(var n,r={},i=0,a=this.layers;i<a.length;i++){var o=a[i];n=o instanceof e?1:0;for(var s=0;s<o.inboundNodes.length;s++){var u=e.nodeKey(o,s);this.containerNodes.has(u)&&(r[u]=n,n+=1)}}return r},e.prototype.getLayer=function(t,e){if(null!=e){if(this.layers.length<=e)throw new w("Was asked to retrieve layer at index "+e+", but model only has "+this.layers.length+" layer(s).");return this.layers[e]}if(null==t)throw new w("Provide either a layer name or layer index");for(var n=0,r=this.layers;n<r.length;n++){var i=r[n];if(i.name===t)return i}throw new w("No such layer: "+t)},e.prototype.calculateLosses=function(){var t=this;return Object(r.ge)(function(){for(var n=[],r=0,i=t.layers;r<i.length;r++)for(var a=i[r],o=0;o<a.inboundNodes.length;++o){var s=e.nodeKey(a,o);t.containerNodes.has(s)&&n.push.apply(n,a.calculateLosses())}return n})},e.prototype.getConfig=function(){for(var t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[],i=0,a=this.layers;i<a.length;i++){for(var o=(b=a[i]).getClassName(),s=b.getConfig(),u=[],c=0;c<b.inboundNodes.length;c++){var l=b.inboundNodes[c],f=e.nodeKey(b,c),h={};if(this.containerNodes.has(f)){if(l.callArgs)try{JSON.stringify(l.callArgs),h=l.callArgs}catch(t){console.warn("Layer "+b.name+" was passed non-serializable keyword arguments: "+l.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),h={}}if(l.inboundLayers.length>0){for(var p=[],d=0;d<l.inboundLayers.length;d++){var m=l.inboundLayers[d],g=l.nodeIndices[d],y=l.tensorIndices[d];null==(_=n[e.nodeKey(m,g)])&&(_=0),p.push([m.name,_,y,h])}u.push(p)}}}r.push({name:b.name,className:o,config:s,inboundNodes:u})}t.layers=r;var v=[];for(d=0;d<this.inputLayers.length;d++){var b=this.inputLayers[d];g=this.inputLayersNodeIndices[d],f=e.nodeKey(b,g),this.containerNodes.has(f)&&(null!==(_=n[f])&&void 0!==_||(_=0),y=this.inputLayersTensorIndices[d],v.push([b.name,_,y]))}t.inputLayers=v;var w=[];for(d=0;d<this.outputLayers.length;d++){var _;if(b=this.outputLayers[d],g=this.outputLayersNodeIndices[d],f=e.nodeKey(b,g),this.containerNodes.has(f))null!==(_=n[f])&&void 0!==_||(_=0),y=this.outputLayersTensorIndices[d],w.push([b.name,_,y])}return t.outputLayers=w,t},e.fromConfig=function(t,e,n,r){void 0===n&&(n={}),void 0===r&&(r=!1);var i={},a={};function o(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function s(t,e){for(var n,r=[],a=0,s=e;a<s.length;a++){var u=s[a],c=u[0],l=u[1],f=u[2];if(3===u.length)n={};else{if(4!==u.length)throw new w("Improperly formatted model config for layer "+JSON.stringify(t)+": "+JSON.stringify(u));n=u[3]}if(!(c in i))return void o(t,e);var h=i[c];if(h.inboundNodes.length<=l)return void o(t,e);var p=h.inboundNodes[l];r.push(p.outputTensors[f])}r.length>0&&t.apply(I(r),n)}function u(t){var n=t.name,a=cn(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),i[n]=a;for(var s=0,u=t.inboundNodes;s<u.length;s++){var c=u[s];if(!(c instanceof Array))throw new w("Corrupted configuration, expected array for nodeData: "+c);o(a,c)}}for(var c=e.name,l=e.layers,f=0,h=l;f<h.length;f++)u(m=h[f]);for(;!M(a);)for(var p=0,d=l;p<d.length;p++){var m=d[p];if((T=i[m.name]).name in a){var g=a[T.name];delete a[T.name];for(var y=0,v=g;y<v.length;y++)s(T,v[y])}}for(var b=[],_=[],x=0,E=e.inputLayers;x<E.length;x++){var N=(m=E[x])[0],O=m[1],k=m[2];S(N in i);var A=(T=i[N]).inboundNodes[O].outputTensors;b.push(A[k])}for(var C=0,P=e.outputLayers;C<P.length;C++){var T;N=(m=P[C])[0],O=m[1],k=m[2],S(N in i),A=(T=i[N]).inboundNodes[O].outputTensors,_.push(A[k])}return new t({inputs:b,outputs:_,name:c})},Object.defineProperty(e.prototype,"stateful",{get:function(){if(this._stateful)throw new w("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(var t=0,e=this.layers;t<e.length;t++)if(e[t].stateful)return!0;return!1},enumerable:!0,configurable:!0}),e.prototype.resetStates=function(){var t=this;Object(r.ge)(function(){t.layers.forEach(function(t){t.stateful&&t.resetStates()})})},e}(le),xn=32;function En(t,e){if(t.outputs.length>1)throw new _("Support for training a model with multiple output tensors with a dataset object is not implemented yet.");r.qe.assert(Array.isArray(e)&&2===e.length,"Dataset iterator for fitDataset() is expected to generate an Array of length 2: `[xs, ys]`, but instead generates "+e);var n=(e=e)[1],i=e[0];if(i instanceof r.o)return r.qe.assert(1===t.inputs.length,"Model has multiple "+t.inputs.length+" inputs, hence it expects the input dataset to generate a dictionary of tensors  (with keys "+JSON.stringify(t.inputNames)+", but received a single tensor."),r.qe.assert(i.shape[0]===n.shape[0],"Mismatch in batch size between x and y tensors ("+i.shape[0]+" vs. "+n.shape[0]+")"),[i,n];var a=void 0;i=i;for(var o=[],s=0,u=t.inputNames;s<u.length;s++){var c=u[s];if(null==i[c])throw new w("The feature data generated by the dataset lacks the required input key '"+c+"'.");o.push(i[c]),null==a?a=i[c].shape[0]:r.qe.assert(i[c].shape[0]===a,"Mismatch in batch size between x and y tensors ("+i[c].shape[0]+" vs. "+n.shape[0]+")")}return o.concat(n)}function Sn(t,e,n){return u(this,void 0,void 0,function(){var i,a,o,s,u,l,f,h,p,d,m,g,y,v,b,w,x,E,S,N,I,k,A,C,P,T;return c(this,function(c){switch(c.label){case 0:if(i=null!=n.batchesPerEpoch,r.qe.assert(null!=t.optimizer,"You must compile a model before training/testing. Use Model.compile(modelCompileConfig)."),r.qe.assert(null!=n,"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.qe.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),r.qe.assert(!i||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),r.qe.assert(null==n.validationSplit,"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0,c.label=1;case 1:return c.trys.push([1,,22,23]),a=null!=n.validationData,o=void 0,s=void 0,a&&(Nn(n.validationData)?r.qe.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches):(u=function(t){if(3===t.length)throw new _("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData),o=u.xs,s=u.ys)),l=t.makeTrainFunction(),f=t.getDedupedMetricsNames(),void 0,h=a?f.slice().concat(f.map(function(t){return"val_"+t})):f.slice(),p=Ee(n.callbacks),d=Ne(p,n.yieldEvery,n.verbose,n.epochs,null,null,n.batchesPerEpoch,null,a,h),m=d.callbackList,g=d.history,m.setModel(t),t.history=g,[4,m.onTrainBegin()];case 2:return c.sent(),t.stopTraining_=!1,y=null==n.initialEpoch?0:n.initialEpoch,[4,e.iterator()];case 3:v=c.sent(),c.label=4;case 4:return y<n.epochs?(b={},[4,m.onEpochBegin(y)]):[3,19];case 5:return c.sent(),w=0,x=0,i?[3,7]:[4,e.iterator()];case 6:v=c.sent(),c.label=7;case 7:return!i||w<n.batchesPerEpoch?[4,v.next()]:[3,17];case 8:return E=c.sent(),i&&E.done?(console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+w+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset."),[3,17]):null==E.value?[3,11]:(S=En(t,E.value),(N={}).batch=x,N.size=S[0].shape[0],[4,m.onBatchBegin(x,N)]);case 9:for(c.sent(),I=l(S),Object(r.jb)(S),T=0;T<f.length;++T)k=f[T],A=I[T],N[k]=A,Object(r.Rb)(A);return[4,m.onBatchEnd(x,N)];case 10:c.sent(),ge(N),x++,w++,c.label=11;case 11:return(i?w>=n.batchesPerEpoch:E.done)?a?(C=void 0,Nn(n.validationData)?(P=O,[4,t.evaluateDataset(n.validationData,{batches:n.validationBatches})]):[3,13]):[3,15]:[3,16];case 12:return C=P.apply(void 0,[c.sent()]),[3,14];case 13:C=O(t.evaluate(o,s,{batchSize:null==n.validationBatchSize?xn:n.validationBatchSize,verbose:0})),c.label=14;case 14:for(T=0;T<t.metricsNames.length;++T)b["val_"+t.metricsNames[T]]=C[T];c.label=15;case 15:return[3,17];case 16:return t.stopTraining_?[3,17]:[3,7];case 17:return[4,m.onEpochEnd(y,b)];case 18:return c.sent(),y++,t.stopTraining_?[3,19]:[3,4];case 19:return[4,m.onTrainEnd()];case 20:return c.sent(),[4,t.history.syncData()];case 21:return c.sent(),[2,t.history];case 22:return t.isTraining=!1,[7];case 23:return[2]}})})}function Nn(t){return"function"==typeof t.iterator}function In(t,e,n){return u(this,void 0,void 0,function(){var i,a,o,s,u,l,f,h,p,d;return c(this,function(m){switch(m.label){case 0:if(i=null!=n.batches,a=t.testFunction,o=[],n.verbose>0)throw new _("Verbose mode is not implemented yet.");return r.qe.assert(!i||n.batches>0&&Number.isInteger(n.batches),"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)),function(t){return"function"==typeof t.next}(e)?(u=e,[3,3]):[3,1];case 1:return[4,e.iterator()];case 2:u=m.sent(),m.label=3;case 3:s=u,l=0,f=0,h=function(){var e,u,h,p,d,m;return c(this,function(c){switch(c.label){case 0:return[4,s.next()];case 1:if((e=c.sent()).value){if(u=En(t,e.value),h=Object(r.ge)(function(){return a(u)}),Object(r.jb)(u),0===f)for(m=0;m<h.length;++m)o.push(y(0));for(p=u[0].shape[0],d=function(t){var e=h[t],n=o[t];o[t]=Object(r.ge)(function(){return Object(r.u)(o[t],Object(r.zc)(y(p),e))}),f>0&&Object(r.jb)(n)},m=0;m<h.length;++m)d(m);Object(r.jb)(h),l+=p,++f}return e.done?(i&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` batches (in this case, "+n.batches+" batches). You may need to use the repeat() function when building your dataset."),[2,"break"]):[2]}})},m.label=4;case 4:return!i||f<n.batches?[5,h()]:[3,6];case 5:return"break"===m.sent()?[3,6]:[3,4];case 6:for(p=function(t){var e=o[t];o[t]=Object(r.ge)(function(){return Object(r.lb)(o[t],y(l))}),Object(r.jb)(e)},d=0;d<o.length;++d)p(d);return[2,I(o)]}})})}function On(t){r.qe.assert(t>0&&Number.isInteger(t),"batchSize is required to be a positive integer, but got "+t)}function kn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(function(t){return gt(t,e,n-e)}):gt(t,e,n-e)}function An(t,e){return Object(r.ge)(function(){return null==t?null:Array.isArray(t)?t.map(function(t){return An(t,e)}):St(t,"int32"===e.dtype?e:e.toInt())})}function Cn(t,e){for(var n=[],r=0,i=null;r<t;)(i=r+e)>=t&&(i=t),n.push([r,i]),r=i;return n}function Pn(t,e,n,i,a,o,s,l,f,h,p,d,m,g,y,v){return u(this,void 0,void 0,function(){var u,b,x,E,S,N,I,O;return c(this,function(k){switch(k.label){case 0:if(null==a&&(a=32),null==o&&(o=1),null==p&&(p=!0),null==m&&(m=0),u=!1,null!=f&&null!=h&&(u=!0),null!=y&&(u=!0,null==g))throw new w("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");return null!=(b=t.checkNumSamples(n,a,g,"steps_per_epoch"))&&(x=pt(0,b)),null==s&&(s=1),E=Ne(l,v,s,o,m,b,g,a,u,d),S=E.callbackList,N=E.history,S.setModel(t),t.history=N,[4,S.onTrainBegin()];case 1:k.sent(),t.stopTraining_=!1,I=function(o){var s,l,d,m,y;return c(this,function(v){switch(v.label){case 0:return[4,S.onEpochBegin(o)];case 1:if(v.sent(),s={},null==g)return[3,2];throw new _("stepsPerEpoch mode is not implemented yet.");case 2:if("batch"===p)throw new _("batch shuffling is not implemneted yet");p&&r.qe.shuffle(x),l=Object(r.Zd)(x),d=Cn(b,a),m=function(o){var p;return c(this,function(c){switch(c.label){case 0:return p={},[4,S.onBatchBegin(o,p)];case 1:return c.sent(),Object(r.ge)(function(){var c=d[o][0],m=d[o][1],g=gt(l,c,m-c);p.batch=o,p.size=m-c;for(var y=An(n,g),v=e(y),b=0;b<i.length;++b){var w=i[b],_=v[b];p[w]=_,Object(r.Rb)(_)}if(o===d.length-1&&u){var x=t.testLoop(f,h,a);for(b=0;b<i.length;++b)w=i[b],_=x[b],Object(r.Rb)(_),s["val_"+w]=_}}),[4,S.onBatchEnd(o,p)];case 2:return c.sent(),ge(p),t.stopTraining_?[2,"break"]:[2]}})},y=0,v.label=3;case 3:return y<d.length?[5,m(y)]:[3,6];case 4:if("break"===v.sent())return[3,6];v.label=5;case 5:return++y,[3,3];case 6:l.dispose(),v.label=7;case 7:return[4,S.onEpochEnd(o,s)];case 8:return v.sent(),t.stopTraining_?[2,"break"]:[2]}})},O=m,k.label=2;case 2:return O<o?[5,I(O)]:[3,5];case 3:if("break"===k.sent())return[3,5];k.label=4;case 4:return++O,[3,2];case 5:return[4,S.onTrainEnd()];case 6:return k.sent(),[4,t.history.syncData()];case 7:return k.sent(),[2,t.history]}})})}function Tn(t,e,n,r){return void 0===r&&(r={}),u(this,void 0,void 0,function(){var i,a,o,s,u,l,f,h,p,d,m,g,y,v,b,x,E,S,N;return c(this,function(c){switch(c.label){case 0:if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0,c.label=1;case 1:if(c.trys.push([1,,3,4]),On(f=null==r.batchSize?32:r.batchSize),h=t.standardizeUserData(e,n,!1,f),i=h[0],a=h[1],p=!1,d=void 0,null!=r.validationData&&r.validationData.length>0){if(p=!0,2!==r.validationData.length)throw 3===r.validationData.length?new _("validationData including sample weights is not supported yet."):new w("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");o=r.validationData[0],s=r.validationData[1],m=t.standardizeUserData(o,s,!0,f),u=m[0],l=m[1],d=u.concat(l)}else null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1?(p=!0,g=Math.floor(i[0].shape[0]*(1-r.validationSplit)),y=i[0].shape[0],u=kn(i,g,y),i=kn(i,0,g),l=kn(a,g,y),a=kn(a,0,g),d=u.concat(l)):null!=r.validationSteps&&(p=!0);return v=i.concat(a),t.checkTrainableWeightsConsistency(),b=t.makeTrainFunction(),x=t.getDedupedMetricsNames(),E=void 0,S=void 0,p?(t.makeTestFunction(),E=t.testFunction,S=x.slice().concat(x.map(function(t){return"val_"+t}))):(E=null,d=[],S=x.slice()),N=Ee(r.callbacks),[4,Pn(t,b,v,x,f,r.epochs,r.verbose,N,E,d,r.shuffle,S,r.initialEpoch,null,null,r.yieldEvery)];case 2:return[2,c.sent()];case 3:return t.isTraining=!1,Dn(i,e),Dn(a,n),Dn(u,o),Dn(l,s),[7];case 4:return[2]}})})}function Rn(t){var e=[];t instanceof r.o&&(t=[t]);for(var n=0;n<t.length;++n){var i=t[n];if(1===i.rank)e.push(mt(i,1));else{if(0===i.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(i)}}return e}function Dn(t,e){if(null!=t){var n=[];if(e instanceof r.o)n.push(e.id);else if(Array.isArray(e))e.forEach(function(t){return n.push(t.id)});else if(null!=e)for(var i in e){var a=e[i];n.push(a.id)}var o=[];if(t instanceof r.o)-1===n.indexOf(t.id)&&o.push(t);else if(Array.isArray(t))t.forEach(function(t){-1===n.indexOf(t.id)&&o.push(t)});else if(null!=t)for(var s in t){var u=t[s];-1===n.indexOf(u.id)&&o.push(u)}o.forEach(function(t){t.isDisposed||t.dispose()})}}function Mn(t){return Array.isArray(t)}function jn(t){return!function(t){return t instanceof r.o}(t)&&!Mn(t)}function Bn(t,e,n,r,i){if(void 0===r&&(r=!0),void 0===i&&(i=""),null==e||0===e.length){if(null!=t){var a=!1;if(Mn(t)&&t.length>0)a=!0;else if(jn(t)){for(var o in t)if(t.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new w("Error when checking model "+i+" expected no data, but got "+t)}return[]}if(null==t)return e.map(function(t){return null});var s;if(jn(t)){t=t,s=[];for(var u=0,c=e;u<c.length;u++){var l=c[u];if(null==t[l])throw new w('No data provided for "'+l+'". Need data for each key in: '+e);s.push(t[l])}}else if(Mn(t)){if((t=t).length!==e.length)throw new w("Error when checking model "+i+": the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see "+e.length+" Tensor(s), but instead got the following list of Tensor(s): "+t);s=t}else{if(t=t,e.length>1)throw new w("The model "+i+" expects "+e.length+" Tensor(s), but only received one Tensor. Found: Tensor with shape "+t.shape);s=[t]}if(s=Rn(s),null!=n)for(var f=0;f<e.length;++f)if(null!=n[f]){var h=s[f];if(h.shape.length!==n[f].length)throw new w("Error when checking "+i+": expected "+e[f]+" to have "+n[f].length+" dimension(s). but got array with shape "+h.shape);for(var p=0;p<n[f].length;++p)if(0!==p||r){var d=h.shape[p],m=n[f][p];if(null!=m&&m>=0&&d!==m)throw new w("Error when checking "+i+": expected "+e[f]+" to have shape ["+n[f]+"], but got array with shape ["+h.shape+"].")}}return s}function Ln(t,e,n,r,i){var a;if(void 0===r&&(r=!0),void 0===i&&(i=""),Array.isArray(t)){if(t.length!==e.length)throw new w("Error when checking model "+i+": the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see "+e.length+" Tensor(s), but instead got "+t.length+" Tensors(s).");a=t}else{if(e.length>1)throw new w("The model expects "+e.length+" "+i+" Tensors, but only received one Tensor. Found: array with shape "+JSON.stringify(t.shape)+".");a=[t]}if(null!=n)for(var o=0;o<e.length;++o)if(null!=n[o]){var s=a[o];if(s.shape.length!==n[o].length)throw new w("Error when checking "+i+": expected "+e[o]+" to have "+n[o].length+" dimension(s), but got array with shape "+JSON.stringify(s.shape));for(var u=0;u<n[o].length;++u)if(0!==u||r){var c=s.shape[u],l=n[o][u];if(null!=l&&l!==c)throw new w("Error when checking "+i+": expected "+e[o]+" to have shape "+JSON.stringify(n[o])+" but got array with shape "+JSON.stringify(s.shape)+".")}}}var zn=function(t){function e(e){var n=t.call(this,e)||this;return n.isTraining=!1,n}return a(e,t),e.prototype.summary=function(t,e,n){if(void 0===n&&(n=console.log),!this.built)throw new w("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");an(this,t,e,n)},e.prototype.compile=function(t){var e=this;if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer=function(t){var e={Adagrad:function(){return r.le.adagrad(.01)},Adadelta:function(){return r.le.adadelta(1,.95,l())},Adam:function(){return r.le.adam(.001,.9,.999,l())},Adamax:function(){return r.le.adamax(.002,.9,.999,l(),0)},RMSProp:function(){return r.le.rmsprop(.001,.9,0,l())},SGD:function(){return r.le.sgd(.01)}};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new w("Unknown Optimizer "+t)}(t.optimizer);else{if(!(t.optimizer instanceof r.j))throw new w("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer=t.optimizer}var n=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new w("When passing an Array as loss, it should have one entry per model output. The model has "+this.outputs.length+" output(s), but you passed loss="+t.loss+".");var i=t.loss;n=i.map(function(t){return Ue(t)})}else{var a=Ue(t.loss);this.outputs.map(function(t){n.push(a)})}else{for(var o in t.loss=t.loss,t.loss)if(-1===this.outputNames.indexOf(o))throw new w('Unknown entry in loss dictionary: "'+o+'". Only expected the following keys: '+this.outputNames);for(var s=0,u=this.outputNames;s<u.length;s++){var c=u[s];null==t.loss[c]&&console.warn('Output "'+c+'" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to '+c+" during training"),n.push(Ue(t.loss[c]))}}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(var f=0;f<this.outputs.length;++f){var h=this.internalOutputShapes[f],p=this.outputNames[f];this.feedOutputNames.push(p),this.feedOutputShapes.push(h),this.feedLossFns.push(this.lossFunctions[f])}var d=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],rt("loss",function(){for(var t=0;t<e.outputs.length;++t)if(-1===d.indexOf(t)){var n=e.lossFunctions[t];e.outputs.length>1&&(e.metricsTensors.push([n,t]),e.metricsNames.push(e.outputNames[t]+"_loss"))}});var m=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(function(t){return[]});if(Array.isArray(t))return e.map(function(e){return t});if(null!=t){for(var n=[],r=0,i=e;r<i.length;r++){var a=i[r],o=t.hasOwnProperty(a)?t[a]:[];Array.isArray(o)||(o=[o]),n.push(o)}return n}throw new TypeError("Type of metrics argument not understood. Expected an Array or Object, found: "+t)}(t.metrics,this.outputNames);rt("metric",function(){for(var t=function(t){if(-1!==d.indexOf(t))return"continue";!function(n){for(var r,i,a,o=function(n){if(-1!==["accuracy","acc","crossentropy","ce"].indexOf(n)){var o=e.internalOutputShapes[t];1===o[o.length-1]||e.lossFunctions[t]===Be?-1!==["accuracy","acc"].indexOf(n)?i=Ve:-1!==["crossentropy","ce"].indexOf(n)&&(i=Ke):e.lossFunctions[t]===je?-1!==["accuracy","acc"].indexOf(n)?i=Ge:-1!==["crossentropy","ce"].indexOf(n)&&(i=rn):-1!==["accuracy","acc"].indexOf(n)?i=We:-1!==["crossentropy","ce"].indexOf(n)&&(i=en);var s=void 0;-1!==["accuracy","acc"].indexOf(n)?s="acc":-1!==["crossentropy","ce"].indexOf(n)&&(s="ce"),a=i,r=""+s}else{var u=function(t){var e={binaryAccuracy:Ve,categoricalAccuracy:We,precision:$e,categoricalCrossentropy:en,sparseCategoricalCrossentropy:rn,mse:Xe,MSE:Ye,mae:Je,MAE:Ze,mape:Qe,MAPE:tn,cosine:nn};if("string"==typeof t&&t in e)return e[t];if("string"!=typeof t&&null!=t)return t;throw new w("Unknown metric "+t)}(n);a=u,r=""+n}var c;rt(r,function(){c=a}),function(t,n,r){e.outputNames.length>1&&(n=e.outputNames[t]+"_"+n),e.metricsNames.push(n),e.metricsTensors.push([r,t])}(t,r,c)},s=0,u=m[t];s<u.length;s++)o(u[s])}()},n=0;n<e.outputs.length;++n)t(n)}),this.collectedTrainableWeights=this.trainableWeights},e.prototype.checkTrainableWeightsConsistency=function(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")},e.prototype.evaluate=function(t,e,n){void 0===n&&(n={});var r=null==n.batchSize?32:n.batchSize;On(r);var i=this.standardizeUserData(t,e,!0,r);try{var a=i[0].concat(i[1]);this.makeTestFunction();var o=this.testFunction;return I(this.testLoop(o,a,r,n.verbose,n.steps))}finally{Dn(i[0],t),Dn(i[1],e)}},e.prototype.evaluateDataset=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){return this.makeTestFunction(),[2,In(this,t,e)]})})},e.prototype.checkNumSamples=function(t,e,n,r){var i;if(void 0===r&&(r="steps"),null!=n){if(i=null,null!=e)throw new w("If "+r+" is set, batchSize must be null or undefined.Got batchSize = "+e)}else{if(null==t)throw new w("Either the input data should have a defined shape, or "+r+" shoud be specified.");i=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return i},e.prototype.execute=function(t,e){if(Array.isArray(e)&&0===e.length)throw new w("`outputs` is an empty Array, which is not allowed.");var n=Array.isArray(e),i=n?e:[e],a=this.retrieveSymbolicTensors(i),o=new hn;if(t instanceof r.o&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new w("The number of inputs provided ("+t.length+") does not match the number of inputs of this model ("+this.inputs.length+").");for(var s=0;s<this.inputs.length;++s)o.add(this.inputs[s],t[s])}else for(var u=0,c=this.inputs;u<c.length;u++){var l=c[u],f=t[l.name];if(null==f)throw new w("No value is provided for the model's input "+l.name);o.add(l,f)}var h=mn(a,o);return n?h:h[0]},e.prototype.retrieveSymbolicTensors=function(t){for(var e=E(null,t.length),n=t.length,r=0,i=this.layers;r<i.length;r++){for(var a=i[r],o=Array.isArray(a.output)?a.output:[a.output],s=o.map(function(t){return t.name}),u=0;u<t.length;++u){var c=s.indexOf(t[u]);if(-1!==c&&(e[u]=o[c],n--),0===n)break}if(0===n)break}if(n>0){var l=[];throw e.forEach(function(e,n){null==e&&l.push(t[n])}),new w("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(l))}return e},e.prototype.predictLoop=function(t,e,n){var i=this;return void 0===e&&(e=32),void 0===n&&(n=!1),Object(r.ge)(function(){var a=i.checkNumSamples(t);if(n)throw new _("Verbose predictLoop() is not implemented yet.");for(var o=Cn(a,e),s=[],u=function(e){var n=Object(r.ge)(function(){var n=o[e][0],r=o[e][1],a=kn(t,n,r),s=[];if(Array.isArray(a))for(var u=0;u<a.length;++u)s.push({key:i.inputs[u],value:a[u]});else s.push({key:i.inputs[0],value:a});var c=new hn(s);return mn(i.outputs,c)});if(0===e)for(var a=0,u=n;a<u.length;a++){var c=u[a];s.push(c)}else for(var l=0;l<n.length;++l)s[l]=wt(s[l],n[l])},c=0;c<o.length;++c)u(c);return I(s)})},e.prototype.predict=function(t,e){void 0===e&&(e={});var n=Rn(t);Ln(n,this.inputNames,this.feedInputShapes,!1);try{var r=null==e.batchSize?32:e.batchSize;return On(r),this.predictLoop(n,r)}finally{Dn(n,t)}},e.prototype.predictOnBatch=function(t){return Ln(t,this.inputNames,this.feedInputShapes,!0),this.predictLoop(t,t.shape[0])},e.prototype.standardizeUserData=function(t,e,n,i){if(void 0===n&&(n=!0),null==this.optimizer)throw new b("You must compile a model before training/testing. Use Model.compile(modelCompileArgs).");for(var a=[],o=0;o<this.feedOutputShapes.length;++o){var s=this.feedOutputShapes[o];this.feedLossFns[o]===je?a.push(s.slice(0,s.length-1).concat([1])):a.push(s)}if(function(t,e,n){var i=D(t.map(function(t){return t.shape[0]}));i.sort();var a=D(e.map(function(t){return t.shape[0]}));if(a.sort(),i.length>1)throw new w("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(function(t){return t.shape})));if(a.length>1)throw new w("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(function(t){return t.shape})));if(i.length>0&&a.length>0&&!r.qe.arraysEqual(i,a))throw new w("Input Tensors should have the same number of samples as target Tensors. Found "+i[0]+" input sample(s) and "+a[0]+" target sample(s).")}(t=Bn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Bn(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){for(var r=[Oe,Be,Me],i=0;i<t.length;++i){var a=t[i],o=e[i],s=n[i];if(null!=o){if(o===Me&&1===a.shape[a.shape.length-1])throw new w("You are passing a target array of shape "+a.shape+" while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==r.indexOf(o))for(var u=a.shape.slice(1),c=s.slice(1),l=0;l<u.length;++l){var f=u[l],h=c[l];if(null!=h&&f!==h)throw new w("A target Tensor with shape "+a.shape+" was passed for an output of shape "+s+", while using a loss function that expects targets to have the same shape as the output.")}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=i&&i>0&&t[0].shape[0]%i!=0)throw new w("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+i+". Found: "+t[0].shape[0]+" sample(s).");return[t,e,null]},e.prototype.testLoop=function(t,e,n,i,a){var o=this;return void 0===i&&(i=0),Object(r.ge)(function(){var s=o.checkNumSamples(e,n,a,"steps"),u=[];if(i>0)throw new _("Verbose mode is not implemented yet.");if(null!=a)throw new _("steps mode in testLoop() is not implemented yet");for(var c=Cn(s,n),l=Object(r.Zd)(pt(0,s)),f=0;f<c.length;++f){var h=c[f][0],p=c[f][1],d=gt(l,h,p-h),m=An(e,d),g=t(m);if(0===f)for(var v=0;v<g.length;++v)u.push(y(0));for(v=0;v<g.length;++v){var b=g[v];u[v]=Object(r.u)(u[v],Object(r.zc)(y(p-h),b))}}for(v=0;v<u.length;++v)u[v]=Object(r.lb)(u[v],y(s));return u})},e.prototype.getDedupedMetricsNames=function(){for(var t=this.metricsNames,e=[],n=0;n<t.length;++n){var r=t[n],i=r;N(t,r)>1&&(i+="_"+N(t.slice(0,n),r)),e.push(i)}return e},e.prototype.makeTrainFunction=function(){var t=this;return function(e){var n=e.slice(0,t.inputs.length),i=e.slice(t.inputs.length,t.inputs.length+t.outputs.length),a=[],o=t.collectedTrainableWeights.map(function(t){return t.read()});return[t.optimizer.minimize(function(){for(var e=[],o=0;o<t.inputs.length;++o)e.push({key:t.inputs[o],value:n[o]});var s,u=new hn(e),c=mn(t.outputs,u,{training:!0});for(o=0;o<t.lossFunctions.length;++o){var l=(0,t.lossFunctions[o])(i[o],c[o]);Object(r.qc)(l),s=0===o?l:Object(r.u)(s,l)}for(o=0;o<t.metricsTensors.length;++o){var f=t.metricsTensors[o][0],h=t.metricsTensors[o][1],p=Object(r.qc)(f(i[h],c[h]));Object(r.Rb)(p),a.push(p)}return s=Object(r.qc)(s),t.calculateLosses().forEach(function(t){s=Object(r.u)(s,t)}),s},!0,o)].concat(a)}},e.prototype.makeTestFunction=function(){var t=this;this.testFunction=function(e){return Object(r.ge)(function(){for(var n,i=[],a=e.slice(0,t.inputs.length),o=e.slice(t.inputs.length,t.inputs.length+t.outputs.length),s=[],u=0;u<t.inputs.length;++u)s.push({key:t.inputs[u],value:a[u]});var c=new hn(s),l=mn(t.outputs,c);for(u=0;u<t.lossFunctions.length;++u){var f=t.lossFunctions[u],h=Object(r.qc)(f(o[u],l[u]));n=0===u?h:Object(r.u)(n,h),i.push(n)}for(u=0;u<t.metricsTensors.length;++u){var p=t.metricsTensors[u][0],d=t.metricsTensors[u][1],m=Object(r.qc)(p(o[d],l[d]));i.push(m)}return i})}},e.prototype.fit=function(t,e,n){return void 0===n&&(n={}),u(this,void 0,void 0,function(){return c(this,function(r){return[2,Tn(this,t,e,n)]})})},e.prototype.fitDataset=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){return[2,Sn(this,t,e)]})})},e.prototype.trainOnBatch=function(t,e){return u(this,void 0,void 0,function(){var n,i,a,o,s,u,l,f,h,p,d;return c(this,function(c){switch(c.label){case 0:n=this.standardizeUserData(t,e),i=n[0],a=n[1],o=this.makeTrainFunction(),s=o(i.concat(a)),u=[],l=0,f=s,c.label=1;case 1:return l<f.length?(h=f[l],d=(p=u).push,[4,h.data()]):[3,4];case 2:d.apply(p,[c.sent()[0]]),c.label=3;case 3:return l++,[3,1];case 4:return Object(r.jb)(s),[2,I(u)]}})})},e.prototype.getNamedWeights=function(t){for(var e={},n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,i=this.getWeights(n),a=0;a<r.length;++a)n&&!r[a].trainable||(e[r[a].originalName]=i[a]);return e},Object.defineProperty(e.prototype,"stopTraining",{set:function(t){this.stopTraining_=t},enumerable:!0,configurable:!0}),e.prototype.save=function(t,e){return u(this,void 0,void 0,function(){var n,i,a;return c(this,function(o){switch(o.label){case 0:if("string"==typeof t){if(0===(n=r.Pb.getSaveHandlers(t)).length)throw new w("Cannot find any save handlers for URL '"+t+"'");if(n.length>1)throw new w("Found more than one ("+n.length+") save handlers for URL '"+t+"'");t=n[0]}if(null==t.save)throw new w("Model.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[4,r.Pb.encodeWeights(this.getNamedWeights(e))];case 1:return i=o.sent(),!1,null,a=this.toJSON(null,!1),[2,t.save({modelTopology:a,weightData:i.data,weightSpecs:i.specs})]}})})},e.className="Model",e}(_n);function Fn(t,e,n){return void 0===n&&(n=!0),u(this,void 0,void 0,function(){var i,a,o,s;return c(this,function(u){switch(u.label){case 0:if(null==t.load)throw new w("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return[4,t.load()];case 1:if(i=u.sent(),null!=(a=i.modelTopology).model_config&&(a=a.model_config),o=null!=i.weightData&&null!=i.weightSpecs&&n,s=cn(fn(a),e,o),null!=i.weightData){if(null==i.weightSpecs)throw new w("Model artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");!1,!0,s.loadWeights(r.Pb.decodeWeights(i.weightData,i.weightSpecs),!1,!0,n)}return[2,s]}})})}r.td.registerClass(zn);var Un=function(t){function e(e){var n=t.call(this,{inputs:[],outputs:[]})||this;if(e=e||{},n.trainable=!0,n._updatable=!0,n.built=!1,n.name=null!=e.name?e.name:d("sequential_"),null!=e.layers)for(var r=0,i=e.layers;r<i.length;r++){var a=i[r];n.add(a)}return n}return a(e,t),e.prototype.checkShape=function(t){if(t.inboundNodes[0].outputTensors[0].shape.some(function(t){return t<0}))throw new w("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")},e.prototype.add=function(t){var n,r=t instanceof e||t instanceof zn;if(r){if(1!==(n=t).outputs.length)throw new w("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new w("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new w("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");var i=de({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(r)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new w("A layer added to a Sequential model must not already be connected somewhere else. Model received layer "+t.name+" which has "+t.inboundNodes.length+" pre-existing inbound connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new w("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];var i=n.inboundNodes[r];if(0===i.inboundLayers.length)return i.inputTensors;for(var a=[],o=0;o<i.inboundLayers.length;o++)for(var s=0,u=t(i.inputTensors[o],i.inboundLayers[o],i.nodeIndices[o]);s<u.length;s++){var c=u[s];-1===a.indexOf(c)&&a.push(c)}return a}(this.outputs[0])}this.inboundNodes=[],new ue({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:E(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(function(t){return t.shape}),outputShapes:this.outputs[0].shape})}else{var a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1},e.prototype.pop=function(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{var t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}},e.prototype.call=function(t,e){return null==this.model&&this.build(),this.model.call(t,e)},e.prototype.build=function(t){if(Qt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.model.updatable=this.updatable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0},e.prototype.countParams=function(){return this.built||this.build(),t.prototype.countParams.call(this)},e.prototype.summary=function(e,n,r){void 0===r&&(r=console.log),this.built||this.build(),t.prototype.summary.call(this,e,n,r)},e.prototype.setWeights=function(t){null==this.model&&this.build(),this.model.setWeights(t)},Object.defineProperty(e.prototype,"updatable",{get:function(){return this._updatable},set:function(t){this.built&&(this.model.updatable=t),this._updatable=t},enumerable:!0,configurable:!0}),e.prototype.evaluate=function(t,e,n){if(void 0===n&&(n={}),!this.built)throw new b("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)},e.prototype.evaluateDataset=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){if(!this.built)throw new b("The model needs to be compiled before being used.");return[2,this.model.evaluateDataset(t,e)]})})},e.prototype.predict=function(t,e){return void 0===e&&(e={}),null==this.model&&this.build(),this.model.predict(t,e)},e.prototype.predictOnBatch=function(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)},e.prototype.compile=function(t){this.build(),this.model.compile(t),this.optimizer=this.model.optimizer,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames},e.prototype.fit=function(t,e,n){return void 0===n&&(n={}),u(this,void 0,void 0,function(){return c(this,function(r){if(!this.built)throw new b("The model needs to be compiled before being used.");return[2,this.model.fit(t,e,n)]})})},e.prototype.fitDataset=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){if(!this.built)throw new b("The model needs to be compiled before being used.");return[2,this.model.fitDataset(t,e)]})})},e.prototype.trainOnBatch=function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){return[2,this.model.trainOnBatch(t,e)]})})},e.fromConfig=function(t,n,i,a){var o;void 0===i&&(i={}),void 0===a&&(a=!1);var s={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new w("Legacy serialization format not supported yet.");o=n}else r.qe.assert(null!=n.layers,"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=n.layers,delete n.layers,s=n;var u=new t(s);if(!(u instanceof e))throw new _("Sequential.fromConfig called on non-Sequential input: "+u);for(var c=0,l=o;c<l.length;c++){var f=cn(l[c],void 0,a);a&&f.setFastWeightInitDuringBuild(!0),u.add(f)}return u},Object.defineProperty(e.prototype,"stopTraining",{set:function(t){this.model.stopTraining=t},enumerable:!0,configurable:!0}),e.prototype.getConfig=function(){for(var t=[],e=0,n=this.layers;e<n.length;e++){var r=n[e];t.push({className:r.getClassName(),config:r.getConfig()})}return t},e.className="Sequential",e}(zn);function Vn(t){return new zn(t)}function Wn(t){return new Un(t)}function qn(t,e){return void 0===e&&(e=!0),function(t,e){return void 0===e&&(e=!0),u(this,void 0,void 0,function(){var n;return c(this,function(i){if("string"==typeof t){if(0===(n=r.Pb.getLoadHandlers(t)).length)n.push(r.Pb.browserHTTPRequest(t));else if(n.length>1)throw new w("Found more than one ("+n.length+") load handlers for URL '"+t+"'");t=n[0]}return[2,Fn(t,void 0,e)]})})}(t,e)}function $n(t){return de(t)}function Hn(t,e){Se.registerCallbackConstructor(t,e)}r.td.registerClass(Un);var Kn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.getConfig=function(){return{}},e}(r.td.Serializable),Gn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t,e){return void 0===e&&(e=1),function(t,e){if(void 0===e&&(e=1),1!==e)throw new _("Support for alpha values other than 1 ("+e+") is not implemented yet.");return Object(r.ob)(t)}(t,e)},e.className="elu",e}(Kn);r.td.registerClass(Gn);var Xn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.rd)(t)},e.className="selu",e}(Kn);r.td.registerClass(Xn);var Yn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.fd)(t)},e.className="relu",e}(Kn);r.td.registerClass(Yn);var Jn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.ge)(function(){return Object(r.tc)(y(6),Object(r.fd)(t))})},e.className="relu6",e}(Kn);r.td.registerClass(Jn);var Zn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return t},e.className="linear",e}(Kn);r.td.registerClass(Zn);var Qn=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.wd)(t)},e.className="sigmoid",e}(Kn);r.td.registerClass(Qn);var tr=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return function(t){return Object(r.ge)(function(){var e=Object(r.u)(y(.5),Object(r.zc)(y(.2),t));return Object(r.Q)(e,0,1)})}(t)},e.className="hardSigmoid",e}(Kn);r.td.registerClass(tr);var er=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.Gd)(t)},e.className="softplus",e}(Kn);r.td.registerClass(er);var nr=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return function(t){return Object(r.ge)(function(){return Object(r.lb)(t,Object(r.u)(y(1),Object(r.r)(t)))})}(t)},e.className="softsign",e}(Kn);r.td.registerClass(nr);var rr=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t){return Object(r.Xd)(t)},e.className="tanh",e}(Kn);r.td.registerClass(rr);var ir=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t,e){return void 0===e&&(e=-1),Object(r.Fd)(t,e)},e.className="softmax",e}(Kn);function ar(t){return t.getClassName()}function or(t,e){return void 0===e&&(e={}),T(t,r.td.SerializationMap.getMap().classNameMap,e,"activation")}function sr(t){return null==t?or({className:"linear",config:{}}):"string"==typeof t?or({className:t,config:{}}):t instanceof Kn?t:or(t)}r.td.registerClass(ir);var ur=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e}(r.td.Serializable),cr=function(t){function e(e){var n=t.call(this)||this,r=null==e||null==e.l1?.01:e.l1,i=null==e||null==e.l2?.01:e.l2;return n.hasL1=0!==r,n.hasL2=0!==i,n.l1=y(r),n.l2=y(i),n}return a(e,t),e.prototype.apply=function(t){var e=this;return Object(r.ge)(function(){var n=Object(r.ze)([1]);return e.hasL1&&(n=Object(r.u)(n,Object(r.Vd)(Object(r.zc)(e.l1,Object(r.r)(t))))),e.hasL2&&(n=Object(r.u)(n,Object(r.Vd)(Object(r.zc)(e.l2,Nt(t))))),n.asScalar()})},e.prototype.getConfig=function(){return{l1:this.l1.dataSync()[0],l2:this.l2.dataSync()[0]}},e.fromConfig=function(t,e){return new t({l1:e.l1,l2:e.l2})},e.className="L1L2",e}(ur);r.td.registerClass(cr);var lr={l1l2:"L1L2"};function fr(t){return P(t)}function hr(t,e){return void 0===e&&(e={}),T(t,r.td.SerializationMap.getMap().classNameMap,e,"regularizer")}function pr(t){return null==t?null:"string"==typeof t?hr({className:t in lr?lr[t]:t,config:{}}):t instanceof ur?t:hr(t)}var dr=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;return n.supportsMasking=!0,null!=e&&(n.maxValue=e.maxValue),n}return a(e,t),e.prototype.call=function(t,e){t=Zt(t);var n=Object(r.fd)(t);return null!=this.maxValue&&(n=Object(r.Q)(n,0,this.maxValue)),n},e.prototype.computeOutputShape=function(t){return t},e.prototype.getConfig=function(){var e={maxValue:this.maxValue},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="ReLU",e}(le);r.td.registerClass(dr);var mr=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;return n.DEFAULT_ALPHA=.3,null==e&&(e={}),n.alpha=null==e.alpha?n.DEFAULT_ALPHA:e.alpha,n}return a(e,t),e.prototype.call=function(t,e){var n=Zt(t);return Object(r.Sb)(n,this.alpha)},e.prototype.computeOutputShape=function(t){return t},e.prototype.getConfig=function(){var e={alpha:this.alpha},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="LeakyReLU",e}(le);r.td.registerClass(mr);var gr=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;if(n.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),n.supportsMasking=!0,n.alphaInitializer=Gt(e.alphaInitializer||n.DEFAULT_ALPHA_INITIALIZER),n.alphaRegularizer=pr(e.alphaRegularizer),n.alphaConstraint=K(e.alphaConstraint),null==e.sharedAxes)n.sharedAxes=null;else if(Array.isArray(e.sharedAxes))n.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new w("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);n.sharedAxes=[e.sharedAxes]}return n}return a(e,t),e.prototype.build=function(t){var e=(t=Qt(t)).slice(1);if(null!=this.sharedAxes)for(var n=0,r=this.sharedAxes;n<r.length;n++)e[(a=r[n])-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);var i={};if(null!=this.sharedAxes)for(var a=1;a<t.length;++a)i[a]=t[a];this.inputSpec=[new ae({ndim:t.length,axes:i})],this.built=!0},e.prototype.call=function(t,e){return t=Zt(t),Object(r.Vc)(t,this.alpha.read())},e.prototype.getConfig=function(){var e={alphaInitializer:Kt(this.alphaInitializer),alphaRegularizer:fr(this.alphaRegularizer),alphaConstraint:$(this.alphaConstraint),sharedAxes:this.sharedAxes},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="PReLU",e}(le);r.td.registerClass(gr);var yr=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;if(n.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==n.DEFAULT_ALPHA)throw new _("Non-default alpha value ("+e.alpha+") is not supported by the ELU layer yet.");return n.alpha=null==e.alpha?n.DEFAULT_ALPHA:e.alpha,n}return a(e,t),e.prototype.call=function(t,e){var n=Zt(t);return Object(r.ob)(n)},e.prototype.computeOutputShape=function(t){return t},e.prototype.getConfig=function(){var e={alpha:this.alpha},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="ELU",e}(le);r.td.registerClass(yr);var vr=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;return n.DEFAULT_THETA=1,null==e&&(e={}),n.theta=null==e.theta?n.DEFAULT_THETA:e.theta,n.thetaTensor=y(n.theta),n}return a(e,t),e.prototype.call=function(t,e){var n=Zt(t);return n.mul(dt(n.greater(this.thetaTensor),"float32"))},e.prototype.computeOutputShape=function(t){return t},e.prototype.getConfig=function(){var e={theta:this.theta},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="ThresholdedReLU",e}(le);r.td.registerClass(vr);var br=function(t){function e(e){var n=t.call(this,null==e?{}:e)||this;return n.DEFAULT_AXIS=1,null==e&&(e={}),n.softmax=(new ir).apply,n.axis=null==e.axis?n.DEFAULT_AXIS:e.axis,n}return a(e,t),e.prototype.call=function(t,e){var n=Zt(t);return this.softmax(n,this.axis)},e.prototype.computeOutputShape=function(t){return t},e.prototype.getConfig=function(){var e={axis:this.axis},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Softmax",e}(le);function wr(t,e,n){if("number"==typeof t)return E(t,e);if(t.length!==e)throw new w("The "+n+" argument must be a tuple of "+e+" integers. Received: "+t.length+" elements.");for(var r=0;r<e;++r){var i=t[r];if(!ut(i))throw new w("The "+n+" argument must be a tuple of "+e+" integers. Received: "+JSON.stringify(t)+" including a non-integer number "+i)}return t}function _r(t,e,n,r,i){return void 0===i&&(i=1),null==t?t:(a="same"===n?t:t-(e+(e-1)*(i-1))+1,Math.floor((a+r-1)/r));var a}function xr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ht([n-e,0]);else{if("same"!==r)throw new w("Unsupport padding mode: "+r+".");t*=e}return t}function Er(t,e){return Object(r.ge)(function(){return J(e),"channelsFirst"===e?Object(r.me)(t,[0,2,3,1]):t})}r.td.registerClass(br);var Sr=function(t){function e(n,r){var i=t.call(this,r)||this;if(i.bias=null,i.DEFAULT_KERNEL_INITIALIZER="glorotNormal",i.DEFAULT_BIAS_INITIALIZER="zeros",e.verifyArgs(r),i.rank=n,1!==i.rank&&2!==i.rank)throw new _("Convolution layer for rank other than 1 or 2 ("+i.rank+") is not implemented yet.");if(i.kernelSize=wr(r.kernelSize,n,"kernelSize"),i.strides=wr(null==r.strides?1:r.strides,n,"strides"),i.padding=null==r.padding?"valid":r.padding,Q(i.padding),i.dataFormat=null==r.dataFormat?"channelsLast":r.dataFormat,J(i.dataFormat),i.activation=sr(r.activation),i.useBias=null==r.useBias||r.useBias,i.biasInitializer=Gt(r.biasInitializer||i.DEFAULT_BIAS_INITIALIZER),i.biasConstraint=K(r.biasConstraint),i.biasRegularizer=pr(r.biasRegularizer),i.activityRegularizer=pr(r.activityRegularizer),i.dilationRate=wr(null==r.dilationRate?1:r.dilationRate,n,"dilationRate"),1===i.rank&&Array.isArray(i.dilationRate)&&1!==i.dilationRate.length)throw new w("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(i.dilationRate));if(2===i.rank)if("number"==typeof i.dilationRate)i.dilationRate=[i.dilationRate,i.dilationRate];else if(2!==i.dilationRate.length)throw new w("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(i.dilationRate));return i}return a(e,t),e.verifyArgs=function(t){if(S("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!B(t.kernelSize,"number",1,2))throw new w("BaseConv expects config.kernelSize to be number or number[] with length 1 or 2, but received "+JSON.stringify(t.kernelSize)+".")},e.prototype.getConfig=function(){var e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ar(this.activation),useBias:this.useBias,biasInitializer:Kt(this.biasInitializer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),biasConstraint:$(this.biasConstraint)},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e}(le),Nr=function(t){function e(n,r){var i=t.call(this,n,r)||this;return i.kernel=null,e.verifyArgs(r),i.filters=r.filters,i.kernelInitializer=Gt(r.kernelInitializer||i.DEFAULT_KERNEL_INITIALIZER),i.kernelConstraint=K(r.kernelConstraint),i.kernelRegularizer=pr(r.kernelRegularizer),i}return a(e,t),e.prototype.build=function(t){t=Qt(t);var e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new w("The channel dimension of the input should be defined. Found "+t[e]);var n,r=t[e],i=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:(n={},n[e]=r,n)}],this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e;t=Zt(t);var i=null==n.bias?null:n.bias.read();if(1===n.rank)e=function(t,e,n,i,a,o,s){return void 0===i&&(i=1),void 0===a&&(a="valid"),void 0===s&&(s=1),Object(r.ge)(function(){if(null==o&&(o="channelsLast"),J(o),3!==t.shape.length)throw new w("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new w("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new w("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===o&&(t=Object(r.me)(t,[0,2,1])),"causal"===a)throw new _("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");var u=Object(r.Y)(t,e,i,"same"===a?"same":"valid","NWC",s);return null!=n&&(u=It(u,n)),u})}(t,n.kernel.read(),i,n.strides[0],n.padding,n.dataFormat,n.dilationRate[0]);else if(2===n.rank)e=function(t,e,n,i,a,o,s){return void 0===i&&(i=[1,1]),void 0===a&&(a="valid"),Object(r.ge)(function(){if(null==o&&(o="channelsLast"),J(o),3!==t.rank&&4!==t.rank)throw new w("conv2dWithBias expects input to be of rank 3 or 4, but received "+t.rank+".");if(3!==e.rank&&4!==e.rank)throw new w("conv2dWithBias expects kernel to be of rank 3 or 4, but received "+t.rank+".");var u=Er(t,o);if("causal"===a)throw new _("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Object(r.Z)(u,e,i,"same"===a?"same":"valid","NHWC",s),null!=n&&(u=It(u,n)),"channelsFirst"===o&&(u=Object(r.me)(u,[0,3,1,2])),u})}(t,n.kernel.read(),i,n.strides,n.padding,n.dataFormat,n.dilationRate);else if(3===n.rank)throw new _("3D convolution is not implemented yet.");return null!=n.activation&&(e=n.activation.apply(e)),e})},e.prototype.computeOutputShape=function(t){t=Qt(t);for(var e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2),r=0;r<n.length;++r){var i=_r(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);e.push(i)}var a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e)).push(this.filters):(a.push(this.filters),a=a.concat(e)),a},e.prototype.getConfig=function(){var e={filters:this.filters,kernelInitializer:Kt(this.kernelInitializer),kernelRegularizer:fr(this.kernelRegularizer),kernelConstraint:$(this.kernelConstraint)},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.verifyArgs=function(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new w("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))},e}(Sr),Ir=function(t){function e(n){var r=t.call(this,2,n)||this;return e.verifyArgs(n),r}return a(e,t),e.prototype.getConfig=function(){var e=t.prototype.getConfig.call(this);return delete e.rank,e},e.verifyArgs=function(t){if("number"!=typeof t.kernelSize&&!B(t.kernelSize,"number",1,2))throw new w("Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received "+JSON.stringify(t.kernelSize)+".")},e.className="Conv2D",e}(Nr);r.td.registerClass(Ir);var Or=function(t){function e(e){var n=t.call(this,e)||this;if(n.inputSpec=[new ae({ndim:4})],"same"!==n.padding&&"valid"!==n.padding)throw new w("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+n.padding);return n}return a(e,t),e.prototype.build=function(t){if(4!==(t=Qt(t)).length)throw new w("Input should have rank 4; Received input shape: "+JSON.stringify(t));var e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new w("The channel dimension of the inputs should be defined. Found `None`.");var n,r=t[e],i=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ae({ndim:4,axes:(n={},n[e]=r,n)})],this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e=Zt(t);if(4!==e.shape.length)throw new w("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);var i,a,o=e.shape,s=o[0];"channelsFirst"===n.dataFormat?(i=2,a=3):(i=1,a=2);var u=o[i],c=o[a],l=n.kernelSize[0],f=n.kernelSize[1],h=n.strides[0],p=n.strides[1],d=[s,xr(u,h,l,n.padding),xr(c,p,f,n.padding),n.filters];"channelsLast"!==n.dataFormat&&(e=Object(r.me)(e,[0,2,3,1]));var m=Object(r.bb)(e,n.kernel.read(),d,n.strides,n.padding);return"channelsLast"!==n.dataFormat&&(m=Object(r.me)(m,[0,3,1,2])),null!=n.bias&&(m=It(m,n.bias.read(),n.dataFormat)),null!=n.activation&&(m=n.activation.apply(m)),m})},e.prototype.computeOutputShape=function(t){var e,n,r,i=(t=Qt(t)).slice();"channelsFirst"===this.dataFormat?(e=1,n=2,r=3):(e=3,n=1,r=2);var a=this.kernelSize[0],o=this.kernelSize[1],s=this.strides[0],u=this.strides[1];return i[e]=this.filters,i[n]=xr(i[n],s,a,this.padding),i[r]=xr(i[r],u,o,this.padding),i},e.prototype.getConfig=function(){var e=t.prototype.getConfig.call(this);return delete e.dilationRate,e},e.className="Conv2DTranspose",e}(Ir);r.td.registerClass(Or);var kr=function(t){function e(e){return t.call(this,2,e)||this}return a(e,t),e.className="SeparableConv2D",e}(function(t){function e(e,n){var r=t.call(this,e,n)||this;if(r.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",r.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",r.depthwiseKernel=null,r.pointwiseKernel=null,null==n.filters)throw new w("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=n.kernelInitializer||null!=n.kernelRegularizer||null!=n.kernelConstraint)throw new w("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=n.padding&&"same"!==n.padding&&"valid"!==n.padding)throw new w("SeparableConv"+r.rank+"D supports only padding modes: 'same' and 'valid', but received "+JSON.stringify(n.padding));return r.depthMultiplier=null==n.depthMultiplier?1:n.depthMultiplier,r.depthwiseInitializer=Gt(n.depthwiseInitializer||r.DEFAULT_DEPTHWISE_INITIALIZER),r.depthwiseRegularizer=pr(n.depthwiseRegularizer),r.depthwiseConstraint=K(n.depthwiseConstraint),r.pointwiseInitializer=Gt(n.depthwiseInitializer||r.DEFAULT_POINTWISE_INITIALIZER),r.pointwiseRegularizer=pr(n.pointwiseRegularizer),r.pointwiseConstraint=K(n.pointwiseConstraint),r}return a(e,t),e.prototype.build=function(t){if((t=Qt(t)).length<this.rank+2)throw new w("Inputs to SeparableConv"+this.rank+"D should have rank "+(this.rank+2)+", but received input shape: "+JSON.stringify(t));var e,n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n]||t[n]<0)throw new w("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[n]));for(var r=t[n],i=this.kernelSize.concat([r,this.depthMultiplier]),a=[],o=0;o<this.rank;++o)a.push(1);a.push(r*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new ae({ndim:this.rank+2,axes:(e={},e[n]=r,e)})],this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e;if(t=Zt(t),1===n.rank)throw new _("1D separable convolution is not implemented yet.");return 2===n.rank&&("channelsFirst"===n.dataFormat&&(t=Object(r.me)(t,[0,2,3,1])),e=Object(r.sd)(t,n.depthwiseKernel.read(),n.pointwiseKernel.read(),n.strides,n.padding,n.dilationRate,"NHWC")),n.useBias&&(e=It(e,n.bias.read(),n.dataFormat)),null!=n.activation&&(e=n.activation.apply(e)),"channelsFirst"===n.dataFormat&&(e=Object(r.me)(e,[0,3,1,2])),e})},e.prototype.getConfig=function(){var e=t.prototype.getConfig.call(this);return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Kt(this.depthwiseInitializer),e.pointwiseInitializer=Kt(this.pointwiseInitializer),e.depthwiseRegularizer=fr(this.depthwiseRegularizer),e.pointwiseRegularizer=fr(this.pointwiseRegularizer),e.depthwiseConstraint=$(this.depthwiseConstraint),e.pointwiseConstraint=$(this.pointwiseConstraint),e},e.className="SeparableConv",e}(Nr));r.td.registerClass(kr);var Ar=function(t){function e(n){var r=t.call(this,1,n)||this;return e.verifyArgs(n),r.inputSpec=[{ndim:3}],r}return a(e,t),e.prototype.getConfig=function(){var e=t.prototype.getConfig.call(this);return delete e.rank,delete e.dataFormat,e},e.verifyArgs=function(t){if("number"!=typeof t.kernelSize&&!B(t.kernelSize,"number",1,1))throw new w("Conv1D expects config.kernelSize to be number or number[] with length 1, but received "+JSON.stringify(t.kernelSize)+".")},e.className="Conv1D",e}(Nr);r.td.registerClass(Ar);var Cr=function(t){function e(e){var n=t.call(this,e)||this;return"number"==typeof e.cropping?n.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?n.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:n.cropping=e.cropping,n.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,n.inputSpec=[{ndim:4}],n}return a(e,t),e.prototype.computeOutputShape=function(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return t=Zt(t),"channelsLast"===n.dataFormat?vt(vt(t,n.cropping[0][0],t.shape[1]-n.cropping[0][0]-n.cropping[0][1],2),n.cropping[1][0],t.shape[2]-n.cropping[1][1]-n.cropping[1][0],3):vt(vt(t,n.cropping[0][0],t.shape[2]-n.cropping[0][0]-n.cropping[0][1],3),n.cropping[1][0],t.shape[3]-n.cropping[1][1]-n.cropping[1][0],4)})},e.prototype.getConfig=function(){var e={cropping:this.cropping,dataFormat:this.dataFormat},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Cropping2D",e}(le);r.td.registerClass(Cr);var Pr=function(t){function e(e){var n=t.call(this,e)||this;return n.DEFAULT_SIZE=[2,2],n.inputSpec=[{ndim:4}],n.size=null==e.size?n.DEFAULT_SIZE:e.size,n.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,n}return a(e,t),e.prototype.computeOutputShape=function(t){if("channelsFirst"===this.dataFormat){var e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}return e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2],[t[0],e,n,t[3]]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e=Zt(t),i=e.shape;if("channelsFirst"===n.dataFormat){e=Object(r.me)(e,[0,2,3,1]);var a=n.size[0]*i[2],o=n.size[1]*i[3],s=e.resizeNearestNeighbor([a,o]);return Object(r.me)(s,[0,3,1,2])}return a=n.size[0]*i[1],o=n.size[1]*i[2],e.resizeNearestNeighbor([a,o])})},e.prototype.getConfig=function(){var e={size:this.size,dataFormat:this.dataFormat},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="UpSampling2D",e}(le);r.td.registerClass(Pr);var Tr=function(t){function e(e){var n=t.call(this,2,e)||this;return n.depthwiseKernel=null,n.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,n.depthwiseInitializer=Gt(e.depthwiseInitializer||n.DEFAULT_KERNEL_INITIALIZER),n.depthwiseConstraint=K(e.depthwiseConstraint),n.depthwiseRegularizer=pr(e.depthwiseRegularizer),n}return a(e,t),e.prototype.build=function(t){if((t=Qt(t)).length<4)throw new w("Inputs to DepthwiseConv2D should have rank 4. Received input shape: "+JSON.stringify(t)+".");var e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new w("The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not ("+t[e]+").");var n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e=function(t,e,n,i,a,o){return void 0===n&&(n=[1,1]),void 0===i&&(i="valid"),Object(r.ge)(function(){null==a&&(a="channelsLast"),J(a);var s=Er(t,a);if(4!==t.rank)throw new w("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new w("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return s=Object(r.ib)(s,e,n,"same"===i?"same":"valid","NHWC",o),"channelsFirst"===a&&(s=Object(r.me)(s,[0,3,1,2])),s})}(t=Zt(t),n.depthwiseKernel.read(),n.strides,n.padding,n.dataFormat,null);return n.useBias&&(e=It(e,n.bias.read(),n.dataFormat)),null!=n.activation&&(e=n.activation.apply(e)),e})},e.prototype.computeOutputShape=function(t){t=Qt(t);var e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=_r(e,this.kernelSize[0],this.padding,this.strides[0]),a=_r(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,i,a]:[t[0],i,a,r]},e.prototype.getConfig=function(){var e=t.prototype.getConfig.call(this);return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Kt(this.depthwiseInitializer),e.depthwiseRegularizer=fr(this.depthwiseRegularizer),e.depthwiseConstraint=$(this.depthwiseRegularizer),e},e.className="DepthwiseConv2D",e}(Sr);r.td.registerClass(Tr);var Rr=function(t){function e(e){var n=t.call(this,e)||this;if(n.rate=Math.max(Math.min(e.rate,1),0),n.rateScalar=y(n.rate),n.noiseShape=e.noiseShape,n.seed=e.seed,null!=n.seed)throw new _("Non-default seed is not implemented in Dropout layer yet: "+n.seed);return n.supportsMasking=!0,n}return a(e,t),e.prototype.getNoiseShape=function(t){if(null==this.noiseShape)return this.noiseShape;for(var e=t.shape,n=[],r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e);var i=Zt(t);if(null!=n.noiseShape&&!r.qe.arraysEqual(i.shape,n.noiseShape))throw new _("Non-default noise shape is not implemented in Dropout layer yet: "+JSON.stringify(n.noiseShape));if(0<n.rate&&n.rate<1){var a=null!=e.training&&e.training,o=n.getNoiseShape(i);return kt(function(){return Ot(i,n.rateScalar,o,n.seed)},function(){return i},a)}return t})},e.prototype.getConfig=function(){var e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Dropout",e}(le);r.td.registerClass(Rr);var Dr=function(t){function e(e){var n=t.call(this,e)||this;if(n.activation=null,n.useBias=!0,n.kernel=null,n.bias=null,n.DEFAULT_KERNEL_INITIALIZER="glorotNormal",n.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){var r=null;null!=e.batchSize&&(r=e.batchSize),n.batchInputShape=[r,e.inputDim]}return n.units=e.units,n.activation=sr(e.activation),null!=e.useBias&&(n.useBias=e.useBias),n.kernelInitializer=Gt(e.kernelInitializer||n.DEFAULT_KERNEL_INITIALIZER),n.biasInitializer=Gt(e.biasInitializer||n.DEFAULT_BIAS_INITIALIZER),n.kernelConstraint=K(e.kernelConstraint),n.biasConstraint=K(e.biasConstraint),n.kernelRegularizer=pr(e.kernelRegularizer),n.biasRegularizer=pr(e.biasRegularizer),n.activityRegularizer=pr(e.activityRegularizer),n.supportsMasking=!0,n.inputSpec=[{minNDim:2}],n}return a(e,t),e.prototype.build=function(t){var e,n=(t=Qt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:(e={},e[-1]=n,e)}],this.built=!0},e.prototype.computeOutputShape=function(t){var e=(t=Qt(t)).slice();return e[e.length-1]=this.units,e},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e);var r=Et(Zt(t),n.kernel.read());return null!=n.bias&&(r=It(r,n.bias.read())),null!=n.activation&&(r=n.activation.apply(r)),r})},e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),biasInitializer:Kt(this.biasInitializer),kernelRegularizer:fr(this.kernelRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),biasConstraint:$(this.biasConstraint)},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Dense",e}(le);r.td.registerClass(Dr);var Mr=function(t){function e(e){var n=t.call(this,e||{})||this;return n.inputSpec=[{minNDim:3}],n}return a(e,t),e.prototype.computeOutputShape=function(t){for(var e=0,n=(t=Qt(t)).slice(1);e<n.length;e++)if(null==n[e])throw new w('The shape of the input to "Flatten" is not fully defined (got '+t.slice(1)+'). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],ct(t,1)]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return n.invokeCallHook(t,e),function(t){if(t.rank<=1)throw new w("batchFlatten requires a minimum rank of 2. Got rank: "+t.rank+".");var e=[t.shape[0],ct(t.shape,1)];return t.reshape(e)}(Zt(t))})},e.className="Flatten",e}(le);r.td.registerClass(Mr);var jr=function(t){function e(e){var n=t.call(this,e)||this;return n.supportsMasking=!0,n.activation=sr(e.activation),n}return a(e,t),e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e);var r=Zt(t);return n.activation.apply(r)})},e.prototype.getConfig=function(){var e={activation:ar(this.activation)},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Activation",e}(le);r.td.registerClass(jr);var Br=function(t){function e(e){var n=t.call(this,e)||this;return n.n=e.n,n.inputSpec=[{ndim:2}],n}return a(e,t),e.prototype.computeOutputShape=function(t){return[t[0],this.n,t[1]]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return function(t,e){return Object(r.ge)(function(){if(2!==t.shape.length)throw new w("repeat() expects a rank-2 tensor, but received a rank-"+t.shape.length+" tensor.");return _t(mt(t,1),[1,e,1])})}(t=Zt(t),n.n)})},e.prototype.getConfig=function(){var e={n:this.n},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="RepeatVector",e}(le);r.td.registerClass(Br);var Lr=function(t){function e(e){var n=t.call(this,e)||this;n.targetShape=e.targetShape;for(var r=0;r<n.targetShape.length;++r)n.isUnknown(n.targetShape[r])&&(n.targetShape[r]=null);return n}return a(e,t),e.prototype.isUnknown=function(t){return t<0||null==t},e.prototype.fixUnknownDimension=function(t,e){for(var n="Total size of new array must be unchanged.",r=e.slice(),i=1,a=null,o=0;o<r.length;++o){var s=r[o];if(this.isUnknown(s)){if(null!==a)throw new w("Can only specifiy one unknown dimension.");a=o}else i*=s}var u=ct(t);if(null!==a){if(0===i||u%i!=0)throw new w(n);r[a]=u/i}else if(u!==i)throw new w(n);return r},e.prototype.computeOutputShape=function(t){for(var e=!1,n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e);var r=Zt(t),i=r.shape,a=i.slice(0,1).concat(n.fixUnknownDimension(i.slice(1),n.targetShape));return r.reshape(a)})},e.prototype.getConfig=function(){var e={targetShape:this.targetShape},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Reshape",e}(le);r.td.registerClass(Lr);var zr=function(t){function e(e){var n=t.call(this,e)||this;if(null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");var i=pt(1,e.dims.length+1);if(!r.qe.arraysEqual(e.dims.slice().sort(),i))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");return n.dims=e.dims,n.dimsIncludingBatch=[0].concat(n.dims),n.inputSpec=[new ae({ndim:n.dims.length+1})],n}return a(e,t),e.prototype.computeOutputShape=function(t){var e=(t=Qt(t)).slice();return this.dims.forEach(function(n,r){e[r+1]=t[n]}),e},e.prototype.call=function(t,e){return Object(r.me)(Zt(t),this.dimsIncludingBatch)},e.prototype.getConfig=function(){var e={dims:this.dims},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Permute",e}(le);r.td.registerClass(zr);var Fr=function(t){function e(e){var n=t.call(this,e)||this;if(n.embeddings=null,n.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){var r=null;null!=e.batchSize&&(r=e.batchSize),null==e.inputLength?n.batchInputShape=[r,null]:n.batchInputShape=[r].concat(O(e.inputLength))}return n.inputDim=e.inputDim,n.outputDim=e.outputDim,n.embeddingsInitializer=Gt(e.embeddingsInitializer||n.DEFAULT_EMBEDDINGS_INITIALIZER),n.embeddingsRegularizer=pr(e.embeddingsRegularizer),n.activityRegularizer=pr(e.activityRegularizer),n.embeddingsConstraint=K(e.embeddingsConstraint),n.maskZero=e.maskZero,n.supportsMasking=e.maskZero,n.inputLength=e.inputLength,n}return a(e,t),e.prototype.build=function(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0},e.prototype.warnOnIncompatibleInputShape=function(t){},e.prototype.computeMask=function(t,e){var n=this;return Object(r.ge)(function(){return n.maskZero?(t=Zt(t),Object(r.Gc)(t,Object(r.Ae)(t))):null})},e.prototype.computeOutputShape=function(t){if(t=Qt(t),null==this.inputLength)return t.concat([this.outputDim]);var e=O(this.inputLength);if(e.length!==t.length-1)throw new w('"inputLength" is '+this.inputLength+", but received input shape has shape "+t);for(var n=0,r=0;r<e.length;++r){var i=e[r],a=t[r+1];if(null!=i&&null!=a&&i!==a)throw new w('"inputLength" is '+this.inputLength+", but received input shape has shape "+t);null==i&&(e[n]=a),n++}return[t[0]].concat(e,[this.outputDim])},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e);var r=Zt(t);return"int32"!==r.dtype&&(r=dt(r,"int32")),St(n.embeddings.read(),r.as1D()).reshape(Qt(n.computeOutputShape(r.shape)))})},e.prototype.getConfig=function(){var e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Kt(this.embeddingsInitializer),embeddingsRegularizer:fr(this.embeddingsRegularizer),activityRegularizer:fr(this.activityRegularizer),embeddingsConstraint:$(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Embedding",e}(le);r.td.registerClass(Fr);var Ur=function(t){function e(e){var n=t.call(this,e||{})||this;return n.supportsMasking=!0,n}return a(e,t),e.prototype.mergeFunction=function(t){throw new _},e.prototype.computeElementwiseOpOutputShape=function(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;for(var n=t.slice(0,t.length-e.length),r=0;r<e.length;++r){var i=t[t.length-e.length+r],a=e[r];if(null==i||null==a||i<0||a<0)n.push(null);else if(1===i)n.push(a);else if(1===a)n.push(i);else{if(i!==a)throw new w("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(i)}}return n},e.prototype.build=function(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Qt(t)]),(t=t).length<2)throw new w("A merge layer should be called on an Array of at least 2 inputs. Got "+t.length+" input(s).");for(var e=[],n=0,r=t;n<r.length;n++)null!=(o=r[n])&&null!==o[0]&&e.push(o[0]);if((e=D(e)).length>1)throw new w("Can not merge tensors with different batch sizes. Got tensors with shapes: "+JSON.stringify(t)+".");for(var i=null==t[0]?null:t[0].slice(1),a=1;a<t.length;++a){var o=null==t[a]?null:t[a].slice(1);i=this.computeElementwiseOpOutputShape(i,o)}var s=t.map(function(t){return t.length});-1===t.indexOf(null)&&1===D(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){if(t=t,n.reshapeRequired){var e=[],i=t.map(function(t){return t.rank});if(-1===i.indexOf(null)){for(var a=ht(i),o=0,s=t;o<s.length;o++){for(var u=(p=s[o]).rank,c=0;c<a-u;++c)p=mt(p,1);e.push(p)}return n.mergeFunction(e)}for(var l=!1,f=0,h=t;f<h.length;f++){var p;if(null==(u=(p=h[f]).rank)){var d=p.shape,m=d[0],g=d.slice(1).concat([m]),y=p.reshape([m].concat(ct(d.slice(1))));y=(y=Object(r.me)(y,[1,0])).reshape(g),e.push(y),l=!0}else if(u>1){var v=pt(1,u).concat([0]);e.push(Object(r.me)(p,v)),l=!0}else e.push(p)}var b=n.mergeFunction(e),w=b.rank;if(l)if(null==w){var _=b.shape;g=[m=_[_.length-1]].concat(_.slice(0,_.length-1)),b=Object(r.me)(b.reshape([-1,m]),[1,0]).reshape(g)}else w>1&&(v=[w-1].concat(pt(0,w-1)),b=Object(r.me)(b,v));return b}return n.mergeFunction(t)})},e.prototype.computeOutputShape=function(t){var e;e=null==(t=t)[0]?null:t[0].slice(1);for(var n=1;n<t.length;++n){var r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}for(var i=[],a=0,o=t;a<o.length;a++)null!=(r=o[a])&&null!==r[0]&&i.push(r[0]);return 1===(i=D(i)).length?i.concat(e):[null].concat(e)},e.prototype.computeMask=function(t,e){return Object(r.ge)(function(){if(null==e)return null;if(!Array.isArray(e))throw new w("`mask` should be an Array");if(!Array.isArray(t))throw new w("`inputs` should be an Array");if(e.length!==t.length)throw new w("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths ("+t.length+" vs "+e.length+")");if(e.every(function(t){return null==t}))return null;for(var n=(e=e.map(function(t){return null==t?t:Object(r.vb)(t,0)}))[0],i=1;i<e.length-1;++i)n=Object(r.fc)(n,e[i]);return n})},e}(le),Vr=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.mergeFunction=function(t){return Object(r.ge)(function(){for(var e=t[0].clone(),n=1;n<t.length;++n)e=Object(r.u)(e,t[n]);return e})},e.className="Add",e}(Ur);r.td.registerClass(Vr);var Wr=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.mergeFunction=function(t){return Object(r.ge)(function(){for(var e=t[0].clone(),n=1;n<t.length;++n)e=Object(r.zc)(e,t[n]);return e})},e.className="Multiply",e}(Ur);r.td.registerClass(Wr);var qr=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.mergeFunction=function(t){return Object(r.ge)(function(){for(var e=t[0].clone(),n=1;n<t.length;++n)e=Object(r.u)(e,t[n]);return Object(r.zc)(y(1/t.length),e)})},e.className="Average",e}(Ur);r.td.registerClass(qr);var $r=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.mergeFunction=function(t){return Object(r.ge)(function(){for(var e=t[0],n=1;n<t.length;++n)e=Object(r.oc)(e,t[n]);return e})},e.className="Maximum",e}(Ur);r.td.registerClass($r);var Hr=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.mergeFunction=function(t){return Object(r.ge)(function(){for(var e=t[0],n=1;n<t.length;++n)e=Object(r.tc)(e,t[n]);return e})},e.className="Minimum",e}(Ur);r.td.registerClass(Hr);var Kr=function(t){function e(e){var n=t.call(this,e)||this;return n.DEFAULT_AXIS=-1,null==e&&(e={}),n.axis=null==e.axis?n.DEFAULT_AXIS:e.axis,n.supportsMasking=!0,n.reshapeRequired=!1,n}return a(e,t),e.prototype.build=function(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new w("A `Concatenate` layer should be called on a list of at least 2 inputs");for(var e=!0,n=0,i=t=t;n<i.length;n++)if(null!=(f=i[n])){e=!1;break}if(!e){for(var a=[],o=0;o<t.length;++o){var s=t[o].slice();s.splice(this.axis,1);for(var u=!1,c=0,l=a;c<l.length;c++){var f=l[c];if(r.qe.arraysEqual(f,s)){u=!0;break}}u||a.push(s)}if(a.length>1)throw new w("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}},e.prototype.mergeFunction=function(t){var e=this;return Object(r.ge)(function(){return bt(t,e.axis)})},e.prototype.computeOutputShape=function(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new w("A `Concatenate` layer should be called on a list of inputs.");for(var e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis,i=0,a=e.slice(1);i<a.length;i++){var o=a[i];if(null==n[r]||null==o[r]){n[r]=null;break}n[r]+=o[r]}return n},e.prototype.computeMask=function(t,e){var n=this;if(null==e)return null;if(!Array.isArray(e))throw new w("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new w("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new w("Mismatch in the length of mask ("+e.length+") and the legnth of inputs ("+t.length+")");return Object(r.ge)(function(){var i=!0;if(e.forEach(function(t){null==t||(i=!1)}),i)return null;for(var a=[],o=0;o<t.length;++o)null==e[o]?a.push(Object(r.Kc)(t[o]).asType("bool")):e[o].rank<t[o].rank?a.push(Object(r.vb)(e[o],-1)):a.push(e[o]);var s=Object(r.T)(a,n.axis);return Object(r.x)(s,-1,!1)})},e.prototype.getConfig=function(){var e={axis:this.axis},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Concatenate",e}(Ur);function Gr(t,e){for(;t<0;)t+=e;return t}r.td.registerClass(Kr);var Xr=function(t){function e(e){var n=t.call(this,e)||this;return n.axes=e.axes,n.normalize=null!=e.normalize&&e.normalize,n.supportsMasking=!0,n.reshapeRequired=!1,n}return a(e,t),e.prototype.build=function(t){r.qe.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),"A `Dot` layer should be called on a list of exactly 2 inputs.");var e=t[0],n=t[1];if(e.length>3||n.length>3)throw new _("Dot layer does not support tensors of 4D or higher rank yet.");var i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new w("Dimension incompatibility: "+e[i[0]]+" !== "+n[i[1]])},e.prototype.mergeFunction=function(t){if(2!==t.length)throw new w("A `Dot` layer must be called on exactly 2 inputs, but received "+t.length+" input(s).");var e,n=t[0],i=t[1];return e=Array.isArray(this.axes)?this.axes.map(function(e,n){return Gr(e,t[n].shape.length)}):[Gr(this.axes,n.shape.length),Gr(this.axes,i.shape.length)],this.normalize&&(n=Ie(n,e[0]),i=Ie(i,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new _("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.qe.assert(t.shape.length>=2,"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),r.qe.assert(t.shape.length>=2,"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new _("batchDot is not implemented for complex64-type Tensors yet.");var i=t.shape.length,a=e.shape.length;null==n&&(n=[i-1,a-2]);var o=n;return Object(r.ge)(function(){var n,r;if(i>a){n=i-a;for(var s=[],u=0;u<n;++u)s.push(1);e=e.reshape(e.shape.concat(s))}else if(a>i){for(n=a-i,s=[],u=0;u<n;++u)s.push(1);t=t.reshape(t.shape.concat(s))}else n=0;if(2===t.shape.length&&2===e.shape.length)r=o[0]===o[1]?t.mulStrict(e).sum(o[0]):t.transpose([1,0]).mulStrict(e).sum(o[1]);else{var c=o[0]!==t.shape.length-1||null,l=o[1]===e.shape.length-1||null;r=t.matMul(e,c,l)}if(n>0){var f,h=[];for(u=f=i>a?i+a-3:i-1;u<f+n;++u)h.push(u);r=r.squeeze(h)}return 1===r.shape.length&&(r=r.expandDims(1)),r})}(n,i,e)},e.prototype.interpretAxes=function(t,e){return Array.isArray(this.axes)?this.axes:[Gr(this.axes,t.length),Gr(this.axes,e.length)]},e.prototype.computeOutputShape=function(t){r.qe.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),"A `Dot` layer should be called on a list of exactly 2 inputs.");var e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new _("Dot layer does not support tensors of 4D or higher rank yet.");var i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);var a=e.concat(n);return 1===a.length&&a.push(1),a},e.prototype.computeMask=function(t,e){return null},e.prototype.getConfig=function(){var e={axes:this.axes,normalize:this.normalize},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="Dot",e}(Ur);function Yr(t,e,n,i,a,o){var s;if(void 0===o&&(o=.001),2===t.rank)s=Object(r.J)(t,e,n,o,a,i);else if(3===t.rank)s=Object(r.K)(t,e,n,o,a,i);else{if(4!==t.rank)throw new _("batchNormalization is not implemented for array of rank "+t.rank+" yet");s=Object(r.L)(t,e,n,o,a,i)}return s}function Jr(t,e,n,i,a){return void 0===a&&(a=.001),r.qe.arraysEqual(i.slice().sort(),pt(0,t.rank-1))?function(t,e,n,i,a){return void 0===a&&(a=.001),Object(r.ge)(function(){var o=Object(r.xc)(t,i),s=o.mean,u=o.variance;return[Yr(t,s,u,n,e,a),s,u]})}(t,e,n,i,a):function(t,e,n,i,a){return void 0===a&&(a=.001),Object(r.ge)(function(){for(var o=Object(r.xc)(t,i),s=o.mean,u=o.variance,c=[],l=0,f=pt(0,t.rank);l<f.length;l++){var h=f[l];-1!==i.indexOf(h)?c.push(1):c.push(t.shape[h])}var p=s.reshape(c),d=u.reshape(c),m=null==e?null:e.reshape(c),g=null==n?null:n.reshape(c);return[Yr(t,p,d,g,m,a),s,u]})}(t,e,n,i,a)}r.td.registerClass(Xr);var Zr=function(t){function e(e){var n=this;return null==e&&(e={}),(n=t.call(this,e)||this).supportsMasking=!0,n.axis=null==e.axis?-1:e.axis,n.momentum=null==e.momentum?.99:e.momentum,n.epsilon=null==e.epsilon?.001:e.epsilon,n.center=null==e.center||e.center,n.scale=null==e.scale||e.scale,n.betaInitializer=Gt(e.betaInitializer||"zeros"),n.gammaInitializer=Gt(e.gammaInitializer||"ones"),n.movingMeanInitializer=Gt(e.movingMeanInitializer||"zeros"),n.movingVarianceInitializer=Gt(e.movingVarianceInitializer||"ones"),n.betaConstraint=K(e.betaConstraint),n.gammaConstraint=K(e.gammaConstraint),n.betaRegularizer=pr(e.betaRegularizer),n.gammaRegularizer=pr(e.gammaRegularizer),n}return a(e,t),e.prototype.build=function(t){t=Qt(t);var e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new w("Axis "+e+" of input tensor should have a defined dimension but the layer received an input with shape "+JSON.stringify(t)+".");this.inputSpec=[new ae({ndim:t.length,axes:(r={},r[e]=n,r)})];var r,i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var i=null!=e.training&&e.training,a=Zt(t),o=a.shape,s=o.length,u=pt(0,s),c=n.axis>=0?n.axis:n.axis+s;u.splice(c,1);var l=E(1,s);l[c]=o[c];var f=u.slice();f.sort();var h=!r.qe.arraysEqual(f,pt(0,s).slice(0,s-1));if(!i)return function(){if(h){var t=n.movingMean.read().reshape(l),e=n.movingVariance.read().reshape(l),r=n.center?n.beta.read().reshape(l):null,i=n.scale?n.gamma.read().reshape(l):null;return Yr(a,t,e,r,i,n.epsilon)}return Yr(a,n.movingMean.read(),n.movingVariance.read(),null==n.beta?null:n.beta.read(),null==n.gamma?null:n.gamma.read(),n.epsilon)}();var p=Jr(a,n.gamma.read(),n.beta.read(),u,n.epsilon),d=p[0],m=p[1],g=p[2],v=function(t,e,n){Object(r.ge)(function(){var r=y(1).sub(y(n)),i=t.read(),a=i.sub(e).mul(r);t.write(i.sub(a))})};return v(n.movingMean,m,n.momentum),v(n.movingVariance,g,n.momentum),d})},e.prototype.getConfig=function(){var e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kt(this.betaInitializer),gammaInitializer:Kt(this.gammaInitializer),movingMeanInitializer:Kt(this.movingMeanInitializer),movingVarianceInitializer:Kt(this.movingVarianceInitializer),betaRegularizer:fr(this.betaRegularizer),gammaRegularizer:fr(this.gammaRegularizer),betaConstraint:$(this.betaConstraint),gammaConstraint:$(this.gammaConstraint)},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="BatchNormalization",e}(le);r.td.registerClass(Zr);var Qr=function(t){function e(e){var n=this;if(null==e&&(e={}),(n=t.call(this,e)||this).dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)n.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)n.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new w("ZeroPadding2D expects padding to be a length-2 array, but received a length-"+e.padding.length+" array.");var r=void 0,i=void 0;if("number"==typeof e.padding[0])r=[e.padding[0],e.padding[0]],i=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new w("ZeroPadding2D expects height padding to be a length-2 array, but received a length-"+e.padding[0].length+" array.");if(r=e.padding[0],2!==e.padding[1].length)throw new w("ZeroPadding2D expects width padding to be a length-2 array, but received a length-"+e.padding[1].length+" array.");i=e.padding[1]}n.padding=[r,i]}return n.inputSpec=[new ae({ndim:4})],n}return a(e,t),e.prototype.computeOutputShape=function(t){var e,n;return t=Qt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return function(t,e,n){return Object(r.ge)(function(){if(4!==t.rank)throw new w("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new w("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new w("Unknown data format: "+n+". Supported data formats are 'channelsLast' and 'channelsFirst.");var i;return i="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],Object(r.Nc)(t,i)})}(Zt(t),n.padding,n.dataFormat)})},e.prototype.getConfig=function(){var e={padding:this.padding,dataFormat:this.dataFormat},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="ZeroPadding2D",e}(le);function ti(t,e,n,i,a,o){return Object(r.ge)(function(){var s;J(a),function(t){j(tt,"PoolMode",t)}(o),Q(i),null==n&&(n=[1,1]),null==i&&(i="valid"),null==a&&(a="channelsLast"),null==o&&(o="max"),t=Er(t,a);var u="same"===i?"same":"valid";return s="max"===o?Object(r.nc)(t,e,n,u):Object(r.G)(t,e,n,u),"channelsFirst"===a&&(s=Object(r.me)(s,[0,3,1,2])),s})}r.td.registerClass(Qr);var ei=function(t){function e(e){var n=this;if(null==e.poolSize&&(e.poolSize=2),n=t.call(this,e)||this,"number"==typeof e.poolSize)n.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new w("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));n.poolSize=e.poolSize}if(null==e.strides)n.strides=n.poolSize;else if("number"==typeof e.strides)n.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new w("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));n.strides=e.strides}return n.padding=null==e.padding?"valid":e.padding,Q(n.padding),n.inputSpec=[new ae({ndim:3})],n}return a(e,t),e.prototype.computeOutputShape=function(t){var e=_r((t=Qt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){n.invokeCallHook(t,e),t=mt(Zt(t),2);var i=n.poolingFunction(Zt(t),[n.poolSize[0],1],[n.strides[0],1],n.padding,"channelsLast");return Object(r.Pd)(i,[2])})},e.prototype.getConfig=function(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e}(le),ni=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.poolingFunction=function(t,e,n,r,i){return J(i),Q(r),ti(t,e,n,r,i,"max")},e.className="MaxPooling1D",e}(ei);r.td.registerClass(ni);var ri=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.poolingFunction=function(t,e,n,r,i){return J(i),Q(r),ti(t,e,n,r,i,"avg")},e.className="AveragePooling1D",e}(ei);r.td.registerClass(ri);var ii=function(t){function e(e){var n=this;if(null==e.poolSize&&(e.poolSize=[2,2]),(n=t.call(this,e)||this).poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)n.strides=n.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new w("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");n.strides=e.strides}else n.strides=[e.strides,e.strides];return n.padding=null==e.padding?"valid":e.padding,n.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,J(n.dataFormat),Q(n.padding),n.inputSpec=[new ae({ndim:4})],n}return a(e,t),e.prototype.computeOutputShape=function(t){t=Qt(t);var e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=_r(e,this.poolSize[0],this.padding,this.strides[0]),n=_r(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return n.invokeCallHook(t,e),n.poolingFunction(Zt(t),n.poolSize,n.strides,n.padding,n.dataFormat)})},e.prototype.getConfig=function(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e}(le),ai=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.poolingFunction=function(t,e,n,r,i){return J(i),Q(r),ti(t,e,n,r,i,"max")},e.className="MaxPooling2D",e}(ii);r.td.registerClass(ai);var oi=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.poolingFunction=function(t,e,n,r,i){return J(i),Q(r),ti(t,e,n,r,i,"avg")},e.className="AveragePooling2D",e}(ii);r.td.registerClass(oi);var si=function(t){function e(e){var n=t.call(this,e)||this;return n.inputSpec=[new ae({ndim:3})],n}return a(e,t),e.prototype.computeOutputShape=function(t){return[t[0],t[2]]},e.prototype.call=function(t,e){throw new _},e}(le),ui=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.call=function(t,e){return Object(r.ge)(function(){var e=Zt(t);return Object(r.qc)(e,1)})},e.className="GlobalAveragePooling1D",e}(si);r.td.registerClass(ui);var ci=function(t){function e(e){return t.call(this,e)||this}return a(e,t),e.prototype.call=function(t,e){return Object(r.ge)(function(){var e=Zt(t);return Object(r.mc)(e,1)})},e.className="GlobalMaxPooling1D",e}(si);r.td.registerClass(ci);var li=function(t){function e(e){var n=t.call(this,e)||this;return n.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,J(n.dataFormat),n.inputSpec=[new ae({ndim:4})],n}return a(e,t),e.prototype.computeOutputShape=function(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]},e.prototype.call=function(t,e){throw new _},e.prototype.getConfig=function(){var e={dataFormat:this.dataFormat},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e}(le),fi=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e=Zt(t);return"channelsLast"===n.dataFormat?Object(r.qc)(e,[1,2]):Object(r.qc)(e,[2,3])})},e.className="GlobalAveragePooling2D",e}(li);r.td.registerClass(fi);var hi=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var e=Zt(t);return"channelsLast"===n.dataFormat?Object(r.mc)(e,[1,2]):Object(r.mc)(e,[2,3])})},e.className="GlobalMaxPooling2D",e}(li);function pi(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new w("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function i(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=i(e),constants:n=i(n)}}function di(t,e,n,i,a,o,s,u){return void 0===i&&(i=!1),void 0===s&&(s=!1),void 0===u&&(u=!1),Object(r.ge)(function(){var c=e.shape.length;if(c<3)throw new w("Input should be at least 3D, but is "+c+"D.");var l=[1,0].concat(pt(2,c));if(e=Object(r.me)(e,l),null!=o)throw new _("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===c-1&&(a=Object(r.vb)(a,-1)),a=Object(r.me)(a,l)),i&&(e=Object(r.hd)(e,0),null!=a&&(a=Object(r.hd)(a,0)));var f,h,p=[],d=n,m=e.shape[0],g=Object(r.pe)(e);null!=a&&(h=Object(r.pe)(a));for(var y,v=function(e){var n=g[e],i=Object(r.ge)(function(){return t(n,d)});if(null==a)f=i[0],d=i[1];else{var o=Object(r.ge)(function(){var t=h[e],n=Object(r.Kc)(t).sub(t);return{output:i[0].mul(t).addStrict(d[0].mul(n)),newStates:d.map(function(e,r){return i[1][r].mul(t).addStrict(e.mul(n))})}});f=o.output,d=o.newStates}u&&p.push(f)},b=0;b<m;++b)v(b);return u&&(y=Object(r.Qd)(p,1)),[f,y,d]})}r.td.registerClass(hi);var mi=function(t){function e(e){var n,r=t.call(this,e)||this;if(null==e.cell)throw new w("cell property is missing for the constructor of RNN.");if(null==(n=Array.isArray(e.cell)?new Ei({cells:e.cell}):e.cell).stateSize)throw new w("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");return r.cell=n,r.returnSequences=null!=e.returnSequences&&e.returnSequences,r.returnState=null!=e.returnState&&e.returnState,r.goBackwards=null!=e.goBackwards&&e.goBackwards,r._stateful=null!=e.stateful&&e.stateful,r.unroll=null!=e.unroll&&e.unroll,r.supportsMasking=!0,r.inputSpec=[new ae({ndim:3})],r.stateSpec=null,r.states_=null,r.numConstants=null,r.keptStates=[],r}return a(e,t),e.prototype.getStates=function(){return null==this.states_?pt(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(function(t){return null}):this.states_},e.prototype.setStates=function(t){this.states_=t},e.prototype.computeOutputShape=function(t){Yt(t)&&(t=t[0]),t=t;var e=this.cell.stateSize;Array.isArray(e)||(e=[e]);var n,r=e[0];if(n=this.returnSequences?[t[0],t[1],r]:[t[0],r],this.returnState){for(var i=[],a=0,o=e;a<o.length;a++){var s=o[a];i.push([t[0],s])}return[n].concat(i)}return n},e.prototype.computeMask=function(t,e){var n=this;return Object(r.ge)(function(){Array.isArray(e)&&(e=e[0]);var t=n.returnSequences?e:null;if(n.returnState){var r=n.states.map(function(t){return null});return[t].concat(r)}return t})},Object.defineProperty(e.prototype,"states",{get:function(){if(null==this.states_){for(var t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[],n=0;n<t;++n)e.push(null);return e}return this.states_},set:function(t){this.states_=t},enumerable:!0,configurable:!0}),e.prototype.build=function(t){if(null!=this.numConstants)throw new _("Constants support is not implemented in RNN yet.");Yt(t)&&(t=t[0]),t=t;var e=this.stateful?t[0]:null,n=t[t.length-1];this.inputSpec[0]=new ae({shape:[e,null,n]});var i,a=[t[0]].concat(t.slice(2));if(this.cell.build(a),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.qe.arraysEqual(this.stateSpec.map(function(t){return t.shape[t.shape.length-1]}),i))throw new w("An initialState was passed that is not compatible with cell.stateSize. Received stateSpec="+this.stateSpec+"; However cell.stateSize is "+this.cell.stateSize)}else this.stateSpec=i.map(function(t){return new ae({shape:[null,t]})});this.stateful&&this.resetStates()},e.prototype.resetStates=function(t,e){var n=this;void 0===e&&(e=!1),Object(r.ge)(function(){if(!n.stateful)throw new v("Cannot call resetStates() on an RNN Layer that is not stateful.");var i=n.inputSpec[0].shape[0];if(null==i)throw new w("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==n.states_)Array.isArray(n.cell.stateSize)?n.states_=n.cell.stateSize.map(function(t){return Object(r.ze)([i,t])}):n.states_=[Object(r.ze)([i,n.cell.stateSize])];else if(null==t)Object(r.jb)(n.states_),null!=n.keptStates&&(Object(r.jb)(n.keptStates),n.keptStates=[]),Array.isArray(n.cell.stateSize)?n.states_=n.cell.stateSize.map(function(t){return Object(r.ze)([i,t])}):n.states_[0]=Object(r.ze)([i,n.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==n.states_.length)throw new w("Layer "+n.name+" expects "+n.states_.length+" state(s), but it received "+t.length+" state value(s). Input received: "+t);!0===e?n.keptStates.push(n.states_.slice()):Object(r.jb)(n.states_);for(var a=0;a<n.states_.length;++a){var o=t[a],s=Array.isArray(n.cell.stateSize)?n.cell.stateSize[a]:n.cell.stateSize,u=[i,s];if(!r.qe.arraysEqual(o.shape,u))throw new w("State "+a+" is incompatible with layer "+n.name+": expected shape="+u+", received shape="+o.shape);n.states_[a]=o}}n.states_.forEach(function(t){return Object(r.Rb)(t)})})},e.prototype.apply=function(e,n){var r=null==n?null:n.initialState,i=null==n?null:n.constants;null==n&&(n={});var a=pi(e,r,i,this.numConstants);e=a.inputs,r=a.initialState,i=a.constants;var o=[],s=[];if(null!=r){n.initialState=r,o=o.concat(r),this.stateSpec=[];for(var u=0,c=r;u<c.length;u++){var l=c[u];this.stateSpec.push(new ae({shape:l.shape}))}s=s.concat(this.stateSpec)}if(null!=i&&(n.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof oe){var f=[e].concat(o),h=this.inputSpec.concat(s),p=this.inputSpec;this.inputSpec=h;var d=t.prototype.apply.call(this,f,n);return this.inputSpec=p,d}return t.prototype.apply.call(this,e,n)},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var r=null==e?null:e.mask,i=null==e?null:e.training,a=null==e?null:e.initialState;t=Zt(t),null==a&&(a=n.stateful?n.states_:n.getInitialState(t));var o=Array.isArray(n.cell.stateSize)?n.cell.stateSize.length:1;if(a.length!==o)throw new w("RNN Layer has "+o+" state(s) but was passed "+a.length+" initial state(s).");n.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");var s={training:i},u=di(function(t,e){var r=n.cell.call([t].concat(e),s);return[r[0],r.slice(1)]},t,a,n.goBackwards,r,null,n.unroll,n.returnSequences),c=u[0],l=u[1],f=u[2];n.stateful&&n.resetStates(f,i);var h=n.returnSequences?l:c;return n.returnState?[h].concat(f):h})},e.prototype.getInitialState=function(t){var e=this;return Object(r.ge)(function(){var n=Object(r.ze)(t.shape);return n=mt(n=Object(r.Vd)(n,[1,2])),Array.isArray(e.cell.stateSize)?e.cell.stateSize.map(function(t){return t>1?_t(n,[1,t]):n}):e.cell.stateSize>1?[_t(n,[1,e.cell.stateSize])]:[n]})},Object.defineProperty(e.prototype,"trainableWeights",{get:function(){return this.trainable?this.cell.trainableWeights:[]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights},enumerable:!0,configurable:!0}),e.prototype.setFastWeightInitDuringBuild=function(e){t.prototype.setFastWeightInitDuringBuild.call(this,e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)},e.prototype.getConfig=function(){var e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);var n=this.cell.getConfig();e.cell={className:this.cell.getClassName(),config:n};var r=t.prototype.getConfig.call(this);return Object.assign(e,r),e},e.className="RNN",e}(le);r.td.registerClass(mi);var gi=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e}(le),yi=function(t){function e(e){var n=t.call(this,e)||this;return n.DEFAULT_ACTIVATION="tanh",n.DEFAULT_KERNEL_INITIALIZER="glorotNormal",n.DEFAULT_RECURRENT_INITIALIZER="orthogonal",n.DEFAULT_BIAS_INITIALIZER="zeros",n.units=e.units,n.activation=sr(null==e.activation?n.DEFAULT_ACTIVATION:e.activation),n.useBias=null==e.useBias||e.useBias,n.kernelInitializer=Gt(e.kernelInitializer||n.DEFAULT_KERNEL_INITIALIZER),n.recurrentInitializer=Gt(e.recurrentInitializer||n.DEFAULT_RECURRENT_INITIALIZER),n.biasInitializer=Gt(e.biasInitializer||n.DEFAULT_BIAS_INITIALIZER),n.kernelRegularizer=pr(e.kernelRegularizer),n.recurrentRegularizer=pr(e.recurrentRegularizer),n.biasRegularizer=pr(e.biasRegularizer),n.kernelConstraint=K(e.kernelConstraint),n.recurrentConstraint=K(e.recurrentConstraint),n.biasConstraint=K(e.biasConstraint),n.dropout=ft([1,ht([0,null==e.dropout?0:e.dropout])]),n.recurrentDropout=ft([1,ht([0,null==e.recurrentDropout?0:e.recurrentDropout])]),n.stateSize=n.units,n.dropoutMask=null,n.recurrentDropoutMask=null,n}return a(e,t),e.prototype.build=function(t){t=Qt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){if(2!==(t=t).length)throw new w("SimpleRNNCell expects 2 input Tensors, got "+t.length+".");var i=t[1];t=t[0];var a,o=null!=e.training&&e.training;0<n.dropout&&n.dropout<1&&null==n.dropoutMask&&(n.dropoutMask=Si(function(){return Object(r.Kc)(t)},n.dropout,o)),0<n.recurrentDropout&&n.recurrentDropout<1&&null==n.recurrentDropoutMask&&(n.recurrentDropoutMask=Si(function(){return Object(r.Kc)(i)},n.recurrentDropout,o));var s=n.dropoutMask,u=n.recurrentDropoutMask;a=Et(null!=s?Object(r.zc)(t,s):t,n.kernel.read()),null!=n.bias&&(a=It(a,n.bias.read())),null!=u&&(i=Object(r.zc)(i,u));var c=Object(r.u)(a,Et(i,n.recurrentKernel.read()));return null!=n.activation&&(c=n.activation.apply(c)),[c,c]})},e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="SimpleRNNCell",e}(gi);r.td.registerClass(yi);var vi=function(t){function e(e){return e.cell=new yi(e),t.call(this,e)||this}return a(e,t),e.prototype.call=function(e,n){var i=this;return Object(r.ge)(function(){null!=i.cell.dropoutMask&&(Object(r.jb)(i.cell.dropoutMask),i.cell.dropoutMask=null),null!=i.cell.recurrentDropoutMask&&(Object(r.jb)(i.cell.recurrentDropoutMask),i.cell.recurrentDropoutMask=null);var a=null==n?null:n.mask,o=null==n?null:n.training,s=null==n?null:n.initialState;return t.prototype.call.call(i,e,{mask:a,training:o,initialState:s})})},Object.defineProperty(e.prototype,"units",{get:function(){return this.cell.units},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activation",{get:function(){return this.cell.activation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useBias",{get:function(){return this.cell.useBias},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelInitializer",{get:function(){return this.cell.kernelInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentInitializer",{get:function(){return this.cell.recurrentInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasInitializer",{get:function(){return this.cell.biasInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelRegularizer",{get:function(){return this.cell.kernelRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentRegularizer",{get:function(){return this.cell.recurrentRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasRegularizer",{get:function(){return this.cell.biasRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelConstraint",{get:function(){return this.cell.kernelConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentConstraint",{get:function(){return this.cell.recurrentConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasConstraint",{get:function(){return this.cell.biasConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropout",{get:function(){return this.cell.dropout},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentDropout",{get:function(){return this.cell.recurrentDropout},enumerable:!0,configurable:!0}),e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},n=t.prototype.getConfig.call(this);return delete n.cell,Object.assign(e,n),e},e.className="SimpleRNN",e}(mi);r.td.registerClass(vi);var bi=function(t){function e(e){var n=t.call(this,e)||this;return n.DEFAULT_ACTIVATION="tanh",n.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",n.DEFAULT_KERNEL_INITIALIZER="glorotNormal",n.DEFAULT_RECURRENT_INITIALIZER="orthogonal",n.DEFAULT_BIAS_INITIALIZER="zeros",n.units=e.units,n.activation=sr(void 0===e.activation?n.DEFAULT_ACTIVATION:e.activation),n.recurrentActivation=sr(void 0===e.recurrentActivation?n.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),n.useBias=null==e.useBias||e.useBias,n.kernelInitializer=Gt(e.kernelInitializer||n.DEFAULT_KERNEL_INITIALIZER),n.recurrentInitializer=Gt(e.recurrentInitializer||n.DEFAULT_RECURRENT_INITIALIZER),n.biasInitializer=Gt(e.biasInitializer||n.DEFAULT_BIAS_INITIALIZER),n.kernelRegularizer=pr(e.kernelRegularizer),n.recurrentRegularizer=pr(e.recurrentRegularizer),n.biasRegularizer=pr(e.biasRegularizer),n.kernelConstraint=K(e.kernelConstraint),n.recurrentConstraint=K(e.recurrentConstraint),n.biasConstraint=K(e.biasConstraint),n.dropout=ft([1,ht([0,null==e.dropout?0:e.dropout])]),n.recurrentDropout=ft([1,ht([0,null==e.recurrentDropout?0:e.recurrentDropout])]),n.implementation=e.implementation,n.stateSize=n.units,n.dropoutMask=null,n.recurrentDropoutMask=null,n}return a(e,t),e.prototype.build=function(t){var e=(t=Qt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){if(2!==(t=t).length)throw new w("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");var i=null!=e.training&&e.training,a=t[1];t=t[0],0<n.dropout&&n.dropout<1&&null==n.dropoutMask&&(n.dropoutMask=Si(function(){return Object(r.Kc)(t)},n.dropout,i,3)),0<n.recurrentDropout&&n.recurrentDropout<1&&null==n.recurrentDropoutMask&&(n.recurrentDropoutMask=Si(function(){return Object(r.Kc)(a)},n.recurrentDropout,i,3));var o,s,u,c=n.dropoutMask,l=n.recurrentDropoutMask;0<n.dropout&&n.dropout<1&&(t=Object(r.zc)(t,c[0]));var f=Et(t,n.kernel.read());n.useBias&&(f=It(f,n.bias.read())),0<n.recurrentDropout&&n.recurrentDropout<1&&(a=Object(r.zc)(a,l[0]));var h=n.recurrentKernel.read(),p=Object(r.Kd)(h,[2*n.units,n.units],h.rank-1),d=p[0],m=p[1],g=Et(a,d),v=Object(r.Kd)(f,3,f.rank-1),b=v[0],_=v[1],x=v[2],E=Object(r.Kd)(g,2,g.rank-1),S=E[0],N=E[1];o=n.recurrentActivation.apply(Object(r.u)(b,S)),s=n.recurrentActivation.apply(Object(r.u)(_,N));var I=Et(Object(r.zc)(s,a),m);u=n.activation.apply(Object(r.u)(x,I));var O=Object(r.u)(Object(r.zc)(o,a),Object(r.zc)(Object(r.u)(y(1),Object(r.Dc)(o)),u));return[O,O]})},e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="GRUCell",e}(gi);r.td.registerClass(bi);var wi=function(t){function e(e){return 0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bi(e),t.call(this,e)||this}return a(e,t),e.prototype.call=function(e,n){var i=this;return Object(r.ge)(function(){null!=i.cell.dropoutMask&&(Object(r.jb)(i.cell.dropoutMask),i.cell.dropoutMask=null),null!=i.cell.recurrentDropoutMask&&(Object(r.jb)(i.cell.recurrentDropoutMask),i.cell.recurrentDropoutMask=null);var a=null==n?null:n.mask,o=null==n?null:n.training,s=null==n?null:n.initialState;return t.prototype.call.call(i,e,{mask:a,training:o,initialState:s})})},Object.defineProperty(e.prototype,"units",{get:function(){return this.cell.units},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activation",{get:function(){return this.cell.activation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentActivation",{get:function(){return this.cell.recurrentActivation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useBias",{get:function(){return this.cell.useBias},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelInitializer",{get:function(){return this.cell.kernelInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentInitializer",{get:function(){return this.cell.recurrentInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasInitializer",{get:function(){return this.cell.biasInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelRegularizer",{get:function(){return this.cell.kernelRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentRegularizer",{get:function(){return this.cell.recurrentRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasRegularizer",{get:function(){return this.cell.biasRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelConstraint",{get:function(){return this.cell.kernelConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentConstraint",{get:function(){return this.cell.recurrentConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasConstraint",{get:function(){return this.cell.biasConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropout",{get:function(){return this.cell.dropout},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentDropout",{get:function(){return this.cell.recurrentDropout},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"implementation",{get:function(){return this.cell.implementation},enumerable:!0,configurable:!0}),e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},n=t.prototype.getConfig.call(this);return delete n.cell,Object.assign(e,n),e},e.fromConfig=function(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)},e.className="GRU",e}(mi);r.td.registerClass(wi);var _i=function(t){function e(e){var n=t.call(this,e)||this;return n.DEFAULT_ACTIVATION="tanh",n.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",n.DEFAULT_KERNEL_INITIALIZER="glorotNormal",n.DEFAULT_RECURRENT_INITIALIZER="orthogonal",n.DEFAULT_BIAS_INITIALIZER="zeros",n.units=e.units,n.activation=sr(void 0===e.activation?n.DEFAULT_ACTIVATION:e.activation),n.recurrentActivation=sr(void 0===e.recurrentActivation?n.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),n.useBias=null==e.useBias||e.useBias,n.kernelInitializer=Gt(e.kernelInitializer||n.DEFAULT_KERNEL_INITIALIZER),n.recurrentInitializer=Gt(e.recurrentInitializer||n.DEFAULT_RECURRENT_INITIALIZER),n.biasInitializer=Gt(e.biasInitializer||n.DEFAULT_BIAS_INITIALIZER),n.unitForgetBias=e.unitForgetBias,n.kernelRegularizer=pr(e.kernelRegularizer),n.recurrentRegularizer=pr(e.recurrentRegularizer),n.biasRegularizer=pr(e.biasRegularizer),n.kernelConstraint=K(e.kernelConstraint),n.recurrentConstraint=K(e.recurrentConstraint),n.biasConstraint=K(e.biasConstraint),n.dropout=ft([1,ht([0,null==e.dropout?0:e.dropout])]),n.recurrentDropout=ft([1,ht([0,null==e.recurrentDropout?0:e.recurrentDropout])]),n.implementation=e.implementation,n.stateSize=[n.units,n.units],n.dropoutMask=null,n.recurrentDropoutMask=null,n}return a(e,t),e.prototype.build=function(t){var e,n,r=(t=Qt(t))[t.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){var i=this.biasInitializer,o=this.units;e=new((n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.apply=function(t,e){var n=i.apply([o]),r=(new Rt).apply([o]),a=i.apply([2*o]);return wt(wt(n,r),a)},e}(Pt)).className="CustomInit",n)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,e,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){var i=null!=e.training&&e.training;if(3!==(t=t).length)throw new w("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");var a=t[1],o=t[2];t=t[0],0<n.dropout&&n.dropout<1&&null==n.dropoutMask&&(n.dropoutMask=Si(function(){return Object(r.Kc)(t)},n.dropout,i,4)),0<n.recurrentDropout&&n.recurrentDropout<1&&null==n.recurrentDropoutMask&&(n.recurrentDropoutMask=Si(function(){return Object(r.Kc)(a)},n.recurrentDropout,i,4));var s,u,c,l,f=n.dropoutMask,h=n.recurrentDropoutMask;0<n.dropout&&n.dropout<1&&(t=Object(r.zc)(t,f[0]));var p=Et(t,n.kernel.read());0<n.recurrentDropout&&n.recurrentDropout<1&&(a=Object(r.zc)(a,h[0])),p=Object(r.u)(p,Et(a,n.recurrentKernel.read())),n.useBias&&(p=It(p,n.bias.read()));var d=Object(r.Kd)(p,4,p.rank-1),m=d[0],g=d[1],y=d[2],v=d[3];s=n.recurrentActivation.apply(m),u=n.recurrentActivation.apply(g),c=Object(r.u)(Object(r.zc)(u,o),Object(r.zc)(s,n.activation.apply(y))),l=n.recurrentActivation.apply(v);var b=Object(r.zc)(l,n.activation.apply(c));return[b,b,c]})},e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.className="LSTMCell",e}(gi);r.td.registerClass(_i);var xi=function(t){function e(e){return 0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _i(e),t.call(this,e)||this}return a(e,t),e.prototype.call=function(e,n){var i=this;return Object(r.ge)(function(){null!=i.cell.dropoutMask&&(Object(r.jb)(i.cell.dropoutMask),i.cell.dropoutMask=null),null!=i.cell.recurrentDropoutMask&&(Object(r.jb)(i.cell.recurrentDropoutMask),i.cell.recurrentDropoutMask=null);var a=null==n?null:n.mask,o=null==n?null:n.training,s=null==n?null:n.initialState;return t.prototype.call.call(i,e,{mask:a,training:o,initialState:s})})},Object.defineProperty(e.prototype,"units",{get:function(){return this.cell.units},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activation",{get:function(){return this.cell.activation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentActivation",{get:function(){return this.cell.recurrentActivation},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useBias",{get:function(){return this.cell.useBias},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelInitializer",{get:function(){return this.cell.kernelInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentInitializer",{get:function(){return this.cell.recurrentInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasInitializer",{get:function(){return this.cell.biasInitializer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"unitForgetBias",{get:function(){return this.cell.unitForgetBias},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelRegularizer",{get:function(){return this.cell.kernelRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentRegularizer",{get:function(){return this.cell.recurrentRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasRegularizer",{get:function(){return this.cell.biasRegularizer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"kernelConstraint",{get:function(){return this.cell.kernelConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentConstraint",{get:function(){return this.cell.recurrentConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"biasConstraint",{get:function(){return this.cell.biasConstraint},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropout",{get:function(){return this.cell.dropout},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recurrentDropout",{get:function(){return this.cell.recurrentDropout},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"implementation",{get:function(){return this.cell.implementation},enumerable:!0,configurable:!0}),e.prototype.getConfig=function(){var e={units:this.units,activation:ar(this.activation),recurrentActivation:ar(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kt(this.kernelInitializer),recurrentInitializer:Kt(this.recurrentInitializer),biasInitializer:Kt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:fr(this.kernelRegularizer),recurrentRegularizer:fr(this.recurrentRegularizer),biasRegularizer:fr(this.biasRegularizer),activityRegularizer:fr(this.activityRegularizer),kernelConstraint:$(this.kernelConstraint),recurrentConstraint:$(this.recurrentConstraint),biasConstraint:$(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},n=t.prototype.getConfig.call(this);return delete n.cell,Object.assign(e,n),e},e.fromConfig=function(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)},e.className="LSTM",e}(mi);r.td.registerClass(xi);var Ei=function(t){function e(e){var n=t.call(this,e)||this;return n.cells=e.cells,n}return a(e,t),Object.defineProperty(e.prototype,"stateSize",{get:function(){for(var t=[],e=0,n=this.cells.slice().reverse();e<n.length;e++){var r=n[e];Array.isArray(r.stateSize)?t.push.apply(t,r.stateSize):t.push(r.stateSize)}return t},enumerable:!0,configurable:!0}),e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){for(var r=(t=t).slice(1),i=[],a=0,o=n.cells.slice().reverse();a<o.length;a++){var s=o[a];Array.isArray(s.stateSize)?i.push(r.splice(0,s.stateSize.length)):i.push(r.splice(0,1))}i.reverse();for(var u,c=[],l=0;l<n.cells.length;++l)s=n.cells[l],r=i[l],u=0===l?[t[0]].concat(r):[u[0]].concat(r),u=s.call(u,e),c.push(u.slice(1));r=[];for(var f=0,h=c.slice().reverse();f<h.length;f++){var p=h[f];r.push.apply(r,p)}return[u[0]].concat(r)})},e.prototype.build=function(t){var e;Yt(t)&&(t=t[0]),t=t;for(var n=0,r=this.cells;n<r.length;n++){var i=r[n];i.build(t),e=Array.isArray(i.stateSize)?i.stateSize[0]:i.stateSize,t=[t[0],e]}this.built=!0},e.prototype.getConfig=function(){for(var e=[],n=0,r=this.cells;n<r.length;n++){var i=r[n];e.push({className:this.getClassName(),config:i.getConfig()})}var a={cells:e},o=t.prototype.getConfig.call(this);return Object.assign(a,o),a},e.fromConfig=function(t,e,n){void 0===n&&(n={});for(var r=[],i=0,a=e.cells;i<a.length;i++){var o=a[i];r.push(cn(o,n))}return new t({cells:r})},Object.defineProperty(e.prototype,"trainableWeights",{get:function(){if(!this.trainable)return[];for(var t=[],e=0,n=this.cells;e<n.length;e++){var r=n[e];t.push.apply(t,r.trainableWeights)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){for(var t=[],e=0,n=this.cells;e<n.length;e++){var r=n[e];t.push.apply(t,r.nonTrainableWeights)}if(!this.trainable){for(var i=[],a=0,o=this.cells;a<o.length;a++)r=o[a],i.push.apply(i,r.trainableWeights);return i.concat(t)}return t},enumerable:!0,configurable:!0}),e.prototype.getWeights=function(){for(var t=[],e=0,n=this.cells;e<n.length;e++){var r=n[e];t.push.apply(t,r.weights)}return re(t)},e.prototype.setWeights=function(t){for(var e=[],n=0,r=this.cells;n<r.length;n++)for(var i=r[n],a=i.weights.length,o=t.splice(a),s=0;s<i.weights.length;++s)e.push([i.weights[s],o[s]]);ie(e)},e.className="StackedRNNCells",e}(gi);function Si(t,e,n,i){function a(){return Ot(t(),y(e))}if(void 0===n&&(n=null),void 0===i&&(i=1),i>1){for(var o=[],s=0;s<i;s++)o.push(kt(a,t,n));return o.forEach(function(t){return Object(r.Rb)(t)}),o}return Object(r.Rb)(kt(a,t,n))}r.td.registerClass(Ei);var Ni=function(t){function e(e){var n=t.call(this,e)||this;return n.layer=e.layer,n}return a(e,t),e.prototype.build=function(t){this.built=!0},Object.defineProperty(e.prototype,"trainable",{get:function(){return null!=this.layer&&this.layer.trainable},set:function(t){null!=this.layer&&(this.layer.trainable=t)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"trainableWeights",{get:function(){return this.layer.trainableWeights},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){return this.layer.nonTrainableWeights},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"updates",{get:function(){return this.layer._updates},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"losses",{get:function(){return this.layer.losses},enumerable:!0,configurable:!0}),e.prototype.getWeights=function(){return this.layer.getWeights()},e.prototype.setWeights=function(t){this.layer.setWeights(t)},e.prototype.getConfig=function(){var e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.prototype.setFastWeightInitDuringBuild=function(e){t.prototype.setFastWeightInitDuringBuild.call(this,e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)},e.fromConfig=function(t,e,n){void 0===n&&(n={});var r=cn(e.layer,n);delete e.layer;var i={layer:r};return Object.assign(i,e),new t(i)},e}(le),Ii=function(t){function e(e){var n=t.call(this,e)||this;return n.supportsMasking=!0,n}return a(e,t),e.prototype.build=function(e){if((e=Qt(e)).length<3)throw new w("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];var n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),t.prototype.build.call(this,e)},e.prototype.computeOutputShape=function(t){var e=[(t=Qt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){return di(function(t,r){return[Zt(n.layer.call(t,e)),[]]},t=Zt(t),[],!1,null,null,!1,!0)[1]})},e.className="TimeDistributed",e}(Ni);r.td.registerClass(Ii);var Oi=["sum","mul","concat","ave"];var ki=function(t){function e(e){var n=t.call(this,e)||this,r=e.layer.getConfig();if(n.forwardLayer=cn({className:e.layer.getClassName(),config:r}),r.goBackwards=!0!==r.goBackwards,n.backwardLayer=cn({className:e.layer.getClassName(),config:r}),n.forwardLayer.name="forward_"+n.forwardLayer.name,n.backwardLayer.name="backward_"+n.backwardLayer.name,function(t){j(Oi,"BidirectionalMergeMode",t)}(e.mergeMode),n.mergeMode=e.mergeMode,e.weights)throw new _("weights support is not implemented for Bidirectional layer yet.");return n._stateful=e.layer.stateful,n.returnSequences=e.layer.returnSequences,n.returnState=e.layer.returnState,n.supportsMasking=!0,n._trainable=!0,n.inputSpec=e.layer.inputSpec,n.numConstants=null,n}return a(e,t),Object.defineProperty(e.prototype,"trainable",{get:function(){return this._trainable},set:function(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)},enumerable:!0,configurable:!0}),e.prototype.getWeights=function(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())},e.prototype.setWeights=function(t){var e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))},e.prototype.computeOutputShape=function(t){var e,n,r,i=this.forwardLayer.computeOutputShape(t);return Array.isArray(i)&&Array.isArray(i[0])||(i=[i]),i=i,this.returnState?(r=i.slice(1),e=i[0]):e=i[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):I(n)},e.prototype.apply=function(e,n){var r=null==n?null:n.initialState,i=null==n?null:n.constants;null==n&&(n={});var a=pi(e,r,i,this.numConstants);if(e=a.inputs,r=a.initialState,i=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==i)return t.prototype.apply.call(this,e,n);var o=[],s=[];if(null!=r){var u=r.length;if(u%2>0)throw new w("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=r,o.push.apply(o,r);var c=r.map(function(t){return new ae({shape:t.shape})});this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),s.push.apply(s,c)}if(null!=i)throw new _("Support for constants in Bidirectional layers is not implemented yet.");for(var l=o[0]instanceof oe,f=0,h=o;f<h.length;f++)if(h[f]instanceof oe!==l)throw new w("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){var p=[e].concat(o),d=this.inputSpec.concat(s),m=this.inputSpec;this.inputSpec=d;var g=t.prototype.apply.call(this,p,n);return this.inputSpec=m,g}return t.prototype.apply.call(this,e,n)},e.prototype.call=function(t,e){var n=this;return Object(r.ge)(function(){if(null!=e.mask)throw new _("The support for masking is not implemented for Bidirectional layers yet.");var i,a,o,s,u=e.initialState;if(null==u)i=n.forwardLayer.call(t,e),a=n.backwardLayer.call(t,e);else{var c=u.slice(0,u.length/2),l=u.slice(u.length/2);i=n.forwardLayer.call(t,Object.assign(e,{initialState:c})),a=n.backwardLayer.call(t,Object.assign(e,{initialState:l}))}return n.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(a.slice(1))),i=i[0],a=a[0]),n.returnSequences&&(a=Object(r.hd)(a,1)),"concat"===n.mergeMode?s=bt([i,a]):"sum"===n.mergeMode?s=Object(r.u)(i,a):"ave"===n.mergeMode?s=Object(r.zc)(y(.5),Object(r.u)(i,a)):"mul"===n.mergeMode?s=Object(r.zc)(i,a):null==n.mergeMode&&(s=[i,a]),n.returnState?null==n.mergeMode?s.concat(o):[s].concat(o):s})},e.prototype.resetStates=function(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()},e.prototype.build=function(t){var e=this;rt(this.forwardLayer.name,function(){e.forwardLayer.build(t)}),rt(this.backwardLayer.name,function(){e.backwardLayer.build(t)}),this.built=!0},Object.defineProperty(e.prototype,"trainableWeights",{get:function(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"nonTrainableWeights",{get:function(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)},enumerable:!0,configurable:!0}),e.prototype.setFastWeightInitDuringBuild=function(e){t.prototype.setFastWeightInitDuringBuild.call(this,e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)},e.prototype.getConfig=function(){var e={mergeMode:this.mergeMode},n=t.prototype.getConfig.call(this);return Object.assign(e,n),e},e.fromConfig=function(t,e){var n=cn(e.layer);if(delete e.layer,null!=e.numConstants)throw new _("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");var r=e;return r.layer=n,new t(r)},e.className="Bidirectional",e}(Ni);function Ai(t){return new ri(t)}function Ci(t){return new oi(t)}function Pi(t){return new ci(t)}function Ti(t){return new hi(t)}function Ri(t){return new ni(t)}function Di(t){return new ai(t)}r.td.registerClass(ki);var Mi=Pi,ji=Ti,Bi=Ri,Li=Di,zi=Object.freeze({inputLayer:function(t){return new pe(t)},elu:function(t){return new yr(t)},reLU:function(t){return new dr(t)},leakyReLU:function(t){return new mr(t)},prelu:function(t){return new gr(t)},softmax:function(t){return new br(t)},thresholdedReLU:function(t){return new vr(t)},conv1d:function(t){return new Ar(t)},conv2d:function(t){return new Ir(t)},conv2dTranspose:function(t){return new Or(t)},separableConv2d:function(t){return new kr(t)},cropping2D:function(t){return new Cr(t)},upSampling2d:function(t){return new Pr(t)},depthwiseConv2d:function(t){return new Tr(t)},activation:function(t){return new jr(t)},dense:function(t){return new Dr(t)},dropout:function(t){return new Rr(t)},flatten:function(t){return new Mr(t)},repeatVector:function(t){return new Br(t)},reshape:function(t){return new Lr(t)},permute:function(t){return new zr(t)},embedding:function(t){return new Fr(t)},add:function(t){return new Vr(t)},average:function(t){return new qr(t)},concatenate:function(t){return new Kr(t)},maximum:function(t){return new $r(t)},minimum:function(t){return new Hr(t)},multiply:function(t){return new Wr(t)},dot:function(t){return new Xr(t)},batchNormalization:function(t){return new Zr(t)},zeroPadding2d:function(t){return new Qr(t)},averagePooling1d:Ai,avgPool1d:function(t){return Ai(t)},avgPooling1d:function(t){return Ai(t)},averagePooling2d:Ci,avgPool2d:function(t){return Ci(t)},avgPooling2d:function(t){return Ci(t)},globalAveragePooling1d:function(t){return new ui(t)},globalAveragePooling2d:function(t){return new fi(t)},globalMaxPooling1d:Pi,globalMaxPooling2d:Ti,maxPooling1d:Ri,maxPooling2d:Di,gru:function(t){return new wi(t)},gruCell:function(t){return new bi(t)},lstm:function(t){return new xi(t)},lstmCell:function(t){return new _i(t)},simpleRNN:function(t){return new vi(t)},simpleRNNCell:function(t){return new yi(t)},rnn:function(t){return new mi(t)},stackedRNNCells:function(t){return new Ei(t)},bidirectional:function(t){return new ki(t)},timeDistributed:function(t){return new Ii(t)},globalMaxPool1d:Mi,globalMaxPool2d:ji,maxPool1d:Bi,maxPool2d:Li,Layer:le,RNN:mi,RNNCell:gi,input:$n});var Fi=Object.freeze({binaryAccuracy:function(t,e){return Ve(t,e)},binaryCrossentropy:function(t,e){return Ke(t,e)},sparseCategoricalAccuracy:function(t,e){return Ge(t,e)},categoricalAccuracy:function(t,e){return We(t,e)},categoricalCrossentropy:function(t,e){return en(t,e)},precision:function(t,e){return $e(t,e)},recall:function(t,e){return He(t,e)},cosineProximity:function(t,e){return Fe(t,e)},meanAbsoluteError:function(t,e){return ke(t,e)},meanAbsolutePercentageError:function(t,e){return Ae(t,e)},MAPE:function(t,e){return Ae(t,e)},mape:function(t,e){return Ae(t,e)},meanSquaredError:function(t,e){return Oe(t,e)},MSE:function(t,e){return Oe(t,e)},mse:function(t,e){return Oe(t,e)}}),Ui=Object.freeze({modelFromJSON:function(t,e){return u(this,void 0,void 0,function(){var n,i,a,o,s,u,l,f;return c(this,function(c){switch(c.label){case 0:return"modelTopology"in t||(t={modelTopology:t}),null!=(n=(t=t).modelTopology).model_config&&(n=n.model_config),i=fn(n),a=cn(i,e),null==t.weightsManifest?[3,2]:[4,r.Pb.loadWeights(t.weightsManifest,t.pathPrefix,a.weights.map(function(t){return t.originalName}))];case 1:for(o=c.sent(),s={},u=0,l=a.weights;u<l.length;u++)f=l[u],s[f.originalName]=o[f.originalName];a.loadWeights(s,null,!0),c.label=2;case 2:return[2,a]}})})}});var Vi=Object.freeze({l1l2:function(t){return new cr(t)},l1:function(t){return function(t){return new cr({l1:null!=t?t.l1:null,l2:0})}(t)},l2:function(t){return function(t){return new cr({l2:null!=t?t.l2:null,l1:0})}(t)}}),Wi=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.model=null,e}return a(e,t),e.prototype.setModel=function(t){if(!(t instanceof zn))throw new Error("model must be a Model, not some other Container");this.model=t},e}(ye),qi=n(52),$i=n(53);n.d(e,"version",function(){return Hi}),n.d(e,"setBackend",function(){return r.ud}),n.d(e,"getBackend",function(){return r.Fb}),n.d(e,"disposeVariables",function(){return r.kb}),n.d(e,"memory",function(){return r.rc}),n.d(e,"version_core",function(){return r.ve}),n.d(e,"nextFrame",function(){return r.Ec}),n.d(e,"environment",function(){return r.qb}),n.d(e,"io",function(){return r.Pb}),n.d(e,"math",function(){return r.lc}),n.d(e,"serialization",function(){return r.td}),n.d(e,"test_util",function(){return r.fe}),n.d(e,"util",function(){return r.qe}),n.d(e,"webgl",function(){return r.we}),n.d(e,"enableProdMode",function(){return r.pb}),n.d(e,"AdadeltaOptimizer",function(){return r.a}),n.d(e,"AdagradOptimizer",function(){return r.b}),n.d(e,"AdamOptimizer",function(){return r.c}),n.d(e,"AdamaxOptimizer",function(){return r.d}),n.d(e,"MomentumOptimizer",function(){return r.i}),n.d(e,"Optimizer",function(){return r.j}),n.d(e,"RMSPropOptimizer",function(){return r.k}),n.d(e,"SGDOptimizer",function(){return r.n}),n.d(e,"Tensor",function(){return r.o}),n.d(e,"TensorBuffer",function(){return r.p}),n.d(e,"variable",function(){return r.te}),n.d(e,"Variable",function(){return r.q}),n.d(e,"Rank",function(){return r.l}),n.d(e,"Reduction",function(){return r.m}),n.d(e,"ENV",function(){return r.f}),n.d(e,"Environment",function(){return r.g}),n.d(e,"KernelBackend",function(){return r.h}),n.d(e,"DataStorage",function(){return r.e}),n.d(e,"image",function(){return r.Ob}),n.d(e,"linalg",function(){return r.Xb}),n.d(e,"losses",function(){return r.jc}),n.d(e,"spectral",function(){return r.Jd}),n.d(e,"op",function(){return r.Lc}),n.d(e,"batchNormalization2d",function(){return r.J}),n.d(e,"batchNormalization3d",function(){return r.K}),n.d(e,"batchNormalization4d",function(){return r.L}),n.d(e,"batchNormalization",function(){return r.I}),n.d(e,"complex",function(){return r.S}),n.d(e,"real",function(){return r.dd}),n.d(e,"imag",function(){return r.Nb}),n.d(e,"concat",function(){return r.T}),n.d(e,"concat1d",function(){return r.U}),n.d(e,"concat2d",function(){return r.V}),n.d(e,"concat3d",function(){return r.W}),n.d(e,"concat4d",function(){return r.X}),n.d(e,"split",function(){return r.Kd}),n.d(e,"conv1d",function(){return r.Y}),n.d(e,"conv2d",function(){return r.Z}),n.d(e,"conv3d",function(){return r.cb}),n.d(e,"conv2dDerFilter",function(){return r.ab}),n.d(e,"depthwiseConv2d",function(){return r.ib}),n.d(e,"separableConv2d",function(){return r.sd}),n.d(e,"conv2dTranspose",function(){return r.bb}),n.d(e,"matMul",function(){return r.kc}),n.d(e,"dot",function(){return r.nb}),n.d(e,"outerProduct",function(){return r.Mc}),n.d(e,"reverse",function(){return r.hd}),n.d(e,"reverse1d",function(){return r.id}),n.d(e,"reverse2d",function(){return r.jd}),n.d(e,"reverse3d",function(){return r.kd}),n.d(e,"reverse4d",function(){return r.ld}),n.d(e,"maxPool",function(){return r.nc}),n.d(e,"avgPool",function(){return r.G}),n.d(e,"pool",function(){return r.Sc}),n.d(e,"slice",function(){return r.Ad}),n.d(e,"slice1d",function(){return r.Bd}),n.d(e,"slice2d",function(){return r.Cd}),n.d(e,"slice3d",function(){return r.Dd}),n.d(e,"slice4d",function(){return r.Ed}),n.d(e,"abs",function(){return r.r}),n.d(e,"acos",function(){return r.s}),n.d(e,"acosh",function(){return r.t}),n.d(e,"asin",function(){return r.B}),n.d(e,"asinh",function(){return r.C}),n.d(e,"atan",function(){return r.D}),n.d(e,"atanh",function(){return r.F}),n.d(e,"ceil",function(){return r.P}),n.d(e,"clipByValue",function(){return r.Q}),n.d(e,"cos",function(){return r.db}),n.d(e,"cosh",function(){return r.eb}),n.d(e,"erf",function(){return r.tb}),n.d(e,"exp",function(){return r.ub}),n.d(e,"expm1",function(){return r.wb}),n.d(e,"floor",function(){return r.Ab}),n.d(e,"log",function(){return r.ac}),n.d(e,"log1p",function(){return r.bc}),n.d(e,"logSigmoid",function(){return r.cc}),n.d(e,"neg",function(){return r.Dc}),n.d(e,"reciprocal",function(){return r.ed}),n.d(e,"round",function(){return r.nd}),n.d(e,"rsqrt",function(){return r.od}),n.d(e,"sigmoid",function(){return r.wd}),n.d(e,"sign",function(){return r.xd}),n.d(e,"sin",function(){return r.yd}),n.d(e,"sinh",function(){return r.zd}),n.d(e,"softplus",function(){return r.Gd}),n.d(e,"sqrt",function(){return r.Ld}),n.d(e,"square",function(){return r.Md}),n.d(e,"step",function(){return r.Rd}),n.d(e,"tan",function(){return r.Wd}),n.d(e,"tanh",function(){return r.Xd}),n.d(e,"all",function(){return r.x}),n.d(e,"any",function(){return r.y}),n.d(e,"argMax",function(){return r.z}),n.d(e,"argMin",function(){return r.A}),n.d(e,"logSumExp",function(){return r.ec}),n.d(e,"max",function(){return r.mc}),n.d(e,"mean",function(){return r.qc}),n.d(e,"min",function(){return r.sc}),n.d(e,"moments",function(){return r.xc}),n.d(e,"sum",function(){return r.Vd}),n.d(e,"prod",function(){return r.Xc}),n.d(e,"equal",function(){return r.rb}),n.d(e,"equalStrict",function(){return r.sb}),n.d(e,"greater",function(){return r.Ib}),n.d(e,"greaterEqual",function(){return r.Jb}),n.d(e,"greaterEqualStrict",function(){return r.Kb}),n.d(e,"greaterStrict",function(){return r.Lb}),n.d(e,"less",function(){return r.Tb}),n.d(e,"lessEqual",function(){return r.Ub}),n.d(e,"lessEqualStrict",function(){return r.Vb}),n.d(e,"lessStrict",function(){return r.Wb}),n.d(e,"notEqual",function(){return r.Gc}),n.d(e,"notEqualStrict",function(){return r.Hc}),n.d(e,"add",function(){return r.u}),n.d(e,"addN",function(){return r.v}),n.d(e,"addStrict",function(){return r.w}),n.d(e,"atan2",function(){return r.E}),n.d(e,"div",function(){return r.lb}),n.d(e,"divStrict",function(){return r.mb}),n.d(e,"floorDiv",function(){return r.Bb}),n.d(e,"maximum",function(){return r.oc}),n.d(e,"maximumStrict",function(){return r.pc}),n.d(e,"minimum",function(){return r.tc}),n.d(e,"minimumStrict",function(){return r.uc}),n.d(e,"mod",function(){return r.vc}),n.d(e,"modStrict",function(){return r.wc}),n.d(e,"mul",function(){return r.zc}),n.d(e,"mulStrict",function(){return r.Ac}),n.d(e,"pow",function(){return r.Tc}),n.d(e,"powStrict",function(){return r.Uc}),n.d(e,"squaredDifference",function(){return r.Nd}),n.d(e,"squaredDifferenceStrict",function(){return r.Od}),n.d(e,"sub",function(){return r.Td}),n.d(e,"subStrict",function(){return r.Ud}),n.d(e,"elu",function(){return r.ob}),n.d(e,"leakyRelu",function(){return r.Sb}),n.d(e,"prelu",function(){return r.Vc}),n.d(e,"relu",function(){return r.fd}),n.d(e,"selu",function(){return r.rd}),n.d(e,"logicalAnd",function(){return r.fc}),n.d(e,"logicalNot",function(){return r.gc}),n.d(e,"logicalOr",function(){return r.hc}),n.d(e,"logicalXor",function(){return r.ic}),n.d(e,"where",function(){return r.xe}),n.d(e,"whereAsync",function(){return r.ye}),n.d(e,"buffer",function(){return r.N}),n.d(e,"toPixels",function(){return r.je}),n.d(e,"print",function(){return r.Wc}),n.d(e,"batchToSpaceND",function(){return r.M}),n.d(e,"cast",function(){return r.O}),n.d(e,"clone",function(){return r.R}),n.d(e,"cumsum",function(){return r.fb}),n.d(e,"depthToSpace",function(){return r.hb}),n.d(e,"expandDims",function(){return r.vb}),n.d(e,"eye",function(){return r.xb}),n.d(e,"fromPixels",function(){return r.Cb}),n.d(e,"multinomial",function(){return r.Cc}),n.d(e,"oneHot",function(){return r.Ic}),n.d(e,"pad",function(){return r.Nc}),n.d(e,"pad1d",function(){return r.Oc}),n.d(e,"pad2d",function(){return r.Pc}),n.d(e,"pad3d",function(){return r.Qc}),n.d(e,"pad4d",function(){return r.Rc}),n.d(e,"rand",function(){return r.Zc}),n.d(e,"randomNormal",function(){return r.ad}),n.d(e,"randomUniform",function(){return r.bd}),n.d(e,"reshape",function(){return r.gd}),n.d(e,"spaceToBatchND",function(){return r.Hd}),n.d(e,"squeeze",function(){return r.Pd}),n.d(e,"stack",function(){return r.Qd}),n.d(e,"tile",function(){return r.he}),n.d(e,"truncatedNormal",function(){return r.ne}),n.d(e,"unstack",function(){return r.pe}),n.d(e,"setdiff1dAsync",function(){return r.vd}),n.d(e,"fill",function(){return r.zb}),n.d(e,"linspace",function(){return r.Yb}),n.d(e,"ones",function(){return r.Jc}),n.d(e,"range",function(){return r.cd}),n.d(e,"scalar",function(){return r.pd}),n.d(e,"tensor",function(){return r.Yd}),n.d(e,"tensor1d",function(){return r.Zd}),n.d(e,"tensor2d",function(){return r.ae}),n.d(e,"tensor3d",function(){return r.be}),n.d(e,"tensor4d",function(){return r.ce}),n.d(e,"tensor5d",function(){return r.de}),n.d(e,"tensor6d",function(){return r.ee}),n.d(e,"zeros",function(){return r.ze}),n.d(e,"onesLike",function(){return r.Kc}),n.d(e,"zerosLike",function(){return r.Ae}),n.d(e,"transpose",function(){return r.me}),n.d(e,"softmax",function(){return r.Fd}),n.d(e,"logSoftmax",function(){return r.dc}),n.d(e,"localResponseNormalization",function(){return r.Zb}),n.d(e,"norm",function(){return r.Fc}),n.d(e,"gather",function(){return r.Db}),n.d(e,"unsortedSegmentSum",function(){return r.oe}),n.d(e,"basicLSTMCell",function(){return r.H}),n.d(e,"multiRNNCell",function(){return r.Bc}),n.d(e,"movingAverage",function(){return r.yc}),n.d(e,"stridedSlice",function(){return r.Sd}),n.d(e,"topk",function(){return r.ke}),n.d(e,"scatterND",function(){return r.qd}),n.d(e,"fft",function(){return r.yb}),n.d(e,"ifft",function(){return r.Mb}),n.d(e,"rfft",function(){return r.md}),n.d(e,"irfft",function(){return r.Qb}),n.d(e,"sparseToDense",function(){return r.Id}),n.d(e,"gatherND",function(){return r.Eb}),n.d(e,"train",function(){return r.le}),n.d(e,"tidy",function(){return r.ge}),n.d(e,"keep",function(){return r.Rb}),n.d(e,"dispose",function(){return r.jb}),n.d(e,"time",function(){return r.ie}),n.d(e,"profile",function(){return r.Yc}),n.d(e,"customGrad",function(){return r.gb}),n.d(e,"grad",function(){return r.Gb}),n.d(e,"grads",function(){return r.Hb}),n.d(e,"valueAndGrad",function(){return r.re}),n.d(e,"valueAndGrads",function(){return r.se}),n.d(e,"variableGrads",function(){return r.ue}),n.d(e,"constraints",function(){return G}),n.d(e,"initializers",function(){return Xt}),n.d(e,"layers",function(){return zi}),n.d(e,"metrics",function(){return Fi}),n.d(e,"models",function(){return Ui}),n.d(e,"regularizers",function(){return Vi}),n.d(e,"CallbackList",function(){return ve}),n.d(e,"CustomCallback",function(){return xe}),n.d(e,"History",function(){return _e}),n.d(e,"Callback",function(){return Wi}),n.d(e,"InputSpec",function(){return ae}),n.d(e,"SymbolicTensor",function(){return oe}),n.d(e,"Model",function(){return zn}),n.d(e,"input",function(){return $n}),n.d(e,"loadModel",function(){return qn}),n.d(e,"model",function(){return Vn}),n.d(e,"registerCallbackConstructor",function(){return Hn}),n.d(e,"sequential",function(){return Wn}),n.d(e,"RNN",function(){return mi}),n.d(e,"Sequential",function(){return Un}),n.d(e,"LayerVariable",function(){return ne}),n.d(e,"version_layers",function(){return"0.9.2"}),n.d(e,"FrozenModel",function(){return qi.a}),n.d(e,"loadFrozenModel",function(){return qi.b}),n.d(e,"loadTfHubModule",function(){return qi.c}),n.d(e,"version_converter",function(){return qi.d}),n.d(e,"data",function(){return $i});var Hi={"tfjs-core":r.ve,"tfjs-data":$i.version_data,"tfjs-layers":"0.9.2","tfjs-converter":qi.d,tfjs:"0.14.2"}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){var r,i,a;i=[e,n(135),n(222)],void 0===(a="function"==typeof(r=function(t,e,r){"use strict";var i=n(284);Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"Tensor",{enumerable:!0,get:function(){return e.default}}),Object.defineProperty(t,"Function",{enumerable:!0,get:function(){return r.default}}),e=i(e),r=i(r)})?r.apply(e,i):r)||(t.exports=a)},function(t,e){t.exports=function(t){return t&&t.__esModule?t:{default:t}}}])});
//# sourceMappingURL=core.web.js.map

/***/ }),

/***/ "./src/function.js":
/*!*************************!*\
  !*** ./src/function.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! causal-net.core */ "../causality-core/dist/@causalNet/core.web.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(this, function (_exports, _causalNet) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  class Function extends _causalNet.Function {
    constructor() {
      super();
    }

  }

  _exports.default = Function;
});

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AY2F1c2FsTmV0L21lbWNhY2hlL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9AY2F1c2FsTmV0L21lbWNhY2hlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL0BjYXVzYWxOZXQvbWVtY2FjaGUvLi4vY2F1c2FsaXR5LWNvcmUvZGlzdC9AY2F1c2FsTmV0L2NvcmUud2ViLmpzIiwid2VicGFjazovL0BjYXVzYWxOZXQvbWVtY2FjaGUvLi9zcmMvZnVuY3Rpb24uanMiXSwibmFtZXMiOlsiRnVuY3Rpb24iLCJCYXNlRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELE87QUNWQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtEQUEwQyxnQ0FBZ0M7QUFDMUU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnRUFBd0Qsa0JBQWtCO0FBQzFFO0FBQ0EseURBQWlELGNBQWM7QUFDL0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUF5QyxpQ0FBaUM7QUFDMUUsd0hBQWdILG1CQUFtQixFQUFFO0FBQ3JJO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQTJCLDBCQUEwQixFQUFFO0FBQ3ZELHlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhEQUFzRCwrREFBK0Q7O0FBRXJIO0FBQ0E7OztBQUdBO0FBQ0E7Ozs7Ozs7Ozs7OztBQ2xGQSxlQUFlLEtBQWlELG9CQUFvQixTQUFtSSxDQUFDLGlCQUFpQixtQkFBbUIsU0FBUyxjQUFjLDRCQUE0QixZQUFZLHFCQUFxQiwyREFBMkQsdUNBQXVDLHFDQUFxQyxvQkFBb0IsRUFBRSxpQkFBaUIsNEZBQTRGLGVBQWUsd0NBQXdDLFNBQVMsRUFBRSxtQkFBbUIsOEJBQThCLHFEQUFxRCwwQkFBMEIsNkNBQTZDLHNCQUFzQiw2REFBNkQsWUFBWSxlQUFlLFNBQVMsaUJBQWlCLGlDQUFpQyxpQkFBaUIsWUFBWSxVQUFVLHNCQUFzQixtQkFBbUIsaURBQWlELG1CQUFtQixrQkFBa0IsYUFBYSxtQkFBbUIsc0JBQXNCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFNBQVMsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsdUJBQXVCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdCLFVBQVUsd0JBQXdC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RUFBaUUsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSx1RUFBdUUsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxxRUFBcUUsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsRUFBRSxxRUFBcUUsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSx5RkFBeUYsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxrRUFBa0UsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsNEJBQTRCLFVBQVUsV0FBVyw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2RUFBNkUsNkNBQTZDLEVBQUUsc0VBQXNFLEVBQUUsc0VBQXNFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSx1RUFBdUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsd0RBQXdELEVBQUUsd0RBQXdELEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxxRUFBcUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxtRUFBbUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwrREFBK0QsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwyRUFBMkUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSwyRUFBMkUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSx1RUFBdUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSxpRUFBaUUsNkNBQTZDLEVBQUUsaUVBQWlFLEVBQUUsRUFBRSw2REFBNkQsNkNBQTZDLEVBQUUsaUVBQWlF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LGdDQUFnQyxVQUFVLDZCQUE2QixVQUFVLDhCQUE4QixVQUFVLDhCQUE4QixVQUFVLGlDQUFpQyxVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLCtCQUErQixVQUFVLGdDQUFnQyxVQUFVLDhCQUE4QixVQUFVLDhCQUE4QixVQUFVLDZCQUE2QixVQUFVLDJCQUEyQixVQUFVLDRCQUE0QixTQUFTLHlCQUF5QixVQUFVLCtCQUErQixVQUFVLDZCQUE2QixVQUFVLGdDQUFnQyxVQUFVLG9DQUFvQyxVQUFVLDRCQUE0QixVQUFVLGdDQUFnQyxVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLDhCQUE4QixVQUFVLG1DQUFtQyxVQUFVLGlDQUFpQyxVQUFVLHFDQUFxQyxVQUFVLCtCQUErQixVQUFVLDRCQUE0QixVQUFVLDJCQUEyQixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDZCQUE2QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLCtCQUErQixVQUFVLDhCQUE4QixVQUFVLG1DQUFtQyxVQUFVLDZCQUE2QixVQUFVLDBCQUEwQixVQUFVLDZCQUE2QixVQUFVLHVDQUF1QyxVQUFVLCtCQUErQixVQUFVLDZCQUE2QixVQUFVLCtCQUErQixVQUFVLHdCQUF3QixVQUFVLHlCQUF5QixVQUFVLHlCQUF5QixVQUFVLDJCQUEyQixVQUFVLDZCQUE2QixVQUFVLDBCQUEwQixVQUFVLCtCQUErQixVQUFVLDhCQUE4QixVQUFVLDRCQUE0QixVQUFVLHlCQUF5QixVQUFVLDhCQUE4QixVQUFVLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLDBCQUEwQixVQUFVLCtCQUErQixVQUFVLDRCQUE0QixVQUFVLCtCQUErQixVQUFVLGtDQUFrQyxVQUFVLGlDQUFpQyxVQUFVLDBCQUEwQixVQUFVLDRCQUE0QixVQUFVLCtCQUErQixVQUFVLDZCQUE2QixVQUFVLHdCQUF3QixVQUFVLDZCQUE2QixVQUFVLDJCQUEyQixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixTQUFTLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLGlDQUFpQyxVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLCtCQUErQixVQUFVLDhCQUE4QixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDJCQUEyQixVQUFVLHdCQUF3QixVQUFVLHlCQUF5QixVQUFVLHlCQUF5QixTQUFTLDhCQUE4QixVQUFVLG1DQUFtQyxVQUFVLG1DQUFtQyxVQUFVLDJCQUEyQixVQUFVLDZCQUE2QixVQUFVLHlCQUF5QixTQUFTLDJCQUEyQixVQUFVLDBCQUEwQixVQUFVLDRCQUE0QixVQUFVLGlDQUFpQyxVQUFVLDJCQUEyQixVQUFVLDhCQUE4QixVQUFVLG1DQUFtQyxVQUFVLG9DQUFvQyxVQUFVLG1DQUFtQyxVQUFVLHNDQUFzQyxVQUFVLCtCQUErQixVQUFVLGdDQUFnQyxVQUFVLCtCQUErQixVQUFVLGtDQUFrQyxVQUFVLHlCQUF5QixVQUFVLDJCQUEyQixVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLHlCQUF5QixVQUFVLHlCQUF5QixVQUFVLDRCQUE0QixVQUFVLHVCQUF1QixVQUFVLDJCQUEyQixVQUFVLHdCQUF3QixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLHdCQUF3QixVQUFVLCtCQUErQixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLDZCQUE2QixVQUFVLGtDQUFrQyxVQUFVLCtCQUErQixVQUFVLDBCQUEwQixTQUFTLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLG1DQUFtQyxVQUFVLDBCQUEwQixVQUFVLDZCQUE2QixVQUFVLDRCQUE0QixVQUFVLDBCQUEwQixVQUFVLDJCQUEyQixVQUFVLDJCQUEyQixVQUFVLDhCQUE4QixVQUFVLDJCQUEyQixTQUFTLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLDBCQUEwQixTQUFTLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLG1DQUFtQyxVQUFVLDJCQUEyQixVQUFVLDJCQUEyQixVQUFVLDRCQUE0QixTQUFTLDhCQUE4QixVQUFVLGlDQUFpQyxVQUFVLGlDQUFpQyxVQUFVLDZCQUE2QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLDBCQUEwQixVQUFVLDhCQUE4QixVQUFVLHlCQUF5QixVQUFVLDJCQUEyQixVQUFVLDBCQUEwQixVQUFVLDRCQUE0QixVQUFVLDhCQUE4QixVQUFVLDJCQUEyQixVQUFVLDZCQUE2QixVQUFVLGdDQUFnQyxVQUFVLCtCQUErQixVQUFVLGdDQUFnQyxVQUFVLDhCQUE4QixVQUFVLHlCQUF5QixVQUFVLHlDQUF5QyxVQUFVLDZDQUE2QyxVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLDhCQUE4QixVQUFVLG1DQUFtQyxVQUFVLCtCQUErQixVQUFVLHlCQUF5QixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLDJCQUEyQixVQUFVLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLCtCQUErQixVQUFVLDhCQUE4QixVQUFVLDZCQUE2QixVQUFVLCtCQUErQixVQUFVLCtCQUErQixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDZCQUE2QixVQUFVLDJCQUEyQixVQUFVLDhCQUE4QixVQUFVLDRCQUE0QixVQUFVLDJCQUEyQixVQUFVLCtCQUErQixVQUFVLDBCQUEwQixVQUFVLDRCQUE0QixVQUFVLDhCQUE4QixVQUFVLDRCQUE0QixVQUFVLDRCQUE0QixVQUFVLDJCQUEyQixVQUFVLDRCQUE0QixVQUFVLDZCQUE2QixVQUFVLDRCQUE0QixVQUFVLDhCQUE4QixVQUFVLDBCQUEwQixVQUFVLDBCQUEwQixVQUFVLDJCQUEyQixVQUFVLDZCQUE2QixVQUFVLDZCQUE2QixVQUFVLDJCQUEyQixVQUFVLHlCQUF5QixVQUFVLDRCQUE0QixVQUFVLDZCQUE2QixVQUFV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LDBCQUEwQixZQUFZLDJCQUEyQixZQUFZLDZCQUE2QixZQUFZLDZCQUE2QixZQUFZLDZCQUE2QixZQUFZLDZCQUE2QixZQUFZLHlCQUF5QixXQUFXLDBCQUEwQixXQUFXLDJCQUEyQixXQUFXLDBCQUEwQixXQUFXLDJCQUEyQixXQUFXLDBCQUEwQixXQUFXLDJCQUEyQixXQUFXLDBCQUEwQixXQUFXLGlDQUFpQyxXQUFXLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLHlCQUF5QixZQUFZLHlCQUF5QixZQUFZLDJCQUEyQixZQUFZLDJCQUEyQixZQUFZLHlCQUF5QixZQUFZLDJCQUEyQixZQUFZLGdDQUFnQyxZQUFZLHlCQUF5QixZQUFZLGdDQUFnQyxZQUFZLDJCQUEyQixZQUFZLDJCQUEyQixZQUFZLDZCQUE2QixZQUFZLDBCQUEwQixZQUFZLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLDhCQUE4QixZQUFZLDBCQUEwQixZQUFZLDRCQUE0QixZQUFZLDBCQUEwQixZQUFZLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLHlCQUF5QixXQUFXLHlCQUF5QixXQUFXLDRCQUE0QixXQUFXLDRCQUE0QixXQUFXLCtCQUErQixZQUFZLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLHlCQUF5QixZQUFZLDZCQUE2QixZQUFZLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLDJCQUEyQixZQUFZLGlDQUFpQyxZQUFZLDZCQUE2QixZQUFZLGtDQUFrQyxZQUFZLHdDQUF3QyxZQUFZLG1DQUFtQyxZQUFZLDBCQUEwQixZQUFZLCtCQUErQixZQUFZLHFDQUFxQyxZQUFZLGdDQUFnQyxZQUFZLDhCQUE4QixZQUFZLG9DQUFvQyxZQUFZLHlCQUF5QixXQUFXLDBCQUEwQixXQUFXLCtCQUErQixXQUFXLDJCQUEyQixXQUFXLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLDhCQUE4QixZQUFZLDZCQUE2QixZQUFZLG1DQUFtQyxZQUFZLDZCQUE2QixZQUFZLG1DQUFtQyxZQUFZLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLHVDQUF1QyxZQUFZLDZDQUE2QyxZQUFZLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLHlCQUF5QixZQUFZLCtCQUErQixZQUFZLDJCQUEyQixZQUFZLDBCQUEwQixZQUFZLDBCQUEwQixZQUFZLGdDQUFnQyxZQUFZLGdDQUFnQyxZQUFZLCtCQUErQixZQUFZLGdDQUFnQyxZQUFZLDJCQUEyQixZQUFZLGdDQUFnQyxZQUFZLDRCQUE0QixXQUFXLDhCQUE4QixZQUFZLDJCQUEyQixZQUFZLG9DQUFvQyxXQUFXLDBCQUEwQixXQUFXLDJCQUEyQixXQUFXLDRCQUE0QixZQUFZLGtDQUFrQyxZQUFZLGdDQUFnQyxZQUFZLHlCQUF5QixZQUFZLGdDQUFnQyxZQUFZLGlDQUFpQyxZQUFZLDRCQUE0QixZQUFZLHlCQUF5QixZQUFZLDJCQUEyQixZQUFZLDJCQUEyQixZQUFZLDJCQUEyQixZQUFZLDJCQUEyQixZQUFZLDBCQUEwQixZQUFZLGtDQUFrQyxZQUFZLG1DQUFtQyxZQUFZLDZCQUE2QixZQUFZLG9DQUFvQyxZQUFZLDZCQUE2QixZQUFZLDJCQUEyQixZQUFZLDBCQUEwQixZQUFZLHFDQUFxQyxZQUFZLDZCQUE2QixZQUFZLG9DQUFvQyxZQUFZLDBCQUEwQixZQUFZLDhCQUE4QixZQUFZLDBCQUEwQixZQUFZLDJCQUEyQixZQUFZLDRCQUE0QixZQUFZLDRCQUE0QixZQUFZLDhCQUE4QixZQUFZLDhCQUE4QixZQUFZLDhCQUE4QixZQUFZLDhCQUE4QixZQUFZLDhCQUE4QixZQUFZLDhCQUE4QixZQUFZLDJCQUEyQixZQUFZLDhCQUE4QixZQUFZLCtCQUErQixZQUFZLCtCQUErQixZQUFZLDZCQUE2QixZQUFZLGdDQUFnQyxZQUFZLGdEQUFnRCxZQUFZLDBCQUEwQixZQUFZLDRCQUE0QixZQUFZLHdDQUF3QyxZQUFZLG1DQUFtQyxXQUFXLGtDQUFrQyxZQUFZLG1DQUFtQyxZQUFZLGtDQUFrQyxZQUFZLDBCQUEwQixZQUFZLCtCQUErQixZQUFZLHlCQUF5QixZQUFZLDBCQUEwQixZQUFZLDBCQUEwQixZQUFZLDJCQUEyQixZQUFZLG1DQUFtQyxZQUFZLDhCQUE4QixZQUFZLDJCQUEyQixZQUFZLDBCQUEwQixZQUFZLDBCQUEwQixZQUFZLDZCQUE2QixZQUFZLDBCQUEwQixZQUFZLDZCQUE2QixZQUFZLGdDQUFnQyxZQUFZLDBCQUEwQixZQUFZLDJCQUEyQixZQUFZLGtDQUFrQyxZQUFZLG1DQUFtQyxZQUFZLG1DQUFtQyxZQUFZLGlDQUFpQyxTQUFTLGtDQUFrQyxVQUFVLDRCQUE0QixVQUFVLDZCQUE2QixVQUFVLDRCQUE0QixVQUFVLGtDQUFrQyxVQUFVLGtDQUFrQyxVQUFVLG9DQUFvQyxVQUFVLDZCQUE2QixVQUFVLDhCQUE4QixVQUFVLCtCQUErQixVQUFVLG9DQUFvQyxVQUFVLDJCQUEyQixVQUFVLDJCQUEyQixVQUFVLCtCQUErQixVQUFVLDJCQUEyQixVQUFVLGlEQUFpRCxVQUFVLGdDQUFnQyxVQUFVLHlCQUF5QixVQUFVLGdDQUFnQyxVQUFVLG1DQUFtQyxVQUFVLG9DQUFvQyxjQUFjLGlDQUFpQyxZQUFZLHFDQUFxQyxZQUFZLHFDQUFxQyxZQUFZLHVDQUF1QyxZQUFZLDBCQUEwQixVQUFVLEVBQUUsUUFBUSx3R0FBd0csK0NBQStDLFVBQVUscUVBQXFFLGFBQWEsYUFBYSxzQ0FBc0MsU0FBUyxvQ0FBb0MsNkJBQTZCLGtCQUFrQixzQ0FBc0MsNkJBQTZCLGtCQUFrQixnQkFBZ0IsaUNBQWlDLGVBQWUsc0JBQXNCLDBCQUEwQixZQUFZLEdBQUc7QUFDemwyTixvQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN4RWUsUUFBTUEsUUFBTixTQUF1QkMsbUJBQXZCLENBQW1DO0FBQzlDQyxlQUFXLEdBQUU7QUFDVDtBQUNIOztBQUg2QyIsImZpbGUiOiJAY2F1c2FsTmV0L21lbWNhY2hlL2Z1bmN0aW9uLm5vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJAY2F1c2FsTmV0L21lbWNhY2hlXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIkBjYXVzYWxOZXQvbWVtY2FjaGVcIl0gPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9mdW5jdGlvbi5qc1wiKTtcbiIsIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHNbXCJAY2F1c2FsTmV0L2NvcmVcIl09ZSgpOnRbXCJAY2F1c2FsTmV0L2NvcmVcIl09ZSgpfSh0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4ocil7aWYoZVtyXSlyZXR1cm4gZVtyXS5leHBvcnRzO3ZhciBpPWVbcl09e2k6cixsOiExLGV4cG9ydHM6e319O3JldHVybiB0W3JdLmNhbGwoaS5leHBvcnRzLGksaS5leHBvcnRzLG4pLGkubD0hMCxpLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUscil7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0OnJ9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgcj1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihyKSxPYmplY3QuZGVmaW5lUHJvcGVydHkocixcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIGkgaW4gdCluLmQocixpLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwsaSkpO3JldHVybiByfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiXCIsbihuLnM9MjgzKX0oW2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24odCxyLGksYSl7bi5kKGUsXCJ1ZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFZsfSksbi5kKGUsXCJGYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIFdsfSksbi5kKGUsXCJrYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHFsfSksbi5kKGUsXCJyY1wiLGZ1bmN0aW9uKCl7cmV0dXJuICRsfSksbi5kKGUsXCJ2ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIENsfSksbi5kKGUsXCJFY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFNjfSksbi5kKGUsXCJxYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHp0fSksbi5kKGUsXCJQYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJsfSksbi5kKGUsXCJsY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIF9sfSksbi5kKGUsXCJ0ZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIE5sfSksbi5kKGUsXCJmZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEFsfSksbi5kKGUsXCJxZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFp9KSxuLmQoZSxcIndlXCIsZnVuY3Rpb24oKXtyZXR1cm4gUGx9KSxuLmQoZSxcInBiXCIsZnVuY3Rpb24oKXtyZXR1cm4gQnR9KSxuLmQoZSxcImFcIixmdW5jdGlvbigpe3JldHVybiBSbH0pLG4uZChlLFwiYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIERsfSksbi5kKGUsXCJjXCIsZnVuY3Rpb24oKXtyZXR1cm4gTWx9KSxuLmQoZSxcImRcIixmdW5jdGlvbigpe3JldHVybiBqbH0pLG4uZChlLFwiaVwiLGZ1bmN0aW9uKCl7cmV0dXJuIExsfSksbi5kKGUsXCJqXCIsZnVuY3Rpb24oKXtyZXR1cm4gVGx9KSxuLmQoZSxcImtcIixmdW5jdGlvbigpe3JldHVybiB6bH0pLG4uZChlLFwiblwiLGZ1bmN0aW9uKCl7cmV0dXJuIEJsfSksbi5kKGUsXCJvXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnR9KSxuLmQoZSxcInBcIixmdW5jdGlvbigpe3JldHVybiBzdH0pLG4uZChlLFwidGVcIixmdW5jdGlvbigpe3JldHVybiBidH0pLG4uZChlLFwicVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGh0fSksbi5kKGUsXCJsXCIsZnVuY3Rpb24oKXtyZXR1cm4gcHR9KSxuLmQoZSxcIm1cIixmdW5jdGlvbigpe3JldHVybiBadX0pLG4uZChlLFwiZlwiLGZ1bmN0aW9uKCl7cmV0dXJuIEx0fSksbi5kKGUsXCJnXCIsZnVuY3Rpb24oKXtyZXR1cm4ganR9KSxuLmQoZSxcImhcIixmdW5jdGlvbigpe3JldHVybiBKZX0pLG4uZChlLFwiZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFllfSksbi5kKGUsXCJPYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHdjfSksbi5kKGUsXCJYYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHBjfSksbi5kKGUsXCJqY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGNjfSksbi5kKGUsXCJKZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFl1fSksbi5kKGUsXCJMY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEFlfSksbi5kKGUsXCJKXCIsZnVuY3Rpb24oKXtyZXR1cm4gcW99KSxuLmQoZSxcIktcIixmdW5jdGlvbigpe3JldHVybiAkb30pLG4uZChlLFwiTFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEhvfSksbi5kKGUsXCJJXCIsZnVuY3Rpb24oKXtyZXR1cm4gS299KSxuLmQoZSxcIlNcIixmdW5jdGlvbigpe3JldHVybiBUZX0pLG4uZChlLFwiZGRcIixmdW5jdGlvbigpe3JldHVybiBSZX0pLG4uZChlLFwiTmJcIixmdW5jdGlvbigpe3JldHVybiBEZX0pLG4uZChlLFwiVFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGdhfSksbi5kKGUsXCJVXCIsZnVuY3Rpb24oKXtyZXR1cm4geWF9KSxuLmQoZSxcIlZcIixmdW5jdGlvbigpe3JldHVybiB2YX0pLG4uZChlLFwiV1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGJhfSksbi5kKGUsXCJYXCIsZnVuY3Rpb24oKXtyZXR1cm4gd2F9KSxuLmQoZSxcIktkXCIsZnVuY3Rpb24oKXtyZXR1cm4gX2F9KSxuLmQoZSxcIllcIixmdW5jdGlvbigpe3JldHVybiBjc30pLG4uZChlLFwiWlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGxzfSksbi5kKGUsXCJjYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGZzfSksbi5kKGUsXCJhYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGhzfSksbi5kKGUsXCJpYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHBzfSksbi5kKGUsXCJzZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGRzfSksbi5kKGUsXCJiYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIG1zfSksbi5kKGUsXCJrY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHJzfSksbi5kKGUsXCJuYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGlzfSksbi5kKGUsXCJNY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGFzfSksbi5kKGUsXCJoZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGdzfSksbi5kKGUsXCJpZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHlzfSksbi5kKGUsXCJqZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZzfSksbi5kKGUsXCJrZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJzfSksbi5kKGUsXCJsZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHdzfSksbi5kKGUsXCJuY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEVzfSksbi5kKGUsXCJHXCIsZnVuY3Rpb24oKXtyZXR1cm4gU3N9KSxuLmQoZSxcIlNjXCIsZnVuY3Rpb24oKXtyZXR1cm4gTnN9KSxuLmQoZSxcIkFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gSXN9KSxuLmQoZSxcIkJkXCIsZnVuY3Rpb24oKXtyZXR1cm4gT3N9KSxuLmQoZSxcIkNkXCIsZnVuY3Rpb24oKXtyZXR1cm4ga3N9KSxuLmQoZSxcIkRkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQXN9KSxuLmQoZSxcIkVkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQ3N9KSxuLmQoZSxcInJcIixmdW5jdGlvbigpe3JldHVybiBsb30pLG4uZChlLFwic1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGZvfSksbi5kKGUsXCJ0XCIsZnVuY3Rpb24oKXtyZXR1cm4gaG99KSxuLmQoZSxcIkJcIixmdW5jdGlvbigpe3JldHVybiBwb30pLG4uZChlLFwiQ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIG1vfSksbi5kKGUsXCJEXCIsZnVuY3Rpb24oKXtyZXR1cm4gZ299KSxuLmQoZSxcIkZcIixmdW5jdGlvbigpe3JldHVybiB5b30pLG4uZChlLFwiUFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZvfSksbi5kKGUsXCJRXCIsZnVuY3Rpb24oKXtyZXR1cm4gYm99KSxuLmQoZSxcImRiXCIsZnVuY3Rpb24oKXtyZXR1cm4gd299KSxuLmQoZSxcImViXCIsZnVuY3Rpb24oKXtyZXR1cm4gX299KSxuLmQoZSxcInRiXCIsZnVuY3Rpb24oKXtyZXR1cm4geG99KSxuLmQoZSxcInViXCIsZnVuY3Rpb24oKXtyZXR1cm4gRW99KSxuLmQoZSxcIndiXCIsZnVuY3Rpb24oKXtyZXR1cm4gU299KSxuLmQoZSxcIkFiXCIsZnVuY3Rpb24oKXtyZXR1cm4gTm99KSxuLmQoZSxcImFjXCIsZnVuY3Rpb24oKXtyZXR1cm4gSW99KSxuLmQoZSxcImJjXCIsZnVuY3Rpb24oKXtyZXR1cm4gT299KSxuLmQoZSxcImNjXCIsZnVuY3Rpb24oKXtyZXR1cm4ga299KSxuLmQoZSxcIkRjXCIsZnVuY3Rpb24oKXtyZXR1cm4gQW99KSxuLmQoZSxcImVkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQ299KSxuLmQoZSxcIm5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gUG99KSxuLmQoZSxcIm9kXCIsZnVuY3Rpb24oKXtyZXR1cm4gVG99KSxuLmQoZSxcIndkXCIsZnVuY3Rpb24oKXtyZXR1cm4gUm99KSxuLmQoZSxcInhkXCIsZnVuY3Rpb24oKXtyZXR1cm4gRG99KSxuLmQoZSxcInlkXCIsZnVuY3Rpb24oKXtyZXR1cm4gTW99KSxuLmQoZSxcInpkXCIsZnVuY3Rpb24oKXtyZXR1cm4gam99KSxuLmQoZSxcIkdkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQm99KSxuLmQoZSxcIkxkXCIsZnVuY3Rpb24oKXtyZXR1cm4gTG99KSxuLmQoZSxcIk1kXCIsZnVuY3Rpb24oKXtyZXR1cm4gem99KSxuLmQoZSxcIlJkXCIsZnVuY3Rpb24oKXtyZXR1cm4gRm99KSxuLmQoZSxcIldkXCIsZnVuY3Rpb24oKXtyZXR1cm4gVW99KSxuLmQoZSxcIlhkXCIsZnVuY3Rpb24oKXtyZXR1cm4gVm99KSxuLmQoZSxcInhcIixmdW5jdGlvbigpe3JldHVybiBUc30pLG4uZChlLFwieVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFJzfSksbi5kKGUsXCJ6XCIsZnVuY3Rpb24oKXtyZXR1cm4gRHN9KSxuLmQoZSxcIkFcIixmdW5jdGlvbigpe3JldHVybiBNc30pLG4uZChlLFwiZWNcIixmdW5jdGlvbigpe3JldHVybiBqc30pLG4uZChlLFwibWNcIixmdW5jdGlvbigpe3JldHVybiBCc30pLG4uZChlLFwicWNcIixmdW5jdGlvbigpe3JldHVybiBMc30pLG4uZChlLFwic2NcIixmdW5jdGlvbigpe3JldHVybiB6c30pLG4uZChlLFwieGNcIixmdW5jdGlvbigpe3JldHVybiBGc30pLG4uZChlLFwiVmRcIixmdW5jdGlvbigpe3JldHVybiBVc30pLG4uZChlLFwiWGNcIixmdW5jdGlvbigpe3JldHVybiBWc30pLG4uZChlLFwicmJcIixmdW5jdGlvbigpe3JldHVybiBXc30pLG4uZChlLFwic2JcIixmdW5jdGlvbigpe3JldHVybiBxc30pLG4uZChlLFwiSWJcIixmdW5jdGlvbigpe3JldHVybiAkc30pLG4uZChlLFwiSmJcIixmdW5jdGlvbigpe3JldHVybiBIc30pLG4uZChlLFwiS2JcIixmdW5jdGlvbigpe3JldHVybiBLc30pLG4uZChlLFwiTGJcIixmdW5jdGlvbigpe3JldHVybiBHc30pLG4uZChlLFwiVGJcIixmdW5jdGlvbigpe3JldHVybiBYc30pLG4uZChlLFwiVWJcIixmdW5jdGlvbigpe3JldHVybiBZc30pLG4uZChlLFwiVmJcIixmdW5jdGlvbigpe3JldHVybiBKc30pLG4uZChlLFwiV2JcIixmdW5jdGlvbigpe3JldHVybiBac30pLG4uZChlLFwiR2NcIixmdW5jdGlvbigpe3JldHVybiBRc30pLG4uZChlLFwiSGNcIixmdW5jdGlvbigpe3JldHVybiB0dX0pLG4uZChlLFwidVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGV1fSksbi5kKGUsXCJ2XCIsZnVuY3Rpb24oKXtyZXR1cm4gbnV9KSxuLmQoZSxcIndcIixmdW5jdGlvbigpe3JldHVybiBydX0pLG4uZChlLFwiRVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGl1fSksbi5kKGUsXCJsYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGF1fSksbi5kKGUsXCJtYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIG91fSksbi5kKGUsXCJCYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHN1fSksbi5kKGUsXCJvY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHV1fSksbi5kKGUsXCJwY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGN1fSksbi5kKGUsXCJ0Y1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGx1fSksbi5kKGUsXCJ1Y1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1fSksbi5kKGUsXCJ2Y1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGh1fSksbi5kKGUsXCJ3Y1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHB1fSksbi5kKGUsXCJ6Y1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGR1fSksbi5kKGUsXCJBY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIG11fSksbi5kKGUsXCJUY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGd1fSksbi5kKGUsXCJVY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHl1fSksbi5kKGUsXCJOZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZ1fSksbi5kKGUsXCJPZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJ1fSksbi5kKGUsXCJUZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHd1fSksbi5kKGUsXCJVZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIF91fSksbi5kKGUsXCJvYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIGt1fSksbi5kKGUsXCJTYlwiLGZ1bmN0aW9uKCl7cmV0dXJuIEF1fSksbi5kKGUsXCJWY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEN1fSksbi5kKGUsXCJmZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFB1fSksbi5kKGUsXCJyZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFR1fSksbi5kKGUsXCJmY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHh1fSksbi5kKGUsXCJnY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEV1fSksbi5kKGUsXCJoY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFN1fSksbi5kKGUsXCJpY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIE51fSksbi5kKGUsXCJ4ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEl1fSksbi5kKGUsXCJ5ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIE91fSksbi5kKGUsXCJOXCIsZnVuY3Rpb24oKXtyZXR1cm4gUmF9KSxuLmQoZSxcImplXCIsZnVuY3Rpb24oKXtyZXR1cm4gVGF9KSxuLmQoZSxcIldjXCIsZnVuY3Rpb24oKXtyZXR1cm4gRGF9KSxuLmQoZSxcIk1cIixmdW5jdGlvbigpe3JldHVybiBNYX0pLG4uZChlLFwiT1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGphfSksbi5kKGUsXCJSXCIsZnVuY3Rpb24oKXtyZXR1cm4gQmF9KSxuLmQoZSxcImZiXCIsZnVuY3Rpb24oKXtyZXR1cm4gTGF9KSxuLmQoZSxcImhiXCIsZnVuY3Rpb24oKXtyZXR1cm4gemF9KSxuLmQoZSxcInZiXCIsZnVuY3Rpb24oKXtyZXR1cm4gRmF9KSxuLmQoZSxcInhiXCIsZnVuY3Rpb24oKXtyZXR1cm4gVWF9KSxuLmQoZSxcIkNiXCIsZnVuY3Rpb24oKXtyZXR1cm4gVmF9KSxuLmQoZSxcIkNjXCIsZnVuY3Rpb24oKXtyZXR1cm4gV2F9KSxuLmQoZSxcIkljXCIsZnVuY3Rpb24oKXtyZXR1cm4gcWF9KSxuLmQoZSxcIk5jXCIsZnVuY3Rpb24oKXtyZXR1cm4gJGF9KSxuLmQoZSxcIk9jXCIsZnVuY3Rpb24oKXtyZXR1cm4gSGF9KSxuLmQoZSxcIlBjXCIsZnVuY3Rpb24oKXtyZXR1cm4gS2F9KSxuLmQoZSxcIlFjXCIsZnVuY3Rpb24oKXtyZXR1cm4gR2F9KSxuLmQoZSxcIlJjXCIsZnVuY3Rpb24oKXtyZXR1cm4gWGF9KSxuLmQoZSxcIlpjXCIsZnVuY3Rpb24oKXtyZXR1cm4gWWF9KSxuLmQoZSxcImFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gSmF9KSxuLmQoZSxcImJkXCIsZnVuY3Rpb24oKXtyZXR1cm4gWmF9KSxuLmQoZSxcImdkXCIsZnVuY3Rpb24oKXtyZXR1cm4gUWF9KSxuLmQoZSxcIkhkXCIsZnVuY3Rpb24oKXtyZXR1cm4gdG99KSxuLmQoZSxcIlBkXCIsZnVuY3Rpb24oKXtyZXR1cm4gZW99KSxuLmQoZSxcIlFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gbm99KSxuLmQoZSxcImhlXCIsZnVuY3Rpb24oKXtyZXR1cm4gcm99KSxuLmQoZSxcIm5lXCIsZnVuY3Rpb24oKXtyZXR1cm4gaW99KSxuLmQoZSxcInBlXCIsZnVuY3Rpb24oKXtyZXR1cm4gYW99KSxuLmQoZSxcInZkXCIsZnVuY3Rpb24oKXtyZXR1cm4gb299KSxuLmQoZSxcInpiXCIsZnVuY3Rpb24oKXtyZXR1cm4gJGV9KSxuLmQoZSxcIlliXCIsZnVuY3Rpb24oKXtyZXR1cm4gSGV9KSxuLmQoZSxcIkpjXCIsZnVuY3Rpb24oKXtyZXR1cm4gV2V9KSxuLmQoZSxcImNkXCIsZnVuY3Rpb24oKXtyZXR1cm4gS2V9KSxuLmQoZSxcInBkXCIsZnVuY3Rpb24oKXtyZXR1cm4gamV9KSxuLmQoZSxcIllkXCIsZnVuY3Rpb24oKXtyZXR1cm4gTWV9KSxuLmQoZSxcIlpkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQmV9KSxuLmQoZSxcImFlXCIsZnVuY3Rpb24oKXtyZXR1cm4gTGV9KSxuLmQoZSxcImJlXCIsZnVuY3Rpb24oKXtyZXR1cm4gemV9KSxuLmQoZSxcImNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gRmV9KSxuLmQoZSxcImRlXCIsZnVuY3Rpb24oKXtyZXR1cm4gVWV9KSxuLmQoZSxcImVlXCIsZnVuY3Rpb24oKXtyZXR1cm4gVmV9KSxuLmQoZSxcInplXCIsZnVuY3Rpb24oKXtyZXR1cm4gcWV9KSxuLmQoZSxcIktjXCIsZnVuY3Rpb24oKXtyZXR1cm4gR2V9KSxuLmQoZSxcIkFlXCIsZnVuY3Rpb24oKXtyZXR1cm4gWGV9KSxuLmQoZSxcIm1lXCIsZnVuY3Rpb24oKXtyZXR1cm4gUnV9KSxuLmQoZSxcIkZkXCIsZnVuY3Rpb24oKXtyZXR1cm4gQ2V9KSxuLmQoZSxcImRjXCIsZnVuY3Rpb24oKXtyZXR1cm4gUGV9KSxuLmQoZSxcIlpiXCIsZnVuY3Rpb24oKXtyZXR1cm4gRHV9KSxuLmQoZSxcIkZjXCIsZnVuY3Rpb24oKXtyZXR1cm4gTXV9KSxuLmQoZSxcIkRiXCIsZnVuY3Rpb24oKXtyZXR1cm4gTHV9KSxuLmQoZSxcIm9lXCIsZnVuY3Rpb24oKXtyZXR1cm4genV9KSxuLmQoZSxcIkhcIixmdW5jdGlvbigpe3JldHVybiBGdX0pLG4uZChlLFwiQmNcIixmdW5jdGlvbigpe3JldHVybiBVdX0pLG4uZChlLFwieWNcIixmdW5jdGlvbigpe3JldHVybiBWdX0pLG4uZChlLFwiU2RcIixmdW5jdGlvbigpe3JldHVybiBXdX0pLG4uZChlLFwia2VcIixmdW5jdGlvbigpe3JldHVybiBxdX0pLG4uZChlLFwicWRcIixmdW5jdGlvbigpe3JldHVybiAkdX0pLG4uZChlLFwieWJcIixmdW5jdGlvbigpe3JldHVybiBIdX0pLG4uZChlLFwiTWJcIixmdW5jdGlvbigpe3JldHVybiBLdX0pLG4uZChlLFwibWRcIixmdW5jdGlvbigpe3JldHVybiBHdX0pLG4uZChlLFwiUWJcIixmdW5jdGlvbigpe3JldHVybiBYdX0pLG4uZChlLFwiSWRcIixmdW5jdGlvbigpe3JldHVybiBKdX0pLG4uZChlLFwiRWJcIixmdW5jdGlvbigpe3JldHVybiBRdX0pLG4uZChlLFwibGVcIixmdW5jdGlvbigpe3JldHVybiBVbH0pLG4uZChlLFwiZ2VcIixmdW5jdGlvbigpe3JldHVybiBLdH0pLG4uZChlLFwiUmJcIixmdW5jdGlvbigpe3JldHVybiBHdH0pLG4uZChlLFwiamJcIixmdW5jdGlvbigpe3JldHVybiBYdH0pLG4uZChlLFwiaWVcIixmdW5jdGlvbigpe3JldHVybiBZdH0pLG4uZChlLFwiWWNcIixmdW5jdGlvbigpe3JldHVybiBKdH0pLG4uZChlLFwiZ2JcIixmdW5jdGlvbigpe3JldHVybiAkdH0pLG4uZChlLFwiR2JcIixmdW5jdGlvbigpe3JldHVybiBGdH0pLG4uZChlLFwiSGJcIixmdW5jdGlvbigpe3JldHVybiBVdH0pLG4uZChlLFwicmVcIixmdW5jdGlvbigpe3JldHVybiBWdH0pLG4uZChlLFwic2VcIixmdW5jdGlvbigpe3JldHVybiBXdH0pLG4uZChlLFwidWVcIixmdW5jdGlvbigpe3JldHVybiBxdH0pO1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xudmFyIG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09ZVtuXSl9O2Z1bmN0aW9uIHModCxlKXtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW8odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9dmFyIHU9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxyPWFyZ3VtZW50cy5sZW5ndGg7bjxyO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fTtmdW5jdGlvbiBjKHQsZSxuLHIpe3JldHVybiBuZXcobnx8KG49UHJvbWlzZSkpKGZ1bmN0aW9uKGksYSl7ZnVuY3Rpb24gbyh0KXt0cnl7dShyLm5leHQodCkpfWNhdGNoKHQpe2EodCl9fWZ1bmN0aW9uIHModCl7dHJ5e3Uoci50aHJvdyh0KSl9Y2F0Y2godCl7YSh0KX19ZnVuY3Rpb24gdSh0KXt0LmRvbmU/aSh0LnZhbHVlKTpuZXcgbihmdW5jdGlvbihlKXtlKHQudmFsdWUpfSkudGhlbihvLHMpfXUoKHI9ci5hcHBseSh0LGV8fFtdKSkubmV4dCgpKX0pfWZ1bmN0aW9uIGwodCxlKXt2YXIgbixyLGksYSxvPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJmlbMF0pdGhyb3cgaVsxXTtyZXR1cm4gaVsxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBhPXtuZXh0OnMoMCksdGhyb3c6cygxKSxyZXR1cm46cygyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoYVtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxhO2Z1bmN0aW9uIHMoYSl7cmV0dXJuIGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbihhKXtpZihuKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7bzspdHJ5e2lmKG49MSxyJiYoaT0yJmFbMF0/ci5yZXR1cm46YVswXT9yLnRocm93fHwoKGk9ci5yZXR1cm4pJiZpLmNhbGwociksMCk6ci5uZXh0KSYmIShpPWkuY2FsbChyLGFbMV0pKS5kb25lKXJldHVybiBpO3N3aXRjaChyPTAsaSYmKGE9WzImYVswXSxpLnZhbHVlXSksYVswXSl7Y2FzZSAwOmNhc2UgMTppPWE7YnJlYWs7Y2FzZSA0OnJldHVybiBvLmxhYmVsKysse3ZhbHVlOmFbMV0sZG9uZTohMX07Y2FzZSA1Om8ubGFiZWwrKyxyPWFbMV0sYT1bMF07Y29udGludWU7Y2FzZSA3OmE9by5vcHMucG9wKCksby50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoIShpPShpPW8udHJ5cykubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pJiYoNj09PWFbMF18fDI9PT1hWzBdKSl7bz0wO2NvbnRpbnVlfWlmKDM9PT1hWzBdJiYoIWl8fGFbMV0+aVswXSYmYVsxXTxpWzNdKSl7by5sYWJlbD1hWzFdO2JyZWFrfWlmKDY9PT1hWzBdJiZvLmxhYmVsPGlbMV0pe28ubGFiZWw9aVsxXSxpPWE7YnJlYWt9aWYoaSYmby5sYWJlbDxpWzJdKXtvLmxhYmVsPWlbMl0sby5vcHMucHVzaChhKTticmVha31pWzJdJiZvLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWV9YT1lLmNhbGwodCxvKX1jYXRjaCh0KXthPVs2LHRdLHI9MH1maW5hbGx5e249aT0wfWlmKDUmYVswXSl0aHJvdyBhWzFdO3JldHVybnt2YWx1ZTphWzBdP2FbMV06dm9pZCAwLGRvbmU6ITB9fShbYSxzXSl9fX12YXIgZj17fSxoPXthbHBoYTohMSxhbnRpYWxpYXM6ITEscHJlbXVsdGlwbGllZEFscGhhOiExLHByZXNlcnZlRHJhd2luZ0J1ZmZlcjohMSxkZXB0aDohMSxzdGVuY2lsOiExLGZhaWxJZk1ham9yUGVyZm9ybWFuY2VDYXZlYXQ6ITB9O2Z1bmN0aW9uIHAodCl7dCBpbiBmfHwoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKS5hZGRFdmVudExpc3RlbmVyKFwid2ViZ2xjb250ZXh0bG9zdFwiLGZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSxkZWxldGUgZlt0XX0sITEpLGZbdF09ZnVuY3Rpb24odCl7aWYoMSE9PXQmJjIhPT10KXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBnZXQgV2ViR0wgcmVuZGVyaW5nIGNvbnRleHQsIFdlYkdMIGlzIGRpc2FibGVkLlwiKTt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3JldHVybiAxPT09dD9lLmdldENvbnRleHQoXCJ3ZWJnbFwiLGgpfHxlLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIixoKTplLmdldENvbnRleHQoXCJ3ZWJnbDJcIixoKX0odCkpO3ZhciBlPWZbdF07cmV0dXJuIGUuaXNDb250ZXh0TG9zdCgpPyhkZWxldGUgZlt0XSxwKHQpKTooZS5kaXNhYmxlKGUuREVQVEhfVEVTVCksZS5kaXNhYmxlKGUuU1RFTkNJTF9URVNUKSxlLmRpc2FibGUoZS5CTEVORCksZS5kaXNhYmxlKGUuRElUSEVSKSxlLmRpc2FibGUoZS5QT0xZR09OX09GRlNFVF9GSUxMKSxlLmRpc2FibGUoZS5TQU1QTEVfQ09WRVJBR0UpLGUuZW5hYmxlKGUuU0NJU1NPUl9URVNUKSxlLmVuYWJsZShlLkNVTExfRkFDRSksZS5jdWxsRmFjZShlLkJBQ0spLGZbdF0pfWZ1bmN0aW9uIGQodCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49MCxyPTA7ZT4wOylyPU1hdGgucmFuZG9tKCkqZXwwLG49dFstLWVdLHRbZV09dFtyXSx0W3JdPW59ZnVuY3Rpb24gbSh0LGUsbil7cmV0dXJuIE1hdGgubWF4KHQsTWF0aC5taW4oZSxuKSl9ZnVuY3Rpb24gZyh0KXtyZXR1cm4gdCUyPT0wP3Q6dCsxfWZ1bmN0aW9uIHkodCl7Zm9yKHZhciBlPTAsbj0wO248dC5sZW5ndGg7bisrKWUrPXRbbl07cmV0dXJuIGV9ZnVuY3Rpb24gdih0LGUpe3ZhciBuPU1hdGgucmFuZG9tKCk7cmV0dXJuIGUqbisoMS1uKSp0fWZ1bmN0aW9uIGIodCxlKXtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJzdHJpbmdcIj09dHlwZW9mIGU/ZTplKCkpfWZ1bmN0aW9uIHcodCxlLG4pe3ZvaWQgMD09PW4mJihuPVwiXCIpLGIoUyh0LGUpLG4rXCIgU2hhcGVzIFwiK3QrXCIgYW5kIFwiK2UrXCIgbXVzdCBtYXRjaFwiKX1mdW5jdGlvbiBfKHQpe2IobnVsbCE9dCxcIlRoZSBpbnB1dCB0byB0aGUgdGVuc29yIGNvbnN0cnVjdG9yIG11c3QgYmUgYSBub24tbnVsbCB2YWx1ZS5cIil9ZnVuY3Rpb24geCh0LGUpe2lmKHZvaWQgMD09PWUmJihlPVtdKSxBcnJheS5pc0FycmF5KHQpfHxMKHQpKWZvcih2YXIgbj0wO248dC5sZW5ndGg7KytuKXgodFtuXSxlKTtlbHNlIGUucHVzaCh0KTtyZXR1cm4gZX1mdW5jdGlvbiBFKHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gMTtmb3IodmFyIGU9dFswXSxuPTE7bjx0Lmxlbmd0aDtuKyspZSo9dFtuXTtyZXR1cm4gZX1mdW5jdGlvbiBTKHQsZSl7aWYodD09PWUpcmV0dXJuITA7aWYobnVsbD09dHx8bnVsbD09ZSlyZXR1cm4hMTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWlmKHRbbl0hPT1lW25dKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIE4odCl7cmV0dXJuIHQlMT09MH1mdW5jdGlvbiBJKHQpe2lmKG51bGwhPU1hdGgudGFuaClyZXR1cm4gTWF0aC50YW5oKHQpO2lmKHQ9PT0xLzApcmV0dXJuIDE7aWYodD09PS0xLzApcmV0dXJuLTE7dmFyIGU9TWF0aC5leHAoMip0KTtyZXR1cm4oZS0xKS8oZSsxKX1mdW5jdGlvbiBPKHQpe2Zvcih2YXIgZT1NYXRoLmZsb29yKE1hdGguc3FydCh0KSk7ZT4xOy0tZSlpZih0JWU9PTApcmV0dXJuW2UsdC9lXTtyZXR1cm5bMSx0XX1mdW5jdGlvbiBrKHQsZSl7cmV0dXJuIGU8PXQubGVuZ3RoP3Q6dCtcIiBcIi5yZXBlYXQoZS10Lmxlbmd0aCl9ZnVuY3Rpb24gQSh0LGUsbil7cmV0dXJuIHZvaWQgMD09PWUmJihlPWZ1bmN0aW9uKHQpe3JldHVybiAwfSksbmV3IFByb21pc2UoZnVuY3Rpb24ocixpKXt2YXIgYT0wLG89ZnVuY3Rpb24oKXtpZih0KCkpcigpO2Vsc2V7dmFyIHM9ZSgrK2EpO251bGwhPW4mJmE+PW4/aSgpOnNldFRpbWVvdXQobyxzKX19O28oKX0pfWZ1bmN0aW9uIEModCxlKXtmb3IodmFyIG49MSxyPS0xLGk9MDtpPHQubGVuZ3RoOysraSlpZih0W2ldPj0wKW4qPXRbaV07ZWxzZSBpZigtMT09PXRbaV0pe2lmKC0xIT09cil0aHJvdyBFcnJvcihcIlNoYXBlcyBjYW4gb25seSBoYXZlIDEgaW1wbGljaXQgc2l6ZS4gRm91bmQgLTEgYXQgZGltIFwiK3IrXCIgYW5kIGRpbSBcIitpKTtyPWl9ZWxzZSBpZih0W2ldPDApdGhyb3cgRXJyb3IoXCJTaGFwZXMgY2FuIG5vdCBiZSA8IDAuIEZvdW5kIFwiK3RbaV0rXCIgYXQgZGltIFwiK2kpO2lmKC0xPT09cil7aWYoZT4wJiZlIT09bil0aHJvdyBFcnJvcihcIlNpemUoXCIrZStcIikgbXVzdCBtYXRjaCB0aGUgcHJvZHVjdCBvZiBzaGFwZSBcIit0KTtyZXR1cm4gdH1pZigwPT09bil0aHJvdyBFcnJvcihcIkNhbm5vdCBpbmZlciB0aGUgbWlzc2luZyBzaXplIGluIFtcIit0K1wiXSB3aGVuIHRoZXJlIGFyZSAwIGVsZW1lbnRzXCIpO2lmKGUlbiE9MCl0aHJvdyBFcnJvcihcIlRoZSBpbXBsaWNpdCBzaGFwZSBjYW4ndCBiZSBhIGZyYWN0aW9uYWwgbnVtYmVyLiBHb3QgXCIrZStcIiAvIFwiK24pO3ZhciBhPXQuc2xpY2UoKTtyZXR1cm4gYVtyXT1lL24sYX1mdW5jdGlvbiBQKHQsZSl7dmFyIG49ZS5sZW5ndGg7cmV0dXJuIGIoKHQ9bnVsbD09dD9lLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBlfSk6W10uY29uY2F0KHQpKS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gdD49LW4mJnQ8bn0pLFwiQWxsIHZhbHVlcyBpbiBheGlzIHBhcmFtIG11c3QgYmUgaW4gcmFuZ2UgWy1cIituK1wiLCBcIituK1wiKSBidXQgZ290IGF4aXMgXCIrdCksYih0LmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiBOKHQpfSksXCJBbGwgdmFsdWVzIGluIGF4aXMgcGFyYW0gbXVzdCBiZSBpbnRlZ2VycyBidXQgZ290IGF4aXMgXCIrdCksdC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQ8MD9uK3Q6dH0pfWZ1bmN0aW9uIFQodCxlKXtmb3IodmFyIG49W10scj1bXSxpPW51bGw9PWU/bnVsbDpQKGUsdCkuc29ydCgpLGE9MCxvPTA7bzx0Lmxlbmd0aDsrK28pe2lmKG51bGwhPWkpe2lmKGlbYV09PT1vJiYxIT09dFtvXSl0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBzcXVlZXplIGF4aXMgXCIrbytcIiBzaW5jZSBpdHMgZGltICdcIit0W29dK1wiJyBpcyBub3QgMVwiKTsobnVsbD09aVthXXx8aVthXT5vKSYmMT09PXRbb10mJihuLnB1c2godFtvXSksci5wdXNoKG8pKSxpW2FdPD1vJiZhKyt9MSE9PXRbb10mJihuLnB1c2godFtvXSksci5wdXNoKG8pKX1yZXR1cm57bmV3U2hhcGU6bixrZXB0RGltczpyfX1mdW5jdGlvbiBSKHQsZSl7dmFyIG49bnVsbDtpZihudWxsPT10fHxcImZsb2F0MzJcIj09PXQpbj1uZXcgRmxvYXQzMkFycmF5KGUpO2Vsc2UgaWYoXCJpbnQzMlwiPT09dCluPW5ldyBJbnQzMkFycmF5KGUpO2Vsc2V7aWYoXCJib29sXCIhPT10KXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YSB0eXBlIFwiK3QpO249bmV3IFVpbnQ4QXJyYXkoZSl9cmV0dXJuIG59ZnVuY3Rpb24gRCh0LGUpe3ZhciBuPW51bGw7aWYobnVsbD09dHx8XCJmbG9hdDMyXCI9PT10KW49bmV3IEZsb2F0MzJBcnJheShlKTtlbHNlIGlmKFwiaW50MzJcIj09PXQpbj1uZXcgSW50MzJBcnJheShlKTtlbHNlIGlmKFwiYm9vbFwiPT09dCluPW5ldyBVaW50OEFycmF5KGUpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXQpdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBkYXRhIHR5cGUgXCIrdCk7bj1uZXcgQXJyYXkoZSl9cmV0dXJuIG59ZnVuY3Rpb24gTSh0LGUsbil7aWYoXCJmbG9hdDMyXCI9PT1lKWZvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgaT10W3JdO2lmKGlzTmFOKGkpfHwhaXNGaW5pdGUoaSkpdGhyb3cgRXJyb3IoXCJUaGUgcmVzdWx0IG9mIHRoZSAnXCIrbitcIicgaXMgXCIraStcIi5cIil9fWZ1bmN0aW9uIGoodCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtpZihpc05hTihyKXx8IWlzRmluaXRlKHIpKXRocm93IEVycm9yKFwiQSB0ZW5zb3Igb2YgdHlwZSBcIitlK1wiIGJlaW5nIHVwbG9hZGVkIGNvbnRhaW5zIFwiK3IrXCIuXCIpfX1mdW5jdGlvbiBCKHQsZSl7cmV0dXJuIShcImNvbXBsZXg2NFwiPT09ZXx8XCJmbG9hdDMyXCI9PT1lJiZcImNvbXBsZXg2NFwiIT09dHx8XCJpbnQzMlwiPT09ZSYmXCJmbG9hdDMyXCIhPT10JiZcImNvbXBsZXg2NFwiIT09dHx8XCJib29sXCI9PT1lJiZcImJvb2xcIj09PXQpfWZ1bmN0aW9uIEwodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXl8fHQgaW5zdGFuY2VvZiBJbnQzMkFycmF5fHx0IGluc3RhbmNlb2YgVWludDhBcnJheX1mdW5jdGlvbiB6KHQpe2lmKFwiZmxvYXQzMlwiPT09dHx8XCJpbnQzMlwiPT09dClyZXR1cm4gNDtpZihcImNvbXBsZXg2NFwiPT09dClyZXR1cm4gODtpZihcImJvb2xcIj09PXQpcmV0dXJuIDE7dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBkdHlwZSBcIit0KX1mdW5jdGlvbiBGKHQpe2lmKG51bGw9PXQpcmV0dXJuIDA7dmFyIGU9MDtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlKz0yKnQubGVuZ3RofSksZX1mdW5jdGlvbiBVKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgU3RyaW5nfWZ1bmN0aW9uIFYodCl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIFcodCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHR9ZnVuY3Rpb24gcSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIEFycmF5P3EodFswXSk6dCBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheT9cImZsb2F0MzJcIjp0IGluc3RhbmNlb2YgSW50MzJBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXk/XCJpbnQzMlwiOlcodCk/XCJmbG9hdDMyXCI6VSh0KT9cInN0cmluZ1wiOlYodCk/XCJib29sXCI6XCJmbG9hdDMyXCJ9ZnVuY3Rpb24gJCh0KXtyZXR1cm4hISh0JiZ0LmNvbnN0cnVjdG9yJiZ0LmNhbGwmJnQuYXBwbHkpfWZ1bmN0aW9uIEgodCxlKXtmb3IodmFyIG49ZTtuPHQ7KytuKWlmKHQlbj09MClyZXR1cm4gbjtyZXR1cm4gdH1mdW5jdGlvbiBLKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8MilyZXR1cm5bXTt2YXIgbj1uZXcgQXJyYXkoZS0xKTtuW2UtMl09dFtlLTFdO2Zvcih2YXIgcj1lLTM7cj49MDstLXIpbltyXT1uW3IrMV0qdFtyKzFdO3JldHVybiBufWZ1bmN0aW9uIEcodCxlLG4pe2lmKFwic3RyaW5nXCI9PT1lKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjb252ZXJ0IGEgc3RyaW5nW10gdG8gYSBUeXBlZEFycmF5XCIpO2lmKEFycmF5LmlzQXJyYXkodCkmJih0PXgodCkpLG4mJmoodCxlKSxmdW5jdGlvbih0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgRmxvYXQzMkFycmF5JiZcImZsb2F0MzJcIj09PWV8fHQgaW5zdGFuY2VvZiBJbnQzMkFycmF5JiZcImludDMyXCI9PT1lfHx0IGluc3RhbmNlb2YgVWludDhBcnJheSYmXCJib29sXCI9PT1lfSh0LGUpKXJldHVybiB0O2lmKG51bGw9PWV8fFwiZmxvYXQzMlwiPT09ZXx8XCJjb21wbGV4NjRcIj09PWUpcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkodCk7aWYoXCJpbnQzMlwiPT09ZSlyZXR1cm4gbmV3IEludDMyQXJyYXkodCk7aWYoXCJib29sXCI9PT1lKXtmb3IodmFyIHI9bmV3IFVpbnQ4QXJyYXkodC5sZW5ndGgpLGk9MDtpPHIubGVuZ3RoOysraSkwIT09TWF0aC5yb3VuZCh0W2ldKSYmKHJbaV09MSk7cmV0dXJuIHJ9dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBkYXRhIHR5cGUgXCIrZSl9ZnVuY3Rpb24gWCh0LGUpe2Zvcih2YXIgbj1ZKHQsZSkscj0wO3I8bi5sZW5ndGg7cisrKW5bcl09MTtyZXR1cm4gbn1mdW5jdGlvbiBZKHQsZSl7aWYobnVsbD09ZXx8XCJmbG9hdDMyXCI9PT1lfHxcImNvbXBsZXg2NFwiPT09ZSlyZXR1cm4gbmV3IEZsb2F0MzJBcnJheSh0KTtpZihcImludDMyXCI9PT1lKXJldHVybiBuZXcgSW50MzJBcnJheSh0KTtpZihcImJvb2xcIj09PWUpcmV0dXJuIG5ldyBVaW50OEFycmF5KHQpO3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YSB0eXBlIFwiK2UpfWZ1bmN0aW9uIEooKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgcGVyZm9ybWFuY2UpcmV0dXJuIHBlcmZvcm1hbmNlLm5vdygpO2lmKHZvaWQgMCE9PXQpe3ZhciBlPXQuaHJ0aW1lKCk7cmV0dXJuIDFlMyplWzBdK2VbMV0vMWU2fXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBtZWFzdXJlIHRpbWUgaW4gdGhpcyBlbnZpcm9ubWVudC4gWW91IHNob3VsZCBydW4gdGYuanMgaW4gdGhlIGJyb3dzZXIgb3IgaW4gTm9kZS5qc1wiKX12YXIgWj1PYmplY3QuZnJlZXplKHtzaHVmZmxlOmQsY2xhbXA6bSxuZWFyZXN0TGFyZ2VyRXZlbjpnLHN1bTp5LHJhbmRVbmlmb3JtOnYsZGlzdFNxdWFyZWQ6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPU51bWJlcih0W3JdKS1OdW1iZXIoZVtyXSk7bis9aSppfXJldHVybiBufSxhc3NlcnQ6Yixhc3NlcnRTaGFwZXNNYXRjaDp3LGFzc2VydE5vbk51bGw6XyxmbGF0dGVuOngsc2l6ZUZyb21TaGFwZTpFLGlzU2NhbGFyU2hhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10Lmxlbmd0aH0sYXJyYXlzRXF1YWw6Uyxpc0ludDpOLHRhbmg6SSxzaXplVG9TcXVhcmlzaFNoYXBlOk8sY3JlYXRlU2h1ZmZsZWRJbmRpY2VzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgVWludDMyQXJyYXkodCksbj0wO248dDsrK24pZVtuXT1uO3JldHVybiBkKGUpLGV9LHJpZ2h0UGFkOmsscmVwZWF0ZWRUcnk6QSxpbmZlckZyb21JbXBsaWNpdFNoYXBlOkMscGFyc2VBeGlzUGFyYW06UCxzcXVlZXplU2hhcGU6VCxnZXRUeXBlZEFycmF5RnJvbURUeXBlOlIsZ2V0QXJyYXlGcm9tRFR5cGU6RCxjaGVja0NvbXB1dGF0aW9uRm9yRXJyb3JzOk0sY2hlY2tDb252ZXJzaW9uRm9yRXJyb3JzOmosaGFzRW5jb2RpbmdMb3NzOkIsaXNUeXBlZEFycmF5OkwsYnl0ZXNQZXJFbGVtZW50OnosYnl0ZXNGcm9tU3RyaW5nQXJyYXk6Rixpc1N0cmluZzpVLGlzQm9vbGVhbjpWLGlzTnVtYmVyOlcsaW5mZXJEdHlwZTpxLGlzRnVuY3Rpb246JCxuZWFyZXN0RGl2aXNvcjpILGNvbXB1dGVTdHJpZGVzOkssdG9UeXBlZEFycmF5OkcsbWFrZU9uZXNUeXBlZEFycmF5OlgsbWFrZVplcm9zVHlwZWRBcnJheTpZLG5vdzpKfSksUT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLmJhY2tlbmRUaW1lcj10LHRoaXMubG9nZ2VyPWUsbnVsbD09ZSYmKHRoaXMubG9nZ2VyPW5ldyB0dCl9cmV0dXJuIHQucHJvdG90eXBlLnByb2ZpbGVLZXJuZWw9ZnVuY3Rpb24odCxlKXt2YXIgbixyPXRoaXMsaT10aGlzLmJhY2tlbmRUaW1lci50aW1lKGZ1bmN0aW9uKCl7bj1lKCl9KTtyZXR1cm4oQXJyYXkuaXNBcnJheShuKT9uOltuXSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj1lLmRhdGFTeW5jKCk7TShuLGUuZHR5cGUsdCksaS50aGVuKGZ1bmN0aW9uKGkpe3ZhciBhPVwiXCI7bnVsbCE9aS5nZXRFeHRyYVByb2ZpbGVJbmZvJiYoYT1pLmdldEV4dHJhUHJvZmlsZUluZm8oKSksci5sb2dnZXIubG9nS2VybmVsUHJvZmlsZSh0LGUsbixpLmtlcm5lbE1zLGEpfSl9KSxufSx0fSgpLHR0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gdC5wcm90b3R5cGUubG9nS2VybmVsUHJvZmlsZT1mdW5jdGlvbih0LGUsbixyLGkpe3ZhciBhPWsocitcIm1zXCIsOSksbz1rKHQsMjUpLHM9ZS5yYW5rLHU9ZS5zaXplLGM9ayhlLnNoYXBlLnRvU3RyaW5nKCksMTQpO2NvbnNvbGUubG9nKFwiJWNcIitvK1wiXFx0JWNcIithK1wiXFx0JWNcIitzK1wiRCBcIitjK1wiXFx0JWNcIit1K1wiXFx0JWNcIitpLFwiZm9udC13ZWlnaHQ6Ym9sZFwiLFwiY29sb3I6cmVkXCIsXCJjb2xvcjpibHVlXCIsXCJjb2xvcjogb3JhbmdlXCIsXCJjb2xvcjogZ3JlZW5cIil9LHR9KCksZXQ9MjAsbnQ9MyxydD03O2Z1bmN0aW9uIGl0KHQsZSxuLHIpe3ZhciBpPUsoZSksYT1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1FKGUpLGE9cltyLmxlbmd0aC0xXSxvPW5ldyBBcnJheShhKS5maWxsKDApLHM9ZS5sZW5ndGgsdT1cImNvbXBsZXg2NFwiPT09bj9vdCh0KTp0O2lmKHM+MSlmb3IodmFyIGM9MDtjPGkvYTtjKyspZm9yKHZhciBsPWMqYSxmPTA7ZjxhO2YrKylvW2ZdPU1hdGgubWF4KG9bZl0sYXQodVtsK2ZdLDApLmxlbmd0aCk7cmV0dXJuIG99KHQsZSxuLGkpLG89ZS5sZW5ndGgscz1mdW5jdGlvbiB0KGUsbixyLGksYSxvKXt2b2lkIDA9PT1vJiYobz0hMCk7dmFyIHM9XCJjb21wbGV4NjRcIj09PXI/MjoxLHU9blswXSxjPW4ubGVuZ3RoO2lmKDA9PT1jKXJldHVyblwiY29tcGxleDY0XCI9PT1yP1thdChvdChlKVswXSwwKV06W2VbMF0udG9TdHJpbmcoKV07aWYoMT09PWMpe2lmKHU+ZXQpe3ZhciBsPW50KnMsZj1BcnJheS5mcm9tKGUuc2xpY2UoMCxsKSksaD1BcnJheS5mcm9tKGUuc2xpY2UodS1udCpzLHUpKTtyZXR1cm5cImNvbXBsZXg2NFwiPT09ciYmKGY9b3QoZiksaD1vdChoKSksW1wiW1wiK2YubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGF0KHQsYVtlXSl9KS5qb2luKFwiLCBcIikrXCIsIC4uLiwgXCIraC5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm4gYXQodCxhW3UtbnQrZV0pfSkuam9pbihcIiwgXCIpK1wiXVwiXX1yZXR1cm5bXCJbXCIrKFwiY29tcGxleDY0XCI9PT1yP290KGUpOkFycmF5LmZyb20oZSkpLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBhdCh0LGFbZV0pfSkuam9pbihcIiwgXCIpK1wiXVwiXX12YXIgcD1uLnNsaWNlKDEpLGQ9aS5zbGljZSgxKSxtPWlbMF0qcyxnPVtdO2lmKHU+ZXQpe2Zvcih2YXIgeT0wO3k8bnQ7eSsrKXt2YXIgdj0oYj15Km0pK207Zy5wdXNoLmFwcGx5KGcsdChlLnNsaWNlKGIsdikscCxyLGQsYSwhMSkpfWZvcihnLnB1c2goXCIuLi5cIikseT11LW50O3k8dTt5Kyspdj0oYj15Km0pK20sZy5wdXNoLmFwcGx5KGcsdChlLnNsaWNlKGIsdikscCxyLGQsYSx5PT09dS0xKSl9ZWxzZSBmb3IoeT0wO3k8dTt5Kyspe3ZhciBiO3Y9KGI9eSptKSttLGcucHVzaC5hcHBseShnLHQoZS5zbGljZShiLHYpLHAscixkLGEseT09PXUtMSkpfXZhciB3PTI9PT1jP1wiLFwiOlwiXCI7Z1swXT1cIltcIitnWzBdK3c7Zm9yKHk9MTt5PGcubGVuZ3RoLTE7eSsrKWdbeV09XCIgXCIrZ1t5XSt3O3ZhciBfPVwiLFxcblwiO2Zvcih5PTI7eTxjO3krKylfKz1cIlxcblwiO3JldHVybiBnW2cubGVuZ3RoLTFdPVwiIFwiK2dbZy5sZW5ndGgtMV0rXCJdXCIrKG8/XCJcIjpfKSxnfSh0LGUsbixpLGEpLHU9W1wiVGVuc29yXCJdO3JldHVybiByJiYodS5wdXNoKFwiICBkdHlwZTogXCIrbiksdS5wdXNoKFwiICByYW5rOiBcIitvKSx1LnB1c2goXCIgIHNoYXBlOiBbXCIrZStcIl1cIiksdS5wdXNoKFwiICB2YWx1ZXM6XCIpKSx1LnB1c2gocy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCIgICAgXCIrdH0pLmpvaW4oXCJcXG5cIikpLHUuam9pbihcIlxcblwiKX1mdW5jdGlvbiBhdCh0LGUpe3JldHVybiBrKEFycmF5LmlzQXJyYXkodCk/cGFyc2VGbG9hdCh0WzBdLnRvRml4ZWQocnQpKStcIiArIFwiK3BhcnNlRmxvYXQodFsxXS50b0ZpeGVkKHJ0KSkrXCJqXCI6VSh0KT9cIidcIit0K1wiJ1wiOnBhcnNlRmxvYXQodC50b0ZpeGVkKHJ0KSkudG9TdHJpbmcoKSxlKX1mdW5jdGlvbiBvdCh0KXtmb3IodmFyIGU9W10sbj0wO248dC5sZW5ndGg7bis9MillLnB1c2goW3Rbbl0sdFtuKzFdXSk7cmV0dXJuIGV9dmFyIHN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbil7aWYodGhpcy5kdHlwZT1lLHRoaXMuc2hhcGU9dC5zbGljZSgpLHRoaXMuc2l6ZT1FKHQpLG51bGwhPW4pe3ZhciByPW4ubGVuZ3RoO2Iocj09PXRoaXMuc2l6ZSxcIkxlbmd0aCBvZiB2YWx1ZXMgJ1wiK3IrXCInIGRvZXMgbm90IG1hdGNoIHRoZSBzaXplIGluZmVycmVkIGJ5IHRoZSBzaGFwZSAnXCIrdGhpcy5zaXplK1wiJy5cIil9aWYoXCJjb21wbGV4NjRcIj09PWUpdGhyb3cgbmV3IEVycm9yKFwiY29tcGxleDY0IGR0eXBlIFRlbnNvckJ1ZmZlcnMgYXJlIG5vdCBzdXBwb3J0ZWQuIFBsZWFzZSBjcmVhdGUgYSBUZW5zb3JCdWZmZXIgZm9yIHRoZSByZWFsIGFuZCBpbWFnaW5hcnkgcGFydHMgc2VwYXJhdGVseSBhbmQgY2FsbCB0Zi5jb21wbGV4KHJlYWwsIGltYWcpLlwiKTt0aGlzLnZhbHVlcz1ufHxEKGUsRSh0aGlzLnNoYXBlKSksdGhpcy5zdHJpZGVzPUsodCl9cmV0dXJuIHQucHJvdG90eXBlLnNldD1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0xO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuLTFdPWFyZ3VtZW50c1tuXTswPT09ZS5sZW5ndGgmJihlPVswXSksYihlLmxlbmd0aD09PXRoaXMucmFuayxcIlRoZSBudW1iZXIgb2YgcHJvdmlkZWQgY29vcmRpbmF0ZXMgKFwiK2UubGVuZ3RoK1wiKSBtdXN0IG1hdGNoIHRoZSByYW5rIChcIit0aGlzLnJhbmsrXCIpXCIpO3ZhciByPXRoaXMubG9jVG9JbmRleChlKTt0aGlzLnZhbHVlc1tyXT10fSx0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07MD09PXQubGVuZ3RoJiYodD1bMF0pO2Zvcih2YXIgbj10W3QubGVuZ3RoLTFdLHI9MDtyPHQubGVuZ3RoLTE7KytyKW4rPXRoaXMuc3RyaWRlc1tyXSp0W3JdO3JldHVybiB0aGlzLnZhbHVlc1tuXX0sdC5wcm90b3R5cGUubG9jVG9JbmRleD1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5yYW5rKXJldHVybiAwO2lmKDE9PT10aGlzLnJhbmspcmV0dXJuIHRbMF07Zm9yKHZhciBlPXRbdC5sZW5ndGgtMV0sbj0wO248dC5sZW5ndGgtMTsrK24pZSs9dGhpcy5zdHJpZGVzW25dKnRbbl07cmV0dXJuIGV9LHQucHJvdG90eXBlLmluZGV4VG9Mb2M9ZnVuY3Rpb24odCl7aWYoMD09PXRoaXMucmFuaylyZXR1cm5bXTtpZigxPT09dGhpcy5yYW5rKXJldHVyblt0XTtmb3IodmFyIGU9bmV3IEFycmF5KHRoaXMuc2hhcGUubGVuZ3RoKSxuPTA7bjxlLmxlbmd0aC0xOysrbillW25dPU1hdGguZmxvb3IodC90aGlzLnN0cmlkZXNbbl0pLHQtPWVbbl0qdGhpcy5zdHJpZGVzW25dO3JldHVybiBlW2UubGVuZ3RoLTFdPXQsZX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwicmFua1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zaGFwZS5sZW5ndGh9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdC5wcm90b3R5cGUudG9UZW5zb3I9ZnVuY3Rpb24oKXtyZXR1cm4gZnQubWFrZSh0aGlzLnNoYXBlLHt2YWx1ZXM6dGhpcy52YWx1ZXN9LHRoaXMuZHR5cGUpfSx0fSgpLHV0PW51bGwsY3Q9bnVsbDtmdW5jdGlvbiBsdCh0KXt1dD10fXZhciBmdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4scil7dGhpcy5pc0Rpc3Bvc2VkSW50ZXJuYWw9ITEsdGhpcy5zaGFwZT10LnNsaWNlKCksdGhpcy5kdHlwZT1lfHxcImZsb2F0MzJcIix0aGlzLnNpemU9RSh0KSx0aGlzLnN0cmlkZXM9Syh0KSx0aGlzLmRhdGFJZD1udWxsIT1yP3I6e30sdGhpcy5pZD11dCgpLm5leHRUZW5zb3JJZCgpLHRoaXMucmFua1R5cGU9dGhpcy5yYW5rPDU/dGhpcy5yYW5rLnRvU3RyaW5nKCk6XCJoaWdoZXJcIix1dCgpLnJlZ2lzdGVyVGVuc29yKHRoaXMpLG51bGwhPW4mJnV0KCkud3JpdGUodGhpcy5kYXRhSWQsbil9cmV0dXJuIHQubWFrZT1mdW5jdGlvbihlLG4scil7cmV0dXJuIG5ldyB0KGUscixuLnZhbHVlcyxuLmRhdGFJZCl9LHQucHJvdG90eXBlLmZsYXR0ZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLmFzMUQoKX0sdC5wcm90b3R5cGUuYXNTY2FsYXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxiKDE9PT10aGlzLnNpemUsXCJUaGUgYXJyYXkgbXVzdCBoYXZlIG9ubHkgMSBlbGVtZW50LlwiKSx0aGlzLnJlc2hhcGUoW10pfSx0LnByb3RvdHlwZS5hczFEPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksdGhpcy5yZXNoYXBlKFt0aGlzLnNpemVdKX0sdC5wcm90b3R5cGUuYXMyRD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHRoaXMucmVzaGFwZShbdCxlXSl9LHQucHJvdG90eXBlLmFzM0Q9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHRoaXMucmVzaGFwZShbdCxlLG5dKX0sdC5wcm90b3R5cGUuYXM0RD1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnJlc2hhcGUoW3QsZSxuLHJdKX0sdC5wcm90b3R5cGUuYXM1RD1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHRoaXMucmVzaGFwZShbdCxlLG4scixpXSl9LHQucHJvdG90eXBlLmFzVHlwZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5jYXN0KHRoaXMsdCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcInJhbmtcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hhcGUubGVuZ3RofSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLHQucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtiKHQubGVuZ3RoPT09dGhpcy5yYW5rLFwiTnVtYmVyIG9mIGNvb3JkaW5hdGVzIGluIGdldCgpIG11c3QgbWF0Y2ggdGhlIHJhbmsgb2YgdGhlIHRlbnNvclwiKSxiKFwiY29tcGxleDY0XCIhPT10aGlzLmR0eXBlLFwiVGVuc29yLmdldCgpIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIGNvbXBsZXg2NCB0ZW5zb3JzIHlldC5cIiksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSwwPT09dC5sZW5ndGgmJih0PVswXSk7Zm9yKHZhciBuPXRbdC5sZW5ndGgtMV0scj0wO3I8dC5sZW5ndGgtMTsrK3Ipbis9dGhpcy5zdHJpZGVzW3JdKnRbcl07cmV0dXJuIHRoaXMuZGF0YVN5bmMoKVtuXX0sdC5wcm90b3R5cGUuYnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGN0LmJ1ZmZlcih0aGlzLnNoYXBlLHRoaXMuZHR5cGUsdGhpcy5kYXRhU3luYygpKX0sdC5wcm90b3R5cGUuZGF0YT1mdW5jdGlvbigpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBsKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksWzIsdXQoKS5yZWFkKHRoaXMuZGF0YUlkKV19KX0pfSx0LnByb3RvdHlwZS5kYXRhU3luYz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHV0KCkucmVhZFN5bmModGhpcy5kYXRhSWQpfSx0LnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5pc0Rpc3Bvc2VkfHwodXQoKS5kaXNwb3NlVGVuc29yKHRoaXMpLHRoaXMuaXNEaXNwb3NlZEludGVybmFsPSEwKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaXNEaXNwb3NlZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc0Rpc3Bvc2VkSW50ZXJuYWx9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdC5wcm90b3R5cGUudGhyb3dJZkRpc3Bvc2VkPWZ1bmN0aW9uKCl7aWYodGhpcy5pc0Rpc3Bvc2VkKXRocm93IG5ldyBFcnJvcihcIlRlbnNvciBpcyBkaXNwb3NlZC5cIil9LHQucHJvdG90eXBlLnRvRmxvYXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc1R5cGUoXCJmbG9hdDMyXCIpfSx0LnByb3RvdHlwZS50b0ludD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzVHlwZShcImludDMyXCIpfSx0LnByb3RvdHlwZS50b0Jvb2w9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc1R5cGUoXCJib29sXCIpfSx0LnByb3RvdHlwZS5wcmludD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ITEpLGN0LnByaW50KHRoaXMsdCl9LHQucHJvdG90eXBlLnJlc2hhcGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QucmVzaGFwZSh0aGlzLHQpfSx0LnByb3RvdHlwZS5yZXNoYXBlQXM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksdGhpcy5yZXNoYXBlKHQuc2hhcGUpfSx0LnByb3RvdHlwZS5leHBhbmREaW1zPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSxjdC5leHBhbmREaW1zKHRoaXMsdCl9LHQucHJvdG90eXBlLmN1bXN1bT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PXQmJih0PTApLHZvaWQgMD09PWUmJihlPSExKSx2b2lkIDA9PT1uJiYobj0hMSksY3QuY3Vtc3VtKHRoaXMsdCxlLG4pfSx0LnByb3RvdHlwZS5zcXVlZXplPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNxdWVlemUodGhpcyx0KX0sdC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5jbG9uZSh0aGlzKX0sdC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PSExKSxpdCh0aGlzLmRhdGFTeW5jKCksdGhpcy5zaGFwZSx0aGlzLmR0eXBlLHQpfSx0LnByb3RvdHlwZS50aWxlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnRpbGUodGhpcyx0KX0sdC5wcm90b3R5cGUuZ2F0aGVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuZ2F0aGVyKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubWF0TXVsPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLHZvaWQgMD09PW4mJihuPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1hdE11bCh0aGlzLHQsZSxuKX0sdC5wcm90b3R5cGUuZG90PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmRvdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5ub3JtPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9XCJldWNsaWRlYW5cIiksdm9pZCAwPT09ZSYmKGU9bnVsbCksdm9pZCAwPT09biYmKG49ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Qubm9ybSh0aGlzLHQsZSxuKX0sdC5wcm90b3R5cGUuc2xpY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zbGljZSh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnJldmVyc2U9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QucmV2ZXJzZSh0aGlzLHQpfSx0LnByb3RvdHlwZS5jb25jYXQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49MCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxlIGluc3RhbmNlb2YgdCYmKGU9W2VdKSxjdC5jb25jYXQoW3RoaXNdLmNvbmNhdChlKSxuKX0sdC5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zcGxpdCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnN0YWNrPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLGN0LnN0YWNrKFt0aGlzLHRdLGUpfSx0LnByb3RvdHlwZS51bnN0YWNrPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLGN0LnVuc3RhY2sodGhpcyxlKX0sdC5wcm90b3R5cGUucGFkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLGN0LnBhZCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLmJhdGNoTm9ybWFsaXphdGlvbj1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB2b2lkIDA9PT1uJiYobj0uMDAxKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmJhdGNoTm9ybWFsaXphdGlvbih0aGlzLHQsZSxuLHIsaSl9LHQucHJvdG90eXBlLmFsbD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD1udWxsKSx2b2lkIDA9PT1lJiYoZT0hMSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5hbGwodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5hbnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYW55KHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubG9nU3VtRXhwPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmxvZ1N1bUV4cCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnN1bT1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD1udWxsKSx2b2lkIDA9PT1lJiYoZT0hMSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zdW0odGhpcyx0LGUpfSx0LnByb3RvdHlwZS5wcm9kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnByb2QodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5tZWFuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1lYW4odGhpcyx0LGUpfSx0LnByb3RvdHlwZS5taW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubWluKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubWF4PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1heCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLmFyZ01pbj1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5hcmdNaW4odGhpcyx0KX0sdC5wcm90b3R5cGUuYXJnTWF4PWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1udWxsKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmFyZ01heCh0aGlzLHQpfSx0LnByb3RvdHlwZS5jYXN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmNhc3QodGhpcyx0KX0sdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmFkZCh0aGlzLHQpfSx0LnByb3RvdHlwZS5hZGRTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYWRkU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLmF0YW4yPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmF0YW4yKHRoaXMsdCl9LHQucHJvdG90eXBlLnN1Yj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zdWIodGhpcyx0KX0sdC5wcm90b3R5cGUuc3ViU3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnN1YlN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QucG93KHRoaXMsdCl9LHQucHJvdG90eXBlLnBvd1N0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5wb3dTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm11bCh0aGlzLHQpfSx0LnByb3RvdHlwZS5tdWxTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubXVsU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLmRpdj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5kaXYodGhpcyx0KX0sdC5wcm90b3R5cGUuZmxvb3JEaXY9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuZmxvb3JEaXYodGhpcyx0KX0sdC5wcm90b3R5cGUuZGl2U3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmRpdlN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5taW5pbXVtPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1pbmltdW0odGhpcyx0KX0sdC5wcm90b3R5cGUubWluaW11bVN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5taW5pbXVtU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubWF4aW11bSh0aGlzLHQpfSx0LnByb3RvdHlwZS5tYXhpbXVtU3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1heGltdW1TdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUubW9kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1vZCh0aGlzLHQpfSx0LnByb3RvdHlwZS5tb2RTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubW9kU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLnNxdWFyZWREaWZmZXJlbmNlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNxdWFyZWREaWZmZXJlbmNlKHRoaXMsdCl9LHQucHJvdG90eXBlLnNxdWFyZWREaWZmZXJlbmNlU3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNxdWFyZWREaWZmZXJlbmNlU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLnRyYW5zcG9zZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC50cmFuc3Bvc2UodGhpcyx0KX0sdC5wcm90b3R5cGUubm90RXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Qubm90RXF1YWwodGhpcyx0KX0sdC5wcm90b3R5cGUubm90RXF1YWxTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Qubm90RXF1YWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUubGVzcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5sZXNzKHRoaXMsdCl9LHQucHJvdG90eXBlLmxlc3NTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubGVzc1N0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5lcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5lcXVhbCh0aGlzLHQpfSx0LnByb3RvdHlwZS5lcXVhbFN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5lcXVhbFN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5sZXNzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubGVzc0VxdWFsKHRoaXMsdCl9LHQucHJvdG90eXBlLmxlc3NFcXVhbFN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5sZXNzRXF1YWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuZ3JlYXRlcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5ncmVhdGVyKHRoaXMsdCl9LHQucHJvdG90eXBlLmdyZWF0ZXJTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuZ3JlYXRlclN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5ncmVhdGVyRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuZ3JlYXRlckVxdWFsKHRoaXMsdCl9LHQucHJvdG90eXBlLmdyZWF0ZXJFcXVhbFN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5ncmVhdGVyRXF1YWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUubG9naWNhbEFuZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5sb2dpY2FsQW5kKHRoaXMsdCl9LHQucHJvdG90eXBlLmxvZ2ljYWxPcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5sb2dpY2FsT3IodGhpcyx0KX0sdC5wcm90b3R5cGUubG9naWNhbE5vdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmxvZ2ljYWxOb3QodGhpcyl9LHQucHJvdG90eXBlLmxvZ2ljYWxYb3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubG9naWNhbFhvcih0aGlzLHQpfSx0LnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LndoZXJlKHQsdGhpcyxlKX0sdC5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubmVnKHRoaXMpfSx0LnByb3RvdHlwZS5jZWlsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuY2VpbCh0aGlzKX0sdC5wcm90b3R5cGUuZmxvb3I9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5mbG9vcih0aGlzKX0sdC5wcm90b3R5cGUuc2lnbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNpZ24odGhpcyl9LHQucHJvdG90eXBlLmV4cD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmV4cCh0aGlzKX0sdC5wcm90b3R5cGUuZXhwbTE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5leHBtMSh0aGlzKX0sdC5wcm90b3R5cGUubG9nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubG9nKHRoaXMpfSx0LnByb3RvdHlwZS5sb2cxcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmxvZzFwKHRoaXMpfSx0LnByb3RvdHlwZS5zcXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3FydCh0aGlzKX0sdC5wcm90b3R5cGUucnNxcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5yc3FydCh0aGlzKX0sdC5wcm90b3R5cGUuc3F1YXJlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3F1YXJlKHRoaXMpfSx0LnByb3RvdHlwZS5yZWNpcHJvY2FsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QucmVjaXByb2NhbCh0aGlzKX0sdC5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYWJzKHRoaXMpfSx0LnByb3RvdHlwZS5jbGlwQnlWYWx1ZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmNsaXBCeVZhbHVlKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUucmVsdT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnJlbHUodGhpcyl9LHQucHJvdG90eXBlLmVsdT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmVsdSh0aGlzKX0sdC5wcm90b3R5cGUuc2VsdT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNlbHUodGhpcyl9LHQucHJvdG90eXBlLmxlYWt5UmVsdT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9LjIpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubGVha3lSZWx1KHRoaXMsdCl9LHQucHJvdG90eXBlLnByZWx1PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnByZWx1KHRoaXMsdCl9LHQucHJvdG90eXBlLnNpZ21vaWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zaWdtb2lkKHRoaXMpfSx0LnByb3RvdHlwZS5sb2dTaWdtb2lkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QubG9nU2lnbW9pZCh0aGlzKX0sdC5wcm90b3R5cGUuc29mdHBsdXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zb2Z0cGx1cyh0aGlzKX0sdC5wcm90b3R5cGUuemVyb3NMaWtlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuemVyb3NMaWtlKHRoaXMpfSx0LnByb3RvdHlwZS5vbmVzTGlrZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm9uZXNMaWtlKHRoaXMpfSx0LnByb3RvdHlwZS5zaW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zaW4odGhpcyl9LHQucHJvdG90eXBlLmNvcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmNvcyh0aGlzKX0sdC5wcm90b3R5cGUudGFuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QudGFuKHRoaXMpfSx0LnByb3RvdHlwZS5hc2luPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYXNpbih0aGlzKX0sdC5wcm90b3R5cGUuYWNvcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmFjb3ModGhpcyl9LHQucHJvdG90eXBlLmF0YW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5hdGFuKHRoaXMpfSx0LnByb3RvdHlwZS5zaW5oPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc2luaCh0aGlzKX0sdC5wcm90b3R5cGUuY29zaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmNvc2godGhpcyl9LHQucHJvdG90eXBlLnRhbmg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC50YW5oKHRoaXMpfSx0LnByb3RvdHlwZS5hc2luaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmFzaW5oKHRoaXMpfSx0LnByb3RvdHlwZS5hY29zaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmFjb3NoKHRoaXMpfSx0LnByb3RvdHlwZS5hdGFuaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmF0YW5oKHRoaXMpfSx0LnByb3RvdHlwZS5lcmY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5lcmYodGhpcyl9LHQucHJvdG90eXBlLnJvdW5kPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Qucm91bmQodGhpcyl9LHQucHJvdG90eXBlLnN0ZXA9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PTApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3RlcCh0aGlzLHQpfSx0LnByb3RvdHlwZS5zb2Z0bWF4PWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0tMSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zb2Z0bWF4KHRoaXMsdCl9LHQucHJvdG90eXBlLmxvZ1NvZnRtYXg9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PS0xKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmxvZ1NvZnRtYXgodGhpcyx0KX0sdC5wcm90b3R5cGUucmVzaXplQmlsaW5lYXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuaW1hZ2UucmVzaXplQmlsaW5lYXIodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5yZXNpemVOZWFyZXN0TmVpZ2hib3I9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuaW1hZ2UucmVzaXplTmVhcmVzdE5laWdoYm9yKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuY29udjFkPWZ1bmN0aW9uKHQsZSxuLHIsaSxhKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9XCJOV0NcIiksdm9pZCAwPT09aSYmKGk9MSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5jb252MWQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLmNvbnYyZD1mdW5jdGlvbih0LGUsbixyLGksYSl7cmV0dXJuIHZvaWQgMD09PXImJihyPVwiTkhXQ1wiKSx2b2lkIDA9PT1pJiYoaT1bMSwxXSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5jb252MmQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLmNvbnYyZFRyYW5zcG9zZT1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LmNvbnYyZFRyYW5zcG9zZSh0aGlzLHQsZSxuLHIsaSl9LHQucHJvdG90eXBlLmRlcHRod2lzZUNvbnYyRD1mdW5jdGlvbih0LGUsbixyLGksYSl7cmV0dXJuIHZvaWQgMD09PXImJihyPVwiTkhXQ1wiKSx2b2lkIDA9PT1pJiYoaT1bMSwxXSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5kZXB0aHdpc2VDb252MmQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLnNlcGFyYWJsZUNvbnYyZD1mdW5jdGlvbih0LGUsbixyLGksYSl7cmV0dXJuIHZvaWQgMD09PWkmJihpPVsxLDFdKSx2b2lkIDA9PT1hJiYoYT1cIk5IV0NcIiksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC5zZXBhcmFibGVDb252MmQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLmF2Z1Bvb2w9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYXZnUG9vbCh0aGlzLHQsZSxuLHIpfSx0LnByb3RvdHlwZS5tYXhQb29sPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0Lm1heFBvb2wodGhpcyx0LGUsbixyKX0sdC5wcm90b3R5cGUubG9jYWxSZXNwb25zZU5vcm1hbGl6YXRpb249ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHZvaWQgMD09PXQmJih0PTUpLHZvaWQgMD09PWUmJihlPTEpLHZvaWQgMD09PW4mJihuPTEpLHZvaWQgMD09PXImJihyPS41KSxjdC5sb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbih0aGlzLHQsZSxuLHIpfSx0LnByb3RvdHlwZS5wb29sPWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QucG9vbCh0aGlzLHQsZSxuLHIsaSl9LHQucHJvdG90eXBlLnZhcmlhYmxlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ITApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksaHQudmFyaWFibGUodGhpcyx0LGUsbil9LHQucHJvdG90eXBlLnVuc29ydGVkU2VnbWVudFN1bT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnVuc29ydGVkU2VnbWVudFN1bSh0aGlzLHQsZSl9LHQucHJvdG90eXBlLmJhdGNoVG9TcGFjZU5EPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuYmF0Y2hUb1NwYWNlTkQodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5zcGFjZVRvQmF0Y2hORD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNwYWNlVG9CYXRjaE5EKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUudG9waz1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT10JiYodD0xKSx2b2lkIDA9PT1lJiYoZT0hMCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjdC50b3BrKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuc3RyaWRlZFNsaWNlPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyl7cmV0dXJuIHZvaWQgMD09PXImJihyPTApLHZvaWQgMD09PWkmJihpPTApLHZvaWQgMD09PWEmJihhPTApLHZvaWQgMD09PW8mJihvPTApLHZvaWQgMD09PXMmJihzPTApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3RyaWRlZFNsaWNlKHRoaXMsdCxlLG4scixpLGEsbyxzKX0sdC5wcm90b3R5cGUuZGVwdGhUb1NwYWNlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3QuZGVwdGhUb1NwYWNlKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuZmZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3BlY3RyYWwuZmZ0KHRoaXMpfSx0LnByb3RvdHlwZS5pZmZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3BlY3RyYWwuaWZmdCh0aGlzKX0sdC5wcm90b3R5cGUucmZmdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGN0LnNwZWN0cmFsLnJmZnQodGhpcyl9LHQucHJvdG90eXBlLmlyZmZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY3Quc3BlY3RyYWwuaXJmZnQodGhpcyl9LHR9KCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGZ0LFN5bWJvbC5oYXNJbnN0YW5jZSx7dmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuISF0JiZudWxsIT10LmRhdGFJZCYmbnVsbCE9dC5zaGFwZSYmbnVsbCE9dC5kdHlwZX19KTt2YXIgaHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4scil7dm9pZCAwPT09biYmKG49ITApO3ZhciBpPXQuY2FsbCh0aGlzLGUuc2hhcGUsZS5kdHlwZSxudWxsLGUuZGF0YUlkKXx8dGhpcztpLnRyYWluYWJsZT1uLGkubmFtZT1yLG51bGw9PWkubmFtZSYmKGkubmFtZT11dCgpLm5leHRWYXJpYWJsZUlkKCkudG9TdHJpbmcoKSk7dHJ5e3V0KCkucmVnaXN0ZXJWYXJpYWJsZShpKX1jYXRjaCh0KXt0aHJvdyB1dCgpLmRpc3Bvc2VUZW5zb3IoaSksdH1yZXR1cm4gaX1yZXR1cm4gcyhlLHQpLGUudmFyaWFibGU9ZnVuY3Rpb24odCxuLHIsaSl7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSxudWxsIT1pJiZpIT09dC5kdHlwZSYmKHQ9dC5hc1R5cGUoaSkpLG5ldyBlKHQsbixyKX0sZS5wcm90b3R5cGUuYXNzaWduPWZ1bmN0aW9uKHQpe2lmKHQuZHR5cGUhPT10aGlzLmR0eXBlKXRocm93IG5ldyBFcnJvcihcImR0eXBlIG9mIHRoZSBuZXcgdmFsdWUgKFwiK3QuZHR5cGUrXCIpIGFuZCBwcmV2aW91cyB2YWx1ZSAoXCIrdGhpcy5kdHlwZStcIikgbXVzdCBtYXRjaFwiKTtpZighUyh0LnNoYXBlLHRoaXMuc2hhcGUpKXRocm93IG5ldyBFcnJvcihcInNoYXBlIG9mIHRoZSBuZXcgdmFsdWUgKFwiK3Quc2hhcGUrXCIpIGFuZCBwcmV2aW91cyB2YWx1ZSAoXCIrdGhpcy5zaGFwZStcIikgbXVzdCBtYXRjaFwiKTt1dCgpLmRpc3Bvc2VUZW5zb3IodGhpcyksdGhpcy5kYXRhSWQ9dC5kYXRhSWQsdXQoKS5yZWdpc3RlclRlbnNvcih0aGlzKX0sZX0oZnQpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShodCxTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgZnQmJm51bGwhPXQuYXNzaWduJiZ0LmFzc2lnbiBpbnN0YW5jZW9mIEZ1bmN0aW9ufX0pO3ZhciBwdCxkdCxtdCxndCx5dCx2dCxidD1odC52YXJpYWJsZTsodnQ9cHR8fChwdD17fSkpLlIwPVwiUjBcIix2dC5SMT1cIlIxXCIsdnQuUjI9XCJSMlwiLHZ0LlIzPVwiUjNcIix2dC5SND1cIlI0XCIsdnQuUjU9XCJSNVwiLHZ0LlI2PVwiUjZcIixmdW5jdGlvbih0KXt0LmZsb2F0MzI9XCJmbG9hdDMyXCIsdC5pbnQzMj1cImludDMyXCIsdC5ib29sPVwiaW50MzJcIix0LmNvbXBsZXg2ND1cImNvbXBsZXg2NFwifShkdHx8KGR0PXt9KSksZnVuY3Rpb24odCl7dC5mbG9hdDMyPVwiZmxvYXQzMlwiLHQuaW50MzI9XCJpbnQzMlwiLHQuYm9vbD1cImJvb2xcIix0LmNvbXBsZXg2ND1cImNvbXBsZXg2NFwifShtdHx8KG10PXt9KSksZnVuY3Rpb24odCl7dC5mbG9hdDMyPVwiZmxvYXQzMlwiLHQuaW50MzI9XCJmbG9hdDMyXCIsdC5ib29sPVwiZmxvYXQzMlwiLHQuY29tcGxleDY0PVwiY29tcGxleDY0XCJ9KGd0fHwoZ3Q9e30pKSxmdW5jdGlvbih0KXt0LmZsb2F0MzI9XCJjb21wbGV4NjRcIix0LmludDMyPVwiY29tcGxleDY0XCIsdC5ib29sPVwiY29tcGxleDY0XCIsdC5jb21wbGV4NjQ9XCJjb21wbGV4NjRcIn0oeXR8fCh5dD17fSkpO3ZhciB3dD17ZmxvYXQzMjpndCxpbnQzMjpkdCxib29sOm10LGNvbXBsZXg2NDp5dH07ZnVuY3Rpb24gX3QodCxlKXtpZihcInN0cmluZ1wiPT09dHx8XCJzdHJpbmdcIj09PWUpe2lmKFwic3RyaW5nXCI9PT10JiZcInN0cmluZ1wiPT09ZSlyZXR1cm5cInN0cmluZ1wiO3Rocm93IG5ldyBFcnJvcihcIkNhbiBub3QgdXBjYXN0IFwiK3QrXCIgd2l0aCBcIitlKX1yZXR1cm4gd3RbdF1bZV19ZnVuY3Rpb24geHQodCl7cmV0dXJuIF90KHQsXCJpbnQzMlwiKX1mdW5jdGlvbiBFdCh0LGUpe2lmKHQuZHR5cGU9PT1lLmR0eXBlKXJldHVyblt0LGVdO3ZhciBuPV90KHQuZHR5cGUsZS5kdHlwZSk7cmV0dXJuW3QuY2FzdChuKSxlLmNhc3QobildfWZ1bmN0aW9uIFN0KHQpe3ZhciBlPVtdO3JldHVybiBmdW5jdGlvbiB0KGUsbixyKXtpZihudWxsIT1lKWlmKGUgaW5zdGFuY2VvZiBmdCluLnB1c2goZSk7ZWxzZSBpZihmdW5jdGlvbih0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KXx8XCJvYmplY3RcIj09dHlwZW9mIHR9KGUpKXt2YXIgaT1lO2Zvcih2YXIgYSBpbiBpKXt2YXIgbz1pW2FdO3IuaGFzKG8pfHwoci5hZGQobyksdChvLG4scikpfX19KHQsZSxuZXcgU2V0KSxlfXZhciBOdCxJdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4pe3RoaXMuYmFja2VuZD10LHRoaXMuc2FmZU1vZGU9ZSx0aGlzLmRlYnVnTW9kZT1uLHRoaXMucmVnaXN0ZXJlZFZhcmlhYmxlcz17fSx0aGlzLm5leHRUYXBlTm9kZUlkPTAsdGhpcy5udW1CeXRlcz0wLHRoaXMubnVtVGVuc29ycz0wLHRoaXMubnVtU3RyaW5nVGVuc29ycz0wLHRoaXMubnVtRGF0YUJ1ZmZlcnM9MCx0aGlzLnByb2ZpbGluZz0hMSx0aGlzLmdyYWRpZW50U2NvcGVDb3VudD0wLHRoaXMuY3VzdG9tR3JhZGllbnREZXB0aD0wLHRoaXMuc2NvcGVTdGFjaz1bXSx0aGlzLmtlZXBUZW5zb3JzPW5ldyBTZXQsdGhpcy50ZW5zb3JJbmZvPW5ldyBXZWFrTWFwLHRoaXMucHJvZmlsZXI9bmV3IFEodCksdGhpcy5hY3RpdmVQcm9maWxlPXtuZXdCeXRlczowLG5ld1RlbnNvcnM6MCxwZWFrQnl0ZXM6MCxrZXJuZWxzOltdLHJlc3VsdDpudWxsfX1yZXR1cm4gdC5wcm90b3R5cGUubW92ZURhdGE9ZnVuY3Rpb24odCl7dGhpcy53cml0ZSh0LHRoaXMucmVhZFN5bmModCkpfSx0LnByb3RvdHlwZS50aWR5PWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzO3ZvaWQgMD09PW4mJihuPSExKTt2YXIgaSxhPW51bGw7aWYobnVsbD09ZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgcHJvdmlkZSBhIGZ1bmN0aW9uIHRvIHRpZHkoKVwiKTtlPXR9ZWxzZXtpZihcInN0cmluZ1wiIT10eXBlb2YgdCYmISh0IGluc3RhbmNlb2YgU3RyaW5nKSl0aHJvdyBuZXcgRXJyb3IoXCJXaGVuIGNhbGxpbmcgd2l0aCB0d28gYXJndW1lbnRzLCB0aGUgZmlyc3QgYXJndW1lbnQgdG8gdGlkeSgpIG11c3QgYmUgYSBzdHJpbmdcIik7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoXCJXaGVuIGNhbGxpbmcgd2l0aCB0d28gYXJndW1lbnRzLCB0aGUgMm5kIGFyZ3VtZW50IHRvIHRpZHkoKSBtdXN0IGJlIGEgZnVuY3Rpb25cIik7YT10fXJldHVybiB0aGlzLnNjb3BlZFJ1bihmdW5jdGlvbigpe3JldHVybiByLnN0YXJ0U2NvcGUoYSxuKX0sZnVuY3Rpb24oKXtyZXR1cm4gci5lbmRTY29wZShpLG4pfSxmdW5jdGlvbigpe3JldHVybihpPWUoKSlpbnN0YW5jZW9mIFByb21pc2UmJmNvbnNvbGUuZXJyb3IoXCJDYW5ub3QgcmV0dXJuIGEgUHJvbWlzZSBpbnNpZGUgb2YgdGlkeS5cIiksaX0pfSx0LnByb3RvdHlwZS5zY29wZWRSdW49ZnVuY3Rpb24odCxlLG4pe3QoKTt0cnl7dmFyIHI9bigpO3JldHVybiBlKCkscn1jYXRjaCh0KXt0aHJvdyBlKCksdH19LHQucHJvdG90eXBlLm5leHRUZW5zb3JJZD1mdW5jdGlvbigpe3JldHVybiB0Lm5leHRUZW5zb3JJZCsrfSx0LnByb3RvdHlwZS5uZXh0VmFyaWFibGVJZD1mdW5jdGlvbigpe3JldHVybiB0Lm5leHRWYXJpYWJsZUlkKyt9LHQucHJvdG90eXBlLnJ1bktlcm5lbD1mdW5jdGlvbih0LGUsbil7dmFyIHIsaT10aGlzLGE9W10sbz1mdW5jdGlvbih0KXtyZXR1cm4gYS5wdXNoKHQpLHR9LHM9dGhpcy5hY3RpdmVTY29wZS5uYW1lLHU9dGhpcy5udW1CeXRlcyxjPXRoaXMubnVtVGVuc29ycztpZih0aGlzLnNjb3BlZFJ1bihmdW5jdGlvbigpe3JldHVybiBpLmN1c3RvbUdyYWRpZW50RGVwdGgrK30sZnVuY3Rpb24oKXtyZXR1cm4gaS5jdXN0b21HcmFkaWVudERlcHRoLS19LGZ1bmN0aW9uKCl7cj1pLmRlYnVnTW9kZSgpP2kucHJvZmlsZXIucHJvZmlsZUtlcm5lbChzLGZ1bmN0aW9uKCl7cmV0dXJuIHQoaS5iYWNrZW5kLG8pfSk6dChpLmJhY2tlbmQsbyl9KSx0aGlzLnNob3VsZFJlY29yZCgpKXt2YXIgbD17aWQ6dGhpcy5uZXh0VGFwZU5vZGVJZCsrLG5hbWU6cyxpbnB1dHM6ZSxvdXRwdXRzOkFycmF5LmlzQXJyYXkocik/cjpbcl19O251bGwhPW4mJihsLmdyYWRpZW50PWZ1bmN0aW9uKHQpe3JldHVybiBuKHQsYSl9KSx0aGlzLmFjdGl2ZVRhcGUucHVzaChsKX1yZXR1cm4gdGhpcy5wcm9maWxpbmcmJnRoaXMuYWN0aXZlUHJvZmlsZS5rZXJuZWxzLnB1c2goe25hbWU6cyxieXRlc0FkZGVkOnRoaXMubnVtQnl0ZXMtdSx0b3RhbEJ5dGVzU25hcHNob3Q6dGhpcy5udW1CeXRlcyx0ZW5zb3JzQWRkZWQ6dGhpcy5udW1UZW5zb3JzLWMsdG90YWxUZW5zb3JzU25hcHNob3Q6dGhpcy5udW1UZW5zb3JzLGlucHV0U2hhcGVzOk9iamVjdC5rZXlzKGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZVt0XS5zaGFwZX0pLG91dHB1dFNoYXBlOkFycmF5LmlzQXJyYXkocik/ci5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2hhcGV9KTpyLnNoYXBlfSkscn0sdC5wcm90b3R5cGUucmVnaXN0ZXJUZW5zb3I9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy50ZW5zb3JJbmZvLmhhcyh0LmRhdGFJZCk/dGhpcy50ZW5zb3JJbmZvLmdldCh0LmRhdGFJZCkucmVmQ291bnQ6MDtpZih0aGlzLm51bVRlbnNvcnMrKyxcInN0cmluZ1wiPT09dC5kdHlwZSYmdGhpcy5udW1TdHJpbmdUZW5zb3JzKyssMD09PWUpe3RoaXMubnVtRGF0YUJ1ZmZlcnMrKzt2YXIgbj0wO1wiY29tcGxleDY0XCIhPT10LmR0eXBlJiZcInN0cmluZ1wiIT09dC5kdHlwZSYmKG49RSh0LnNoYXBlKSp6KHQuZHR5cGUpKSx0aGlzLnRlbnNvckluZm8uc2V0KHQuZGF0YUlkLHtiYWNrZW5kOnRoaXMuYmFja2VuZCxkdHlwZTp0LmR0eXBlLHNoYXBlOnQuc2hhcGUsYnl0ZXM6bixyZWZDb3VudDowfSksdGhpcy5udW1CeXRlcys9bix0aGlzLmJhY2tlbmQucmVnaXN0ZXIodC5kYXRhSWQsdC5zaGFwZSx0LmR0eXBlKX10aGlzLnRlbnNvckluZm8uZ2V0KHQuZGF0YUlkKS5yZWZDb3VudCsrLHQgaW5zdGFuY2VvZiBodHx8dGhpcy50cmFjayh0KX0sdC5wcm90b3R5cGUucmVnaXN0ZXJWYXJpYWJsZT1mdW5jdGlvbih0KXtpZihudWxsIT10aGlzLnJlZ2lzdGVyZWRWYXJpYWJsZXNbdC5uYW1lXSl0aHJvdyBuZXcgRXJyb3IoXCJWYXJpYWJsZSB3aXRoIG5hbWUgXCIrdC5uYW1lK1wiIHdhcyBhbHJlYWR5IHJlZ2lzdGVyZWRcIik7dGhpcy5yZWdpc3RlcmVkVmFyaWFibGVzW3QubmFtZV09dH0sdC5wcm90b3R5cGUuZGlzcG9zZVRlbnNvcj1mdW5jdGlvbih0KXtpZih0aGlzLnRlbnNvckluZm8uaGFzKHQuZGF0YUlkKSl7dGhpcy5rZWVwVGVuc29ycy5oYXModC5pZCkmJnRoaXMua2VlcFRlbnNvcnMuZGVsZXRlKHQuaWQpLHRoaXMubnVtVGVuc29ycy0tLFwic3RyaW5nXCI9PT10LmR0eXBlJiZ0aGlzLm51bVN0cmluZ1RlbnNvcnMtLTt2YXIgZT10aGlzLnRlbnNvckluZm8uZ2V0KHQuZGF0YUlkKTtlLnJlZkNvdW50PD0xPyhcImNvbXBsZXg2NFwiIT09dC5kdHlwZSYmKHRoaXMubnVtQnl0ZXMtPWUuYnl0ZXMpLHRoaXMubnVtRGF0YUJ1ZmZlcnMtLSxlLmJhY2tlbmQuZGlzcG9zZURhdGEodC5kYXRhSWQpLHRoaXMudGVuc29ySW5mby5kZWxldGUodC5kYXRhSWQpKTp0aGlzLnRlbnNvckluZm8uZ2V0KHQuZGF0YUlkKS5yZWZDb3VudC0tfX0sdC5wcm90b3R5cGUuZGlzcG9zZVZhcmlhYmxlcz1mdW5jdGlvbigpe2Zvcih2YXIgdCBpbiB0aGlzLnJlZ2lzdGVyZWRWYXJpYWJsZXMpe3ZhciBlPXRoaXMucmVnaXN0ZXJlZFZhcmlhYmxlc1t0XTt0aGlzLmRpc3Bvc2VUZW5zb3IoZSksZGVsZXRlIHRoaXMucmVnaXN0ZXJlZFZhcmlhYmxlc1t0XX19LHQucHJvdG90eXBlLm1lbW9yeT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYmFja2VuZC5tZW1vcnkoKTtyZXR1cm4gdC5udW1UZW5zb3JzPXRoaXMubnVtVGVuc29ycyx0Lm51bURhdGFCdWZmZXJzPXRoaXMubnVtRGF0YUJ1ZmZlcnMsdC5udW1CeXRlcz10aGlzLm51bUJ5dGVzLHRoaXMubnVtU3RyaW5nVGVuc29ycz4wJiYodC51bnJlbGlhYmxlPSEwLG51bGw9PXQucmVhc29ucyYmKHQucmVhc29ucz1bXSksdC5yZWFzb25zLnB1c2goXCJNZW1vcnkgdXNhZ2UgYnkgc3RyaW5nIHRlbnNvcnMgaXMgYXBwcm94aW1hdGUgKDIgYnl0ZXMgcGVyIGNoYXJhY3RlcilcIikpLHR9LHQucHJvdG90eXBlLnByb2ZpbGU9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKHIpe3JldHVybiB0aGlzLnByb2ZpbGluZz0hMCxlPXRoaXMubnVtQnl0ZXMsbj10aGlzLm51bVRlbnNvcnMsdGhpcy5hY3RpdmVQcm9maWxlLmtlcm5lbHM9W10sdGhpcy5hY3RpdmVQcm9maWxlLnJlc3VsdD10KCksdGhpcy5wcm9maWxpbmc9ITEsdGhpcy5hY3RpdmVQcm9maWxlLnBlYWtCeXRlcz1NYXRoLm1heC5hcHBseShNYXRoLHRoaXMuYWN0aXZlUHJvZmlsZS5rZXJuZWxzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC50b3RhbEJ5dGVzU25hcHNob3R9KSksdGhpcy5hY3RpdmVQcm9maWxlLm5ld0J5dGVzPXRoaXMubnVtQnl0ZXMtZSx0aGlzLmFjdGl2ZVByb2ZpbGUubmV3VGVuc29ycz10aGlzLm51bVRlbnNvcnMtbixbMix0aGlzLmFjdGl2ZVByb2ZpbGVdfSl9KX0sdC5wcm90b3R5cGUuc2hvdWxkUmVjb3JkPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPXRoaXMuYWN0aXZlVGFwZSYmMD09PXRoaXMuY3VzdG9tR3JhZGllbnREZXB0aH0sdC5wcm90b3R5cGUuYWRkVGFwZU5vZGU9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXt9O3QuZm9yRWFjaChmdW5jdGlvbih0LGUpe3JbZV09dH0pO3ZhciBpPXtpZDp0aGlzLm5leHRUYXBlTm9kZUlkKyssbmFtZTp0aGlzLmFjdGl2ZVNjb3BlLm5hbWUsaW5wdXRzOnIsb3V0cHV0czpbZV0sZ3JhZGllbnQ6ZnVuY3Rpb24odCl7dmFyIGU9e307cmV0dXJuIG4odCkuZm9yRWFjaChmdW5jdGlvbih0LG4pe2Vbbl09ZnVuY3Rpb24oKXtyZXR1cm4gdH19KSxlfX07dGhpcy5hY3RpdmVUYXBlLnB1c2goaSl9LHQucHJvdG90eXBlLmtlZXA9ZnVuY3Rpb24odCl7aWYoMT09PXRoaXMuc2NvcGVTdGFjay5sZW5ndGgmJnRoaXMuc2FmZU1vZGUpdGhyb3cgbmV3IEVycm9yKFwiU2FmZSBtb2RlIGlzIE9OLiBFbmNsb3NlIGFsbCB0ZW5zb3Igb3BlcmF0aW9ucyBpbnNpZGUgdGYudGlkeSgpOiB0Zi50aWR5KCgpID0+IHsuLi59KSB0byBhdm9pZCBtZW1vcnkgbGVha3MuXCIpO3JldHVybiB0aGlzLmtlZXBUZW5zb3JzLmFkZCh0LmlkKSx0fSx0LnByb3RvdHlwZS5zdGFydFNjb3BlPWZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9ITEpLGUmJjA9PT10aGlzLmdyYWRpZW50U2NvcGVDb3VudCYmKHRoaXMuYWN0aXZlVGFwZT1bXSksZSYmdGhpcy5ncmFkaWVudFNjb3BlQ291bnQrKzt2YXIgbj17dHJhY2s6W10sbmFtZTpcInVubmFtZWQgc2NvcGVcIn07dCYmKG4ubmFtZT10KSx0aGlzLnNjb3BlU3RhY2sucHVzaChuKSx0aGlzLmFjdGl2ZVNjb3BlPW59LHQucHJvdG90eXBlLmVuZFNjb3BlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpczt2b2lkIDA9PT1lJiYoZT0hMSksZSYmKHRoaXMuZ3JhZGllbnRTY29wZUNvdW50LS0sMD09PXRoaXMuZ3JhZGllbnRTY29wZUNvdW50JiYodGhpcy5hY3RpdmVUYXBlPW51bGwpKTt2YXIgcj1uZXcgU2V0KHRoaXMua2VlcFRlbnNvcnMpLGk9U3QodCk7aS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiByLmFkZCh0LmlkKX0pO2Zvcih2YXIgYT0wO2E8dGhpcy5hY3RpdmVTY29wZS50cmFjay5sZW5ndGg7YSsrKXt2YXIgbz10aGlzLmFjdGl2ZVNjb3BlLnRyYWNrW2FdO3IuaGFzKG8uaWQpfHwobnVsbCE9dGhpcy5hY3RpdmVUYXBlP2kucHVzaChvKTpvLmRpc3Bvc2UoKSl9dmFyIHM9dGhpcy5zY29wZVN0YWNrLnBvcCgpO3RoaXMuYWN0aXZlU2NvcGU9MD09PXRoaXMuc2NvcGVTdGFjay5sZW5ndGg/bnVsbDp0aGlzLnNjb3BlU3RhY2tbdGhpcy5zY29wZVN0YWNrLmxlbmd0aC0xXSxpLmZvckVhY2goZnVuY3Rpb24odCl7IW4ua2VlcFRlbnNvcnMuaGFzKHQuaWQpJiZmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKWlmKGVbbl0uaWQ9PT10LmlkKXJldHVybiEwO3JldHVybiExfSh0LHMudHJhY2spJiZuLnRyYWNrKHQpfSl9LHQucHJvdG90eXBlLmdyYWRpZW50cz1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzO2lmKHZvaWQgMD09PXImJihyPSExKSxiKGUubGVuZ3RoPjAsXCJncmFkaWVudHMoKSByZWNlaXZlZCBhbiBlbXB0eSBsaXN0IG9mIHhzLlwiKSxudWxsIT1uJiZcImZsb2F0MzJcIiE9PW4uZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiZHkgbXVzdCBoYXZlICdmbG9hdDMyJyBkdHlwZSwgYnV0IGhhcyAnXCIrbi5kdHlwZStcIidcIik7cmV0dXJuIHRoaXMudGlkeShcImdyYWRpZW50c1wiLGZ1bmN0aW9uKCl7dmFyIGE9dCgpO2IoYSBpbnN0YW5jZW9mIGZ0LFwiVGhlIHJlc3VsdCB5IHJldHVybmVkIGJ5IGYoKSBtdXN0IGJlIGEgdGVuc29yLlwiKTt2YXIgbz1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPXt9LGk9e30sYT0wO2E8ZS5sZW5ndGg7YSsrKXJbZVthXS5pZF09ITA7Zm9yKGE9MDthPHQubGVuZ3RoO2ErKyl7dmFyIG89KGQ9dFthXSkuaW5wdXRzO2Zvcih2YXIgcyBpbiBvKXtmb3IodmFyIHU9b1tzXSxjPSExLGw9MDtsPGUubGVuZ3RoO2wrKylpZihyW3UuaWRdKXtkLm91dHB1dHMuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gclt0LmlkXT0hMH0pLGM9ITAsaVtkLmlkXT0hMDticmVha31pZihjKWJyZWFrfX12YXIgZj17fTtmW24uaWRdPSEwO3ZhciBoPXt9O2ZvcihhPXQubGVuZ3RoLTE7YT49MDthLS0pZm9yKG89KGQ9dFthXSkuaW5wdXRzLGw9MDtsPGQub3V0cHV0cy5sZW5ndGg7bCsrKWlmKGZbZC5vdXRwdXRzW2xdLmlkXSl7Zm9yKHZhciBzIGluIG8pZltvW3NdLmlkXT0hMCxoW2QuaWRdPSEwO2JyZWFrfXZhciBwPVtdO2ZvcihhPTA7YTx0Lmxlbmd0aDthKyspe3ZhciBkO2lmKGlbKGQ9dFthXSkuaWRdJiZoW2QuaWRdKXt2YXIgbT17fTtmb3IodmFyIHMgaW4gZC5pbnB1dHMpe3ZhciBnPWQuaW5wdXRzW3NdO3JbZy5pZF0mJihtW3NdPWcpfXZhciB5PU9iamVjdC5hc3NpZ24oe30sZCk7eS5pbnB1dHM9bSx5Lm91dHB1dHM9ZC5vdXRwdXRzLHAucHVzaCh5KX19cmV0dXJuIHB9KGkuYWN0aXZlVGFwZSxlLGEpO2lmKCFyJiYwPT09by5sZW5ndGgmJmUubGVuZ3RoPjApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNvbXB1dGUgZ3JhZGllbnQgb2YgeT1mKHgpIHdpdGggcmVzcGVjdCB0byB4LiBNYWtlIHN1cmUgdGhhdCB0aGUgZiB5b3UgcGFzc2VkIGVuY2xvc2VzIGFsbCBvcGVyYXRpb25zIHRoYXQgbGVhZCBmcm9tIHggdG8geS5cIik7dmFyIHM9e307cmV0dXJuIHNbYS5pZF09bnVsbD09bj9mdW5jdGlvbih0KXt2YXIgZT1YKEUodCksXCJmbG9hdDMyXCIpO3JldHVybiBmdC5tYWtlKHQse3ZhbHVlczplfSl9KGEuc2hhcGUpOm4sZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ZnVuY3Rpb24obil7dmFyIHI9ZVtuXSxpPVtdO2lmKHIub3V0cHV0cy5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPXRbZS5pZF07aWYobnVsbCE9bilpLnB1c2gobik7ZWxzZXt2YXIgcj1mdC5tYWtlKGUuc2hhcGUse3ZhbHVlczpZKGUuc2l6ZSxlLmR0eXBlKX0sZS5kdHlwZSk7aS5wdXNoKHIpfX0pLG51bGw9PXIuZ3JhZGllbnQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNvbXB1dGUgZ3JhZGllbnQ6IGdyYWRpZW50IGZ1bmN0aW9uIG5vdCBmb3VuZCBmb3IgXCIrci5uYW1lK1wiLlwiKTt2YXIgYT1yLmdyYWRpZW50KDE9PT1yLm91dHB1dHMubGVuZ3RoP2lbMF06aSk7Zm9yKHZhciBvIGluIHIuaW5wdXRzKXtpZighKG8gaW4gYSkpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGJhY2twcm9wIHRocm91Z2ggaW5wdXQgXCIrbytcIi4gQXZhaWxhYmxlIGdyYWRpZW50cyBmb3VuZDogXCIrT2JqZWN0LmtleXMoYSkrXCIuXCIpO3ZhciBzPWFbb10oKTtpZihcImZsb2F0MzJcIiE9PXMuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgaW4gZ3JhZGllbnQgZm9yIG9wIFwiK3IubmFtZStcIi4gVGhlIGdyYWRpZW50IG9mIGlucHV0IFwiK28rXCIgbXVzdCBoYXZlICdmbG9hdDMyJyBkdHlwZSwgYnV0IGhhcyAnXCIrcy5kdHlwZStcIidcIik7dmFyIHU9ci5pbnB1dHNbb107aWYoIVMocy5zaGFwZSx1LnNoYXBlKSl0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBncmFkaWVudCBmb3Igb3AgXCIrci5uYW1lK1wiLiBUaGUgZ3JhZGllbnQgb2YgaW5wdXQgJ1wiK28rXCInIGhhcyBzaGFwZSAnXCIrcy5zaGFwZStcIicsIHdoaWNoIGRvZXMgbm90IG1hdGNoIHRoZSBzaGFwZSBvZiB0aGUgaW5wdXQgJ1wiK3Uuc2hhcGUrXCInXCIpO2lmKG51bGw9PXRbdS5pZF0pdFt1LmlkXT1zO2Vsc2V7dmFyIGM9dFt1LmlkXTt0W3UuaWRdPWMuYWRkKHMpLGMuZGlzcG9zZSgpfX19LHI9ZS5sZW5ndGgtMTtyPj0wO3ItLSluKHIpfShzLG8pLHt2YWx1ZTphLGdyYWRzOmUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBzW3QuaWRdfSl9fSwhMCl9LHQucHJvdG90eXBlLmN1c3RvbUdyYWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gYigkKHQpLFwiVGhlIGYgcGFzc2VkIGluIGN1c3RvbUdyYWQoZikgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKSxmdW5jdGlvbigpe2Zvcih2YXIgbixyLGk9W10sYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKyspaVthXT1hcmd1bWVudHNbYV07cmV0dXJuIGIoaS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGZ0fSksXCJUaGUgYXJncyBwYXNzZWQgaW4gY3VzdG9tR3JhZChmKSh4MSwgeDIsLi4uKSBtdXN0IGFsbCBiZSB0ZW5zb3JzXCIpLGUuc2NvcGVkUnVuKGZ1bmN0aW9uKCl7cmV0dXJuIGUuY3VzdG9tR3JhZGllbnREZXB0aCsrfSxmdW5jdGlvbigpe3JldHVybiBlLmN1c3RvbUdyYWRpZW50RGVwdGgtLX0sZnVuY3Rpb24oKXtyPWUudGlkeSh0Lm5hbWUsZnVuY3Rpb24oKXt2YXIgZT10LmFwcGx5KHZvaWQgMCxpKSxyPWUudmFsdWUsYT1lLmdyYWRGdW5jO3JldHVybiBiKHIgaW5zdGFuY2VvZiBmdCxcIlRoZSBmdW5jdGlvbiBmIHBhc3NlZCBpbiBjdXN0b21HcmFkKGYpIG11c3QgcmV0dXJuIGFuIG9iamVjdCB3aGVyZSBgb2JqLnZhbHVlYCBpcyBhIHRlbnNvclwiKSxiKCQoYSksXCJUaGUgZnVuY3Rpb24gZiBwYXNzZWQgaW4gY3VzdG9tR3JhZChmKSBtdXN0IHJldHVybiBhbiBvYmplY3Qgd2hlcmUgYG9iai5ncmFkRnVuY2AgaXMgYSBmdW5jdGlvbi5cIiksbj1hLHJ9LCEwKX0pLGUuc2hvdWxkUmVjb3JkKCkmJmUuYWRkVGFwZU5vZGUoaSxyLGZ1bmN0aW9uKHQpe3ZhciBlPW4odCkscj1BcnJheS5pc0FycmF5KGUpP2U6W2VdO3JldHVybiBiKHIubGVuZ3RoPT09aS5sZW5ndGgsXCJUaGUgZnVuY3Rpb24gZiBwYXNzZWQgaW4gY3VzdG9tR3JhZChmKSBtdXN0IHJldHVybiBhbiBvYmplY3Qgd2hlcmUgYG9iai5ncmFkRnVuY2AgaXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIHNhbWUgbnVtYmVyIG9mIHRlbnNvcnMgYXMgaW5wdXRzIHBhc3NlZCB0byBmKC4uLikuXCIpLGIoci5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGZ0fSksXCJUaGUgZnVuY3Rpb24gZiBwYXNzZWQgaW4gY3VzdG9tR3JhZChmKSBtdXN0IHJldHVybiBhbiBvYmplY3Qgd2hlcmUgYG9iai5ncmFkRnVuY2AgaXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBsaXN0IG9mIG9ubHkgdGVuc29ycy5cIikscn0pLHJ9fSx0LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMudGVuc29ySW5mby5nZXQodCk7aWYoXCJzdHJpbmdcIj09PW4uZHR5cGUpe3ZhciByPUYoZSk7dGhpcy5udW1CeXRlcys9ci1uLmJ5dGVzLG4uYnl0ZXM9cn10aGlzLmJhY2tlbmQhPT1uLmJhY2tlbmQmJihuLmJhY2tlbmQuZGlzcG9zZURhdGEodCksbi5iYWNrZW5kPXRoaXMuYmFja2VuZCx0aGlzLmJhY2tlbmQucmVnaXN0ZXIodCxuLnNoYXBlLG4uZHR5cGUpKSx0aGlzLmJhY2tlbmQud3JpdGUodCxlKX0sdC5wcm90b3R5cGUucmVhZFN5bmM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGVuc29ySW5mby5nZXQodCkuYmFja2VuZC5yZWFkU3luYyh0KX0sdC5wcm90b3R5cGUucmVhZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50ZW5zb3JJbmZvLmdldCh0KS5iYWNrZW5kLnJlYWQodCl9LHQucHJvdG90eXBlLmZyb21QaXhlbHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5iYWNrZW5kLmZyb21QaXhlbHModCxlKX0sdC5wcm90b3R5cGUudGltZT1mdW5jdGlvbih0KXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBsKHRoaXMsZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1KKCksWzQsdGhpcy5iYWNrZW5kLnRpbWUodCldO2Nhc2UgMTpyZXR1cm4obj1yLnNlbnQoKSkud2FsbE1zPUooKS1lLFsyLG5dfX0pfSl9LHQucHJvdG90eXBlLnRyYWNrPWZ1bmN0aW9uKHQpe2lmKDE9PT10aGlzLnNjb3BlU3RhY2subGVuZ3RoJiZ0aGlzLnNhZmVNb2RlKXRocm93IG5ldyBFcnJvcihcIlNhZmUgbW9kZSBpcyBPTi4gRW5jbG9zZSBhbGwgdGVuc29yIG9wZXJhdGlvbnMgaW5zaWRlIHRmLnRpZHkoKTogdGYudGlkeSgoKSA9PiB7b3AoKTsuLi59KTsgdG8gYXZvaWQgbWVtb3J5IGxlYWtzLlwiKTtyZXR1cm4gbnVsbCE9dGhpcy5hY3RpdmVTY29wZSYmdGhpcy5hY3RpdmVTY29wZS50cmFjay5wdXNoKHQpLHR9LHQubmV4dFRlbnNvcklkPTAsdC5uZXh0VmFyaWFibGVJZD0wLHR9KCk7IWZ1bmN0aW9uKHQpe3RbdC5OVU1CRVI9MF09XCJOVU1CRVJcIix0W3QuQk9PTEVBTj0xXT1cIkJPT0xFQU5cIix0W3QuU1RSSU5HPTJdPVwiU1RSSU5HXCJ9KE50fHwoTnQ9e30pKTt2YXIgT3Qsa3QsQXQ9W3tuYW1lOlwiREVCVUdcIix0eXBlOk50LkJPT0xFQU59LHtuYW1lOlwiSVNfQlJPV1NFUlwiLHR5cGU6TnQuQk9PTEVBTn0se25hbWU6XCJXRUJHTF9MQVpJTFlfVU5QQUNLXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX0NQVV9GT1JXQVJEXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX1BBQ0tcIix0eXBlOk50LkJPT0xFQU59LHtuYW1lOlwiV0VCR0xfUEFDS19CQVRDSE5PUk1BTElaQVRJT05cIix0eXBlOk50LkJPT0xFQU59LHtuYW1lOlwiV0VCR0xfUEFDS19DTElQXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX1BBQ0tfREVQVEhXSVNFQ09OVlwiLHR5cGU6TnQuQk9PTEVBTn0se25hbWU6XCJXRUJHTF9QQUNLX0JJTkFSWV9PUEVSQVRJT05TXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX0NPTlZfSU0yQ09MXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX01BWF9URVhUVVJFX1NJWkVcIix0eXBlOk50Lk5VTUJFUn0se25hbWU6XCJXRUJHTF9OVU1fTUJfQkVGT1JFX1BBR0lOR1wiLHR5cGU6TnQuTlVNQkVSfSx7bmFtZTpcIldFQkdMX01BWF9URVhUVVJFU19JTl9TSEFERVJcIix0eXBlOk50Lk5VTUJFUn0se25hbWU6XCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fVkVSU0lPTlwiLHR5cGU6TnQuTlVNQkVSfSx7bmFtZTpcIldFQkdMX0RJU0pPSU5UX1FVRVJZX1RJTUVSX0VYVEVOU0lPTl9SRUxJQUJMRVwiLHR5cGU6TnQuQk9PTEVBTn0se25hbWU6XCJXRUJHTF9WRVJTSU9OXCIsdHlwZTpOdC5OVU1CRVJ9LHtuYW1lOlwiV0VCR0xfUkVOREVSX0ZMT0FUMzJfRU5BQkxFRFwiLHR5cGU6TnQuQk9PTEVBTn0se25hbWU6XCJXRUJHTF9ET1dOTE9BRF9GTE9BVF9FTkFCTEVEXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX0ZFTkNFX0FQSV9FTkFCTEVEXCIsdHlwZTpOdC5CT09MRUFOfSx7bmFtZTpcIldFQkdMX1NJWkVfVVBMT0FEX1VOSUZPUk1cIix0eXBlOk50Lk5VTUJFUn0se25hbWU6XCJCQUNLRU5EXCIsdHlwZTpOdC5TVFJJTkd9LHtuYW1lOlwiRVBTSUxPTlwiLHR5cGU6TnQuTlVNQkVSfSx7bmFtZTpcIlBST0RcIix0eXBlOk50LkJPT0xFQU59LHtuYW1lOlwiVEVOU09STElLRV9DSEVDS19TSEFQRV9DT05TSVNURU5DWVwiLHR5cGU6TnQuQk9PTEVBTn1dO2Z1bmN0aW9uIEN0KHQpe3RyeXtpZihudWxsIT1wKHQpKXJldHVybiEwfWNhdGNoKHQpe3JldHVybiExfXJldHVybiExfXZhciBQdD1cInRmanNmbGFnc1wiO2Z1bmN0aW9uIFR0KCl7dmFyIHQ9e307aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvd3x8dm9pZCAwPT09d2luZG93LmxvY2F0aW9ufHx2b2lkIDA9PT13aW5kb3cubG9jYXRpb24uc2VhcmNoKXJldHVybiB0O3ZhciBlPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O3JldHVybiB0LnJlcGxhY2UoL1s/Jl0oW149PyZdKykoPzo9KFteJl0qKSk/L2csZnVuY3Rpb24odCl7Zm9yKHZhciBuPVtdLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKW5bci0xXT1hcmd1bWVudHNbcl07cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt0W2RlY29kZVVSSUNvbXBvbmVudChlKV09ZGVjb2RlVVJJQ29tcG9uZW50KG58fFwiXCIpfShlLG5bMF0sblsxXSksbi5qb2luKFwiPVwiKX0pLGV9KHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO2lmKFB0IGluIGUpe3ZhciBuPXt9O2VbUHRdLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPXQuc3BsaXQoXCI6XCIpLHI9ZVswXSxpPWVbMV07bltyXT1pfSksQXQuZm9yRWFjaChmdW5jdGlvbihlKXtlLm5hbWUgaW4gbiYmKGNvbnNvbGUubG9nKFwiU2V0dGluZyBmZWF0dXJlIG92ZXJyaWRlIGZyb20gVVJMIFwiK2UubmFtZStcIjogXCIrbltlLm5hbWVdKSxlLnR5cGU9PT1OdC5OVU1CRVI/dFtlLm5hbWVdPStuW2UubmFtZV06ZS50eXBlPT09TnQuQk9PTEVBTj90W2UubmFtZV09XCJ0cnVlXCI9PT1uW2UubmFtZV06ZS50eXBlPT09TnQuU1RSSU5HP3RbZS5uYW1lXT1uW2UubmFtZV06Y29uc29sZS53YXJuKFwiVW5rbm93biBVUkwgcGFyYW06IFwiK2UubmFtZStcIi5cIikpfSl9cmV0dXJuIHR9ZnVuY3Rpb24gUnQodCxlKXtyZXR1cm4gbnVsbCE9dC5nZXRFeHRlbnNpb24oZSl9ZnVuY3Rpb24gRHQodCxlKXt2YXIgbj10LmNyZWF0ZUZyYW1lYnVmZmVyKCkscj10LmNyZWF0ZVRleHR1cmUoKTt0LmJpbmRUZXh0dXJlKHQuVEVYVFVSRV8yRCxyKTt2YXIgaT0yPT09ZT90LlJHQkEzMkY6dC5SR0JBO3QudGV4SW1hZ2UyRCh0LlRFWFRVUkVfMkQsMCxpLDEsMSwwLHQuUkdCQSx0LkZMT0FULG51bGwpLHQuYmluZEZyYW1lYnVmZmVyKHQuRlJBTUVCVUZGRVIsbiksdC5mcmFtZWJ1ZmZlclRleHR1cmUyRCh0LkZSQU1FQlVGRkVSLHQuQ09MT1JfQVRUQUNITUVOVDAsdC5URVhUVVJFXzJELHIsMCk7dmFyIGE9dC5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKHQuRlJBTUVCVUZGRVIpPT09dC5GUkFNRUJVRkZFUl9DT01QTEVURTtyZXR1cm4gdC5iaW5kVGV4dHVyZSh0LlRFWFRVUkVfMkQsbnVsbCksdC5iaW5kRnJhbWVidWZmZXIodC5GUkFNRUJVRkZFUixudWxsKSx0LmRlbGV0ZVRleHR1cmUociksdC5kZWxldGVGcmFtZWJ1ZmZlcihuKSxhfXZhciBNdD02MDA7dmFyIGp0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXt0aGlzLmZlYXR1cmVzPXt9LHRoaXMucmVnaXN0cnk9e30sbnVsbCE9dCYmKHRoaXMuZmVhdHVyZXM9dCksdGhpcy5nZXQoXCJERUJVR1wiKSYmY29uc29sZS53YXJuKFwiRGVidWdnaW5nIG1vZGUgaXMgT04uIFRoZSBvdXRwdXQgb2YgZXZlcnkgbWF0aCBjYWxsIHdpbGwgYmUgZG93bmxvYWRlZCB0byBDUFUgYW5kIGNoZWNrZWQgZm9yIE5hTnMuIFRoaXMgc2lnbmlmaWNhbnRseSBpbXBhY3RzIHBlcmZvcm1hbmNlLlwiKX1yZXR1cm4gZS5zZXRCYWNrZW5kPWZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwPT09ZSYmKGU9ITEpLCEodCBpbiBMdC5yZWdpc3RyeSkpdGhyb3cgbmV3IEVycm9yKFwiQmFja2VuZCBuYW1lICdcIit0K1wiJyBub3QgZm91bmQgaW4gcmVnaXN0cnlcIik7THQuZW5naW5lLmJhY2tlbmQ9THQuZmluZEJhY2tlbmQodCksTHQuYmFja2VuZE5hbWU9dH0sZS5nZXRCYWNrZW5kPWZ1bmN0aW9uKCl7cmV0dXJuIEx0LmluaXRFbmdpbmUoKSxMdC5iYWNrZW5kTmFtZX0sZS5kaXNwb3NlVmFyaWFibGVzPWZ1bmN0aW9uKCl7THQuZW5naW5lLmRpc3Bvc2VWYXJpYWJsZXMoKX0sZS5tZW1vcnk9ZnVuY3Rpb24oKXtyZXR1cm4gTHQuZW5naW5lLm1lbW9yeSgpfSxlLnByb2ZpbGU9ZnVuY3Rpb24odCl7cmV0dXJuIEx0LmVuZ2luZS5wcm9maWxlKHQpfSxlLnRpZHk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTHQuZW5naW5lLnRpZHkodCxlKX0sZS5kaXNwb3NlPWZ1bmN0aW9uKHQpe1N0KHQpLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHQuZGlzcG9zZSgpfSl9LGUua2VlcD1mdW5jdGlvbih0KXtyZXR1cm4gTHQuZW5naW5lLmtlZXAodCl9LGUudGltZT1mdW5jdGlvbih0KXtyZXR1cm4gTHQuZW5naW5lLnRpbWUodCl9LGUucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbiB0aGlzLmZlYXR1cmVzP3RoaXMuZmVhdHVyZXNbdF06KHRoaXMuZmVhdHVyZXNbdF09dGhpcy5ldmFsdWF0ZUZlYXR1cmUodCksdGhpcy5mZWF0dXJlc1t0XSl9LGUucHJvdG90eXBlLmdldEZlYXR1cmVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmVhdHVyZXN9LGUucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUpe3RoaXMuZmVhdHVyZXNbdF09ZX0sZS5wcm90b3R5cGUuZ2V0QmVzdEJhY2tlbmROYW1lPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZigwPT09T2JqZWN0LmtleXModGhpcy5yZWdpc3RyeSkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk5vIGJhY2tlbmQgZm91bmQgaW4gcmVnaXN0cnkuXCIpO3JldHVybiBPYmplY3Qua2V5cyh0aGlzLnJlZ2lzdHJ5KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue25hbWU6ZSxlbnRyeTp0LnJlZ2lzdHJ5W2VdfX0pLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5lbnRyeS5wcmlvcml0eS10LmVudHJ5LnByaW9yaXR5fSlbMF0ubmFtZX0sZS5wcm90b3R5cGUuZXZhbHVhdGVGZWF0dXJlPWZ1bmN0aW9uKGUpe2lmKFwiREVCVUdcIj09PWUpcmV0dXJuITE7aWYoXCJJU19CUk9XU0VSXCI9PT1lKXJldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c7aWYoXCJJU19OT0RFXCI9PT1lKXJldHVybiB2b2lkIDAhPT10JiZ2b2lkIDAhPT10LnZlcnNpb25zJiZ2b2lkIDAhPT10LnZlcnNpb25zLm5vZGU7aWYoXCJJU19DSFJPTUVcIj09PWUpcmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmbnVsbCE9bmF2aWdhdG9yJiZudWxsIT1uYXZpZ2F0b3IudXNlckFnZW50JiYvQ2hyb21lLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYvR29vZ2xlIEluYy8udGVzdChuYXZpZ2F0b3IudmVuZG9yKTtpZihcIldFQkdMX0NQVV9GT1JXQVJEXCI9PT1lKXJldHVybiEwO2lmKFwiV0VCR0xfUEFDS1wiPT09ZSlyZXR1cm4hMTtpZihcIldFQkdMX1BBQ0tfQkFUQ0hOT1JNQUxJWkFUSU9OXCI9PT1lKXJldHVybiB0aGlzLmdldChcIldFQkdMX1BBQ0tcIik7aWYoXCJXRUJHTF9QQUNLX0NMSVBcIj09PWUpcmV0dXJuIHRoaXMuZ2V0KFwiV0VCR0xfUEFDS1wiKTtpZihcIldFQkdMX1BBQ0tfREVQVEhXSVNFQ09OVlwiPT09ZSlyZXR1cm4gdGhpcy5nZXQoXCJXRUJHTF9QQUNLXCIpO2lmKFwiV0VCR0xfUEFDS19CSU5BUllfT1BFUkFUSU9OU1wiPT09ZSlyZXR1cm4gdGhpcy5nZXQoXCJXRUJHTF9QQUNLXCIpO2lmKFwiV0VCR0xfTEFaSUxZX1VOUEFDS1wiPT09ZSlyZXR1cm4gdGhpcy5nZXQoXCJXRUJHTF9QQUNLXCIpO2lmKFwiV0VCR0xfQ09OVl9JTTJDT0xcIj09PWUpcmV0dXJuIHRoaXMuZ2V0KFwiV0VCR0xfUEFDS1wiKTtpZihcIldFQkdMX05VTV9NQl9CRUZPUkVfUEFHSU5HXCI9PT1lKXJldHVybiB0aGlzLmdldChcIlBST0RcIil8fCF0aGlzLmdldChcIklTX0JST1dTRVJcIik/TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZOndpbmRvdy5zY3JlZW4uaGVpZ2h0KndpbmRvdy5zY3JlZW4ud2lkdGgqd2luZG93LmRldmljZVBpeGVsUmF0aW8qTXQvMTAyNDtpZihcIldFQkdMX01BWF9URVhUVVJFX1NJWkVcIj09PWUpcmV0dXJuIGZ1bmN0aW9uKHQpe2lmKG51bGw9PU90KXt2YXIgZT1wKHQpO090PWUuZ2V0UGFyYW1ldGVyKGUuTUFYX1RFWFRVUkVfU0laRSl9cmV0dXJuIE90fSh0aGlzLmdldChcIldFQkdMX1ZFUlNJT05cIikpO2lmKFwiV0VCR0xfTUFYX1RFWFRVUkVTX0lOX1NIQURFUlwiPT09ZSlyZXR1cm4gZnVuY3Rpb24odCl7aWYobnVsbD09a3Qpe3ZhciBlPXAodCk7a3Q9ZS5nZXRQYXJhbWV0ZXIoZS5NQVhfVEVYVFVSRV9JTUFHRV9VTklUUyl9cmV0dXJuIE1hdGgubWluKDE2LGt0KX0odGhpcy5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpKTtpZihcIklTX1RFU1RcIj09PWUpcmV0dXJuITE7aWYoXCJCQUNLRU5EXCI9PT1lKXJldHVybiB0aGlzLmdldEJlc3RCYWNrZW5kTmFtZSgpO2lmKFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIj09PWUpe3ZhciBuPXRoaXMuZ2V0KFwiV0VCR0xfVkVSU0lPTlwiKTtyZXR1cm4gMD09PW4/MDpmdW5jdGlvbih0KXtpZigwPT09dClyZXR1cm4gMDt2YXIgZT1wKHQpO3JldHVybiBSdChlLFwiRVhUX2Rpc2pvaW50X3RpbWVyX3F1ZXJ5X3dlYmdsMlwiKSYmMj09PXQ/MjpSdChlLFwiRVhUX2Rpc2pvaW50X3RpbWVyX3F1ZXJ5XCIpPzE6MH0obil9aWYoXCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fUkVMSUFCTEVcIj09PWUpcmV0dXJuIHRoaXMuZ2V0KFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIik+MCYmIWZ1bmN0aW9uKCl7dmFyIHQ9bmF2aWdhdG9yLnVzZXJBZ2VudHx8bmF2aWdhdG9yLnZlbmRvcnx8d2luZG93Lm9wZXJhO3JldHVybi8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaS50ZXN0KHQpfHwvMTIwN3w2MzEwfDY1OTB8M2dzb3w0dGhwfDUwWzEtNl1pfDc3MHN8ODAyc3xhIHdhfGFiYWN8YWMoZXJ8b298c1xcLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXxcXC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcXC0obnx1KXxjNTVcXC98Y2FwaXxjY3dhfGNkbVxcLXxjZWxsfGNodG18Y2xkY3xjbWRcXC18Y28obXB8bmQpfGNyYXd8ZGEoaXR8bGx8bmcpfGRidGV8ZGNcXC1zfGRldml8ZGljYXxkbW9ifGRvKGN8cClvfGRzKDEyfFxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcXC18Xyl8ZzEgdXxnNTYwfGdlbmV8Z2ZcXC01fGdcXC1tb3xnbyhcXC53fG9kKXxncihhZHx1bil8aGFpZXxoY2l0fGhkXFwtKG18cHx0KXxoZWlcXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1xcLWN8aHQoYyhcXC18IHxffGF8Z3xwfHN8dCl8dHApfGh1KGF3fHRjKXxpXFwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFxcLXxcXC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XFwvKXxrbG9ufGtwdCB8a3djXFwtfGt5byhjfGspfGxlKG5vfHhpKXxsZyggZ3xcXC8oa3xsfHUpfDUwfDU0fFxcLVthLXddKXxsaWJ3fGx5bnh8bTFcXC13fG0zZ2F8bTUwXFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bVxcLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFxcLXwgfG98dil8enopfG10KDUwfHAxfHYgKXxtd2JwfG15d2F8bjEwWzAtMl18bjIwWzItM118bjMwKDB8Mil8bjUwKDB8Mnw1KXxuNygwKDB8MSl8MTApfG5lKChjfG0pXFwtfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3xcXC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cXC0yfHBvKGNrfHJ0fHNlKXxwcm94fHBzaW98cHRcXC1nfHFhXFwtYXxxYygwN3wxMnwyMXwzMnw2MHxcXC1bMi03XXxpXFwtKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVxcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFxcLXxvb3xwXFwtKXxzZGtcXC98c2UoYyhcXC18MHwxKXw0N3xtY3xuZHxyaSl8c2doXFwtfHNoYXJ8c2llKFxcLXxtKXxza1xcLTB8c2woNDV8aWQpfHNtKGFsfGFyfGIzfGl0fHQ1KXxzbyhmdHxueSl8c3AoMDF8aFxcLXx2XFwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXFwtfHRkZ1xcLXx0ZWwoaXxtKXx0aW1cXC18dFxcLW1vfHRvKHBsfHNoKXx0cyg3MHxtXFwtfG0zfG01KXx0eFxcLTl8dXAoXFwuYnxnMXxzaSl8dXRzdHx2NDAwfHY3NTB8dmVyaXx2aShyZ3x0ZSl8dmsoNDB8NVswLTNdfFxcLXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoXFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXFwtfHlvdXJ8emV0b3x6dGVcXC0vaS50ZXN0KHQuc3Vic3RyKDAsNCkpfSgpO2lmKFwiSEFTX1dFQkdMXCI9PT1lKXJldHVybiB0aGlzLmdldChcIldFQkdMX1ZFUlNJT05cIik+MDtpZihcIldFQkdMX1ZFUlNJT05cIj09PWUpcmV0dXJuIEN0KDIpPzI6Q3QoMSk/MTowO2lmKFwiV0VCR0xfUkVOREVSX0ZMT0FUMzJfRU5BQkxFRFwiPT09ZSlyZXR1cm4gZnVuY3Rpb24odCl7aWYoMD09PXQpcmV0dXJuITE7dmFyIGU9cCh0KTtpZigxPT09dCl7aWYoIVJ0KGUsXCJPRVNfdGV4dHVyZV9mbG9hdFwiKSlyZXR1cm4hMX1lbHNlIGlmKCFSdChlLFwiRVhUX2NvbG9yX2J1ZmZlcl9mbG9hdFwiKSlyZXR1cm4hMTtyZXR1cm4gRHQoZSx0KX0odGhpcy5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpKTtpZihcIldFQkdMX0RPV05MT0FEX0ZMT0FUX0VOQUJMRURcIj09PWUpcmV0dXJuIGZ1bmN0aW9uKHQpe2lmKDA9PT10KXJldHVybiExO3ZhciBlPXAodCk7aWYoMT09PXQpe2lmKCFSdChlLFwiT0VTX3RleHR1cmVfZmxvYXRcIikpcmV0dXJuITE7aWYoIVJ0KGUsXCJXRUJHTF9jb2xvcl9idWZmZXJfZmxvYXRcIikpcmV0dXJuITF9ZWxzZSBpZighUnQoZSxcIkVYVF9jb2xvcl9idWZmZXJfZmxvYXRcIikpcmV0dXJuITE7cmV0dXJuIER0KGUsdCl9KHRoaXMuZ2V0KFwiV0VCR0xfVkVSU0lPTlwiKSk7aWYoXCJXRUJHTF9GRU5DRV9BUElfRU5BQkxFRFwiPT09ZSlyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIDI9PT10JiZudWxsIT1wKHQpLmZlbmNlU3luY30odGhpcy5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpKTtpZihcIldFQkdMX1NJWkVfVVBMT0FEX1VOSUZPUk1cIj09PWUpcmV0dXJuIHRoaXMuZ2V0KFwiV0VCR0xfUkVOREVSX0ZMT0FUMzJfRU5BQkxFRFwiKT80OjA7aWYoXCJURVNUX0VQU0lMT05cIj09PWUpcmV0dXJuIDMyPT09dGhpcy5iYWNrZW5kLmZsb2F0UHJlY2lzaW9uKCk/LjAwMTouMTtpZihcIkVQU0lMT05cIj09PWUpcmV0dXJuIDMyPT09dGhpcy5iYWNrZW5kLmZsb2F0UHJlY2lzaW9uKCk/MWUtNzoxZS00O2lmKFwiUFJPRFwiPT09ZSlyZXR1cm4hMTtpZihcIlRFTlNPUkxJS0VfQ0hFQ0tfU0hBUEVfQ09OU0lTVEVOQ1lcIj09PWUpcmV0dXJuIXRoaXMuZ2V0KFwiUFJPRFwiKTt0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGZlYXR1cmUgXCIrZStcIi5cIil9LGUucHJvdG90eXBlLnNldEZlYXR1cmVzPWZ1bmN0aW9uKHQpe3RoaXMuZmVhdHVyZXM9T2JqZWN0LmFzc2lnbih7fSx0KX0sZS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmZlYXR1cmVzPVR0KCksbnVsbCE9dGhpcy5nbG9iYWxFbmdpbmUmJih0aGlzLmdsb2JhbEVuZ2luZT1udWxsKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYmFja2VuZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmdpbmUuYmFja2VuZH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5maW5kQmFja2VuZD1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbiB0aGlzLnJlZ2lzdHJ5P3RoaXMucmVnaXN0cnlbdF0uYmFja2VuZDpudWxsfSxlLnByb3RvdHlwZS5yZWdpc3RlckJhY2tlbmQ9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9dGhpcztpZih2b2lkIDA9PT1uJiYobj0xKSx0IGluIHRoaXMucmVnaXN0cnkpcmV0dXJuIGNvbnNvbGUud2Fybih0K1wiIGJhY2tlbmQgd2FzIGFscmVhZHkgcmVnaXN0ZXJlZC4gUmV1c2luZyBleGlzdGluZyBiYWNrZW5kXCIpLG51bGwhPXImJnIoZnVuY3Rpb24oKXtyZXR1cm4gaS5lbmdpbmV9KSwhMTt0cnl7dmFyIGE9ZSgpO3JldHVybiBhLnNldERhdGFNb3Zlcih7bW92ZURhdGE6ZnVuY3Rpb24odCl7cmV0dXJuIGkuZW5naW5lLm1vdmVEYXRhKHQpfX0pLHRoaXMucmVnaXN0cnlbdF09e2JhY2tlbmQ6YSxwcmlvcml0eTpufSwhMH1jYXRjaChlKXtyZXR1cm4gY29uc29sZS53YXJuKFwiUmVnaXN0cmF0aW9uIG9mIGJhY2tlbmQgXCIrdCtcIiBmYWlsZWRcIiksY29uc29sZS53YXJuKGUuc3RhY2t8fGUubWVzc2FnZSksITF9fSxlLnByb3RvdHlwZS5yZW1vdmVCYWNrZW5kPWZ1bmN0aW9uKHQpe2lmKCEodCBpbiB0aGlzLnJlZ2lzdHJ5KSl0aHJvdyBuZXcgRXJyb3IodCtcIiBiYWNrZW5kIG5vdCBmb3VuZCBpbiByZWdpc3RyeVwiKTt0aGlzLnJlZ2lzdHJ5W3RdLmJhY2tlbmQuZGlzcG9zZSgpLGRlbGV0ZSB0aGlzLnJlZ2lzdHJ5W3RdfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJlbmdpbmVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5pdEVuZ2luZSgpLHRoaXMuZ2xvYmFsRW5naW5lfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLGUucHJvdG90eXBlLmluaXRFbmdpbmU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKG51bGw9PXRoaXMuZ2xvYmFsRW5naW5lKXt0aGlzLmJhY2tlbmROYW1lPXRoaXMuZ2V0KFwiQkFDS0VORFwiKTt2YXIgZT10aGlzLmZpbmRCYWNrZW5kKHRoaXMuYmFja2VuZE5hbWUpO3RoaXMuZ2xvYmFsRW5naW5lPW5ldyBJdChlLCExLGZ1bmN0aW9uKCl7cmV0dXJuIHQuZ2V0KFwiREVCVUdcIil9KX19LGV9KCk7ZnVuY3Rpb24gQnQoKXtMdC5zZXQoXCJQUk9EXCIsITApfXZhciBMdD1mdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKCl7dmFyIGU7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyllPXdpbmRvdztlbHNle2lmKHZvaWQgMD09PXQpdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgYSBnbG9iYWwgb2JqZWN0XCIpO2U9dH1yZXR1cm4gZX0oKTtyZXR1cm4gbnVsbD09ZS5FTlYmJihlLkVOVj1uZXcganQoVHQoKSksbHQoZnVuY3Rpb24oKXtyZXR1cm4gZS5FTlYuZW5naW5lfSkpLGUuRU5WfSgpLHp0PU9iamVjdC5mcmVlemUoe0VQU0lMT05fRkxPQVQxNjoxZS00LEVQU0lMT05fRkxPQVQzMjoxZS03LEVudmlyb25tZW50Omp0LGVuYWJsZVByb2RNb2RlOkJ0LEVOVjpMdH0pO2Z1bmN0aW9uIEZ0KHQpe3JldHVybiBiKCQodCksXCJUaGUgZiBwYXNzZWQgaW4gZ3JhZChmKSBtdXN0IGJlIGEgZnVuY3Rpb25cIiksZnVuY3Rpb24oZSxuKXtyZXR1cm4gYihlIGluc3RhbmNlb2YgZnQsXCJUaGUgeCBwYXNzZWQgaW4gZ3JhZChmKSh4KSBtdXN0IGJlIGEgdGVuc29yXCIpLGIobnVsbD09bnx8biBpbnN0YW5jZW9mIGZ0LFwiVGhlIGR5IHBhc3NlZCBpbiBncmFkKGYpKHgsIGR5KSBtdXN0IGJlIGEgdGVuc29yXCIpLEx0LmVuZ2luZS50aWR5KGZ1bmN0aW9uKCl7dmFyIHI9THQuZW5naW5lLmdyYWRpZW50cyhmdW5jdGlvbigpe3JldHVybiB0KGUpfSxbZV0sbiksaT1yLnZhbHVlLGE9ci5ncmFkcztyZXR1cm4gbnVsbCE9biYmdyhpLnNoYXBlLG4uc2hhcGUsXCJUaGUgc2hhcGUgb2YgZHkgcGFzc2VkIGluIGdyYWQoZikoeCwgZHkpIG11c3QgbWF0Y2ggdGhlIHNoYXBlIHJldHVybmVkIGJ5IGYoeClcIiksSHQoYSksYVswXX0pfX1mdW5jdGlvbiBVdCh0KXtyZXR1cm4gYigkKHQpLFwiVGhlIGYgcGFzc2VkIGluIGdyYWRzKGYpIG11c3QgYmUgYSBmdW5jdGlvblwiKSxmdW5jdGlvbihlLG4pe3JldHVybiBiKEFycmF5LmlzQXJyYXkoZSkmJmUuZXZlcnkoZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBmdH0pLFwiVGhlIGFyZ3MgcGFzc2VkIGluIGdyYWRzKGYpKGFyZ3MpIG11c3QgYmUgYW4gYXJyYXkgb2YgdGVuc29yc1wiKSxiKG51bGw9PW58fG4gaW5zdGFuY2VvZiBmdCxcIlRoZSBkeSBwYXNzZWQgaW4gZ3JhZHMoZikoYXJncywgZHkpIG11c3QgYmUgYSB0ZW5zb3JcIiksTHQuZW5naW5lLnRpZHkoZnVuY3Rpb24oKXt2YXIgcj1MdC5lbmdpbmUuZ3JhZGllbnRzKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkodm9pZCAwLGUpfSxlLG4pLGk9ci52YWx1ZSxhPXIuZ3JhZHM7cmV0dXJuIG51bGwhPW4mJncoaS5zaGFwZSxuLnNoYXBlLFwiVGhlIHNoYXBlIG9mIGR5IHBhc3NlZCBpbiBncmFkcyhmKShbeDEsLi4uXSwgZHkpIG11c3QgbWF0Y2ggdGhlIHNoYXBlIHJldHVybmVkIGJ5IGYoW3gxLC4uLl0pXCIpLEh0KGEpLGF9KX19ZnVuY3Rpb24gVnQodCl7cmV0dXJuIGIoJCh0KSxcIlRoZSBmIHBhc3NlZCBpbiB2YWx1ZUFuZEdyYWQoZikgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpLGZ1bmN0aW9uKGUsbil7YihlIGluc3RhbmNlb2YgZnQsXCJUaGUgeCBwYXNzZWQgaW4gdmFsdWVBbmRHcmFkKGYpKHgpIG11c3QgYmUgYSB0ZW5zb3JcIiksYihudWxsPT1ufHxuIGluc3RhbmNlb2YgZnQsXCJUaGUgZHkgcGFzc2VkIGluIHZhbHVlQW5kR3JhZChmKSh4LCBkeSkgbXVzdCBiZSBhIHRlbnNvclwiKTt2YXIgcj1MdC5lbmdpbmUuZ3JhZGllbnRzKGZ1bmN0aW9uKCl7cmV0dXJuIHQoZSl9LFtlXSxuKSxpPXIuZ3JhZHMsYT1yLnZhbHVlO3JldHVybiBIdChpKSx7Z3JhZDppWzBdLHZhbHVlOmF9fX1mdW5jdGlvbiBXdCh0KXtyZXR1cm4gYigkKHQpLFwiVGhlIGYgcGFzc2VkIGluIHZhbHVlQW5kR3JhZHMoZikgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpLGZ1bmN0aW9uKGUsbil7YihBcnJheS5pc0FycmF5KGUpJiZlLmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgZnR9KSxcIlRoZSBhcmdzIHBhc3NlZCBpbiB2YWx1ZUFuZEdyYWRzKGYpKGFyZ3MpIG11c3QgYmUgYXJyYXkgb2YgdGVuc29yc1wiKSxiKG51bGw9PW58fG4gaW5zdGFuY2VvZiBmdCxcIlRoZSBkeSBwYXNzZWQgaW4gdmFsdWVBbmRHcmFkcyhmKShhcmdzLCBkeSkgbXVzdCBiZSBhIHRlbnNvclwiKTt2YXIgcj1MdC5lbmdpbmUuZ3JhZGllbnRzKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkodm9pZCAwLGUpfSxlLG4pO3JldHVybiBudWxsIT1uJiZ3KHIudmFsdWUuc2hhcGUsbi5zaGFwZSxcIlRoZSBzaGFwZSBvZiBkeSBwYXNzZWQgaW4gdmFsdWVBbmRHcmFkcyhmKShbeDEsLi4uXSwgZHkpIG11c3QgbWF0Y2ggdGhlIHNoYXBlIHJldHVybmVkIGJ5IGYoW3gxLC4uLl0pXCIpLEh0KHIuZ3JhZHMpLHJ9fWZ1bmN0aW9uIHF0KHQsZSl7aWYoYigkKHQpLFwiVGhlIGYgcGFzc2VkIGluIHZhcmlhYmxlR3JhZHMoZikgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpLGIobnVsbD09ZXx8QXJyYXkuaXNBcnJheShlKSYmZS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGh0fSksXCJUaGUgdmFyTGlzdCBwYXNzZWQgaW4gdmFyaWFibGVHcmFkcyhmLCB2YXJMaXN0KSBtdXN0IGJlIGFuIGFycmF5IG9mIHZhcmlhYmxlc1wiKSxudWxsPT1lKWZvcih2YXIgbiBpbiBlPVtdLEx0LmVuZ2luZS5yZWdpc3RlcmVkVmFyaWFibGVzKWUucHVzaChMdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tuXSk7dmFyIHI9ZS5sZW5ndGg7YigoZT1lLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC50cmFpbmFibGV9KSkubGVuZ3RoPjAsXCJ2YXJpYWJsZUdyYWRzKCkgZXhwZWN0cyBhdCBsZWFzdCBvbmUgb2YgdGhlIGlucHV0IHZhcmlhYmxlcyB0byBiZSB0cmFpbmFibGUsIGJ1dCBub25lIG9mIHRoZSBcIityK1wiIHZhcmlhYmxlcyBpcyB0cmFpbmFibGUuXCIpO3ZhciBpPUx0LmVuZ2luZS5ncmFkaWVudHModCxlLG51bGwsITApLGE9aS52YWx1ZSxvPWkuZ3JhZHM7YihvLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXR9KSxcIkNhbm5vdCBmaW5kIGEgY29ubmVjdGlvbiBiZXR3ZWVuIGFueSB2YXJpYWJsZSBhbmQgdGhlIHJlc3VsdCBvZiB0aGUgbG9zcyBmdW5jdGlvbiB5PWYoeCkuIFBsZWFzZSBtYWtlIHN1cmUgdGhlIG9wZXJhdGlvbnMgdGhhdCB1c2UgdmFyaWFibGVzIGFyZSBpbnNpZGUgdGhlIGZ1bmN0aW9uIGYgcGFzc2VkIHRvIG1pbmltaXplKCkuXCIpLGIoMD09PWEucmFuayxcIlRoZSBmIHBhc3NlZCBpbiB2YXJpYWJsZUdyYWRzKGYpIG11c3QgcmV0dXJuIGEgc2NhbGFyLCBidXQgaXQgcmV0dXJuZWQgYSByYW5rLVwiK2EucmFuaytcIiB0ZW5zb3JcIik7dmFyIHM9e307cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0LGUpe251bGwhPW9bZV0mJihzW3QubmFtZV09b1tlXSl9KSx7dmFsdWU6YSxncmFkczpzfX1mdW5jdGlvbiAkdCh0KXtyZXR1cm4gTHQuZW5naW5lLmN1c3RvbUdyYWQodCl9ZnVuY3Rpb24gSHQodCl7aWYodC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXR9KS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY29tcHV0ZSBncmFkaWVudCBvZiB5PWYoeCkgd2l0aCByZXNwZWN0IHRvIHguIE1ha2Ugc3VyZSB0aGF0XFxuICAgIHRoZSBmIHlvdSBwYXNzZWQgZW5jbG9zZXMgYWxsIG9wZXJhdGlvbnMgdGhhdCBsZWFkIGZyb20geCB0byB5LlwiKX12YXIgS3Q9anQudGlkeSxHdD1qdC5rZWVwLFh0PWp0LmRpc3Bvc2UsWXQ9anQudGltZSxKdD1qdC5wcm9maWxlO2Z1bmN0aW9uIFp0KCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO0x0LmdldChcIklTX1RFU1RcIil8fGNvbnNvbGUud2Fybi5hcHBseShjb25zb2xlLHQpfWZ1bmN0aW9uIFF0KHQsZSxuLHIpe3ZvaWQgMD09PXImJihyPSEwKTt2YXIgaT1bXTtpZihyKShpPWkuY29uY2F0KGUuc2xpY2UoMCkpKS5wdXNoKHRbMF0vbiksaT1pLmNvbmNhdCh0LnNsaWNlKDEpKTtlbHNle2k9aS5jb25jYXQodFswXSk7Zm9yKHZhciBhPWUubGVuZ3RoLG89MDtvPGE7KytvKWk9aS5jb25jYXQoW3RbbysxXS9lW29dLGVbb11dKTtpPWkuY29uY2F0KHQuc2xpY2UoYSsxKSl9cmV0dXJuIGl9ZnVuY3Rpb24gdGUodCxlLG4pe3ZvaWQgMD09PW4mJihuPSEwKTt2YXIgcj1bXTtpZihuKXtyLnB1c2goZSk7Zm9yKHZhciBpPWUrMTtpPHQ7KytpKWk8PTIqZT8oci5wdXNoKGkpLHIucHVzaChpLShlKzEpKSk6ci5wdXNoKGkpfWVsc2V7dmFyIGE9W10sbz1bXTtmb3IoaT0xO2k8dDsrK2kpaT49MiplKzF8fGklMj09MT9vLnB1c2goaSk6YS5wdXNoKGkpO3IucHVzaC5hcHBseShyLGEpLHIucHVzaCgwKSxyLnB1c2guYXBwbHkocixvKX1yZXR1cm4gcn1mdW5jdGlvbiBlZSh0LGUsbixyKXt2b2lkIDA9PT1yJiYocj0hMCk7dmFyIGk9W107cj9pLnB1c2godFswXS9uKTppLnB1c2godFswXSpuKTtmb3IodmFyIGE9MTthPHQubGVuZ3RoOysrYSlhPD1lLmxlbmd0aD9yP2kucHVzaChlW2EtMV0qdFthXSk6aS5wdXNoKHRbYV0vZVthLTFdKTppLnB1c2godFthXSk7cmV0dXJuIGl9ZnVuY3Rpb24gbmUodCxlKXtmb3IodmFyIG49WzBdLHI9MDtyPGU7KytyKW4ucHVzaCh0W3JdWzBdKTtyZXR1cm4gbn1mdW5jdGlvbiByZSh0LGUsbil7Zm9yKHZhciByPXQuc2xpY2UoMCwxKSxpPTA7aTxuOysraSlyLnB1c2godFtpKzFdLWVbaV1bMF0tZVtpXVsxXSk7cmV0dXJuIHJ9ZnVuY3Rpb24gaWUodCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoOysrbilpZih0W3QubGVuZ3RoLW4tMV0hPT1lLTEtbilyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBhZSh0LGUpe2Zvcih2YXIgbj1bXSxyPXQubGVuZ3RoLGk9MDtpPHI7aSsrKS0xPT09ZS5pbmRleE9mKGkpJiZuLnB1c2godFtpXSk7cmV0dXJuW24sZS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV19KV19ZnVuY3Rpb24gb2UodCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj10Lmxlbmd0aCtlLmxlbmd0aCxpPVtdLGE9MCxvPTAscz0wO3M8cjtzKyspLTE9PT1uLmluZGV4T2Yocyk/aS5wdXNoKHRbYSsrXSk6aS5wdXNoKGVbbysrXSk7cmV0dXJuIGl9KHQsZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIDF9KSxlKX1mdW5jdGlvbiBzZSh0LGUsbil7YihpZShlLG4pLHQrXCIgc3VwcG9ydHMgb25seSBpbm5lci1tb3N0IGF4ZXMgZm9yIG5vdy4gR290IGF4ZXMgXCIrZStcIiBhbmQgcmFuay1cIituK1wiIGlucHV0LlwiKX1mdW5jdGlvbiB1ZSh0LGUpe2lmKGllKHQsZSkpcmV0dXJuIG51bGw7Zm9yKHZhciBuPVtdLHI9MDtyPGU7KytyKS0xPT09dC5pbmRleE9mKHIpJiZuLnB1c2gocik7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gbi5wdXNoKHQpfSksbn1mdW5jdGlvbiBjZSh0KXtyZXR1cm4gdC5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm5bZSx0XX0pLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdFsxXS1lWzFdfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0WzBdfSl9ZnVuY3Rpb24gbGUodCxlKXtmb3IodmFyIG49W10scj1lLXQ7cjxlOysrciluLnB1c2gocik7cmV0dXJuIG59ZnVuY3Rpb24gZmUodCxlKXtmb3IodmFyIG49dC5sZW5ndGgscj1bXSxpPTA7aTxuO2krKyl7dmFyIGE9bi0xLWksbz10W2FdfHwxOyhlW2UubGVuZ3RoLTEtaV18fDEpPjEmJjE9PT1vJiZyLnVuc2hpZnQoYSl9cmV0dXJuIHJ9ZnVuY3Rpb24gaGUodCxlKXtmb3IodmFyIG49W10scj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgaT10W3QubGVuZ3RoLXItMV0sYT1lLmxlbmd0aC1yLTEsbz1lW2FdOyhudWxsPT1pfHwxPT09aSYmbz4xKSYmbi51bnNoaWZ0KGEpfXJldHVybiBufWZ1bmN0aW9uIHBlKHQsZSl7Zm9yKHZhciBuPVtdLHI9TWF0aC5tYXgodC5sZW5ndGgsZS5sZW5ndGgpLGk9MDtpPHI7aSsrKXt2YXIgYT10W3QubGVuZ3RoLWktMV07bnVsbD09YSYmKGE9MSk7dmFyIG89ZVtlLmxlbmd0aC1pLTFdO2lmKG51bGw9PW8mJihvPTEpLDE9PT1hKW4udW5zaGlmdChvKTtlbHNlIGlmKDE9PT1vKW4udW5zaGlmdChhKTtlbHNle2lmKGEhPT1vKXRocm93IEVycm9yKFwiT3BlcmFuZHMgY291bGQgbm90IGJlIGJyb2FkY2FzdCB0b2dldGhlciB3aXRoIHNoYXBlcyBcIit0K1wiIGFuZCBcIitlK1wiLlwiKTtuLnVuc2hpZnQoYSl9fXJldHVybiBufWZ1bmN0aW9uIGRlKHQsZSl7Zm9yKHZhciBuPXRbMF0uc2xpY2UoKSxyPTE7cjx0Lmxlbmd0aDtyKyspbltlXSs9dFtyXVtlXTtyZXR1cm4gbn1mdW5jdGlvbiBtZSh0LGUpe2lmKHQucmFuazwxKXRocm93IG5ldyBFcnJvcihcInRmLmdhdGhlck5EKCkgZXhwZWN0cyB0aGUgaW5wdXQgdG8gYmUgcmFuayAxIG9yIGhpZ2hlciwgYnV0IHRoZSByYW5rIHdhcyBcIit0LnJhbmsrXCIuXCIpO2lmKGUucmFuazwxKXRocm93IG5ldyBFcnJvcihcInRmLmdhdGhlck5EKCkgZXhwZWN0cyB0aGUgaW5kaWNlcyB0byBiZSByYW5rIDEgb3IgaGlnaGVyLCBidXQgdGhlIHJhbmsgd2FzIFwiK2UucmFuaytcIi5cIik7aWYoXCJpbnQzMlwiIT09ZS5kdHlwZSl0aHJvdyBuZXcgRXJyb3IoXCJ0Zi5nYXRoZXJORCgpIGV4cGVjdHMgdGhlIGluZGljZXMgdG8gYmUgaW50MzIgdHlwZSwgYnV0IHRoZSBkdHlwZSB3YXMgXCIrZS5kdHlwZStcIi5cIik7aWYoZS5zaGFwZVtlLnJhbmstMV0+dC5yYW5rKXRocm93IG5ldyBFcnJvcihcImluZGV4IGlubmVybW9zdCBkaW1lbnNpb24gbGVuZ3RoIG11c3QgYmUgPD0gdGVuc29yIHJhbms7IHNhdzogXCIrZS5zaGFwZVtlLnJhbmstMV0rXCIgdnMuIFwiK3QucmFuayk7aWYoMD09PXQuc2l6ZSl0aHJvdyBuZXcgRXJyb3IoXCJSZXF1ZXN0ZWQgbW9yZSB0aGFuIDAgZW50cmllcywgYnV0IGlucHV0IGlzIGVtcHR5LiBJbnB1dCBzaGFwZTogXCIrdC5zaGFwZStcIi5cIik7Zm9yKHZhciBuPWUuc2hhcGUscj1uW24ubGVuZ3RoLTFdLGk9MSxhPTA7YTxuLmxlbmd0aC0xOysrYSlpKj1uW2FdO3ZhciBvPXQuc2hhcGUscz1uLnNsaWNlKCk7cy5wb3AoKTt2YXIgdT0xO2ZvcihhPXI7YTx0LnJhbms7KythKXUqPW9bYV0scy5wdXNoKG9bYV0pO3ZhciBjPUsodC5zaGFwZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0L3V9KS5jb25jYXQoWzFdKS5zbGljZSgwLHIpO3JldHVybltzLGksdSxjXX12YXIgZ2U9MzA7ZnVuY3Rpb24geWUodCl7cmV0dXJuIHQ8PWdlP3Q6SCh0LE1hdGguZmxvb3IoTWF0aC5zcXJ0KHQpKSl9ZnVuY3Rpb24gdmUodCxlLG4pe2lmKGUucmFuazwxKXRocm93IG5ldyBFcnJvcihcInRmLnNjYXR0ZXJORCgpIGV4cGVjdHMgdGhlIGluZGljZXMgdG8gYmUgcmFuayAxIG9yIGhpZ2hlciwgYnV0IHRoZSByYW5rIHdhcyBcIitlLnJhbmsrXCIuXCIpO2lmKHQucmFuazwxKXRocm93IG5ldyBFcnJvcihcInRmLnNjYXR0ZXJORCgpIGV4cGVjdHMgdGhlIHVwZGF0ZXMgdG8gYmUgcmFuayAxIG9yIGhpZ2hlciwgYnV0IHRoZSByYW5rIHdhcyBcIit0LnJhbmsrXCIuXCIpO2lmKFwiaW50MzJcIiE9PWUuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiVGhlIGR0eXBlIG9mICdpbmRpY2VzJyBzaG91bGQgYmUgaW50MzIsIGJ1dCBnb3QgZHR5cGU6IFwiK2UuZHR5cGUpO2lmKG4ubGVuZ3RoPDEpdGhyb3cgbmV3IEVycm9yKFwiT3V0cHV0IHJhbmsgbXVzdCBiZSBncmVhdGVyIG9yIGVxdWFsIHRvIDEsIGJ1dCBnb3Qgc2hhcGU6IFwiK24pO2lmKDA9PT1uLmxlbmd0aCl7aWYoMD09PWUuc2l6ZSl0aHJvdyBuZXcgRXJyb3IoXCJJbmRpY2VzIHNwZWNpZmllZCBmb3IgZW1wdHkgb3V0cHV0LiBpbmRpY2VzIHNoYXBlOiBcIitlLnNoYXBlKTtpZigwPT09dC5zaXplKXRocm93IG5ldyBFcnJvcihcIlVwZGF0ZXMgc3BlY2lmaWVkIGZvciBlbXB0eSBvdXRwdXQuIHVwZGF0ZXMgc2hhcGU6IFwiK3Quc2hhcGUpfSFmdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5yYW5rPjE/ZS5zaGFwZVtlLnJhbmstMV06MSxpPWUucmFuaz4xP2UucmFuay0xOjEsYT1cIk11c3QgaGF2ZSB1cGRhdGVzLnNoYXBlID0gaW5kaWNlcy5zaGFwZVs6YmF0Y2hEaW1dICsgc2hhcGVbc2xpY2VEaW06XSwgZ290IHVwZGF0ZXMuc2hhcGU6IFwiK24uc2hhcGUrXCIsIGluZGljZXMuc2hhcGU6IFwiK2Uuc2hhcGUrXCIsIHNoYXBlOiBcIit0K1wiLCBzbGljZURpbTogXCIrcitcIiwgYW5kIGJhdGNoRGltOiBcIitpK1wiLlwiO2lmKG4ucmFuazxpKXRocm93IG5ldyBFcnJvcihhK1wiIHVwZGF0ZS5yYW5rIDwgXCIraStcIi4gXCIpO2lmKHQubGVuZ3RoPHIrKG4ucmFuay1pKSl0aHJvdyBuZXcgRXJyb3IoYStcIiBPdXRwdXQgc2hhcGUgbGVuZ3RoIDwgXCIrKHIrKG4ucmFuay1pKSkpO2lmKG4ucmFuayE9PWkrdC5sZW5ndGgtcil0aHJvdyBuZXcgRXJyb3IoYStcIiB1cGRhdGUucmFuayAhPSBcIisoaSt0Lmxlbmd0aC1yKSk7Zm9yKHZhciBvPTA7bzxpOysrbylpZihuLnNoYXBlW29dIT09ZS5zaGFwZVtvXSl0aHJvdyBuZXcgRXJyb3IoYStcIiB1cGRhdGVzLnNoYXBlW1wiK28rXCJdIChcIituLnNoYXBlW29dK1wiKSAhPSBpbmRpY2VzLnNoYXBlW1wiK28rXCJdIChcIitlLnNoYXBlW29dK1wiKS5cIik7Zm9yKG89MDtvPG4ucmFuay1pOysrbylpZihuLnNoYXBlW28raV0hPT10W28rcl0pdGhyb3cgbmV3IEVycm9yKGErXCIgdXBkYXRlcy5zaGFwZVtcIisobytpKStcIl0gKFwiK24uc2hhcGVbbytpXStcIikgIT0gc2hhcGVbXCIrKG8raSkrXCJdIChcIit0W28raV0rXCIpXCIpfShuLGUsdCl9ZnVuY3Rpb24gYmUodCxlLG4pe2Zvcih2YXIgcj1lLnJhbms+MT9lLnNoYXBlW2UucmFuay0xXToxLGk9bi5sZW5ndGgsYT0xLG89cjtvPGk7KytvKWEqPW5bb107dmFyIHM9cjwxPzE6cjtyZXR1cm57c2xpY2VSYW5rOnIsbnVtVXBkYXRlczplLnNpemUvcyxzbGljZVNpemU6YSxzdHJpZGVzOksobi5zbGljZSgwLHIpKS5jb25jYXQoWzFdKSxvdXRwdXRTaXplOkUobil9fWZ1bmN0aW9uIHdlKHQsZSxuLHIsaSxhLG8scyx1KXtpZih2b2lkIDA9PT1pJiYoaT0wKSx2b2lkIDA9PT1hJiYoYT0wKSx2b2lkIDA9PT1vJiYobz0wKSx2b2lkIDA9PT1zJiYocz0wKSx2b2lkIDA9PT11JiYodT0wKSwwIT09byl0aHJvdyBuZXcgRXJyb3IoXCJlbGxpcHNpcyBtYXNrIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpO2lmKDAhPT1zKXRocm93IG5ldyBFcnJvcihcIm5ldyBheGlzIG1hc2sgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7Zm9yKHZhciBjPVtdLGw9W10sZj1bXSxoPTA7aDx0Lmxlbmd0aDtoKyspY1toXT1fZShpLGUscix0LGgpLGxbaF09eGUoYSxuLHIsdCxoKSx1JjE8PGgmJihsW2hdPWNbaF0rMSxmLnB1c2goaCkpO3ZhciBwPW5ldyBBcnJheSh0Lmxlbmd0aCkuZmlsbCgwKTtyZXR1cm4gcD1wLm1hcChmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLGk9Y1tlXTshKHJbZV0+MD9pPj1sW2VdOmk8PWxbZV0pO2krPXJbZV0pbis9MTtyZXR1cm4gbn0pLFtjLHAsZl19ZnVuY3Rpb24gX2UodCxlLG4scixpKXt2YXIgYT1lW2ldO3QmMTw8aSYmKGE9bltpXT4wP051bWJlci5NSU5fU0FGRV9JTlRFR0VSOk51bWJlci5NQVhfU0FGRV9JTlRFR0VSKTt2YXIgbz1yW2ldO3JldHVybiBhPDAmJihhKz1vKSxtKDAsYSxvLTEpfWZ1bmN0aW9uIHhlKHQsZSxuLHIsaSl7dmFyIGE9ZVtpXTt0JjE8PGkmJihhPW5baV0+MD9OdW1iZXIuTUFYX1NBRkVfSU5URUdFUjpOdW1iZXIuTUlOX1NBRkVfSU5URUdFUik7dmFyIG89cltpXTtyZXR1cm4gYTwwJiYoYSs9byksbltpXT4wP20oMCxhLG8pOm0oLTEsYSxvLTEpfWZ1bmN0aW9uIEVlKHQsZSxuKXtmb3IodmFyIHI9bi5sZW5ndGgsaT0wO2k8bi5sZW5ndGg7aSsrKWlmKG5baV0+MSl7cj1pO2JyZWFrfWZvcihpPXIrMTtpPG4ubGVuZ3RoO2krKylpZihlW2ldPjB8fG5baV0hPT10W2ldKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIFNlKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoPjA/dFt0Lmxlbmd0aC0xXToxLHI9MDtyPHQubGVuZ3RoLTE7cisrKW4rPXRbcl0qZVtyXTtyZXR1cm4gbn1mdW5jdGlvbiBOZSh0KXt2YXIgZT10O2lmKEwodCkpcmV0dXJuW3QubGVuZ3RoXTtpZighQXJyYXkuaXNBcnJheSh0KSlyZXR1cm5bXTtmb3IodmFyIG49W107ZSBpbnN0YW5jZW9mIEFycmF5fHxMKGUpOyluLnB1c2goZS5sZW5ndGgpLGU9ZVswXTtyZXR1cm4gdCBpbnN0YW5jZW9mIEFycmF5JiZMdC5nZXQoXCJURU5TT1JMSUtFX0NIRUNLX1NIQVBFX0NPTlNJU1RFTkNZXCIpJiZmdW5jdGlvbiB0KGUsbixyKXtpZihyPXJ8fFtdLGUgaW5zdGFuY2VvZiBBcnJheXx8TChlKSl7YihuLmxlbmd0aD4wLGZ1bmN0aW9uKCl7cmV0dXJuXCJFbGVtZW50IGFycltcIityLmpvaW4oXCJdW1wiKStcIl0gc2hvdWxkIGJlIGEgcHJpbWl0aXZlLCBidXQgaXMgYW4gYXJyYXkgb2YgXCIrZS5sZW5ndGgrXCIgZWxlbWVudHNcIn0pLGIoZS5sZW5ndGg9PT1uWzBdLGZ1bmN0aW9uKCl7cmV0dXJuXCJFbGVtZW50IGFycltcIityLmpvaW4oXCJdW1wiKStcIl0gc2hvdWxkIGhhdmUgXCIrblswXStcIiBlbGVtZW50cywgYnV0IGhhcyBcIitlLmxlbmd0aCtcIiBlbGVtZW50c1wifSk7Zm9yKHZhciBpPW4uc2xpY2UoMSksYT0wO2E8ZS5sZW5ndGg7KythKXQoZVthXSxpLHIuY29uY2F0KGEpKX1lbHNlIGIoMD09PW4ubGVuZ3RoLGZ1bmN0aW9uKCl7cmV0dXJuXCJFbGVtZW50IGFycltcIityLmpvaW4oXCJdW1wiKStcIl0gaXMgYSBwcmltaXRpdmUsIGJ1dCBzaG91bGQgYmUgYW4gYXJyYXkvVHlwZWRBcnJheSBvZiBcIituWzBdK1wiIGVsZW1lbnRzXCJ9KX0odCxuLFtdKSxufWZ1bmN0aW9uIEllKHQsZSxuLHIpe2lmKG51bGwhPXQmJihcIm51bWVyaWNcIiE9PXQmJnQhPT1lfHxcIm51bWVyaWNcIj09PXQmJlwic3RyaW5nXCI9PT1lKSl0aHJvdyBuZXcgRXJyb3IoXCJBcmd1bWVudCAnXCIrbitcIicgcGFzc2VkIHRvICdcIityK1wiJyBtdXN0IGJlIFwiK3QrXCIgdGVuc29yLCBidXQgZ290IFwiK2UrXCIgdGVuc29yXCIpfWZ1bmN0aW9uIE9lKHQsZSxuLHIpe2lmKHZvaWQgMD09PXImJihyPVwibnVtZXJpY1wiKSx0IGluc3RhbmNlb2YgZnQpcmV0dXJuIEllKHIsdC5kdHlwZSxlLG4pLHQ7dmFyIGk9cSh0KTtpZihcInN0cmluZ1wiIT09aSYmW1wiYm9vbFwiLFwiaW50MzJcIixcImZsb2F0MzJcIl0uaW5kZXhPZihyKT49MCYmKGk9ciksSWUocixpLGUsbiksIUwodCkmJiFBcnJheS5pc0FycmF5KHQpJiZcIm51bWJlclwiIT10eXBlb2YgdCYmXCJib29sZWFuXCIhPXR5cGVvZiB0JiZcInN0cmluZ1wiIT10eXBlb2YgdCl0aHJvdyBuZXcgRXJyb3IoXCJBcmd1bWVudCAnXCIrZStcIicgcGFzc2VkIHRvICdcIituK1wiJyBtdXN0IGJlIGEgVGVuc29yIG9yIFRlbnNvckxpa2UsIGJ1dCBnb3QgJ1wiK3QuY29uc3RydWN0b3IubmFtZStcIidcIik7dmFyIGE9TmUodCk7TCh0KXx8QXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKTt2YXIgbz1cInN0cmluZ1wiIT09aT9HKHQsaSxMdC5nZXQoXCJERUJVR1wiKSk6eCh0KTtyZXR1cm4gZnQubWFrZShhLHt2YWx1ZXM6b30saSl9ZnVuY3Rpb24ga2UodCxlLG4pe2lmKCFBcnJheS5pc0FycmF5KHQpKXRocm93IG5ldyBFcnJvcihcIkFyZ3VtZW50IFwiK2UrXCIgcGFzc2VkIHRvIFwiK24rXCIgbXVzdCBiZSBhIGBUZW5zb3JbXWAgb3IgYFRlbnNvckxpa2VbXWBcIik7cmV0dXJuIHQubWFwKGZ1bmN0aW9uKHQscil7cmV0dXJuIE9lKHQsZStcIltcIityK1wiXVwiLG4pfSl9ZnVuY3Rpb24gQWUodCl7dmFyIGU9T2JqZWN0LmtleXModCk7aWYoMSE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIlBsZWFzZSBwcm92aWRlIGFuIG9iamVjdCB3aXRoIGEgc2luZ2xlIGtleSAob3BlcmF0aW9uIG5hbWUpIG1hcHBpbmcgdG8gYSBmdW5jdGlvbi4gR290IGFuIG9iamVjdCB3aXRoIFwiK2UubGVuZ3RoK1wiIGtleXMuXCIpO3ZhciBuPWVbMF0scj10W25dO24uZW5kc1dpdGgoXCJfXCIpJiYobj1uLnN1YnN0cmluZygwLG4ubGVuZ3RoLTEpKTt2YXIgaT1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtMdC5lbmdpbmUuc3RhcnRTY29wZShuKTt0cnl7dmFyIGk9ci5hcHBseSh2b2lkIDAsdCk7cmV0dXJuIGkgaW5zdGFuY2VvZiBQcm9taXNlJiZjb25zb2xlLmVycm9yKFwiQ2Fubm90IHJldHVybiBhIFByb21pc2UgaW5zaWRlIG9mIHRpZHkuXCIpLEx0LmVuZ2luZS5lbmRTY29wZShpKSxpfWNhdGNoKHQpe3Rocm93IEx0LmVuZ2luZS5lbmRTY29wZShudWxsKSx0fX07cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLFwibmFtZVwiLHt2YWx1ZTpuLGNvbmZpZ3VyYWJsZTohMH0pLGl9dmFyIENlPUFlKHtzb2Z0bWF4XzpmdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPS0xKTt2YXIgbj1PZSh0LFwibG9naXRzXCIsXCJzb2Z0bWF4XCIpO2lmKC0xPT09ZSYmKGU9bi5yYW5rLTEpLGUhPT1uLnJhbmstMSl0aHJvdyBFcnJvcihcIlNvZnRtYXggYWxvbmcgYSBub24tbGFzdCBkaW1lbnNpb24gaXMgbm90IHlldCBzdXBwb3J0ZWQuIExvZ2l0cyB3YXMgcmFuayBcIituLnJhbmsrXCIgYW5kIGRpbSB3YXMgXCIrZSk7cmV0dXJuICR0KGZ1bmN0aW9uKHQpe3ZhciBuPXQubG9nU3VtRXhwKFtlXSwhMCkscj10LnRvRmxvYXQoKS5zdWIobikuZXhwKCk7cmV0dXJue3ZhbHVlOnIsZ3JhZEZ1bmM6ZnVuY3Rpb24odCl7dmFyIG49dC5tdWwocik7cmV0dXJuIG4uc3ViKG4uc3VtKFtlXSwhMCkubXVsKHIpKX19fSkobil9fSksUGU9QWUoe2xvZ1NvZnRtYXhfOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9LTEpO3ZhciBuPU9lKHQsXCJsb2dpdHNcIixcImxvZ1NvZnRtYXhcIik7aWYoLTE9PT1lJiYoZT1uLnJhbmstMSksZSE9PW4ucmFuay0xKXRocm93IEVycm9yKFwiTG9nIFNvZnRtYXggYWxvbmcgYSBub24tbGFzdCBkaW1lbnNpb24gaXMgbm90IHlldCBzdXBwb3J0ZWQuIExvZ2l0cyB3YXMgcmFuayBcIituLnJhbmsrXCIgYW5kIGF4aXMgd2FzIFwiK2UpO3JldHVybiAkdChmdW5jdGlvbih0KXt2YXIgbj10Lm1heChlLCEwKSxyPXQuc3ViKG4pLGk9ci50b0Zsb2F0KCkuc3ViKHIuZXhwKCkuc3VtKGUsITApLmxvZygpKTtyZXR1cm57dmFsdWU6aSxncmFkRnVuYzpmdW5jdGlvbih0KXt2YXIgbj1pLmV4cCgpO3JldHVybiB0LnN1Yih0LnN1bShlLCEwKS5tdWwobikpfX19KShuKX19KTt2YXIgVGU9QWUoe2NvbXBsZXhfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInJlYWxcIixcImNvbXBsZXhcIikscj1PZShlLFwiaW1hZ1wiLFwiY29tcGxleFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJyZWFsIGFuZCBpbWFnIHNoYXBlcywgXCIrbi5zaGFwZStcIiBhbmQgXCIrci5zaGFwZStcIiwgbXVzdCBtYXRjaCBpbiBjYWxsIHRvIHRmLmNvbXBsZXgoKS5cIiksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb21wbGV4KG4scil9LHskcmVhbDpuLCRpbWFnOnJ9KX19KSxSZT1BZSh7cmVhbF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcImlucHV0XCIsXCJyZWFsXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlYWwoZSl9LHskaW5wdXQ6ZX0pfX0pLERlPUFlKHtpbWFnXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwiaW5wdXRcIixcImltYWdcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuaW1hZyhlKX0seyRpbnB1dDplfSl9fSk7ZnVuY3Rpb24gTWUodCxlLG4pe2lmKG51bGw9PW4mJihuPXEodCkpLFwiY29tcGxleDY0XCI9PT1uKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjb25zdHJ1Y3QgYSBjb21wbGV4NjQgdGVuc29yIGRpcmVjdGx5LiBQbGVhc2UgdXNlIHRmLmNvbXBsZXgocmVhbCwgaW1hZykuXCIpO2lmKCFMKHQpJiYhQXJyYXkuaXNBcnJheSh0KSYmXCJudW1iZXJcIiE9dHlwZW9mIHQmJlwiYm9vbGVhblwiIT10eXBlb2YgdCYmXCJzdHJpbmdcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwidmFsdWVzIHBhc3NlZCB0byB0ZW5zb3IodmFsdWVzKSBtdXN0IGJlIGEgbnVtYmVyL2Jvb2xlYW4vc3RyaW5nIG9yIGFuIGFycmF5IG9mIG51bWJlcnMvYm9vbGVhbnMvc3RyaW5ncywgb3IgYSBUeXBlZEFycmF5XCIpO3ZhciByPU5lKHQpO2lmKG51bGwhPWUpe3ZhciBpPUUoZSksYT1FKHIpO2IoaT09PWEsZnVuY3Rpb24oKXtyZXR1cm5cIkJhc2VkIG9uIHRoZSBwcm92aWRlZCBzaGFwZSwgW1wiK2UrXCJdLCB0aGUgdGVuc29yIHNob3VsZCBoYXZlIFwiK2krXCIgdmFsdWVzIGJ1dCBoYXMgXCIrYX0pO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7KytvKXt2YXIgcz1yW29dLHU9byE9PXIubGVuZ3RoLTF8fHMhPT1FKGUuc2xpY2UobykpO2IocltvXT09PWVbb118fCF1LGZ1bmN0aW9uKCl7cmV0dXJuXCJFcnJvciBjcmVhdGluZyBhIG5ldyBUZW5zb3IuIEluZmVycmVkIHNoYXBlIChcIityK1wiKSBkb2VzIG5vdCBtYXRjaCB0aGUgcHJvdmlkZWQgc2hhcGUgKFwiK2UrXCIpLiBcIn0pfX1yZXR1cm4gTCh0KXx8QXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKSxlPWV8fHIsdD1cInN0cmluZ1wiIT09bj9HKHQsbixMdC5nZXQoXCJERUJVR1wiKSk6eCh0KSxmdC5tYWtlKGUse3ZhbHVlczp0fSxuKX1mdW5jdGlvbiBqZSh0LGUpe2lmKChMKHQpfHxBcnJheS5pc0FycmF5KHQpKSYmXCJjb21wbGV4NjRcIiE9PWUpdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgY3JlYXRpbmcgYSBuZXcgU2NhbGFyOiB2YWx1ZSBtdXN0IGJlIGEgcHJpbWl0aXZlIChudW1iZXJ8Ym9vbGVhbnxzdHJpbmcpXCIpO3JldHVybiBNZSh0LFtdLGUpfWZ1bmN0aW9uIEJlKHQsZSl7Xyh0KTt2YXIgbj1OZSh0KTtpZigxIT09bi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yMWQoKSByZXF1aXJlcyB2YWx1ZXMgdG8gYmUgYSBmbGF0L1R5cGVkQXJyYXlcIik7cmV0dXJuIE1lKHQsbixlKX1mdW5jdGlvbiBMZSh0LGUsbil7aWYoXyh0KSxudWxsIT1lJiYyIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yMmQoKSByZXF1aXJlcyBzaGFwZSB0byBoYXZlIHR3byBudW1iZXJzXCIpO3ZhciByPU5lKHQpO2lmKDIhPT1yLmxlbmd0aCYmMSE9PXIubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInRlbnNvcjJkKCkgcmVxdWlyZXMgdmFsdWVzIHRvIGJlIG51bWJlcltdW10gb3IgZmxhdC9UeXBlZEFycmF5XCIpO2lmKDE9PT1yLmxlbmd0aCYmbnVsbD09ZSl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3IyZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGJlIHByb3ZpZGVkIHdoZW4gYHZhbHVlc2AgYXJlIGEgZmxhdC9UeXBlZEFycmF5XCIpO3JldHVybiBNZSh0LGU9ZXx8cixuKX1mdW5jdGlvbiB6ZSh0LGUsbil7aWYoXyh0KSxudWxsIT1lJiYzIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yM2QoKSByZXF1aXJlcyBzaGFwZSB0byBoYXZlIHRocmVlIG51bWJlcnNcIik7dmFyIHI9TmUodCk7aWYoMyE9PXIubGVuZ3RoJiYxIT09ci5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yM2QoKSByZXF1aXJlcyB2YWx1ZXMgdG8gYmUgbnVtYmVyW11bXVtdIG9yIGZsYXQvVHlwZWRBcnJheVwiKTtpZigxPT09ci5sZW5ndGgmJm51bGw9PWUpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yM2QoKSByZXF1aXJlcyBzaGFwZSB0byBiZSBwcm92aWRlZCB3aGVuIGB2YWx1ZXNgIGFyZSBhIGZsYXQgYXJyYXlcIik7cmV0dXJuIE1lKHQsZT1lfHxyLG4pfWZ1bmN0aW9uIEZlKHQsZSxuKXtpZihfKHQpLG51bGwhPWUmJjQhPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3I0ZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGhhdmUgZm91ciBudW1iZXJzXCIpO3ZhciByPU5lKHQpO2lmKDQhPT1yLmxlbmd0aCYmMSE9PXIubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInRlbnNvcjRkKCkgcmVxdWlyZXMgdmFsdWVzIHRvIGJlIG51bWJlcltdW11bXVtdIG9yIGZsYXQvVHlwZWRBcnJheVwiKTtpZigxPT09ci5sZW5ndGgmJm51bGw9PWUpdGhyb3cgbmV3IEVycm9yKFwidGVuc29yNGQoKSByZXF1aXJlcyBzaGFwZSB0byBiZSBwcm92aWRlZCB3aGVuIGB2YWx1ZXNgIGFyZSBhIGZsYXQgYXJyYXlcIik7cmV0dXJuIE1lKHQsZT1lfHxyLG4pfWZ1bmN0aW9uIFVlKHQsZSxuKXtpZihfKHQpLG51bGwhPWUmJjUhPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3I1ZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGhhdmUgZml2ZSBudW1iZXJzXCIpO3ZhciByPU5lKHQpO2lmKDUhPT1yLmxlbmd0aCYmMSE9PXIubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInRlbnNvcjVkKCkgcmVxdWlyZXMgdmFsdWVzIHRvIGJlIG51bWJlcltdW11bXVtdW10gb3IgZmxhdC9UeXBlZEFycmF5XCIpO2lmKDE9PT1yLmxlbmd0aCYmbnVsbD09ZSl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3I1ZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGJlIHByb3ZpZGVkIHdoZW4gYHZhbHVlc2AgYXJlIGEgZmxhdCBhcnJheVwiKTtyZXR1cm4gTWUodCxlPWV8fHIsbil9ZnVuY3Rpb24gVmUodCxlLG4pe2lmKF8odCksbnVsbCE9ZSYmNiE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInRlbnNvcjZkKCkgcmVxdWlyZXMgc2hhcGUgdG8gaGF2ZSBzaXggbnVtYmVyc1wiKTt2YXIgcj1OZSh0KTtpZig2IT09ci5sZW5ndGgmJjEhPT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3I2ZCgpIHJlcXVpcmVzIHZhbHVlcyB0byBiZSBudW1iZXJbXVtdW11bXVtdW10gb3IgZmxhdC9UeXBlZEFycmF5XCIpO2lmKDE9PT1yLmxlbmd0aCYmbnVsbD09ZSl0aHJvdyBuZXcgRXJyb3IoXCJ0ZW5zb3I2ZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGJlIHByb3ZpZGVkIHdoZW4gYHZhbHVlc2AgYXJlIGEgZmxhdCBhcnJheVwiKTtyZXR1cm4gTWUodCxlPWV8fHIsbil9ZnVuY3Rpb24gV2UodCxlKXtpZih2b2lkIDA9PT1lJiYoZT1cImZsb2F0MzJcIiksXCJjb21wbGV4NjRcIj09PWUpe3ZhciBuPVdlKHQsXCJmbG9hdDMyXCIpLHI9V2UodCxcImZsb2F0MzJcIik7cmV0dXJuIFRlKG4scil9dmFyIGk9WChFKHQpLGUpO3JldHVybiBmdC5tYWtlKHQse3ZhbHVlczppfSxlKX1mdW5jdGlvbiBxZSh0LGUpe2lmKHZvaWQgMD09PWUmJihlPVwiZmxvYXQzMlwiKSxcImNvbXBsZXg2NFwiPT09ZSl7dmFyIG49cWUodCxcImZsb2F0MzJcIikscj1xZSh0LFwiZmxvYXQzMlwiKTtyZXR1cm4gVGUobixyKX12YXIgaT1ZKEUodCksZSk7cmV0dXJuIGZ0Lm1ha2UodCx7dmFsdWVzOml9LGUpfWZ1bmN0aW9uICRlKHQsZSxuKXt2YXIgcj1EKG49bnx8cShlKSxFKHQpKTtyZXR1cm4gci5maWxsKGUpLGZ0Lm1ha2UodCx7dmFsdWVzOnJ9LG4pfWZ1bmN0aW9uIEhlKHQsZSxuKXtpZigwPT09bil0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcmVxdWVzdCB6ZXJvIHNhbXBsZXNcIik7dmFyIHI9KGUtdCkvKG4tMSksaT1ZKG4sXCJmbG9hdDMyXCIpO2lbMF09dDtmb3IodmFyIGE9MTthPGkubGVuZ3RoO2ErKylpW2FdPWlbYS0xXStyO3JldHVybiBCZShpLFwiZmxvYXQzMlwiKX1mdW5jdGlvbiBLZSh0LGUsbixyKXtpZih2b2lkIDA9PT1uJiYobj0xKSx2b2lkIDA9PT1yJiYocj1cImZsb2F0MzJcIiksMD09PW4pdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGhhdmUgYSBzdGVwIG9mIHplcm9cIik7aWYodD09PWV8fHQ8ZSYmbjwwfHxlPHQmJm4+MSlyZXR1cm4gcWUoWzBdLHIpO3ZhciBpPVkoTWF0aC5hYnMoTWF0aC5jZWlsKChlLXQpL24pKSxyKTtlPHQmJjE9PT1uJiYobj0tMSksaVswXT10O2Zvcih2YXIgYT0xO2E8aS5sZW5ndGg7YSsrKWlbYV09aVthLTFdK247cmV0dXJuIEJlKGkscil9dmFyIEdlPUFlKHtvbmVzTGlrZV86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcIm9uZXNMaWtlXCIpO3JldHVybiBXZShlLnNoYXBlLGUuZHR5cGUpfX0pLFhlPUFlKHt6ZXJvc0xpa2VfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJ6ZXJvc0xpa2VcIik7cmV0dXJuIHFlKGUuc2hhcGUsZS5kdHlwZSl9fSksWWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuZGF0YU1vdmVyPXQsdGhpcy5kYXRhPW5ldyBXZWFrTWFwfXJldHVybiB0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5oYXModCl8fHRoaXMuZGF0YU1vdmVyLm1vdmVEYXRhKHQpLHRoaXMuZGF0YS5nZXQodCl9LHQucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUpe3RoaXMuZGF0YS5zZXQodCxlKX0sdC5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRhdGEuaGFzKHQpfSx0LnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5kZWxldGUodCl9LHR9KCksSmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS50aW1lPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWQuXCIpfSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWQuXCIpfSx0LnByb3RvdHlwZS5yZWFkU3luYz1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkLlwiKX0sdC5wcm90b3R5cGUuZGlzcG9zZURhdGE9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZC5cIil9LHQucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZC5cIil9LHQucHJvdG90eXBlLmZyb21QaXhlbHM9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkLlwiKX0sdC5wcm90b3R5cGUucmVnaXN0ZXI9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWQuXCIpfSx0LnByb3RvdHlwZS5tZW1vcnk9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkLlwiKX0sdC5wcm90b3R5cGUuZmxvYXRQcmVjaXNpb249ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5iYXRjaE1hdE11bD1mdW5jdGlvbih0LGUsbixyKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc3RyaWRlZFNsaWNlPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyx1KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS51bnN0YWNrPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucmV2ZXJzZT1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm5lZz1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hZGROPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnN1YnRyYWN0PWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUubXVsdGlwbHk9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5yZWFsRGl2aWRlPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuZmxvb3JEaXY9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zdW09ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5wcm9kPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUudW5zb3J0ZWRTZWdtZW50U3VtPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hcmdNaW49ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hcmdNYXg9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5lcXVhbD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm5vdEVxdWFsPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUubGVzcz1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmxlc3NFcXVhbD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmdyZWF0ZXI9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5ncmVhdGVyRXF1YWw9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5sb2dpY2FsTm90PWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmxvZ2ljYWxBbmQ9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5sb2dpY2FsT3I9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zZWxlY3Q9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnRvcGs9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm1pbj1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm1pbmltdW09ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5tb2Q9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5tYXg9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5tYXhpbXVtPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuYWxsPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuYW55PWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc3F1YXJlZERpZmZlcmVuY2U9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5jZWlsPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmZsb29yPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnJvdW5kPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnNpZ249ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucG93PWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuZXhwPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmV4cG0xPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmxvZz1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5sb2cxcD1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zcXJ0PWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnJzcXJ0PWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnNxdWFyZT1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5yZWNpcHJvY2FsPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnJlbHU9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucHJlbHU9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5lbHU9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuZWx1RGVyPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc2VsdT1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5pbnQ9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY2xpcD1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmNvbXBsZXhBYnM9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc2lnbW9pZD1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zb2Z0cGx1cz1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zaW49ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY29zPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnRhbj1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hc2luPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmFjb3M9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuYXRhbj1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hdGFuMj1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnNpbmg9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY29zaD1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS50YW5oPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmFzaW5oPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmFjb3NoPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmF0YW5oPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmVyZj1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zdGVwPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY29udjJkPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5jb252MmREZXJJbnB1dD1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY29udjJkRGVyRmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5kZXB0aHdpc2VDb252MkQ9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmRlcHRod2lzZUNvbnYyRERlcklucHV0PWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5kZXB0aHdpc2VDb252MkREZXJGaWx0ZXI9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmNvbnYzZD1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY29udjNkRGVySW5wdXQ9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmNvbnYzZERlckZpbHRlcj1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUubWF4UG9vbD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm1heFBvb2xCYWNrcHJvcD1mdW5jdGlvbih0LGUsbixyKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5hdmdQb29sPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuYXZnUG9vbEJhY2twcm9wPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5yZXNoYXBlPWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuY2FzdD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnRpbGU9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5wYWQ9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnRyYW5zcG9zZT1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmdhdGhlcj1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuZ2F0aGVyTkQ9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zY2F0dGVyTkQ9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmJhdGNoVG9TcGFjZU5EPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5zcGFjZVRvQmF0Y2hORD1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucmVzaXplQmlsaW5lYXI9ZnVuY3Rpb24odCxlLG4scil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucmVzaXplQmlsaW5lYXJCYWNrcHJvcD1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucmVzaXplTmVhcmVzdE5laWdoYm9yPWZ1bmN0aW9uKHQsZSxuLHIpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvckJhY2twcm9wPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5iYXRjaE5vcm1hbGl6YXRpb249ZnVuY3Rpb24odCxlLG4scixpLGEpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uNEQ9ZnVuY3Rpb24odCxlLG4scixpKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5MUk5HcmFkPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm11bHRpbm9taWFsPWZ1bmN0aW9uKHQsZSxuLHIpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLm9uZUhvdD1mdW5jdGlvbih0LGUsbixyKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5jdW1zdW09ZnVuY3Rpb24odCxlLG4scil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUubm9uTWF4U3VwcHJlc3Npb249ZnVuY3Rpb24odCxlLG4scixpKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5mZnQ9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuaWZmdD1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5jb21wbGV4PWZ1bmN0aW9uKHQsZSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUucmVhbD1mdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0LnByb3RvdHlwZS5pbWFnPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmNyb3BBbmRSZXNpemU9ZnVuY3Rpb24odCxlLG4scixpLGEpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmRlcHRoVG9TcGFjZT1mdW5jdGlvbih0LGUsbil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24odCxlLG4pe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLnNwYXJzZVRvRGVuc2U9ZnVuY3Rpb24odCxlLG4scil7dGhyb3cgbmV3IEVycm9yKFwiTm90IHlldCBpbXBsZW1lbnRlZFwiKX0sdC5wcm90b3R5cGUuc2V0RGF0YU1vdmVyPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcIk5vdCB5ZXQgaW1wbGVtZW50ZWRcIil9LHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkXCIpfSx0fSgpO2Z1bmN0aW9uIFplKHQsZSxuKXtpZihcImNvbXBsZXg2NFwiPT09ZSl7aWYoXCJjb21wbGV4NjRcIj09PXQuZHR5cGUpcmV0dXJuIHQuY2xvbmUoKTt2YXIgcj1xZSh0LnNoYXBlKSxpPXQudG9GbG9hdCgpLGE9bi5jb21wbGV4KGkscik7cmV0dXJuIHIuZGlzcG9zZSgpLGkuZGlzcG9zZSgpLGF9aWYoIUIodC5kdHlwZSxlKSlyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHtkYXRhSWQ6dC5kYXRhSWR9LGUpO2lmKFwiY29tcGxleDY0XCI9PT10LmR0eXBlKXt2YXIgbz1uLnJlYWwodCk7cmV0dXJuIGE9by5jYXN0KGUpLG8uZGlzcG9zZSgpLGF9aWYoXCJpbnQzMlwiPT09ZSlyZXR1cm4gbi5pbnQodCk7aWYoXCJib29sXCI9PT1lKXt2YXIgcz1qZSgwLHQuZHR5cGUpO3JldHVybiBhPW4ubm90RXF1YWwodCxzKSxzLmRpc3Bvc2UoKSxhfXRocm93IG5ldyBFcnJvcihcIkVycm9yIGluIENhc3Q6IHVua25vd24gZHR5cGUgYXJndW1lbnQgKFwiK2UrXCIpXCIpfWZ1bmN0aW9uIFFlKHQsZSl7cmV0dXJuIGZ0Lm1ha2UoZSx7ZGF0YUlkOnQuZGF0YUlkfSx0LmR0eXBlKX1mdW5jdGlvbiB0bih0LGUpe2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IG1lcmdlIHJlYWwgYW5kIGltYWcgYXJyYXlzIG9mIGRpZmZlcmVudCBsZW5ndGhzLiByZWFsOlwiK3QubGVuZ3RoK1wiLCBpbWFnOiBcIitlLmxlbmd0aCtcIi5cIik7Zm9yKHZhciBuPW5ldyBGbG9hdDMyQXJyYXkoMip0Lmxlbmd0aCkscj0wO3I8bi5sZW5ndGg7cis9MiluW3JdPXRbci8yXSxuW3IrMV09ZVtyLzJdO3JldHVybiBufWZ1bmN0aW9uIGVuKHQsZSl7cmV0dXJue3JlYWw6dFsyKmVdLGltYWc6dFsyKmUrMV19fWZ1bmN0aW9uIG5uKHQsZSxuLHIpe3RbMipyXT1lLHRbMipyKzFdPW59ZnVuY3Rpb24gcm4odCxlLG4pe3ZhciByPShuPzI6LTIpKk1hdGguUEkqKHQvZSk7cmV0dXJue3JlYWw6TWF0aC5jb3MociksaW1hZzpNYXRoLnNpbihyKX19ZnVuY3Rpb24gYW4odCxlLG4scixpKXtmb3IodmFyIGE9QXJyYXkuZnJvbShlKS5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm57c2NvcmU6dCxib3hJbmRleDplfX0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5zY29yZT5pfSkuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBlLnNjb3JlLXQuc2NvcmV9KSxvPVtdLHM9MDtzPGEubGVuZ3RoO3MrKyl7dmFyIHU9YVtzXSxjPXUuc2NvcmUsbD11LmJveEluZGV4O2lmKGM8aSlicmVhaztmb3IodmFyIGY9ITEsaD1vLmxlbmd0aC0xO2g+PTA7LS1oKWlmKG9uKHQsbCxvW2hdKT49cil7Zj0hMDticmVha31pZighZiYmKG8ucHVzaChsKSxvLmxlbmd0aD49bikpYnJlYWt9cmV0dXJuIEJlKG8sXCJpbnQzMlwiKX1mdW5jdGlvbiBvbih0LGUsbil7dmFyIHI9dC5zdWJhcnJheSg0KmUsNCplKzQpLGk9dC5zdWJhcnJheSg0Km4sNCpuKzQpLGE9TWF0aC5taW4oclswXSxyWzJdKSxvPU1hdGgubWluKHJbMV0sclszXSkscz1NYXRoLm1heChyWzBdLHJbMl0pLHU9TWF0aC5tYXgoclsxXSxyWzNdKSxjPU1hdGgubWluKGlbMF0saVsyXSksbD1NYXRoLm1pbihpWzFdLGlbM10pLGY9TWF0aC5tYXgoaVswXSxpWzJdKSxoPU1hdGgubWF4KGlbMV0saVszXSkscD0ocy1hKSoodS1vKSxkPShmLWMpKihoLWwpO2lmKHA8PTB8fGQ8PTApcmV0dXJuIDA7dmFyIG09TWF0aC5tYXgoYSxjKSxnPU1hdGgubWF4KG8sbCkseT1NYXRoLm1pbihzLGYpLHY9TWF0aC5taW4odSxoKSxiPU1hdGgubWF4KHktbSwwKSpNYXRoLm1heCh2LWcsMCk7cmV0dXJuIGIvKHArZC1iKX1mdW5jdGlvbiBzbih0LGUsbil7dmFyIHI9bmV3IEFycmF5KHQucmFuaykuZmlsbCgwKSxpPXQuc2hhcGUuc2xpY2UoKTtyZXR1cm4gZS5tYXAoZnVuY3Rpb24oZSl7aVtuXT1lO3ZhciBhPXQuc2xpY2UocixpKTtyZXR1cm4gcltuXSs9ZSxhfSl9ZnVuY3Rpb24gdW4odCxlLG4scixpKXtmb3IodmFyIGE9ZVtlLmxlbmd0aC0xXSxvPVt0Lmxlbmd0aC9hLGFdLHM9b1swXSx1PW9bMV0sYz1SKG4scypyKSxsPVIoXCJpbnQzMlwiLHMqciksZj0wO2Y8cztmKyspe2Zvcih2YXIgaD1mKnUscD10LnN1YmFycmF5KGgsaCt1KSxkPVtdLG09MDttPHAubGVuZ3RoO20rKylkLnB1c2goe3ZhbHVlOnBbbV0saW5kZXg6bX0pO2Quc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBlLnZhbHVlLXQudmFsdWV9KTt2YXIgZz1mKnIseT1jLnN1YmFycmF5KGcsZytyKSx2PWwuc3ViYXJyYXkoZyxnK3IpO2ZvcihtPTA7bTxyO20rKyl5W21dPWRbbV0udmFsdWUsdlttXT1kW21dLmluZGV4fXZhciBiPWUuc2xpY2UoKTtyZXR1cm4gYltiLmxlbmd0aC0xXT1yLFtNZShjLGIsbiksTWUobCxiLFwiaW50MzJcIildfXZhciBjbj1mdW5jdGlvbih0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIl07dmFyIHI9dC53aW5kb3dTaXplLGk9dC5iYXRjaFNpemUsYT10LmluU2l6ZSxvPU1hdGguY2VpbChhL3IpO258fHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKFwiYmVzdEluZGljZXNBXCIpLHRoaXMub3V0cHV0U2hhcGU9W2ksb107dmFyIHM9XCJtYXhcIj09PWU/XCI+XCI6XCI8XCIsdT1uP1wiaW5PZmZzZXQgKyBpO1wiOlwicm91bmQoZ2V0QmVzdEluZGljZXNBKGJhdGNoLCBpbk9mZnNldCArIGkpKTtcIjt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgb3V0SWR4ID0gY29vcmRzWzFdO1xcbiAgICAgICAgaW50IGluT2Zmc2V0ID0gb3V0SWR4ICogXCIrcitcIjtcXG5cXG4gICAgICAgIGludCBiZXN0SW5kZXggPSBpbk9mZnNldDtcXG4gICAgICAgIGZsb2F0IGJlc3RWYWx1ZSA9IGdldEEoYmF0Y2gsIGJlc3RJbmRleCk7XFxuXFxuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IFwiK3IrXCI7IGkrKykge1xcbiAgICAgICAgICBpbnQgaW5JZHggPSBcIit1K1wiO1xcbiAgICAgICAgICBmbG9hdCBjYW5kaWRhdGUgPSBnZXRBKGJhdGNoLCBpbklkeCk7XFxuICAgICAgICAgIGlmIChjYW5kaWRhdGUgXCIrcytcIiBiZXN0VmFsdWUpIHtcXG4gICAgICAgICAgICBiZXN0VmFsdWUgPSBjYW5kaWRhdGU7XFxuICAgICAgICAgICAgYmVzdEluZGV4ID0gaW5JZHg7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChmbG9hdChiZXN0SW5kZXgpKTtcXG4gICAgICB9XFxuICAgIFwifSxsbj1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiZHlcIl0sdGhpcy5vdXRwdXRTaGFwZT10LmluU2hhcGU7dmFyIGU9dC5maWx0ZXJIZWlnaHQsbj10LmZpbHRlcldpZHRoLHI9dC5zdHJpZGVIZWlnaHQsaT10LnN0cmlkZVdpZHRoLGE9dC5kaWxhdGlvbkhlaWdodCxvPXQuZGlsYXRpb25XaWR0aCxzPXQuZWZmZWN0aXZlRmlsdGVySGVpZ2h0LHU9dC5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxjPXMtMS10LnBhZEluZm8udG9wLGw9dS0xLXQucGFkSW5mby5sZWZ0LGY9MS8oZSpuKTt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiK2MrXCIsIFwiK2wrXCIpO1xcbiAgICAgIGNvbnN0IGZsb2F0IGF2Z011bHRpcGxpZXIgPSBmbG9hdChcIitmK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiBkeVJDQ29ybmVyID0gY29vcmRzLnl6IC0gcGFkcztcXG4gICAgICAgIGludCBkeVJDb3JuZXIgPSBkeVJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlSQ0Nvcm5lci55O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgZHkoPywgPywgZCkgd2l0aCBwb3MgbWFzayg6LCA6LCBkKSB0byBnZXQgZHgoeFIsIHhDLCBkKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IHdSID0gMDsgd1IgPCBcIitzK1wiO1xcbiAgICAgICAgICAgIHdSICs9IFwiK2ErXCIpIHtcXG4gICAgICAgICAgZmxvYXQgZHlSID0gZmxvYXQoZHlSQ29ybmVyICsgd1IpIC8gXCIrcitcIi4wO1xcblxcbiAgICAgICAgICBpZiAoZHlSIDwgMC4wIHx8IGR5UiA+PSBcIit0Lm91dEhlaWdodCtcIi4wIHx8IGZyYWN0KGR5UikgPiAwLjApIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBpbnQgaWR5UiA9IGludChkeVIpO1xcblxcbiAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIrdStcIjtcXG4gICAgICAgICAgICB3Qys9IFwiK28rXCIpIHtcXG4gICAgICAgICAgICBmbG9hdCBkeUMgPSBmbG9hdChkeUNDb3JuZXIgKyB3QykgLyBcIitpK1wiLjA7XFxuXFxuICAgICAgICAgICAgaWYgKGR5QyA8IDAuMCB8fCBkeUMgPj0gXCIrdC5vdXRXaWR0aCtcIi4wIHx8XFxuICAgICAgICAgICAgICAgIGZyYWN0KGR5QykgPiAwLjApIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBpbnQgaWR5QyA9IGludChkeUMpO1xcblxcbiAgICAgICAgICAgIGZsb2F0IGR5VmFsdWUgPSBnZXREeShiLCBpZHlSLCBpZHlDLCBkKTtcXG5cXG4gICAgICAgICAgICBkb3RQcm9kICs9IGR5VmFsdWUgKiBhdmdNdWx0aXBsaWVyO1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoZG90UHJvZCk7XFxuICAgICAgfVxcbiAgICBcIn0sZm49ZnVuY3Rpb24odCxlLG4scixpLGEpe3RoaXMub3V0cHV0U2hhcGU9W10sdGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIixcIm1lYW5cIixcInZhcmlhbmNlXCJdLHBlKHQsZSkscGUodCxuKTt2YXIgbz1cIjAuMFwiO251bGwhPXImJihwZSh0LHIpLHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKFwib2Zmc2V0XCIpLG89XCJnZXRPZmZzZXRBdE91dENvb3JkcygpXCIpO3ZhciBzPVwiMS4wXCI7bnVsbCE9aSYmKHBlKHQsaSksdGhpcy52YXJpYWJsZU5hbWVzLnB1c2goXCJzY2FsZVwiKSxzPVwiZ2V0U2NhbGVBdE91dENvb3JkcygpXCIpLHRoaXMub3V0cHV0U2hhcGU9dCx0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgZmxvYXQgeCA9IGdldFhBdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgbWVhbiA9IGdldE1lYW5BdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgdmFyaWFuY2UgPSBnZXRWYXJpYW5jZUF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCBvZmZzZXQgPSBcIitvK1wiO1xcbiAgICAgICAgZmxvYXQgc2NhbGUgPSBcIitzK1wiO1xcbiAgICAgICAgZmxvYXQgaW52ID0gc2NhbGUgKiBpbnZlcnNlc3FydCh2YXJpYW5jZSArIGZsb2F0KFwiK2ErXCIpKTtcXG4gICAgICAgIHNldE91dHB1dChkb3QodmVjMyh4LCAtbWVhbiwgb2Zmc2V0KSwgdmVjMyhpbnYsIGludiwgMSkpKTtcXG4gICAgICB9XFxuICAgIFwifSxobj1mdW5jdGlvbih0LGUsbixyLGksYSl7dGhpcy51c2VzUGFja2VkVGV4dHVyZXM9ITAsdGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIixcIm1lYW5cIixcInZhcmlhbmNlXCJdLHBlKHQsZSkscGUodCxuKTt2YXIgbz1cInZlYzQoMC4wKVwiO251bGwhPXImJihwZSh0LHIpLHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKFwib2Zmc2V0XCIpLG89XCJnZXRPZmZzZXRBdE91dENvb3JkcygpXCIpO3ZhciBzPVwidmVjNCgxLjApXCI7bnVsbCE9aSYmKHBlKHQsaSksdGhpcy52YXJpYWJsZU5hbWVzLnB1c2goXCJzY2FsZVwiKSxzPVwiZ2V0U2NhbGVBdE91dENvb3JkcygpXCIpLHRoaXMub3V0cHV0U2hhcGU9dCx0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgdmVjNCBvZmZzZXQgPSBcIitvK1wiO1xcbiAgICAgICAgdmVjNCBzY2FsZSA9IFwiK3MrXCI7XFxuXFxuICAgICAgICB2ZWM0IHggPSBnZXRYQXRPdXRDb29yZHMoKTtcXG4gICAgICAgIHZlYzQgbWVhbiA9IGdldE1lYW5BdE91dENvb3JkcygpO1xcbiAgICAgICAgdmVjNCB2YXJpYW5jZSA9IGdldFZhcmlhbmNlQXRPdXRDb29yZHMoKTtcXG5cXG4gICAgICAgIHZlYzQgaW52ID0gc2NhbGUgKiBpbnZlcnNlc3FydCh2YXJpYW5jZSArIHZlYzQoXCIrYStcIikpO1xcblxcbiAgICAgICAgc2V0T3V0cHV0KCh4IC0gbWVhbikgKiBpbnYgKyBvZmZzZXQpO1xcbiAgICAgIH1cXG4gICAgXCJ9LHBuPVwicmV0dXJuIGFyZWFsICogYnJlYWwgLSBhaW1hZyAqIGJpbWFnO1wiLGRuPVwicmV0dXJuIGFyZWFsICogYmltYWcgKyBhaW1hZyAqIGJyZWFsO1wiLG1uPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVJlYWxcIixcIkFJbWFnXCIsXCJCUmVhbFwiLFwiQkltYWdcIl0sdGhpcy5vdXRwdXRTaGFwZT1wZShlLG4pLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICBmbG9hdCBiaW5hcnlPcENvbXBsZXgoXFxuICAgICAgICAgIGZsb2F0IGFyZWFsLCBmbG9hdCBhaW1hZywgZmxvYXQgYnJlYWwsIGZsb2F0IGJpbWFnKSB7XFxuICAgICAgICBcIit0K1wiXFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGZsb2F0IGFyZWFsID0gZ2V0QVJlYWxBdE91dENvb3JkcygpO1xcbiAgICAgICAgZmxvYXQgYWltYWcgPSBnZXRBSW1hZ0F0T3V0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCBicmVhbCA9IGdldEJSZWFsQXRPdXRDb29yZHMoKTtcXG4gICAgICAgIGZsb2F0IGJpbWFnID0gZ2V0QkltYWdBdE91dENvb3JkcygpO1xcbiAgICAgICAgc2V0T3V0cHV0KGJpbmFyeU9wQ29tcGxleChhcmVhbCwgYWltYWcsIGJyZWFsLCBiaW1hZykpO1xcbiAgICAgIH1cXG4gICAgXCJ9LGduPVwicmV0dXJuIGEgKyBiO1wiLHluPVwicmV0dXJuIGEgLSBiO1wiLHZuPVwicmV0dXJuIGEgKiBiO1wiLGJuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIixcIkJcIl0sdGhpcy5vdXRwdXRTaGFwZT1wZShlLG4pLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB1bmlmb3JtIGZsb2F0IE5BTjtcXG4gICAgICBmbG9hdCBiaW5hcnlPcGVyYXRpb24oZmxvYXQgYSwgZmxvYXQgYikge1xcbiAgICAgICAgXCIrdCtcIlxcbiAgICAgIH1cXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBmbG9hdCBhID0gZ2V0QUF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCBiID0gZ2V0QkF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBzZXRPdXRwdXQoYmluYXJ5T3BlcmF0aW9uKGEsIGIpKTtcXG4gICAgICB9XFxuICAgIFwifXJldHVybiB0LnByb3RvdHlwZS5nZXRDdXN0b21TZXR1cEZ1bmM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBmdW5jdGlvbihlLG4pe251bGw9PXQuc3RhcnRMb2MmJih0LnN0YXJ0TG9jPWUuZ2V0VW5pZm9ybUxvY2F0aW9uTm9UaHJvdyhuLFwiTkFOXCIpLG51bGw9PXQuc3RhcnRMb2MpfHxlLmdsLnVuaWZvcm0xZih0LnN0YXJ0TG9jLE5hTil9fSx0fSgpLHduPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIixcIkJcIl0sdGhpcy5zdXBwb3J0c0Jyb2FkY2FzdGluZz0hMCx0aGlzLnVzZXNQYWNrZWRUZXh0dXJlcz0hMCx0aGlzLm91dHB1dFNoYXBlPXBlKGUsbiksdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHVuaWZvcm0gZmxvYXQgTkFOO1xcbiAgICAgIHZlYzQgYmluYXJ5T3BlcmF0aW9uKHZlYzQgYSwgdmVjNCBiKSB7XFxuICAgICAgICBcIit0K1wiXFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIHZlYzQgYSA9IGdldEFBdE91dENvb3JkcygpO1xcbiAgICAgICAgdmVjNCBiID0gZ2V0QkF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBzZXRPdXRwdXQoYmluYXJ5T3BlcmF0aW9uKGEsIGIpKTtcXG4gICAgICB9XFxuICAgIFwifXJldHVybiB0LnByb3RvdHlwZS5nZXRDdXN0b21TZXR1cEZ1bmM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBmdW5jdGlvbihlLG4pe251bGw9PXQuc3RhcnRMb2MmJih0LnN0YXJ0TG9jPWUuZ2V0VW5pZm9ybUxvY2F0aW9uTm9UaHJvdyhuLFwiTkFOXCIpLG51bGw9PXQuc3RhcnRMb2MpfHxlLmdsLnVuaWZvcm0xZih0LnN0YXJ0TG9jLE5hTil9fSx0fSgpLF9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVwiXSx0aGlzLm91dHB1dFNoYXBlPXQsdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHVuaWZvcm0gZmxvYXQgbWluO1xcbiAgICAgIHVuaWZvcm0gZmxvYXQgbWF4O1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGZsb2F0IHZhbHVlID0gZ2V0QUF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBpZiAoaXNOYU4odmFsdWUpKSB7XFxuICAgICAgICAgIHNldE91dHB1dCh2YWx1ZSk7XFxuICAgICAgICAgIHJldHVybjtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHNldE91dHB1dChjbGFtcCh2YWx1ZSwgbWluLCBtYXgpKTtcXG4gICAgICB9XFxuICAgIFwifXJldHVybiB0LnByb3RvdHlwZS5nZXRDdXN0b21TZXR1cEZ1bmM9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBmdW5jdGlvbihyLGkpe251bGw9PW4ubWluTG9jJiYobi5taW5Mb2M9ci5nZXRVbmlmb3JtTG9jYXRpb25Ob1Rocm93KGksXCJtaW5cIiksbi5tYXhMb2M9ci5nZXRVbmlmb3JtTG9jYXRpb25Ob1Rocm93KGksXCJtYXhcIikpLHIuZ2wudW5pZm9ybTFmKG4ubWluTG9jLHQpLHIuZ2wudW5pZm9ybTFmKG4ubWF4TG9jLGUpfX0sdH0oKSx4bj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIl0sdGhpcy51c2VzUGFja2VkVGV4dHVyZXM9ITAsdGhpcy5vdXRwdXRTaGFwZT10LHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB1bmlmb3JtIGZsb2F0IG1pbjtcXG4gICAgICB1bmlmb3JtIGZsb2F0IG1heDtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICB2ZWM0IHZhbHVlID0gZ2V0QUF0T3V0Q29vcmRzKCk7XFxuXFxuICAgICAgICBpZiAoaGFzTmFOKHZhbHVlKSkge1xcbiAgICAgICAgICBzZXRPdXRwdXQodmFsdWUpO1xcbiAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuXFxuICAgICAgICBzZXRPdXRwdXQoY2xhbXAodmFsdWUsIHZlYzQobWluKSwgdmVjNChtYXgpKSk7XFxuICAgICAgfVxcbiAgICBcIn1yZXR1cm4gdC5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gZnVuY3Rpb24ocixpKXtudWxsPT1uLm1pbkxvYyYmKG4ubWluTG9jPXIuZ2V0VW5pZm9ybUxvY2F0aW9uTm9UaHJvdyhpLFwibWluXCIpLG4ubWF4TG9jPXIuZ2V0VW5pZm9ybUxvY2F0aW9uTm9UaHJvdyhpLFwibWF4XCIpKSxyLmdsLnVuaWZvcm0xZihuLm1pbkxvYyx0KSxyLmdsLnVuaWZvcm0xZihuLm1heExvYyxlKX19LHR9KCksRW49ZnVuY3Rpb24odCl7dGhpcy52YXJpYWJsZU5hbWVzPVtcInJlYWxcIixcImltYWdcIl0sdGhpcy5vdXRwdXRTaGFwZT10LHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBmbG9hdCByZSA9IGFicyhnZXRSZWFsQXRPdXRDb29yZHMoKSk7XFxuICAgICAgICBmbG9hdCBpbSA9IGFicyhnZXRJbWFnQXRPdXRDb29yZHMoKSk7XFxuICAgICAgICBmbG9hdCBteCA9IG1heChyZSwgaW0pO1xcblxcbiAgICAgICAgLy8gc2FkbHkgdGhlIGxlbmd0aCBmdW5jdGlvbiBpbiBnbHNsIGlzIG5vdCB1bmRlcmZsb3ctc2FmZVxcbiAgICAgICAgLy8gKGF0IGxlYXN0IG5vdCBvbiBJbnRlbCBHUFVzKS4gU28gdGhlIHNhZmUgc29sdXRpb24gaXNcXG4gICAgICAgIC8vIHRvIGVuc3VyZSB1bmRlcmZsb3ctc2FmZXR5IGluIGFsbCBjYXNlcy5cXG4gICAgICAgIHNldE91dHB1dChcXG4gICAgICAgICAgbXggPT0gMC4wID8gMC4wIDogbXggKiBsZW5ndGgodmVjMigxLCBtaW4ocmUsIGltKS9teCkpXFxuICAgICAgICApO1xcbiAgICAgIH1cXG4gICAgXCJ9LFNuPWZ1bmN0aW9uKHQpe3RoaXMub3V0cHV0U2hhcGU9W10sdGhpcy5vdXRwdXRTaGFwZT1kZSh0LDEpLHRoaXMudmFyaWFibGVOYW1lcz10Lm1hcChmdW5jdGlvbih0LGUpe3JldHVyblwiVFwiK2V9KTt2YXIgZT1uZXcgQXJyYXkodC5sZW5ndGgtMSk7ZVswXT10WzBdWzFdO2Zvcih2YXIgbj0xO248ZS5sZW5ndGg7bisrKWVbbl09ZVtuLTFdK3Rbbl1bMV07dmFyIHI9W1wiaWYgKHlDIDwgXCIrZVswXStcIikgc2V0T3V0cHV0KGdldFQwKHlSLCB5QykpO1wiXTtmb3Iobj0xO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW24tMV07ci5wdXNoKFwiZWxzZSBpZiAoeUMgPCBcIitlW25dK1wiKSBzZXRPdXRwdXQoZ2V0VFwiK24rXCIoeVIsIHlDLVwiK2krXCIpKTtcIil9dmFyIGE9ZS5sZW5ndGgsbz1lW2UubGVuZ3RoLTFdO3IucHVzaChcImVsc2Ugc2V0T3V0cHV0KGdldFRcIithK1wiKHlSLCB5Qy1cIitvK1wiKSk7XCIpLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjMiBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCB5UiA9IGNvb3Jkcy54O1xcbiAgICAgICAgaW50IHlDID0gY29vcmRzLnk7XFxuXFxuICAgICAgICBcIityLmpvaW4oXCJcXG4gICAgICAgIFwiKStcIlxcbiAgICAgIH1cXG4gICAgXCJ9LE5uPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCIsXCJkeVwiXSx0aGlzLm91dHB1dFNoYXBlPXQuZmlsdGVyU2hhcGU7dmFyIGU9dC5zdHJpZGVIZWlnaHQsbj10LnN0cmlkZVdpZHRoLHI9dC5wYWRJbmZvLnRvcCxpPXQucGFkSW5mby5sZWZ0O3RoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCB3UiA9IGNvb3Jkcy54O1xcbiAgICAgICAgaW50IHdDID0gY29vcmRzLnk7XFxuICAgICAgICBpbnQgZDEgPSBjb29yZHMuejtcXG4gICAgICAgIGludCBkMiA9IGNvb3Jkcy53O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgeCg/LCA/LCBkMSkgd2l0aCBkeSg6LCA6LCBkMikgdG8gZ2V0IGR3KHdSLCB3QywgZDEsIGQyKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG5cXG4gICAgICAgIGZvciAoaW50IGIgPSAwOyBiIDwgXCIrdC5iYXRjaFNpemUrXCI7IGIrKykge1xcbiAgICAgICAgICBmb3IgKGludCB5UiA9IDA7IHlSIDwgXCIrdC5vdXRIZWlnaHQrXCI7IHlSKyspIHtcXG4gICAgICAgICAgICBpbnQgeFIgPSB3UiArIHlSICogXCIrZStcIiAtIFwiK3IrXCI7XFxuXFxuICAgICAgICAgICAgaWYgKHhSIDwgMCB8fCB4UiA+PSBcIit0LmluSGVpZ2h0K1wiKSB7XFxuICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgZm9yIChpbnQgeUMgPSAwOyB5QyA8IFwiK3Qub3V0V2lkdGgrXCI7IHlDKyspIHtcXG4gICAgICAgICAgICAgIGludCB4QyA9IHdDICsgeUMgKiBcIituK1wiIC0gXCIraStcIjtcXG5cXG4gICAgICAgICAgICAgIGlmICh4QyA8IDAgfHwgeEMgPj0gXCIrdC5pbldpZHRoK1wiKSB7XFxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgZmxvYXQgZHlWYWx1ZSA9IGdldER5KGIsIHlSLCB5QywgZDIpO1xcbiAgICAgICAgICAgICAgZmxvYXQgeFZhbHVlID0gZ2V0WChiLCB4UiwgeEMsIGQxKTtcXG4gICAgICAgICAgICAgIGRvdFByb2QgKz0gKHhWYWx1ZSAqIGR5VmFsdWUpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRvdFByb2QpO1xcbiAgICAgIH1cXG4gICAgXCJ9LEluPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJkeVwiLFwiV1wiXSx0aGlzLm91dHB1dFNoYXBlPXQuaW5TaGFwZTt2YXIgZT10LmZpbHRlckhlaWdodCxuPXQuZmlsdGVyV2lkdGgscj10LnN0cmlkZUhlaWdodCxpPXQuc3RyaWRlV2lkdGgsYT1lLTEtdC5wYWRJbmZvLnRvcCxvPW4tMS10LnBhZEluZm8ubGVmdDt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiK2ErXCIsIFwiK28rXCIpO1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQxID0gY29vcmRzWzNdO1xcblxcbiAgICAgICAgaXZlYzIgZHlDb3JuZXIgPSBjb29yZHMueXogLSBwYWRzO1xcbiAgICAgICAgaW50IGR5UkNvcm5lciA9IGR5Q29ybmVyLng7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlDb3JuZXIueTtcXG5cXG4gICAgICAgIC8vIENvbnZvbHZlIGR5KD8sID8sIGQyKSB3aXRoIHcoOiwgOiwgZDEsIGQyKSB0byBjb21wdXRlIGR4KHhSLCB4QywgZDEpLlxcbiAgICAgICAgLy8gPyA9IHRvIGJlIGRldGVybWluZWQuIDogPSBhY3Jvc3MgYWxsIHZhbHVlcyBpbiB0aGF0IGF4aXMuXFxuICAgICAgICBmbG9hdCBkb3RQcm9kID0gMC4wO1xcbiAgICAgICAgZm9yIChpbnQgd1IgPSAwOyB3UiA8IFwiK2UrXCI7IHdSKyspIHtcXG4gICAgICAgICAgZmxvYXQgZHlSID0gZmxvYXQoZHlSQ29ybmVyICsgd1IpIC8gXCIrcitcIi4wO1xcblxcbiAgICAgICAgICBpZiAoZHlSIDwgMC4wIHx8IGR5UiA+PSBcIit0Lm91dEhlaWdodCtcIi4wIHx8IGZyYWN0KGR5UikgPiAwLjApIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBpbnQgaWR5UiA9IGludChkeVIpO1xcblxcbiAgICAgICAgICBpbnQgd1JQZXJtID0gXCIrZStcIiAtIDEgLSB3UjtcXG5cXG4gICAgICAgICAgZm9yIChpbnQgd0MgPSAwOyB3QyA8IFwiK24rXCI7IHdDKyspIHtcXG4gICAgICAgICAgICBmbG9hdCBkeUMgPSBmbG9hdChkeUNDb3JuZXIgKyB3QykgLyBcIitpK1wiLjA7XFxuXFxuICAgICAgICAgICAgaWYgKGR5QyA8IDAuMCB8fCBkeUMgPj0gXCIrdC5vdXRXaWR0aCtcIi4wIHx8XFxuICAgICAgICAgICAgICAgIGZyYWN0KGR5QykgPiAwLjApIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBpbnQgaWR5QyA9IGludChkeUMpO1xcblxcbiAgICAgICAgICAgIGludCB3Q1Blcm0gPSBcIituK1wiIC0gMSAtIHdDO1xcblxcbiAgICAgICAgICAgIGZvciAoaW50IGQyID0gMDsgZDIgPCBcIit0Lm91dENoYW5uZWxzK1wiOyBkMisrKSB7XFxuICAgICAgICAgICAgICBmbG9hdCB4VmFsdWUgPSBnZXREeShiYXRjaCwgaWR5UiwgaWR5QywgZDIpO1xcbiAgICAgICAgICAgICAgZmxvYXQgd1ZhbHVlID0gZ2V0Vyh3UlBlcm0sIHdDUGVybSwgZDEsIGQyKTtcXG4gICAgICAgICAgICAgIGRvdFByb2QgKz0geFZhbHVlICogd1ZhbHVlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRvdFByb2QpO1xcbiAgICAgIH1cXG4gICAgXCJ9LE9uPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCIsXCJkeVwiXSx0aGlzLm91dHB1dFNoYXBlPXQuZmlsdGVyU2hhcGU7dmFyIGU9dC5zdHJpZGVEZXB0aCxuPXQuc3RyaWRlSGVpZ2h0LHI9dC5zdHJpZGVXaWR0aCxpPXQucGFkSW5mby5mcm9udCxhPXQucGFkSW5mby50b3Asbz10LnBhZEluZm8ubGVmdDt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzUgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgd0YgPSBjb29yZHMueDtcXG4gICAgICAgIGludCB3UiA9IGNvb3Jkcy55O1xcbiAgICAgICAgaW50IHdDID0gY29vcmRzLno7XFxuICAgICAgICBpbnQgZDEgPSBjb29yZHMudztcXG4gICAgICAgIGludCBkMiA9IGNvb3Jkcy51O1xcblxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG5cXG4gICAgICAgIGZvciAoaW50IGIgPSAwOyBiIDwgXCIrdC5iYXRjaFNpemUrXCI7IGIrKykge1xcbiAgICAgICAgICBmb3IgKGludCB5RiA9IDA7IHlGIDwgXCIrdC5vdXREZXB0aCtcIjsgeUYrKykge1xcbiAgICAgICAgICAgIGludCB4RiA9IHdGICsgeUYgKiBcIitlK1wiIC0gXCIraStcIjtcXG5cXG4gICAgICAgICAgICBpZiAoeEYgPCAwIHx8IHhGID49IFwiK3QuaW5EZXB0aCtcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZvciAoaW50IHlSID0gMDsgeVIgPCBcIit0Lm91dEhlaWdodCtcIjsgeVIrKykge1xcbiAgICAgICAgICAgICAgaW50IHhSID0gd1IgKyB5UiAqIFwiK24rXCIgLSBcIithK1wiO1xcblxcbiAgICAgICAgICAgICAgaWYgKHhSIDwgMCB8fCB4UiA+PSBcIit0LmluSGVpZ2h0K1wiKSB7XFxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgZm9yIChpbnQgeUMgPSAwOyB5QyA8IFwiK3Qub3V0V2lkdGgrXCI7IHlDKyspIHtcXG4gICAgICAgICAgICAgICAgaW50IHhDID0gd0MgKyB5QyAqIFwiK3IrXCIgLSBcIitvK1wiO1xcblxcbiAgICAgICAgICAgICAgICBpZiAoeEMgPCAwIHx8IHhDID49IFwiK3QuaW5XaWR0aCtcIikge1xcbiAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgIGZsb2F0IGR5VmFsdWUgPSBnZXREeShiLCB5RiwgeVIsIHlDLCBkMik7XFxuICAgICAgICAgICAgICAgIGZsb2F0IHhWYWx1ZSA9IGdldFgoYiwgeEYsIHhSLCB4QywgZDEpO1xcbiAgICAgICAgICAgICAgICBkb3RQcm9kICs9ICh4VmFsdWUgKiBkeVZhbHVlKTtcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwifSxrbj1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiZHlcIixcIldcIl0sdGhpcy5vdXRwdXRTaGFwZT10LmluU2hhcGU7dmFyIGU9dC5maWx0ZXJEZXB0aCxuPXQuZmlsdGVySGVpZ2h0LHI9dC5maWx0ZXJXaWR0aCxpPXQuc3RyaWRlRGVwdGgsYT10LnN0cmlkZUhlaWdodCxvPXQuc3RyaWRlV2lkdGgscz1lLTEtdC5wYWRJbmZvLmZyb250LHU9bi0xLXQucGFkSW5mby50b3AsYz1yLTEtdC5wYWRJbmZvLmxlZnQ7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGNvbnN0IGl2ZWMzIHBhZHMgPSBpdmVjMyhcIitzK1wiLCBcIit1K1wiLCBcIitjK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNSBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiYXRjaCA9IGNvb3Jkcy54O1xcbiAgICAgICAgaW50IGQxID0gY29vcmRzLnU7XFxuXFxuXFxuICAgICAgICBpdmVjMyBkeUNvcm5lciA9IGl2ZWMzKGNvb3Jkcy55LCBjb29yZHMueiwgY29vcmRzLncpIC0gcGFkcztcXG4gICAgICAgIGludCBkeUZDb3JuZXIgPSBkeUNvcm5lci54O1xcbiAgICAgICAgaW50IGR5UkNvcm5lciA9IGR5Q29ybmVyLnk7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlDb3JuZXIuejtcXG5cXG4gICAgICAgIGZsb2F0IGRvdFByb2QgPSAwLjA7XFxuICAgICAgICBmb3IgKGludCB3RiA9IDA7IHdGIDwgXCIrZStcIjsgd0YrKykge1xcbiAgICAgICAgICBmbG9hdCBkeUYgPSBmbG9hdChkeUZDb3JuZXIgKyB3RikgLyBcIitpK1wiLjA7XFxuXFxuICAgICAgICAgIGlmIChkeUYgPCAwLjAgfHwgZHlGID49IFwiK3Qub3V0RGVwdGgrXCIuMCB8fCBmcmFjdChkeUYpID4gMC4wKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgaW50IGlkeUYgPSBpbnQoZHlGKTtcXG5cXG4gICAgICAgICAgaW50IHdGUGVybSA9IFwiK2UrXCIgLSAxIC0gd0Y7XFxuXFxuICAgICAgICAgIGZvciAoaW50IHdSID0gMDsgd1IgPCBcIituK1wiOyB3UisrKSB7XFxuICAgICAgICAgICAgZmxvYXQgZHlSID0gZmxvYXQoZHlSQ29ybmVyICsgd1IpIC8gXCIrYStcIi4wO1xcblxcbiAgICAgICAgICAgIGlmIChkeVIgPCAwLjAgfHwgZHlSID49IFwiK3Qub3V0SGVpZ2h0K1wiLjAgfHxcXG4gICAgICAgICAgICAgIGZyYWN0KGR5UikgPiAwLjApIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBpbnQgaWR5UiA9IGludChkeVIpO1xcblxcbiAgICAgICAgICAgIGludCB3UlBlcm0gPSBcIituK1wiIC0gMSAtIHdSO1xcblxcbiAgICAgICAgICAgIGZvciAoaW50IHdDID0gMDsgd0MgPCBcIityK1wiOyB3QysrKSB7XFxuICAgICAgICAgICAgICBmbG9hdCBkeUMgPSBmbG9hdChkeUNDb3JuZXIgKyB3QykgLyBcIitvK1wiLjA7XFxuXFxuICAgICAgICAgICAgICBpZiAoZHlDIDwgMC4wIHx8IGR5QyA+PSBcIit0Lm91dFdpZHRoK1wiLjAgfHxcXG4gICAgICAgICAgICAgICAgICBmcmFjdChkeUMpID4gMC4wKSB7XFxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgaW50IGlkeUMgPSBpbnQoZHlDKTtcXG5cXG4gICAgICAgICAgICAgIGludCB3Q1Blcm0gPSBcIityK1wiIC0gMSAtIHdDO1xcblxcbiAgICAgICAgICAgICAgZm9yIChpbnQgZDIgPSAwOyBkMiA8IFwiK3Qub3V0Q2hhbm5lbHMrXCI7IGQyKyspIHtcXG4gICAgICAgICAgICAgICAgZmxvYXQgeFZhbHVlID0gZ2V0RHkoYmF0Y2gsIGlkeUYsIGlkeVIsIGlkeUMsIGQyKTtcXG4gICAgICAgICAgICAgICAgZmxvYXQgd1ZhbHVlID0gZ2V0Vyh3RlBlcm0sIHdSUGVybSwgd0NQZXJtLCBkMSwgZDIpO1xcbiAgICAgICAgICAgICAgICBkb3RQcm9kICs9IHhWYWx1ZSAqIHdWYWx1ZTtcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwifSxBbj1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wieFwiLFwiZHlcIl0sdGhpcy5vdXRwdXRTaGFwZT10LmZpbHRlclNoYXBlO3ZhciBlPXQuc3RyaWRlSGVpZ2h0LG49dC5zdHJpZGVXaWR0aCxyPXQucGFkSW5mby50b3AsaT10LnBhZEluZm8ubGVmdCxhPXQub3V0Q2hhbm5lbHMvdC5pbkNoYW5uZWxzO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCB3UiA9IGNvb3Jkcy54O1xcbiAgICAgICAgaW50IHdDID0gY29vcmRzLnk7XFxuICAgICAgICBpbnQgZDEgPSBjb29yZHMuejtcXG4gICAgICAgIGludCBkbSA9IGNvb3Jkcy53O1xcbiAgICAgICAgaW50IGQyID0gZDEgKiBcIithK1wiICsgZG07XFxuXFxuICAgICAgICBmbG9hdCBkb3RQcm9kID0gMC4wO1xcblxcbiAgICAgICAgLy8gVE9ETzogVmVjNCBvdmVyIHRoZSBiYXRjaCBzaXplXFxuICAgICAgICBmb3IgKGludCBiID0gMDsgYiA8IFwiK3QuYmF0Y2hTaXplK1wiOyBiKyspIHtcXG4gICAgICAgICAgZm9yIChpbnQgeVIgPSAwOyB5UiA8IFwiK3Qub3V0SGVpZ2h0K1wiOyB5UisrKSB7XFxuICAgICAgICAgICAgaW50IHhSID0gd1IgKyB5UiAqIFwiK2UrXCIgLSBcIityK1wiO1xcblxcbiAgICAgICAgICAgIGlmICh4UiA8IDAgfHwgeFIgPj0gXCIrdC5pbkhlaWdodCtcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZvciAoaW50IHlDID0gMDsgeUMgPCBcIit0Lm91dFdpZHRoK1wiOyB5QysrKSB7XFxuICAgICAgICAgICAgICBpbnQgeEMgPSB3QyArIHlDICogXCIrbitcIiAtIFwiK2krXCI7XFxuXFxuICAgICAgICAgICAgICBpZiAoeEMgPCAwIHx8IHhDID49IFwiK3QuaW5XaWR0aCtcIikge1xcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgIGZsb2F0IGR5VmFsdWUgPSBnZXREeShiLCB5UiwgeUMsIGQyKTtcXG4gICAgICAgICAgICAgIGZsb2F0IHhWYWx1ZSA9IGdldFgoYiwgeFIsIHhDLCBkMSk7XFxuICAgICAgICAgICAgICBkb3RQcm9kICs9ICh4VmFsdWUgKiBkeVZhbHVlKTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwifSxDbj1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiZHlcIixcIldcIl0sdGhpcy5vdXRwdXRTaGFwZT10LmluU2hhcGU7dmFyIGU9dC5maWx0ZXJIZWlnaHQsbj10LmZpbHRlcldpZHRoLHI9dC5zdHJpZGVIZWlnaHQsaT10LnN0cmlkZVdpZHRoLGE9ZS0xLXQucGFkSW5mby50b3Asbz1uLTEtdC5wYWRJbmZvLmxlZnQscz10Lm91dENoYW5uZWxzL3QuaW5DaGFubmVsczt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiK2ErXCIsIFwiK28rXCIpO1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQxID0gY29vcmRzWzNdO1xcbiAgICAgICAgaXZlYzIgZHlDb3JuZXIgPSBjb29yZHMueXogLSBwYWRzO1xcbiAgICAgICAgaW50IGR5UkNvcm5lciA9IGR5Q29ybmVyLng7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlDb3JuZXIueTtcXG5cXG4gICAgICAgIGZsb2F0IGRvdFByb2QgPSAwLjA7XFxuXFxuICAgICAgICBmb3IgKGludCB3UiA9IDA7IHdSIDwgXCIrZStcIjsgd1IrKykge1xcbiAgICAgICAgICBmbG9hdCBkeVIgPSBmbG9hdChkeVJDb3JuZXIgKyB3UikgLyBcIityK1wiLjA7XFxuXFxuICAgICAgICAgIGlmIChkeVIgPCAwLjAgfHwgZHlSID49IFwiK3Qub3V0SGVpZ2h0K1wiLjAgfHwgZnJhY3QoZHlSKSA+IDAuMCkge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICB9XFxuICAgICAgICAgIGludCBpZHlSID0gaW50KGR5Uik7XFxuXFxuICAgICAgICAgIGludCB3UlBlcm0gPSBcIitlK1wiIC0gMSAtIHdSO1xcblxcbiAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIrbitcIjsgd0MrKykge1xcbiAgICAgICAgICAgIGZsb2F0IGR5QyA9IGZsb2F0KGR5Q0Nvcm5lciArIHdDKSAvIFwiK2krXCIuMDtcXG5cXG4gICAgICAgICAgICBpZiAoZHlDIDwgMC4wIHx8IGR5QyA+PSBcIit0Lm91dFdpZHRoK1wiLjAgfHxcXG4gICAgICAgICAgICAgICAgZnJhY3QoZHlDKSA+IDAuMCkge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGludCBpZHlDID0gaW50KGR5Qyk7XFxuXFxuICAgICAgICAgICAgaW50IHdDUGVybSA9IFwiK24rXCIgLSAxIC0gd0M7XFxuXFxuICAgICAgICAgICAgLy8gVE9ETzogVmVjNCBvdmVyIHRoZSBjaGFubmVsTXVsXFxuICAgICAgICAgICAgZm9yIChpbnQgZG0gPSAwOyBkbSA8IFwiK3MrXCI7IGRtKyspIHtcXG4gICAgICAgICAgICAgIGludCBkMiA9IGQxICogXCIrcytcIiArIGRtO1xcbiAgICAgICAgICAgICAgZmxvYXQgeFZhbHVlID0gZ2V0RHkoYmF0Y2gsIGlkeVIsIGlkeUMsIGQyKTtcXG4gICAgICAgICAgICAgIGZsb2F0IHdWYWx1ZSA9IGdldFcod1JQZXJtLCB3Q1Blcm0sIGQxLCBkbSk7XFxuICAgICAgICAgICAgICBkb3RQcm9kICs9IHhWYWx1ZSAqIHdWYWx1ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwifSxQbj1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wieFwiLFwiV1wiXSx0aGlzLm91dHB1dFNoYXBlPXQub3V0U2hhcGU7dmFyIGU9dC5wYWRJbmZvLnRvcCxuPXQucGFkSW5mby5sZWZ0LHI9dC5zdHJpZGVIZWlnaHQsaT10LnN0cmlkZVdpZHRoLGE9dC5kaWxhdGlvbkhlaWdodCxvPXQuZGlsYXRpb25XaWR0aCxzPXQuZmlsdGVySGVpZ2h0LHU9dC5maWx0ZXJXaWR0aCxjPTQqTWF0aC5mbG9vcih0LmluQ2hhbm5lbHMvNCksbD10LmluQ2hhbm5lbHMlNDt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgc3RyaWRlcyA9IGl2ZWMyKFwiK3IrXCIsIFwiK2krXCIpO1xcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIitlK1wiLCBcIituK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiYXRjaCA9IGNvb3Jkc1swXTtcXG4gICAgICAgIGludCBkMiA9IGNvb3Jkc1szXTtcXG5cXG4gICAgICAgIGl2ZWMyIHhSQ0Nvcm5lciA9IGNvb3Jkcy55eiAqIHN0cmlkZXMgLSBwYWRzO1xcbiAgICAgICAgaW50IHhSQ29ybmVyID0geFJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgeENDb3JuZXIgPSB4UkNDb3JuZXIueTtcXG5cXG4gICAgICAgIC8vIENvbnZvbHZlIHgoPywgPywgZDEpIHdpdGggdyg6LCA6LCBkMSwgZDIpIHRvIGdldCB5KHlSLCB5QywgZDIpLlxcbiAgICAgICAgLy8gPyA9IHRvIGJlIGRldGVybWluZWQuIDogPSBhY3Jvc3MgYWxsIHZhbHVlcyBpbiB0aGF0IGF4aXMuXFxuICAgICAgICBmbG9hdCBkb3RQcm9kID0gMC4wO1xcbiAgICAgICAgZm9yIChpbnQgd1IgPSAwOyB3UiA8IFwiK3MrXCI7IHdSKyspIHtcXG4gICAgICAgICAgaW50IHhSID0geFJDb3JuZXIgKyB3UiAqIFwiK2ErXCI7XFxuXFxuICAgICAgICAgIGlmICh4UiA8IDAgfHwgeFIgPj0gXCIrdC5pbkhlaWdodCtcIikge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIGZvciAoaW50IHdDID0gMDsgd0MgPCBcIit1K1wiOyB3QysrKSB7XFxuICAgICAgICAgICAgaW50IHhDID0geENDb3JuZXIgKyB3QyAqIFwiK28rXCI7XFxuXFxuICAgICAgICAgICAgaWYgKHhDIDwgMCB8fCB4QyA+PSBcIit0LmluV2lkdGgrXCIpIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBmb3IgKGludCBkMSA9IDA7IGQxIDwgXCIrYytcIjsgZDEgKz0gNCkge1xcbiAgICAgICAgICAgICAgdmVjNCB4VmFsdWVzID0gdmVjNChcXG4gICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeFIsIHhDLCBkMSksXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgZDEgKyAxKSxcXG4gICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeFIsIHhDLCBkMSArIDIpLFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIGQxICsgMylcXG4gICAgICAgICAgICAgICk7XFxuICAgICAgICAgICAgICB2ZWM0IHdWYWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgICAgICBnZXRXKHdSLCB3QywgZDEsIGQyKSxcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIGQxICsgMSwgZDIpLFxcbiAgICAgICAgICAgICAgICBnZXRXKHdSLCB3QywgZDEgKyAyLCBkMiksXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBkMSArIDMsIGQyKVxcbiAgICAgICAgICAgICAgKTtcXG5cXG4gICAgICAgICAgICAgIGRvdFByb2QgKz0gZG90KHhWYWx1ZXMsIHdWYWx1ZXMpO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBpZiAoXCIrKDE9PT1sKStcIikge1xcbiAgICAgICAgICAgICAgZG90UHJvZCArPVxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIFwiK2MrXCIpICpcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiK2MrXCIsIGQyKTtcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKFwiKygyPT09bCkrXCIpIHtcXG4gICAgICAgICAgICAgIHZlYzIgeFZhbHVlcyA9IHZlYzIoXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgXCIrYytcIiksXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgXCIrYytcIiArIDEpXFxuICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgdmVjMiB3VmFsdWVzID0gdmVjMihcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiK2MrXCIsIGQyKSxcXG4gICAgICAgICAgICAgICAgZ2V0Vyh3Uiwgd0MsIFwiK2MrXCIgKyAxLCBkMilcXG4gICAgICAgICAgICAgICk7XFxuICAgICAgICAgICAgICBkb3RQcm9kICs9IGRvdCh4VmFsdWVzLCB3VmFsdWVzKTtcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKFwiKygzPT09bCkrXCIpIHtcXG4gICAgICAgICAgICAgIHZlYzMgeFZhbHVlcyA9IHZlYzMoXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgXCIrYytcIiksXFxuICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhSLCB4QywgXCIrYytcIiArIDEpLFxcbiAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4UiwgeEMsIFwiK2MrXCIgKyAyKVxcbiAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICAgIHZlYzMgd1ZhbHVlcyA9IHZlYzMoXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBcIitjK1wiLCBkMiksXFxuICAgICAgICAgICAgICAgIGdldFcod1IsIHdDLCBcIitjK1wiICsgMSwgZDIpLFxcbiAgICAgICAgICAgICAgICBnZXRXKHdSLCB3QywgXCIrYytcIiArIDIsIGQyKVxcbiAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICAgIGRvdFByb2QgKz0gZG90KHhWYWx1ZXMsIHdWYWx1ZXMpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRvdFByb2QpO1xcbiAgICAgIH1cXG4gICAgXCJ9LFRuPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCIsXCJXXCJdLHRoaXMub3V0cHV0U2hhcGU9dC5vdXRTaGFwZTt2YXIgZT10LnBhZEluZm8uZnJvbnQsbj10LnBhZEluZm8udG9wLHI9dC5wYWRJbmZvLmxlZnQsaT10LnN0cmlkZURlcHRoLGE9dC5zdHJpZGVIZWlnaHQsbz10LnN0cmlkZVdpZHRoLHM9dC5kaWxhdGlvbkRlcHRoLHU9dC5kaWxhdGlvbkhlaWdodCxjPXQuZGlsYXRpb25XaWR0aCxsPXQuZmlsdGVyRGVwdGgsZj10LmZpbHRlckhlaWdodCxoPXQuZmlsdGVyV2lkdGgscD00Kk1hdGguZmxvb3IodC5pbkNoYW5uZWxzLzQpLGQ9dC5pbkNoYW5uZWxzJTQ7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGNvbnN0IGl2ZWMzIHN0cmlkZXMgPSBpdmVjMyhcIitpK1wiLCBcIithK1wiLCBcIitvK1wiKTtcXG4gICAgICBjb25zdCBpdmVjMyBwYWRzID0gaXZlYzMoXCIrZStcIiwgXCIrbitcIiwgXCIrcitcIik7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzUgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHMueDtcXG4gICAgICAgIGludCBkMiA9IGNvb3Jkcy51O1xcblxcbiAgICAgICAgaXZlYzMgeEZSQ0Nvcm5lciA9IGl2ZWMzKGNvb3Jkcy55LCBjb29yZHMueiwgY29vcmRzLncpICogc3RyaWRlcyAtIHBhZHM7XFxuICAgICAgICBpbnQgeEZDb3JuZXIgPSB4RlJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgeFJDb3JuZXIgPSB4RlJDQ29ybmVyLnk7XFxuICAgICAgICBpbnQgeENDb3JuZXIgPSB4RlJDQ29ybmVyLno7XFxuXFxuICAgICAgICAvLyBDb252b2x2ZSB4KD8sID8sID8sIGQxKSB3aXRoIHcoOiwgOiwgOiwgZDEsIGQyKSB0byBnZXRcXG4gICAgICAgIC8vIHkoeUYsIHlSLCB5QywgZDIpLiA/ID0gdG8gYmUgZGV0ZXJtaW5lZC4gOiA9IGFjcm9zcyBhbGxcXG4gICAgICAgIC8vIHZhbHVlcyBpbiB0aGF0IGF4aXMuXFxuICAgICAgICBmbG9hdCBkb3RQcm9kID0gMC4wO1xcbiAgICAgICAgZm9yIChpbnQgd0YgPSAwOyB3RiA8IFwiK2wrXCI7IHdGKyspIHtcXG4gICAgICAgICAgaW50IHhGID0geEZDb3JuZXIgKyB3RiAqIFwiK3MrXCI7XFxuXFxuICAgICAgICAgIGlmICh4RiA8IDAgfHwgeEYgPj0gXCIrdC5pbkRlcHRoK1wiKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgZm9yIChpbnQgd1IgPSAwOyB3UiA8IFwiK2YrXCI7IHdSKyspIHtcXG4gICAgICAgICAgICBpbnQgeFIgPSB4UkNvcm5lciArIHdSICogXCIrdStcIjtcXG5cXG4gICAgICAgICAgICBpZiAoeFIgPCAwIHx8IHhSID49IFwiK3QuaW5IZWlnaHQrXCIpIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIraCtcIjsgd0MrKykge1xcbiAgICAgICAgICAgICAgaW50IHhDID0geENDb3JuZXIgKyB3QyAqIFwiK2MrXCI7XFxuXFxuICAgICAgICAgICAgICBpZiAoeEMgPCAwIHx8IHhDID49IFwiK3QuaW5XaWR0aCtcIikge1xcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgIGZvciAoaW50IGQxID0gMDsgZDEgPCBcIitwK1wiOyBkMSArPSA0KSB7XFxuICAgICAgICAgICAgICAgIHZlYzQgeFZhbHVlcyA9IHZlYzQoXFxuICAgICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeEYsIHhSLCB4QywgZDEpLFxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGQxICsgMSksXFxuICAgICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeEYsIHhSLCB4QywgZDEgKyAyKSxcXG4gICAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4RiwgeFIsIHhDLCBkMSArIDMpXFxuICAgICAgICAgICAgICAgICk7XFxuICAgICAgICAgICAgICAgIHZlYzQgd1ZhbHVlcyA9IHZlYzQoXFxuICAgICAgICAgICAgICAgICAgZ2V0Vyh3Riwgd1IsIHdDLCBkMSwgZDIpLFxcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgZDEgKyAxLCBkMiksXFxuICAgICAgICAgICAgICAgICAgZ2V0Vyh3Riwgd1IsIHdDLCBkMSArIDIsIGQyKSxcXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGQxICsgMywgZDIpXFxuICAgICAgICAgICAgICAgICk7XFxuXFxuICAgICAgICAgICAgICAgIGRvdFByb2QgKz0gZG90KHhWYWx1ZXMsIHdWYWx1ZXMpO1xcbiAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgaWYgKFwiKygxPT09ZCkrXCIpIHtcXG4gICAgICAgICAgICAgICAgZG90UHJvZCArPVxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIFwiK3ArXCIpICpcXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIFwiK3ArXCIsIGQyKTtcXG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoXCIrKDI9PT1kKStcIikge1xcbiAgICAgICAgICAgICAgICB2ZWMyIHhWYWx1ZXMgPSB2ZWMyKFxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIFwiK3ArXCIpLFxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIFwiK3ArXCIgKyAxKVxcbiAgICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgICB2ZWMyIHdWYWx1ZXMgPSB2ZWMyKFxcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgXCIrcCtcIiwgZDIpLFxcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgXCIrcCtcIiArIDEsIGQyKVxcbiAgICAgICAgICAgICAgICApO1xcbiAgICAgICAgICAgICAgICBkb3RQcm9kICs9IGRvdCh4VmFsdWVzLCB3VmFsdWVzKTtcXG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoXCIrKDM9PT1kKStcIikge1xcbiAgICAgICAgICAgICAgICB2ZWMzIHhWYWx1ZXMgPSB2ZWMzKFxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIFwiK3ArXCIpLFxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIFwiK3ArXCIgKyAxKSxcXG4gICAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4RiwgeFIsIHhDLCBcIitwK1wiICsgMilcXG4gICAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICAgICAgdmVjMyB3VmFsdWVzID0gdmVjMyhcXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIFwiK3ArXCIsIGQyKSxcXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIFwiK3ArXCIgKyAxLCBkMiksXFxuICAgICAgICAgICAgICAgICAgZ2V0Vyh3Riwgd1IsIHdDLCBcIitwK1wiICsgMiwgZDIpXFxuICAgICAgICAgICAgICAgICk7XFxuICAgICAgICAgICAgICAgIGRvdFByb2QgKz0gZG90KHhWYWx1ZXMsIHdWYWx1ZXMpO1xcbiAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRvdFByb2QpO1xcbiAgICAgIH1cXG4gICAgXCJ9LFJuPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCIsXCJXXCJdLHRoaXMub3V0cHV0U2hhcGU9dC5vdXRTaGFwZTt2YXIgZT10LmluSGVpZ2h0LG49dC5pbldpZHRoLHI9dC5wYWRJbmZvLnRvcCxpPXQucGFkSW5mby5sZWZ0LGE9dC5zdHJpZGVIZWlnaHQsbz10LnN0cmlkZVdpZHRoLHM9dC5kaWxhdGlvbkhlaWdodCx1PXQuZGlsYXRpb25XaWR0aCxjPXQuZmlsdGVySGVpZ2h0LGw9dC5maWx0ZXJXaWR0aCxmPXQub3V0Q2hhbm5lbHMvdC5pbkNoYW5uZWxzO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICBjb25zdCBpdmVjMiBzdHJpZGVzID0gaXZlYzIoXCIrYStcIiwgXCIrbytcIik7XFxuICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiK3IrXCIsIFwiK2krXCIpO1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzLng7XFxuICAgICAgICBpdmVjMiB4UkNDb3JuZXIgPSBjb29yZHMueXogKiBzdHJpZGVzIC0gcGFkcztcXG4gICAgICAgIGludCBkMiA9IGNvb3Jkcy53O1xcbiAgICAgICAgaW50IGQxID0gZDIgLyBcIitmK1wiO1xcbiAgICAgICAgaW50IHEgPSBkMiAtIGQxICogXCIrZitcIjtcXG5cXG4gICAgICAgIGludCB4UkNvcm5lciA9IHhSQ0Nvcm5lci54O1xcbiAgICAgICAgaW50IHhDQ29ybmVyID0geFJDQ29ybmVyLnk7XFxuXFxuICAgICAgICAvLyBDb252b2x2ZSB4KD8sID8sIGQxKSB3aXRoIHcoOiwgOiwgZDEsIHEpIHRvIGdldCB5KHlSLCB5QywgZDIpLlxcbiAgICAgICAgLy8gPyA9IHRvIGJlIGRldGVybWluZWQuIDogPSBhY3Jvc3MgYWxsIHZhbHVlcyBpbiB0aGF0IGF4aXMuXFxuICAgICAgICBmbG9hdCBkb3RQcm9kID0gMC4wO1xcbiAgICAgICAgLy8gVE9ETyhkc21pbGtvdik6IEZsYXR0ZW4gdGhlIHR3byBmb3IgbG9vcHMgYW5kIHZlYzQgdGhlIG9wZXJhdGlvbnMuXFxuICAgICAgICBmb3IgKGludCB3UiA9IDA7IHdSIDwgXCIrYytcIjsgd1IrKykge1xcbiAgICAgICAgICBpbnQgeFIgPSB4UkNvcm5lciArIHdSICogXCIrcytcIjtcXG5cXG4gICAgICAgICAgaWYgKHhSIDwgMCB8fCB4UiA+PSBcIitlK1wiKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgZm9yIChpbnQgd0MgPSAwOyB3QyA8IFwiK2wrXCI7IHdDKyspIHtcXG4gICAgICAgICAgICBpbnQgeEMgPSB4Q0Nvcm5lciArIHdDICogXCIrdStcIjtcXG5cXG4gICAgICAgICAgICBpZiAoeEMgPCAwIHx8IHhDID49IFwiK24rXCIpIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBmbG9hdCB4VmFsID0gZ2V0WChiYXRjaCwgeFIsIHhDLCBkMSk7XFxuICAgICAgICAgICAgZmxvYXQgd1ZhbCA9IGdldFcod1IsIHdDLCBkMSwgcSk7XFxuICAgICAgICAgICAgZG90UHJvZCArPSB4VmFsICogd1ZhbDtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KGRvdFByb2QpO1xcbiAgICAgIH1cXG4gICAgXCJ9LERuPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCIsXCJXXCJdLHRoaXMudXNlc1BhY2tlZFRleHR1cmVzPSEwLHRoaXMub3V0cHV0U2hhcGU9dC5vdXRTaGFwZTtmb3IodmFyIGU9dC5pbkhlaWdodCxuPXQuaW5XaWR0aCxyPXQucGFkSW5mby50b3AsaT10LnBhZEluZm8ubGVmdCxhPXQuc3RyaWRlSGVpZ2h0LG89dC5zdHJpZGVXaWR0aCxzPXQuZmlsdGVySGVpZ2h0LHU9dC5maWx0ZXJXaWR0aCxjPU1hdGguY2VpbCgodSsxKS8yKSxsPVwiaW50IHhSOyBpbnQgeEM7XCIsZj0wO2Y8cztmKyspe2Zvcih2YXIgaD0taTtoPDIqYztoKyspbCs9XCJ2ZWM0IFwiK01uKGYsaCkrXCIgPSB2ZWM0KDAuKTtcIjtmb3IoaD0wO2g8dTtoKyspbCs9XCJcXG4gICAgICAgICAgdmVjNCB3UlwiK2YrXCJDXCIraCtcIiA9IHZlYzQoMC4pO1xcbiAgICAgICAgICB2ZWM0IHhSXCIrZitcIkNcIitoK1wiID0gdmVjNCgwLik7XCJ9Zm9yKGY9MDtmPHM7ZisrKWZvcihoPTA7aDxjO2grKyl7dmFyIHA9MipoLGQ9MipoK2k7bCs9XCJcXG4gICAgICAgICAgeFIgPSB4UkNvcm5lciArIFwiK2YrXCI7XFxuICAgICAgICAgIHhDID0geENDb3JuZXIgKyBcIitkK1wiO1xcblxcbiAgICAgICAgICBpZih4UiA+PSAwICYmIHhSIDwgXCIrZStcIiAmJiB4QyA+PSAwICYmIHhDIDwgXCIrbitcIikge1xcbiAgICAgICAgICAgIFwiK01uKGYsZCkrXCIgPSBnZXRYKGJhdGNoLCB4UiwgeEMsIGQxKTtcXG4gICAgICAgICAgfVwiLDA9PT1pP3A8dSYmaD09PWMtMSYmKG8+MSYmKGwrPVwiXFxuICAgICAgICAgICAgICAgIHZlYzQgXCIrTW4oZixkKzIpK1wiID0gdmVjNCgwLik7XFxuXFxuICAgICAgICAgICAgICAgIGlmKHhSID49IDAgJiYgeFIgPCBcIitlK1wiICYmIHhDICsgMiA8IFwiK24rXCIpIHtcXG4gICAgICAgICAgICAgICAgICBcIitNbihmLGQrMikrXCIgPSBnZXRYKGJhdGNoLCB4UiwgeEMgKyAyLCBkMSk7XFxuICAgICAgICAgICAgICAgIH1cIiksbCs9XCJcXG4gICAgICAgICAgICAgIHhSXCIrZitcIkNcIitkK1wiID0gXCIram4oZixkLG8saSkrXCI7XFxuICAgICAgICAgICAgXCIpOjA9PT1oJiYobCs9XCJcXG4gICAgICAgICAgICBpZih4UiA+PSAwICYmIHhSIDwgXCIrZStcIiAmJiB4QyAtIDIgPj0gMCkge1xcbiAgICAgICAgICAgICAgXCIrTW4oZixkLTIpK1wiID0gZ2V0WChiYXRjaCwgeFIsIHhDIC0gMiwgZDEpO1xcbiAgICAgICAgICAgIH1cIikscD4wJiYobCs9XCJ4UlwiK2YrXCJDXCIrKGQtMikrXCIgPVxcbiAgICAgICAgICAgIFwiK2puKGYsZC0yLG8saSkrXCI7XCIpLGQtMT49MCYmZC0xPHUmJihsKz1cInhSXCIrZitcIkNcIisoZC0xKStcIiA9XFxuICAgICAgICAgICAgICBcIitqbihmLGQtMSxvLGkpK1wiO1wiKSxwPHUmJihsKz1cIlxcbiAgICAgICAgICAgIHZlYzQgd1RleGVsXCIrZitcIkNcIitwK1wiID0gZ2V0VyhcIitmK1wiLCBcIitwK1wiLCBkMSwgcSk7XFxuICAgICAgICAgICAgd1JcIitmK1wiQ1wiK3ArXCIgPSB2ZWM0KHdUZXhlbFwiK2YrXCJDXCIrcCtcIi54eiwgd1RleGVsXCIrZitcIkNcIitwK1wiLnh6KTtcXG4gICAgICAgICAgXCIscCsxPHUmJihsKz1cIlxcbiAgICAgICAgICAgICAgdmVjNCB3VGV4ZWxSXCIrZitcIkNcIisocCsxKStcIiA9IGdldFcoXCIrZitcIiwgXCIrKHArMSkrXCIsIGQxLCBxKTtcXG4gICAgICAgICAgICAgIHdSXCIrZitcIkNcIisocCsxKStcIiA9XFxuICAgICAgICAgICAgICAgIHZlYzQod1RleGVsUlwiK2YrXCJDXCIrKHArMSkrXCIueHosIHdUZXhlbFJcIitmK1wiQ1wiKyhwKzEpK1wiLnh6KTtcIikpfWZvcihmPTA7ZjxzO2YrKylmb3IoaD0wO2g8dTtoKyspbCs9XCJyZXN1bHQgKz0geFJcIitmK1wiQ1wiK2grXCIgKiB3UlwiK2YrXCJDXCIraCtcIjtcIjt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgc3RyaWRlcyA9IGl2ZWMyKFwiK2ErXCIsIFwiK28rXCIpO1xcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIityK1wiLCBcIitpK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiYXRjaCA9IGNvb3Jkcy54O1xcbiAgICAgICAgaXZlYzIgeFJDQ29ybmVyID0gY29vcmRzLnl6ICogc3RyaWRlcyAtIHBhZHM7XFxuICAgICAgICBpbnQgZDIgPSBjb29yZHMudztcXG4gICAgICAgIGludCBkMSA9IGQyO1xcbiAgICAgICAgaW50IHEgPSAwO1xcbiAgICAgICAgaW50IHhSQ29ybmVyID0geFJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgeENDb3JuZXIgPSB4UkNDb3JuZXIueTtcXG5cXG4gICAgICAgIHZlYzQgcmVzdWx0ID0gdmVjNCgwLik7XFxuXFxuICAgICAgICBcIitsK1wiXFxuXFxuICAgICAgICBzZXRPdXRwdXQocmVzdWx0KTtcXG4gICAgICB9XFxuICAgIFwifTtmdW5jdGlvbiBNbih0LGUpe3JldHVyblwieFRleGVsUlwiK3QrXCJDXCIrKGU8MD9cIm1pbnVzXCIrTWF0aC5hYnMoZSkudG9TdHJpbmcoKTplKX1mdW5jdGlvbiBqbih0LGUsbixyKXtyZXR1cm4gMT09PW4/ciUyPT1lJTI/TW4odCxlKTpcInZlYzQoXCIrTW4odCxlLTEpK1wiLnp3LCBcIitNbih0LGUrMSkrXCIueHkpXCI6ciUyPT1lJTI/XCJ2ZWM0KFwiK01uKHQsZSkrXCIueHksIFwiK01uKHQsZSsyKStcIi54eSlcIjpcInZlYzQoXCIrTW4odCxlLTEpK1wiLnp3LCBcIitNbih0LGUrMSkrXCIuencpXCJ9dmFyIEJuLExuLHpuPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkltYWdlXCIsXCJCb3hlc1wiLFwiQm94SW5kXCJdLHRoaXMub3V0cHV0U2hhcGU9W107dmFyIGE9dFswXSxvPXRbMV0scz10WzJdLHU9dFszXSxjPWVbMF0sbD1uWzBdLGY9blsxXTt0aGlzLm91dHB1dFNoYXBlPVtjLGwsZix1XTt2YXIgaD1cImJpbGluZWFyXCI9PT1yPzE6MCxwPVtvLTErXCIuMFwiLHMtMStcIi4wXCJdLGQ9cFswXSxtPXBbMV0sZz1sPjE/W1wiXCIrKG8tMSkvKGwtMSksXCIoeTIteTEpICogaGVpZ2h0X3JhdGlvXCIsXCJ5MSpcIitkK1wiICsgZmxvYXQoeSkqKGhlaWdodF9zY2FsZSlcIl06W1wiMC4wXCIsXCIwLjBcIixcIjAuNSAqICh5MSt5MikgKiBcIitkXSx5PWdbMF0sdj1nWzFdLGI9Z1syXSx3PWY+MT9bXCJcIisocy0xKS8oZi0xKSxcIih4Mi14MSkgKiB3aWR0aF9yYXRpb1wiLFwieDEqXCIrbStcIiArIGZsb2F0KHgpKih3aWR0aF9zY2FsZSlcIl06W1wiMC4wXCIsXCIwLjBcIixcIjAuNSAqICh4MSt4MikgKiBcIittXSxfPXdbMF0seD13WzFdLEU9d1syXTt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgZmxvYXQgaGVpZ2h0X3JhdGlvID0gZmxvYXQoXCIreStcIik7XFxuICAgICAgY29uc3QgZmxvYXQgd2lkdGhfcmF0aW8gPSBmbG9hdChcIitfK1wiKTtcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IHkgPSBjb29yZHNbMV07XFxuICAgICAgICBpbnQgeCA9IGNvb3Jkc1syXTtcXG4gICAgICAgIGludCBkID0gY29vcmRzWzNdO1xcblxcbiAgICAgICAgLy8gZ2V0IGJveCB2YWxzXFxuICAgICAgICBmbG9hdCB5MSA9IGdldEJveGVzKGIsMCk7XFxuICAgICAgICBmbG9hdCB4MSA9IGdldEJveGVzKGIsMSk7XFxuICAgICAgICBmbG9hdCB5MiA9IGdldEJveGVzKGIsMik7XFxuICAgICAgICBmbG9hdCB4MiA9IGdldEJveGVzKGIsMyk7XFxuXFxuICAgICAgICAvLyBnZXQgaW1hZ2UgaW4gYmF0Y2ggaW5kZXhcXG4gICAgICAgIGludCBiSW5kID0gcm91bmQoZ2V0Qm94SW5kKGIpKTtcXG4gICAgICAgIGlmKGJJbmQgPCAwIHx8IGJJbmQgPj0gXCIrYStcIikge1xcbiAgICAgICAgICByZXR1cm47XFxuICAgICAgICB9XFxuXFxuICAgICAgICBmbG9hdCBoZWlnaHRfc2NhbGUgPSBcIit2K1wiO1xcbiAgICAgICAgZmxvYXQgd2lkdGhfc2NhbGUgPSBcIit4K1wiO1xcblxcbiAgICAgICAgZmxvYXQgaW5feSA9IFwiK2IrXCI7XFxuICAgICAgICBpZiggaW5feSA8IDAuMCB8fCBpbl95ID4gXCIrZCtcIiApIHtcXG4gICAgICAgICAgc2V0T3V0cHV0KGZsb2F0KFwiK2krXCIpKTtcXG4gICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgfVxcbiAgICAgICAgZmxvYXQgaW5feCA9IFwiK0UrXCI7XFxuICAgICAgICBpZiggaW5feCA8IDAuMCB8fCBpbl94ID4gXCIrbStcIiApIHtcXG4gICAgICAgICAgc2V0T3V0cHV0KGZsb2F0KFwiK2krXCIpKTtcXG4gICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgdmVjMiBzb3VyY2VGcmFjSW5kZXhSQyA9IHZlYzIoaW5feSxpbl94KTtcXG4gICAgICAgIGlmKFwiK2grXCIgPT0gMSkge1xcbiAgICAgICAgICAvLyBDb21wdXRlIHRoZSBmb3VyIGludGVnZXIgaW5kaWNlcy5cXG4gICAgICAgICAgaXZlYzIgc291cmNlRmxvb3JSQyA9IGl2ZWMyKHNvdXJjZUZyYWNJbmRleFJDKTtcXG4gICAgICAgICAgaXZlYzIgc291cmNlQ2VpbFJDID0gaXZlYzIoY2VpbChzb3VyY2VGcmFjSW5kZXhSQykpO1xcblxcbiAgICAgICAgICBmbG9hdCB0b3BMZWZ0ID0gZ2V0SW1hZ2UoYiwgc291cmNlRmxvb3JSQy54LCBzb3VyY2VGbG9vclJDLnksIGQpO1xcbiAgICAgICAgICBmbG9hdCBib3R0b21MZWZ0ID0gZ2V0SW1hZ2UoYiwgc291cmNlQ2VpbFJDLngsIHNvdXJjZUZsb29yUkMueSwgZCk7XFxuICAgICAgICAgIGZsb2F0IHRvcFJpZ2h0ID0gZ2V0SW1hZ2UoYiwgc291cmNlRmxvb3JSQy54LCBzb3VyY2VDZWlsUkMueSwgZCk7XFxuICAgICAgICAgIGZsb2F0IGJvdHRvbVJpZ2h0ID0gZ2V0SW1hZ2UoYiwgc291cmNlQ2VpbFJDLngsIHNvdXJjZUNlaWxSQy55LCBkKTtcXG5cXG4gICAgICAgICAgdmVjMiBmcmFjUkMgPSBzb3VyY2VGcmFjSW5kZXhSQyAtIHZlYzIoc291cmNlRmxvb3JSQyk7XFxuXFxuICAgICAgICAgIGZsb2F0IHRvcCA9IHRvcExlZnQgKyAodG9wUmlnaHQgLSB0b3BMZWZ0KSAqIGZyYWNSQy55O1xcbiAgICAgICAgICBmbG9hdCBib3R0b20gPSBib3R0b21MZWZ0ICsgKGJvdHRvbVJpZ2h0IC0gYm90dG9tTGVmdCkgKiBmcmFjUkMueTtcXG4gICAgICAgICAgZmxvYXQgbmV3VmFsdWUgPSB0b3AgKyAoYm90dG9tIC0gdG9wKSAqIGZyYWNSQy54O1xcbiAgICAgICAgICBzZXRPdXRwdXQobmV3VmFsdWUpO1xcbiAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgLy8gQ29tcHV0ZSB0aGUgY29vcmRpbmF0b3JzIG9mIG5lYXJlc3QgbmVpZ2hib3IgcG9pbnQuXFxuICAgICAgICAgIGl2ZWMyIHNvdXJjZU5lYXJlc3RSQyA9IGl2ZWMyKGZsb29yKFxcbiAgICAgICAgICAgIHNvdXJjZUZyYWNJbmRleFJDICsgdmVjMigwLjUsMC41KSkpO1xcbiAgICAgICAgICBmbG9hdCBuZXdWYWx1ZSA9IGdldEltYWdlKGIsIHNvdXJjZU5lYXJlc3RSQy54LCBzb3VyY2VOZWFyZXN0UkMueSwgZCk7XFxuICAgICAgICAgIHNldE91dHB1dChuZXdWYWx1ZSk7XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICBcIn07ZnVuY3Rpb24gRm4oKXt2YXIgdCxlLG4scixpLGEsbyxzO3JldHVybiAyPT09THQuZ2V0KFwiV0VCR0xfVkVSU0lPTlwiKT8odD1cIiN2ZXJzaW9uIDMwMCBlc1wiLGU9XCJpblwiLG49XCJvdXRcIixyPVwiaW5cIixpPVwidGV4dHVyZVwiLGE9XCJvdXRwdXRDb2xvclwiLG89XCJvdXQgdmVjNCBvdXRwdXRDb2xvcjtcIixzPVwiXFxuICAgICAgI2RlZmluZSByb3VuZCh2YWx1ZSkgbmV3Um91bmQodmFsdWUpXFxuICAgICAgaW50IG5ld1JvdW5kKGZsb2F0IHZhbHVlKSB7XFxuICAgICAgICByZXR1cm4gaW50KGZsb29yKHZhbHVlICsgMC41KSk7XFxuICAgICAgfVxcblxcbiAgICAgIGl2ZWM0IG5ld1JvdW5kKHZlYzQgdmFsdWUpIHtcXG4gICAgICAgIHJldHVybiBpdmVjNChmbG9vcih2YWx1ZSArIHZlYzQoMC41KSkpO1xcbiAgICAgIH1cXG4gICAgXCIpOih0PVwiXCIsZT1cImF0dHJpYnV0ZVwiLG49XCJ2YXJ5aW5nXCIscj1cInZhcnlpbmdcIixpPVwidGV4dHVyZTJEXCIsYT1cImdsX0ZyYWdDb2xvclwiLG89XCJcIixzPVwiXFxuICAgICAgaW50IHJvdW5kKGZsb2F0IHZhbHVlKSB7XFxuICAgICAgICByZXR1cm4gaW50KGZsb29yKHZhbHVlICsgMC41KSk7XFxuICAgICAgfVxcblxcbiAgICAgIGl2ZWM0IHJvdW5kKHZlYzQgdmFsdWUpIHtcXG4gICAgICAgIHJldHVybiBpdmVjNChmbG9vcih2YWx1ZSArIHZlYzQoMC41KSkpO1xcbiAgICAgIH1cXG4gICAgXCIpLHt2ZXJzaW9uOnQsYXR0cmlidXRlOmUsdmFyeWluZ1ZzOm4sdmFyeWluZ0ZzOnIsdGV4dHVyZTJEOmksb3V0cHV0OmEsZGVmaW5lT3V0cHV0Om8sZGVmaW5lUm91bmQ6c319ZnVuY3Rpb24gVW4odCxlLG4pe3ZvaWQgMD09PW4mJihuPVwiaW5kZXhcIik7dmFyIHI9SyhlKTtyZXR1cm4gci5tYXAoZnVuY3Rpb24oZSxpKXtyZXR1cm5cImludCBcIit0W2ldK1wiID0gXCIrbitcIiAvIFwiK2UrXCI7IFwiKyhpPT09ci5sZW5ndGgtMT9cImludCBcIit0W2krMV0rXCIgPSBcIituK1wiIC0gXCIrdFtpXStcIiAqIFwiK2U6XCJpbmRleCAtPSBcIit0W2ldK1wiICogXCIrZSkrXCI7XCJ9KS5qb2luKFwiXCIpfWZ1bmN0aW9uIFZuKHQpe3JldHVybiAxPT09dC5sZW5ndGg/XCJcIit0WzBdOlwidmVjXCIrdC5sZW5ndGgrXCIoXCIrdC5qb2luKFwiLFwiKStcIilcIn1mdW5jdGlvbiBXbih0LGUpe3JldHVybltlLHRdfWZ1bmN0aW9uIHFuKHQsZSl7cmV0dXJuIHQqZX1mdW5jdGlvbiAkbih0LGUsbil7dmFyIHI9ZnVuY3Rpb24odCxlKXtpZih0JWUhPTApdGhyb3cgbmV3IEVycm9yKFwidW5wYWNrZWRTaXplIChcIit0K1wiKSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgXCIrZSk7cmV0dXJuIHQvZX0odC5sZW5ndGgsbik7aWYoZS5sZW5ndGg8cil0aHJvdyBuZXcgRXJyb3IoXCJtYXRyaXggbGVuZ3RoIChcIitlLmxlbmd0aCtcIikgbXVzdCBiZSA+PSBcIityKTtmb3IodmFyIGk9MCxhPTA7YTx0Lmxlbmd0aDthKz1uKWVbaSsrXT10W2FdfWZ1bmN0aW9uIEhuKHQsZSl7cmV0dXJuW01hdGgubWF4KDEsTWF0aC5jZWlsKGUvMikpLE1hdGgubWF4KDEsTWF0aC5jZWlsKHQvMikpXX1mdW5jdGlvbiBLbih0LGUpe3ZhciBuPUhuKHQsZSk7cmV0dXJuIG5bMF0qblsxXSo0fWZ1bmN0aW9uIEduKHQsZSxuLHIsaSl7dmFyIGE9bipyO2lmKGkubGVuZ3RoPGEpdGhyb3cgbmV3IEVycm9yKFwibWF0cml4IGxlbmd0aCAoXCIraS5sZW5ndGgrXCIpIG11c3QgYmUgPj0gXCIrYSk7Zm9yKHZhciBvPXIlMj09MSxzPW4lMj09MSx1PU1hdGguZmxvb3Ioci8yKSxjPU1hdGguZmxvb3Iobi8yKSxsPU1hdGguY2VpbChyLzIpLGY9bCpNYXRoLmNlaWwobi8yKSxoPWcobikqZyhyKSxwPTA7cDxlO3ArKyl7Zm9yKHZhciBkPXAqbipyLG09cCpoLHk9bz80OjAsdj1yKyhvPzE6MCksYj1tLHc9ZCxfPWQrcix4PTA7eDxjOysreCl7Zm9yKHZhciBFPTA7RTx1OysrRSlpW3crK109dFtiKytdLGlbdysrXT10W2IrK10saVtfKytdPXRbYisrXSxpW18rK109dFtiKytdO2IrPXksdys9dixfKz12fWlmKG8pe2I9bSs0KihsLTEpO3ZhciBTPWQrci0xO2Zvcih5PTQqbCx2PTIqcix4PTA7eDxjOysreClpW1NdPXRbYl0saVtTK3JdPXRbYisyXSxiKz15LFMrPXZ9aWYocyl7Zm9yKGI9bSs0KihmLWwpLFM9ZCsobi0xKSpyLEU9MDtFPHU7KytFKWlbUysrXT10W2IrK10saVtTKytdPXRbYisrXSxiKz0yO28mJihpW2QrbipyLTFdPXRbYl0pfX1yZXR1cm4gaX1mdW5jdGlvbiBYbih0LGUsbixyKXt2YXIgaT1bXTt0LmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9RSh0LnNoYXBlSW5mby5sb2dpY2FsU2hhcGUpO3Quc2hhcGVJbmZvLmlzVW5pZm9ybT9pLnB1c2goXCJ1bmlmb3JtIGZsb2F0IFwiK3QubmFtZSsoZT4xP1wiW1wiK2UrXCJdXCI6XCJcIikrXCI7XCIpOihpLnB1c2goXCJ1bmlmb3JtIHNhbXBsZXIyRCBcIit0Lm5hbWUrXCI7XCIpLGkucHVzaChcInVuaWZvcm0gaW50IG9mZnNldFwiK3QubmFtZStcIjtcIikpfSk7dmFyIGEsbyxzPWkuam9pbihcIlxcblwiKSx1PXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49ITEpO3ZhciByPVwiXCI7cis9bj9Kbih0KTpZbih0KTt2YXIgaT10LnNoYXBlSW5mby5sb2dpY2FsU2hhcGUsYT1lLmxvZ2ljYWxTaGFwZTtyZXR1cm4gaS5sZW5ndGg8PWEubGVuZ3RoJiYobj8wPT09ZmUoaSxhKS5sZW5ndGgmJihyKz1mdW5jdGlvbih0LGUpe3ZhciBuPXQubmFtZSxyPVwiZ2V0XCIrKG4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKSkrXCJBdE91dENvb3Jkc1wiLGk9ZS50ZXhTaGFwZSxhPUhuKGlbMV0saVswXSkuc2xpY2UoKSxvPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxzPWUubG9naWNhbFNoYXBlLHU9ZmUobyxzKSxjPW8ubGVuZ3RoLGw9cy5sZW5ndGg7aWYodS5sZW5ndGgpdGhyb3cgRXJyb3IoXCJQYWNrZWQgYnJvYWRjYXN0IHNhbXBsaW5nIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO3ZhciBmPXQuc2hhcGVJbmZvLnRleFNoYXBlLGg9SG4oZlsxXSxmWzBdKS5zbGljZSgpLHA9Rm4oKTtpZihTKGYsaSkmJkUobyk9PT1FKHMpKXJldHVyblwiXFxuICAgICAgdmVjNCBcIityK1wiKCkge1xcbiAgICAgICAgcmV0dXJuIFwiK3AudGV4dHVyZTJEK1wiKFwiK24rXCIsIHJlc3VsdFVWKTtcXG4gICAgICB9XFxuICAgIFwiO3ZhciBkPVwicmV0dXJuIFwiK3AudGV4dHVyZTJEK1wiKFwiK24rXCIsIHV2KVwiO3JldHVybiAxPT09YyYmbD4xP2Q9XCJcXG4gICAgICB2ZWM0IHZhbHVlcyA9IFwiK3AudGV4dHVyZTJEK1wiKFwiK24rXCIsIHV2KTtcXG4gICAgICByZXR1cm4gdmVjNCh2YWx1ZXMueHksIHZhbHVlcy54eSk7XFxuICAgIFwiOjA9PT1jJiZsPjAmJihkPTE9PT1sP1wiXFxuICAgICAgICB2ZWM0IHZhbHVlcyA9IFwiK3AudGV4dHVyZTJEK1wiKFwiK24rXCIsIHV2KTtcXG4gICAgICAgIHJldHVybiB2ZWM0KHZhbHVlcy54LCB2YWx1ZXMueCwgMC4sIDAuKTtcXG4gICAgICBcIjpcIlxcbiAgICAgICAgdmVjNCB2YWx1ZXMgPSBcIitwLnRleHR1cmUyRCtcIihcIituK1wiLCB1dik7XFxuICAgICAgICByZXR1cm4gdmVjNCh2YWx1ZXMueCk7XFxuICAgICAgXCIpLFwiXFxuICB2ZWM0IFwiK3IrXCIoKSB7XFxuICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlYzIoXCIrYVswXStcIiwgXCIrYVsxXStcIikpO1xcbiAgICBpbnQgaW5kZXggPSByZXNUZXhSQy54ICogXCIrYVsxXStcIiArIHJlc1RleFJDLnk7XFxuXFxuICAgIGludCB0ZXhSID0gaW5kZXggLyBcIitoWzFdK1wiO1xcbiAgICBpbnQgdGV4QyA9IGluZGV4IC0gdGV4UiAqIFwiK2hbMV0rXCI7XFxuICAgIHZlYzIgdXYgPSAodmVjMih0ZXhDLCB0ZXhSKSArIGhhbGZDUikgLyB2ZWMyKFwiK2hbMV0rXCIsIFwiK2hbMF0rXCIpO1xcblxcbiAgICBcIitkK1wiO1xcbiAgfVxcblwifSh0LGUpKTpyKz1mdW5jdGlvbih0LGUpe3ZhciBuPXQubmFtZSxyPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKSxpPVwiZ2V0XCIrcitcIkF0T3V0Q29vcmRzXCIsYT1lLnRleFNoYXBlLG89dC5zaGFwZUluZm8udGV4U2hhcGU7aWYoIXQuc2hhcGVJbmZvLmlzVW5pZm9ybSYmbnVsbD09dC5zaGFwZUluZm8uZmxhdE9mZnNldCYmUyhvLGEpKXJldHVyblwiXFxuICAgICAgZmxvYXQgXCIraStcIigpIHtcXG4gICAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK24rXCIsIHJlc3VsdFVWKTtcXG4gICAgICB9XFxuICAgIFwiO3ZhciBzPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZS5sZW5ndGgsdT1lLmxvZ2ljYWxTaGFwZS5sZW5ndGgsYz1zcih1KSxsPWZlKHQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxlLmxvZ2ljYWxTaGFwZSksZj11LXMsaD1bXCJ4XCIsXCJ5XCIsXCJ6XCIsXCJ3XCIsXCJ1XCIsXCJ2XCJdO3JldHVyblwiXFxuICAgIGZsb2F0IFwiK2krXCIoKSB7XFxuICAgICAgXCIrYytcIiBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICBcIisoMD09PXM/XCJcIjp1PDImJmwubGVuZ3RoPj0xP1wiY29vcmRzID0gMDtcIjpsLm1hcChmdW5jdGlvbih0KXtyZXR1cm5cImNvb3Jkcy5cIitoW3QrZl0rXCIgPSAwO1wifSkuam9pbihcIlxcblwiKSkrXCJcXG4gICAgICByZXR1cm4gZ2V0XCIrcitcIihcIisodTwyJiZzPjA/XCJjb29yZHNcIjp0LnNoYXBlSW5mby5sb2dpY2FsU2hhcGUubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJjb29yZHMuXCIraFtlK2ZdfSkuam9pbihcIiwgXCIpKStcIik7XFxuICAgIH1cXG4gIFwifSh0LGUpKSxyfSh0LGUscil9KS5qb2luKFwiXFxuXCIpLGM9ZS50ZXhTaGFwZSxsPUZuKCksZj1mdW5jdGlvbih0KXtyZXR1cm5cIlxcbiAgICBmbG9hdCBzYW1wbGVUZXh0dXJlKHNhbXBsZXIyRCB0ZXh0dXJlU2FtcGxlciwgdmVjMiB1dikge1xcbiAgICAgIHJldHVybiBcIit0LnRleHR1cmUyRCtcIih0ZXh0dXJlU2FtcGxlciwgdXYpLnI7XFxuICAgIH1cXG4gIFwifShsKSxoPWZ1bmN0aW9uKHQpe3ZhciBlPVwiXCI7cmV0dXJuIGU9THQuZ2V0KFwiUFJPRFwiKT9cIlxcbiAgICAgIGJvb2wgaXNOYU4oZmxvYXQgdmFsKSB7XFxuICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgfVxcblxcbiAgICAgIGJvb2wgaGFzTmFOKHZlYzQgdmFsdWVzKSB7XFxuICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICAgIGJvb2wgaXNOYU4oZmxvYXQgdmFsKSB7XFxuICAgICAgICByZXR1cm4gKHZhbCA8IDEuMCB8fCAwLjAgPCB2YWwgfHwgdmFsID09IDAuMCkgPyBmYWxzZSA6IHRydWU7XFxuICAgICAgfVxcblxcbiAgICAgIGJvb2wgaGFzTmFOKHZlYzQgdmFsdWVzKSB7XFxuICAgICAgICByZXR1cm4gYW55KGJ2ZWM0KFxcbiAgICAgICAgICBpc05hTih2YWx1ZXMueCksXFxuICAgICAgICAgIGlzTmFOKHZhbHVlcy55KSxcXG4gICAgICAgICAgaXNOYU4odmFsdWVzLnopLFxcbiAgICAgICAgICBpc05hTih2YWx1ZXMudylcXG4gICAgICAgICkpO1xcbiAgICAgIH1cXG4gICAgXCIsdC52ZXJzaW9uK1wiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIGludDtcXG4gICAgcHJlY2lzaW9uIGhpZ2hwIHNhbXBsZXIyRDtcXG4gICAgXCIrdC52YXJ5aW5nRnMrXCIgdmVjMiByZXN1bHRVVjtcXG4gICAgXCIrdC5kZWZpbmVPdXRwdXQrXCJcXG4gICAgY29uc3QgdmVjMiBoYWxmQ1IgPSB2ZWMyKDAuNSwgMC41KTtcXG5cXG4gICAgc3RydWN0IGl2ZWM1XFxuICAgIHtcXG4gICAgICBpbnQgeDtcXG4gICAgICBpbnQgeTtcXG4gICAgICBpbnQgejtcXG4gICAgICBpbnQgdztcXG4gICAgICBpbnQgdTtcXG4gICAgfTtcXG5cXG4gICAgc3RydWN0IGl2ZWM2XFxuICAgIHtcXG4gICAgICBpbnQgeDtcXG4gICAgICBpbnQgeTtcXG4gICAgICBpbnQgejtcXG4gICAgICBpbnQgdztcXG4gICAgICBpbnQgdTtcXG4gICAgICBpbnQgdjtcXG4gICAgfTtcXG5cXG4gICAgXCIrZStcIlxcblxcbiAgICBmbG9hdCBnZXROYU4odmVjNCB2YWx1ZXMpIHtcXG4gICAgICByZXR1cm4gZG90KHZlYzQoMSksIHZhbHVlcyk7XFxuICAgIH1cXG5cXG4gICAgXCIrdC5kZWZpbmVSb3VuZCtcIlxcblxcbiAgICBpbnQgaW1vZChpbnQgeCwgaW50IHkpIHtcXG4gICAgICByZXR1cm4geCAtIHkgKiAoeCAvIHkpO1xcbiAgICB9XFxuXFxuICAgIC8vQmFzZWQgb24gdGhlIHdvcmsgb2YgRGF2ZSBIb3NraW5zXFxuICAgIC8vaHR0cHM6Ly93d3cuc2hhZGVydG95LmNvbS92aWV3LzRkalNSV1xcbiAgICAjZGVmaW5lIEhBU0hTQ0FMRTEgNDQzLjg5NzVcXG4gICAgZmxvYXQgcmFuZG9tKGZsb2F0IHNlZWQpe1xcbiAgICAgIHZlYzIgcCA9IHJlc3VsdFVWICogc2VlZDtcXG4gICAgICB2ZWMzIHAzICA9IGZyYWN0KHZlYzMocC54eXgpICogSEFTSFNDQUxFMSk7XFxuICAgICAgcDMgKz0gZG90KHAzLCBwMy55enggKyAxOS4xOSk7XFxuICAgICAgcmV0dXJuIGZyYWN0KChwMy54ICsgcDMueSkgKiBwMy56KTtcXG4gICAgfVxcblxcbiAgICBcIitabitcIlxcbiAgICBcIitRbitcIlxcbiAgICBcIit0citcIlxcbiAgICBcIitlcitcIlxcbiAgICBcIitucitcIlxcbiAgICBcIitycitcIlxcbiAgXCJ9KGwpO3JldHVybiBlLmlzUGFja2VkPyhhPWZ1bmN0aW9uKHQsZSl7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuXCJcXG4gICAgaW50IGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICByZXR1cm4gMDtcXG4gICAgfVxcbiAgXCI7Y2FzZSAxOnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPVtNYXRoLmNlaWwoZVswXS8yKSxNYXRoLmNlaWwoZVsxXS8yKV07cmV0dXJuIDE9PT1uWzBdP1wiXFxuICAgICAgaW50IGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICAgIHJldHVybiAyICogaW50KHJlc3VsdFVWLnggKiBcIituWzFdK1wiLjApO1xcbiAgICAgIH1cXG4gICAgXCI6MT09PW5bMV0/XCJcXG4gICAgICBpbnQgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgICAgcmV0dXJuIDIgKiBpbnQocmVzdWx0VVYueSAqIFwiK25bMF0rXCIuMCk7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICBpbnQgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVjMihcIituWzBdK1wiLCBcIituWzFdK1wiKSk7XFxuICAgICAgcmV0dXJuIHJlc1RleFJDLnggKiBcIituWzFdK1wiICsgcmVzVGV4UkMueTtcXG4gICAgfVxcbiAgXCJ9KDAsZSk7Y2FzZSAyOnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPVtNYXRoLmNlaWwoZVswXS8yKSxNYXRoLmNlaWwoZVsxXS8yKV07aWYoUyh0LGUpKXJldHVyblwiXFxuICAgICAgaXZlYzIgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgICAgcmV0dXJuIDIgKiBpdmVjMihyZXN1bHRVVi55eCAqIHZlYzIoXCIrblswXStcIiwgXCIrblsxXStcIikpO1xcbiAgICAgIH1cXG4gICAgXCI7dmFyIHI9TWF0aC5jZWlsKHRbMV0vMik7cmV0dXJuXCJcXG4gICAgaXZlYzIgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVjMihcIituWzBdK1wiLCBcIituWzFdK1wiKSk7XFxuXFxuICAgICAgaW50IGluZGV4ID0gcmVzVGV4UkMueCAqIFwiK25bMV0rXCIgKyByZXNUZXhSQy55O1xcbiAgICAgIGludCByID0gMiAqIChpbmRleCAvIFwiK3IrXCIpO1xcbiAgICAgIGludCBjID0gaW1vZChpbmRleCwgXCIrcitcIikgKiAyO1xcblxcbiAgICAgIHJldHVybiBpdmVjMihyLCBjKTtcXG4gICAgfVxcbiAgXCJ9KHQsZSk7Y2FzZSAzOnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPVtNYXRoLmNlaWwoZVswXS8yKSxNYXRoLmNlaWwoZVsxXS8yKV0scj1NYXRoLmNlaWwodFsyXS8yKSxpPXIqTWF0aC5jZWlsKHRbMV0vMik7cmV0dXJuXCJcXG4gICAgaXZlYzMgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVjMihcIituWzBdK1wiLCBcIituWzFdK1wiKSk7XFxuICAgICAgaW50IGluZGV4ID0gcmVzVGV4UkMueCAqIFwiK25bMV0rXCIgKyByZXNUZXhSQy55O1xcblxcbiAgICAgIGludCBiID0gaW5kZXggLyBcIitpK1wiO1xcbiAgICAgIGluZGV4IC09IGIgKiBcIitpK1wiO1xcblxcbiAgICAgIGludCByID0gMiAqIChpbmRleCAvIFwiK3IrXCIpO1xcbiAgICAgIGludCBjID0gaW1vZChpbmRleCwgXCIrcitcIikgKiAyO1xcblxcbiAgICAgIHJldHVybiBpdmVjMyhiLCByLCBjKTtcXG4gICAgfVxcbiAgXCJ9KHQsZSk7Y2FzZSA0OnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPVtNYXRoLmNlaWwoZVswXS8yKSxNYXRoLmNlaWwoZVsxXS8yKV0scj1NYXRoLmNlaWwodFszXS8yKSxpPXIqTWF0aC5jZWlsKHRbMl0vMiksYT1pKnRbMV07cmV0dXJuXCJcXG4gICAgaXZlYzQgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVjMihcIituWzBdK1wiLCBcIituWzFdK1wiKSk7XFxuICAgICAgaW50IGluZGV4ID0gcmVzVGV4UkMueCAqIFwiK25bMV0rXCIgKyByZXNUZXhSQy55O1xcblxcbiAgICAgIGludCBiMiA9IGluZGV4IC8gXCIrYStcIjtcXG4gICAgICBpbmRleCAtPSBiMiAqIFwiK2ErXCI7XFxuXFxuICAgICAgaW50IGIgPSBpbmRleCAvIFwiK2krXCI7XFxuICAgICAgaW5kZXggLT0gYiAqIFwiK2krXCI7XFxuXFxuICAgICAgaW50IHIgPSAyICogKGluZGV4IC8gXCIrcitcIik7XFxuICAgICAgaW50IGMgPSBpbW9kKGluZGV4LCBcIityK1wiKSAqIDI7XFxuXFxuICAgICAgcmV0dXJuIGl2ZWM0KGIyLCBiLCByLCBjKTtcXG4gICAgfVxcbiAgXCJ9KHQsZSk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IodC5sZW5ndGgrXCItRCBwYWNrZWQgb3V0cHV0IGNvb3JkaW5hdGUgZmV0Y2hpbmcgaXMgbm90IHlldCBzdXBwb3J0ZWRcIil9fShlLmxvZ2ljYWxTaGFwZSxjKSxvPWZ1bmN0aW9uKHQpe3JldHVyblwiXFxuICAgIHZvaWQgc2V0T3V0cHV0KHZlYzQgdmFsKSB7XFxuICAgICAgXCIrdC5vdXRwdXQrXCIgPSB2YWw7XFxuICAgIH1cXG4gIFwifShsKSk6KGE9ZnVuY3Rpb24odCxlKXtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm5cIlxcbiAgICBpbnQgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIHJldHVybiAwO1xcbiAgICB9XFxuICBcIjtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIDE9PT1lWzBdP1wiXFxuICAgICAgaW50IGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICAgIHJldHVybiBpbnQocmVzdWx0VVYueCAqIFwiK2VbMV0rXCIuMCk7XFxuICAgICAgfVxcbiAgICBcIjoxPT09ZVsxXT9cIlxcbiAgICAgIGludCBnZXRPdXRwdXRDb29yZHMoKSB7XFxuICAgICAgICByZXR1cm4gaW50KHJlc3VsdFVWLnkgKiBcIitlWzBdK1wiLjApO1xcbiAgICAgIH1cXG4gICAgXCI6XCJcXG4gICAgaW50IGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICBpdmVjMiByZXNUZXhSQyA9IGl2ZWMyKHJlc3VsdFVWLnl4ICpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlYzIoXCIrZVswXStcIiwgXCIrZVsxXStcIikpO1xcbiAgICAgIHJldHVybiByZXNUZXhSQy54ICogXCIrZVsxXStcIiArIHJlc1RleFJDLnk7XFxuICAgIH1cXG4gIFwifSgwLGUpO2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gUyh0LGUpP1wiXFxuICAgICAgaXZlYzIgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgICAgcmV0dXJuIGl2ZWMyKHJlc3VsdFVWLnl4ICogdmVjMihcIitlWzBdK1wiLCBcIitlWzFdK1wiKSk7XFxuICAgICAgfVxcbiAgICBcIjoxPT09dFsxXT9cIlxcbiAgICAgIGl2ZWMyIGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWMyKFwiK2VbMF0rXCIsIFwiK2VbMV0rXCIpKTtcXG4gICAgICAgIGludCBpbmRleCA9IHJlc1RleFJDLnggKiBcIitlWzFdK1wiICsgcmVzVGV4UkMueTtcXG4gICAgICAgIHJldHVybiBpdmVjMihpbmRleCwgMCk7XFxuICAgICAgfVxcbiAgICBcIjoxPT09dFswXT9cIlxcbiAgICAgIGl2ZWMyIGdldE91dHB1dENvb3JkcygpIHtcXG4gICAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWMyKFwiK2VbMF0rXCIsIFwiK2VbMV0rXCIpKTtcXG4gICAgICAgIGludCBpbmRleCA9IHJlc1RleFJDLnggKiBcIitlWzFdK1wiICsgcmVzVGV4UkMueTtcXG4gICAgICAgIHJldHVybiBpdmVjMigwLCBpbmRleCk7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICBpdmVjMiBnZXRPdXRwdXRDb29yZHMoKSB7XFxuICAgICAgaXZlYzIgcmVzVGV4UkMgPSBpdmVjMihyZXN1bHRVVi55eCAqXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWMyKFwiK2VbMF0rXCIsIFwiK2VbMV0rXCIpKTtcXG4gICAgICBpbnQgaW5kZXggPSByZXNUZXhSQy54ICogXCIrZVsxXStcIiArIHJlc1RleFJDLnk7XFxuICAgICAgaW50IHIgPSBpbmRleCAvIFwiK3RbMV0rXCI7XFxuICAgICAgaW50IGMgPSBpbmRleCAtIHIgKiBcIit0WzFdK1wiO1xcbiAgICAgIHJldHVybiBpdmVjMihyLCBjKTtcXG4gICAgfVxcbiAgXCJ9KHQsZSk7Y2FzZSAzOnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPVVuKFtcInJcIixcImNcIixcImRcIl0sdCk7cmV0dXJuXCJcXG4gICAgaXZlYzMgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVjMihcIitlWzBdK1wiLCBcIitlWzFdK1wiKSk7XFxuICAgICAgaW50IGluZGV4ID0gcmVzVGV4UkMueCAqIFwiK2VbMV0rXCIgKyByZXNUZXhSQy55O1xcbiAgICAgIFwiK24rXCJcXG4gICAgICByZXR1cm4gaXZlYzMociwgYywgZCk7XFxuICAgIH1cXG4gIFwifSh0LGUpO2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgbj1VbihbXCJyXCIsXCJjXCIsXCJkXCIsXCJkMlwiXSx0KTtyZXR1cm5cIlxcbiAgICBpdmVjNCBnZXRPdXRwdXRDb29yZHMoKSB7XFxuICAgICAgaXZlYzIgcmVzVGV4UkMgPSBpdmVjMihyZXN1bHRVVi55eCAqXFxuICAgICAgICB2ZWMyKFwiK2VbMF0rXCIsIFwiK2VbMV0rXCIpKTtcXG4gICAgICBpbnQgaW5kZXggPSByZXNUZXhSQy54ICogXCIrZVsxXStcIiArIHJlc1RleFJDLnk7XFxuICAgICAgXCIrbitcIlxcbiAgICAgIHJldHVybiBpdmVjNChyLCBjLCBkLCBkMik7XFxuICAgIH1cXG4gIFwifSh0LGUpO2Nhc2UgNTpyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgbj1VbihbXCJyXCIsXCJjXCIsXCJkXCIsXCJkMlwiLFwiZDNcIl0sdCk7cmV0dXJuXCJcXG4gICAgaXZlYzUgZ2V0T3V0cHV0Q29vcmRzKCkge1xcbiAgICAgIGl2ZWMyIHJlc1RleFJDID0gaXZlYzIocmVzdWx0VVYueXggKiB2ZWMyKFwiK2VbMF0rXCIsXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIitlWzFdK1wiKSk7XFxuXFxuICAgICAgaW50IGluZGV4ID0gcmVzVGV4UkMueCAqIFwiK2VbMV0rXCIgKyByZXNUZXhSQy55O1xcblxcbiAgICAgIFwiK24rXCJcXG5cXG4gICAgICBpdmVjNSBvdXRTaGFwZSA9IGl2ZWM1KHIsIGMsIGQsIGQyLCBkMyk7XFxuICAgICAgcmV0dXJuIG91dFNoYXBlO1xcbiAgICB9XFxuICBcIn0odCxlKTtjYXNlIDY6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7dmFyIG49VW4oW1wiclwiLFwiY1wiLFwiZFwiLFwiZDJcIixcImQzXCIsXCJkNFwiXSx0KTtyZXR1cm5cIlxcbiAgICBpdmVjNiBnZXRPdXRwdXRDb29yZHMoKSB7XFxuICAgICAgaXZlYzIgcmVzVGV4UkMgPSBpdmVjMihyZXN1bHRVVi55eCAqXFxuICAgICAgICB2ZWMyKFwiK2VbMF0rXCIsIFwiK2VbMV0rXCIpKTtcXG4gICAgICBpbnQgaW5kZXggPSByZXNUZXhSQy54ICogXCIrZVsxXStcIiArIHJlc1RleFJDLnk7XFxuXFxuICAgICAgXCIrbitcIlxcblxcbiAgICAgIGl2ZWM2IHJlc3VsdCA9IGl2ZWM2KHIsIGMsIGQsIGQyLCBkMywgZDQpO1xcbiAgICAgIHJldHVybiByZXN1bHQ7XFxuICAgIH1cXG4gIFwifSh0LGUpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKHQubGVuZ3RoK1wiLUQgb3V0cHV0IHNhbXBsaW5nIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpfX0oZS5sb2dpY2FsU2hhcGUsYyksbz1mdW5jdGlvbih0KXtyZXR1cm5cIlxcbiAgICB2b2lkIHNldE91dHB1dChmbG9hdCB2YWwpIHtcXG4gICAgICBcIit0Lm91dHB1dCtcIiA9IHZlYzQodmFsLCAwLCAwLCAwKTtcXG4gICAgfVxcbiAgXCJ9KGwpKSxyJiYoaCs9aXIpLFtoLGYsbyxzLGEsdSxuXS5qb2luKFwiXFxuXCIpfWZ1bmN0aW9uIFluKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZTtzd2l0Y2goZS5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9dC5uYW1lLG49XCJnZXRcIitlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSk7aWYodC5zaGFwZUluZm8uaXNVbmlmb3JtKXJldHVyblwiZmxvYXQgXCIrbitcIigpIHtyZXR1cm4gXCIrZStcIjt9XCI7dmFyIHI9dC5zaGFwZUluZm8udGV4U2hhcGUsaT1yWzBdLGE9clsxXTtpZigxPT09aSYmMT09PWEpcmV0dXJuXCJcXG4gICAgICBmbG9hdCBcIituK1wiKCkge1xcbiAgICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrZStcIiwgaGFsZkNSKTtcXG4gICAgICB9XFxuICAgIFwiO3ZhciBvPXQuc2hhcGVJbmZvLnRleFNoYXBlO3JldHVyblwiXFxuICAgIGZsb2F0IFwiK24rXCIoKSB7XFxuICAgICAgdmVjMiB1diA9IHV2RnJvbUZsYXQoXCIrb1swXStcIiwgXCIrb1sxXStcIiwgXCIrYXIoZSkrXCIpO1xcbiAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK2UrXCIsIHV2KTtcXG4gICAgfVxcbiAgXCJ9KHQpO2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9dC5uYW1lLG49XCJnZXRcIitlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSk7aWYodC5zaGFwZUluZm8uaXNVbmlmb3JtKXJldHVyblwiXFxuICAgICAgZmxvYXQgXCIrbitcIihpbnQgaW5kZXgpIHtcXG4gICAgICAgIFwiK29yKHQpK1wiXFxuICAgICAgfVxcbiAgICBcIjt2YXIgcj10LnNoYXBlSW5mby50ZXhTaGFwZSxpPXJbMF0sYT1yWzFdO2lmKDE9PT1hJiYxPT09aSlyZXR1cm5cIlxcbiAgICAgIGZsb2F0IFwiK24rXCIoaW50IGluZGV4KSB7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIitlK1wiLCBoYWxmQ1IpO1xcbiAgICAgIH1cXG4gICAgXCI7dmFyIG89YXIoZSk7cmV0dXJuIDE9PT1hP1wiXFxuICAgICAgZmxvYXQgXCIrbitcIihpbnQgaW5kZXgpIHtcXG4gICAgICAgIHZlYzIgdXYgPSB2ZWMyKDAuNSwgKGZsb2F0KGluZGV4ICsgXCIrbytcIikgKyAwLjUpIC8gXCIraStcIi4wKTtcXG4gICAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK2UrXCIsIHV2KTtcXG4gICAgICB9XFxuICAgIFwiOjE9PT1pP1wiXFxuICAgICAgZmxvYXQgXCIrbitcIihpbnQgaW5kZXgpIHtcXG4gICAgICAgIHZlYzIgdXYgPSB2ZWMyKChmbG9hdChpbmRleCArIFwiK28rXCIpICsgMC41KSAvIFwiK2ErXCIuMCwgMC41KTtcXG4gICAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK2UrXCIsIHV2KTtcXG4gICAgICB9XFxuICAgIFwiOlwiXFxuICAgIGZsb2F0IFwiK24rXCIoaW50IGluZGV4KSB7XFxuICAgICAgdmVjMiB1diA9IHV2RnJvbUZsYXQoXCIraStcIiwgXCIrYStcIiwgaW5kZXggKyBcIitvK1wiKTtcXG4gICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIitlK1wiLCB1dik7XFxuICAgIH1cXG4gIFwifSh0KTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxuPXQubmFtZSxyPVwiZ2V0XCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnNsaWNlKDEpLGk9dC5zaGFwZUluZm8udGV4U2hhcGU7aWYobnVsbCE9aSYmUyhlLGkpKXt2YXIgYT1pWzBdO3JldHVyblwiXFxuICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCkge1xcbiAgICAgIHZlYzIgdXYgPSAodmVjMihjb2wsIHJvdykgKyBoYWxmQ1IpIC8gdmVjMihcIitpWzFdK1wiLjAsIFwiK2ErXCIuMCk7XFxuICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICB9XFxuICBcIn12YXIgbz1UKGUpLHM9by5uZXdTaGFwZSx1PW8ua2VwdERpbXMsYz1zO2lmKGMubGVuZ3RoPGUubGVuZ3RoKXJldHVyblwiXFxuICAgICAgXCIrWW4odXIodCxjKSkrXCJcXG4gICAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wpIHtcXG4gICAgICAgIHJldHVybiBcIityK1wiKFwiK2NyKFtcInJvd1wiLFwiY29sXCJdLHUpK1wiKTtcXG4gICAgICB9XFxuICAgIFwiO2lmKHQuc2hhcGVJbmZvLmlzVW5pZm9ybSlyZXR1cm5cIlxcbiAgICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCkge1xcbiAgICAgICAgaW50IGluZGV4ID0gcm91bmQoZG90KHZlYzIocm93LCBjb2wpLCB2ZWMyKFwiK2VbMV0rXCIsIDEpKSk7XFxuICAgICAgICBcIitvcih0KStcIlxcbiAgICAgIH1cXG4gICAgXCI7dmFyIGw9aVswXSxmPWlbMV0saD1hcihuKTtyZXR1cm4gMT09PWY/XCJcXG4gICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sKSB7XFxuICAgICAgZmxvYXQgaW5kZXggPSBkb3QodmVjMyhyb3csIGNvbCwgXCIraCtcIiksIHZlYzMoXCIrZVsxXStcIiwgMSwgMSkpO1xcbiAgICAgIHZlYzIgdXYgPSB2ZWMyKDAuNSwgKGluZGV4ICsgMC41KSAvIFwiK2wrXCIuMCk7XFxuICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICB9XFxuICBcIjoxPT09bD9cIlxcbiAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wpIHtcXG4gICAgICBmbG9hdCBpbmRleCA9IGRvdCh2ZWMzKHJvdywgY29sLCBcIitoK1wiKSwgdmVjMyhcIitlWzFdK1wiLCAxLCAxKSk7XFxuICAgICAgdmVjMiB1diA9IHZlYzIoKGluZGV4ICsgMC41KSAvIFwiK2YrXCIuMCwgMC41KTtcXG4gICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgIH1cXG4gIFwiOlwiXFxuICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wpIHtcXG4gICAgLy8gRXhwbGljaXRseSB1c2UgaW50ZWdlciBvcGVyYXRpb25zIGFzIGRvdCgpIG9ubHkgd29ya3Mgb24gZmxvYXRzLlxcbiAgICBpbnQgaW5kZXggPSByb3cgKiBcIitlWzFdK1wiICsgY29sICsgXCIraCtcIjtcXG4gICAgdmVjMiB1diA9IHV2RnJvbUZsYXQoXCIrbCtcIiwgXCIrZitcIiwgaW5kZXgpO1xcbiAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICB9XFxuXCJ9KHQpO2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9dC5zaGFwZUluZm8ubG9naWNhbFNoYXBlLG49dC5uYW1lLHI9XCJnZXRcIituLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK24uc2xpY2UoMSksaT1lWzFdKmVbMl0sYT1lWzJdLG89VChlKSxzPW8ubmV3U2hhcGUsdT1vLmtlcHREaW1zLGM9cztpZihjLmxlbmd0aDxlLmxlbmd0aClyZXR1cm5cIlxcbiAgICAgICAgXCIrWW4odXIodCxjKSkrXCJcXG4gICAgICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCwgaW50IGRlcHRoKSB7XFxuICAgICAgICAgIHJldHVybiBcIityK1wiKFwiK2NyKFtcInJvd1wiLFwiY29sXCIsXCJkZXB0aFwiXSx1KStcIik7XFxuICAgICAgICB9XFxuICAgICAgXCI7aWYodC5zaGFwZUluZm8uaXNVbmlmb3JtKXJldHVyblwiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgpIHtcXG4gICAgICAgIGludCBpbmRleCA9IHJvdW5kKGRvdCh2ZWMzKHJvdywgY29sLCBkZXB0aCksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWMzKFwiK2krXCIsIFwiK2ErXCIsIDEpKSk7XFxuICAgICAgICBcIitvcih0KStcIlxcbiAgICAgIH1cXG4gICAgXCI7dmFyIGw9dC5zaGFwZUluZm8udGV4U2hhcGUsZj1sWzBdLGg9bFsxXSxwPXQuc2hhcGVJbmZvLmZsYXRPZmZzZXQ7cmV0dXJuIGg9PT1pJiZudWxsPT1wP1wiXFxuICAgICAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCkge1xcbiAgICAgICAgICBmbG9hdCB0ZXhSID0gZmxvYXQocm93KTtcXG4gICAgICAgICAgZmxvYXQgdGV4QyA9IGRvdCh2ZWMyKGNvbCwgZGVwdGgpLCB2ZWMyKFwiK2ErXCIsIDEpKTtcXG4gICAgICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvXFxuICAgICAgICAgICAgICAgICAgICAgdmVjMihcIitoK1wiLjAsIFwiK2YrXCIuMCk7XFxuICAgICAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK24rXCIsIHV2KTtcXG4gICAgICAgIH1cXG4gICAgICBcIjpoPT09YSYmbnVsbD09cD9cIlxcbiAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCkge1xcbiAgICAgIGZsb2F0IHRleFIgPSBkb3QodmVjMihyb3csIGNvbCksIHZlYzIoXCIrZVsxXStcIiwgMSkpO1xcbiAgICAgIGZsb2F0IHRleEMgPSBmbG9hdChkZXB0aCk7XFxuICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvIHZlYzIoXCIraCtcIi4wLCBcIitmK1wiLjApO1xcbiAgICAgIHJldHVybiBzYW1wbGVUZXh0dXJlKFwiK24rXCIsIHV2KTtcXG4gICAgfVxcbiAgXCI6XCJcXG4gICAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCkge1xcbiAgICAgICAgLy8gRXhwbGljaXRseSB1c2UgaW50ZWdlciBvcGVyYXRpb25zIGFzIGRvdCgpIG9ubHkgd29ya3Mgb24gZmxvYXRzLlxcbiAgICAgICAgaW50IGluZGV4ID0gcm93ICogXCIraStcIiArIGNvbCAqIFwiK2ErXCIgKyBkZXB0aCArIFwiK2FyKG4pK1wiO1xcbiAgICAgICAgdmVjMiB1diA9IHV2RnJvbUZsYXQoXCIrZitcIiwgXCIraCtcIiwgaW5kZXgpO1xcbiAgICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICAgIH1cXG4gIFwifSh0KTtjYXNlIDQ6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxuPXQubmFtZSxyPVwiZ2V0XCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnNsaWNlKDEpLGk9ZVszXSxhPWVbMl0qaSxvPWVbMV0qYSxzPVQoZSksdT1zLm5ld1NoYXBlLGM9cy5rZXB0RGltcztpZih1Lmxlbmd0aDxlLmxlbmd0aClyZXR1cm5cIlxcbiAgICAgIFwiK1luKHVyKHQsdSkpK1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsIGludCBkZXB0aDIpIHtcXG4gICAgICAgIHJldHVybiBcIityK1wiKFwiK2NyKFtcInJvd1wiLFwiY29sXCIsXCJkZXB0aFwiLFwiZGVwdGgyXCJdLGMpK1wiKTtcXG4gICAgICB9XFxuICAgIFwiO2lmKHQuc2hhcGVJbmZvLmlzVW5pZm9ybSlyZXR1cm5cIlxcbiAgICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCwgaW50IGRlcHRoLCBpbnQgZGVwdGgyKSB7XFxuICAgICAgICBpbnQgaW5kZXggPSByb3VuZChkb3QodmVjNChyb3csIGNvbCwgZGVwdGgsIGRlcHRoMiksXFxuICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWM0KFwiK28rXCIsIFwiK2ErXCIsIFwiK2krXCIsIDEpKSk7XFxuICAgICAgICBcIitvcih0KStcIlxcbiAgICAgIH1cXG4gICAgXCI7dmFyIGw9dC5zaGFwZUluZm8uZmxhdE9mZnNldCxmPXQuc2hhcGVJbmZvLnRleFNoYXBlLGg9ZlswXSxwPWZbMV07cmV0dXJuIHA9PT1vJiZudWxsPT1sP1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsIGludCBkZXB0aDIpIHtcXG4gICAgICAgIGZsb2F0IHRleFIgPSBmbG9hdChyb3cpO1xcbiAgICAgICAgZmxvYXQgdGV4QyA9XFxuICAgICAgICAgICAgZG90KHZlYzMoY29sLCBkZXB0aCwgZGVwdGgyKSxcXG4gICAgICAgICAgICAgICAgdmVjMyhcIithK1wiLCBcIitpK1wiLCAxKSk7XFxuICAgICAgICB2ZWMyIHV2ID0gKHZlYzIodGV4QywgdGV4UikgKyBoYWxmQ1IpIC9cXG4gICAgICAgICAgICAgICAgICAgdmVjMihcIitwK1wiLjAsIFwiK2grXCIuMCk7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgICAgfVxcbiAgICBcIjpwPT09aSYmbnVsbD09bD9cIlxcbiAgICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCwgaW50IGRlcHRoLCBpbnQgZGVwdGgyKSB7XFxuICAgICAgICBmbG9hdCB0ZXhSID0gZG90KHZlYzMocm93LCBjb2wsIGRlcHRoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgdmVjMyhcIitlWzFdKmVbMl0rXCIsIFwiK2VbMl0rXCIsIDEpKTtcXG4gICAgICAgIGZsb2F0IHRleEMgPSBmbG9hdChkZXB0aDIpO1xcbiAgICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvXFxuICAgICAgICAgICAgICAgICAgdmVjMihcIitwK1wiLjAsIFwiK2grXCIuMCk7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCwgaW50IGRlcHRoMikge1xcbiAgICAgIC8vIEV4cGxpY2l0bHkgdXNlIGludGVnZXIgb3BlcmF0aW9ucyBhcyBkb3QoKSBvbmx5IHdvcmtzIG9uIGZsb2F0cy5cXG4gICAgICBpbnQgaW5kZXggPSByb3cgKiBcIitvK1wiICsgY29sICogXCIrYStcIiArXFxuICAgICAgICAgIGRlcHRoICogXCIraStcIiArIGRlcHRoMjtcXG4gICAgICB2ZWMyIHV2ID0gdXZGcm9tRmxhdChcIitoK1wiLCBcIitwK1wiLCBpbmRleCArIFwiK2FyKG4pK1wiKTtcXG4gICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgIH1cXG4gIFwifSh0KTtjYXNlIDU6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxuPXQubmFtZSxyPVwiZ2V0XCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnNsaWNlKDEpLGk9ZVs0XSxhPWVbM10qaSxvPWVbMl0qYSxzPWVbMV0qbyx1PVQoZSksYz11Lm5ld1NoYXBlLGw9dS5rZXB0RGltcztpZihjLmxlbmd0aDxlLmxlbmd0aClyZXR1cm5cIlxcbiAgICAgIFwiK1luKHVyKHQsYykpK1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsIGludCBkZXB0aDIsIGludCBkZXB0aDMpIHtcXG4gICAgICAgIHJldHVybiBcIityK1wiKFwiK2NyKFtcInJvd1wiLFwiY29sXCIsXCJkZXB0aFwiLFwiZGVwdGgyXCIsXCJkZXB0aDNcIl0sbCkrXCIpO1xcbiAgICAgIH1cXG4gICAgXCI7aWYodC5zaGFwZUluZm8uaXNVbmlmb3JtKXJldHVyblwiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsIGludCBkZXB0aDIsIGludCBkZXB0aDMpIHtcXG4gICAgICAgIGZsb2F0IGluZGV4ID0gZG90KFxcbiAgICAgICAgICB2ZWM0KHJvdywgY29sLCBkZXB0aCwgZGVwdGgyKSxcXG4gICAgICAgICAgdmVjNChcIitzK1wiLCBcIitvK1wiLCBcIithK1wiLCBcIitpK1wiKSkgK1xcbiAgICAgICAgICBkZXB0aDM7XFxuICAgICAgICBcIitvcih0KStcIlxcbiAgICAgIH1cXG4gICAgXCI7dmFyIGY9dC5zaGFwZUluZm8uZmxhdE9mZnNldCxoPXQuc2hhcGVJbmZvLnRleFNoYXBlLHA9aFswXSxkPWhbMV07cmV0dXJuIGQ9PT1zJiZudWxsPT1mP1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsIGludCBkZXB0aDIsIGludCBkZXB0aDMpIHtcXG4gICAgICAgIGludCB0ZXhSID0gcm93O1xcbiAgICAgICAgZmxvYXQgdGV4QyA9IGRvdCh2ZWM0KGNvbCwgZGVwdGgsIGRlcHRoMiwgZGVwdGgzKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgdmVjNChcIitvK1wiLCBcIithK1wiLCBcIitpK1wiLCAxKSk7XFxuICAgICAgICB2ZWMyIHV2ID0gKHZlYzIodGV4QywgdGV4UikgKyBoYWxmQ1IpIC9cXG4gICAgICAgICAgICAgICAgICAgdmVjMihcIitkK1wiLjAsIFwiK3ArXCIuMCk7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgICAgfVxcbiAgICBcIjpkPT09aSYmbnVsbD09Zj9cIlxcbiAgICAgIGZsb2F0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCwgaW50IGRlcHRoLCBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzKSB7XFxuICAgICAgICBmbG9hdCB0ZXhSID0gZG90KFxcbiAgICAgICAgICB2ZWM0KHJvdywgY29sLCBkZXB0aCwgZGVwdGgyKSxcXG4gICAgICAgICAgdmVjNChcIitlWzFdKmVbMl0qZVszXStcIixcXG4gICAgICAgICAgICAgICBcIitlWzJdKmVbM10rXCIsIFwiK2VbM10rXCIsIDEpKTtcXG4gICAgICAgIGludCB0ZXhDID0gZGVwdGgzO1xcbiAgICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvXFxuICAgICAgICAgICAgICAgICAgdmVjMihcIitkK1wiLjAsIFwiK3ArXCIuMCk7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCwgaW50IGRlcHRoMiwgaW50IGRlcHRoMykge1xcbiAgICAgIC8vIEV4cGxpY2l0bHkgdXNlIGludGVnZXIgb3BlcmF0aW9ucyBhcyBkb3QoKSBvbmx5IHdvcmtzIG9uIGZsb2F0cy5cXG4gICAgICBpbnQgaW5kZXggPSByb3cgKiBcIitzK1wiICsgY29sICogXCIrbytcIiArIGRlcHRoICogXCIrYStcIiArXFxuICAgICAgICAgIGRlcHRoMiAqIFwiK2krXCIgKyBkZXB0aDMgKyBcIithcihuKStcIjtcXG4gICAgICB2ZWMyIHV2ID0gdXZGcm9tRmxhdChcIitwK1wiLCBcIitkK1wiLCBpbmRleCk7XFxuICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICB9XFxuICBcIn0odCk7Y2FzZSA2OnJldHVybiBmdW5jdGlvbih0KXt2YXIgZT10LnNoYXBlSW5mby5sb2dpY2FsU2hhcGUsbj10Lm5hbWUscj1cImdldFwiK24uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKSxpPVQoZSksYT1pLm5ld1NoYXBlLG89aS5rZXB0RGltcztpZihhLmxlbmd0aDxlLmxlbmd0aClyZXR1cm5cIlxcbiAgICAgIFwiK1luKHVyKHQsYSkpK1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsXFxuICAgICAgICAgICAgICAgICAgICBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzLCBpbnQgZGVwdGg0KSB7XFxuICAgICAgICByZXR1cm4gXCIrcitcIihcIitjcihbXCJyb3dcIixcImNvbFwiLFwiZGVwdGhcIixcImRlcHRoMlwiLFwiZGVwdGgzXCIsXCJkZXB0aDRcIl0sbykrXCIpO1xcbiAgICAgIH1cXG4gICAgXCI7dmFyIHM9ZVs1XSx1PWVbNF0qcyxjPWVbM10qdSxsPWVbMl0qYyxmPWVbMV0qbDtpZih0LnNoYXBlSW5mby5pc1VuaWZvcm0pcmV0dXJuXCJcXG4gICAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCxcXG4gICAgICAgICAgICAgICAgICBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzLCBpbnQgZGVwdGg0KSB7XFxuICAgICAgICBpbnQgaW5kZXggPSByb3VuZChkb3QoXFxuICAgICAgICAgIHZlYzQocm93LCBjb2wsIGRlcHRoLCBkZXB0aDIpLFxcbiAgICAgICAgICB2ZWM0KFwiK2YrXCIsIFwiK2wrXCIsIFwiK2MrXCIsIFwiK3UrXCIpKSArXFxuICAgICAgICAgIGRvdChcXG4gICAgICAgICAgICB2ZWMyKGRlcHRoMywgZGVwdGg0KSxcXG4gICAgICAgICAgICB2ZWMyKFwiK3MrXCIsIDEpKSk7XFxuICAgICAgICBcIitvcih0KStcIlxcbiAgICAgIH1cXG4gICAgXCI7dmFyIGg9dC5zaGFwZUluZm8uZmxhdE9mZnNldCxwPXQuc2hhcGVJbmZvLnRleFNoYXBlLGQ9cFswXSxtPXBbMV07cmV0dXJuIG09PT1mJiZudWxsPT1oP1wiXFxuICAgICAgZmxvYXQgXCIrcitcIihpbnQgcm93LCBpbnQgY29sLCBpbnQgZGVwdGgsXFxuICAgICAgICAgICAgICAgICAgICBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzLCBpbnQgZGVwdGg0KSB7XFxuICAgICAgICBpbnQgdGV4UiA9IHJvdztcXG4gICAgICAgIGZsb2F0IHRleEMgPSBkb3QodmVjNChjb2wsIGRlcHRoLCBkZXB0aDIsIGRlcHRoMyksXFxuICAgICAgICAgIHZlYzQoXCIrbCtcIiwgXCIrYytcIiwgXCIrdStcIiwgXCIrcytcIikpICtcXG4gICAgICAgICAgICAgICBmbG9hdChkZXB0aDQpO1xcbiAgICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvXFxuICAgICAgICAgICAgICAgICAgIHZlYzIoXCIrbStcIi4wLCBcIitkK1wiLjApO1xcbiAgICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICAgIH1cXG4gICAgXCI6bT09PXMmJm51bGw9PWg/XCJcXG4gICAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCxcXG4gICAgICAgICAgICAgICAgICAgIGludCBkZXB0aDIsIGludCBkZXB0aDMsIGludCBkZXB0aDQpIHtcXG4gICAgICAgIGZsb2F0IHRleFIgPSBkb3QodmVjNChyb3csIGNvbCwgZGVwdGgsIGRlcHRoMiksXFxuICAgICAgICAgIHZlYzQoXCIrZVsxXSplWzJdKmVbM10qZVs0XStcIixcXG4gICAgICAgICAgICAgICBcIitlWzJdKmVbM10qZVs0XStcIixcXG4gICAgICAgICAgICAgICBcIitlWzNdKmVbNF0rXCIsXFxuICAgICAgICAgICAgICAgXCIrZVs0XStcIikpICsgZmxvYXQoZGVwdGgzKTtcXG4gICAgICAgIGludCB0ZXhDID0gZGVwdGg0O1xcbiAgICAgICAgdmVjMiB1diA9ICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvXFxuICAgICAgICAgICAgICAgICAgdmVjMihcIittK1wiLjAsIFwiK2QrXCIuMCk7XFxuICAgICAgICByZXR1cm4gc2FtcGxlVGV4dHVyZShcIituK1wiLCB1dik7XFxuICAgICAgfVxcbiAgICBcIjpcIlxcbiAgICBmbG9hdCBcIityK1wiKGludCByb3csIGludCBjb2wsIGludCBkZXB0aCxcXG4gICAgICAgICAgICAgICAgICBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzLCBpbnQgZGVwdGg0KSB7XFxuICAgICAgLy8gRXhwbGljaXRseSB1c2UgaW50ZWdlciBvcGVyYXRpb25zIGFzIGRvdCgpIG9ubHkgd29ya3Mgb24gZmxvYXRzLlxcbiAgICAgIGludCBpbmRleCA9IHJvdyAqIFwiK2YrXCIgKyBjb2wgKiBcIitsK1wiICsgZGVwdGggKiBcIitjK1wiICtcXG4gICAgICAgICAgZGVwdGgyICogXCIrdStcIiArIGRlcHRoMyAqIFwiK3MrXCIgKyBkZXB0aDQgKyBcIithcihuKStcIjtcXG4gICAgICB2ZWMyIHV2ID0gdXZGcm9tRmxhdChcIitkK1wiLCBcIittK1wiLCBpbmRleCk7XFxuICAgICAgcmV0dXJuIHNhbXBsZVRleHR1cmUoXCIrbitcIiwgdXYpO1xcbiAgICB9XFxuICBcIn0odCk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoZS5sZW5ndGgrXCItRCBpbnB1dCBzYW1wbGluZyBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKX19ZnVuY3Rpb24gSm4odCl7dmFyIGU9dC5zaGFwZUluZm8ubG9naWNhbFNoYXBlO3N3aXRjaChlLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBmdW5jdGlvbih0KXt2YXIgZT10Lm5hbWU7cmV0dXJuXCJcXG4gICAgdmVjNCBnZXRcIitlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkrXCIoKSB7XFxuICAgICAgcmV0dXJuIFwiK0ZuKCkudGV4dHVyZTJEK1wiKFwiK2UrXCIsIGhhbGZDUik7XFxuICAgIH1cXG4gIFwifSh0KTtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQubmFtZSxuPVwiZ2V0XCIrZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStlLnNsaWNlKDEpLHI9dC5zaGFwZUluZm8udGV4U2hhcGUsaT1bTWF0aC5jZWlsKHJbMF0vMiksTWF0aC5jZWlsKHJbMV0vMildLGE9Rm4oKTtyZXR1cm5cIlxcbiAgICB2ZWM0IFwiK24rXCIoaW50IGluZGV4KSB7XFxuICAgICAgdmVjMiB1diA9IHBhY2tlZFVWZnJvbTFEKFxcbiAgICAgICAgXCIraVswXStcIiwgXCIraVsxXStcIiwgaW5kZXgpO1xcbiAgICAgIHJldHVybiBcIithLnRleHR1cmUyRCtcIihcIitlK1wiLCB1dik7XFxuICAgIH1cXG4gIFwifSh0KTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxuPXQubmFtZSxyPVwiZ2V0XCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnNsaWNlKDEpLGk9dC5zaGFwZUluZm8udGV4U2hhcGUsYT1pWzBdLG89aVsxXSxzPUZuKCk7aWYobnVsbCE9aSYmUyhlLGkpKXJldHVyblwiXFxuICAgICAgdmVjNCBcIityK1wiKGludCByb3csIGludCBjb2wpIHtcXG4gICAgICAgIHZlYzIgdXYgPSAodmVjMihjb2wsIHJvdykgKyBoYWxmQ1IpIC8gdmVjMihcIitvK1wiLjAsIFwiK2ErXCIuMCk7XFxuXFxuICAgICAgICByZXR1cm4gXCIrcy50ZXh0dXJlMkQrXCIoXCIrbitcIiwgdXYpO1xcbiAgICAgIH1cXG4gICAgXCI7dmFyIHU9W01hdGguY2VpbChpWzBdLzIpLE1hdGguY2VpbChpWzFdLzIpXTtyZXR1cm5cIlxcbiAgICB2ZWM0IFwiK3IrXCIoaW50IHJvdywgaW50IGNvbCkge1xcbiAgICAgIHZlYzIgdXYgPSBwYWNrZWRVVmZyb20yRChcIitNYXRoLmNlaWwoZVsxXS8yKStcIiwgXCIrdVswXStcIiwgXCIrdVsxXStcIiwgcm93LCBjb2wpO1xcbiAgICAgIHJldHVybiBcIitzLnRleHR1cmUyRCtcIihcIituK1wiLCB1dik7XFxuICAgIH1cXG4gIFwifSh0KTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQuc2hhcGVJbmZvLmxvZ2ljYWxTaGFwZSxuPXQubmFtZSxyPVwiZ2V0XCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnNsaWNlKDEpLGk9dC5zaGFwZUluZm8udGV4U2hhcGUsYT1bTWF0aC5jZWlsKGlbMF0vMiksTWF0aC5jZWlsKGlbMV0vMildO2lmKDE9PT1lWzBdKXJldHVyblwiXFxuICAgICAgICBcIitKbih1cih0LGUuc2xpY2UoMSkpKStcIlxcbiAgICAgICAgdmVjNCBcIityK1wiKGludCBiLCBpbnQgcm93LCBpbnQgY29sKSB7XFxuICAgICAgICAgIHJldHVybiBcIityK1wiKFwiK2NyKFtcImJcIixcInJvd1wiLFwiY29sXCJdLFsxLDJdKStcIik7XFxuICAgICAgICB9XFxuICAgICAgXCI7dmFyIG89YVswXSxzPWFbMV0sdT1NYXRoLmNlaWwoZVsyXS8yKTtyZXR1cm5cIlxcbiAgICB2ZWM0IFwiK3IrXCIoaW50IGIsIGludCByb3csIGludCBjb2wpIHtcXG4gICAgICB2ZWMyIHV2ID0gcGFja2VkVVZmcm9tM0QoXFxuICAgICAgICBcIitvK1wiLCBcIitzK1wiLCBcIit1Kk1hdGguY2VpbChlWzFdLzIpK1wiLCBcIit1K1wiLCBiLCByb3csIGNvbCk7XFxuICAgICAgcmV0dXJuIFwiK0ZuKCkudGV4dHVyZTJEK1wiKFwiK24rXCIsIHV2KTtcXG4gICAgfVxcbiAgXCJ9KHQpO2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGU9dC5zaGFwZUluZm8ubG9naWNhbFNoYXBlLG49dC5uYW1lLHI9XCJnZXRcIituLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK24uc2xpY2UoMSksaT10LnNoYXBlSW5mby50ZXhTaGFwZSxhPVtNYXRoLmNlaWwoaVswXS8yKSxNYXRoLmNlaWwoaVsxXS8yKV0sbz1hWzBdLHM9YVsxXSx1PU1hdGguY2VpbChlWzNdLzIpLGM9dSpNYXRoLmNlaWwoZVsyXS8yKTtyZXR1cm5cIlxcbiAgICB2ZWM0IFwiK3IrXCIoaW50IGIyLCBpbnQgYiwgaW50IHJvdywgaW50IGNvbCkge1xcbiAgICAgIHZlYzIgdXYgPSBwYWNrZWRVVmZyb200RChcXG4gICAgICAgIFwiK28rXCIsIFwiK3MrXCIsIFwiK2MqZVsxXStcIixcXG4gICAgICAgIFwiK2MrXCIsIFwiK3UrXCIsIGIyLCBiLCByb3csIGNvbCk7XFxuICAgICAgcmV0dXJuIFwiK0ZuKCkudGV4dHVyZTJEK1wiKFwiK24rXCIsIHV2KTtcXG4gICAgfVxcbiAgXCJ9KHQpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiUGFja2VkIFwiK2UubGVuZ3RoK1wiLUQgaW5wdXQgc2FtcGxpbmcgaXMgbm90IHlldCBzdXBwb3J0ZWRcIil9fSFmdW5jdGlvbih0KXt0W3QuUkVOREVSPTBdPVwiUkVOREVSXCIsdFt0LlVQTE9BRD0xXT1cIlVQTE9BRFwiLHRbdC5QSVhFTFM9Ml09XCJQSVhFTFNcIix0W3QuRE9XTkxPQUQ9M109XCJET1dOTE9BRFwifShCbnx8KEJuPXt9KSksZnVuY3Rpb24odCl7dFt0LlVOUEFDS0VEX0ZMT0FUMTY9MF09XCJVTlBBQ0tFRF9GTE9BVDE2XCIsdFt0LlVOUEFDS0VEX0ZMT0FUMzI9MV09XCJVTlBBQ0tFRF9GTE9BVDMyXCIsdFt0LlBBQ0tFRF80WDFfVU5TSUdORURfQllURT0yXT1cIlBBQ0tFRF80WDFfVU5TSUdORURfQllURVwiLHRbdC5QQUNLRURfMlgyX0ZMT0FUMzI9M109XCJQQUNLRURfMlgyX0ZMT0FUMzJcIix0W3QuUEFDS0VEXzJYMl9GTE9BVDE2PTRdPVwiUEFDS0VEXzJYMl9GTE9BVDE2XCJ9KExufHwoTG49e30pKTt2YXIgWm49XCJcXG52ZWMyIHV2RnJvbUZsYXQoaW50IHRleE51bVIsIGludCB0ZXhOdW1DLCBpbnQgaW5kZXgpIHtcXG4gIGludCB0ZXhSID0gaW5kZXggLyB0ZXhOdW1DO1xcbiAgaW50IHRleEMgPSBpbmRleCAtIHRleFIgKiB0ZXhOdW1DO1xcbiAgcmV0dXJuICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvIHZlYzIodGV4TnVtQywgdGV4TnVtUik7XFxufVxcbnZlYzIgcGFja2VkVVZmcm9tMUQoaW50IHRleE51bVIsIGludCB0ZXhOdW1DLCBpbnQgaW5kZXgpIHtcXG4gIGludCB0ZXhlbEluZGV4ID0gaW5kZXggLyAyO1xcbiAgaW50IHRleFIgPSB0ZXhlbEluZGV4IC8gdGV4TnVtQztcXG4gIGludCB0ZXhDID0gdGV4ZWxJbmRleCAtIHRleFIgKiB0ZXhOdW1DO1xcbiAgcmV0dXJuICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvIHZlYzIodGV4TnVtQywgdGV4TnVtUik7XFxufVxcblwiLFFuPVwiXFxudmVjMiBwYWNrZWRVVmZyb20yRChpbnQgdGV4ZWxzSW5Mb2dpY2FsUm93LCBpbnQgdGV4TnVtUixcXG4gIGludCB0ZXhOdW1DLCBpbnQgcm93LCBpbnQgY29sKSB7XFxuICBpbnQgdGV4ZWxJbmRleCA9IChyb3cgLyAyKSAqIHRleGVsc0luTG9naWNhbFJvdyArIChjb2wgLyAyKTtcXG4gIGludCB0ZXhSID0gdGV4ZWxJbmRleCAvIHRleE51bUM7XFxuICBpbnQgdGV4QyA9IHRleGVsSW5kZXggLSB0ZXhSICogdGV4TnVtQztcXG4gIHJldHVybiAodmVjMih0ZXhDLCB0ZXhSKSArIGhhbGZDUikgLyB2ZWMyKHRleE51bUMsIHRleE51bVIpO1xcbn1cXG5cIix0cj1cIlxcbnZlYzIgcGFja2VkVVZmcm9tM0QoaW50IHRleE51bVIsIGludCB0ZXhOdW1DLFxcbiAgICBpbnQgdGV4ZWxzSW5CYXRjaCwgaW50IHRleGVsc0luTG9naWNhbFJvdywgaW50IGIsXFxuICAgIGludCByb3csIGludCBjb2wpIHtcXG4gIGludCBpbmRleCA9IGIgKiB0ZXhlbHNJbkJhdGNoICsgKHJvdyAvIDIpICogdGV4ZWxzSW5Mb2dpY2FsUm93ICsgKGNvbCAvIDIpO1xcbiAgaW50IHRleFIgPSBpbmRleCAvIHRleE51bUM7XFxuICBpbnQgdGV4QyA9IGluZGV4IC0gdGV4UiAqIHRleE51bUM7XFxuICByZXR1cm4gKHZlYzIodGV4QywgdGV4UikgKyBoYWxmQ1IpIC8gdmVjMih0ZXhOdW1DLCB0ZXhOdW1SKTtcXG59XFxuXCIsZXI9XCJcXG52ZWMyIHBhY2tlZFVWZnJvbTREKGludCB0ZXhOdW1SLCBpbnQgdGV4TnVtQywgaW50IHRleGVsc0luQmF0Y2gyLFxcbiAgICBpbnQgdGV4ZWxzSW5CYXRjaCwgaW50IHRleGVsc0luTG9naWNhbFJvdywgaW50IGIyLCBpbnQgYixcXG4gICAgaW50IHJvdywgaW50IGNvbCkge1xcbiAgaW50IGluZGV4ID0gYjIgKiB0ZXhlbHNJbkJhdGNoMiArIGIgKiB0ZXhlbHNJbkJhdGNoICtcXG4gICAgKHJvdyAvIDIpICogdGV4ZWxzSW5Mb2dpY2FsUm93ICsgKGNvbCAvIDIpO1xcbiAgaW50IHRleFIgPSBpbmRleCAvIHRleE51bUM7XFxuICBpbnQgdGV4QyA9IGluZGV4IC0gdGV4UiAqIHRleE51bUM7XFxuICByZXR1cm4gKHZlYzIodGV4QywgdGV4UikgKyBoYWxmQ1IpIC8gdmVjMih0ZXhOdW1DLCB0ZXhOdW1SKTtcXG59XFxuXCIsbnI9XCJcXG52ZWMyIFVWZnJvbTVEKGludCB0ZXhOdW1SLCBpbnQgdGV4TnVtQywgaW50IHN0cmlkZTAsXFxuICAgIGludCBzdHJpZGUxLCBpbnQgc3RyaWRlMiwgaW50IHN0cmlkZTMsIGludCByb3csIGludCBjb2wsIGludCBkZXB0aCxcXG4gICAgaW50IGRlcHRoMiwgaW50IGRlcHRoMykge1xcbiAgLy8gRXhwbGljaXRseSB1c2UgaW50ZWdlciBvcGVyYXRpb25zIGFzIGRvdCgpIG9ubHkgd29ya3Mgb24gZmxvYXRzLlxcbiAgaW50IGluZGV4ID0gcm93ICogc3RyaWRlMCArIGNvbCAqIHN0cmlkZTEgK1xcbiAgICAgICAgICAgICAgZGVwdGggKiBzdHJpZGUyICsgZGVwdGgyICogc3RyaWRlMyArIGRlcHRoMztcXG4gIGludCB0ZXhSID0gaW5kZXggLyB0ZXhOdW1DO1xcbiAgaW50IHRleEMgPSBpbmRleCAtIHRleFIgKiB0ZXhOdW1DO1xcbiAgcmV0dXJuICh2ZWMyKHRleEMsIHRleFIpICsgaGFsZkNSKSAvIHZlYzIodGV4TnVtQywgdGV4TnVtUik7XFxufVxcblwiLHJyPVwiXFxudmVjMiBVVmZyb202RChpbnQgdGV4TnVtUiwgaW50IHRleE51bUMsIGludCBzdHJpZGUwLFxcbiAgICBpbnQgc3RyaWRlMSwgaW50IHN0cmlkZTIsIGludCBzdHJpZGUzLCBpbnQgc3RyaWRlNCxcXG4gICAgaW50IHJvdywgaW50IGNvbCwgaW50IGRlcHRoLCBpbnQgZGVwdGgyLCBpbnQgZGVwdGgzLCBpbnQgZGVwdGg0KSB7XFxuICAvLyBFeHBsaWNpdGx5IHVzZSBpbnRlZ2VyIG9wZXJhdGlvbnMgYXMgZG90KCkgb25seSB3b3JrcyBvbiBmbG9hdHMuXFxuICBpbnQgaW5kZXggPSByb3cgKiBzdHJpZGUwICsgY29sICogc3RyaWRlMSArIGRlcHRoICogc3RyaWRlMiArIGRlcHRoMiAqXFxuICAgIHN0cmlkZTMgKyBkZXB0aDMgKiBzdHJpZGU0ICsgZGVwdGg0O1xcbiAgaW50IHRleFIgPSBpbmRleCAvIHRleE51bUM7XFxuICBpbnQgdGV4QyA9IGluZGV4IC0gdGV4UiAqIHRleE51bUM7XFxuICByZXR1cm4gKHZlYzIodGV4QywgdGV4UikgKyBoYWxmQ1IpIC8gdmVjMih0ZXhOdW1DLCB0ZXhOdW1SKTtcXG59XFxuXCIsaXI9XCJcXG4gIGZsb2F0IGdldENoYW5uZWwodmVjNCBmcmFnLCB2ZWMyIGlubmVyRGltcykge1xcbiAgICB2ZWMyIG1vZENvb3JkID0gbW9kKGlubmVyRGltcywgMi4pO1xcbiAgICByZXR1cm4gbW9kQ29vcmQueCA9PSAwLiA/XFxuICAgICAgKG1vZENvb3JkLnkgPT0gMC4gPyBmcmFnLnIgOiBmcmFnLmcpIDpcXG4gICAgICAobW9kQ29vcmQueSA9PSAwLiA/IGZyYWcuYiA6IGZyYWcuYSk7XFxuICB9XFxuICBmbG9hdCBnZXRDaGFubmVsKHZlYzQgZnJhZywgaW50IGRpbSkge1xcbiAgICBmbG9hdCBtb2RDb29yZCA9IG1vZChmbG9hdChkaW0pLCAyLik7XFxuICAgIHJldHVybiBtb2RDb29yZCA9PSAwLiA/IGZyYWcuciA6IGZyYWcuZztcXG4gIH1cXG5cIjtmdW5jdGlvbiBhcih0KXtyZXR1cm5cIm9mZnNldFwiK3R9ZnVuY3Rpb24gb3IodCl7dmFyIGU9dC5uYW1lLG49RSh0LnNoYXBlSW5mby5sb2dpY2FsU2hhcGUpO3JldHVybiAxPT09bj9cInJldHVybiBcIitlK1wiO1wiOlwiXFxuICAgIGZvciAoaW50IGkgPSAwOyBpIDwgXCIrbitcIjsgaSsrKSB7XFxuICAgICAgaWYgKGkgPT0gaW5kZXgpIHtcXG4gICAgICAgIHJldHVybiBcIitlK1wiW2ldO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgXCJ9ZnVuY3Rpb24gc3IodCl7aWYodDw9MSlyZXR1cm5cImludFwiO2lmKDI9PT10KXJldHVyblwiaXZlYzJcIjtpZigzPT09dClyZXR1cm5cIml2ZWMzXCI7aWYoND09PXQpcmV0dXJuXCJpdmVjNFwiO2lmKDU9PT10KXJldHVyblwiaXZlYzVcIjtpZig2PT09dClyZXR1cm5cIml2ZWM2XCI7dGhyb3cgRXJyb3IoXCJHUFUgZm9yIHJhbmsgXCIrdCtcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKX1mdW5jdGlvbiB1cih0LGUpe3ZhciBuPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodCkpO3JldHVybiBuLnNoYXBlSW5mby5sb2dpY2FsU2hhcGU9ZSxufWZ1bmN0aW9uIGNyKHQsZSl7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSkuam9pbihcIiwgXCIpfXZhciBscj1mdW5jdGlvbih0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIl0sdGhpcy5vdXRwdXRTaGFwZT10O3ZhciByPXQubGVuZ3RoLGk9dFt0Lmxlbmd0aC0xXSxhPW4/XCI8XCI6XCI+XCI7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGludCBnZXRJbmRleChpbnQgaSkge1xcbiAgICAgICAgXCIrKG4/XCJyZXR1cm4gXCIraStcIiAtaSAtIDE7XCI6XCJyZXR1cm4gaTtcIikrXCJcXG4gICAgICB9XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgXCIrc3IocikrXCIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgZW5kID0gXCIrZnIocixcImNvb3Jkc1wiKStcIjtcXG4gICAgICAgIGZsb2F0IHZhbCA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IGkgPSBcIitpK1wiIC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcXG4gICAgICAgICAgaW50IGlkeCA9IGdldEluZGV4KGkpO1xcbiAgICAgICAgICBpZiAoaWR4IFwiK2ErXCIgZW5kKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgaWYgKGlkeCA9PSBlbmQgJiYgXCIrZStcIikge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICB9XFxuICAgICAgICAgIFwiK2ZyKHIsXCJjb29yZHNcIikrXCIgPSBpZHg7XFxuICAgICAgICAgIHZhbCArPSBnZXRYKFwiK2Z1bmN0aW9uKHQsZSl7aWYoMT09PXQpcmV0dXJuXCJcIitlO2lmKDI9PT10KXJldHVybiBlK1wiLngsIFwiK2UrXCIueVwiO2lmKDM9PT10KXJldHVybiBlK1wiLngsIFwiK2UrXCIueSwgXCIrZStcIi56XCI7aWYoND09PXQpcmV0dXJuIGUrXCIueCwgXCIrZStcIi55LCBcIitlK1wiLnosIFwiK2UrXCIud1wiO3Rocm93IEVycm9yKFwiQ3VtdWxhdGl2ZSBzdW0gZm9yIHJhbmsgXCIrdCtcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKX0ocixcImNvb3Jkc1wiKStcIik7XFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQodmFsKTtcXG4gICAgICB9XFxuICAgIFwifTtmdW5jdGlvbiBmcih0LGUpe2lmKDE9PT10KXJldHVyblwiXCIrZTtpZigyPT09dClyZXR1cm4gZStcIi55XCI7aWYoMz09PXQpcmV0dXJuIGUrXCIuelwiO2lmKDQ9PT10KXJldHVybiBlK1wiLndcIjt0aHJvdyBFcnJvcihcIkN1bXVsYXRpdmUgc3VtIGZvciByYW5rIFwiK3QrXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIil9dmFyIGhyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIl0sdGhpcy5vdXRwdXRTaGFwZT1bXSx0aGlzLm91dHB1dFNoYXBlPXQsdGhpcy5ibG9ja1NpemU9ZSx0aGlzLmRhdGFGb3JtYXQ9bix0aGlzLnVzZXJDb2RlPVwiXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICBpbnQgYiA9IGNvb3Jkc1swXTtcXG4gICAgICBpbnQgaCA9IFwiK3RoaXMuZ2V0SGVpZ2h0Q29vcmRTdHJpbmcoKStcIjtcXG4gICAgICBpbnQgdyA9IFwiK3RoaXMuZ2V0V2lkdGhDb29yZFN0cmluZygpK1wiO1xcbiAgICAgIGludCBkID0gXCIrdGhpcy5nZXREZXB0aENvb3JkU3RyaW5nKCkrXCI7XFxuXFxuICAgICAgaW50IGluX2ggPSBoIC8gXCIrZStcIjtcXG4gICAgICBpbnQgb2Zmc2V0X2ggPSBpbW9kKGgsIFwiK2UrXCIpO1xcbiAgICAgIGludCBpbl93ID0gdyAvIFwiK2UrXCI7XFxuICAgICAgaW50IG9mZnNldF93ID0gaW1vZCh3LCBcIitlK1wiKTtcXG4gICAgICBpbnQgb2Zmc2V0X2QgPSAob2Zmc2V0X2ggKiBcIitlK1wiICsgb2Zmc2V0X3cpICpcXG4gICAgICAgIFwiK3RoaXMuZ2V0T3V0cHV0RGVwdGhTaXplKCkrXCI7XFxuICAgICAgaW50IGluX2QgPSBkICsgb2Zmc2V0X2Q7XFxuXFxuICAgICAgZmxvYXQgcmVzdWx0ID0gXCIrdGhpcy5nZXRJbnB1dFNhbXBsaW5nU3RyaW5nKCkrXCI7XFxuICAgICAgc2V0T3V0cHV0KHJlc3VsdCk7XFxuICAgIH1cXG4gIFwifXJldHVybiB0LnByb3RvdHlwZS5nZXRIZWlnaHRDb29yZFN0cmluZz1mdW5jdGlvbigpe3JldHVyblwiTkhXQ1wiPT09dGhpcy5kYXRhRm9ybWF0P1wiY29vcmRzWzFdXCI6XCJjb29yZHNbMl1cIn0sdC5wcm90b3R5cGUuZ2V0V2lkdGhDb29yZFN0cmluZz1mdW5jdGlvbigpe3JldHVyblwiTkhXQ1wiPT09dGhpcy5kYXRhRm9ybWF0P1wiY29vcmRzWzJdXCI6XCJjb29yZHNbM11cIn0sdC5wcm90b3R5cGUuZ2V0RGVwdGhDb29yZFN0cmluZz1mdW5jdGlvbigpe3JldHVyblwiTkhXQ1wiPT09dGhpcy5kYXRhRm9ybWF0P1wiY29vcmRzWzNdXCI6XCJjb29yZHNbMV1cIn0sdC5wcm90b3R5cGUuZ2V0T3V0cHV0RGVwdGhTaXplPWZ1bmN0aW9uKCl7cmV0dXJuXCJOSFdDXCI9PT10aGlzLmRhdGFGb3JtYXQ/dGhpcy5vdXRwdXRTaGFwZVszXTp0aGlzLm91dHB1dFNoYXBlWzFdfSx0LnByb3RvdHlwZS5nZXRJbnB1dFNhbXBsaW5nU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJOSFdDXCI9PT10aGlzLmRhdGFGb3JtYXQ/XCJnZXRYKGIsIGluX2gsIGluX3csIGluX2QpXCI6XCJnZXRYKGIsIGluX2QsIGluX2gsIGluX3cpXCJ9LHR9KCkscHI9ZnVuY3Rpb24odCl7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIl07dmFyIGU9Rm4oKTt0aGlzLm91dHB1dFNoYXBlPXQsdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGNvbnN0IGZsb2F0IEZMT0FUX01BWCA9IDEuNzAxNDExODRlMzg7XFxuICAgICAgY29uc3QgZmxvYXQgRkxPQVRfTUlOID0gMS4xNzU0OTQzNWUtMzg7XFxuXFxuICAgICAgbG93cCB2ZWM0IGVuY29kZV9mbG9hdChoaWdocCBmbG9hdCB2KSB7XFxuICAgICAgICBpZiAoaXNOYU4odikpIHtcXG4gICAgICAgICAgcmV0dXJuIHZlYzQoMjU1LCAyNTUsIDI1NSwgMjU1KTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGhpZ2hwIGZsb2F0IGF2ID0gYWJzKHYpO1xcblxcbiAgICAgICAgaWYoYXYgPCBGTE9BVF9NSU4pIHtcXG4gICAgICAgICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTtcXG4gICAgICAgIH0gZWxzZSBpZih2ID4gRkxPQVRfTUFYKSB7XFxuICAgICAgICAgIHJldHVybiB2ZWM0KDAuMCwgMC4wLCAxMjguMCwgMTI3LjApIC8gMjU1LjA7XFxuICAgICAgICB9IGVsc2UgaWYodiA8IC1GTE9BVF9NQVgpIHtcXG4gICAgICAgICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsICAxMjguMCwgMjU1LjApIC8gMjU1LjA7XFxuICAgICAgICB9XFxuXFxuICAgICAgICBoaWdocCB2ZWM0IGMgPSB2ZWM0KDAsMCwwLDApO1xcblxcbiAgICAgICAgaGlnaHAgZmxvYXQgZSA9IGZsb29yKGxvZzIoYXYpKTtcXG4gICAgICAgIGhpZ2hwIGZsb2F0IG0gPSBleHAyKGZyYWN0KGxvZzIoYXYpKSkgLSAxLjA7XFxuXFxuICAgICAgICBjWzJdID0gZmxvb3IoMTI4LjAgKiBtKTtcXG4gICAgICAgIG0gLT0gY1syXSAvIDEyOC4wO1xcbiAgICAgICAgY1sxXSA9IGZsb29yKDMyNzY4LjAgKiBtKTtcXG4gICAgICAgIG0gLT0gY1sxXSAvIDMyNzY4LjA7XFxuICAgICAgICBjWzBdID0gZmxvb3IoODM4ODYwOC4wICogbSk7XFxuXFxuICAgICAgICBoaWdocCBmbG9hdCBlYmlhcyA9IGUgKyAxMjcuMDtcXG4gICAgICAgIGNbM10gPSBmbG9vcihlYmlhcyAvIDIuMCk7XFxuICAgICAgICBlYmlhcyAtPSBjWzNdICogMi4wO1xcbiAgICAgICAgY1syXSArPSBmbG9vcihlYmlhcykgKiAxMjguMDtcXG5cXG4gICAgICAgIGNbM10gKz0gMTI4LjAgKiBzdGVwKDAuMCwgLXYpO1xcblxcbiAgICAgICAgcmV0dXJuIGMgLyAyNTUuMDtcXG4gICAgICB9XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgZmxvYXQgeCA9IGdldEFBdE91dENvb3JkcygpO1xcbiAgICAgICAgXCIrZS5vdXRwdXQrXCIgPSBlbmNvZGVfZmxvYXQoeCk7XFxuICAgICAgfVxcbiAgICBcIn0sZHI9XCJyZXR1cm4gcmVhbCAqIGV4cFIgLSBpbWFnICogZXhwSTtcIixtcj1cInJldHVybiByZWFsICogZXhwSSArIGltYWcgKiBleHBSO1wiLGdyPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wicmVhbFwiLFwiaW1hZ1wiXTt2YXIgcj1lWzFdO3RoaXMub3V0cHV0U2hhcGU9ZTt2YXIgaT1uP1wiMi4wICogXCIrTWF0aC5QSTpcIi0yLjAgKiBcIitNYXRoLlBJLGE9bj9yK1wiLjBcIjpcIjEuMFwiO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICBjb25zdCBmbG9hdCBleHBvbmVudE11bHRpcGxpZXIgPSBcIitpK1wiO1xcblxcbiAgICAgIGZsb2F0IHVuYXJ5T3BDb21wbGV4KGZsb2F0IHJlYWwsIGZsb2F0IGV4cFIsIGZsb2F0IGltYWcsIGZsb2F0IGV4cEkpIHtcXG4gICAgICAgIFwiK3QrXCJcXG4gICAgICB9XFxuXFxuICAgICAgZmxvYXQgbXVsTWF0REZUKGludCBiYXRjaCwgaW50IGluZGV4KSB7XFxuICAgICAgICBmbG9hdCBpbmRleFJhdGlvID0gZmxvYXQoaW5kZXgpIC8gZmxvYXQoXCIrcitcIik7XFxuICAgICAgICBmbG9hdCBleHBvbmVudE11bHRpcGxpZXJUaW1lc0luZGV4UmF0aW8gPVxcbiAgICAgICAgICAgIGV4cG9uZW50TXVsdGlwbGllciAqIGluZGV4UmF0aW87XFxuXFxuICAgICAgICBmbG9hdCByZXN1bHQgPSAwLjA7XFxuXFxuICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IFwiK3IrXCI7IGkrKykge1xcbiAgICAgICAgICAvLyB4ID0gKC0yfDIgKiBQSSAvIE4pICogaW5kZXggKiBpO1xcbiAgICAgICAgICBmbG9hdCB4ID0gZXhwb25lbnRNdWx0aXBsaWVyVGltZXNJbmRleFJhdGlvICogZmxvYXQoaSk7XFxuICAgICAgICAgIGZsb2F0IGV4cFIgPSBjb3MoeCk7XFxuICAgICAgICAgIGZsb2F0IGV4cEkgPSBzaW4oeCk7XFxuICAgICAgICAgIGZsb2F0IHJlYWwgPSBnZXRSZWFsKGJhdGNoLCBpKTtcXG4gICAgICAgICAgZmxvYXQgaW1hZyA9IGdldEltYWcoYmF0Y2gsIGkpO1xcblxcbiAgICAgICAgICByZXN1bHQgKz1cXG4gICAgICAgICAgICAgIHVuYXJ5T3BDb21wbGV4KHJlYWwsIGV4cFIsIGltYWcsIGV4cEkpIC8gXCIrYStcIjtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHJldHVybiByZXN1bHQ7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgc2V0T3V0cHV0KG11bE1hdERGVChjb29yZHNbMF0sIGNvb3Jkc1sxXSkpO1xcbiAgICAgIH1cXG4gICAgXCJ9LHlyPWZ1bmN0aW9uKHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdO3ZhciBlPUZuKCksbj10WzBdLHI9dFsxXTt0aGlzLm91dHB1dFNoYXBlPXQsdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMzIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IHRleFIgPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgdGV4QyA9IGNvb3Jkc1sxXTtcXG4gICAgICAgIGludCBkZXB0aCA9IGNvb3Jkc1syXTtcXG4gICAgICAgIHZlYzIgdXYgPSAodmVjMih0ZXhDLCB0ZXhSKSArIGhhbGZDUikgLyB2ZWMyKFwiK3IrXCIuMCwgXCIrbitcIi4wKTtcXG5cXG4gICAgICAgIHZlYzQgdmFsdWVzID0gXCIrZS50ZXh0dXJlMkQrXCIoQSwgdXYpO1xcbiAgICAgICAgZmxvYXQgdmFsdWU7XFxuICAgICAgICBpZiAoZGVwdGggPT0gMCkge1xcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlcy5yO1xcbiAgICAgICAgfSBlbHNlIGlmIChkZXB0aCA9PSAxKSB7XFxuICAgICAgICAgIHZhbHVlID0gdmFsdWVzLmc7XFxuICAgICAgICB9IGVsc2UgaWYgKGRlcHRoID09IDIpIHtcXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZXMuYjtcXG4gICAgICAgIH0gZWxzZSBpZiAoZGVwdGggPT0gMykge1xcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlcy5hO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgc2V0T3V0cHV0KGZsb29yKHZhbHVlICogMjU1LjAgKyAwLjUpKTtcXG4gICAgICB9XFxuICAgIFwifSx2cj1mdW5jdGlvbih0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcIkFcIixcImluZGljZXNcIl07dmFyIHI9dC5zbGljZSgpO3Jbbl09ZSx0aGlzLm91dHB1dFNoYXBlPXIsdGhpcy5yYW5rPXIubGVuZ3RoO3ZhciBpPXNyKHRoaXMucmFuayksYT1mdW5jdGlvbih0LGUpe3ZhciBuPXQubGVuZ3RoO2lmKG4+NCl0aHJvdyBFcnJvcihcIkdhdGhlciBmb3IgcmFuayBcIituK1wiIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpO2lmKDE9PT1uKXJldHVyblwiaW50KGdldEluZGljZXMocmVzUkMpKVwiO2Zvcih2YXIgcj1bXCJyZXNSQy54XCIsXCJyZXNSQy55XCIsXCJyZXNSQy56XCIsXCJyZXNSQy53XCJdLGk9W10sYT0wO2E8dC5sZW5ndGg7YSsrKWE9PT1lP2kucHVzaChcImludChnZXRJbmRpY2VzKFwiK3JbYV0rXCIpKVwiKTppLnB1c2goXCJcIityW2FdKTtyZXR1cm4gaS5qb2luKCl9KHQsbik7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIFwiK2krXCIgcmVzUkMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIHNldE91dHB1dChnZXRBKFwiK2ErXCIpKTtcXG4gICAgICB9XFxuICAgIFwifTt2YXIgYnI9ZnVuY3Rpb24odCxlLG4pe3RoaXMuc2xpY2VEaW09dCx0aGlzLnN0cmlkZXM9ZSx0aGlzLnZhcmlhYmxlTmFtZXM9W1wieFwiLFwiaW5kaWNlc1wiXSx0aGlzLm91dHB1dFNoYXBlPW47dmFyIHI9c3IoZS5sZW5ndGgpLGk9c3Iobi5sZW5ndGgpLGE9dGhpcy5zbGljZURpbT4xP1wic3RyaWRlc1tqXVwiOlwic3RyaWRlc1wiO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICAgIFwiK3IrXCIgc3RyaWRlcyA9IFwiK3IrXCIoXCIrdGhpcy5zdHJpZGVzK1wiKTtcXG4gICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgIFwiK2krXCIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICAgIGludCBmbGF0dGVuSW5kZXggPSAwO1xcbiAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IFwiK3RoaXMuc2xpY2VEaW0rXCI7IGorKykge1xcbiAgICAgICAgICAgIGludCBpbmRleCA9IHJvdW5kKGdldEluZGljZXMoY29vcmRzWzBdLCBqKSk7XFxuICAgICAgICAgICAgZmxhdHRlbkluZGV4ICs9IGluZGV4ICogXCIrYStcIjtcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBzZXRPdXRwdXQoZ2V0WChmbGF0dGVuSW5kZXgsIGNvb3Jkc1sxXSkpO1xcbiAgICAgICAgfVxcbiAgICAgIFwifTtmdW5jdGlvbiB3cih0LGUpe3ZhciBuPWUoKTtyZXR1cm4gRXIodCksbn12YXIgX3I9ITE7ZnVuY3Rpb24geHIodCl7X3I9dH1mdW5jdGlvbiBFcih0KXtpZihfcil7dmFyIGU9dC5nZXRFcnJvcigpO2lmKGUhPT10Lk5PX0VSUk9SKXRocm93IG5ldyBFcnJvcihcIldlYkdMIEVycm9yOiBcIitPcih0LGUpKX19dmFyIFNyPTUuOTZlLTgsTnI9NjU1MDQ7ZnVuY3Rpb24gSXIodCl7cmV0dXJuISEoTHQuZ2V0KFwiV0VCR0xfUkVOREVSX0ZMT0FUMzJfRU5BQkxFRFwiKXx8MD09PXR8fFNyPE1hdGguYWJzKHQpJiZNYXRoLmFicyh0KTxOcil9ZnVuY3Rpb24gT3IodCxlKXtzd2l0Y2goZSl7Y2FzZSB0Lk5PX0VSUk9SOnJldHVyblwiTk9fRVJST1JcIjtjYXNlIHQuSU5WQUxJRF9FTlVNOnJldHVyblwiSU5WQUxJRF9FTlVNXCI7Y2FzZSB0LklOVkFMSURfVkFMVUU6cmV0dXJuXCJJTlZBTElEX1ZBTFVFXCI7Y2FzZSB0LklOVkFMSURfT1BFUkFUSU9OOnJldHVyblwiSU5WQUxJRF9PUEVSQVRJT05cIjtjYXNlIHQuSU5WQUxJRF9GUkFNRUJVRkZFUl9PUEVSQVRJT046cmV0dXJuXCJJTlZBTElEX0ZSQU1FQlVGRkVSX09QRVJBVElPTlwiO2Nhc2UgdC5PVVRfT0ZfTUVNT1JZOnJldHVyblwiT1VUX09GX01FTU9SWVwiO2Nhc2UgdC5DT05URVhUX0xPU1RfV0VCR0w6cmV0dXJuXCJDT05URVhUX0xPU1RfV0VCR0xcIjtkZWZhdWx0OnJldHVyblwiVW5rbm93biBlcnJvciBjb2RlIFwiK2V9fWZ1bmN0aW9uIGtyKHQsZSl7cmV0dXJuIFlyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5nZXRFeHRlbnNpb24oZSl9LCdFeHRlbnNpb24gXCInK2UrJ1wiIG5vdCBzdXBwb3J0ZWQgb24gdGhpcyBicm93c2VyLicpfWZ1bmN0aW9uIEFyKHQsZSl7dmFyIG49WXIodCxmdW5jdGlvbigpe3JldHVybiB0LmNyZWF0ZVNoYWRlcih0LlZFUlRFWF9TSEFERVIpfSxcIlVuYWJsZSB0byBjcmVhdGUgdmVydGV4IFdlYkdMU2hhZGVyLlwiKTtpZih3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2hhZGVyU291cmNlKG4sZSl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuY29tcGlsZVNoYWRlcihuKX0pLCExPT09dC5nZXRTaGFkZXJQYXJhbWV0ZXIobix0LkNPTVBJTEVfU1RBVFVTKSl0aHJvdyBjb25zb2xlLmxvZyh0LmdldFNoYWRlckluZm9Mb2cobikpLG5ldyBFcnJvcihcIkZhaWxlZCB0byBjb21waWxlIHZlcnRleCBzaGFkZXIuXCIpO3JldHVybiBufWZ1bmN0aW9uIENyKHQsZSl7dmFyIG49WXIodCxmdW5jdGlvbigpe3JldHVybiB0LmNyZWF0ZVNoYWRlcih0LkZSQUdNRU5UX1NIQURFUil9LFwiVW5hYmxlIHRvIGNyZWF0ZSBmcmFnbWVudCBXZWJHTFNoYWRlci5cIik7aWYod3IodCxmdW5jdGlvbigpe3JldHVybiB0LnNoYWRlclNvdXJjZShuLGUpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LmNvbXBpbGVTaGFkZXIobil9KSwhMT09PXQuZ2V0U2hhZGVyUGFyYW1ldGVyKG4sdC5DT01QSUxFX1NUQVRVUykpdGhyb3cgZnVuY3Rpb24odCxlKXt2YXIgbj1Qci5leGVjKGUpO2lmKG51bGw9PW4pcmV0dXJuIGNvbnNvbGUubG9nKFwiQ291bGRuJ3QgcGFyc2UgbGluZSBudW1iZXIgaW4gZXJyb3I6IFwiK2UpLHZvaWQgY29uc29sZS5sb2codCk7Zm9yKHZhciByPStuWzFdLGk9dC5zcGxpdChcIlxcblwiKSxhPWkubGVuZ3RoLnRvU3RyaW5nKCkubGVuZ3RoKzIsbz1pLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBrKChlKzEpLnRvU3RyaW5nKCksYSkrdH0pLHM9MCx1PTA7dTxvLmxlbmd0aDt1Kyspcz1NYXRoLm1heChvW3VdLmxlbmd0aCxzKTt2YXIgYz1vLnNsaWNlKDAsci0xKSxsPW8uc2xpY2Uoci0xLHIpLGY9by5zbGljZShyKTtjb25zb2xlLmxvZyhjLmpvaW4oXCJcXG5cIikpLGNvbnNvbGUubG9nKGUuc3BsaXQoXCJcXG5cIilbMF0pLGNvbnNvbGUubG9nKFwiJWMgXCIrayhsWzBdLHMpLFwiYm9yZGVyOjFweCBzb2xpZCByZWQ7IGJhY2tncm91bmQtY29sb3I6I2UzZDJkMjsgY29sb3I6I2E2MTcxN1wiKSxjb25zb2xlLmxvZyhmLmpvaW4oXCJcXG5cIikpfShlLHQuZ2V0U2hhZGVySW5mb0xvZyhuKSksbmV3IEVycm9yKFwiRmFpbGVkIHRvIGNvbXBpbGUgZnJhZ21lbnQgc2hhZGVyLlwiKTtyZXR1cm4gbn12YXIgUHI9L0VSUk9SOiBbMC05XSs6KFswLTldKyk6L2c7ZnVuY3Rpb24gVHIodCl7cmV0dXJuIFlyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5jcmVhdGVQcm9ncmFtKCl9LFwiVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTFByb2dyYW0uXCIpfWZ1bmN0aW9uIFJyKHQsZSl7aWYod3IodCxmdW5jdGlvbigpe3JldHVybiB0LmxpbmtQcm9ncmFtKGUpfSksITE9PT10LmdldFByb2dyYW1QYXJhbWV0ZXIoZSx0LkxJTktfU1RBVFVTKSl0aHJvdyBjb25zb2xlLmxvZyh0LmdldFByb2dyYW1JbmZvTG9nKGUpKSxuZXcgRXJyb3IoXCJGYWlsZWQgdG8gbGluayB2ZXJ0ZXggYW5kIGZyYWdtZW50IHNoYWRlcnMuXCIpfWZ1bmN0aW9uIERyKHQsZSl7aWYod3IodCxmdW5jdGlvbigpe3JldHVybiB0LnZhbGlkYXRlUHJvZ3JhbShlKX0pLCExPT09dC5nZXRQcm9ncmFtUGFyYW1ldGVyKGUsdC5WQUxJREFURV9TVEFUVVMpKXRocm93IGNvbnNvbGUubG9nKHQuZ2V0UHJvZ3JhbUluZm9Mb2coZSkpLG5ldyBFcnJvcihcIlNoYWRlciBwcm9ncmFtIHZhbGlkYXRpb24gZmFpbGVkLlwiKX1mdW5jdGlvbiBNcih0LGUpe3ZhciBuPVlyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5jcmVhdGVCdWZmZXIoKX0sXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMQnVmZmVyXCIpO3JldHVybiB3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZEJ1ZmZlcih0LkFSUkFZX0JVRkZFUixuKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5idWZmZXJEYXRhKHQuQVJSQVlfQlVGRkVSLGUsdC5TVEFUSUNfRFJBVyl9KSxufWZ1bmN0aW9uIGpyKHQsZSl7dmFyIG49WXIodCxmdW5jdGlvbigpe3JldHVybiB0LmNyZWF0ZUJ1ZmZlcigpfSxcIlVuYWJsZSB0byBjcmVhdGUgV2ViR0xCdWZmZXJcIik7cmV0dXJuIHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kQnVmZmVyKHQuRUxFTUVOVF9BUlJBWV9CVUZGRVIsbil9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnVmZmVyRGF0YSh0LkVMRU1FTlRfQVJSQVlfQlVGRkVSLGUsdC5TVEFUSUNfRFJBVyl9KSxufWZ1bmN0aW9uIEJyKCl7cmV0dXJuIDI9PT1MdC5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpPzE6NH1mdW5jdGlvbiBMcih0KXtyZXR1cm4gWXIodCxmdW5jdGlvbigpe3JldHVybiB0LmNyZWF0ZVRleHR1cmUoKX0sXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMVGV4dHVyZS5cIil9ZnVuY3Rpb24genIodCxlKXt2YXIgbj1MdC5nZXQoXCJXRUJHTF9NQVhfVEVYVFVSRV9TSVpFXCIpO2lmKHQ8PTB8fGU8PTApe3ZhciByPVwiW1wiK3QrXCJ4XCIrZStcIl1cIjt0aHJvdyBuZXcgRXJyb3IoXCJSZXF1ZXN0ZWQgdGV4dHVyZSBzaXplIFwiK3IrXCIgaXMgaW52YWxpZC5cIil9aWYodD5ufHxlPm4pdGhyb3cgcj1cIltcIit0K1wieFwiK2UrXCJdXCIsbmV3IEVycm9yKFwiUmVxdWVzdGVkIHRleHR1cmUgc2l6ZSBcIityK1wiIGdyZWF0ZXIgdGhhbiBXZWJHTCBtYXhpbXVtIG9uIHRoaXMgYnJvd3NlciAvIEdQVSBbXCIrbitcInhcIituK1wiXS5cIil9ZnVuY3Rpb24gRnIodCl7cmV0dXJuIFlyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5jcmVhdGVGcmFtZWJ1ZmZlcigpfSxcIlVuYWJsZSB0byBjcmVhdGUgV2ViR0xGcmFtZWJ1ZmZlci5cIil9ZnVuY3Rpb24gVXIodCxlLG4scixpLGEsbyl7dmFyIHM9dC5nZXRBdHRyaWJMb2NhdGlvbihlLG4pO3JldHVybi0xIT09cyYmKHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kQnVmZmVyKHQuQVJSQVlfQlVGRkVSLHIpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LnZlcnRleEF0dHJpYlBvaW50ZXIocyxpLHQuRkxPQVQsITEsYSxvKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShzKX0pLCEwKX1mdW5jdGlvbiBWcih0LGUsbil7SnIodCxuKSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYWN0aXZlVGV4dHVyZSh0LlRFWFRVUkUwK24pfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LmJpbmRUZXh0dXJlKHQuVEVYVFVSRV8yRCxlKX0pfWZ1bmN0aW9uIFdyKHQsZSxuKXtyZXR1cm4gWXIodCxmdW5jdGlvbigpe3JldHVybiB0LmdldFVuaWZvcm1Mb2NhdGlvbihlLG4pfSwndW5pZm9ybSBcIicrbisnXCIgbm90IHByZXNlbnQgaW4gcHJvZ3JhbS4nKX1mdW5jdGlvbiBxcih0LGUsbil7cmV0dXJuIHQuZ2V0VW5pZm9ybUxvY2F0aW9uKGUsbil9ZnVuY3Rpb24gJHIodCxlLG4scixpKXt3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIFZyKHQsbixpKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC51bmlmb3JtMWkocixpKX0pfWZ1bmN0aW9uIEhyKHQsZSxuKXt3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZEZyYW1lYnVmZmVyKHQuRlJBTUVCVUZGRVIsbil9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuZnJhbWVidWZmZXJUZXh0dXJlMkQodC5GUkFNRUJVRkZFUix0LkNPTE9SX0FUVEFDSE1FTlQwLHQuVEVYVFVSRV8yRCxlLDApfSl9ZnVuY3Rpb24gS3IodCxlKXt3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZEZyYW1lYnVmZmVyKHQuRlJBTUVCVUZGRVIsZSl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuZnJhbWVidWZmZXJUZXh0dXJlMkQodC5GUkFNRUJVRkZFUix0LkNPTE9SX0FUVEFDSE1FTlQwLHQuVEVYVFVSRV8yRCxudWxsLDApfSl9ZnVuY3Rpb24gR3IodCl7dmFyIGU9dC5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKHQuRlJBTUVCVUZGRVIpO2lmKGUhPT10LkZSQU1FQlVGRkVSX0NPTVBMRVRFKXRocm93IG5ldyBFcnJvcihcIkVycm9yIGJpbmRpbmcgZnJhbWVidWZmZXI6IFwiK1hyKHQsZSkpfWZ1bmN0aW9uIFhyKHQsZSl7c3dpdGNoKGUpe2Nhc2UgdC5GUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0FUVEFDSE1FTlQ6cmV0dXJuXCJGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0FUVEFDSE1FTlRcIjtjYXNlIHQuRlJBTUVCVUZGRVJfSU5DT01QTEVURV9NSVNTSU5HX0FUVEFDSE1FTlQ6cmV0dXJuXCJGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX01JU1NJTkdfQVRUQUNITUVOVFwiO2Nhc2UgdC5GUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0RJTUVOU0lPTlM6cmV0dXJuXCJGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0RJTUVOU0lPTlNcIjtjYXNlIHQuRlJBTUVCVUZGRVJfVU5TVVBQT1JURUQ6cmV0dXJuXCJGUkFNRUJVRkZFUl9VTlNVUFBPUlRFRFwiO2RlZmF1bHQ6cmV0dXJuXCJ1bmtub3duIGVycm9yIFwiK2V9fWZ1bmN0aW9uIFlyKHQsZSxuKXt2YXIgcj13cih0LGZ1bmN0aW9uKCl7cmV0dXJuIGUoKX0pO2lmKG51bGw9PXIpdGhyb3cgbmV3IEVycm9yKG4pO3JldHVybiByfWZ1bmN0aW9uIEpyKHQsZSl7dmFyIG49dC5NQVhfQ09NQklORURfVEVYVFVSRV9JTUFHRV9VTklUUy0xLHI9ZSt0LlRFWFRVUkUwO2lmKHI8dC5URVhUVVJFMHx8cj5uKXRocm93IG5ldyBFcnJvcihcInRleHR1cmVVbml0IG11c3QgYmUgaW4gW2dsLlRFWFRVUkUwLCBnbC5URVhUVVJFXCIrbitcIl0uXCIpfWZ1bmN0aW9uIFpyKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTIpLEUodC5zbGljZSgwLHQubGVuZ3RoLWUpKX1mdW5jdGlvbiBRcih0KXtpZigwPT09dC5sZW5ndGgpdGhyb3cgRXJyb3IoXCJDYW5ub3QgZ2V0IHJvd3MgYW5kIGNvbHVtbnMgb2YgYW4gZW1wdHkgc2hhcGUgYXJyYXkuXCIpO3JldHVyblt0Lmxlbmd0aD4xP3RbdC5sZW5ndGgtMl06MSx0W3QubGVuZ3RoLTFdXX1mdW5jdGlvbiB0aSh0LGUpe3ZhciBuO3ZvaWQgMD09PWUmJihlPSExKTt2YXIgcj1MdC5nZXQoXCJXRUJHTF9NQVhfVEVYVFVSRV9TSVpFXCIpO2lmKGUmJihyKj0yLDE9PT0odD10Lm1hcChmdW5jdGlvbihlLG4pe3JldHVybiBuPj10Lmxlbmd0aC0yP2codFtuXSk6dFtuXX0pKS5sZW5ndGgmJih0PVsyLHRbMF1dKSksMiE9PXQubGVuZ3RoKXt2YXIgaT1UKHQpO3Q9aS5uZXdTaGFwZX12YXIgYT1FKHQpO2lmKHQubGVuZ3RoPD0xJiZhPD1yKXJldHVyblsxLGFdO2lmKDI9PT10Lmxlbmd0aCYmdFswXTw9ciYmdFsxXTw9cilyZXR1cm4gdDtpZigzPT09dC5sZW5ndGgmJnRbMF0qdFsxXTw9ciYmdFsyXTw9cilyZXR1cm5bdFswXSp0WzFdLHRbMl1dO2lmKDM9PT10Lmxlbmd0aCYmdFswXTw9ciYmdFsxXSp0WzJdPD1yKXJldHVyblt0WzBdLHRbMV0qdFsyXV07aWYoND09PXQubGVuZ3RoJiZ0WzBdKnRbMV0qdFsyXTw9ciYmdFszXTw9cilyZXR1cm5bdFswXSp0WzFdKnRbMl0sdFszXV07aWYoND09PXQubGVuZ3RoJiZ0WzBdPD1yJiZ0WzFdKnRbMl0qdFszXTw9cilyZXR1cm5bdFswXSx0WzFdKnRbMl0qdFszXV07aWYoZSl7dmFyIG89WnIodCkscz0yLHU9MjtyZXR1cm4gdC5sZW5ndGgmJihzPShuPVFyKHQpKVswXSx1PW5bMV0pLE8oYT1vKihzLzIpKih1LzIpKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIDIqdH0pfXJldHVybiBPKGEpfWZ1bmN0aW9uIGVpKHQpe3JldHVybiB0JTI9PTB9ZnVuY3Rpb24gbmkodCxlKXtpZihTKHQ9dC5zbGljZSgtMiksZT1lLnNsaWNlKC0yKSkpcmV0dXJuITA7aWYoIXQubGVuZ3RofHwhZS5sZW5ndGgpcmV0dXJuITA7aWYoMD09PXRbMF18fDA9PT10WzFdfHwwPT09ZVswXXx8MD09PWVbMV0pcmV0dXJuITA7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl7dmFyIG49dC5zbGljZSgtMSlbMF0scj1lLnNsaWNlKC0xKVswXTtpZihuPT09cilyZXR1cm4hMDtpZihlaShuKSYmZWkocikmJigxPT09dFswXXx8MT09PWVbMF0pKXJldHVybiEwfXJldHVybiB0WzFdPT09ZVsxXSYmZWkodFswXSkmJmVpKGVbMF0pfXZhciByaT1PYmplY3QuZnJlZXplKHtjYWxsQW5kQ2hlY2s6d3IsZW5hYmxlRGVidWdXZWJHTEVycm9yQ2hlY2tpbmc6eHIsY2hlY2tXZWJHTEVycm9yOkVyLGNhbkJlUmVwcmVzZW50ZWQ6SXIsZ2V0V2ViR0xFcnJvck1lc3NhZ2U6T3IsZ2V0RXh0ZW5zaW9uT3JUaHJvdzprcixjcmVhdGVWZXJ0ZXhTaGFkZXI6QXIsY3JlYXRlRnJhZ21lbnRTaGFkZXI6Q3IsY3JlYXRlUHJvZ3JhbTpUcixsaW5rUHJvZ3JhbTpScix2YWxpZGF0ZVByb2dyYW06RHIsY3JlYXRlU3RhdGljVmVydGV4QnVmZmVyOk1yLGNyZWF0ZVN0YXRpY0luZGV4QnVmZmVyOmpyLGdldE51bUNoYW5uZWxzOkJyLGNyZWF0ZVRleHR1cmU6THIsdmFsaWRhdGVUZXh0dXJlU2l6ZTp6cixjcmVhdGVGcmFtZWJ1ZmZlcjpGcixiaW5kVmVydGV4QnVmZmVyVG9Qcm9ncmFtQXR0cmlidXRlOlVyLGJpbmRUZXh0dXJlVW5pdDpWcix1bmJpbmRUZXh0dXJlVW5pdDpmdW5jdGlvbih0LGUpe0pyKHQsZSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LmFjdGl2ZVRleHR1cmUodC5URVhUVVJFMCtlKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kVGV4dHVyZSh0LlRFWFRVUkVfMkQsbnVsbCl9KX0sZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbk9yVGhyb3c6V3IsZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbjpxcixiaW5kVGV4dHVyZVRvUHJvZ3JhbVVuaWZvcm1TYW1wbGVyOiRyLGJpbmRDYW52YXNUb0ZyYW1lYnVmZmVyOmZ1bmN0aW9uKHQpe3dyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kRnJhbWVidWZmZXIodC5GUkFNRUJVRkZFUixudWxsKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC52aWV3cG9ydCgwLDAsdC5jYW52YXMud2lkdGgsdC5jYW52YXMuaGVpZ2h0KX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5zY2lzc29yKDAsMCx0LmNhbnZhcy53aWR0aCx0LmNhbnZhcy5oZWlnaHQpfSl9LGJpbmRDb2xvclRleHR1cmVUb0ZyYW1lYnVmZmVyOkhyLHVuYmluZENvbG9yVGV4dHVyZUZyb21GcmFtZWJ1ZmZlcjpLcix2YWxpZGF0ZUZyYW1lYnVmZmVyOkdyLGdldEZyYW1lYnVmZmVyRXJyb3JNZXNzYWdlOlhyLGdldEJhdGNoRGltOlpyLGdldFJvd3NDb2xzOlFyLGdldFRleHR1cmVTaGFwZUZyb21Mb2dpY2FsU2hhcGU6dGksaXNSZXNoYXBlRnJlZTpuaX0pO2Z1bmN0aW9uIGlpKHQpe3ZhciBlPUZuKCk7cmV0dXJuIEFyKHQsZS52ZXJzaW9uK1wiXFxuICAgIHByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4gICAgXCIrZS5hdHRyaWJ1dGUrXCIgdmVjMyBjbGlwU3BhY2VQb3M7XFxuICAgIFwiK2UuYXR0cmlidXRlK1wiIHZlYzIgdXY7XFxuICAgIFwiK2UudmFyeWluZ1ZzK1wiIHZlYzIgcmVzdWx0VVY7XFxuXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoY2xpcFNwYWNlUG9zLCAxKTtcXG4gICAgICByZXN1bHRVViA9IHV2O1xcbiAgICB9XCIpfWZ1bmN0aW9uIGFpKHQpe3JldHVybiBNcih0LG5ldyBGbG9hdDMyQXJyYXkoWy0xLDEsMCwwLDEsLTEsLTEsMCwwLDAsMSwxLDAsMSwxLDEsLTEsMCwxLDBdKSl9ZnVuY3Rpb24gb2kodCl7cmV0dXJuIGpyKHQsbmV3IFVpbnQxNkFycmF5KFswLDEsMiwyLDEsM10pKX1mdW5jdGlvbiBzaSh0LGUpe3ZhciBuLHIsaSxhLG8scyx1LGM9dDtyZXR1cm4gMj09PUx0LmdldChcIldFQkdMX1ZFUlNJT05cIik/KG49Yy5SMzJGLHI9Yy5SMTZGLGk9Yy5SR0JBMzJGLGE9Yy5SRUQsbz00LHM9MSx1PWMuSEFMRl9GTE9BVCk6KG49dC5SR0JBLHI9dC5SR0JBLGk9Yy5SR0JBLGE9dC5SR0JBLG89NCxzPTQsdT1udWxsIT1lP2UuSEFMRl9GTE9BVF9PRVM6bnVsbCkse2ludGVybmFsRm9ybWF0RmxvYXQ6bixpbnRlcm5hbEZvcm1hdEhhbGZGbG9hdDpyLGludGVybmFsRm9ybWF0UGFja2VkRmxvYXQ6aSx0ZXh0dXJlRm9ybWF0RmxvYXQ6YSxkb3dubG9hZFRleHR1cmVGb3JtYXQ6dC5SR0JBLGRvd25sb2FkVW5wYWNrTnVtQ2hhbm5lbHM6byxkZWZhdWx0TnVtQ2hhbm5lbHM6cyx0ZXh0dXJlVHlwZUhhbGZGbG9hdDp1fX1mdW5jdGlvbiB1aSh0LGUsbixyLGksYSl7enIoZSxuKTt2YXIgbz1Mcih0KSxzPXQuVEVYVFVSRV8yRDtyZXR1cm4gd3IodCxmdW5jdGlvbigpe3JldHVybiB0LmJpbmRUZXh0dXJlKHMsbyl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQudGV4UGFyYW1ldGVyaShzLHQuVEVYVFVSRV9XUkFQX1MsdC5DTEFNUF9UT19FREdFKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC50ZXhQYXJhbWV0ZXJpKHMsdC5URVhUVVJFX1dSQVBfVCx0LkNMQU1QX1RPX0VER0UpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LnRleFBhcmFtZXRlcmkocyx0LlRFWFRVUkVfTUlOX0ZJTFRFUix0Lk5FQVJFU1QpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LnRleFBhcmFtZXRlcmkocyx0LlRFWFRVUkVfTUFHX0ZJTFRFUix0Lk5FQVJFU1QpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LnRleEltYWdlMkQocywwLHIsZSxuLDAsaSxhLG51bGwpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LmJpbmRUZXh0dXJlKHQuVEVYVFVSRV8yRCxudWxsKX0pLG99ZnVuY3Rpb24gY2kodCxlLG4scil7dmFyIGk9V24oZSxuKTtyZXR1cm4gdWkodCxpWzBdLGlbMV0sci5pbnRlcm5hbEZvcm1hdEZsb2F0LHIudGV4dHVyZUZvcm1hdEZsb2F0LHQuRkxPQVQpfWZ1bmN0aW9uIGxpKHQsZSxuLHIpe3ZhciBpPVduKGUsbik7cmV0dXJuIHVpKHQsaVswXSxpWzFdLHIuaW50ZXJuYWxGb3JtYXRGbG9hdCxyLnRleHR1cmVGb3JtYXRGbG9hdCxyLnRleHR1cmVUeXBlSGFsZkZsb2F0KX1mdW5jdGlvbiBmaSh0LGUsbixyKXt2YXIgaT1XbihlLG4pO3JldHVybiB1aSh0LGlbMF0saVsxXSx0LlJHQkEsdC5SR0JBLHQuVU5TSUdORURfQllURSl9ZnVuY3Rpb24gaGkodCxlLG4scil7dmFyIGk9SG4oZSxuKTtyZXR1cm4gdWkodCxpWzBdLGlbMV0sci5pbnRlcm5hbEZvcm1hdFBhY2tlZEZsb2F0LHQuUkdCQSx0LkZMT0FUKX1mdW5jdGlvbiBwaSh0LGUsbixyKXt2YXIgaT1IbihlLG4pO3JldHVybiB1aSh0LGlbMF0saVsxXSxyLmludGVybmFsRm9ybWF0SGFsZkZsb2F0LHQuUkdCQSxyLnRleHR1cmVUeXBlSGFsZkZsb2F0KX1mdW5jdGlvbiBkaSh0LGUsbil7cmV0dXJuIHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kQnVmZmVyKHQuQVJSQVlfQlVGRkVSLG4pfSksVXIodCxlLFwiY2xpcFNwYWNlUG9zXCIsbiwzLDIwLDApJiZVcih0LGUsXCJ1dlwiLG4sMiwyMCwxMil9ZnVuY3Rpb24gbWkodCxlLG4pe3dyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kVGV4dHVyZSh0LlRFWFRVUkVfMkQsZSl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQudGV4SW1hZ2UyRCh0LlRFWFRVUkVfMkQsMCx0LlJHQkEsdC5SR0JBLHQuVU5TSUdORURfQllURSxuKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kVGV4dHVyZSh0LlRFWFRVUkVfMkQsbnVsbCl9KX1mdW5jdGlvbiBnaSh0LGUsbixyLGksYSl7enIobixyKSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZFRleHR1cmUodC5URVhUVVJFXzJELGUpfSksd3IodCxmdW5jdGlvbigpe3JldHVybiB0LnRleFN1YkltYWdlMkQodC5URVhUVVJFXzJELDAsMCwwLG4scixhLHQuRkxPQVQsaSl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZFRleHR1cmUodC5URVhUVVJFXzJELG51bGwpfSl9ZnVuY3Rpb24geWkodCxlLG4scixpLGEsbyl7dmFyIHMsdT1XbihuLHIpLGM9dVswXSxsPXVbMV07MT09PW8uZGVmYXVsdE51bUNoYW5uZWxzP3M9aTpmdW5jdGlvbih0LGUsbil7dmFyIHI9cW4odC5sZW5ndGgsbik7aWYoZS5sZW5ndGg8cil0aHJvdyBuZXcgRXJyb3IoXCJ1bnBhY2tlZEFycmF5IGxlbmd0aCAoXCIrZS5sZW5ndGgrXCIpIG11c3QgYmUgPj0gXCIrcik7Zm9yKHZhciBpPTAsYT0wO2E8dC5sZW5ndGg7KythKWVbaV09dFthXSxpKz1ufShpLHM9bmV3IEZsb2F0MzJBcnJheShxbihpLmxlbmd0aCxhKSksYSksZ2kodCxlLGMsbCxzLG8udGV4dHVyZUZvcm1hdEZsb2F0KX1mdW5jdGlvbiB2aSh0LGUsbixyLGksYSxvLHMsdSl7dmFyIGM9SG4oYSxvKSxsPWNbMF0sZj1jWzFdLGg9bmV3IEZsb2F0MzJBcnJheShLbihhLG8pKTsoZnVuY3Rpb24odCxlLG4scixpKXtmb3IodmFyIGE9ciUyPT0xLG89biUyPT0xLHM9TWF0aC5mbG9vcihyLzIpLHU9TWF0aC5mbG9vcihuLzIpLGM9TWF0aC5jZWlsKHIvMiksbD1jKk1hdGguY2VpbChuLzIpLGY9ZyhuKSpnKHIpLGg9MDtoPGU7aCsrKXtmb3IodmFyIHA9aCpuKnIsZD1oKmYsbT1hPzQ6MCx5PXIsdj1kLGI9MDtiPHU7KytiKXtmb3IodmFyIHc9MipiKnIsXz0wO188czsrK18pe3ZhciB4PXArdysyKl87aVt2XT10W3hdLGlbdisxXT10W3grMV0saVt2KzJdPXRbeCt5XSxpW3YrM109dFt4K3krMV0sdis9NH12Kz1tfWlmKGEpe3g9cCtyLTEsdj1kKzQqKGMtMSk7dmFyIEU9MipyO2ZvcihtPTQqYyxiPTA7Yjx1OysrYilpW3ZdPXRbeF0saVt2KzJdPXRbeCtyXSx4Kz1FLHYrPW19aWYobyl7Zm9yKHg9cCsobi0xKSpyLHY9ZCs0KihsLWMpLF89MDtfPHM7KytfKWlbdisrXT10W3grK10saVt2KytdPXRbeCsrXSx2Kz0yO2EmJm8mJihpW2QrZi00XT10W3hdKX19fSkocyxuLHIsaSxoKSxnaSh0LGUsbCxmLGgsdC5SR0JBKX1mdW5jdGlvbiBiaSh0LGUsbixyLGkpe3ZhciBhPWU7aWYoMj09PUx0LmdldChcIldFQkdMX1ZFUlNJT05cIikpe3ZhciBvPXQscz1vLmNyZWF0ZUJ1ZmZlcigpO3dyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iaW5kQnVmZmVyKG8uUElYRUxfUEFDS19CVUZGRVIscyl9KTt2YXIgdT00KnFuKG4qcixpLmRvd25sb2FkVW5wYWNrTnVtQ2hhbm5lbHMpO3dyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5idWZmZXJEYXRhKG8uUElYRUxfUEFDS19CVUZGRVIsdSxvLlNUUkVBTV9SRUFEKX0pLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gby5yZWFkUGl4ZWxzKDAsMCxyLG4sdC5SR0JBLHQuRkxPQVQsMCl9KSx3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYmluZEJ1ZmZlcihvLlBJWEVMX1BBQ0tfQlVGRkVSLG51bGwpfSksYT1zfXJldHVybiBhfWZ1bmN0aW9uIHdpKHQsZSxuLHIsaSl7dmFyIGE9dCxvPW5ldyBGbG9hdDMyQXJyYXkocW4obipyLGkuZG93bmxvYWRVbnBhY2tOdW1DaGFubmVscykpO2EuYmluZEJ1ZmZlcihhLlBJWEVMX1BBQ0tfQlVGRkVSLGUpLGEuZ2V0QnVmZmVyU3ViRGF0YShhLlBJWEVMX1BBQ0tfQlVGRkVSLDAsbyksYS5iaW5kQnVmZmVyKGEuUElYRUxfUEFDS19CVUZGRVIsbnVsbCk7dmFyIHM9bmV3IEZsb2F0MzJBcnJheShuKnIpO3JldHVybiAkbihvLHMsaS5kb3dubG9hZFVucGFja051bUNoYW5uZWxzKSxzfWZ1bmN0aW9uIF9pKHQsZSxuLHIpe3ZhciBpPVduKGUsbiksYT1pWzBdLG89aVsxXSxzPW5ldyBGbG9hdDMyQXJyYXkocW4oZSpuLHIuZG93bmxvYWRVbnBhY2tOdW1DaGFubmVscykpO3dyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5yZWFkUGl4ZWxzKDAsMCxhLG8sci5kb3dubG9hZFRleHR1cmVGb3JtYXQsdC5GTE9BVCxzKX0pO3ZhciB1PW5ldyBGbG9hdDMyQXJyYXkoZSpuKTtyZXR1cm4gJG4ocyx1LHIuZG93bmxvYWRVbnBhY2tOdW1DaGFubmVscyksdX1mdW5jdGlvbiB4aSh0LGUsbixyKXt2YXIgaT1XbihlLG4pLGE9aVswXSxvPWlbMV0scz1uZXcgVWludDhBcnJheShxbihlKm4sNCkpO3JldHVybiB3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQucmVhZFBpeGVscygwLDAsYSxvLHIuZG93bmxvYWRUZXh0dXJlRm9ybWF0LHQuVU5TSUdORURfQllURSxzKX0pLG5ldyBGbG9hdDMyQXJyYXkocy5idWZmZXIpfWZ1bmN0aW9uIEVpKHQsZSxuLHIsaSxhLG8scyl7dmFyIHU9dCxjPW5ldyBGbG9hdDMyQXJyYXkoS24oYSxvKSk7dS5iaW5kQnVmZmVyKHUuUElYRUxfUEFDS19CVUZGRVIsZSksdS5nZXRCdWZmZXJTdWJEYXRhKHUuUElYRUxfUEFDS19CVUZGRVIsMCxjKSx1LmJpbmRCdWZmZXIodS5QSVhFTF9QQUNLX0JVRkZFUixudWxsKTt2YXIgbD1uZXcgRmxvYXQzMkFycmF5KEUoW24scixpXSkpO3JldHVybiBHbihjLG4scixpLGwpLGx9ZnVuY3Rpb24gU2kodCxlLG4scixpLGEsbyl7dmFyIHM9SG4oaSxhKSx1PXNbMF0sYz1zWzFdLGw9bmV3IEZsb2F0MzJBcnJheShLbihpLGEpKTt3cih0LGZ1bmN0aW9uKCl7cmV0dXJuIHQucmVhZFBpeGVscygwLDAsdSxjLHQuUkdCQSx0LkZMT0FULGwpfSk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShFKFtlLG4scl0pKTtyZXR1cm4gR24obCxlLG4scixmKX12YXIgTmk9T2JqZWN0LmZyZWV6ZSh7Y3JlYXRlVmVydGV4U2hhZGVyOmlpLGNyZWF0ZVZlcnRleEJ1ZmZlcjphaSxjcmVhdGVJbmRleEJ1ZmZlcjpvaSxnZXRUZXh0dXJlQ29uZmlnOnNpLGNyZWF0ZUZsb2F0MzJNYXRyaXhUZXh0dXJlOmNpLGNyZWF0ZUZsb2F0MTZNYXRyaXhUZXh0dXJlOmxpLGNyZWF0ZVVuc2lnbmVkQnl0ZXNNYXRyaXhUZXh0dXJlOmZpLGNyZWF0ZVBhY2tlZE1hdHJpeFRleHR1cmU6aGksY3JlYXRlRmxvYXQxNlBhY2tlZE1hdHJpeFRleHR1cmU6cGksYmluZFZlcnRleFByb2dyYW1BdHRyaWJ1dGVTdHJlYW1zOmRpLHVwbG9hZFBpeGVsRGF0YVRvVGV4dHVyZTptaSx1cGxvYWRNYXRyaXhUb1RleHR1cmU6eWksdXBsb2FkTWF0cml4VG9QYWNrZWRUZXh0dXJlOnZpLG1heWJlQ3JlYXRlQnVmZmVyRnJvbU91dHB1dFRleHR1cmU6YmksZG93bmxvYWRGbG9hdDMyTWF0cml4RnJvbUJ1ZmZlcjp3aSxkb3dubG9hZEZsb2F0MzJNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZTpfaSxkb3dubG9hZEJ5dGVFbmNvZGVkRmxvYXRNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZTp4aSxkb3dubG9hZFBhY2tlZE1hdHJpeEZyb21CdWZmZXI6RWksZG93bmxvYWRNYXRyaXhGcm9tUGFja2VkT3V0cHV0VGV4dHVyZTpTaX0pLElpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLm91dHB1dFRleHR1cmU9bnVsbCx0aGlzLnByb2dyYW09bnVsbCx0aGlzLmRpc3Bvc2VkPSExLHRoaXMuYXV0b0RlYnVnVmFsaWRhdGU9ITEsdGhpcy52ZXJ0ZXhBdHRyc0FyZUJvdW5kPSExLHRoaXMuaXRlbXNUb1BvbGw9W10sdGhpcy5nbD1udWxsIT10P3Q6cChMdC5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpKSwxPT09THQuZ2V0KFwiV0VCR0xfVkVSU0lPTlwiKT8odGhpcy50ZXh0dXJlRmxvYXRFeHRlbnNpb249a3IodGhpcy5nbCxcIk9FU190ZXh0dXJlX2Zsb2F0XCIpLHRoaXMuY29sb3JCdWZmZXJGbG9hdEV4dGVuc2lvbj10aGlzLmdsLmdldEV4dGVuc2lvbihcIldFQkdMX2NvbG9yX2J1ZmZlcl9mbG9hdFwiKSxMdC5nZXQoXCJXRUJHTF9SRU5ERVJfRkxPQVQzMl9FTkFCTEVEXCIpfHwodGhpcy50ZXh0dXJlSGFsZkZsb2F0RXh0ZW5zaW9uPWtyKHRoaXMuZ2wsXCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0XCIpLHRoaXMuY29sb3JCdWZmZXJIYWxmRmxvYXRFeHRlbnNpb249dGhpcy5nbC5nZXRFeHRlbnNpb24oXCJFWFRfY29sb3JfYnVmZmVyX2hhbGZfZmxvYXRcIikpKTp0aGlzLmNvbG9yQnVmZmVyRmxvYXRFeHRlbnNpb249a3IodGhpcy5nbCxcIkVYVF9jb2xvcl9idWZmZXJfZmxvYXRcIiksdGhpcy52ZXJ0ZXhCdWZmZXI9YWkodGhpcy5nbCksdGhpcy5pbmRleEJ1ZmZlcj1vaSh0aGlzLmdsKSx0aGlzLmZyYW1lYnVmZmVyPUZyKHRoaXMuZ2wpLHRoaXMudGV4dHVyZUNvbmZpZz1zaSh0aGlzLmdsLHRoaXMudGV4dHVyZUhhbGZGbG9hdEV4dGVuc2lvbil9cmV0dXJuIHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCF0aGlzLmRpc3Bvc2VkKXtudWxsIT10aGlzLnByb2dyYW0mJmNvbnNvbGUud2FybihcIkRpc3Bvc2luZyBhIEdQR1BVQ29udGV4dCB0aGF0IHN0aWxsIGhhcyBhIGJvdW5kIFdlYkdMUHJvZ3JhbS4gVGhpcyBpcyBwcm9iYWJseSBhIHJlc291cmNlIGxlYWssIGRlbGV0ZSB0aGUgcHJvZ3JhbSB3aXRoIEdQR1BVQ29udGV4dC5kZWxldGVQcm9ncmFtIGJlZm9yZSBkaXNwb3NpbmcuXCIpLG51bGwhPXRoaXMub3V0cHV0VGV4dHVyZSYmY29uc29sZS53YXJuKFwiRGlzcG9zaW5nIGEgR1BHUFVDb250ZXh0IHRoYXQgc3RpbGwgaGFzIGEgYm91bmQgb3V0cHV0IG1hdHJpeCB0ZXh0dXJlLiAgVGhpcyBpcyBwcm9iYWJseSBhIHJlc291cmNlIGxlYWssIGRlbGV0ZSB0aGUgb3V0cHV0IG1hdHJpeCB0ZXh0dXJlIHdpdGggR1BHUFVDb250ZXh0LmRlbGV0ZU1hdHJpeFRleHR1cmUgYmVmb3JlIGRpc3Bvc2luZy5cIik7dmFyIGU9dGhpcy5nbDt3cihlLGZ1bmN0aW9uKCl7cmV0dXJuIGUuZmluaXNoKCl9KSx3cihlLGZ1bmN0aW9uKCl7cmV0dXJuIGUuYmluZEZyYW1lYnVmZmVyKGUuRlJBTUVCVUZGRVIsbnVsbCl9KSx3cihlLGZ1bmN0aW9uKCl7cmV0dXJuIGUuZGVsZXRlRnJhbWVidWZmZXIodC5mcmFtZWJ1ZmZlcil9KSx3cihlLGZ1bmN0aW9uKCl7cmV0dXJuIGUuYmluZEJ1ZmZlcihlLkFSUkFZX0JVRkZFUixudWxsKX0pLHdyKGUsZnVuY3Rpb24oKXtyZXR1cm4gZS5iaW5kQnVmZmVyKGUuRUxFTUVOVF9BUlJBWV9CVUZGRVIsbnVsbCl9KSx3cihlLGZ1bmN0aW9uKCl7cmV0dXJuIGUuZGVsZXRlQnVmZmVyKHQuaW5kZXhCdWZmZXIpfSksdGhpcy5kaXNwb3NlZD0hMH19LHQucHJvdG90eXBlLmVuYWJsZUF1dG9tYXRpY0RlYnVnVmFsaWRhdGlvbj1mdW5jdGlvbih0KXt0aGlzLmF1dG9EZWJ1Z1ZhbGlkYXRlPXQseHIodCl9LHQucHJvdG90eXBlLmNyZWF0ZUZsb2F0MzJNYXRyaXhUZXh0dXJlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksY2kodGhpcy5nbCx0LGUsdGhpcy50ZXh0dXJlQ29uZmlnKX0sdC5wcm90b3R5cGUuY3JlYXRlRmxvYXQxNk1hdHJpeFRleHR1cmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxsaSh0aGlzLmdsLHQsZSx0aGlzLnRleHR1cmVDb25maWcpfSx0LnByb3RvdHlwZS5jcmVhdGVVbnNpZ25lZEJ5dGVzTWF0cml4VGV4dHVyZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGZpKHRoaXMuZ2wsdCxlLHRoaXMudGV4dHVyZUNvbmZpZyl9LHQucHJvdG90eXBlLnVwbG9hZFBpeGVsRGF0YVRvVGV4dHVyZT1mdW5jdGlvbih0LGUpe3RoaXMudGhyb3dJZkRpc3Bvc2VkKCksbWkodGhpcy5nbCx0LGUpfSx0LnByb3RvdHlwZS5jcmVhdGVGbG9hdDE2UGFja2VkTWF0cml4VGV4dHVyZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHBpKHRoaXMuZ2wsdCxlLHRoaXMudGV4dHVyZUNvbmZpZyl9LHQucHJvdG90eXBlLmNyZWF0ZVBhY2tlZE1hdHJpeFRleHR1cmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxoaSh0aGlzLmdsLHQsZSx0aGlzLnRleHR1cmVDb25maWcpfSx0LnByb3RvdHlwZS5kZWxldGVNYXRyaXhUZXh0dXJlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLm91dHB1dFRleHR1cmU9PT10JiYoS3IodGhpcy5nbCx0aGlzLmZyYW1lYnVmZmVyKSx0aGlzLm91dHB1dFRleHR1cmU9bnVsbCksd3IodGhpcy5nbCxmdW5jdGlvbigpe3JldHVybiBlLmdsLmRlbGV0ZVRleHR1cmUodCl9KX0sdC5wcm90b3R5cGUudXBsb2FkTWF0cml4VG9UZXh0dXJlPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMudGhyb3dJZkRpc3Bvc2VkKCk7dmFyIGk9QnIoKTtyZXR1cm4geWkodGhpcy5nbCx0LGUsbixyLGksdGhpcy50ZXh0dXJlQ29uZmlnKX0sdC5wcm90b3R5cGUudXBsb2FkTWF0cml4VG9QYWNrZWRUZXh0dXJlPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8pe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHZpKHRoaXMuZ2wsdCxlLG4scixpLGEsbyx0aGlzLnRleHR1cmVDb25maWcpfSx0LnByb3RvdHlwZS5kb3dubG9hZEZsb2F0MzJNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4gdGhpcy5kb3dubG9hZE1hdHJpeERyaXZlcih0LGZ1bmN0aW9uKCl7cmV0dXJuIF9pKHIuZ2wsZSxuLHIudGV4dHVyZUNvbmZpZyl9KX0sdC5wcm90b3R5cGUuZG93bmxvYWRCeXRlRW5jb2RlZEZsb2F0TWF0cml4RnJvbU91dHB1dFRleHR1cmU9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXM7cmV0dXJuIHRoaXMuZG93bmxvYWRNYXRyaXhEcml2ZXIodCxmdW5jdGlvbigpe3JldHVybiB4aShyLmdsLGUsbixyLnRleHR1cmVDb25maWcpfSl9LHQucHJvdG90eXBlLmRvd25sb2FkUGFja2VkTWF0cml4RnJvbUJ1ZmZlcj1mdW5jdGlvbih0LGUsbixyLGksYSl7cmV0dXJuIEVpKHRoaXMuZ2wsdCxlLG4scixpLGEsdGhpcy50ZXh0dXJlQ29uZmlnKX0sdC5wcm90b3R5cGUuZG93bmxvYWRGbG9hdDMyTWF0cml4RnJvbUJ1ZmZlcj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHdpKHRoaXMuZ2wsdCxlLG4sdGhpcy50ZXh0dXJlQ29uZmlnKX0sdC5wcm90b3R5cGUubWF5YmVDcmVhdGVCdWZmZXJGcm9tVGV4dHVyZT1mdW5jdGlvbih0LGUsbil7dGhpcy5iaW5kVGV4dHVyZVRvRnJhbWVCdWZmZXIodCk7dmFyIHI9YmkodGhpcy5nbCx0LGUsbix0aGlzLnRleHR1cmVDb25maWcpO3JldHVybiB0aGlzLnVuYmluZFRleHR1cmVUb0ZyYW1lQnVmZmVyKCkscn0sdC5wcm90b3R5cGUuY3JlYXRlQW5kV2FpdEZvckZlbmNlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jcmVhdGVGZW5jZSh0aGlzLmdsKTtyZXR1cm4gdGhpcy5wb2xsRmVuY2UodCl9LHQucHJvdG90eXBlLmNyZWF0ZUZlbmNlPWZ1bmN0aW9uKHQpe3ZhciBlLG4scj10aGlzO2lmKEx0LmdldChcIldFQkdMX0ZFTkNFX0FQSV9FTkFCTEVEXCIpKXt2YXIgaT10LGE9aS5mZW5jZVN5bmMoaS5TWU5DX0dQVV9DT01NQU5EU19DT01QTEVURSwwKTt0LmZsdXNoKCksbj1mdW5jdGlvbigpe3ZhciB0PWkuY2xpZW50V2FpdFN5bmMoYSwwLDApO3JldHVybiB0PT09aS5BTFJFQURZX1NJR05BTEVEfHx0PT09aS5DT05ESVRJT05fU0FUSVNGSUVEfSxlPWF9ZWxzZSBMdC5nZXQoXCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fVkVSU0lPTlwiKT4wPyhlPXRoaXMuYmVnaW5RdWVyeSgpLHRoaXMuZW5kUXVlcnkoKSxuPWZ1bmN0aW9uKCl7cmV0dXJuIHIuaXNRdWVyeUF2YWlsYWJsZShlLEx0LmdldChcIldFQkdMX0RJU0pPSU5UX1FVRVJZX1RJTUVSX0VYVEVOU0lPTl9WRVJTSU9OXCIpKX0pOm49ZnVuY3Rpb24oKXtyZXR1cm4hMH07cmV0dXJue3F1ZXJ5OmUsaXNGZW5jZVBhc3NlZDpufX0sdC5wcm90b3R5cGUuZG93bmxvYWRNYXRyaXhGcm9tUGFja2VkVGV4dHVyZT1mdW5jdGlvbih0LGUsbixyLGksYSl7dmFyIG89dGhpcztyZXR1cm4gdGhpcy5kb3dubG9hZE1hdHJpeERyaXZlcih0LGZ1bmN0aW9uKCl7cmV0dXJuIFNpKG8uZ2wsZSxuLHIsaSxhLG8udGV4dHVyZUNvbmZpZyl9KX0sdC5wcm90b3R5cGUuY3JlYXRlUHJvZ3JhbT1mdW5jdGlvbih0KXt0aGlzLnRocm93SWZEaXNwb3NlZCgpO3ZhciBlPXRoaXMuZ2wsbj1DcihlLHQpLHI9aWkoZSksaT1UcihlKTtyZXR1cm4gd3IoZSxmdW5jdGlvbigpe3JldHVybiBlLmF0dGFjaFNoYWRlcihpLHIpfSksd3IoZSxmdW5jdGlvbigpe3JldHVybiBlLmF0dGFjaFNoYWRlcihpLG4pfSksUnIoZSxpKSx0aGlzLmF1dG9EZWJ1Z1ZhbGlkYXRlJiZEcihlLGkpLHRoaXMudmVydGV4QXR0cnNBcmVCb3VuZHx8KHRoaXMuc2V0UHJvZ3JhbShpKSx0aGlzLnZlcnRleEF0dHJzQXJlQm91bmQ9ZGkoZSx0aGlzLnByb2dyYW0sdGhpcy52ZXJ0ZXhCdWZmZXIpKSxpfSx0LnByb3RvdHlwZS5kZWxldGVQcm9ncmFtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0PT09dGhpcy5wcm9ncmFtJiYodGhpcy5wcm9ncmFtPW51bGwpLG51bGwhPXQmJndyKHRoaXMuZ2wsZnVuY3Rpb24oKXtyZXR1cm4gZS5nbC5kZWxldGVQcm9ncmFtKHQpfSl9LHQucHJvdG90eXBlLnNldFByb2dyYW09ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLnRocm93SWZEaXNwb3NlZCgpLHRoaXMucHJvZ3JhbT10LG51bGwhPXRoaXMucHJvZ3JhbSYmdGhpcy5hdXRvRGVidWdWYWxpZGF0ZSYmRHIodGhpcy5nbCx0aGlzLnByb2dyYW0pLHdyKHRoaXMuZ2wsZnVuY3Rpb24oKXtyZXR1cm4gZS5nbC51c2VQcm9ncmFtKHQpfSl9LHQucHJvdG90eXBlLmdldFVuaWZvcm1Mb2NhdGlvbj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLG4/V3IodGhpcy5nbCx0LGUpOnFyKHRoaXMuZ2wsdCxlKX0sdC5wcm90b3R5cGUuZ2V0QXR0cmlidXRlTG9jYXRpb249ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHdyKHRoaXMuZ2wsZnVuY3Rpb24oKXtyZXR1cm4gbi5nbC5nZXRBdHRyaWJMb2NhdGlvbih0LGUpfSl9LHQucHJvdG90eXBlLmdldFVuaWZvcm1Mb2NhdGlvbk5vVGhyb3c9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0LGUpfSx0LnByb3RvdHlwZS5zZXRJbnB1dE1hdHJpeFRleHR1cmU9ZnVuY3Rpb24odCxlLG4pe3RoaXMudGhyb3dJZkRpc3Bvc2VkKCksdGhpcy50aHJvd0lmTm9Qcm9ncmFtKCksJHIodGhpcy5nbCx0aGlzLnByb2dyYW0sdCxlLG4pfSx0LnByb3RvdHlwZS5zZXRPdXRwdXRNYXRyaXhUZXh0dXJlPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnNldE91dHB1dE1hdHJpeFRleHR1cmVEcml2ZXIodCxuLGUpfSx0LnByb3RvdHlwZS5zZXRPdXRwdXRQYWNrZWRNYXRyaXhUZXh0dXJlPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnRocm93SWZEaXNwb3NlZCgpO3ZhciByPUhuKGUsbiksaT1yWzBdLGE9clsxXTt0aGlzLnNldE91dHB1dE1hdHJpeFRleHR1cmVEcml2ZXIodCxpLGEpfSx0LnByb3RvdHlwZS5zZXRPdXRwdXRNYXRyaXhXcml0ZVJlZ2lvbj1mdW5jdGlvbih0LGUsbixyKXt0aGlzLnNldE91dHB1dE1hdHJpeFdyaXRlUmVnaW9uRHJpdmVyKG4sdCxyLGUpfSx0LnByb3RvdHlwZS5zZXRPdXRwdXRQYWNrZWRNYXRyaXhXcml0ZVJlZ2lvbj1mdW5jdGlvbih0LGUsbixyKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRPdXRwdXRQYWNrZWRNYXRyaXhXcml0ZVJlZ2lvbiBub3QgaW1wbGVtZW50ZWQuXCIpfSx0LnByb3RvdHlwZS5kZWJ1Z1ZhbGlkYXRlPWZ1bmN0aW9uKCl7bnVsbCE9dGhpcy5wcm9ncmFtJiZEcih0aGlzLmdsLHRoaXMucHJvZ3JhbSksR3IodGhpcy5nbCl9LHQucHJvdG90eXBlLmV4ZWN1dGVQcm9ncmFtPWZ1bmN0aW9uKCl7dGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnRocm93SWZOb1Byb2dyYW0oKTt2YXIgdD10aGlzLmdsO3RoaXMuYXV0b0RlYnVnVmFsaWRhdGUmJnRoaXMuZGVidWdWYWxpZGF0ZSgpLHdyKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5kcmF3RWxlbWVudHModC5UUklBTkdMRVMsNix0LlVOU0lHTkVEX1NIT1JULDApfSl9LHQucHJvdG90eXBlLmJsb2NrVW50aWxBbGxQcm9ncmFtc0NvbXBsZXRlZD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy50aHJvd0lmRGlzcG9zZWQoKSx3cih0aGlzLmdsLGZ1bmN0aW9uKCl7cmV0dXJuIHQuZ2wuZmluaXNoKCl9KX0sdC5wcm90b3R5cGUuZ2V0UXVlcnlUaW1lckV4dGVuc2lvbj1mdW5jdGlvbigpe3JldHVybiBudWxsPT10aGlzLmRpc2pvaW50UXVlcnlUaW1lckV4dGVuc2lvbiYmKHRoaXMuZGlzam9pbnRRdWVyeVRpbWVyRXh0ZW5zaW9uPWtyKHRoaXMuZ2wsMj09PUx0LmdldChcIldFQkdMX0RJU0pPSU5UX1FVRVJZX1RJTUVSX0VYVEVOU0lPTl9WRVJTSU9OXCIpP1wiRVhUX2Rpc2pvaW50X3RpbWVyX3F1ZXJ5X3dlYmdsMlwiOlwiRVhUX2Rpc2pvaW50X3RpbWVyX3F1ZXJ5XCIpKSx0aGlzLmRpc2pvaW50UXVlcnlUaW1lckV4dGVuc2lvbn0sdC5wcm90b3R5cGUuZ2V0UXVlcnlUaW1lckV4dGVuc2lvbldlYkdMMj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb24oKX0sdC5wcm90b3R5cGUuZ2V0UXVlcnlUaW1lckV4dGVuc2lvbldlYkdMMT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb24oKX0sdC5wcm90b3R5cGUuYmVnaW5RdWVyeT1mdW5jdGlvbigpe2lmKDI9PT1MdC5nZXQoXCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fVkVSU0lPTlwiKSl7dmFyIHQ9dGhpcy5nbCxlPXRoaXMuZ2V0UXVlcnlUaW1lckV4dGVuc2lvbldlYkdMMigpLG49dC5jcmVhdGVRdWVyeSgpO3JldHVybiB0LmJlZ2luUXVlcnkoZS5USU1FX0VMQVBTRURfRVhULG4pLG59dmFyIHI9dGhpcy5nZXRRdWVyeVRpbWVyRXh0ZW5zaW9uV2ViR0wxKCksaT1yLmNyZWF0ZVF1ZXJ5RVhUKCk7cmV0dXJuIHIuYmVnaW5RdWVyeUVYVChyLlRJTUVfRUxBUFNFRF9FWFQsaSksaX0sdC5wcm90b3R5cGUuZW5kUXVlcnk9ZnVuY3Rpb24oKXtpZigyIT09THQuZ2V0KFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIikpe3ZhciB0PXRoaXMuZ2V0UXVlcnlUaW1lckV4dGVuc2lvbldlYkdMMSgpO3QuZW5kUXVlcnlFWFQodC5USU1FX0VMQVBTRURfRVhUKX1lbHNle3ZhciBlPXRoaXMuZ2wsbj10aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb25XZWJHTDIoKTtlLmVuZFF1ZXJ5KG4uVElNRV9FTEFQU0VEX0VYVCl9fSx0LnByb3RvdHlwZS53YWl0Rm9yUXVlcnlBbmRHZXRUaW1lPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybls0LEEoZnVuY3Rpb24oKXtyZXR1cm4gZS5kaXNwb3NlZHx8ZS5pc1F1ZXJ5QXZhaWxhYmxlKHQsTHQuZ2V0KFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIikpfSldO2Nhc2UgMTpyZXR1cm4gbi5zZW50KCksWzIsdGhpcy5nZXRRdWVyeVRpbWUodCxMdC5nZXQoXCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fVkVSU0lPTlwiKSldfX0pfSl9LHQucHJvdG90eXBlLmdldFF1ZXJ5VGltZT1mdW5jdGlvbih0LGUpe2lmKDA9PT1lKXJldHVybiBudWxsO2lmKDI9PT1lKXt2YXIgbj10aGlzLmdsO3JldHVybiBuLmdldFF1ZXJ5UGFyYW1ldGVyKHQsbi5RVUVSWV9SRVNVTFQpLzFlNn12YXIgcj10aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb25XZWJHTDEoKTtyZXR1cm4gci5nZXRRdWVyeU9iamVjdEVYVCh0LHIuUVVFUllfUkVTVUxUX0VYVCkvMWU2fSx0LnByb3RvdHlwZS5pc1F1ZXJ5QXZhaWxhYmxlPWZ1bmN0aW9uKHQsZSl7aWYoMD09PWUpcmV0dXJuITA7aWYoMj09PWUpe3ZhciBuPXRoaXMuZ2wscj10aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb25XZWJHTDIoKSxpPW4uZ2V0UXVlcnlQYXJhbWV0ZXIodCxuLlFVRVJZX1JFU1VMVF9BVkFJTEFCTEUpO3JldHVybiBudWxsPT10aGlzLmRpc2pvaW50JiYodGhpcy5kaXNqb2ludD10aGlzLmdsLmdldFBhcmFtZXRlcihyLkdQVV9ESVNKT0lOVF9FWFQpKSxpJiYhdGhpcy5kaXNqb2ludH1yZXR1cm4gaT0ocj10aGlzLmdldFF1ZXJ5VGltZXJFeHRlbnNpb25XZWJHTDEoKSkuZ2V0UXVlcnlPYmplY3RFWFQodCxyLlFVRVJZX1JFU1VMVF9BVkFJTEFCTEVfRVhUKSxudWxsPT10aGlzLmRpc2pvaW50JiYodGhpcy5kaXNqb2ludD10aGlzLmdsLmdldFBhcmFtZXRlcihyLkdQVV9ESVNKT0lOVF9FWFQpKSxpJiYhdGhpcy5kaXNqb2ludH0sdC5wcm90b3R5cGUucG9sbEZlbmNlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4pe2UuYWRkSXRlbVRvUG9sbChmdW5jdGlvbigpe3JldHVybiB0LmlzRmVuY2VQYXNzZWQoKX0sZnVuY3Rpb24oKXtyZXR1cm4gbigpfSl9KX0sdC5wcm90b3R5cGUucG9sbEl0ZW1zPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dC5sZW5ndGgtMSxyPS0xO2U8PW47KXt2YXIgaT1lK24+PjE7dFtpXSgpPyhyPWksZT1pKzEpOm49aS0xfXJldHVybiByfSh0aGlzLml0ZW1zVG9Qb2xsLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5pc0RvbmVGbn0pKSxlPTA7ZTw9dDsrK2UpKDAsdGhpcy5pdGVtc1RvUG9sbFtlXS5yZXNvbHZlRm4pKCk7dGhpcy5pdGVtc1RvUG9sbD10aGlzLml0ZW1zVG9Qb2xsLnNsaWNlKHQrMSl9LHQucHJvdG90eXBlLmFkZEl0ZW1Ub1BvbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3RoaXMuaXRlbXNUb1BvbGwucHVzaCh7aXNEb25lRm46dCxyZXNvbHZlRm46ZX0pLHRoaXMuaXRlbXNUb1BvbGwubGVuZ3RoPjF8fEEoZnVuY3Rpb24oKXtyZXR1cm4gbi5wb2xsSXRlbXMoKSwwPT09bi5pdGVtc1RvUG9sbC5sZW5ndGh9KX0sdC5wcm90b3R5cGUuYmluZFRleHR1cmVUb0ZyYW1lQnVmZmVyPWZ1bmN0aW9uKHQpe3RoaXMudGhyb3dJZkRpc3Bvc2VkKCksSHIodGhpcy5nbCx0LHRoaXMuZnJhbWVidWZmZXIpLHRoaXMuYXV0b0RlYnVnVmFsaWRhdGUmJkdyKHRoaXMuZ2wpfSx0LnByb3RvdHlwZS51bmJpbmRUZXh0dXJlVG9GcmFtZUJ1ZmZlcj1mdW5jdGlvbigpe251bGwhPXRoaXMub3V0cHV0VGV4dHVyZT8oSHIodGhpcy5nbCx0aGlzLm91dHB1dFRleHR1cmUsdGhpcy5mcmFtZWJ1ZmZlciksdGhpcy5hdXRvRGVidWdWYWxpZGF0ZSYmR3IodGhpcy5nbCkpOktyKHRoaXMuZ2wsdGhpcy5mcmFtZWJ1ZmZlcil9LHQucHJvdG90eXBlLmRvd25sb2FkTWF0cml4RHJpdmVyPWZ1bmN0aW9uKHQsZSl7dGhpcy5iaW5kVGV4dHVyZVRvRnJhbWVCdWZmZXIodCk7dmFyIG49ZSgpO3JldHVybiB0aGlzLnVuYmluZFRleHR1cmVUb0ZyYW1lQnVmZmVyKCksbn0sdC5wcm90b3R5cGUuc2V0T3V0cHV0TWF0cml4VGV4dHVyZURyaXZlcj1mdW5jdGlvbih0LGUsbil7dGhpcy50aHJvd0lmRGlzcG9zZWQoKTt2YXIgcj10aGlzLmdsO0hyKHIsdCx0aGlzLmZyYW1lYnVmZmVyKSx0aGlzLmF1dG9EZWJ1Z1ZhbGlkYXRlJiZHcihyKSx0aGlzLm91dHB1dFRleHR1cmU9dCx3cihyLGZ1bmN0aW9uKCl7cmV0dXJuIHIudmlld3BvcnQoMCwwLGUsbil9KSx3cihyLGZ1bmN0aW9uKCl7cmV0dXJuIHIuc2Npc3NvcigwLDAsZSxuKX0pfSx0LnByb3RvdHlwZS5zZXRPdXRwdXRNYXRyaXhXcml0ZVJlZ2lvbkRyaXZlcj1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzO3RoaXMudGhyb3dJZkRpc3Bvc2VkKCksd3IodGhpcy5nbCxmdW5jdGlvbigpe3JldHVybiBpLmdsLnNjaXNzb3IodCxlLG4scil9KX0sdC5wcm90b3R5cGUudGhyb3dJZkRpc3Bvc2VkPWZ1bmN0aW9uKCl7aWYodGhpcy5kaXNwb3NlZCl0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gdXNlIGRpc3Bvc2VkIEdQR1BVQ29udGV4dC5cIil9LHQucHJvdG90eXBlLnRocm93SWZOb1Byb2dyYW09ZnVuY3Rpb24oKXtpZihudWxsPT10aGlzLnByb2dyYW0pdGhyb3cgbmV3IEVycm9yKFwiTm8gR1BVIHByb2dyYW0gaXMgY3VycmVudGx5IHNldC5cIil9LHR9KCk7ZnVuY3Rpb24gT2kodCxlKXtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IEVycm9yKFwiQmluYXJ5IHdhcyBjb21waWxlZCB3aXRoIFwiK3QubGVuZ3RoK1wiIGlucHV0cywgYnV0IHdhcyBleGVjdXRlZCB3aXRoIFwiK2UubGVuZ3RoK1wiIGlucHV0c1wiKTt0LmZvckVhY2goZnVuY3Rpb24odCxuKXt2YXIgcj10LmxvZ2ljYWxTaGFwZSxpPWVbbl0sYT1pLnNoYXBlO2lmKCFTKHIsYSkpdGhyb3cgRXJyb3IoXCJCaW5hcnkgd2FzIGNvbXBpbGVkIHdpdGggZGlmZmVyZW50IHNoYXBlcyB0aGFuIHRoZSBjdXJyZW50IGFyZ3MuIFNoYXBlcyBcIityK1wiIGFuZCBcIithK1wiIG11c3QgbWF0Y2hcIik7aWYoIXQuaXNVbmlmb3JtfHwhaS5pc1VuaWZvcm0pe3ZhciBvPXQudGV4U2hhcGUscz1pLmlzVW5pZm9ybT9udWxsOmkudGV4RGF0YS50ZXhTaGFwZTtpZighUyhvLHMpKXRocm93IEVycm9yKFwiQmluYXJ5IHdhcyBjb21waWxlZCB3aXRoIGRpZmZlcmVudCB0ZXh0dXJlIHNoYXBlcyB0aGFuIHRoZSBjdXJyZW50IGFyZ3MuIFNoYXBlIFwiK28rXCIgYW5kIFwiK3MrXCIgbXVzdCBtYXRjaFwiKX19KX12YXIga2k9ZnVuY3Rpb24odCxlLG4pe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdLHRoaXMub3V0cHV0U2hhcGU9dDt2YXIgcj1uLmZpbHRlcldpZHRoLGk9bi5pbkNoYW5uZWxzLGE9bi5zdHJpZGVXaWR0aCxvPW4uc3RyaWRlSGVpZ2h0LHM9bi5wYWRJbmZvLHU9bi5vdXRXaWR0aCxjPW4uZGlsYXRpb25XaWR0aCxsPW4uZGlsYXRpb25IZWlnaHQsZj1zLmxlZnQsaD1zLnRvcCxwPWkqcixkPUZuKCk7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIHJjID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuXFxuICAgICAgICB2ZWM0IHJlc3VsdCA9IHZlYzQoMCk7XFxuXFxuICAgICAgICBmb3IoaW50IHJvdz0wOyByb3c8PTE7IHJvdysrKSB7XFxuICAgICAgICAgIGZvcihpbnQgY29sPTA7IGNvbDw9MTsgY29sKyspIHtcXG4gICAgICAgICAgICBpbnQgYmxvY2tJbmRleCA9IHJjLnkgKyBjb2w7XFxuICAgICAgICAgICAgaW50IHBvcyA9IHJjLnggKyByb3c7XFxuXFxuICAgICAgICAgICAgaWYoYmxvY2tJbmRleCA+PSBcIit0WzFdK1wiIHx8IHBvcyA+PSBcIit0WzBdK1wiKSBjb250aW51ZTtcXG5cXG4gICAgICAgICAgICBpbnQgb2Zmc2V0WSA9IGludChibG9ja0luZGV4IC8gKFwiK3UrXCIpKSAqIFwiK28rXCIgLSBcIitoK1wiO1xcbiAgICAgICAgICAgIGludCBkMCA9IG9mZnNldFkgKyBcIitsK1wiICogKHBvcyAvIFwiK3ArXCIpO1xcblxcbiAgICAgICAgICAgIGlmKGQwID49IFwiK2VbMF0rXCIgfHwgZDAgPCAwKSBjb250aW51ZTtcXG5cXG4gICAgICAgICAgICBpbnQgb2Zmc2V0WCA9IGludChtb2QoZmxvYXQoYmxvY2tJbmRleCksIFwiK3UrXCIuKSAqIFwiK2ErXCIuIC0gXCIrZitcIi4pO1xcbiAgICAgICAgICAgIGludCBkMSA9IG9mZnNldFggKyBcIitjK1wiICogKGludChtb2QoZmxvYXQocG9zKSwgXCIrcCtcIi4pIC8gXCIraStcIi4pKTtcXG5cXG4gICAgICAgICAgICBpZihkMSA+PSBcIitlWzFdK1wiIHx8IGQxIDwgMCkgY29udGludWU7XFxuXFxuICAgICAgICAgICAgcmVzdWx0W3JvdyAqIDIgKyBjb2xdID0gZ2V0QShkMCwgZDEsIGludChtb2QoZmxvYXQocG9zKSwgXCIraStcIi4pKSk7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIFwiK2Qub3V0cHV0K1wiID0gcmVzdWx0O1xcbiAgICAgIH1cXG4gICAgXCJ9LEFpPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIl0sdGhpcy5vdXRwdXRTaGFwZT1bXTt2YXIgYSxvPWUscz10WzNdLTE7dGhpcy5vdXRwdXRTaGFwZT10O3ZhciB1PVwiZmxvYXQoXCIrbitcIikgKyBmbG9hdChcIityK1wiKSAqIHN1bVwiO2E9LjU9PT1pP1wiaW52ZXJzZXNxcnQoXCIrdStcIilcIjoxPT09aT9cIjEuMC8oXCIrdStcIilcIjpcImV4cChsb2coXCIrdStcIikgKiBmbG9hdCgtXCIraStcIikpO1wiLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IHIgPSBjb29yZHNbMV07XFxuICAgICAgICBpbnQgYyA9IGNvb3Jkc1syXTtcXG4gICAgICAgIGludCBkID0gY29vcmRzWzNdO1xcbiAgICAgICAgZmxvYXQgeCA9IGdldFgoYiwgciwgYywgZCk7XFxuICAgICAgICBmbG9hdCBzdW0gPSAwLjA7XFxuICAgICAgICBmb3IgKGludCBqID0gLVwiK28rXCI7IGogPD0gXCIrbytcIjsgaisrKSB7XFxuICAgICAgICAgIGludCBpZHggPSBkICsgajtcXG4gICAgICAgICAgaWYgKGlkeCA+PSAwICYmIGlkeCA8PSAgXCIrcytcIikge1xcbiAgICAgICAgICAgIGZsb2F0IHogPSBnZXRYKGIsIHIsIGMsIGlkeCk7XFxuICAgICAgICAgICAgc3VtICs9IHogKiB6O1xcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBmbG9hdCB2YWwgPSB4ICogXCIrYStcIjtcXG4gICAgICAgIHNldE91dHB1dCh2YWwpO1xcbiAgICAgIH1cXG4gICAgXCJ9LENpPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy52YXJpYWJsZU5hbWVzPVtcImlucHV0SW1hZ2VcIixcIm91dHB1dEltYWdlXCIsXCJkeVwiXSx0aGlzLm91dHB1dFNoYXBlPVtdLHRoaXMub3V0cHV0U2hhcGU9dCx0aGlzLmRlcHRoPXRbM10sdGhpcy5kZXB0aFJhZGl1cz1lLHRoaXMuYmlhcz1uLHRoaXMuYWxwaGE9cix0aGlzLmJldGE9aSx0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYiA9IGNvb3Jkc1swXTtcXG4gICAgICAgIGludCByID0gY29vcmRzWzFdO1xcbiAgICAgICAgaW50IGMgPSBjb29yZHNbMl07XFxuXFxuICAgICAgICBmbG9hdCByZXN1bHQgPSAwLjA7XFxuICAgICAgICBmb3IgKGludCBkID0gMDsgZCA8IFwiK3RoaXMuZGVwdGgrXCI7ICsrZCkge1xcbiAgICAgICAgICBpbnQgZGVwdGhCZWdpbiA9IGludChtYXgoMC4wLCBmbG9hdChkIC0gXCIrZStcIikpKTtcXG4gICAgICAgICAgaW50IGRlcHRoRW5kID0gaW50KG1pbihmbG9hdChcIit0aGlzLmRlcHRoK1wiKSxcXG4gICAgICAgICAgICAgIGZsb2F0KGQgKyBcIitlK1wiICsgMSkpKTtcXG5cXG4gICAgICAgICAgY29uc3QgaW50IE1JTl9ERVBUSF9CRUdJTiA9IDA7XFxuICAgICAgICAgIGNvbnN0IGludCBNQVhfREVQVEhfRU5EID0gXCIrdGhpcy5kZXB0aCtcIjtcXG5cXG4gICAgICAgICAgZmxvYXQgbm9ybSA9IDAuMDtcXG4gICAgICAgICAgZm9yIChpbnQgayA9IE1JTl9ERVBUSF9CRUdJTjsgayA8IE1BWF9ERVBUSF9FTkQ7ICsraykge1xcbiAgICAgICAgICAgIGlmIChrIDwgZGVwdGhCZWdpbil7XFxuICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgZWxzZSBpZiAoayA+PSBkZXB0aEJlZ2luICYmIGsgPCBkZXB0aEVuZCkge1xcbiAgICAgICAgICAgICAgbm9ybSArPSBnZXRJbnB1dEltYWdlKGIsIHIsIGMsIGspICogZ2V0SW5wdXRJbWFnZShiLCByLCBjLCBrKTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgZWxzZSB7XFxuICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgbm9ybSA9IGZsb2F0KFwiK3IrXCIpICogbm9ybSArIGZsb2F0KFwiK24rXCIpO1xcblxcbiAgICAgICAgICBmb3IoaW50IGsgPSBNSU5fREVQVEhfQkVHSU47IGsgPCBNQVhfREVQVEhfRU5EOyArK2spe1xcbiAgICAgICAgICAgIGlmIChrIDwgZGVwdGhCZWdpbil7XFxuICAgICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgZWxzZSBpZiAoayA+PSBkZXB0aEJlZ2luICYmIGsgPCBkZXB0aEVuZCl7XFxuICAgICAgICAgICAgICBmbG9hdCBkeWkgPSAtMi4wICogZmxvYXQoXCIrcitcIilcXG4gICAgICAgICAgICAgICAgKiBmbG9hdChcIitpK1wiKVxcbiAgICAgICAgICAgICAgICAqIGdldElucHV0SW1hZ2UoYiAsciAsYywgaykgKiBnZXRPdXRwdXRJbWFnZShiLCByLCBjLCBkKVxcbiAgICAgICAgICAgICAgICAvIG5vcm07XFxuICAgICAgICAgICAgICBpZiAoayA9PSBkKSB7XFxuICAgICAgICAgICAgICAgIGR5aSArPSBwb3cobm9ybSwgLTEuMCAqIFwiK2krXCIpO1xcbiAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgaWYgKGsgPT0gY29vcmRzWzNdKSB7XFxuICAgICAgICAgICAgICAgIGR5aSAqPSBnZXREeShiLCByLCBjLCBkKTtcXG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IGR5aTtcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgZWxzZSB7XFxuICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICB9XFxuICAgICAgc2V0T3V0cHV0KHJlc3VsdCk7XFxuICAgICAgfVxcbiAgICBcIn0sUGk9ZnVuY3Rpb24odCl7dGhpcy52YXJpYWJsZU5hbWVzPVtcImR5XCIsXCJtYXhQb3NcIl0sdGhpcy5vdXRwdXRTaGFwZT10LmluU2hhcGU7dmFyIGU9dC5zdHJpZGVIZWlnaHQsbj10LnN0cmlkZVdpZHRoLHI9dC5kaWxhdGlvbkhlaWdodCxpPXQuZWZmZWN0aXZlRmlsdGVySGVpZ2h0LGE9dC5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxvPWktMS10LnBhZEluZm8udG9wLHM9YS0xLXQucGFkSW5mby5sZWZ0LHU9aSphLTE7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIitvK1wiLCBcIitzK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiBkeVJDQ29ybmVyID0gY29vcmRzLnl6IC0gcGFkcztcXG4gICAgICAgIGludCBkeVJDb3JuZXIgPSBkeVJDQ29ybmVyLng7XFxuICAgICAgICBpbnQgZHlDQ29ybmVyID0gZHlSQ0Nvcm5lci55O1xcblxcbiAgICAgICAgLy8gQ29udm9sdmUgZHkoPywgPywgZCkgd2l0aCBwb3MgbWFzayg6LCA6LCBkKSB0byBnZXQgZHgoeFIsIHhDLCBkKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkLiA6ID0gYWNyb3NzIGFsbCB2YWx1ZXMgaW4gdGhhdCBheGlzLlxcbiAgICAgICAgZmxvYXQgZG90UHJvZCA9IDAuMDtcXG4gICAgICAgIGZvciAoaW50IHdSID0gMDsgd1IgPCBcIitpK1wiO1xcbiAgICAgICAgICB3UiArPSBcIityK1wiKSB7XFxuICAgICAgICAgIGZsb2F0IGR5UiA9IGZsb2F0KGR5UkNvcm5lciArIHdSKSAvIFwiK2UrXCIuMDtcXG5cXG4gICAgICAgICAgaWYgKGR5UiA8IDAuMCB8fCBkeVIgPj0gXCIrdC5vdXRIZWlnaHQrXCIuMCB8fCBmcmFjdChkeVIpID4gMC4wKSB7XFxuICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgaW50IGlkeVIgPSBpbnQoZHlSKTtcXG5cXG4gICAgICAgICAgZm9yIChpbnQgd0MgPSAwOyB3QyA8IFwiK2ErXCI7IHdDKyspIHtcXG4gICAgICAgICAgICBmbG9hdCBkeUMgPSBmbG9hdChkeUNDb3JuZXIgKyB3QykgLyBcIituK1wiLjA7XFxuXFxuICAgICAgICAgICAgaWYgKGR5QyA8IDAuMCB8fCBkeUMgPj0gXCIrdC5vdXRXaWR0aCtcIi4wIHx8XFxuICAgICAgICAgICAgICAgIGZyYWN0KGR5QykgPiAwLjApIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBpbnQgaWR5QyA9IGludChkeUMpO1xcblxcbiAgICAgICAgICAgIGZsb2F0IGR5VmFsdWUgPSBnZXREeShiLCBpZHlSLCBpZHlDLCBkKTtcXG4gICAgICAgICAgICBpbnQgbWF4UG9zVmFsdWUgPSBcIit1K1wiIC0gaW50KGdldE1heFBvcyhiLCBpZHlSLCBpZHlDLCBkKSk7XFxuXFxuICAgICAgICAgICAgLy8gR2V0IHRoZSBjdXJyZW50IHZhbHVlLCBjaGVjayBpdCBhZ2FpbnN0IHRoZSB2YWx1ZSBmcm9tIHRoZVxcbiAgICAgICAgICAgIC8vIHBvc2l0aW9uIG1hdHJpeC5cXG4gICAgICAgICAgICBpbnQgY3VyUG9zVmFsdWUgPSB3UiAqIFwiK2ErXCIgKyB3QztcXG4gICAgICAgICAgICBmbG9hdCBtYXNrID0gZmxvYXQobWF4UG9zVmFsdWUgPT0gY3VyUG9zVmFsdWUgPyAxLjAgOiAwLjApO1xcblxcbiAgICAgICAgICAgIGRvdFByb2QgKz0gZHlWYWx1ZSAqIG1hc2s7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChkb3RQcm9kKTtcXG4gICAgICB9XFxuICAgIFwifSxUaT1mdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1uJiYobj0hMSksdm9pZCAwPT09ciYmKHI9ITEpLHRoaXMudmFyaWFibGVOYW1lcz1bXCJtYXRyaXhBXCIsXCJtYXRyaXhCXCJdO3ZhciBpPXRbMF0sYT1uP3RbMl06dFsxXSxvPXI/ZVsxXTplWzJdLHM9bj90WzFdOnRbMl07dGhpcy5vdXRwdXRTaGFwZT1baSxhLG9dO3ZhciB1PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4/XCJiYXRjaCwgXCIrZStcIiArIFwiK3QrXCIsIGFSb3dcIjpcImJhdGNoLCBhUm93LCBcIitlK1wiICsgXCIrdH0sYz1mdW5jdGlvbih0LGUpe3JldHVybiByP1wiYmF0Y2gsIGJDb2wsIFwiK2UrXCIgKyBcIit0OlwiYmF0Y2gsIFwiK2UrXCIgKyBcIit0K1wiLCBiQ29sXCJ9LGw9NCpNYXRoLmZsb29yKHMvNCksZj1zJTQ7dGhpcy51c2VyQ29kZT1cIiBmbG9hdCBkb3RBUm93QkNvbChpbnQgYmF0Y2gsIGludCBhUm93LCBpbnQgYkNvbCkge1xcbiAgICAgIGZsb2F0IHJlc3VsdCA9IDAuMDtcXG4gICAgICBmb3IgKGludCBpID0gMDsgaSA8IFwiK2wrXCI7IGkgKz0gNCkge1xcbiAgICAgICAgdmVjNCBhID0gdmVjNChcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDAsXCJpXCIpK1wiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDEsXCJpXCIpK1wiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDIsXCJpXCIpK1wiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDMsXCJpXCIpK1wiKVxcbiAgICAgICAgKTtcXG4gICAgICAgIHZlYzQgYiA9IHZlYzQoXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygwLFwiaVwiKStcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygxLFwiaVwiKStcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygyLFwiaVwiKStcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygzLFwiaVwiKStcIilcXG4gICAgICAgICk7XFxuXFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH1cXG5cXG4gICAgICBpZiAoXCIrKDE9PT1mKStcIikge1xcbiAgICAgICAgcmVzdWx0ICs9IGdldE1hdHJpeEEoXCIrdSgwLGwpK1wiKSAqXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygwLGwpK1wiKTtcXG4gICAgICB9IGVsc2UgaWYgKFwiKygyPT09ZikrXCIpIHtcXG4gICAgICAgIHZlYzIgYSA9IHZlYzIoXFxuICAgICAgICAgIGdldE1hdHJpeEEoXCIrdSgwLGwpK1wiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDEsbCkrXCIpXFxuICAgICAgICApO1xcbiAgICAgICAgdmVjMiBiID0gdmVjMihcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIitjKDAsbCkrXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiK2MoMSxsKStcIilcXG4gICAgICAgICk7XFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH0gZWxzZSBpZiAoXCIrKDM9PT1mKStcIikge1xcbiAgICAgICAgdmVjMyBhID0gdmVjMyhcXG4gICAgICAgICAgZ2V0TWF0cml4QShcIit1KDAsbCkrXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhBKFwiK3UoMSxsKStcIiksXFxuICAgICAgICAgIGdldE1hdHJpeEEoXCIrdSgyLGwpK1wiKVxcbiAgICAgICAgKTtcXG4gICAgICAgIHZlYzMgYiA9IHZlYzMoXFxuICAgICAgICAgIGdldE1hdHJpeEIoXCIrYygwLGwpK1wiKSxcXG4gICAgICAgICAgZ2V0TWF0cml4QihcIitjKDEsbCkrXCIpLFxcbiAgICAgICAgICBnZXRNYXRyaXhCKFwiK2MoMixsKStcIilcXG4gICAgICAgICk7XFxuICAgICAgICByZXN1bHQgKz0gZG90KGEsIGIpO1xcbiAgICAgIH1cXG5cXG4gICAgICByZXR1cm4gcmVzdWx0O1xcbiAgICB9XFxuXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBpdmVjMyByZXNCUkMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICBzZXRPdXRwdXQoZG90QVJvd0JDb2wocmVzQlJDLngsIHJlc0JSQy55LCByZXNCUkMueikpO1xcbiAgICB9XFxuICAgIFwifSxSaT1mdW5jdGlvbih0LGUsbixyLGkpe3ZvaWQgMD09PXImJihyPSExKSx2b2lkIDA9PT1pJiYoaT0hMSksdGhpcy52YXJpYWJsZU5hbWVzPVtcIm1hdHJpeEFcIixcIm1hdHJpeEJcIl0sdGhpcy51c2VzUGFja2VkVGV4dHVyZXM9ITAsdGhpcy5vdXRwdXRTaGFwZT1uO3ZhciBhPXI/dFswXTp0WzFdLG89TWF0aC5jZWlsKGEvMikscz1yP1wiaSAqIDIsIHJjLnhcIjpcInJjLngsIGkgKiAyXCIsdT1pP1wicmMueSwgaSAqIDJcIjpcImkgKiAyLCByYy55XCIsYz1yP1tcImEueHh5eVwiLFwiYS56end3XCJdOltcImEueHh6elwiLFwiYS55eXd3XCJdLGw9aT9bXCJiLnh6eHpcIixcImIueXd5d1wiXTpbXCJiLnh5eHlcIixcImIuend6d1wiXTt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgZmxvYXQgc2hhcmVkRGltZW5zaW9uID0gXCIrbytcIi4wO1xcblxcbiAgICAgIHZlYzQgZG90MngyQVJvd0JDb2woaXZlYzIgcmMpIHtcXG4gICAgICAgIHZlYzQgcmVzdWx0ID0gdmVjNCgwKTtcXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgXCIrbytcIjsgaSsrKSB7XFxuICAgICAgICAgIHZlYzQgYSA9IGdldE1hdHJpeEEoXCIrcytcIik7XFxuICAgICAgICAgIHZlYzQgYiA9IGdldE1hdHJpeEIoXCIrdStcIik7XFxuXFxuICAgICAgICAgIHJlc3VsdCArPSAoXCIrY1swXStcIiAqIFwiK2xbMF0rXCIpICsgKFwiK2NbMV0rXCIgKiBcIitsWzFdK1wiKTtcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiByZXN1bHQ7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIHJjID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBzZXRPdXRwdXQoZG90MngyQVJvd0JDb2wocmMpKTtcXG4gICAgICB9XFxuICAgIFwifSxEaT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4pe3RoaXMudmFyaWFibGVOYW1lcz1bXCJwcm9ic1wiXSx0aGlzLm91dHB1dFNoYXBlPVt0LG5dLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICB1bmlmb3JtIGZsb2F0IHNlZWQ7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuXFxuICAgICAgICBmbG9hdCByID0gcmFuZG9tKHNlZWQpO1xcbiAgICAgICAgZmxvYXQgY2RmID0gMC4wO1xcblxcbiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBcIisoZS0xKStcIjsgaSsrKSB7XFxuICAgICAgICAgIGNkZiArPSBnZXRQcm9icyhiYXRjaCwgaSk7XFxuXFxuICAgICAgICAgIGlmIChyIDwgY2RmKSB7XFxuICAgICAgICAgICAgc2V0T3V0cHV0KGZsb2F0KGkpKTtcXG4gICAgICAgICAgICByZXR1cm47XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIC8vIElmIG5vIG90aGVyIGV2ZW50IGhhcHBlbmVkLCBsYXN0IGV2ZW50IGhhcHBlbmVkLlxcbiAgICAgICAgc2V0T3V0cHV0KGZsb2F0KFwiKyhlLTEpK1wiKSk7XFxuICAgICAgfVxcbiAgICBcIn1yZXR1cm4gdC5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKG4scil7bnVsbD09ZS5zZWVkTG9jJiYoZS5zZWVkTG9jPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHIsXCJzZWVkXCIpKSxuLmdsLnVuaWZvcm0xZihlLnNlZWRMb2MsdCl9fSx0fSgpLE1pPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJpbmRpY2VzXCJdLHRoaXMub3V0cHV0U2hhcGU9W3QsZV0sdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGluZGV4ID0gcm91bmQoZ2V0SW5kaWNlcyhjb29yZHMueCkpO1xcbiAgICAgICAgc2V0T3V0cHV0KG1peChmbG9hdChcIityK1wiKSwgZmxvYXQoXCIrbitcIiksXFxuICAgICAgICAgICAgICAgICAgICAgIGZsb2F0KGluZGV4ID09IGNvb3Jkcy55KSkpO1xcbiAgICAgIH1cXG4gICAgXCJ9O2Z1bmN0aW9uIGppKHQsZSl7cmV0dXJuIDE9PT1lP1t0XTpmdW5jdGlvbih0LGUpe3JldHVybltcInhcIixcInlcIixcInpcIixcIndcIixcInVcIixcInZcIl0uc2xpY2UoMCxlKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHQrXCIuXCIrZX0pfSh0LGUpfXZhciBCaT1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVwiXSx0aGlzLmlzUGFja1NoYWRlcj0hMCx0aGlzLm91dHB1dFNoYXBlPXQ7dmFyIGU9dC5sZW5ndGg7aWYoMD09PWUpdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICBzZXRPdXRwdXQodmVjNChnZXRBKCksIDAuLCAwLiwgMC4pKTtcXG4gICAgICAgIH1cXG4gICAgICBcIjtlbHNle3ZhciBuPWppKFwicmNcIixlKSxyPXNyKGUpLGk9ZnVuY3Rpb24odCxlLG4pe2lmKDE9PT10KXJldHVyblwicmMgPiBcIitlWzBdO2Zvcih2YXIgcj1cIlwiLGk9dC0yO2k8dDtpKyspcis9bltpXStcIiA+PSBcIitlW2ldLGk8dC0xJiYocis9XCJ8fFwiKTtyZXR1cm4gcn0oZSx0LG4pLGE9ZnVuY3Rpb24odCxlLG4scil7aWYoMT09PXQpcmV0dXJuXCJcIjt2YXIgaT1yLnNsaWNlKC0yKTtyZXR1cm5cIlxcbiAgICBpbnQgciA9IFwiK2lbMF0rXCI7XFxuICAgIGludCBjID0gXCIraVsxXStcIjtcXG4gICAgaW50IHJwMSA9IHIgKyAxO1xcbiAgICBpbnQgY3AxID0gYyArIDE7XFxuXFxuICAgIGJvb2wgY0VkZ2UgPSBjcDEgPj0gXCIrZStcIjtcXG4gICAgYm9vbCByRWRnZSA9IHJwMSA+PSBcIituK1wiO1xcbiAgXCJ9KGUsdFt0Lmxlbmd0aC0xXSx0W3QubGVuZ3RoLTJdLG4pLG89ZnVuY3Rpb24odCxlKXt2YXIgbj10Lmxlbmd0aCxyPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MDtyPD0xO3IrKylmb3IodmFyIGk9MDtpPD0xO2krKyl7Zm9yKHZhciBhPSgwPT09cj9cInJcIjpcInJwMVwiKStcIiwgXCIrKDA9PT1pP1wiY1wiOlwiY3AxXCIpLG89MjtvPHQ7bysrKWE9ZVtlLmxlbmd0aC0xLW9dK1wiLFwiK2E7bi5wdXNoKGEpfXJldHVybiBufShuLGUpO3JldHVybiAxPT09bj9cImdldEEocmMpLFxcbiAgICAgICAgICAgIHJjICsgMSA+PSBcIit0WzBdK1wiID8gMC4gOiBnZXRBKHJjICsgMSksXFxuICAgICAgICAgICAgMCwgMFwiOlwiZ2V0QShcIityWzBdK1wiKSxcXG4gICAgICAgICAgY0VkZ2UgPyAwLiA6IGdldEEoXCIrclsxXStcIiksXFxuICAgICAgICAgIHJFZGdlID8gMC4gOiBnZXRBKFwiK3JbMl0rXCIpLFxcbiAgICAgICAgICByRWRnZSB8fCBjRWRnZSA/IDAuIDogZ2V0QShcIityWzNdK1wiKVwifSh0LG4pO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgXCIrcitcIiByYyA9IGdldE91dHB1dENvb3JkcygpO1xcblxcbiAgICAgICAgICBpZihcIitpK1wiKSB7XFxuICAgICAgICAgICAgc2V0T3V0cHV0KHZlYzQoMCkpO1xcbiAgICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIFwiK2ErXCJcXG5cXG4gICAgICAgICAgICBzZXRPdXRwdXQodmVjNChcIitvK1wiKSk7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICBcIn19O3ZhciBMaT1mdW5jdGlvbih0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIl0sdGhpcy5vdXRwdXRTaGFwZT1lLm1hcChmdW5jdGlvbihlLG4pe3JldHVybiBlWzBdK3Rbbl0rZVsxXX0pO3ZhciByPXQubGVuZ3RoLGk9c3IociksYT1lLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdFswXX0pLmpvaW4oXCIsXCIpLG89ZS5tYXAoZnVuY3Rpb24oZSxuKXtyZXR1cm4gZVswXSt0W25dfSkuam9pbihcIixcIikscz1bXCJjb29yZHNbMF1cIixcImNvb3Jkc1sxXVwiLFwiY29vcmRzWzJdXCIsXCJjb29yZHNbM11cIl0uc2xpY2UoMCxyKTt0aGlzLnVzZXJDb2RlPTEhPT1yP1wiXFxuICAgICAgXCIraStcIiBzdGFydCA9IFwiK2krXCIoXCIrYStcIik7XFxuICAgICAgXCIraStcIiBlbmQgPSBcIitpK1wiKFwiK28rXCIpO1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIFwiK2krXCIgb3V0QyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaWYgKGFueShsZXNzVGhhbihvdXRDLCBzdGFydCkpIHx8IGFueShncmVhdGVyVGhhbkVxdWFsKG91dEMsIGVuZCkpKSB7XFxuICAgICAgICAgIHNldE91dHB1dChmbG9hdChcIituK1wiKSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICBcIitpK1wiIGNvb3JkcyA9IG91dEMgLSBzdGFydDtcXG4gICAgICAgICAgc2V0T3V0cHV0KGdldFgoXCIrcytcIikpO1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgXCI6XCJcXG4gICAgICAgIGludCBzdGFydCA9IFwiK2ErXCI7XFxuICAgICAgICBpbnQgZW5kID0gXCIrbytcIjtcXG5cXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgaW50IG91dEMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgICAgaWYgKG91dEMgPCBzdGFydCB8fCBvdXRDID49IGVuZCkge1xcbiAgICAgICAgICAgIHNldE91dHB1dChmbG9hdChcIituK1wiKSk7XFxuICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgc2V0T3V0cHV0KGdldFgob3V0QyAtIHN0YXJ0KSk7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICBcIn0semk9ZnVuY3Rpb24odCxlLG4pe2lmKHRoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCJdLFwiYXZnXCI9PT1lJiZuKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjb21wdXRlIHBvc2l0aW9ucyBmb3IgYXZlcmFnZSBwb29sLlwiKTt2YXIgcj10LmZpbHRlcldpZHRoLGk9dC5zdHJpZGVIZWlnaHQsYT10LnN0cmlkZVdpZHRoLG89dC5kaWxhdGlvbkhlaWdodCxzPXQuZGlsYXRpb25XaWR0aCx1PXQuZWZmZWN0aXZlRmlsdGVySGVpZ2h0LGM9dC5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxsPXQucGFkSW5mby50b3AsZj10LnBhZEluZm8ubGVmdDt0aGlzLm91dHB1dFNoYXBlPXQub3V0U2hhcGU7dmFyIGg9XCJhdmdcIj09PWUscD1cIjAuMFwiO2lmKGh8fChwPVwiLTEuMCAvIDFlLTIwXCIpLG4pdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgICAgY29uc3QgaXZlYzIgc3RyaWRlcyA9IGl2ZWMyKFwiK2krXCIsIFwiK2ErXCIpO1xcbiAgICAgICAgY29uc3QgaXZlYzIgcGFkcyA9IGl2ZWMyKFwiK2wrXCIsIFwiK2YrXCIpO1xcblxcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgICBpbnQgZCA9IGNvb3Jkc1szXTtcXG5cXG4gICAgICAgICAgaXZlYzIgeFJDQ29ybmVyID0gY29vcmRzLnl6ICogc3RyaWRlcyAtIHBhZHM7XFxuICAgICAgICAgIGludCB4UkNvcm5lciA9IHhSQ0Nvcm5lci54O1xcbiAgICAgICAgICBpbnQgeENDb3JuZXIgPSB4UkNDb3JuZXIueTtcXG5cXG4gICAgICAgICAgLy8gbWF4L21pbiB4KD8sID8sIGQpIHRvIGdldCB5KHlSLCB5QywgZCkuXFxuICAgICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkXFxuICAgICAgICAgIGZsb2F0IG1pbk1heFZhbHVlID0gMC4wO1xcbiAgICAgICAgICBmbG9hdCBtaW5NYXhWYWx1ZUZvdW5kID0gMC4wO1xcbiAgICAgICAgICBpbnQgbWluTWF4UG9zaXRpb24gPSAwO1xcbiAgICAgICAgICBmbG9hdCBhdmdWYWx1ZSA9IDAuMDtcXG5cXG4gICAgICAgICAgZm9yIChpbnQgd1IgPSAwOyB3UiA8IFwiK3UrXCI7XFxuICAgICAgICAgICAgICB3UiArPSBcIitvK1wiKSB7XFxuICAgICAgICAgICAgaW50IHhSID0geFJDb3JuZXIgKyB3UjtcXG5cXG4gICAgICAgICAgICBpZiAoeFIgPCAwIHx8IHhSID49IFwiK3QuaW5IZWlnaHQrXCIpIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBmb3IgKGludCB3QyA9IDA7IHdDIDwgXCIrYytcIjtcXG4gICAgICAgICAgICAgICAgd0MgKz0gXCIrcytcIikge1xcbiAgICAgICAgICAgICAgaW50IHhDID0geENDb3JuZXIgKyB3QztcXG5cXG4gICAgICAgICAgICAgIGlmICh4QyA8IDAgfHwgeEMgPj0gXCIrdC5pbldpZHRoK1wiKSB7XFxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgZmxvYXQgdmFsdWUgPSBnZXRYKGJhdGNoLCB4UiwgeEMsIGQpO1xcblxcbiAgICAgICAgICAgICAgLy8gSWYgYSBtaW4gLyBtYXggdmFsdWUgaGFzIGFscmVhZHkgYmVlbiBmb3VuZCwgdXNlIGl0LiBJZiBub3QsXFxuICAgICAgICAgICAgICAvLyB1c2UgdGhlIGN1cnJlbnQgdmFsdWUuXFxuICAgICAgICAgICAgICBmbG9hdCBjdXJyTWluTWF4VmFsdWUgPSBtaXgoXFxuICAgICAgICAgICAgICAgICAgdmFsdWUsIG1pbk1heFZhbHVlLCBtaW5NYXhWYWx1ZUZvdW5kKTtcXG4gICAgICAgICAgICAgIGlmICh2YWx1ZSA+PSBjdXJyTWluTWF4VmFsdWUpIHtcXG4gICAgICAgICAgICAgICAgbWluTWF4VmFsdWUgPSB2YWx1ZTtcXG4gICAgICAgICAgICAgICAgbWluTWF4VmFsdWVGb3VuZCA9IDEuMDtcXG4gICAgICAgICAgICAgICAgbWluTWF4UG9zaXRpb24gPSB3UiAqIFwiK2MrXCIgKyB3QztcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgc2V0T3V0cHV0KGZsb2F0KG1pbk1heFBvc2l0aW9uKSk7XFxuICAgICAgICB9XFxuICAgICAgXCI7ZWxzZXt2YXIgZD1lK1wiKFwiK2UrXCIoXCIrZStcIihtaW5NYXhWYWx1ZVswXSwgbWluTWF4VmFsdWVbMV0pLCBtaW5NYXhWYWx1ZVsyXSksIG1pbk1heFZhbHVlWzNdKVwiO1wiYXZnXCI9PT1lJiYoZD1cImF2Z1ZhbHVlIC8gY291bnRcIik7dmFyIG09NCpNYXRoLmZsb29yKHIvNCksZz1yJTQseT1cIlxcbiAgICAgIGlmIChcIitoK1wiKSB7XFxuICAgICAgICBhdmdWYWx1ZSArPSBkb3QodmFsdWVzLCBvbmVzKTtcXG4gICAgICB9IGVsc2Uge1xcbiAgICAgICAgbWluTWF4VmFsdWUgPSBtYXgodmFsdWVzLCBtaW5NYXhWYWx1ZSk7XFxuICAgICAgfVxcbiAgICBcIjt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgaXZlYzIgc3RyaWRlcyA9IGl2ZWMyKFwiK2krXCIsIFwiK2ErXCIpO1xcbiAgICAgIGNvbnN0IGl2ZWMyIHBhZHMgPSBpdmVjMihcIitsK1wiLCBcIitmK1wiKTtcXG4gICAgICBjb25zdCBmbG9hdCBpbml0aWFsaXphdGlvblZhbHVlID0gXCIrcCtcIjtcXG4gICAgICBjb25zdCB2ZWM0IG9uZXMgPSB2ZWM0KDEuMCwgMS4wLCAxLjAsIDEuMCk7XFxuXFxuICAgICAgZmxvYXQgY291bnQgPSAwLjA7XFxuXFxuICAgICAgZmxvYXQgZ2V0VmFsdWUoaW50IGJhdGNoLCBpbnQgeFIsIGludCB4QywgaW50IGQpIHtcXG4gICAgICAgIGlmICh4QyA8IDAgfHwgeEMgPj0gXCIrdC5pbldpZHRoK1wiKSB7XFxuICAgICAgICAgIHJldHVybiBpbml0aWFsaXphdGlvblZhbHVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgY291bnQgKz0gMS4wO1xcbiAgICAgICAgcmV0dXJuIGdldFgoYmF0Y2gsIHhSLCB4QywgZCk7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQgPSBjb29yZHNbM107XFxuXFxuICAgICAgICBpdmVjMiB4UkNDb3JuZXIgPSBjb29yZHMueXogKiBzdHJpZGVzIC0gcGFkcztcXG4gICAgICAgIGludCB4UkNvcm5lciA9IHhSQ0Nvcm5lci54O1xcbiAgICAgICAgaW50IHhDQ29ybmVyID0geFJDQ29ybmVyLnk7XFxuXFxuICAgICAgICAvLyBtYXgvbWluIHgoPywgPywgZCkgdG8gZ2V0IHkoeVIsIHlDLCBkKS5cXG4gICAgICAgIC8vID8gPSB0byBiZSBkZXRlcm1pbmVkXFxuICAgICAgICB2ZWM0IG1pbk1heFZhbHVlID0gdmVjNChcIitwK1wiKTtcXG4gICAgICAgIGZsb2F0IGF2Z1ZhbHVlID0gMC4wO1xcbiAgICAgICAgY291bnQgPSAwLjA7XFxuXFxuICAgICAgICBmb3IgKGludCB3UiA9IDA7IHdSIDwgXCIrdStcIjtcXG4gICAgICAgICAgICB3UiArPSBcIitvK1wiKSB7XFxuICAgICAgICAgIGludCB4UiA9IHhSQ29ybmVyICsgd1I7XFxuXFxuICAgICAgICAgIGlmICh4UiA8IDAgfHwgeFIgPj0gXCIrdC5pbkhlaWdodCtcIikge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIGZvciAoaW50IHdDID0gMDsgd0MgPCBcIittK1wiOyB3QyArPSA0KSB7XFxuICAgICAgICAgICAgaW50IHhDID0geENDb3JuZXIgKyB3QyAqIFwiK3MrXCI7XFxuXFxuICAgICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIHhSLCB4QywgZCksXFxuICAgICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgeFIsIHhDICsgXCIrcytcIiwgZCksXFxuICAgICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgeFIsIHhDICsgMiAqIFwiK3MrXCIsIGQpLFxcbiAgICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIHhSLCB4QyArIDMgKiBcIitzK1wiLCBkKVxcbiAgICAgICAgICAgICk7XFxuXFxuICAgICAgICAgICAgXCIreStcIlxcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIGludCB4QyA9IHhDQ29ybmVyICsgXCIrbStcIjtcXG4gICAgICAgICAgaWYgKFwiKygxPT09ZykrXCIpIHtcXG4gICAgICAgICAgICB2ZWM0IHZhbHVlcyA9IHZlYzQoXFxuICAgICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgeFIsIHhDLCBkKSxcXG4gICAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWUsXFxuICAgICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlLFxcbiAgICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZVxcbiAgICAgICAgICAgICk7XFxuXFxuICAgICAgICAgICAgXCIreStcIlxcbiAgICAgICAgICB9IGVsc2UgaWYgKFwiKygyPT09ZykrXCIpIHtcXG4gICAgICAgICAgICB2ZWM0IHZhbHVlcyA9IHZlYzQoXFxuICAgICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgeFIsIHhDLCBkKSxcXG4gICAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCB4UiwgeEMgKyBcIitzK1wiLCBkKSxcXG4gICAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWUsXFxuICAgICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlXFxuICAgICAgICAgICAgKTtcXG5cXG4gICAgICAgICAgICBcIit5K1wiXFxuICAgICAgICAgIH0gZWxzZSBpZiAoXCIrKDM9PT1nKStcIikge1xcbiAgICAgICAgICAgIHZlYzQgdmFsdWVzID0gdmVjNChcXG4gICAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCB4UiwgeEMsIGQpLFxcbiAgICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIHhSLCB4QyArIFwiK3MrXCIsIGQpLFxcbiAgICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIHhSLCB4QyArIDIgKiBcIitzK1wiLCBkKSxcXG4gICAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWVcXG4gICAgICAgICAgICApO1xcblxcbiAgICAgICAgICAgIFwiK3krXCJcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgc2V0T3V0cHV0KFwiK2QrXCIpO1xcbiAgICAgIH1cXG4gICAgXCJ9fSxGaT1mdW5jdGlvbih0LGUpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCJdO3ZhciBuPXQud2luZG93U2l6ZSxyPXQuYmF0Y2hTaXplLGk9dC5pblNpemUsYT1NYXRoLmNlaWwoaS9uKTt0aGlzLm91dHB1dFNoYXBlPVtyLGFdO3ZhciBvPVwiMC4wXCIscz1cIlwiO1wicHJvZFwiPT09ZT9vPVwiMS4wXCI6XCJtaW5cIj09PWU/KG89XCIxLjAgLyAxZS0yMFwiLHM9XCJtaW5cIik6XCJtYXhcIj09PWUmJihvPVwiLTEuMCAvIDFlLTIwXCIscz1cIm1heFwiKTt2YXIgdT1lK1wiKFwiK2UrXCIoXCIrZStcIihtaW5NYXhWYWx1ZVswXSwgbWluTWF4VmFsdWVbMV0pLCBtaW5NYXhWYWx1ZVsyXSksIG1pbk1heFZhbHVlWzNdKVwiO1wic3VtXCI9PT1lP3U9XCJzdW1WYWx1ZVwiOlwicHJvZFwiPT09ZT91PVwicHJvZFZhbHVlXCI6XCJhbGxcIj09PWU/dT1cImFsbFZhbHVlXCI6XCJhbnlcIj09PWUmJih1PVwiYW55VmFsdWVcIik7dmFyIGM9NCpNYXRoLmZsb29yKG4vNCksbD1uJTQsZj1cIlxcbiAgICAgIGlmIChcIisoXCJzdW1cIj09PWUpK1wiKSB7XFxuICAgICAgICBzdW1WYWx1ZSArPSBkb3QodmFsdWVzLCBvbmVzKTtcXG4gICAgICB9IGVsc2UgaWYgKFwiKyhcInByb2RcIj09PWUpK1wiKSB7XFxuICAgICAgICB2ZWMyIHRtcCA9IHZlYzIodmFsdWVzWzBdLCB2YWx1ZXNbMV0pICogdmVjMih2YWx1ZXNbMl0sIHZhbHVlc1szXSk7XFxuICAgICAgICBwcm9kVmFsdWUgKj0gdG1wWzBdICogdG1wWzFdO1xcbiAgICAgIH0gZWxzZSB7XFxuICAgICAgICBtaW5NYXhWYWx1ZSA9IFwiK3MrXCIodmFsdWVzLCBtaW5NYXhWYWx1ZSk7XFxuICAgICAgfVxcbiAgICBcIixoPVwidmVjNFwiO1wiYWxsXCI9PT1lPyhvPVwiMS4wXCIsZj1cIlxcbiAgICAgICAgYm9vbCByZWR1Y2VkQWxsVmFsdWUgPSBhbGwodmFsdWVzKTtcXG4gICAgICAgIGZsb2F0IGZsb2F0ZWRSZWR1Y2VkQWxsVmFsdWUgPSBmbG9hdChyZWR1Y2VkQWxsVmFsdWUpO1xcbiAgICAgICAgYWxsVmFsdWUgPSBmbG9hdChhbGxWYWx1ZSA+PSAxLjAgJiYgZmxvYXRlZFJlZHVjZWRBbGxWYWx1ZSA+PSAxLjApO1xcbiAgICAgIFwiLGg9XCJidmVjNFwiKTpcImFueVwiPT09ZSYmKG89XCIwLjBcIixmPVwiXFxuICAgICAgICBib29sIHJlZHVjZWRBbnlWYWx1ZSA9IGFueSh2YWx1ZXMpO1xcbiAgICAgICAgZmxvYXQgZmxvYXRlZFJlZHVjZWRBbnlWYWx1ZSA9IGZsb2F0KHJlZHVjZWRBbnlWYWx1ZSk7XFxuICAgICAgICBhbnlWYWx1ZSA9IGZsb2F0KGFueVZhbHVlID49IDEuMCB8fCBmbG9hdGVkUmVkdWNlZEFueVZhbHVlID49IDEuMCk7XFxuICAgICAgXCIsaD1cImJ2ZWM0XCIpO3ZhciBwPVwiXCI7aSVuPjAmJihwPVwiXFxuICAgICAgICBpZiAoaW5JZHggPCAwIHx8IGluSWR4ID49IFwiK2krXCIpIHtcXG4gICAgICAgICAgcmV0dXJuIGluaXRpYWxpemF0aW9uVmFsdWU7XFxuICAgICAgICB9XFxuICAgICAgXCIpLHRoaXMudXNlckNvZGU9XCJcXG4gICAgICBjb25zdCBmbG9hdCBpbml0aWFsaXphdGlvblZhbHVlID0gXCIrbytcIjtcXG4gICAgICBjb25zdCB2ZWM0IG9uZXMgPSB2ZWM0KDEuMCwgMS4wLCAxLjAsIDEuMCk7XFxuXFxuICAgICAgZmxvYXQgZ2V0VmFsdWUoaW50IGJhdGNoLCBpbnQgaW5JZHgpIHtcXG4gICAgICAgIFwiK3ArXCJcXG4gICAgICAgIHJldHVybiBnZXRYKGJhdGNoLCBpbklkeCk7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWMyIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGJhdGNoID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IG91dElkeCA9IGNvb3Jkc1sxXTtcXG4gICAgICAgIGludCBpbk9mZnNldCA9IG91dElkeCAqIFwiK24rXCI7XFxuXFxuICAgICAgICB2ZWM0IG1pbk1heFZhbHVlID0gdmVjNChcIitvK1wiKTtcXG4gICAgICAgIGZsb2F0IHByb2RWYWx1ZSA9IDEuMDtcXG4gICAgICAgIGZsb2F0IHN1bVZhbHVlID0gMC4wO1xcbiAgICAgICAgZmxvYXQgYWxsVmFsdWUgPSAxLjA7XFxuICAgICAgICBmbG9hdCBhbnlWYWx1ZSA9IDAuMDtcXG5cXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgXCIrYytcIjsgaSArPSA0KSB7XFxuICAgICAgICAgIGludCBpbklkeCA9IGluT2Zmc2V0ICsgaTtcXG4gICAgICAgICAgXCIraCtcIiB2YWx1ZXMgPSBcIitoK1wiKFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMiksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMylcXG4gICAgICAgICAgKTtcXG5cXG4gICAgICAgICAgXCIrZitcIlxcbiAgICAgICAgfVxcblxcbiAgICAgICAgaW50IGluSWR4ID0gaW5PZmZzZXQgKyBcIitjK1wiO1xcbiAgICAgICAgaWYgKFwiKygxPT09bCkrXCIpIHtcXG4gICAgICAgICAgXCIraCtcIiB2YWx1ZXMgPSBcIitoK1wiKFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSxcXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlLFxcbiAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWVcXG4gICAgICAgICAgKTtcXG5cXG4gICAgICAgICAgXCIrZitcIlxcbiAgICAgICAgfSBlbHNlIGlmIChcIisoMj09PWwpK1wiKSB7XFxuICAgICAgICAgIFwiK2grXCIgdmFsdWVzID0gXCIraCtcIihcXG4gICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgaW5JZHgpLFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCArIDEpLFxcbiAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWUsXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZVxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgICBcIitmK1wiXFxuICAgICAgICB9IGVsc2UgaWYgKFwiKygzPT09bCkrXCIpIHtcXG4gICAgICAgICAgXCIraCtcIiB2YWx1ZXMgPSBcIitoK1wiKFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMiksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZVxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgICBcIitmK1wiXFxuICAgICAgICB9XFxuICAgICAgICBzZXRPdXRwdXQoXCIrdStcIik7XFxuICAgICAgfVxcbiAgICBcIn0sVWk9ZnVuY3Rpb24odCxlKXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVwiXSx0aGlzLnVzZXNQYWNrZWRUZXh0dXJlcz0hMCx0aGlzLm91dHB1dFNoYXBlPXQ7Zm9yKHZhciBuPVwiXCIscj0wO3I8NDtyKyspe3ZhciBpPVwidGhpc1JDID0gcmM7XCI7ciUyPT0xJiYoaSs9XCJ0aGlzUkMueiArPSAxO1wiKSxyPjEmJihpKz1cInRoaXNSQy55ICs9IDE7XCIpLG4rPVwiXFxuICAgICAgICBcIitpK1wiXFxuICAgICAgICBcIisocj4wP1wiaWYodGhpc1JDLnkgPCByb3dzICYmIHRoaXNSQy56IDwgY29scyl7XCI6XCJcIikrXCJcXG4gICAgICAgICAgaW50IGZsYXRJbmRleCA9IGdldEZsYXRJbmRleCh0aGlzUkMpO1xcblxcbiAgICAgICAgICBpdmVjMyBpbnB1dFJDID0gaW5wdXRDb29yZHNGcm9tUmVzaGFwZWRPdXRDb29yZHMoZmxhdEluZGV4KTtcXG4gICAgICAgICAgdmVjMiBpbnB1dFJDSW5uZXJEaW1zID0gdmVjMihmbG9hdChpbnB1dFJDLnkpLGZsb2F0KGlucHV0UkMueikpO1xcblxcbiAgICAgICAgICByZXN1bHRbXCIrcitcIl0gPVxcbiAgICAgICAgICAgIGdldENoYW5uZWwoZ2V0QShpbnB1dFJDLngsIGlucHV0UkMueSwgaW5wdXRSQy56KSwgaW5wdXRSQ0lubmVyRGltcyk7XFxuICAgICAgICBcIisocj4wP1wifVwiOlwiXCIpK1wiXFxuICAgICAgXCJ9dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIFwiK2Z1bmN0aW9uKHQpe3JldHVyblwiXFxuICAgIGl2ZWMzIGlucHV0Q29vcmRzRnJvbVJlc2hhcGVkT3V0Q29vcmRzKGludCBpbmRleCkge1xcbiAgICAgIFwiK1VuKFtcInJcIixcImNcIixcImRcIl0sdCkrXCJcXG4gICAgICByZXR1cm4gaXZlYzMociwgYywgZCk7XFxuICAgIH1cXG4gIFwifShlKStcIlxcbiAgICAgIFwiK2Z1bmN0aW9uKHQpe3JldHVyblwiXFxuICAgIGludCBnZXRGbGF0SW5kZXgoaXZlYzMgY29vcmRzKSB7XFxuICAgICAgcmV0dXJuIHJvdW5kKFwiK2Z1bmN0aW9uKHQsZSl7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJWZWN0b3JzIHRvIGJlIGRvdHRlZCBtdXN0IGJlIG9mIHRoZSBzYW1lIGxlbmd0aCAtZ290IFwiK3QubGVuZ3RoK1wiIGFuZCBcIitlLmxlbmd0aCk7Zm9yKHZhciBuPVtdLHI9TWF0aC5mbG9vcih0Lmxlbmd0aC80KSxpPXQubGVuZ3RoJTQsYT0wO2E8cjthKyspe3ZhciBvPXQuc2xpY2UoNCphLDQqYSs0KSxzPWUuc2xpY2UoNCphLDQqYSs0KTtuLnB1c2goVm4obykrXCIsIFwiK1ZuKHMpKX1yZXR1cm4gMCE9PWkmJihvPXQuc2xpY2UoNCpyKSxzPWUuc2xpY2UoNCpyKSwxPT09by5sZW5ndGgmJihvPW8ubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwiZmxvYXQoXCIrdCtcIilcIn0pLHM9cy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCJmbG9hdChcIit0K1wiKVwifSkpLG4ucHVzaChWbihvKStcIiwgXCIrVm4ocykpKSxuLm1hcChmdW5jdGlvbih0LGUpe3JldHVyblwiZG90KFwiK3QrXCIpXCJ9KS5qb2luKFwiK1wiKX0oW1wiY29vcmRzLnhcIixcImNvb3Jkcy55XCIsXCJjb29yZHMuelwiXSxLKHQpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC50b1N0cmluZygpfSkuY29uY2F0KFtcIjEuXCJdKSkrXCIpO1xcbiAgICB9XFxuICBcIn0odCkrXCJcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjMyByYyA9IGdldE91dHB1dENvb3JkcygpO1xcblxcbiAgICAgICAgdmVjNCByZXN1bHQgPSB2ZWM0KDAuKTtcXG5cXG4gICAgICAgIGl2ZWMzIHRoaXNSQztcXG4gICAgICAgIGludCByb3dzID0gXCIrdFsxXStcIjtcXG4gICAgICAgIGludCBjb2xzID0gXCIrdFsyXStcIjtcXG5cXG4gICAgICAgIFwiK24rXCJcXG5cXG4gICAgICAgIHNldE91dHB1dChyZXN1bHQpO1xcbiAgICAgIH1cXG4gICAgXCJ9O3ZhciBWaT1mdW5jdGlvbih0LGUsbil7dGhpcy52YXJpYWJsZU5hbWVzPVtcImR5XCJdLHRoaXMub3V0cHV0U2hhcGU9W10sdGhpcy5vdXRwdXRTaGFwZT1lLnNoYXBlO3ZhciByPWUuc2hhcGUsaT1yWzFdLGE9clsyXSxvPXQuc2hhcGUscz1vWzFdLHU9b1syXSxjPVtuJiZzPjE/aS0xOmksbiYmdT4xP2EtMTphXSxsPVtuJiZzPjE/cy0xOnMsbiYmdT4xP3UtMTp1XSxmPWNbMF0vbFswXSxoPWNbMV0vbFsxXSxwPTEvZixkPTEvaCxtPTIqTWF0aC5jZWlsKHApKzIsZz0yKk1hdGguY2VpbChkKSsyO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBpdmVjNCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICAgIGludCBiID0gY29vcmRzWzBdO1xcbiAgICAgICAgaW50IGQgPSBjb29yZHNbM107XFxuICAgICAgICBpbnQgciA9IGNvb3Jkc1sxXTtcXG4gICAgICAgIGludCBjID0gY29vcmRzWzJdO1xcblxcbiAgICAgICAgZmxvYXQgYWNjdW11bGF0b3IgPSAwLjA7XFxuXFxuICAgICAgICBjb25zdCBmbG9hdCBoZWlnaHRTY2FsZSA9IGZsb2F0KFwiK2YrXCIpO1xcbiAgICAgICAgY29uc3QgZmxvYXQgd2lkdGhTY2FsZSA9IGZsb2F0KFwiK2grXCIpO1xcblxcbiAgICAgICAgY29uc3QgZmxvYXQgaW52SGVpZ2h0U2NhbGUgPSBmbG9hdChcIitwK1wiKTtcXG4gICAgICAgIGNvbnN0IGZsb2F0IGludldpZHRoU2NhbGUgPSBmbG9hdChcIitkK1wiKTtcXG5cXG4gICAgICAgIGNvbnN0IGludCB3aW5IZWlnaHQgPSBpbnQoXCIrbStcIik7XFxuICAgICAgICBjb25zdCBpbnQgd2luV2lkdGggPSBpbnQoXCIrZytcIik7XFxuXFxuICAgICAgICAvLyBDb21wdXRlIGJvdW5kcyBmb3Igd2hlcmUgaW4gZHkgd2Ugd2lsbCBsb29rXFxuICAgICAgICBmbG9hdCBzdGFydFJMZXJwID0gZmxvb3IoZmxvYXQocikgKiBpbnZIZWlnaHRTY2FsZSk7XFxuICAgICAgICBpbnQgc3RhcnREeVIgPSBpbnQoc3RhcnRSTGVycCAtIGZsb2F0KHdpbkhlaWdodCAvIDIpKTtcXG5cXG4gICAgICAgIGZsb2F0IHN0YXJ0Q0xlcnAgPSBmbG9vcihmbG9hdChjKSAqIGludldpZHRoU2NhbGUpO1xcbiAgICAgICAgaW50IHN0YXJ0RHlDID0gaW50KHN0YXJ0Q0xlcnAgLSBmbG9hdCh3aW5XaWR0aCAvIDIpKTtcXG5cXG4gICAgICAgIC8vIExvb3Agb3ZlciBkeVxcbiAgICAgICAgZm9yIChpbnQgZHlST2Zmc2V0ID0gMDsgZHlST2Zmc2V0IDwgd2luSGVpZ2h0OyBkeVJPZmZzZXQrKykge1xcbiAgICAgICAgICBpbnQgZHlSID0gZHlST2Zmc2V0ICsgc3RhcnREeVI7XFxuXFxuICAgICAgICAgIC8vIEd1YXJkIGFnYWluc3QgdGhlIHdpbmRvdyBleGNlZWRpbmcgdGhlIGJvdW5kcyBvZiBkeVxcbiAgICAgICAgICBpZiAoZHlSIDwgMCB8fCBkeVIgPj0gXCIrcytcIikge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICB9XFxuXFxuICAgICAgICAgIGZvciAoaW50IGR5Q09mZnNldCA9IDA7IGR5Q09mZnNldCA8IHdpbldpZHRoOyBkeUNPZmZzZXQrKykge1xcbiAgICAgICAgICAgIGludCBkeUMgPSBkeUNPZmZzZXQgKyBzdGFydER5QztcXG5cXG4gICAgICAgICAgICAvLyBHdWFyZCBhZ2FpbnN0IHRoZSB3aW5kb3cgZXhjZWVkaW5nIHRoZSBib3VuZHMgb2YgZHlcXG4gICAgICAgICAgICBpZiAoZHlDIDwgMCB8fCBkeUMgPj0gXCIrdStcIikge1xcbiAgICAgICAgICAgICAgY29udGludWU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGZsb2F0IGR4UiA9IGZsb2F0KGR5UikgKiBoZWlnaHRTY2FsZTtcXG4gICAgICAgICAgICBpbnQgdG9wRHhSSW5kZXggPSBpbnQoZmxvb3IoZHhSKSk7XFxuICAgICAgICAgICAgaW50IGJvdHRvbUR4UkluZGV4ID0gaW50KG1pbihjZWlsKGR4UiksIFwiKyhpLTEpK1wiLjApKTtcXG4gICAgICAgICAgICBmbG9hdCBkeFJMZXJwID0gZHhSIC0gZmxvYXQodG9wRHhSSW5kZXgpO1xcbiAgICAgICAgICAgIGZsb2F0IGludmVyc2VEeFJMZXJwID0gMS4wIC0gZHhSTGVycDtcXG5cXG4gICAgICAgICAgICBmbG9hdCBkeEMgPSBmbG9hdChkeUMpICogd2lkdGhTY2FsZTtcXG4gICAgICAgICAgICBpbnQgbGVmdER4Q0luZGV4ID0gaW50KGZsb29yKGR4QykpO1xcbiAgICAgICAgICAgIGludCByaWdodER4Q0luZGV4ID0gaW50KG1pbihjZWlsKGR4QyksIFwiKyhhLTEpK1wiLjApKTtcXG4gICAgICAgICAgICBmbG9hdCBkeENMZXJwID0gZHhDIC0gZmxvYXQobGVmdER4Q0luZGV4KTtcXG4gICAgICAgICAgICBmbG9hdCBpbnZlcnNlRHhDTGVycCA9IDEuMCAtIGR4Q0xlcnA7XFxuXFxuICAgICAgICAgICAgaWYgKHIgPT0gdG9wRHhSSW5kZXggJiYgYyA9PSBsZWZ0RHhDSW5kZXgpIHtcXG4gICAgICAgICAgICAgIC8vIHRvcExlZnRcXG4gICAgICAgICAgICAgIGFjY3VtdWxhdG9yICs9XFxuICAgICAgICAgICAgICAgIGdldER5KGIsIGR5UiwgZHlDLCBkKSAqIGludmVyc2VEeFJMZXJwICogaW52ZXJzZUR4Q0xlcnA7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIGlmIChyID09IHRvcER4UkluZGV4ICYmIGMgPT0gcmlnaHREeENJbmRleCkge1xcbiAgICAgICAgICAgICAgLy8gdG9wUmlnaHRcXG4gICAgICAgICAgICAgIGFjY3VtdWxhdG9yICs9IGdldER5KGIsIGR5UiwgZHlDLCBkKSAqIGludmVyc2VEeFJMZXJwICogZHhDTGVycDtcXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgaWYgKHIgPT0gYm90dG9tRHhSSW5kZXggJiYgYyA9PSBsZWZ0RHhDSW5kZXgpIHtcXG4gICAgICAgICAgICAgIC8vIGJvdHRvbUxlZnRcXG4gICAgICAgICAgICAgIGFjY3VtdWxhdG9yICs9IGdldER5KGIsIGR5UiwgZHlDLCBkKSAqIGR4UkxlcnAgKiBpbnZlcnNlRHhDTGVycDtcXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgaWYgKHIgPT0gYm90dG9tRHhSSW5kZXggJiYgYyA9PSByaWdodER4Q0luZGV4KSB7XFxuICAgICAgICAgICAgICAvLyBib3R0b21SaWdodFxcbiAgICAgICAgICAgICAgYWNjdW11bGF0b3IgKz0gZ2V0RHkoYiwgZHlSLCBkeUMsIGQpICogZHhSTGVycCAqIGR4Q0xlcnA7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICAvLyBFbmQgbG9vcCBvdmVyIGR5XFxuXFxuICAgICAgICBzZXRPdXRwdXQoYWNjdW11bGF0b3IpO1xcbiAgICAgIH1cXG4gICAgXCJ9LFdpPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdLHRoaXMub3V0cHV0U2hhcGU9W107dmFyIGk9dFswXSxhPXRbMV0sbz10WzJdLHM9dFszXTt0aGlzLm91dHB1dFNoYXBlPVtpLGUsbixzXTt2YXIgdT1bciYmZT4xP2EtMTphLHImJm4+MT9vLTE6b10sYz1bciYmZT4xP2UtMTplLHImJm4+MT9uLTE6bl07dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIGNvbnN0IHZlYzIgZWZmZWN0aXZlSW5wdXRPdmVyT3V0cHV0UmF0aW9SQyA9IHZlYzIoXFxuICAgICAgICAgIFwiK3VbMF0vY1swXStcIixcXG4gICAgICAgICAgXCIrdVsxXS9jWzFdK1wiKTtcXG4gICAgICBjb25zdCB2ZWMyIGlucHV0U2hhcGVSQyA9IHZlYzIoXCIrYStcIi4wLCBcIitvK1wiLjApO1xcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGIgPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgZCA9IGNvb3Jkc1szXTtcXG4gICAgICAgIGl2ZWMyIHlSQyA9IGNvb3Jkcy55ejtcXG5cXG4gICAgICAgIC8vIEZyYWN0aW9uYWwgc291cmNlIGluZGV4LlxcbiAgICAgICAgdmVjMiBzb3VyY2VGcmFjSW5kZXhSQyA9IHZlYzIoeVJDKSAqIGVmZmVjdGl2ZUlucHV0T3Zlck91dHB1dFJhdGlvUkM7XFxuXFxuICAgICAgICAvLyBDb21wdXRlIHRoZSBmb3VyIGludGVnZXIgaW5kaWNlcy5cXG4gICAgICAgIGl2ZWMyIHNvdXJjZUZsb29yUkMgPSBpdmVjMihzb3VyY2VGcmFjSW5kZXhSQyk7XFxuICAgICAgICBpdmVjMiBzb3VyY2VDZWlsUkMgPSBpdmVjMihcXG4gICAgICAgICAgbWluKGlucHV0U2hhcGVSQyAtIDEuMCwgY2VpbChzb3VyY2VGcmFjSW5kZXhSQykpKTtcXG5cXG4gICAgICAgIGZsb2F0IHRvcExlZnQgPSBnZXRBKGIsIHNvdXJjZUZsb29yUkMueCwgc291cmNlRmxvb3JSQy55LCBkKTtcXG4gICAgICAgIGZsb2F0IGJvdHRvbUxlZnQgPSBnZXRBKGIsIHNvdXJjZUNlaWxSQy54LCBzb3VyY2VGbG9vclJDLnksIGQpO1xcbiAgICAgICAgZmxvYXQgdG9wUmlnaHQgPSBnZXRBKGIsIHNvdXJjZUZsb29yUkMueCwgc291cmNlQ2VpbFJDLnksIGQpO1xcbiAgICAgICAgZmxvYXQgYm90dG9tUmlnaHQgPSBnZXRBKGIsIHNvdXJjZUNlaWxSQy54LCBzb3VyY2VDZWlsUkMueSwgZCk7XFxuXFxuICAgICAgICB2ZWMyIGZyYWNSQyA9IHNvdXJjZUZyYWNJbmRleFJDIC0gdmVjMihzb3VyY2VGbG9vclJDKTtcXG5cXG4gICAgICAgIGZsb2F0IHRvcCA9IHRvcExlZnQgKyAodG9wUmlnaHQgLSB0b3BMZWZ0KSAqIGZyYWNSQy55O1xcbiAgICAgICAgZmxvYXQgYm90dG9tID0gYm90dG9tTGVmdCArIChib3R0b21SaWdodCAtIGJvdHRvbUxlZnQpICogZnJhY1JDLnk7XFxuICAgICAgICBmbG9hdCBuZXdWYWx1ZSA9IHRvcCArIChib3R0b20gLSB0b3ApICogZnJhY1JDLng7XFxuXFxuICAgICAgICBzZXRPdXRwdXQobmV3VmFsdWUpO1xcbiAgICAgIH1cXG4gICAgXCJ9LHFpPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiZHlcIl0sdGhpcy5vdXRwdXRTaGFwZT1bXSx0aGlzLm91dHB1dFNoYXBlPWUuc2hhcGU7dmFyIHI9ZS5zaGFwZSxpPXJbMV0sYT1yWzJdLG89dC5zaGFwZSxzPW9bMV0sdT1vWzJdLGM9W24mJnM+MT9pLTE6aSxuJiZ1PjE/YS0xOmFdLGw9W24mJnM+MT9zLTE6cyxuJiZ1PjE/dS0xOnVdLGY9Y1swXS9sWzBdLGg9Y1sxXS9sWzFdLHA9MS9mLGQ9MS9oLG09MipNYXRoLmNlaWwocCkrMixnPTIqTWF0aC5jZWlsKGQpKzI7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGl2ZWM0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgaW50IGIgPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgZCA9IGNvb3Jkc1szXTtcXG4gICAgICAgIGludCByID0gY29vcmRzWzFdO1xcbiAgICAgICAgaW50IGMgPSBjb29yZHNbMl07XFxuXFxuICAgICAgICBmbG9hdCBhY2N1bXVsYXRvciA9IDAuMDtcXG5cXG4gICAgICAgIGNvbnN0IGZsb2F0IGhlaWdodFNjYWxlID0gZmxvYXQoXCIrZitcIik7XFxuICAgICAgICBjb25zdCBmbG9hdCB3aWR0aFNjYWxlID0gZmxvYXQoXCIraCtcIik7XFxuXFxuICAgICAgICBjb25zdCBmbG9hdCBpbnZIZWlnaHRTY2FsZSA9IGZsb2F0KFwiK3ArXCIpO1xcbiAgICAgICAgY29uc3QgZmxvYXQgaW52V2lkdGhTY2FsZSA9IGZsb2F0KFwiK2QrXCIpO1xcblxcbiAgICAgICAgY29uc3QgaW50IHdpbkhlaWdodCA9IGludChcIittK1wiKTtcXG4gICAgICAgIGNvbnN0IGludCB3aW5XaWR0aCA9IGludChcIitnK1wiKTtcXG5cXG4gICAgICAgIC8vIENvbXB1dGUgYm91bmRzIGZvciB3aGVyZSBpbiBkeSB3ZSB3aWxsIGxvb2tcXG4gICAgICAgIGZsb2F0IHN0YXJ0UkxlcnAgPSBmbG9vcihmbG9hdChyKSAqIGludkhlaWdodFNjYWxlKTtcXG4gICAgICAgIGludCBzdGFydER5UiA9IGludChmbG9vcihzdGFydFJMZXJwIC0gZmxvYXQod2luSGVpZ2h0IC8gMikpKTtcXG5cXG4gICAgICAgIGZsb2F0IHN0YXJ0Q0xlcnAgPSBmbG9vcihmbG9hdChjKSAqIGludldpZHRoU2NhbGUpO1xcbiAgICAgICAgaW50IHN0YXJ0RHlDID0gaW50KGZsb29yKHN0YXJ0Q0xlcnAgLSBmbG9hdCh3aW5XaWR0aCAvIDIpKSk7XFxuXFxuICAgICAgICAvLyBMb29wIG92ZXIgZHlcXG4gICAgICAgIGZvciAoaW50IGR5Uk9mZnNldCA9IDA7IGR5Uk9mZnNldCA8IHdpbkhlaWdodDsgZHlST2Zmc2V0KyspIHtcXG4gICAgICAgICAgaW50IGR5UiA9IGR5Uk9mZnNldCArIHN0YXJ0RHlSO1xcblxcbiAgICAgICAgICAvLyBHdWFyZCBhZ2FpbnN0IHRoZSB3aW5kb3cgZXhjZWVkaW5nIHRoZSBib3VuZHMgb2YgZHlcXG4gICAgICAgICAgaWYgKGR5UiA8IDAgfHwgZHlSID49IFwiK3MrXCIpIHtcXG4gICAgICAgICAgICBjb250aW51ZTtcXG4gICAgICAgICAgfVxcblxcbiAgICAgICAgICBmb3IgKGludCBkeUNPZmZzZXQgPSAwOyBkeUNPZmZzZXQgPCB3aW5XaWR0aDsgZHlDT2Zmc2V0KyspIHtcXG4gICAgICAgICAgICBpbnQgZHlDID0gZHlDT2Zmc2V0ICsgc3RhcnREeUM7XFxuXFxuICAgICAgICAgICAgLy8gR3VhcmQgYWdhaW5zdCB0aGUgd2luZG93IGV4Y2VlZGluZyB0aGUgYm91bmRzIG9mIGR5XFxuICAgICAgICAgICAgaWYgKGR5QyA8IDAgfHwgZHlDID49IFwiK3UrXCIpIHtcXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICBmbG9hdCBzb3VyY2VGcmFjUm93ID1cXG4gICAgICAgICAgICAgIGZsb2F0KFwiK2NbMF0rXCIpICpcXG4gICAgICAgICAgICAgICAgKGZsb2F0KGR5UikgLyBmbG9hdChcIitsWzBdK1wiKSk7XFxuXFxuICAgICAgICAgICAgZmxvYXQgc291cmNlRnJhY0NvbCA9XFxuICAgICAgICAgICAgICAgIGZsb2F0KFwiK2NbMV0rXCIpICpcXG4gICAgICAgICAgICAgICAgICAoZmxvYXQoZHlDKSAvIGZsb2F0KFwiK2xbMV0rXCIpKTtcXG5cXG4gICAgICAgICAgICBpbnQgc291cmNlTmVhcmVzdFJvdyA9IGludChtaW4oXFxuICAgICAgICAgICAgICAgIGZsb2F0KGludChcIitpK1wiKSAtIDEpLFxcbiAgICAgICAgICAgICAgICBcIituK1wiID8gZmxvYXQocm91bmQoc291cmNlRnJhY1JvdykpIDpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxvYXQoZmxvb3Ioc291cmNlRnJhY1JvdykpKSk7XFxuXFxuICAgICAgICAgICAgaW50IHNvdXJjZU5lYXJlc3RDb2wgPSBpbnQobWluKFxcbiAgICAgICAgICAgICAgICBmbG9hdChpbnQoXCIrYStcIikgLSAxKSxcXG4gICAgICAgICAgICAgICAgXCIrbitcIiA/IGZsb2F0KHJvdW5kKHNvdXJjZUZyYWNDb2wpKSA6XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0KGZsb29yKHNvdXJjZUZyYWNDb2wpKSkpO1xcblxcbiAgICAgICAgICAgIGlmIChyID09IHNvdXJjZU5lYXJlc3RSb3cgJiYgYyA9PSBzb3VyY2VOZWFyZXN0Q29sKSB7XFxuICAgICAgICAgICAgICBhY2N1bXVsYXRvciArPSBnZXREeShiLCBkeVIsIGR5QywgZCk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICAvLyBFbmQgbG9vcCBvdmVyIGR5XFxuXFxuICAgICAgICBzZXRPdXRwdXQoYWNjdW11bGF0b3IpO1xcbiAgICAgIH1cXG4gICAgXCJ9LCRpPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdLHRoaXMub3V0cHV0U2hhcGU9W107dmFyIGk9dFswXSxhPXRbMV0sbz10WzJdLHM9dFszXTt0aGlzLm91dHB1dFNoYXBlPVtpLGUsbixzXTt2YXIgdT1bciYmZT4xP2EtMTphLHImJm4+MT9vLTE6b10sYz1bciYmZT4xP2UtMTplLHImJm4+MT9uLTE6bl0sbD1yP1wiMC41XCI6XCIwLjBcIjt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgdmVjMiBlZmZlY3RpdmVJbnB1dE92ZXJPdXRwdXRSYXRpb1JDID0gdmVjMihcXG4gICAgICAgICAgXCIrdVswXS9jWzBdK1wiLFxcbiAgICAgICAgICBcIit1WzFdL2NbMV0rXCIpO1xcbiAgICAgIGNvbnN0IHZlYzIgaW5wdXRTaGFwZVJDID0gdmVjMihcIithK1wiLjAsIFwiK28rXCIuMCk7XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYiA9IGNvb3Jkc1swXTtcXG4gICAgICAgIGludCBkID0gY29vcmRzWzNdO1xcbiAgICAgICAgaXZlYzIgeVJDID0gY29vcmRzLnl6O1xcblxcbiAgICAgICAgLy8gRnJhY3Rpb25hbCBzb3VyY2UgaW5kZXguXFxuICAgICAgICB2ZWMyIHNvdXJjZUZyYWNJbmRleFJDID0gdmVjMih5UkMpICogZWZmZWN0aXZlSW5wdXRPdmVyT3V0cHV0UmF0aW9SQztcXG5cXG4gICAgICAgIC8vIENvbXB1dGUgdGhlIGNvb3JkaW5hdG9ycyBvZiBuZWFyZXN0IG5laWdoYm9yIHBvaW50LlxcbiAgICAgICAgaXZlYzIgc291cmNlTmVhcmVzdFJDID0gaXZlYzIoXFxuICAgICAgICAgIG1pbihpbnB1dFNoYXBlUkMgLSAxLjAsIGZsb29yKHNvdXJjZUZyYWNJbmRleFJDICsgXCIrbCtcIikpKTtcXG5cXG4gICAgICAgIGZsb2F0IG5ld1ZhbHVlID0gZ2V0QShiLCBzb3VyY2VOZWFyZXN0UkMueCwgc291cmNlTmVhcmVzdFJDLnksIGQpO1xcblxcbiAgICAgICAgc2V0T3V0cHV0KG5ld1ZhbHVlKTtcXG4gICAgICB9XFxuICAgIFwifSxIaT1mdW5jdGlvbih0LGUpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJ4XCJdO3ZhciBuPXQubGVuZ3RoO2lmKG4+NCl0aHJvdyBuZXcgRXJyb3IoXCJXZWJHTCBiYWNrZW5kOiBSZXZlcnNlIG9mIHJhbmstXCIrbitcIiB0ZW5zb3IgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7aWYodGhpcy5vdXRwdXRTaGFwZT10LDEhPT1uKXt2YXIgcj10Lm1hcChmdW5jdGlvbihuLHIpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4tMSE9PWUuaW5kZXhPZihuKSYmMSE9PXRbbl0/dFtuXStcIiAtIGNvb3Jkc1tcIituK1wiXSAtIDFcIjpcImNvb3Jkc1tcIituK1wiXVwifShyKX0pLmpvaW4oXCIsXCIpLGk9c3Iobik7dGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIFwiK2krXCIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBzZXRPdXRwdXQoZ2V0WChcIityK1wiKSk7XFxuICAgICAgfVxcbiAgICBcIn1lbHNlIHRoaXMudXNlckNvZGU9XCJcXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgaW50IGNvb3JkID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICAgIHNldE91dHB1dChnZXRYKFwiK3RbMF0rXCIgLSBjb29yZCAtIDEpKTtcXG4gICAgICAgIH1cXG4gICAgICBcIn0sS2k9ZnVuY3Rpb24odCxlLG4scixpLGEsbyl7dm9pZCAwPT09byYmKG89ITApLHRoaXMudmFyaWFibGVOYW1lcz1bXCJ1cGRhdGVzXCIsXCJpbmRpY2VzXCIsXCJkZWZhdWx0VmFsdWVcIl0sdGhpcy5vdXRwdXRTaGFwZT1hO3ZhciBzPXNyKGkubGVuZ3RoKSx1PXNyKGEubGVuZ3RoKSxjPVwiXCI7MT09PW4/Yz1cImlcIjoyPT09biYmKGM9XCJpLCBqXCIpO3ZhciBsPVwiZ2V0SW5kaWNlcyhcIitjK1wiKVwiLGY9XCJcIjsxPT09cj9mPVwiaVwiOjI9PT1yJiYoZj1cImksIGNvb3Jkc1sxXVwiKTt2YXIgaD1cImdldFVwZGF0ZXMoXCIrZitcIilcIixwPWU+MT9cInN0cmlkZXNbal1cIjpcInN0cmlkZXNcIjt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgICBcIitzK1wiIHN0cmlkZXMgPSBcIitzK1wiKFwiK2krXCIpO1xcblxcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICBcIit1K1wiIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgICBmbG9hdCBzdW0gPSAwLjA7XFxuICAgICAgICAgIGJvb2wgZm91bmQgPSBmYWxzZTtcXG4gICAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBcIit0K1wiOyBpKyspIHtcXG4gICAgICAgICAgICBpbnQgZmxhdHRlbmVkSW5kZXggPSAwO1xcbiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgXCIrZStcIjsgaisrKSB7XFxuICAgICAgICAgICAgICBpbnQgaW5kZXggPSByb3VuZChcIitsK1wiKTtcXG4gICAgICAgICAgICAgIGZsYXR0ZW5lZEluZGV4ICs9IGluZGV4ICogXCIrcCtcIjtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgaWYgKGZsYXR0ZW5lZEluZGV4ID09IGNvb3Jkc1swXSkge1xcbiAgICAgICAgICAgICAgc3VtICs9IFwiK2grXCI7XFxuICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICAgIHNldE91dHB1dChtaXgoZ2V0RGVmYXVsdFZhbHVlKCksIHN1bSwgZmxvYXQoZm91bmQpKSk7XFxuICAgICAgICB9XFxuICAgICAgXCJ9LEdpPWZ1bmN0aW9uKHQsZSl7dGhpcy52YXJpYWJsZU5hbWVzPVtcInhcIixcInNlZ21lbnRJZHNcIl07dmFyIG49dC53aW5kb3dTaXplLHI9dC5iYXRjaFNpemUsaT10LmluU2l6ZSxhPXQubnVtU2VnbWVudHMsbz1hKk1hdGguY2VpbChpL24pO3RoaXMub3V0cHV0U2hhcGU9W3Isb107dmFyIHM9NCpNYXRoLmZsb29yKG4vNCksdT1uJTQsYz1cIlxcbiAgICAgICAgc3VtVmFsdWUgKz0gZG90KHZhbHVlcywgc2VnRmlsdGVyKTtcXG4gICAgXCIsbD1cIlwiO2klbj4wJiYobD1cIlxcbiAgICAgICAgaWYgKGluSWR4IDwgMCB8fCBpbklkeCA+PSBcIitpK1wiKSB7XFxuICAgICAgICAgIHJldHVybiBpbml0aWFsaXphdGlvblZhbHVlO1xcbiAgICAgICAgfVxcbiAgICAgIFwiKTt2YXIgZj1cIlwiO2klbj4wJiYoZj1cIlxcbiAgICAgICAgaWYgKGluSWR4IDwgMCB8fCBpbklkeCA+PSBcIitpK1wiKSB7XFxuICAgICAgICAgIHJldHVybiAtMS4wO1xcbiAgICAgICAgfVxcbiAgICAgIFwiKSx0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgY29uc3QgZmxvYXQgaW5pdGlhbGl6YXRpb25WYWx1ZSA9IDAuMDtcXG5cXG4gICAgICBmbG9hdCBnZXRWYWx1ZShpbnQgYmF0Y2gsIGludCBpbklkeCkge1xcbiAgICAgICAgXCIrbCtcIlxcbiAgICAgICAgcmV0dXJuIGdldFgoYmF0Y2gsIGluSWR4KTtcXG4gICAgICB9XFxuXFxuICAgICAgZmxvYXQgZ2V0U2VnbWVudElkQXRJbmRleChpbnQgaW5JZHgpIHtcXG4gICAgICAgIFwiK2YrXCJcXG4gICAgICAgIHJldHVybiBnZXRTZWdtZW50SWRzKGluSWR4KTtcXG4gICAgICB9XFxuXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBpbnQgYmF0Y2ggPSBjb29yZHNbMF07XFxuICAgICAgICBpbnQgb3V0SWR4ID0gY29vcmRzWzFdO1xcbiAgICAgICAgaW50IGluT2Zmc2V0ID0gaW50KGZsb29yKGZsb2F0KG91dElkeCkgLyBmbG9hdChcXG4gICAgICAgICAgXCIrYStcIikpICogZmxvYXQoXCIrbitcIikpO1xcbiAgICAgICAgaW50IGN1cnJlbnRTZWcgPSBpbnQobW9kKGZsb2F0KG91dElkeCksIGZsb2F0KFwiK2ErXCIpKSk7XFxuXFxuICAgICAgICBmbG9hdCBzdW1WYWx1ZSA9IDAuMDtcXG5cXG4gICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgXCIrcytcIjsgaSArPSA0KSB7XFxuICAgICAgICAgIGludCBpbklkeCA9IGluT2Zmc2V0ICsgaTtcXG4gICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMiksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMylcXG4gICAgICAgICAgKTtcXG5cXG4gICAgICAgICAgdmVjNCBzZWdGaWx0ZXIgPSB2ZWM0KFxcbiAgICAgICAgICAgIGludChnZXRTZWdtZW50SWRBdEluZGV4KGluSWR4KSkgPT0gY3VycmVudFNlZyA/IDEgOiAwLFxcbiAgICAgICAgICAgIGludChnZXRTZWdtZW50SWRBdEluZGV4KGluSWR4ICsgMSkpID09IGN1cnJlbnRTZWcgPyAxIDogMCxcXG4gICAgICAgICAgICBpbnQoZ2V0U2VnbWVudElkQXRJbmRleChpbklkeCArIDIpKSA9PSBjdXJyZW50U2VnID8gMSA6IDAsXFxuICAgICAgICAgICAgaW50KGdldFNlZ21lbnRJZEF0SW5kZXgoaW5JZHggKyAzKSkgPT0gY3VycmVudFNlZyA/IDEgOiAwXFxuICAgICAgICAgICk7XFxuXFxuICAgICAgICAgIFwiK2MrXCJcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGludCBpbklkeCA9IGluT2Zmc2V0ICsgXCIrcytcIjtcXG4gICAgICAgIGlmIChcIisoMT09PXUpK1wiKSB7XFxuICAgICAgICAgIHZlYzQgdmFsdWVzID0gdmVjNChcXG4gICAgICAgICAgICBnZXRWYWx1ZShiYXRjaCwgaW5JZHgpLFxcbiAgICAgICAgICAgIGluaXRpYWxpemF0aW9uVmFsdWUsXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSxcXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlXFxuICAgICAgICAgICk7XFxuXFxuICAgICAgICAgIGludCBpbklkeFNlZyA9IGludChnZXRTZWdtZW50SWRBdEluZGV4KGluSWR4KSk7XFxuXFxuICAgICAgICAgIHZlYzQgc2VnRmlsdGVyID0gdmVjNChcXG4gICAgICAgICAgICBpbnQoZ2V0U2VnbWVudElkQXRJbmRleChpbklkeCkpID09IGN1cnJlbnRTZWcgPyAxIDogMCxcXG4gICAgICAgICAgICAwLFxcbiAgICAgICAgICAgIDAsXFxuICAgICAgICAgICAgMFxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgICBcIitjK1wiXFxuICAgICAgICB9IGVsc2UgaWYgKFwiKygyPT09dSkrXCIpIHtcXG4gICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZSxcXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblZhbHVlXFxuICAgICAgICAgICk7XFxuXFxuICAgICAgICAgIHZlYzQgc2VnRmlsdGVyID0gdmVjNChcXG4gICAgICAgICAgICBpbnQoZ2V0U2VnbWVudElkQXRJbmRleChpbklkeCkpID09IGN1cnJlbnRTZWcgPyAxIDogMCxcXG4gICAgICAgICAgICBpbnQoZ2V0U2VnbWVudElkQXRJbmRleChpbklkeCArIDEpKSA9PSBjdXJyZW50U2VnID8gMSA6IDAsXFxuICAgICAgICAgICAgICAwLFxcbiAgICAgICAgICAgICAgMFxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgICBcIitjK1wiXFxuICAgICAgICB9IGVsc2UgaWYgKFwiKygzPT09dSkrXCIpIHtcXG4gICAgICAgICAgdmVjNCB2YWx1ZXMgPSB2ZWM0KFxcbiAgICAgICAgICAgIGdldFZhbHVlKGJhdGNoLCBpbklkeCksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMSksXFxuICAgICAgICAgICAgZ2V0VmFsdWUoYmF0Y2gsIGluSWR4ICsgMiksXFxuICAgICAgICAgICAgaW5pdGlhbGl6YXRpb25WYWx1ZVxcbiAgICAgICAgICApO1xcblxcbiAgICAgICAgICB2ZWM0IHNlZ0ZpbHRlciA9IHZlYzQoXFxuICAgICAgICAgICAgaW50KGdldFNlZ21lbnRJZEF0SW5kZXgoaW5JZHgpKSA9PSBjdXJyZW50U2VnID8gMSA6IDAsXFxuICAgICAgICAgICAgaW50KGdldFNlZ21lbnRJZEF0SW5kZXgoaW5JZHggKyAxKSkgPT0gY3VycmVudFNlZyA/IDEgOiAwLFxcbiAgICAgICAgICAgIGludChnZXRTZWdtZW50SWRBdEluZGV4KGluSWR4ICsgMikpID09IGN1cnJlbnRTZWcgPyAxIDogMCxcXG4gICAgICAgICAgICAwXFxuICAgICAgICAgICk7XFxuXFxuICAgICAgICAgIFwiK2MrXCJcXG4gICAgICAgIH1cXG4gICAgICAgIHNldE91dHB1dChzdW1WYWx1ZSk7XFxuICAgICAgfVxcbiAgICBcIn0sWGk9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk7aWYodGhpcy52YXJpYWJsZU5hbWVzPVtcImNcIixcImFcIixcImJcIl0sdGhpcy5vdXRwdXRTaGFwZT1lLG4+NCl0aHJvdyBFcnJvcihcIldoZXJlIGZvciByYW5rIFwiK24rXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7aWYoMT09PW4paT1cInJlc1JDXCIscj1cInJlc1JDXCI7ZWxzZXtmb3IodmFyIGE9W1wicmVzUkMueFwiLFwicmVzUkMueVwiLFwicmVzUkMuelwiLFwicmVzUkMud1wiXSxvPVtdLHM9W10sdT0wO3U8ZS5sZW5ndGg7dSsrKXMucHVzaChcIlwiK2FbdV0pLHU8dCYmby5wdXNoKFwiXCIrYVt1XSk7cj1vLmpvaW4oKSxpPXMuam9pbigpfXZhciBjPXNyKG4pO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBcIitjK1wiIHJlc1JDID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCBjVmFsID0gZ2V0QyhcIityK1wiKTtcXG4gICAgICAgIGlmIChjVmFsID49IDEuMCkge1xcbiAgICAgICAgICBzZXRPdXRwdXQoZ2V0QShcIitpK1wiKSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICBzZXRPdXRwdXQoZ2V0QihcIitpK1wiKSk7XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICBcIn0sWWk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJzb3VyY2VcIl0sdGhpcy5vdXRwdXRTaGFwZT10LHRoaXMucmFuaz10Lmxlbmd0aDt2YXIgZSxuPXNyKHRoaXMucmFuaykscj1cInVuaWZvcm0gaW50IHN0YXJ0W1wiK3RoaXMucmFuaytcIl07XCIsaT1mdW5jdGlvbih0KXtpZigxPT09dClyZXR1cm5cInNvdXJjZUxvY1wiO2lmKHQ8PTYpcmV0dXJuIEppLnNsaWNlKDAsdCkubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwic291cmNlTG9jLlwiK3R9KS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihcIlNsaWNpbmcgZm9yIHJhbmsgXCIrdCtcIiBpcyBub3QgeWV0IHN1cHBvcnRlZFwiKX0odGhpcy5yYW5rKTtlPVwiXFxuICAgICAgICBcIituK1wiIHNvdXJjZUxvYztcXG4gICAgICAgIFwiK24rXCIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICBcIit0Lm1hcChmdW5jdGlvbih0LGUpe3JldHVyblwic291cmNlTG9jLlwiK0ppW2VdK1wiID0gc3RhcnRbXCIrZStcIl0gKyBjb29yZHMuXCIrSmlbZV0rXCI7XCJ9KS5qb2luKFwiXFxuXCIpK1wiXFxuICAgICAgXCIsdGhpcy51c2VyQ29kZT1cIlxcbiAgICAgIFwiK3IrXCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBcIitlK1wiXFxuICAgICAgICBzZXRPdXRwdXQoZ2V0U291cmNlKFwiK2krXCIpKTtcXG4gICAgICB9XFxuICAgIFwifXJldHVybiB0LnByb3RvdHlwZS5nZXRDdXN0b21TZXR1cEZ1bmM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZih0Lmxlbmd0aCE9PXRoaXMucmFuayl0aHJvdyBFcnJvcihcIlRoZSByYW5rIChcIit0aGlzLnJhbmsrXCIpIG9mIHRoZSBwcm9ncmFtIG11c3QgbWF0Y2ggdGhlIGxlbmd0aCBvZiBzdGFydCAoXCIrdC5sZW5ndGgrXCIpXCIpO3JldHVybiBmdW5jdGlvbihuLHIpe251bGw9PWUuc3RhcnRMb2MmJihlLnN0YXJ0TG9jPW4uZ2V0VW5pZm9ybUxvY2F0aW9uTm9UaHJvdyhyLFwic3RhcnRcIiksbnVsbD09ZS5zdGFydExvYyl8fG4uZ2wudW5pZm9ybTFpdihlLnN0YXJ0TG9jLHQpfX0sdH0oKSxKaT1bXCJ4XCIsXCJ5XCIsXCJ6XCIsXCJ3XCIsXCJ1XCIsXCJ2XCJdO3ZhciBaaT1mdW5jdGlvbih0LGUsbixyKXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wieFwiXTt2YXIgaT1uLmZpbHRlcihmdW5jdGlvbih0LGUpe3JldHVybi0xPT09ci5pbmRleE9mKGUpfSk7dGhpcy5vdXRwdXRTaGFwZT1pO3ZhciBhPW4ubGVuZ3RoLG89c3Iobi5sZW5ndGgpLHM9c3IoaS5sZW5ndGgpLHU9XCJcIjtpZigxPT09YSl1PVwiY29vcmRzICogc3RyaWRlcyArIGJlZ2luXCI7ZWxzZXt2YXIgYz0wO3U9bi5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm4tMT09PXIuaW5kZXhPZihlKT8oYysrLDE9PT1pLmxlbmd0aD9cImNvb3JkcyAqIHN0cmlkZXNbXCIrZStcIl0gKyBiZWdpbltcIitlK1wiXVwiOlwiY29vcmRzW1wiKyhjLTEpK1wiXSAqIHN0cmlkZXNbXCIrZStcIl0gKyBiZWdpbltcIitlK1wiXVwiKTpcImJlZ2luW1wiK2UrXCJdXCJ9KS5qb2luKFwiLFwiKX10aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgXCIrbytcIiBiZWdpbiA9IFwiK28rXCIoXCIrdCtcIik7XFxuICAgICAgXCIrbytcIiBzdHJpZGVzID0gXCIrbytcIihcIitlK1wiKTtcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBcIitzK1wiIGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgc2V0T3V0cHV0KGdldFgoXCIrdStcIikpO1xcbiAgICAgIH1cXG4gICAgXCJ9LFFpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLmdwZ3B1PXQsdGhpcy5udW1Vc2VkVGV4dHVyZXM9MCx0aGlzLm51bUZyZWVUZXh0dXJlcz0wLHRoaXMuZnJlZVRleHR1cmVzPXt9LHRoaXMubG9nRW5hYmxlZD0hMSx0aGlzLnVzZWRUZXh0dXJlcz17fX1yZXR1cm4gdC5wcm90b3R5cGUuYWNxdWlyZVRleHR1cmU9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dGEoZSxuKSxhPWVhKHQsaSxuKTtpZihhIGluIHRoaXMuZnJlZVRleHR1cmVzfHwodGhpcy5mcmVlVGV4dHVyZXNbYV09W10pLGEgaW4gdGhpcy51c2VkVGV4dHVyZXN8fCh0aGlzLnVzZWRUZXh0dXJlc1thXT1bXSksdGhpcy5mcmVlVGV4dHVyZXNbYV0ubGVuZ3RoPjApe3RoaXMubnVtRnJlZVRleHR1cmVzLS0sdGhpcy5udW1Vc2VkVGV4dHVyZXMrKyx0aGlzLmxvZygpO3ZhciBvPXRoaXMuZnJlZVRleHR1cmVzW2FdLnNoaWZ0KCk7cmV0dXJuIHRoaXMudXNlZFRleHR1cmVzW2FdLnB1c2gobyksb31yZXR1cm4gdGhpcy5udW1Vc2VkVGV4dHVyZXMrKyx0aGlzLmxvZygpLGk9PT1Mbi5QQUNLRURfMlgyX0ZMT0FUMzI/cj10aGlzLmdwZ3B1LmNyZWF0ZVBhY2tlZE1hdHJpeFRleHR1cmUodFswXSx0WzFdKTppPT09TG4uUEFDS0VEXzJYMl9GTE9BVDE2P3I9dGhpcy5ncGdwdS5jcmVhdGVGbG9hdDE2UGFja2VkTWF0cml4VGV4dHVyZSh0WzBdLHRbMV0pOmk9PT1Mbi5VTlBBQ0tFRF9GTE9BVDMyP3I9dGhpcy5ncGdwdS5jcmVhdGVGbG9hdDMyTWF0cml4VGV4dHVyZSh0WzBdLHRbMV0pOmk9PT1Mbi5VTlBBQ0tFRF9GTE9BVDE2P3I9dGhpcy5ncGdwdS5jcmVhdGVGbG9hdDE2TWF0cml4VGV4dHVyZSh0WzBdLHRbMV0pOmk9PT1Mbi5QQUNLRURfNFgxX1VOU0lHTkVEX0JZVEUmJihyPXRoaXMuZ3BncHUuY3JlYXRlVW5zaWduZWRCeXRlc01hdHJpeFRleHR1cmUodFswXSx0WzFdKSksdGhpcy51c2VkVGV4dHVyZXNbYV0ucHVzaChyKSxyfSx0LnByb3RvdHlwZS5yZWxlYXNlVGV4dHVyZT1mdW5jdGlvbih0LGUsbixyKXtpZihudWxsIT10aGlzLmZyZWVUZXh0dXJlcyl7dmFyIGk9ZWEoZSx0YShuLHIpLHIpO2kgaW4gdGhpcy5mcmVlVGV4dHVyZXN8fCh0aGlzLmZyZWVUZXh0dXJlc1tpXT1bXSksdGhpcy5mcmVlVGV4dHVyZXNbaV0ucHVzaCh0KSx0aGlzLm51bUZyZWVUZXh0dXJlcysrLHRoaXMubnVtVXNlZFRleHR1cmVzLS07dmFyIGE9dGhpcy51c2VkVGV4dHVyZXNbaV0sbz1hLmluZGV4T2YodCk7aWYobzwwKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZWxlYXNlIGEgdGV4dHVyZSB0aGF0IHdhcyBuZXZlciBwcm92aWRlZCBieSB0aGlzIHRleHR1cmUgbWFuYWdlclwiKTthLnNwbGljZShvLDEpLHRoaXMubG9nKCl9fSx0LnByb3RvdHlwZS5sb2c9ZnVuY3Rpb24oKXtpZih0aGlzLmxvZ0VuYWJsZWQpe3ZhciB0PXRoaXMubnVtRnJlZVRleHR1cmVzK3RoaXMubnVtVXNlZFRleHR1cmVzO2NvbnNvbGUubG9nKFwiRnJlZS9Vc2VkXCIsdGhpcy5udW1GcmVlVGV4dHVyZXMrXCIgLyBcIit0aGlzLm51bVVzZWRUZXh0dXJlcyxcIihcIit0K1wiKVwiKX19LHQucHJvdG90eXBlLmdldE51bVVzZWRUZXh0dXJlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm51bVVzZWRUZXh0dXJlc30sdC5wcm90b3R5cGUuZ2V0TnVtRnJlZVRleHR1cmVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubnVtRnJlZVRleHR1cmVzfSx0LnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZihudWxsIT10aGlzLmZyZWVUZXh0dXJlcyl7Zm9yKHZhciBlIGluIHRoaXMuZnJlZVRleHR1cmVzKXRoaXMuZnJlZVRleHR1cmVzW2VdLmZvckVhY2goZnVuY3Rpb24oZSl7dC5ncGdwdS5kZWxldGVNYXRyaXhUZXh0dXJlKGUpfSk7Zm9yKHZhciBlIGluIHRoaXMudXNlZFRleHR1cmVzKXRoaXMudXNlZFRleHR1cmVzW2VdLmZvckVhY2goZnVuY3Rpb24oZSl7dC5ncGdwdS5kZWxldGVNYXRyaXhUZXh0dXJlKGUpfSk7dGhpcy5mcmVlVGV4dHVyZXM9bnVsbCx0aGlzLnVzZWRUZXh0dXJlcz1udWxsLHRoaXMubnVtVXNlZFRleHR1cmVzPTAsdGhpcy5udW1GcmVlVGV4dHVyZXM9MH19LHR9KCk7ZnVuY3Rpb24gdGEodCxlKXtpZih0PT09Qm4uVVBMT0FEKXJldHVybiBlP0xuLlBBQ0tFRF8yWDJfRkxPQVQzMjpMbi5VTlBBQ0tFRF9GTE9BVDMyO2lmKHQ9PT1Cbi5SRU5ERVJ8fG51bGw9PXQpcmV0dXJuIGU/THQuZ2V0KFwiV0VCR0xfUkVOREVSX0ZMT0FUMzJfRU5BQkxFRFwiKT9Mbi5QQUNLRURfMlgyX0ZMT0FUMzI6TG4uUEFDS0VEXzJYMl9GTE9BVDE2Okx0LmdldChcIldFQkdMX1JFTkRFUl9GTE9BVDMyX0VOQUJMRURcIik/TG4uVU5QQUNLRURfRkxPQVQzMjpMbi5VTlBBQ0tFRF9GTE9BVDE2O2lmKHQ9PT1Cbi5ET1dOTE9BRHx8dD09PUJuLlBJWEVMUylyZXR1cm4gTG4uUEFDS0VEXzRYMV9VTlNJR05FRF9CWVRFO3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gbG9naWNhbCB0ZXh0dXJlIHR5cGUgXCIrdCl9ZnVuY3Rpb24gZWEodCxlLG4pe3JldHVybiB0WzBdK1wiX1wiK3RbMV0rXCJfXCIrZStcIl9cIitufXZhciBuYT1mdW5jdGlvbih0LGUpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdO2Zvcih2YXIgbj1uZXcgQXJyYXkodC5sZW5ndGgpLHI9MDtyPG4ubGVuZ3RoO3IrKyluW3JdPXRbcl0qZVtyXTt0aGlzLm91dHB1dFNoYXBlPW4sdGhpcy5yYW5rPW4ubGVuZ3RoO3ZhciBpPXNyKHRoaXMucmFuayksYT1mdW5jdGlvbih0KXt2YXIgZT10Lmxlbmd0aDtpZihlPjUpdGhyb3cgRXJyb3IoXCJUaWxlIGZvciByYW5rIFwiK2UrXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7aWYoMT09PWUpcmV0dXJuXCJpbW9kKHJlc1JDLCBcIit0WzBdK1wiKVwiO2Zvcih2YXIgbj1bXCJyZXNSQy54XCIsXCJyZXNSQy55XCIsXCJyZXNSQy56XCIsXCJyZXNSQy53XCIsXCJyZXNSQy51XCJdLHI9W10saT0wO2k8dC5sZW5ndGg7aSsrKXIucHVzaChcImltb2QoXCIrbltpXStcIiwgXCIrdFtpXStcIilcIik7cmV0dXJuIHIuam9pbigpfSh0KTt0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgXCIraStcIiByZXNSQyA9IGdldE91dHB1dENvb3JkcygpO1xcbiAgICAgICAgc2V0T3V0cHV0KGdldEEoXCIrYStcIikpO1xcbiAgICAgIH1cXG4gICAgXCJ9O3ZhciByYT1mdW5jdGlvbih0LGUpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdO2Zvcih2YXIgbj1uZXcgQXJyYXkodC5sZW5ndGgpLHI9MDtyPG4ubGVuZ3RoO3IrKyluW3JdPXRbZVtyXV07dGhpcy5vdXRwdXRTaGFwZT1uLHRoaXMucmFuaz1uLmxlbmd0aDt2YXIgaT1zcih0aGlzLnJhbmspLGE9ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGg7aWYoZT42KXRocm93IEVycm9yKFwiVHJhbnNwb3NlIGZvciByYW5rIFwiK2UrXCIgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7Zm9yKHZhciBuPVtcInJlc1JDLnhcIixcInJlc1JDLnlcIixcInJlc1JDLnpcIixcInJlc1JDLndcIixcInJlc1JDLnVcIixcInJlc1JDLnZcIl0scj1uZXcgQXJyYXkoZSksaT0wO2k8dC5sZW5ndGg7aSsrKXJbdFtpXV09bltpXTtyZXR1cm4gci5qb2luKCl9KGUpO3RoaXMudXNlckNvZGU9XCJcXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIFwiK2krXCIgcmVzUkMgPSBnZXRPdXRwdXRDb29yZHMoKTtcXG4gICAgICBzZXRPdXRwdXQoZ2V0QShcIithK1wiKSk7XFxuICAgIH1cXG4gICAgXCJ9O3ZhciBpYT0xLjc1ODA5OTM0MDg0NzM3NjgsYWE9MS4wNTA3MDA5ODczNTU0ODA1LG9hPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMudmFyaWFibGVOYW1lcz1bXCJBXCJdLHRoaXMub3V0cHV0U2hhcGU9dCx0aGlzLnVzZXJDb2RlPVwiXFxuICAgICAgdW5pZm9ybSBmbG9hdCBOQU47XFxuICAgICAgZmxvYXQgdW5hcnlPcGVyYXRpb24oZmxvYXQgeCkge1xcbiAgICAgICAgXCIrZStcIlxcbiAgICAgIH1cXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBmbG9hdCB4ID0gZ2V0QUF0T3V0Q29vcmRzKCk7XFxuICAgICAgICBmbG9hdCB5ID0gdW5hcnlPcGVyYXRpb24oeCk7XFxuXFxuICAgICAgICBzZXRPdXRwdXQoeSk7XFxuICAgICAgfVxcbiAgICBcIn1yZXR1cm4gdC5wcm90b3R5cGUuZ2V0Q3VzdG9tU2V0dXBGdW5jPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gZnVuY3Rpb24oZSxuKXtudWxsPT10LnN0YXJ0TG9jJiYodC5zdGFydExvYz1lLmdldFVuaWZvcm1Mb2NhdGlvbk5vVGhyb3cobixcIk5BTlwiKSxudWxsPT10LnN0YXJ0TG9jKXx8ZS5nbC51bmlmb3JtMWYodC5zdGFydExvYyxOYU4pfX0sdH0oKSxzYT1cImlmIChpc05hTih4KSkgcmV0dXJuIHg7XCIsdWE9c2ErXCJcXG4gIHJldHVybiAoeCA8IDAuMCkgPyAwLjAgOiB4O1xcblwiLGNhPVwiXFxuICAvLyBTdGFibGUgYW5kIEF0dHJhY3RpbmcgRml4ZWQgUG9pbnQgKDAsIDEpIGZvciBOb3JtYWxpemVkIFdlaWdodHMuXFxuICAvLyBzZWU6IGh0dHBzOi8vYXJ4aXYub3JnL2Ficy8xNzA2LjAyNTE1XFxuICBmbG9hdCBzY2FsZUFscGhhID0gXCIraWErXCI7XFxuICBmbG9hdCBzY2FsZSA9IFwiK2FhK1wiO1xcbiAgcmV0dXJuICh4ID49IDAuMCkgPyBzY2FsZSAqIHggOiBzY2FsZUFscGhhICogKGV4cCh4KSAtIDEuMCk7XFxuXCI7dmFyIGxhPXNhK1wiXFxuICByZXR1cm4gc2luKHgpO1xcblwiLGZhPXNhK1wiXFxuICByZXR1cm4gY29zKHgpO1xcblwiLGhhPXNhK1wiXFxuICByZXR1cm4gYXRhbih4KTtcXG5cIixwYT1zYStcIlxcbiAgaWYgKHggPCAxLjApIHJldHVybiBOQU47XFxuICByZXR1cm4gbG9nKHggKyBzcXJ0KHggKiB4IC0gMS4wKSk7XCIsZGE9c2ErXCJcXG4gIGlmICgoeCA8IC0xLjApIHx8ICh4ID4gMS4wKSkgcmV0dXJuIE5BTjtcXG4gIHJldHVybiAobG9nKDEuMCArIHgpIC0gbG9nKDEuMCAtIHgpKSAvIDIuMDtcIixtYT1mdW5jdGlvbih0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVwiXSx0aGlzLnVzZXNQYWNrZWRUZXh0dXJlcz0hMCx0aGlzLm91dHB1dFNoYXBlPXQ7dmFyIGU9dC5sZW5ndGgsbj1qaShcInJjXCIsZSkscj1zcihlKSxpPWZ1bmN0aW9uKHQsZSl7aWYoMT09PXQpcmV0dXJuXCJyY1wiO2Zvcih2YXIgbj1cIlwiLHI9MDtyPHQ7cisrKW4rPWVbcl0scjx0LTEmJihuKz1cIixcIik7cmV0dXJuIG59KGUsbiksYT1uLnNsaWNlKC0yKSxvPWU8PTE/XCJyY1wiOlwidmVjMihcIithLmpvaW4oXCIsXCIpK1wiKVwiO3RoaXMudXNlckNvZGU9XCJcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICBcIityK1wiIHJjID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgICB2ZWM0IHBhY2tlZElucHV0ID0gZ2V0QShcIitpK1wiKTtcXG5cXG4gICAgICAgIHNldE91dHB1dChnZXRDaGFubmVsKHBhY2tlZElucHV0LCBcIitvK1wiKSk7XFxuICAgICAgfVxcbiAgICBcIn07dmFyIGdhPUFlKHtjb25jYXRfOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCksYih0Lmxlbmd0aD49MSxcIlBhc3MgYXQgbGVhc3Qgb25lIHRlbnNvciB0byBjb25jYXRcIik7dmFyIG49a2UodCxcInRlbnNvcnNcIixcImNvbmNhdFwiKTtlPVAoZSxuWzBdLnNoYXBlKVswXTt2YXIgcj1kZShuLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZX0pLGUpO2lmKDA9PT1FKHIpKXJldHVybiBNZShbXSxyKTtpZigxPT09KG49bi5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2l6ZT4wfSkpLmxlbmd0aClyZXR1cm4gblswXTt2YXIgaT1uLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZX0pOyFmdW5jdGlvbih0LGUpe3ZhciBuPXRbMF0ubGVuZ3RoO3QuZm9yRWFjaChmdW5jdGlvbih0LGUpe2IodC5sZW5ndGg9PT1uLFwiRXJyb3IgaW4gY29uY2F0XCIrbitcIkQ6IHJhbmsgb2YgdGVuc29yc1tcIitlK1wiXSBtdXN0IGJlIHRoZSBzYW1lIGFzIHRoZSByYW5rIG9mIHRoZSByZXN0IChcIituK1wiKVwiKX0pLGIoZT49MCYmZTxuLFwiRXJyb3IgaW4gY29uY2F0XCIrbitcIkQ6IGF4aXMgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIFwiKyhuLTEpK1wiLlwiKTt2YXIgcj10WzBdO3QuZm9yRWFjaChmdW5jdGlvbih0LGkpe2Zvcih2YXIgYT0wO2E8bjthKyspYihhPT09ZXx8dFthXT09PXJbYV0sXCJFcnJvciBpbiBjb25jYXRcIituK1wiRDogU2hhcGUgb2YgdGVuc29yc1tcIitpK1wiXSAoXCIrdCtcIikgZG9lcyBub3QgbWF0Y2ggdGhlIHNoYXBlIG9mIHRoZSByZXN0IChcIityK1wiKSBhbG9uZyB0aGUgbm9uLWNvbmNhdGVuYXRlZCBheGlzIFwiK2krXCIuXCIpfSl9KGksZSk7dmFyIGE9bjtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb25jYXQobixlKX0sYSxmdW5jdGlvbih0KXt2YXIgbj1pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdFtlXX0pO3JldHVybiBfYSh0LG4sZSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0fX0pfSl9fSkseWE9QWUoe2NvbmNhdDFkXzpmdW5jdGlvbih0KXtyZXR1cm4gZ2EodCwwKX19KSx2YT1BZSh7Y29uY2F0MmRfOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGdhKHQsZSl9fSksYmE9QWUoe2NvbmNhdDNkXzpmdW5jdGlvbih0LGUpe3JldHVybiBnYSh0LGUpfX0pLHdhPUFlKHtjb25jYXQ0ZF86ZnVuY3Rpb24odCxlKXtyZXR1cm4gZ2EodCxlKX19KSxfYT1BZSh7c3BsaXRfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0wKTt2YXIgcixpPU9lKHQsXCJ4XCIsXCJzcGxpdFwiKTtyZXR1cm4gbj1QKG4saS5zaGFwZSlbMF0sXCJudW1iZXJcIj09dHlwZW9mIGU/KGIoaS5zaGFwZVtuXSVlPT0wLFwiTnVtYmVyIG9mIHNwbGl0cyBtdXN0IGV2ZW5seSBkaXZpZGUgdGhlIGF4aXMuXCIpLHI9bmV3IEFycmF5KGUpLmZpbGwoaS5zaGFwZVtuXS9lKSk6KGIoaS5zaGFwZVtuXT09PWUucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0pLFwiVGhlIHN1bSBvZiBzaXplcyBtdXN0IG1hdGNoIHRoZSBzaXplIG9mIHRoZSBheGlzIGRpbWVuc2lvbi5cIikscj1lKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNwbGl0KGkscixuKX0seyR4Oml9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBnYSh0LG4pfX19KX19KTtcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp2b2lkIDAhPT1yfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZjtmdW5jdGlvbiB4YSh0LGUpe3JldHVybiB0KGU9e2V4cG9ydHM6e319LGUuZXhwb3J0cyksZS5leHBvcnRzfXZhciBFYT14YShmdW5jdGlvbih0KXshZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXtyZXR1cm4gZS5jPXQuYyxlLnMwPXQuczAsZS5zMT10LnMxLGUuczI9dC5zMixlfWZ1bmN0aW9uIGkodCxlKXt2YXIgbj1uZXcgZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLHI9KGU9NDAyMjg3MTE5NyxmdW5jdGlvbih0KXt0PXQudG9TdHJpbmcoKTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9LjAyNTE5NjAzMjgyNDE2OTM4KihlKz10LmNoYXJDb2RlQXQobikpO3ItPWU9cj4+PjAsZT0ocio9ZSk+Pj4wLGUrPTQyOTQ5NjcyOTYqKHItPWUpfXJldHVybiAyLjMyODMwNjQzNjUzODY5NjNlLTEwKihlPj4+MCl9KTtuLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD0yMDkxNjM5Km4uczArMi4zMjgzMDY0MzY1Mzg2OTYzZS0xMCpuLmM7cmV0dXJuIG4uczA9bi5zMSxuLnMxPW4uczIsbi5zMj10LShuLmM9MHx0KX0sbi5jPTEsbi5zMD1yKFwiIFwiKSxuLnMxPXIoXCIgXCIpLG4uczI9cihcIiBcIiksbi5zMC09cih0KSxuLnMwPDAmJihuLnMwKz0xKSxuLnMxLT1yKHQpLG4uczE8MCYmKG4uczErPTEpLG4uczItPXIodCksbi5zMjwwJiYobi5zMis9MSkscj1udWxsfSh0KSxpPWUmJmUuc3RhdGUsYT1uLm5leHQ7cmV0dXJuIGEuaW50MzI9ZnVuY3Rpb24oKXtyZXR1cm4gNDI5NDk2NzI5NipuLm5leHQoKXwwfSxhLmRvdWJsZT1mdW5jdGlvbigpe3JldHVybiBhKCkrMS4xMTAyMjMwMjQ2MjUxNTY1ZS0xNiooMjA5NzE1MiphKCl8MCl9LGEucXVpY2s9YSxpJiYoXCJvYmplY3RcIj09dHlwZW9mIGkmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLmFsZWE9aX0oMCx0KX0pLFNhPXhhKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLng9dC54LGUueT10LnksZS56PXQueixlLnc9dC53LGV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPW5ldyBmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49XCJcIjtlLng9MCxlLnk9MCxlLno9MCxlLnc9MCxlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD1lLnheZS54PDwxMTtyZXR1cm4gZS54PWUueSxlLnk9ZS56LGUuej1lLncsZS53Xj1lLnc+Pj4xOV50XnQ+Pj44fSx0PT09KDB8dCk/ZS54PXQ6bis9dDtmb3IodmFyIHI9MDtyPG4ubGVuZ3RoKzY0O3IrKyllLnhePTB8bi5jaGFyQ29kZUF0KHIpLGUubmV4dCgpfSh0KSxpPWUmJmUuc3RhdGUsYT1mdW5jdGlvbigpe3JldHVybihuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTZ9O3JldHVybiBhLmRvdWJsZT1mdW5jdGlvbigpe2Rve3ZhciB0PSgobi5uZXh0KCk+Pj4xMSkrKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5NikvKDE8PDIxKX13aGlsZSgwPT09dCk7cmV0dXJuIHR9LGEuaW50MzI9bi5uZXh0LGEucXVpY2s9YSxpJiYoXCJvYmplY3RcIj09dHlwZW9mIGkmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLnhvcjEyOD1pfSgwLHQpfSksTmE9eGEoZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7cmV0dXJuIGUueD10LngsZS55PXQueSxlLno9dC56LGUudz10LncsZS52PXQudixlLmQ9dC5kLGV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPW5ldyBmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49XCJcIjtlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD1lLnheZS54Pj4+MjtyZXR1cm4gZS54PWUueSxlLnk9ZS56LGUuej1lLncsZS53PWUudiwoZS5kPWUuZCszNjI0Mzd8MCkrKGUudj1lLnZeZS52PDw0XnRedDw8MSl8MH0sZS54PTAsZS55PTAsZS56PTAsZS53PTAsZS52PTAsdD09PSgwfHQpP2UueD10Om4rPXQ7Zm9yKHZhciByPTA7cjxuLmxlbmd0aCs2NDtyKyspZS54Xj0wfG4uY2hhckNvZGVBdChyKSxyPT1uLmxlbmd0aCYmKGUuZD1lLng8PDEwXmUueD4+PjQpLGUubmV4dCgpfSh0KSxpPWUmJmUuc3RhdGUsYT1mdW5jdGlvbigpe3JldHVybihuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTZ9O3JldHVybiBhLmRvdWJsZT1mdW5jdGlvbigpe2Rve3ZhciB0PSgobi5uZXh0KCk+Pj4xMSkrKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5NikvKDE8PDIxKX13aGlsZSgwPT09dCk7cmV0dXJuIHR9LGEuaW50MzI9bi5uZXh0LGEucXVpY2s9YSxpJiYoXCJvYmplY3RcIj09dHlwZW9mIGkmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLnhvcndvdz1pfSgwLHQpfSksSWE9eGEoZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7cmV0dXJuIGUueD10Lnguc2xpY2UoKSxlLmk9dC5pLGV9ZnVuY3Rpb24gaSh0LGUpe251bGw9PXQmJih0PStuZXcgRGF0ZSk7dmFyIG49bmV3IGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQsbixyPWUueCxpPWUuaTtyZXR1cm4gdD1yW2ldLG49KHRePXQ+Pj43KV50PDwyNCxuXj0odD1yW2krMSY3XSledD4+PjEwLG5ePSh0PXJbaSszJjddKV50Pj4+MyxuXj0odD1yW2krNCY3XSledDw8Nyx0PXJbaSs3JjddLG5ePSh0Xj10PDwxMyledDw8OSxyW2ldPW4sZS5pPWkrMSY3LG59LGZ1bmN0aW9uKHQsZSl7dmFyIG4scj1bXTtpZihlPT09KDB8ZSkpclswXT1lO2Vsc2UgZm9yKGU9XCJcIitlLG49MDtuPGUubGVuZ3RoOysrbilyWzcmbl09cls3Jm5dPDwxNV5lLmNoYXJDb2RlQXQobikrcltuKzEmN108PDEzO2Zvcig7ci5sZW5ndGg8ODspci5wdXNoKDApO2ZvcihuPTA7bjw4JiYwPT09cltuXTsrK24pO2Zvcig4PT1uP3JbN109LTE6cltuXSx0Lng9cix0Lmk9MCxuPTI1NjtuPjA7LS1uKXQubmV4dCgpfShlLHQpfSh0KSxpPWUmJmUuc3RhdGUsYT1mdW5jdGlvbigpe3JldHVybihuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTZ9O3JldHVybiBhLmRvdWJsZT1mdW5jdGlvbigpe2Rve3ZhciB0PSgobi5uZXh0KCk+Pj4xMSkrKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5NikvKDE8PDIxKX13aGlsZSgwPT09dCk7cmV0dXJuIHR9LGEuaW50MzI9bi5uZXh0LGEucXVpY2s9YSxpJiYoaS54JiZyKGksbiksYS5zdGF0ZT1mdW5jdGlvbigpe3JldHVybiByKG4se30pfSksYX1lJiZlLmV4cG9ydHM/ZS5leHBvcnRzPWk6dGhpcy54b3JzaGlmdDc9aX0oMCx0KX0pLE9hPXhhKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLmk9dC5pLGUudz10LncsZS5YPXQuWC5zbGljZSgpLGV9ZnVuY3Rpb24gaSh0LGUpe251bGw9PXQmJih0PStuZXcgRGF0ZSk7dmFyIG49bmV3IGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQsbixyPWUudyxpPWUuWCxhPWUuaTtyZXR1cm4gZS53PXI9cisxNjQwNTMxNTI3fDAsbj1pW2ErMzQmMTI3XSx0PWlbYT1hKzEmMTI3XSxuXj1uPDwxMyx0Xj10PDwxNyxuXj1uPj4+MTUsdF49dD4+PjEyLG49aVthXT1uXnQsZS5pPWEsbisocl5yPj4+MTYpfDB9LGZ1bmN0aW9uKHQsZSl7dmFyIG4scixpLGEsbyxzPVtdLHU9MTI4O2ZvcihlPT09KDB8ZSk/KHI9ZSxlPW51bGwpOihlKz1cIlxcMFwiLHI9MCx1PU1hdGgubWF4KHUsZS5sZW5ndGgpKSxpPTAsYT0tMzI7YTx1OysrYSllJiYocl49ZS5jaGFyQ29kZUF0KChhKzMyKSVlLmxlbmd0aCkpLDA9PT1hJiYobz1yKSxyXj1yPDwxMCxyXj1yPj4+MTUscl49cjw8NCxyXj1yPj4+MTMsYT49MCYmKG89bysxNjQwNTMxNTI3fDAsaT0wPT0obj1zWzEyNyZhXV49citvKT9pKzE6MCk7Zm9yKGk+PTEyOCYmKHNbMTI3JihlJiZlLmxlbmd0aHx8MCldPS0xKSxpPTEyNyxhPTUxMjthPjA7LS1hKXI9c1tpKzM0JjEyN10sbj1zW2k9aSsxJjEyN10scl49cjw8MTMsbl49bjw8MTcscl49cj4+PjE1LG5ePW4+Pj4xMixzW2ldPXJebjt0Lnc9byx0Llg9cyx0Lmk9aX0oZSx0KX0odCksaT1lJiZlLnN0YXRlLGE9ZnVuY3Rpb24oKXtyZXR1cm4obi5uZXh0KCk+Pj4wKS80Mjk0OTY3Mjk2fTtyZXR1cm4gYS5kb3VibGU9ZnVuY3Rpb24oKXtkb3t2YXIgdD0oKG4ubmV4dCgpPj4+MTEpKyhuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTYpLygxPDwyMSl9d2hpbGUoMD09PXQpO3JldHVybiB0fSxhLmludDMyPW4ubmV4dCxhLnF1aWNrPWEsaSYmKGkuWCYmcihpLG4pLGEuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gcihuLHt9KX0pLGF9ZSYmZS5leHBvcnRzP2UuZXhwb3J0cz1pOnRoaXMueG9yNDA5Nj1pfSgwLHQpfSksa2E9eGEoZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiByKHQsZSl7cmV0dXJuIGUuYT10LmEsZS5iPXQuYixlLmM9dC5jLGUuZD10LmQsZX1mdW5jdGlvbiBpKHQsZSl7dmFyIG49bmV3IGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1cIlwiO2UubmV4dD1mdW5jdGlvbigpe3ZhciB0PWUuYixuPWUuYyxyPWUuZCxpPWUuYTtyZXR1cm4gdD10PDwyNV50Pj4+N15uLG49bi1yfDAscj1yPDwyNF5yPj4+OF5pLGk9aS10fDAsZS5iPXQ9dDw8MjBedD4+PjEyXm4sZS5jPW49bi1yfDAsZS5kPXI8PDE2Xm4+Pj4xNl5pLGUuYT1pLXR8MH0sZS5hPTAsZS5iPTAsZS5jPS0xNjQwNTMxNTI3LGUuZD0xMzY3MTMwNTUxLHQ9PT1NYXRoLmZsb29yKHQpPyhlLmE9dC80Mjk0OTY3Mjk2fDAsZS5iPTB8dCk6bis9dDtmb3IodmFyIHI9MDtyPG4ubGVuZ3RoKzIwO3IrKyllLmJePTB8bi5jaGFyQ29kZUF0KHIpLGUubmV4dCgpfSh0KSxpPWUmJmUuc3RhdGUsYT1mdW5jdGlvbigpe3JldHVybihuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTZ9O3JldHVybiBhLmRvdWJsZT1mdW5jdGlvbigpe2Rve3ZhciB0PSgobi5uZXh0KCk+Pj4xMSkrKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5NikvKDE8PDIxKX13aGlsZSgwPT09dCk7cmV0dXJuIHR9LGEuaW50MzI9bi5uZXh0LGEucXVpY2s9YSxpJiYoXCJvYmplY3RcIj09dHlwZW9mIGkmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLnR5Y2hlaT1pfSgwLHQpfSksQWE9eGEoZnVuY3Rpb24odCl7IWZ1bmN0aW9uKGUscil7dmFyIGksYT10aGlzLG89MjU2LHM9Nix1PVwicmFuZG9tXCIsYz1yLnBvdyhvLHMpLGw9ci5wb3coMiw1MiksZj0yKmwsaD1vLTE7ZnVuY3Rpb24gcCh0LG4scCl7dmFyIHk9W10sdj1tKGZ1bmN0aW9uIHQoZSxuKXt2YXIgcixpPVtdLGE9dHlwZW9mIGU7aWYobiYmXCJvYmplY3RcIj09YSlmb3IociBpbiBlKXRyeXtpLnB1c2godChlW3JdLG4tMSkpfWNhdGNoKHQpe31yZXR1cm4gaS5sZW5ndGg/aTpcInN0cmluZ1wiPT1hP2U6ZStcIlxcMFwifSgobj0xPT1uP3tlbnRyb3B5OiEwfTpufHx7fSkuZW50cm9weT9bdCxnKGUpXTpudWxsPT10P2Z1bmN0aW9uKCl7dHJ5e3ZhciB0O3JldHVybiBpJiYodD1pLnJhbmRvbUJ5dGVzKT90PXQobyk6KHQ9bmV3IFVpbnQ4QXJyYXkobyksKGEuY3J5cHRvfHxhLm1zQ3J5cHRvKS5nZXRSYW5kb21WYWx1ZXModCkpLGcodCl9Y2F0Y2godCl7dmFyIG49YS5uYXZpZ2F0b3Iscj1uJiZuLnBsdWdpbnM7cmV0dXJuWytuZXcgRGF0ZSxhLHIsYS5zY3JlZW4sZyhlKV19fSgpOnQsMykseSksYj1uZXcgZnVuY3Rpb24odCl7dmFyIGUsbj10Lmxlbmd0aCxyPXRoaXMsaT0wLGE9ci5pPXIuaj0wLHM9ci5TPVtdO2ZvcihufHwodD1bbisrXSk7aTxvOylzW2ldPWkrKztmb3IoaT0wO2k8bztpKyspc1tpXT1zW2E9aCZhK3RbaSVuXSsoZT1zW2ldKV0sc1thXT1lOyhyLmc9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MCxpPXIuaSxhPXIuaixzPXIuUzt0LS07KWU9c1tpPWgmaSsxXSxuPW4qbytzW2gmKHNbaV09c1thPWgmYStlXSkrKHNbYV09ZSldO3JldHVybiByLmk9aSxyLmo9YSxufSkobyl9KHkpLHc9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9Yi5nKHMpLGU9YyxuPTA7dDxsOyl0PSh0K24pKm8sZSo9byxuPWIuZygxKTtmb3IoO3Q+PWY7KXQvPTIsZS89MixuPj4+PTE7cmV0dXJuKHQrbikvZX07cmV0dXJuIHcuaW50MzI9ZnVuY3Rpb24oKXtyZXR1cm4gMHxiLmcoNCl9LHcucXVpY2s9ZnVuY3Rpb24oKXtyZXR1cm4gYi5nKDQpLzQyOTQ5NjcyOTZ9LHcuZG91YmxlPXcsbShnKGIuUyksZSksKG4ucGFzc3x8cHx8ZnVuY3Rpb24odCxlLG4saSl7cmV0dXJuIGkmJihpLlMmJmQoaSxiKSx0LnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGQoYix7fSl9KSxuPyhyW3VdPXQsZSk6dH0pKHcsdixcImdsb2JhbFwiaW4gbj9uLmdsb2JhbDp0aGlzPT1yLG4uc3RhdGUpfWZ1bmN0aW9uIGQodCxlKXtyZXR1cm4gZS5pPXQuaSxlLmo9dC5qLGUuUz10LlMuc2xpY2UoKSxlfWZ1bmN0aW9uIG0odCxlKXtmb3IodmFyIG4scj10K1wiXCIsaT0wO2k8ci5sZW5ndGg7KWVbaCZpXT1oJihuXj0xOSplW2gmaV0pK3IuY2hhckNvZGVBdChpKyspO3JldHVybiBnKGUpfWZ1bmN0aW9uIGcodCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoMCx0KX1pZihyW1wic2VlZFwiK3VdPXAsbShyLnJhbmRvbSgpLGUpLHQuZXhwb3J0cyl7dC5leHBvcnRzPXA7dHJ5e2k9big4NSl9Y2F0Y2godCl7fX19KFtdLE1hdGgpfSk7QWEuYWxlYT1FYSxBYS54b3IxMjg9U2EsQWEueG9yd293PU5hLEFhLnhvcnNoaWZ0Nz1JYSxBYS54b3I0MDk2PU9hLEFhLnR5Y2hlaT1rYTt2YXIgQ2E9QWEuYWxlYSxQYT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4scixpKXt0aGlzLm1lYW49dCx0aGlzLnN0ZERldj1lLHRoaXMuZHR5cGU9bix0aGlzLm5leHRWYWw9TmFOLHRoaXMudHJ1bmNhdGVkPXIsdGhpcy50cnVuY2F0ZWQmJih0aGlzLnVwcGVyPXRoaXMubWVhbisyKnRoaXMuc3RkRGV2LHRoaXMubG93ZXI9dGhpcy5tZWFuLTIqdGhpcy5zdGREZXYpO3ZhciBhPWl8fE1hdGgucmFuZG9tKCk7dGhpcy5yYW5kb209Q2EoYS50b1N0cmluZygpKX1yZXR1cm4gdC5wcm90b3R5cGUubmV4dFZhbHVlPWZ1bmN0aW9uKCl7aWYoIWlzTmFOKHRoaXMubmV4dFZhbCkpe3ZhciB0PXRoaXMubmV4dFZhbDtyZXR1cm4gdGhpcy5uZXh0VmFsPU5hTix0fWZvcih2YXIgZSxuLHI9ITE7IXI7KXt2YXIgaT12b2lkIDAsYT12b2lkIDAsbz12b2lkIDA7ZG97bz0oaT0yKnRoaXMucmFuZG9tKCktMSkqaSsoYT0yKnRoaXMucmFuZG9tKCktMSkqYX13aGlsZShvPj0xfHwwPT09byk7dmFyIHM9TWF0aC5zcXJ0KC0yKk1hdGgubG9nKG8pL28pO2U9dGhpcy5tZWFuK3RoaXMuc3RkRGV2KmkqcyxuPXRoaXMubWVhbit0aGlzLnN0ZERldiphKnMsdGhpcy50cnVuY2F0ZWQmJiF0aGlzLmlzVmFsaWRUcnVuY2F0ZWQoZSl8fChyPSEwKX1yZXR1cm4gdGhpcy50cnVuY2F0ZWQmJiF0aGlzLmlzVmFsaWRUcnVuY2F0ZWQobil8fCh0aGlzLm5leHRWYWw9dGhpcy5jb252ZXJ0VmFsdWUobikpLHRoaXMuY29udmVydFZhbHVlKGUpfSx0LnByb3RvdHlwZS5jb252ZXJ0VmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXRoaXMuZHR5cGV8fFwiZmxvYXQzMlwiPT09dGhpcy5kdHlwZT90Ok1hdGgucm91bmQodCl9LHQucHJvdG90eXBlLmlzVmFsaWRUcnVuY2F0ZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ8PXRoaXMudXBwZXImJnQ+PXRoaXMubG93ZXJ9LHR9KCk7ZnVuY3Rpb24gVGEodCxlKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixyLGksYSxvLHMsdSxjLGYsaCxwLGQsbSxnLHksdixiLHcsXyx4O3JldHVybiBsKHRoaXMsZnVuY3Rpb24obCl7c3dpdGNoKGwubGFiZWwpe2Nhc2UgMDppZihuPU9lKHQsXCJpbWdcIixcInRvUGl4ZWxzXCIpLHQgaW5zdGFuY2VvZiBmdHx8KG49bi50b0ludCgpKSwyIT09bi5yYW5rJiYzIT09bi5yYW5rKXRocm93IG5ldyBFcnJvcihcInRvUGl4ZWxzIG9ubHkgc3VwcG9ydHMgcmFuayAyIG9yIDMgdGVuc29ycywgZ290IHJhbmsgXCIrbi5yYW5rK1wiLlwiKTtpZihyPW4uc2hhcGUuc2xpY2UoMCwyKSxpPXJbMF0sYT1yWzFdLChvPTI9PT1uLnJhbms/MTpuLnNoYXBlWzJdKT40fHwyPT09byl0aHJvdyBuZXcgRXJyb3IoXCJ0b1BpeGVscyBvbmx5IHN1cHBvcnRzIGRlcHRoIG9mIHNpemUgMSwgMyBvciA0IGJ1dCBnb3QgXCIrbyk7cmV0dXJuIHM9bi5taW4oKSx1PW4ubWF4KCksWzQscy5kYXRhKCldO2Nhc2UgMTpyZXR1cm4gYz1sLnNlbnQoKVswXSxbNCx1LmRhdGEoKV07Y2FzZSAyOmlmKGY9bC5zZW50KClbMF0scy5kaXNwb3NlKCksdS5kaXNwb3NlKCksXCJmbG9hdDMyXCI9PT1uLmR0eXBlKXtpZihjPDB8fGY+MSl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3IgdmFsdWVzIGZvciBhIGZsb2F0MzIgVGVuc29yIG11c3QgYmUgaW4gdGhlIHJhbmdlIFswIC0gMV0gYnV0IGdvdCByYW5nZSBbXCIrYytcIiAtIFwiK2YrXCJdLlwiKX1lbHNle2lmKFwiaW50MzJcIiE9PW4uZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgdHlwZSBmb3IgdG9QaXhlbHM6IFwiK24uZHR5cGUrXCIuIFBsZWFzZSB1c2UgZmxvYXQzMiBvciBpbnQzMiB0ZW5zb3JzLlwiKTtpZihjPDB8fGY+MjU1KXRocm93IG5ldyBFcnJvcihcIlRlbnNvciB2YWx1ZXMgZm9yIGEgaW50MzIgVGVuc29yIG11c3QgYmUgaW4gdGhlIHJhbmdlIFswIC0gMjU1XSBidXQgZ290IHJhbmdlIFtcIitjK1wiIC0gXCIrZitcIl0uXCIpfXJldHVybls0LG4uZGF0YSgpXTtjYXNlIDM6Zm9yKGg9bC5zZW50KCkscD1cImZsb2F0MzJcIj09PW4uZHR5cGU/MjU1OjEsZD1uZXcgVWludDhDbGFtcGVkQXJyYXkoYSppKjQpLG09MDttPGkqYTsrK20pZz12b2lkIDAseT12b2lkIDAsdj12b2lkIDAsYj12b2lkIDAsMT09PW8/KGc9aFttXSpwLHk9aFttXSpwLHY9aFttXSpwLGI9MjU1KTozPT09bz8oZz1oWzMqbV0qcCx5PWhbMyptKzFdKnAsdj1oWzMqbSsyXSpwLGI9MjU1KTo0PT09byYmKGc9aFs0Km1dKnAseT1oWzQqbSsxXSpwLHY9aFs0Km0rMl0qcCxiPWhbNCptKzNdKnApLGRbMCsodz00Km0pXT1NYXRoLnJvdW5kKGcpLGRbdysxXT1NYXRoLnJvdW5kKHkpLGRbdysyXT1NYXRoLnJvdW5kKHYpLGRbdyszXT1NYXRoLnJvdW5kKGIpO3JldHVybiBudWxsIT1lJiYoZS53aWR0aD1hLGUuaGVpZ2h0PWksXz1lLmdldENvbnRleHQoXCIyZFwiKSx4PW5ldyBJbWFnZURhdGEoZCxhLGkpLF8ucHV0SW1hZ2VEYXRhKHgsMCwwKSksbiE9PXQmJm4uZGlzcG9zZSgpLFsyLGRdfX0pfSl9ZnVuY3Rpb24gUmEodCxlLG4pe3JldHVybiB2b2lkIDA9PT1lJiYoZT1cImZsb2F0MzJcIiksbmV3IHN0KHQsZT1lfHxcImZsb2F0MzJcIixuKX1mdW5jdGlvbiBEYSh0LGUpe3ZvaWQgMD09PWUmJihlPSExKSxjb25zb2xlLmxvZyh0LnRvU3RyaW5nKGUpKX12YXIgTWE9QWUoe2JhdGNoVG9TcGFjZU5EXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UodCxcInhcIixcImJhdGNoVG9TcGFjZU5EXCIpLGk9ZS5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCplfSk7cmV0dXJuIGIoci5yYW5rPj0xK2UubGVuZ3RoLFwiaW5wdXQgcmFuayBpcyBcIityLnJhbmsrXCIgYnV0IHNob3VsZCBiZSA+IHRoYW4gYmxvY2tTaGFwZS5sZW5ndGggXCIrZS5sZW5ndGgpLGIobi5sZW5ndGg9PT1lLmxlbmd0aCxcImNyb3BzLmxlbmd0aCBpcyBcIituLmxlbmd0aCtcIiBidXQgc2hvdWxkIGJlIGVxdWFsIHRvIGJsb2NrU2hhcGUubGVuZ3RoICBcIitlLmxlbmd0aCksYihyLnNoYXBlWzBdJWk9PTAsXCJpbnB1dCB0ZW5zb3IgYmF0Y2ggaXMgXCIrci5zaGFwZVswXStcIiBidXQgaXMgbm90IGRpdmlzaWJsZSBieSB0aGUgcHJvZHVjdCBvZiB0aGUgZWxlbWVudHMgb2YgYmxvY2tTaGFwZSBcIitlLmpvaW4oXCIgKiBcIikrXCIgPT09IFwiK2kpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYmF0Y2hUb1NwYWNlTkQocixlLG4pfSx7JHg6cn0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuc3BhY2VUb0JhdGNoTkQoZSxuKX19fSl9fSksamE9QWUoe2Nhc3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcImNhc3RcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY2FzdChuLGUpfSx7JHg6bn0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuY2xvbmUoKX19fSl9fSksQmE9QWUoe2Nsb25lXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiY2xvbmVcIixudWxsKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gZnQubWFrZShlLnNoYXBlLHtkYXRhSWQ6ZS5kYXRhSWR9LGUuZHR5cGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQudG9GbG9hdCgpfX19KX19KSxMYT1BZSh7Y3Vtc3VtXzpmdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1uJiYobj0hMSksdm9pZCAwPT09ciYmKHI9ITEpO3ZhciBpPU9lKHQsXCJ4XCIsXCJjdW1zdW1cIiksYT11ZShbZXw9MF0saS5yYW5rKSxvPWk7bnVsbCE9YSYmKG89aS50cmFuc3Bvc2UoYSkpO3ZhciBzPWxlKDEsaS5yYW5rKVswXSx1PUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY3Vtc3VtKG8scyxuLHIpfSx7cGVybXV0ZWRYOm99LGZ1bmN0aW9uKHQpe3JldHVybntwZXJtdXRlZFg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5jdW1zdW0oZSxuLCFyKX19fSk7cmV0dXJuIG51bGwhPWEmJih1PXUudHJhbnNwb3NlKGEpKSx1fX0pLHphPUFlKHtkZXB0aFRvU3BhY2VfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj1cIk5IV0NcIik7dmFyIHI9T2UodCxcInhcIixcImRlcHRoVG9TcGFjZVwiKSxpPVwiTkhXQ1wiPT09bj9yLnNoYXBlWzFdOnIuc2hhcGVbMl0sYT1cIk5IV0NcIj09PW4/ci5zaGFwZVsyXTpyLnNoYXBlWzNdLG89XCJOSFdDXCI9PT1uP3Iuc2hhcGVbM106ci5zaGFwZVsxXTtyZXR1cm4gYihpKmU+PTAsXCJOZWdhdGl2ZSBkaW1lbnNpb24gc2l6ZSBjYXVzZWQgYnkgb3ZlcmZsb3cgd2hlbiBtdWx0aXBseWluZ1xcbiAgICAgIFwiK2krXCIgYW5kIFwiK2UrXCIgIGZvciBkZXB0aFRvU3BhY2Ugd2l0aCBpbnB1dCBzaGFwZVxcbiAgICAgIFwiK3Iuc2hhcGUpLGIoYSplPj0wLFwiTmVnYXRpdmUgZGltZW5zaW9uIHNpemUgY2F1c2VkIGJ5IG92ZXJmbG93IHdoZW4gbXVsdGlwbHlpbmdcXG4gICAgICBcIithK1wiIGFuZCBcIitlK1wiIGZvciBkZXB0aFRvU3BhY2Ugd2l0aCBpbnB1dCBzaGFwZVxcbiAgICAgICAgICBcIityLnNoYXBlKSxiKG8lKGUqZSk9PTAsXCJEaW1lbnNpb24gc2l6ZSBtdXN0IGJlIGV2ZW5seSBkaXZpc2libGUgYnkgXCIrZSplK1wiIGJ1dCBpcyBcIitvK1wiIGZvciBkZXB0aFRvU3BhY2Ugd2l0aCBpbnB1dCBzaGFwZSBcIityLnNoYXBlKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmRlcHRoVG9TcGFjZShyLGUsbil9LHskeDpyfSl9fSksRmE9QWUoe2V4cGFuZERpbXNfOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCk7dmFyIG49T2UodCxcInhcIixcImV4cGFuZERpbXNcIik7YihlPD1uLnJhbmssXCJBeGlzIG11c3QgYmUgPD0gcmFuayBvZiB0aGUgdGVuc29yXCIpO3ZhciByPW4uc2hhcGUuc2xpY2UoKTtyZXR1cm4gZTwwJiYoYigtKG4ucmFuaysxKTw9ZSxcIkF4aXMgbXVzdCBiZSBpbiB0aGUgaW50ZXJ2YWwgW1wiKy0obi5yYW5rKzEpK1wiLCBcIituLnJhbmsrXCJdXCIpLGU9bi5yYW5rK2UrMSksci5zcGxpY2UoZSwwLDEpLFFhKG4scil9fSksVWE9QWUoe2V5ZV86ZnVuY3Rpb24odCxlLG4scil7dm9pZCAwPT09ciYmKHI9XCJmbG9hdDMyXCIpLG51bGw9PWUmJihlPXQpO2Zvcih2YXIgaT1SYShbdCxlXSxyKSxhPXQ8PWU/dDplLG89MDtvPGE7KytvKWkuc2V0KDEsbyxvKTt2YXIgcz1pLnRvVGVuc29yKCkuYXMyRCh0LGUpO2lmKG51bGw9PW4pcmV0dXJuIHM7aWYoMT09PW4ubGVuZ3RoKXJldHVybiBybyhGYShzLDApLFtuWzBdLDEsMV0pO2lmKDI9PT1uLmxlbmd0aClyZXR1cm4gcm8oRmEoRmEocywwKSwwKSxbblswXSxuWzFdLDEsMV0pO2lmKDM9PT1uLmxlbmd0aClyZXR1cm4gcm8oRmEoRmEoRmEocywwKSwwKSwwKSxbblswXSxuWzFdLG5bMl0sMSwxXSk7dGhyb3cgbmV3IEVycm9yKFwiZXllKCkgY3VycmVudGx5IHN1cHBvcnRzIG9ubHkgMUQgYW5kIDJEIGJhdGNoU2hhcGVzLCBidXQgcmVjZWl2ZWQgXCIrbi5sZW5ndGgrXCJELlwiKX19KSxWYT1BZSh7ZnJvbVBpeGVsc186ZnVuY3Rpb24odCxlKXtpZih2b2lkIDA9PT1lJiYoZT0zKSxlPjQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNvbnN0cnVjdCBUZW5zb3Igd2l0aCBtb3JlIHRoYW4gNCBjaGFubmVscyBmcm9tIHBpeGVscy5cIik7cmV0dXJuIEx0LmVuZ2luZS5mcm9tUGl4ZWxzKHQsZSl9fSksV2E9QWUoe211bHRpbm9taWFsXzpmdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1yJiYocj0hMSk7dmFyIGk9T2UodCxcImxvZ2l0c1wiLFwibXVsdGlub21pYWxcIiksYT1pLnNpemUsbz1pLnJhbms7aWYoYTwyKXRocm93IG5ldyBFcnJvcihcIkVycm9yIGluIG11bHRpbm9taWFsOiB5b3UgbmVlZCBhdCBsZWFzdCAyIG91dGNvbWVzLCBidXQgZ290IFwiK2ErXCIuXCIpO2lmKG8+Mil0aHJvdyBuZXcgRXJyb3IoXCJSYW5rIG9mIHByb2JhYmlsaXRpZXMgbXVzdCBiZSAxIG9yIDIsIGJ1dCBpcyBcIitvKTtuPW58fE1hdGgucmFuZG9tKCk7dmFyIHM9MT09PW8/aS5hczJEKDEsLTEpOmksdT1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm11bHRpbm9taWFsKHMscixlLG4pfSx7bG9naXRzMkQ6c30pO3JldHVybiAxPT09bz91LmFzMUQoKTp1fX0pLHFhPUFlKHtvbmVIb3RfOmZ1bmN0aW9uKHQsZSxuLHIpe2lmKHZvaWQgMD09PW4mJihuPTEpLHZvaWQgMD09PXImJihyPTApLGU8Mil0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBvbmVIb3Q6IGRlcHRoIG11c3QgYmUgPj0yLCBidXQgaXQgaXMgXCIrZSk7dmFyIGk9T2UodCxcImluZGljZXNcIixcIm9uZUhvdFwiLFwiaW50MzJcIiksYT1pLnNoYXBlLmNvbmNhdChbZV0pO3JldHVybiBpPWkuZmxhdHRlbigpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQub25lSG90KGksZSxuLHIpfSx7JGluZGljZXM6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRpbmRpY2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHFlKGkuc2hhcGUsXCJmbG9hdDMyXCIpfX19KS5yZXNoYXBlKGEpfX0pLCRhPUFlKHtwYWRfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0wKTt2YXIgcj1PZSh0LFwieFwiLFwicGFkXCIpO2lmKDA9PT1yLnJhbmspdGhyb3cgbmV3IEVycm9yKFwicGFkKHNjYWxhcikgaXMgbm90IGRlZmluZWQuIFBhc3Mgbm9uLXNjYWxhciB0byBwYWRcIik7dmFyIGk9ZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHRbMF19KTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5wYWQocixlLG4pfSx7JHg6cn0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuc2xpY2UoaSxyLnNoYXBlKX19fSl9fSksSGE9QWUoe3BhZDFkXzpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPTApLGIoMj09PWUubGVuZ3RoLFwiSW52YWxpZCBudW1iZXIgb2YgcGFkZGluZ3MuIE11c3QgYmUgbGVuZ3RoIG9mIDIuXCIpLCRhKHQsW2VdLG4pfX0pLEthPUFlKHtwYWQyZF86ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj0wKSxiKDI9PT1lLmxlbmd0aCYmMj09PWVbMF0ubGVuZ3RoJiYyPT09ZVsxXS5sZW5ndGgsXCJJbnZhbGlkIG51bWJlciBvZiBwYWRkaW5ncy4gTXVzdCBiZSBsZW5ndGggb2YgMiBlYWNoLlwiKSwkYSh0LGUsbil9fSksR2E9QWUoe3BhZDNkXzpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPTApLGIoMz09PWUubGVuZ3RoJiYyPT09ZVswXS5sZW5ndGgmJjI9PT1lWzFdLmxlbmd0aCYmMj09PWVbMl0ubGVuZ3RoLFwiSW52YWxpZCBudW1iZXIgb2YgcGFkZGluZ3MuIE11c3QgYmUgbGVuZ3RoIG9mIDIgZWFjaC5cIiksJGEodCxlLG4pfX0pLFhhPUFlKHtwYWQ0ZF86ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj0wKSxiKDQ9PT1lLmxlbmd0aCYmMj09PWVbMF0ubGVuZ3RoJiYyPT09ZVsxXS5sZW5ndGgmJjI9PT1lWzJdLmxlbmd0aCYmMj09PWVbM10ubGVuZ3RoLFwiSW52YWxpZCBudW1iZXIgb2YgcGFkZGluZ3MuIE11c3QgYmUgbGVuZ3RoIG9mIDIgZWFjaC5cIiksJGEodCxlLG4pfX0pLFlhPUFlKHtyYW5kXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9RSh0KSxpPW51bGw7aWYobnVsbD09bnx8XCJmbG9hdDMyXCI9PT1uKWk9bmV3IEZsb2F0MzJBcnJheShyKTtlbHNlIGlmKFwiaW50MzJcIj09PW4paT1uZXcgSW50MzJBcnJheShyKTtlbHNle2lmKFwiYm9vbFwiIT09bil0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGRhdGEgdHlwZSBcIituKTtpPW5ldyBVaW50OEFycmF5KHIpfWZvcih2YXIgYT0wO2E8cjthKyspaVthXT1lKCk7cmV0dXJuIGZ0Lm1ha2UodCx7dmFsdWVzOml9LG4pfX0pLEphPUFlKHtyYW5kb21Ob3JtYWxfOmZ1bmN0aW9uKHQsZSxuLHIsaSl7aWYodm9pZCAwPT09ZSYmKGU9MCksdm9pZCAwPT09biYmKG49MSksbnVsbCE9ciYmXCJib29sXCI9PT1yKXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIGRhdGEgdHlwZSBcIityKTtmb3IodmFyIGE9bmV3IFBhKGUsbixyLCExLGkpLG89UmEodCxyKSxzPTA7czxvLnZhbHVlcy5sZW5ndGg7cysrKW8udmFsdWVzW3NdPWEubmV4dFZhbHVlKCk7cmV0dXJuIG8udG9UZW5zb3IoKX19KSxaYT1BZSh7cmFuZG9tVW5pZm9ybV86ZnVuY3Rpb24odCxlLG4scil7dm9pZCAwPT09ZSYmKGU9MCksdm9pZCAwPT09biYmKG49MSksdm9pZCAwPT09ciYmKHI9XCJmbG9hdDMyXCIpO2Zvcih2YXIgaT1SYSh0LHIpLGE9MDthPGkudmFsdWVzLmxlbmd0aDthKyspaS52YWx1ZXNbYV09dihlLG4pO3JldHVybiBpLnRvVGVuc29yKCl9fSksUWE9QWUoe3Jlc2hhcGVfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInJlc2hhcGVcIixudWxsKTtyZXR1cm4gZT1DKGUsbi5zaXplKSxiKG4uc2l6ZT09PUUoZSksXCJuZXcgc2hhcGUgYW5kIG9sZCBzaGFwZSBtdXN0IGhhdmUgdGhlIHNhbWUgbnVtYmVyIG9mIGVsZW1lbnRzLlwiKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlc2hhcGUobixlKX0seyR4Om59LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LnJlc2hhcGUobi5zaGFwZSl9fX0pfX0pLHRvPUFlKHtzcGFjZVRvQmF0Y2hORF86ZnVuY3Rpb24odCxlLG4pe3ZhciByPU9lKHQsXCJ4XCIsXCJzcGFjZVRvQmF0Y2hORFwiKTtyZXR1cm4gYihyLnJhbms+PTErZS5sZW5ndGgsXCJpbnB1dCByYW5rIFwiK3IucmFuaytcIiBzaG91bGQgYmUgPiB0aGFuIFtibG9ja1NoYXBlXSBcIitlLmxlbmd0aCksYihuLmxlbmd0aD09PWUubGVuZ3RoLFwicGFkZGluZ3Muc2hhcGVbMF0gXCIrbi5sZW5ndGgrXCIgbXVzdCBiZSBlcXVhbCB0byBbYmxvY2tTaGFwZV0gXCIrZS5sZW5ndGgpLGIoci5zaGFwZS5yZWR1Y2UoZnVuY3Rpb24odCxyLGkpe3JldHVybiBpPjAmJmk8PWUubGVuZ3RoP3QmJihyK25baS0xXVswXStuW2ktMV1bMV0pJWVbaS0xXT09MDp0fSwhMCksXCJpbnB1dCBzcGF0aWFsIGRpbWVuc2lvbnMgXCIrci5zaGFwZS5zbGljZSgxKStcIiB3aXRoIHBhZGRpbmdzIFwiK24udG9TdHJpbmcoKStcIiBtdXN0IGJlIGRpdmlzaWJsZSBieSBibG9ja1NoYXBlcyBcIitlLnRvU3RyaW5nKCkpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc3BhY2VUb0JhdGNoTkQocixlLG4pfSx7JHg6cn0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuYmF0Y2hUb1NwYWNlTkQoZSxuKX19fSl9fSksZW89QWUoe3NxdWVlemVfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInNxdWVlemVcIik7cmV0dXJuIFFhKG4sVChuLnNoYXBlLGUpLm5ld1NoYXBlKX19KSxubz1BZSh7c3RhY2tfOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCk7dmFyIG49a2UodCxcInRlbnNvcnNcIixcInN0YWNrXCIpO2lmKGIobi5sZW5ndGg+PTEsXCJQYXNzIGF0IGxlYXN0IG9uZSB0ZW5zb3IgdG8gdGYuc3RhY2tcIiksMT09PW4ubGVuZ3RoKXJldHVybiBuWzBdLmV4cGFuZERpbXMoZSk7dmFyIHI9blswXS5yYW5rLGk9blswXS5zaGFwZSxhPW5bMF0uZHR5cGU7YihlPD1yLFwiQXhpcyBtdXN0IGJlIDw9IHJhbmsgb2YgdGhlIHRlbnNvclwiKSxuLmZvckVhY2goZnVuY3Rpb24odCl7dyhpLHQuc2hhcGUsXCJBbGwgdGVuc29ycyBwYXNzZWQgdG8gc3RhY2sgbXVzdCBoYXZlIG1hdGNoaW5nIHNoYXBlc1wiKX0pLG4uZm9yRWFjaChmdW5jdGlvbih0KXtiKGE9PT10LmR0eXBlLFwiQWxsIHRlbnNvcnMgcGFzc2VkIHRvIHN0YWNrIG11c3QgaGF2ZSBtYXRjaGluZyBkdHlwZXNcIil9KTt2YXIgbz1uLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5leHBhbmREaW1zKGUpfSk7cmV0dXJuIGdhKG8sZSl9fSkscm89QWUoe3RpbGVfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInRpbGVcIik7cmV0dXJuIGIobi5yYW5rPT09ZS5sZW5ndGgsXCJFcnJvciBpbiB0cmFuc3Bvc2U6IHJhbmsgb2YgaW5wdXQgXCIrbi5yYW5rK1wiIG11c3QgbWF0Y2ggbGVuZ3RoIG9mIHJlcHMgXCIrZStcIi5cIiksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC50aWxlKG4sZSl9LHskeDpufSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXt2YXIgcj1YZShuKTtpZigxPT09bi5yYW5rKWZvcih2YXIgaT0wO2k8ZVswXTsrK2kpcj1yLmFkZCh0LnNsaWNlKFtpKm4uc2hhcGVbMF1dLFtuLnNoYXBlWzBdXSkpO2Vsc2UgaWYoMj09PW4ucmFuaylmb3IoaT0wO2k8ZVswXTsrK2kpZm9yKHZhciBhPTA7YTxlWzFdOysrYSlyPXIuYWRkKHQuc2xpY2UoW2kqbi5zaGFwZVswXSxhKm4uc2hhcGVbMV1dLFtuLnNoYXBlWzBdLG4uc2hhcGVbMV1dKSk7ZWxzZSBpZigzPT09bi5yYW5rKWZvcihpPTA7aTxlWzBdOysraSlmb3IoYT0wO2E8ZVsxXTsrK2EpZm9yKHZhciBvPTA7bzxlWzJdOysrbylyPXIuYWRkKHQuc2xpY2UoW2kqbi5zaGFwZVswXSxhKm4uc2hhcGVbMV0sbypuLnNoYXBlWzJdXSxbbi5zaGFwZVswXSxuLnNoYXBlWzFdLG4uc2hhcGVbMl1dKSk7ZWxzZXtpZig0IT09bi5yYW5rKXRocm93IG5ldyBFcnJvcihcIkdyYWRpZW50IGZvciB0aWxlIG9wZXJhdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIHJhbmstXCIrbi5yYW5rK1wiIHRlbnNvcnMgeWV0LlwiKTtmb3IoaT0wO2k8ZVswXTsrK2kpZm9yKGE9MDthPGVbMV07KythKWZvcihvPTA7bzxlWzJdOysrbylmb3IodmFyIHM9MDtzPGVbM107KytzKXI9ci5hZGQodC5zbGljZShbaSpuLnNoYXBlWzBdLGEqbi5zaGFwZVsxXSxvKm4uc2hhcGVbMl0scypuLnNoYXBlWzNdXSxbbi5zaGFwZVswXSxuLnNoYXBlWzFdLG4uc2hhcGVbMl0sbi5zaGFwZVszXV0pKX1yZXR1cm4gcn19fSl9fSksaW89QWUoe3RydW5jYXRlZE5vcm1hbF86ZnVuY3Rpb24odCxlLG4scixpKXtpZih2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1uJiYobj0xKSxudWxsIT1yJiZcImJvb2xcIj09PXIpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZGF0YSB0eXBlIFwiK3IpO2Zvcih2YXIgYT1uZXcgUGEoZSxuLHIsITAsaSksbz1SYSh0LHIpLHM9MDtzPG8udmFsdWVzLmxlbmd0aDtzKyspby52YWx1ZXNbc109YS5uZXh0VmFsdWUoKTtyZXR1cm4gby50b1RlbnNvcigpfX0pLGFvPUFlKHt1bnN0YWNrXzpmdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPTApLGU9ZXx8MDt2YXIgbj1PZSh0LFwieFwiLFwidW5zdGFja1wiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC51bnN0YWNrKG4sZSl9LHskeDpufSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gbm8odCxlKX19fSl9fSksb289ZnVuY3Rpb24odCxlKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixyLGksYSxvLHMsdSxjLGYsaDtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGwpe3N3aXRjaChsLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG49T2UodCxcInhcIixcInNldGRpZmYxZFwiKSxyPU9lKGUsXCJ5XCIsXCJzZXRkaWZmMWRcIiksYihuLmR0eXBlPT09ci5kdHlwZSxcInggYW5kIHkgc2hvdWxkIGhhdmUgdGhlIHNhbWUgZHR5cGUsIGJ1dCBnb3QgeCAoXCIrbi5kdHlwZStcIikgYW5kIHkgKFwiK3IuZHR5cGUrXCIpLlwiKSxiKDE9PT1uLnJhbmssXCJ4IHNob3VsZCBiZSAxRCB0ZW5zb3IsIGJ1dCBnb3QgeCAoXCIrbi5zaGFwZStcIikuXCIpLGIoMT09PXIucmFuayxcInkgc2hvdWxkIGJlIDFEIHRlbnNvciwgYnV0IGdvdCB5IChcIityLnNoYXBlK1wiKS5cIiksWzQsbi5kYXRhKCldO2Nhc2UgMTpyZXR1cm4gaT1sLnNlbnQoKSxbNCxyLmRhdGEoKV07Y2FzZSAyOmZvcihhPWwuc2VudCgpLG89bmV3IFNldChhKSxzPTAsZj0wO2Y8aS5sZW5ndGg7ZisrKW8uaGFzKGlbZl0pfHxzKys7Zm9yKHU9bmV3IHN0KFtzXSxuLmR0eXBlKSxjPW5ldyBzdChbc10sXCJpbnQzMlwiKSxmPTAsaD0wO2Y8aS5sZW5ndGg7ZisrKW8uaGFzKGlbZl0pfHwodS52YWx1ZXNbaF09aVtmXSxjLnZhbHVlc1toXT1mLGgrKyk7cmV0dXJuWzIsW3UudG9UZW5zb3IoKSxjLnRvVGVuc29yKCldXX19KX0pfTtmdW5jdGlvbiBzbyh0LGUpe2Zvcih2YXIgbj1bXSxyPTA7cjxlLmxlbmd0aDtyKyspZVtyXSYmbi5wdXNoKHIpO3ZhciBpPVJhKHQsXCJpbnQzMlwiKSxhPVJhKFtuLmxlbmd0aCx0Lmxlbmd0aF0sXCJpbnQzMlwiKTtmb3Iocj0wO3I8bi5sZW5ndGg7cisrKXt2YXIgbz1pLmluZGV4VG9Mb2MobltyXSkscz1yKnQubGVuZ3RoO2EudmFsdWVzLnNldChvLHMpfXJldHVybiBhLnRvVGVuc29yKCl9dmFyIHVvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe2lmKHZvaWQgMD09PWUmJihlPSEwKSx0aGlzLmdwZ3B1PXQsdGhpcy5kZWxheWVkU3RvcmFnZT1lLHRoaXMucGVuZGluZ1JlYWQ9bmV3IFdlYWtNYXAsdGhpcy5wZW5kaW5nRGlzcG9zYWw9bmV3IFdlYWtTZXQsdGhpcy5kYXRhUmVmQ291bnQ9bmV3IFdlYWtNYXAsdGhpcy5scnVEYXRhR1BVPVtdLHRoaXMubnVtQnl0ZXNJbkdQVT0wLHRoaXMudXBsb2FkV2FpdE1zPTAsdGhpcy5kb3dubG9hZFdhaXRNcz0wLHRoaXMuYmluYXJ5Q2FjaGU9e30sdGhpcy5kaXNwb3NlZD0hMSxMdC5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpPDEpdGhyb3cgbmV3IEVycm9yKFwiV2ViR0wgaXMgbm90IHN1cHBvcnRlZCBvbiB0aGlzIGRldmljZVwiKTtpZihudWxsPT10KXt2YXIgbj1wKEx0LmdldChcIldFQkdMX1ZFUlNJT05cIikpO3RoaXMuZ3BncHU9bmV3IElpKG4pLHRoaXMuY2FudmFzPW4uY2FudmFzLHRoaXMuZ3BncHVDcmVhdGVkTG9jYWxseT0hMH1lbHNlIHRoaXMuZ3BncHVDcmVhdGVkTG9jYWxseT0hMSx0aGlzLmNhbnZhcz10LmdsLmNhbnZhczt0aGlzLnRleHR1cmVNYW5hZ2VyPW5ldyBRaSh0aGlzLmdwZ3B1KX1yZXR1cm4gdC5wcm90b3R5cGUucmVnaXN0ZXI9ZnVuY3Rpb24odCxlLG4pe2lmKHRoaXMudGV4RGF0YS5oYXModCkpdGhyb3cgbmV3IEVycm9yKFwiRGF0YSBidWZmZXIgaXMgYWxyZWFkeSByZWdpc3RlcmVkXCIpO3RoaXMudGV4RGF0YS5zZXQodCx7c2hhcGU6ZSxkdHlwZTpufSl9LHQucHJvdG90eXBlLnNldERhdGFNb3Zlcj1mdW5jdGlvbih0KXt0aGlzLnRleERhdGE9bmV3IFllKHQpfSx0LnByb3RvdHlwZS5mcm9tUGl4ZWxzPWZ1bmN0aW9uKHQsZSl7aWYobnVsbD09dCl0aHJvdyBuZXcgRXJyb3IoXCJwaXhlbHMgcGFzc2VkIHRvIHRmLmZyb21QaXhlbHMoKSBjYW4gbm90IGJlIG51bGxcIik7dmFyIG49W3QuaGVpZ2h0LHQud2lkdGhdLHI9W3QuaGVpZ2h0LHQud2lkdGgsZV07aWYoISh0IGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudHx8dCBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnR8fHQgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudHx8dCBpbnN0YW5jZW9mIEltYWdlRGF0YSkpdGhyb3cgbmV3IEVycm9yKFwicGl4ZWxzIHBhc3NlZCB0byB0Zi5mcm9tUGl4ZWxzKCkgbXVzdCBiZSBlaXRoZXIgYW4gSFRNTFZpZGVvRWxlbWVudCwgSFRNTEltYWdlRWxlbWVudCwgSFRNTENhbnZhc0VsZW1lbnQgb3IgSW1hZ2VEYXRhLCBidXQgd2FzIFwiK3QuY29uc3RydWN0b3IubmFtZSk7aWYodCBpbnN0YW5jZW9mIEhUTUxWaWRlb0VsZW1lbnQpe2lmKG51bGw9PXRoaXMuZnJvbVBpeGVsczJEQ29udGV4dCl7aWYoIUx0LmdldChcIklTX0JST1dTRVJcIikpdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgcmVhZCBwaXhlbHMgZnJvbSBIVE1MSW1hZ2VFbGVtZW50IG91dHNpZGUgdGhlIGJyb3dzZXIuXCIpO2lmKFwiY29tcGxldGVcIiE9PWRvY3VtZW50LnJlYWR5U3RhdGUpdGhyb3cgbmV3IEVycm9yKFwiVGhlIERPTSBpcyBub3QgcmVhZHkgeWV0LiBQbGVhc2UgY2FsbCB0Zi5mcm9tUGl4ZWxzKCkgb25jZSB0aGUgRE9NIGlzIHJlYWR5LiBPbmUgd2F5IHRvIGRvIHRoYXQgaXMgdG8gYWRkIGFuIGV2ZW50IGxpc3RlbmVyIGZvciBgRE9NQ29udGVudExvYWRlZGAgb24gdGhlIGRvY3VtZW50IG9iamVjdFwiKTt0aGlzLmZyb21QaXhlbHMyRENvbnRleHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKS5nZXRDb250ZXh0KFwiMmRcIil9dGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0LmNhbnZhcy53aWR0aD10LndpZHRoLHRoaXMuZnJvbVBpeGVsczJEQ29udGV4dC5jYW52YXMuaGVpZ2h0PXQuaGVpZ2h0LHRoaXMuZnJvbVBpeGVsczJEQ29udGV4dC5kcmF3SW1hZ2UodCwwLDAsdC53aWR0aCx0LmhlaWdodCksdD10aGlzLmZyb21QaXhlbHMyRENvbnRleHQuY2FudmFzfXZhciBpPXRoaXMubWFrZVRlbnNvckhhbmRsZShuLFwiaW50MzJcIik7dGhpcy50ZXhEYXRhLmdldChpLmRhdGFJZCkudXNhZ2U9Qm4uUElYRUxTLHRoaXMuZ3BncHUudXBsb2FkUGl4ZWxEYXRhVG9UZXh0dXJlKHRoaXMuZ2V0VGV4dHVyZShpLmRhdGFJZCksdCk7dmFyIGE9bmV3IHlyKHIpLG89dGhpcy5jb21waWxlQW5kUnVuKGEsW2ldKTtyZXR1cm4gdGhpcy5kaXNwb3NlRGF0YShpLmRhdGFJZCksb30sdC5wcm90b3R5cGUubWFrZVRlbnNvckhhbmRsZT1mdW5jdGlvbih0LGUpe3ZhciBuPXt9O3JldHVybiB0aGlzLnJlZ2lzdGVyKG4sdCxlKSx7ZGF0YUlkOm4sc2hhcGU6dCxkdHlwZTplfX0sdC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCxlKXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIk1hdGhCYWNrZW5kV2ViR0wud3JpdGUoKTogdmFsdWVzIGNhbiBub3QgYmUgbnVsbFwiKTtpZihMdC5nZXQoXCJERUJVR1wiKSlmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIHI9ZVtuXTtpZighSXIocikpdGhyb3cgRXJyb3IoXCJUaGUgdmFsdWUgXCIrcitcIiBjYW5ub3QgYmUgcmVwcmVzZW50ZWQgb24gdGhpcyBkZXZpY2UuXCIpfXZhciBpPXRoaXMudGV4RGF0YS5nZXQodCksYT1pLnRleHR1cmUsbz1pLnRleFNoYXBlLHM9aS51c2FnZSx1PWkuZHR5cGUsYz1pLmlzUGFja2VkO2lmKFwiY29tcGxleDY0XCI9PT11KXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCB3cml0ZSB0byBhIGNvbXBsZXg2NCBkdHlwZS4gUGxlYXNlIHVzZSB0Zi5jb21wbGV4KHJlYWwsIGltYWcpLlwiKTtudWxsIT1hJiYodGhpcy5yZWxlYXNlVGV4dHVyZSh0LGEsbyxzLGMpLGkudGV4dHVyZT1udWxsLGkudGV4U2hhcGU9bnVsbCksaS51c2FnZT1Cbi5VUExPQUQsaS52YWx1ZXM9ZSx0aGlzLmRlbGF5ZWRTdG9yYWdlfHx0aGlzLnVwbG9hZFRvR1BVKHQpfSx0LnByb3RvdHlwZS5yZWFkU3luYz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnRleERhdGEuZ2V0KHQpLG49ZS52YWx1ZXMscj1lLmR0eXBlLGk9ZS5jb21wbGV4VGVuc29ycyxhPWUuc2xpY2Usbz1lLnNoYXBlO2lmKG51bGwhPWEpe3ZhciBzPW5ldyBvYShvLFwicmV0dXJuIHg7XCIpLHU9dGhpcy5jb21waWxlQW5kUnVuKHMsW3tkYXRhSWQ6dCxzaGFwZTpvLGR0eXBlOnJ9XSk7cmV0dXJuIHRoaXMucmVhZFN5bmModS5kYXRhSWQpfWlmKG51bGwhPW4pcmV0dXJuIHRoaXMuY29udmVydEFuZENhY2hlT25DUFUodCk7aWYoXCJzdHJpbmdcIj09PXIpcmV0dXJuIG47dmFyIGMsbCxmPW51bGwhPXRoaXMuYWN0aXZlVGltZXJzO3JldHVybiBmJiYoYz1wZXJmb3JtYW5jZS5ub3coKSksbD1cImNvbXBsZXg2NFwiPT09cj90bihpLnJlYWwuZGF0YVN5bmMoKSxpLmltYWcuZGF0YVN5bmMoKSk6dGhpcy5nZXRWYWx1ZXNGcm9tVGV4dHVyZSh0KSxmJiYodGhpcy5kb3dubG9hZFdhaXRNcys9cGVyZm9ybWFuY2Uubm93KCktYyksdGhpcy5jb252ZXJ0QW5kQ2FjaGVPbkNQVSh0LGwpfSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLGEsbyxzLHUsYyxmLGgscCxkLG0sZyx5LHYsYix3LF8seCxFO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obCl7c3dpdGNoKGwubGFiZWwpe2Nhc2UgMDppZih0aGlzLnBlbmRpbmdSZWFkLmhhcyh0KSlyZXR1cm4gcj10aGlzLnBlbmRpbmdSZWFkLmdldCh0KSxbMixuZXcgUHJvbWlzZShmdW5jdGlvbih0KXtyZXR1cm4gci5wdXNoKHQpfSldO2lmKGk9dGhpcy50ZXhEYXRhLmdldCh0KSxhPWkudGV4dHVyZSxvPWkudmFsdWVzLHM9aS50ZXhTaGFwZSx1PWkuaXNQYWNrZWQsYz1pLnNoYXBlLGY9aS5zbGljZSxoPWkuZHR5cGUsbnVsbCE9ZilyZXR1cm4gcD1uZXcgb2EoYyxcInJldHVybiB4O1wiKSxkPXRoaXMuY29tcGlsZUFuZFJ1bihwLFt7ZGF0YUlkOnQsc2hhcGU6YyxkdHlwZTpofV0pLFsyLHRoaXMucmVhZChkLmRhdGFJZCldO2lmKG51bGwhPW8pcmV0dXJuWzIsdGhpcy5jb252ZXJ0QW5kQ2FjaGVPbkNQVSh0KV07aWYodGhpcy5wZW5kaW5nUmVhZC5zZXQodCxbXSksIUx0LmdldChcIldFQkdMX0RPV05MT0FEX0ZMT0FUX0VOQUJMRURcIikmJjI9PT1MdC5nZXQoXCJXRUJHTF9WRVJTSU9OXCIpKXRocm93IG5ldyBFcnJvcihcInRlbnNvci5kYXRhKCkgd2l0aCBXRUJHTF9ET1dOTE9BRF9GTE9BVF9FTkFCTEVEPWZhbHNlIGFuZCBXRUJHTF9WRVJTSU9OPTIgbm90IHlldCBzdXBwb3J0ZWQuXCIpO3JldHVybiBtPXNbMV0sZz1zWzBdLHUmJihlPUhuKHNbMF0sc1sxXSksbT1lWzBdLGc9ZVsxXSkseT10aGlzLmdwZ3B1Lm1heWJlQ3JlYXRlQnVmZmVyRnJvbVRleHR1cmUoYSxnLG0pLFs0LHRoaXMuZ3BncHUuY3JlYXRlQW5kV2FpdEZvckZlbmNlKCldO2Nhc2UgMTpyZXR1cm4gbC5zZW50KCkseSBpbnN0YW5jZW9mIFdlYkdMVGV4dHVyZT92PXRoaXMuZ2V0VmFsdWVzRnJvbVRleHR1cmUodCk6dT8oYj1acihjKSx3PTEsXz0xLGMubGVuZ3RoJiYobj1RcihjKSx3PW5bMF0sXz1uWzFdKSx2PXRoaXMuZ3BncHUuZG93bmxvYWRQYWNrZWRNYXRyaXhGcm9tQnVmZmVyKHksYix3LF8sc1swXSxzWzFdKSk6dj10aGlzLmdwZ3B1LmRvd25sb2FkRmxvYXQzMk1hdHJpeEZyb21CdWZmZXIoeSxzWzBdLHNbMV0pLHg9dGhpcy5jb252ZXJ0QW5kQ2FjaGVPbkNQVSh0LHYpLEU9dGhpcy5wZW5kaW5nUmVhZC5nZXQodCksdGhpcy5wZW5kaW5nUmVhZC5kZWxldGUodCksRS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiB0KHgpfSksdGhpcy5wZW5kaW5nRGlzcG9zYWwuaGFzKHQpJiYodGhpcy5wZW5kaW5nRGlzcG9zYWwuZGVsZXRlKHQpLHRoaXMuZGlzcG9zZURhdGEodCkpLFsyLHhdfX0pfSl9LHQucHJvdG90eXBlLmdldFZhbHVlc0Zyb21UZXh0dXJlPWZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcy50ZXhEYXRhLmdldCh0KSxyPW4uc2hhcGUsaT1uLmR0eXBlLGE9bi50ZXh0dXJlLG89bi50ZXhTaGFwZTtpZihMdC5nZXQoXCJXRUJHTF9ET1dOTE9BRF9GTE9BVF9FTkFCTEVEXCIpKXtpZih0aGlzLnRleERhdGEuZ2V0KHQpLmlzUGFja2VkKXt2YXIgcz1acihyKSx1PTEsYz0xO3JldHVybiByLmxlbmd0aCYmKHU9KGU9UXIocikpWzBdLGM9ZVsxXSksdGhpcy5ncGdwdS5kb3dubG9hZE1hdHJpeEZyb21QYWNrZWRUZXh0dXJlKGEscyx1LGMsb1swXSxvWzFdKX1yZXR1cm4gdGhpcy5ncGdwdS5kb3dubG9hZEZsb2F0MzJNYXRyaXhGcm9tT3V0cHV0VGV4dHVyZShhLG9bMF0sb1sxXSl9dmFyIGw9dGhpcy5tYWtlVGVuc29ySGFuZGxlKHIsXCJmbG9hdDMyXCIpO2wuc2l6ZT1FKHIpLHRoaXMudGV4RGF0YS5nZXQobC5kYXRhSWQpLnVzYWdlPUJuLkRPV05MT0FEO3ZhciBmPW5ldyBwcihyKTt0aGlzLmNvbXBpbGVBbmRSdW4oZixbe3NoYXBlOnIsZHR5cGU6aSxkYXRhSWQ6dH1dLGwsbnVsbCwhMSk7dmFyIGg9dGhpcy50ZXhEYXRhLmdldChsLmRhdGFJZCkscD10aGlzLmdwZ3B1LmRvd25sb2FkQnl0ZUVuY29kZWRGbG9hdE1hdHJpeEZyb21PdXRwdXRUZXh0dXJlKGgudGV4dHVyZSxoLnRleFNoYXBlWzBdLGgudGV4U2hhcGVbMV0pO3JldHVybiB0aGlzLmRpc3Bvc2VEYXRhKGwuZGF0YUlkKSxwfSx0LnByb3RvdHlwZS50aW1lPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLGEsbyxzO3JldHVybiBsKHRoaXMsZnVuY3Rpb24odSl7c3dpdGNoKHUubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT10aGlzLmFjdGl2ZVRpbWVycyxuPVtdLHI9ITEsbnVsbD09dGhpcy5wcm9ncmFtVGltZXJzU3RhY2s/KHRoaXMucHJvZ3JhbVRpbWVyc1N0YWNrPW4scj0hMCk6dGhpcy5hY3RpdmVUaW1lcnMucHVzaChuKSx0aGlzLmFjdGl2ZVRpbWVycz1uLHQoKSxpPXgodGhpcy5hY3RpdmVUaW1lcnMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnF1ZXJ5fSkpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dH0pLGE9eCh0aGlzLmFjdGl2ZVRpbWVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZX0pKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXR9KSx0aGlzLmFjdGl2ZVRpbWVycz1lLHImJih0aGlzLnByb2dyYW1UaW1lcnNTdGFjaz1udWxsKSxbNCxQcm9taXNlLmFsbChpKV07Y2FzZSAxOnJldHVybiBvPXUuc2VudCgpLHM9e3VwbG9hZFdhaXRNczp0aGlzLnVwbG9hZFdhaXRNcyxkb3dubG9hZFdhaXRNczp0aGlzLmRvd25sb2FkV2FpdE1zLGtlcm5lbE1zOnkobyksZ2V0RXh0cmFQcm9maWxlSW5mbzpmdW5jdGlvbigpe3JldHVybiBvLm1hcChmdW5jdGlvbih0LGUpe3JldHVybntuYW1lOmFbZV0sbXM6dH19KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZStcIjogXCIrdC5tc30pLmpvaW4oXCIsIFwiKX0sd2FsbE1zOm51bGx9LHRoaXMudXBsb2FkV2FpdE1zPTAsdGhpcy5kb3dubG9hZFdhaXRNcz0wLFsyLHNdfX0pfSl9LHQucHJvdG90eXBlLm1lbW9yeT1mdW5jdGlvbigpe3JldHVybnt1bnJlbGlhYmxlOiExLG51bUJ5dGVzSW5HUFU6dGhpcy5udW1CeXRlc0luR1BVfX0sdC5wcm90b3R5cGUuc3RhcnRUaW1lcj1mdW5jdGlvbigpe3JldHVybiBMdC5nZXQoXCJXRUJHTF9ESVNKT0lOVF9RVUVSWV9USU1FUl9FWFRFTlNJT05fVkVSU0lPTlwiKT4wP3RoaXMuZ3BncHUuYmVnaW5RdWVyeSgpOntzdGFydE1zOnBlcmZvcm1hbmNlLm5vdygpLGVuZE1zOm51bGx9fSx0LnByb3RvdHlwZS5lbmRUaW1lcj1mdW5jdGlvbih0KXtyZXR1cm4gTHQuZ2V0KFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIik+MD8odGhpcy5ncGdwdS5lbmRRdWVyeSgpLHQpOih0LmVuZE1zPXBlcmZvcm1hbmNlLm5vdygpLHQpfSx0LnByb3RvdHlwZS5nZXRRdWVyeVRpbWU9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihuKXtyZXR1cm4gTHQuZ2V0KFwiV0VCR0xfRElTSk9JTlRfUVVFUllfVElNRVJfRVhURU5TSU9OX1ZFUlNJT05cIik+MD9bMix0aGlzLmdwZ3B1LndhaXRGb3JRdWVyeUFuZEdldFRpbWUodCldOlsyLChlPXQpLmVuZE1zLWUuc3RhcnRNc119KX0pfSx0LnByb3RvdHlwZS5kaXNwb3NlRGF0YT1mdW5jdGlvbih0KXtpZighdGhpcy5wZW5kaW5nRGlzcG9zYWwuaGFzKHQpKWlmKHRoaXMucGVuZGluZ1JlYWQuaGFzKHQpKXRoaXMucGVuZGluZ0Rpc3Bvc2FsLmFkZCh0KTtlbHNlIGlmKHRoaXMudGV4RGF0YS5oYXModCkpe3ZhciBlPXRoaXMudGV4RGF0YS5nZXQodCksbj1lLnRleHR1cmUscj1lLnRleFNoYXBlLGk9ZS51c2FnZSxhPWUuY29tcGxleFRlbnNvcnMsbz1lLmlzUGFja2VkLHM9ZS5zbGljZTtpZihudWxsIT1uKXt2YXIgdT1zJiZzLm9yaWdEYXRhSWR8fHQsYz10aGlzLmRhdGFSZWZDb3VudC5nZXQodSk7Yz4xP3RoaXMuZGF0YVJlZkNvdW50LnNldCh1LGMtMSk6KHRoaXMuZGF0YVJlZkNvdW50LmRlbGV0ZSh1KSx0aGlzLnJlbGVhc2VUZXh0dXJlKHQsbixyLGksbyksdGhpcy50ZXhEYXRhLmRlbGV0ZSh0KSl9bnVsbCE9YSYmKGEucmVhbC5kaXNwb3NlKCksYS5pbWFnLmRpc3Bvc2UoKSl9fSx0LnByb3RvdHlwZS5nZXRUZXh0dXJlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnVwbG9hZFRvR1BVKHQpLHRoaXMudGV4RGF0YS5nZXQodCkudGV4dHVyZX0sdC5wcm90b3R5cGUuZ2V0Q1BVQmFja2VuZD1mdW5jdGlvbigpe3JldHVybiBMdC5nZXQoXCJXRUJHTF9DUFVfRk9SV0FSRFwiKT8obnVsbD09dGhpcy5jcHVCYWNrZW5kJiYodGhpcy5jcHVCYWNrZW5kPUx0LmZpbmRCYWNrZW5kKFwiY3B1XCIpKSx0aGlzLmNwdUJhY2tlbmQpOm51bGx9LHQucHJvdG90eXBlLnNob3VsZEV4ZWN1dGVPbkNQVT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHZvaWQgMD09PWUmJihlPTEwKSxudWxsIT10aGlzLmdldENQVUJhY2tlbmQoKSYmdC5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09bi50ZXhEYXRhLmdldCh0LmRhdGFJZCkudGV4dHVyZSYmdC5zaXplPGV9KX0sdC5wcm90b3R5cGUuZ2V0R1BHUFVDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ3BncHV9LHQucHJvdG90eXBlLmdldENhbnZhcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNhbnZhc30sdC5wcm90b3R5cGUuY29tcGxleD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMubWFrZU91dHB1dEFycmF5KHQuc2hhcGUsXCJjb21wbGV4NjRcIik7cmV0dXJuIHRoaXMudGV4RGF0YS5nZXQobi5kYXRhSWQpLmNvbXBsZXhUZW5zb3JzPXtyZWFsOkx0LmVuZ2luZS5rZWVwKHQuY2xvbmUoKSksaW1hZzpMdC5lbmdpbmUua2VlcChlLmNsb25lKCkpfSxufSx0LnByb3RvdHlwZS5yZWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRleERhdGEuZ2V0KHQuZGF0YUlkKS5jb21wbGV4VGVuc29ycy5yZWFsLmNsb25lKCl9LHQucHJvdG90eXBlLmltYWc9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGV4RGF0YS5nZXQodC5kYXRhSWQpLmNvbXBsZXhUZW5zb3JzLmltYWcuY2xvbmUoKX0sdC5wcm90b3R5cGUuc2xpY2U9ZnVuY3Rpb24odCxlLG4pe2lmKHRoaXMuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt0XSkpcmV0dXJuIHRoaXMuY3B1QmFja2VuZC5zbGljZSh0LGUsbik7dmFyIHI9dGhpcy50ZXhEYXRhLmdldCh0LmRhdGFJZCkuaXNQYWNrZWQsaT1FZSh0LnNoYXBlLGUsbik7aWYocnx8IWkpe3ZhciBhPW5ldyBZaShuKSxvPWEuZ2V0Q3VzdG9tU2V0dXBGdW5jKGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oYSxbdF0sbnVsbCxvKX1yZXR1cm4gdGhpcy51cGxvYWRUb0dQVSh0LmRhdGFJZCksdGhpcy5zaGFsbG93U2xpY2UodCxlLG4pfSx0LnByb3RvdHlwZS5zaGFsbG93U2xpY2U9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMudGV4RGF0YS5nZXQodC5kYXRhSWQpLGk9ZnQubWFrZShuLHt9LHIuZHR5cGUpLGE9dGhpcy50ZXhEYXRhLmdldChpLmRhdGFJZCk7T2JqZWN0LmFzc2lnbihhLHIpLGEuc2hhcGU9bjt2YXIgbz1TZShlLHQuc3RyaWRlcyk7ci5zbGljZSYmKG8rPXIuc2xpY2UuZmxhdE9mZnNldCksYS5zbGljZT17ZmxhdE9mZnNldDpvLG9yaWdEYXRhSWQ6ci5zbGljZSYmci5zbGljZS5vcmlnRGF0YUlkfHx0LmRhdGFJZH07dmFyIHM9dGhpcy5kYXRhUmVmQ291bnQuZ2V0KGEuc2xpY2Uub3JpZ0RhdGFJZCl8fDE7cmV0dXJuIHRoaXMuZGF0YVJlZkNvdW50LnNldChhLnNsaWNlLm9yaWdEYXRhSWQscysxKSxpfSx0LnByb3RvdHlwZS5zdHJpZGVkU2xpY2U9ZnVuY3Rpb24odCxlLG4scixpLGEsbyxzLHUpe2lmKHRoaXMuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt0XSkpcmV0dXJuIHRoaXMuY3B1QmFja2VuZC5zdHJpZGVkU2xpY2UodCxlLG4scixpLGEsbyxzLHUpO3ZhciBjPXdlKHQuc2hhcGUsZSxuLHIsaSxhLG8scyx1KSxsPWNbMF0sZj1jWzFdLGg9Y1syXSxwPWYuZmlsdGVyKGZ1bmN0aW9uKHQsZSl7cmV0dXJuLTE9PT1oLmluZGV4T2YoZSl9KTtpZihwLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10fSkpcmV0dXJuIE1lKFtdLHApO3ZhciBkPW5ldyBaaShsLHIsZixoKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGQsW3RdKX0sdC5wcm90b3R5cGUucmV2ZXJzZT1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBIaSh0LnNoYXBlLGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdF0pfSx0LnByb3RvdHlwZS5jb25jYXQ9ZnVuY3Rpb24odCxlKXtpZih0aGlzLnNob3VsZEV4ZWN1dGVPbkNQVSh0KSlyZXR1cm4gdGhpcy5jcHVCYWNrZW5kLmNvbmNhdCh0LGUpO2lmKDE9PT10Lmxlbmd0aClyZXR1cm4gdFswXTtpZih0Lmxlbmd0aD5MdC5nZXQoXCJXRUJHTF9NQVhfVEVYVFVSRVNfSU5fU0hBREVSXCIpKXt2YXIgbj1NYXRoLmZsb29yKHQubGVuZ3RoLzIpLHI9dGhpcy5jb25jYXQodC5zbGljZSgwLG4pLGUpLGk9dGhpcy5jb25jYXQodC5zbGljZShuKSxlKTtyZXR1cm4gdGhpcy5jb25jYXQoW3IsaV0sZSl9dmFyIGE9ZGUodC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2hhcGV9KSxlKSxvPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFzMkQoLTEsRSh0LnNoYXBlLnNsaWNlKGUpKSl9KSxzPW5ldyBTbihvLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZX0pKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHMsbykucmVzaGFwZShhKX0sdC5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwicmV0dXJuIC14O1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuYmF0Y2hNYXRNdWw9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9bj90LnNoYXBlWzJdOnQuc2hhcGVbMV0sYT1yP2Uuc2hhcGVbMV06ZS5zaGFwZVsyXSxvPW4/dC5zaGFwZVsxXTp0LnNoYXBlWzJdLHM9dC5zaGFwZVswXTtpZigoMT09PWl8fDE9PT1hKSYmbz4xZTMpe24mJih0PXQudHJhbnNwb3NlKFswLDIsMV0pKSxyJiYoZT1lLnRyYW5zcG9zZShbMCwyLDFdKSk7dmFyIHU9MT09PWE/dDp0LmFzM0QocyxvLDEpLGM9MT09PWE/MjoxLGw9MT09PWE/ZS5hczNEKHMsMSxvKTplO3JldHVybiB0aGlzLm11bHRpcGx5KHUsbCkuc3VtKGMsITApfXZhciBmPV90KHQuZHR5cGUsZS5kdHlwZSk7aWYoMT09PXMpe3ZhciBoPXQuYXMyRCh0LnNoYXBlWzFdLHQuc2hhcGVbMl0pLHA9ZS5hczJEKGUuc2hhcGVbMV0sZS5zaGFwZVsyXSksZD1uZXcgUmkoaC5zaGFwZSxwLnNoYXBlLFtpLGFdLG4sciksbT10aGlzLm1ha2VQYWNrZWRUZW5zb3IoZC5vdXRwdXRTaGFwZSxmKSxnPXRoaXMuY29tcGlsZUFuZFJ1bihkLFtoLHBdLG0pO3JldHVybiBnLnJlc2hhcGUoWzEsZy5zaGFwZVswXSxnLnNoYXBlWzFdXSl9cmV0dXJuIGQ9bmV3IFRpKHQuc2hhcGUsZS5zaGFwZSxuLHIpLG09dGhpcy5tYWtlT3V0cHV0QXJyYXkoZC5vdXRwdXRTaGFwZSxmKSx0aGlzLmNvbXBpbGVBbmRSdW4oZCxbdCxlXSxtKX0sdC5wcm90b3R5cGUubXVsdGlwbHk9ZnVuY3Rpb24odCxlKXtpZihcImNvbXBsZXg2NFwiPT09dC5kdHlwZSl7dmFyIG49dGhpcy50ZXhEYXRhLmdldCh0LmRhdGFJZCkscj10aGlzLnRleERhdGEuZ2V0KGUuZGF0YUlkKSxpPW5ldyBtbihwbix0LnNoYXBlLGUuc2hhcGUpLGE9bmV3IG1uKGRuLHQuc2hhcGUsZS5zaGFwZSksbz1bdGhpcy5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZSh0LG4uY29tcGxleFRlbnNvcnMucmVhbCksdGhpcy5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZSh0LG4uY29tcGxleFRlbnNvcnMuaW1hZyksdGhpcy5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZShlLHIuY29tcGxleFRlbnNvcnMucmVhbCksdGhpcy5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZShlLHIuY29tcGxleFRlbnNvcnMuaW1hZyldLHM9dGhpcy5jb21waWxlQW5kUnVuKGksbyksdT10aGlzLmNvbXBpbGVBbmRSdW4oYSxvKSxjPXRoaXMuY29tcGxleChzLHUpO3JldHVybiBzLmRpc3Bvc2UoKSx1LmRpc3Bvc2UoKSxjfWlmKHRoaXMuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt0LGVdKSlyZXR1cm4gdGhpcy5jcHVCYWNrZW5kLm11bHRpcGx5KHQsZSk7aWYodGhpcy51c2VQYWNrZWRCaW5hcnlPcCh0LGUpKXJldHVybiB0aGlzLnBhY2tlZEJpbmFyeU9wKHQsZSx2bix0LmR0eXBlKTt2YXIgbD1uZXcgYm4odm4sdC5zaGFwZSxlLnNoYXBlKSxmPXRoaXMubWFrZU91dHB1dEFycmF5KGwub3V0cHV0U2hhcGUsdC5kdHlwZSk7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihsLFt0LGVdLGYpfSx0LnByb3RvdHlwZS5iYXRjaE5vcm1hbGl6YXRpb249ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZhciBvPVt0LGUsbl0scz1udWxsO251bGwhPWEmJihzPWEuc2hhcGUsby5wdXNoKGEpKTt2YXIgdT1udWxsO2lmKG51bGwhPWkmJih1PWkuc2hhcGUsby5wdXNoKGkpKSxMdC5nZXQoXCJXRUJHTF9QQUNLX0JBVENITk9STUFMSVpBVElPTlwiKSl7dmFyIGM9bmV3IGhuKHQuc2hhcGUsZS5zaGFwZSxuLnNoYXBlLHMsdSxyKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGMsbyl9dmFyIGw9bmV3IGZuKHQuc2hhcGUsZS5zaGFwZSxuLnNoYXBlLHMsdSxyKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGwsbyl9LHQucHJvdG90eXBlLmxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uNEQ9ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT1uZXcgQWkodC5zaGFwZSxlLG4scixpKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGEsW3RdKX0sdC5wcm90b3R5cGUuTFJOR3JhZD1mdW5jdGlvbih0LGUsbixyLGksYSxvKXt2YXIgcz1uZXcgQ2koZS5zaGFwZSxyLGksYSxvKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHMsW2Usbix0XSl9LHQucHJvdG90eXBlLnRpbGU9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgbmEodC5zaGFwZSxlKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3RdKX0sdC5wcm90b3R5cGUucGFkPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgTGkodC5zaGFwZSxlLG4pO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocixbdF0pfSx0LnByb3RvdHlwZS50cmFuc3Bvc2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgcmEodC5zaGFwZSxlKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3RdKX0sdC5wcm90b3R5cGUuZ2F0aGVyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgdnIodC5zaGFwZSxlLnNpemUsbik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKX0sdC5wcm90b3R5cGUuYmF0Y2hUb1NwYWNlTkQ9ZnVuY3Rpb24odCxlLG4pe2IodC5yYW5rPD00LFwiYmF0Y2hUb1NwYWNlTkQgZm9yIHJhbmsgPiA0IHdpdGggYSBXZWJHTCBiYWNrZW5kIG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7dmFyIHI9ZS5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCplfSksaT1RdCh0LnNoYXBlLGUsciksYT10ZShpLmxlbmd0aCxlLmxlbmd0aCksbz1lZSh0LnNoYXBlLGUscikscz1uZShuLGUubGVuZ3RoKSx1PXJlKG8sbixlLmxlbmd0aCk7cmV0dXJuIHQucmVzaGFwZShpKS50cmFuc3Bvc2UoYSkucmVzaGFwZShvKS5zbGljZShzLHUpfSx0LnByb3RvdHlwZS5zcGFjZVRvQmF0Y2hORD1mdW5jdGlvbih0LGUsbil7Yih0LnJhbms8PTQsXCJzcGFjZVRvQmF0Y2hORCBmb3IgcmFuayA+IDQgd2l0aCBhIFdlYkdMIGJhY2tlbmQgbm90IGltcGxlbWVudGVkIHlldFwiKTt2YXIgcj1lLnJlZHVjZShmdW5jdGlvbih0LGUpe3JldHVybiB0KmV9KSxpPVtbMCwwXV07aS5wdXNoLmFwcGx5KGksbik7Zm9yKHZhciBhPTErZS5sZW5ndGg7YTx0LnNoYXBlLmxlbmd0aDsrK2EpaS5wdXNoKFswLDBdKTt2YXIgbz10LnBhZChpKSxzPVF0KG8uc2hhcGUsZSxyLCExKSx1PXRlKHMubGVuZ3RoLGUubGVuZ3RoLCExKSxjPWVlKG8uc2hhcGUsZSxyLCExKTtyZXR1cm4gby5yZXNoYXBlKHMpLnRyYW5zcG9zZSh1KS5yZXNoYXBlKGMpfSx0LnByb3RvdHlwZS5yZWR1Y2U9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQuc2hhcGVbMF0saT10LnNoYXBlWzFdLGE9eWUoaSksbz1uZXcgRmkoe3dpbmRvd1NpemU6YSxpblNpemU6aSxiYXRjaFNpemU6cn0sZSkscz1vLm91dHB1dFNoYXBlLHU9c1swXSxjPXNbMV0sbD10aGlzLm1ha2VPdXRwdXRBcnJheShbdSxjXSxuKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG8sW3RdLGwpLDE9PT1sLnNoYXBlWzFdP2w6dGhpcy5yZWR1Y2UobCxlLG4pfSx0LnByb3RvdHlwZS5hcmdSZWR1Y2U9ZnVuY3Rpb24odCxlLG4pe3ZvaWQgMD09PW4mJihuPW51bGwpO3ZhciByPXQuc2hhcGVbMF0saT10LnNoYXBlWzFdO251bGwhPW4mJihyPW4uc2hhcGVbMF0saT1uLnNoYXBlWzFdKTt2YXIgYT15ZShpKSxvPW5ldyBjbih7d2luZG93U2l6ZTphLGluU2l6ZTppLGJhdGNoU2l6ZTpyfSxlLG51bGw9PW4pLHM9by5vdXRwdXRTaGFwZSx1PXNbMF0sYz1zWzFdLGw9dGhpcy5tYWtlT3V0cHV0QXJyYXkoW3UsY10sXCJpbnQzMlwiKSxmPVt0XTtyZXR1cm4gbnVsbCE9biYmZi5wdXNoKG4pLHRoaXMuY29tcGlsZUFuZFJ1bihvLGYsbCksMT09PWwuc2hhcGVbMV0/bDp0aGlzLmFyZ1JlZHVjZSh0LGUsbCl9LHQucHJvdG90eXBlLnN1bT1mdW5jdGlvbih0LGUpe3NlKFwic3VtXCIsZSx0LnJhbmspO3ZhciBuPWFlKHQuc2hhcGUsZSkscj1uWzBdLGk9RShuWzFdKSxhPXQuYXMyRCgtMSxpKSxvPXh0KHQuZHR5cGUpO3JldHVybiB0aGlzLnJlZHVjZShhLFwic3VtXCIsbykucmVzaGFwZShyKX0sdC5wcm90b3R5cGUucHJvZD1mdW5jdGlvbih0LGUpe3ZhciBuPWFlKHQuc2hhcGUsZSkscj1uWzBdLGk9RShuWzFdKSxhPXQuYXMyRCgtMSxpKSxvPXh0KHQuZHR5cGUpO3JldHVybiB0aGlzLnJlZHVjZShhLFwicHJvZFwiLG8pLnJlc2hhcGUocil9LHQucHJvdG90eXBlLnVuc29ydGVkU2VnbWVudFN1bT1mdW5jdGlvbih0LGUsbil7dmFyIHI9MCxpPXVlKFtyXSx0LnJhbmspLGE9dDtudWxsIT1pJiYoYT10LnRyYW5zcG9zZShpKSxyPWxlKDEsdC5yYW5rKVswXSk7dmFyIG89ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1bXSxpPXQubGVuZ3RoLGE9MDthPGk7YSsrKWEhPT1lP3IucHVzaCh0W2FdKTpyLnB1c2gobik7cmV0dXJuIHJ9KGEuc2hhcGUscixuKSxzPUUoW2Euc2hhcGVbcl1dKSx1PWEuYXMyRCgtMSxzKSxjPXh0KHQuZHR5cGUpLGw9dGhpcy5zZWdPcENvbXB1dGUodSxcInVuc29ydGVkU2VnbWVudFN1bVwiLGUsYyxuKS5yZXNoYXBlKG8pO3JldHVybiBudWxsIT1pJiYobD1sLnRyYW5zcG9zZShjZShpKSkpLGx9LHQucHJvdG90eXBlLnNlZ09wQ29tcHV0ZT1mdW5jdGlvbih0LGUsbixyLGkpe3ZhciBhPXQuc2hhcGVbMF0sbz10LnNoYXBlWzFdLHM9ZnVuY3Rpb24odCxlKXt2YXIgbixyPSExO2Zvcih0PD1nZT8obj10LHI9ITApOm49SCh0LE1hdGguZmxvb3IoTWF0aC5zcXJ0KHQpKSk7IXI7KXtpZihuPmV8fG49PT10KXtyPSEwO2JyZWFrfW49SCh0LG4rMSl9cmV0dXJuIG59KG8saSksdT1uZXcgR2koe3dpbmRvd1NpemU6cyxpblNpemU6byxiYXRjaFNpemU6YSxudW1TZWdtZW50czppfSxlKSxjPXUub3V0cHV0U2hhcGUsbD1jWzBdLGY9Y1sxXSxoPXRoaXMubWFrZU91dHB1dEFycmF5KFtsLGZdLHIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4odSxbdCxuXSxoKSxoLnNoYXBlWzFdPT09aT9oOihuPUtlKDAsaSkudGlsZShbby9zXSksdGhpcy5zZWdPcENvbXB1dGUoaCxlLG4scixpKSl9LHQucHJvdG90eXBlLmFyZ01pbj1mdW5jdGlvbih0LGUpe3ZhciBuPVtlXTtzZShcImFyZ01pblwiLG4sdC5yYW5rKTt2YXIgcj1hZSh0LnNoYXBlLG4pLGk9clswXSxhPUUoclsxXSksbz10LmFzMkQoLTEsYSk7cmV0dXJuIHRoaXMuYXJnUmVkdWNlKG8sXCJtaW5cIikucmVzaGFwZShpKX0sdC5wcm90b3R5cGUuYXJnTWF4PWZ1bmN0aW9uKHQsZSl7dmFyIG49W2VdO3NlKFwiYXJnTWF4XCIsbix0LnJhbmspO3ZhciByPWFlKHQuc2hhcGUsbiksaT1yWzBdLGE9RShyWzFdKSxvPXQuYXMyRCgtMSxhKTtyZXR1cm4gdGhpcy5hcmdSZWR1Y2UobyxcIm1heFwiKS5yZXNoYXBlKGkpfSx0LnByb3RvdHlwZS5jdW1zdW09ZnVuY3Rpb24odCxlLG4scil7aWYoZSE9PXQucmFuay0xKXRocm93IG5ldyBFcnJvcihcIldlYkdMIGN1bXN1bSBzaGFkZXIgZXhwZWN0cyBhbiBpbm5lci1tb3N0IGF4aXM9XCIrKHQucmFuay0xKStcIiBidXQgZ290IGF4aXM9XCIrZSk7dmFyIGk9bmV3IGxyKHQuc2hhcGUsbixyKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGksW3RdKX0sdC5wcm90b3R5cGUuZXF1YWw9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgYm4oXCJyZXR1cm4gZmxvYXQoYSA9PSBiKTtcIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImJvb2xcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdLHIpfSx0LnByb3RvdHlwZS5ub3RFcXVhbD1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBibihcInJldHVybiBmbG9hdChhICE9IGIpO1wiLHQuc2hhcGUsZS5zaGFwZSkscj10aGlzLm1ha2VPdXRwdXRBcnJheShuLm91dHB1dFNoYXBlLFwiYm9vbFwiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3QsZV0scil9LHQucHJvdG90eXBlLmxlc3M9ZnVuY3Rpb24odCxlKXtpZih0aGlzLnNob3VsZEV4ZWN1dGVPbkNQVShbdCxlXSkpcmV0dXJuIHRoaXMuY3B1QmFja2VuZC5sZXNzKHQsZSk7dmFyIG49bmV3IGJuKFwicmV0dXJuIGZsb2F0KGEgPCBiKTtcIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImJvb2xcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdLHIpfSx0LnByb3RvdHlwZS5sZXNzRXF1YWw9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgYm4oXCJyZXR1cm4gZmxvYXQoYSA8PSBiKTtcIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImJvb2xcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdLHIpfSx0LnByb3RvdHlwZS5ncmVhdGVyPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5zaG91bGRFeGVjdXRlT25DUFUoW3QsZV0pKXJldHVybiB0aGlzLmNwdUJhY2tlbmQuZ3JlYXRlcih0LGUpO3ZhciBuPW5ldyBibihcInJldHVybiBmbG9hdChhID4gYik7XCIsdC5zaGFwZSxlLnNoYXBlKSxyPXRoaXMubWFrZU91dHB1dEFycmF5KG4ub3V0cHV0U2hhcGUsXCJib29sXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSxyKX0sdC5wcm90b3R5cGUuZ3JlYXRlckVxdWFsPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGJuKFwicmV0dXJuIGZsb2F0KGEgPj0gYik7XCIsdC5zaGFwZSxlLnNoYXBlKSxyPXRoaXMubWFrZU91dHB1dEFycmF5KG4ub3V0cHV0U2hhcGUsXCJib29sXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSxyKX0sdC5wcm90b3R5cGUubG9naWNhbE5vdD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiBmbG9hdCghKHggPj0gMS4wKSk7XCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5sb2dpY2FsQW5kPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGJuKFwicmV0dXJuIGZsb2F0KGEgPj0gMS4wICYmIGIgPj0gMS4wKTtcIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImJvb2xcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdLHIpfSx0LnByb3RvdHlwZS5sb2dpY2FsT3I9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgYm4oXCJyZXR1cm4gZmxvYXQoYSA+PSAxLjAgfHwgYiA+PSAxLjApO1wiLHQuc2hhcGUsZS5zaGFwZSkscj10aGlzLm1ha2VPdXRwdXRBcnJheShuLm91dHB1dFNoYXBlLFwiYm9vbFwiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3QsZV0scil9LHQucHJvdG90eXBlLnNlbGVjdD1mdW5jdGlvbih0LGUsbil7dmFyIHI9bmV3IFhpKHQucmFuayxlLnNoYXBlLGUucmFuayksaT10aGlzLm1ha2VPdXRwdXRBcnJheShyLm91dHB1dFNoYXBlLF90KGUuZHR5cGUsbi5kdHlwZSkpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocixbdCxlLG5dLGkpfSx0LnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbih0KXtadChcInRmLndoZXJlKCkgaW4gd2ViZ2wgbG9ja3MgdGhlIFVJIHRocmVhZC4gQ2FsbCB0Zi53aGVyZUFzeW5jKCkgaW5zdGVhZFwiKTt2YXIgZT10LmRhdGFTeW5jKCk7cmV0dXJuIHNvKHQuc2hhcGUsZSl9LHQucHJvdG90eXBlLnRvcGs9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB1bih0LmRhdGFTeW5jKCksdC5zaGFwZSx0LmR0eXBlLGUpfSx0LnByb3RvdHlwZS5taW49ZnVuY3Rpb24odCxlKXtzZShcIm1pblwiLGUsdC5yYW5rKTt2YXIgbj1hZSh0LnNoYXBlLGUpLHI9blswXSxpPUUoblsxXSksYT10LmFzMkQoLTEsaSk7cmV0dXJuIHRoaXMucmVkdWNlKGEsXCJtaW5cIixhLmR0eXBlKS5yZXNoYXBlKHIpfSx0LnByb3RvdHlwZS5taW5pbXVtPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5zaG91bGRFeGVjdXRlT25DUFUoW3QsZV0pKXJldHVybiB0aGlzLmNwdUJhY2tlbmQubWluaW11bSh0LGUpO3ZhciBuPW5ldyBibihcIlxcbiAgaWYgKGlzTmFOKGEpKSByZXR1cm4gYTtcXG4gIGlmIChpc05hTihiKSkgcmV0dXJuIGI7XFxuXFxuICByZXR1cm4gbWluKGEsIGIpO1xcblwiLHQuc2hhcGUsZS5zaGFwZSk7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdKX0sdC5wcm90b3R5cGUubW9kPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGJuKFwiaWYgKGIgPT0gMC4wKSByZXR1cm4gTkFOO1xcbiAgcmV0dXJuIG1vZChhLCBiKTtcIix0LnNoYXBlLGUuc2hhcGUpLHI9bi5nZXRDdXN0b21TZXR1cEZ1bmMoKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3QsZV0sbnVsbCxyKX0sdC5wcm90b3R5cGUubWF4PWZ1bmN0aW9uKHQsZSl7c2UoXCJtYXhcIixlLHQucmFuayk7dmFyIG49YWUodC5zaGFwZSxlKSxyPW5bMF0saT1FKG5bMV0pLGE9dC5hczJEKC0xLGkpO3JldHVybiB0aGlzLnJlZHVjZShhLFwibWF4XCIsYS5kdHlwZSkucmVzaGFwZShyKX0sdC5wcm90b3R5cGUubWF4aW11bT1mdW5jdGlvbih0LGUpe2lmKHRoaXMuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt0LGVdKSlyZXR1cm4gdGhpcy5jcHVCYWNrZW5kLm1heGltdW0odCxlKTt2YXIgbj1uZXcgYm4oXCJcXG4gIGlmIChpc05hTihhKSkgcmV0dXJuIGE7XFxuICBpZiAoaXNOYU4oYikpIHJldHVybiBiO1xcblxcbiAgcmV0dXJuIG1heChhLCBiKTtcXG5cIix0LnNoYXBlLGUuc2hhcGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSl9LHQucHJvdG90eXBlLmFsbD1mdW5jdGlvbih0LGUpe3NlKFwiYWxsXCIsZSx0LnJhbmspO3ZhciBuPWFlKHQuc2hhcGUsZSkscj1uWzBdLGk9RShuWzFdKSxhPXQuYXMyRCgtMSxpKTtyZXR1cm4gdGhpcy5yZWR1Y2UoYSxcImFsbFwiLGEuZHR5cGUpLnJlc2hhcGUocil9LHQucHJvdG90eXBlLmFueT1mdW5jdGlvbih0LGUpe3NlKFwiYW55XCIsZSx0LnJhbmspO3ZhciBuPWFlKHQuc2hhcGUsZSkscj1uWzBdLGk9RShuWzFdKSxhPXQuYXMyRCgtMSxpKTtyZXR1cm4gdGhpcy5yZWR1Y2UoYSxcImFueVwiLGEuZHR5cGUpLnJlc2hhcGUocil9LHQucHJvdG90eXBlLnNxdWFyZWREaWZmZXJlbmNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGJuKFwicmV0dXJuIChhIC0gYikgKiAoYSAtIGIpO1wiLHQuc2hhcGUsZS5zaGFwZSk7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdKX0sdC5wcm90b3R5cGUucmVhbERpdmlkZT1mdW5jdGlvbih0LGUpe2lmKHRoaXMudXNlUGFja2VkQmluYXJ5T3AodCxlKSlyZXR1cm4gdGhpcy5wYWNrZWRCaW5hcnlPcCh0LGUsXCJcXG4gIHZlYzQgb25lID0gdmVjNChlcXVhbChhLCBiKSk7XFxuICByZXR1cm4gb25lICsgKHZlYzQoMS4wKSAtIG9uZSkgKiBhIC8gYjtcXG5cIixcImZsb2F0MzJcIik7dmFyIG49bmV3IGJuKFwiaWYgKGEgPT0gYikgcmV0dXJuIDEuMDtcXG4gIHJldHVybiBhIC8gYjtcIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImZsb2F0MzJcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLFt0LGVdLHIpfSx0LnByb3RvdHlwZS5mbG9vckRpdj1mdW5jdGlvbih0LGUpe2lmKHRoaXMudXNlUGFja2VkQmluYXJ5T3AodCxlKSlyZXR1cm4gdGhpcy5wYWNrZWRCaW5hcnlPcCh0LGUsXCJcXG4gIHZlYzQgcmVzdWx0U2lnbiA9IHNpZ24oYSkgKiBzaWduKGIpO1xcbiAgaXZlYzQgaWEgPSByb3VuZChhKTtcXG4gIGl2ZWM0IGliID0gcm91bmQoYik7XFxuICBpdmVjNCByZXN1bHQgPSBpYSAvIGliO1xcbiAgaXZlYzQgYW1vZGIgPSBpYSAtIGliICogcmVzdWx0O1xcbiAgXFxuICAvLyBWZWN0b3JpemUgSU5UX0RJVlxcbiAgLy8gaWYgKHJlc3VsdFNpZ24gPCAwLjAgJiYgYW1vZGIgIT0gMCkgcmVzdWx0IC09IDE7XFxuICAvLyByZXR1cm4gZmxvYXQocmVzdWx0KTtcXG4gIHJldHVybiB2ZWM0KHJlc3VsdCAtXFxuICAgICBpdmVjNChsZXNzVGhhbihyZXN1bHRTaWduLCB2ZWM0KDAuMCkpKSAqIGl2ZWM0KG5vdEVxdWFsKGFtb2RiLCBpdmVjNCgwKSkpKTtcXG5cIixcImludDMyXCIpO3ZhciBuPW5ldyBibihcIlxcbiAgZmxvYXQgcmVzdWx0U2lnbiA9IHNpZ24oYSkgKiBzaWduKGIpO1xcbiAgaW50IGlhID0gcm91bmQoYSk7XFxuICBpbnQgaWIgPSByb3VuZChiKTtcXG4gIGludCByZXN1bHQgPSBpYSAvIGliO1xcbiAgaW50IGFtb2RiID0gaWEgLSBpYiAqIHJlc3VsdDtcXG5cXG4gIGlmIChyZXN1bHRTaWduIDwgMC4wICYmIGFtb2RiICE9IDApIHtcXG4gICAgcmVzdWx0IC09IDE7XFxuICB9XFxuICByZXR1cm4gZmxvYXQocmVzdWx0KTtcXG5cIix0LnNoYXBlLGUuc2hhcGUpLHI9dGhpcy5tYWtlT3V0cHV0QXJyYXkobi5vdXRwdXRTaGFwZSxcImludDMyXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSxyKX0sdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQsZSl7aWYoXCJjb21wbGV4NjRcIj09PXQuZHR5cGUmJlwiY29tcGxleDY0XCI9PT1lLmR0eXBlKXJldHVybiB0aGlzLmNvbXBsZXhTZXBhcmFibGVCaW5hcnlPcCh0LGUsZ24pO3ZhciBuPV90KHQuZHR5cGUsZS5kdHlwZSk7aWYodGhpcy51c2VQYWNrZWRCaW5hcnlPcCh0LGUpKXJldHVybiB0aGlzLnBhY2tlZEJpbmFyeU9wKHQsZSxnbixuKTt2YXIgcj1uZXcgYm4oZ24sdC5zaGFwZSxlLnNoYXBlKSxpPXRoaXMubWFrZU91dHB1dEFycmF5KHIub3V0cHV0U2hhcGUsbik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdLGkpfSx0LnByb3RvdHlwZS51c2VQYWNrZWRCaW5hcnlPcD1mdW5jdGlvbih0LGUpe2lmKCFMdC5nZXQoXCJXRUJHTF9QQUNLX0JJTkFSWV9PUEVSQVRJT05TXCIpKXJldHVybiExO3ZhciBuPXBlKHQuc2hhcGUsZS5zaGFwZSk7cmV0dXJuIShuLmxlbmd0aD40fHxmZSh0LnNoYXBlLG4pLmxlbmd0aHx8ZmUoZS5zaGFwZSxuKS5sZW5ndGgpfSx0LnByb3RvdHlwZS5wYWNrZWRCaW5hcnlPcD1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1uZXcgd24obix0LnNoYXBlLGUuc2hhcGUpLGE9dGhpcy5tYWtlUGFja2VkVGVuc29yKGkub3V0cHV0U2hhcGUscik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihpLFt0LGVdLGEpfSx0LnByb3RvdHlwZS5jb21wbGV4U2VwYXJhYmxlQmluYXJ5T3A9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMsaT10aGlzLnRleERhdGEuZ2V0KHQuZGF0YUlkKSxhPXRoaXMudGV4RGF0YS5nZXQoZS5kYXRhSWQpLG89W1tpLmNvbXBsZXhUZW5zb3JzLnJlYWwsYS5jb21wbGV4VGVuc29ycy5yZWFsXSxbaS5jb21wbGV4VGVuc29ycy5pbWFnLGEuY29tcGxleFRlbnNvcnMuaW1hZ11dLm1hcChmdW5jdGlvbihpKXt2YXIgYT1pWzBdLG89aVsxXSxzPW5ldyBibihuLHQuc2hhcGUsZS5zaGFwZSksdT1yLm1ha2VPdXRwdXRBcnJheShzLm91dHB1dFNoYXBlLF90KGEuZHR5cGUsby5kdHlwZSkpLGM9ci5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZSh0LGEpLGw9ci5tYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckhhbmRsZShlLG8pO3JldHVybiByLmNvbXBpbGVBbmRSdW4ocyxbYyxsXSx1KX0pLHM9b1swXSx1PW9bMV0sYz10aGlzLmNvbXBsZXgocyx1KTtyZXR1cm4gcy5kaXNwb3NlKCksdS5kaXNwb3NlKCksY30sdC5wcm90b3R5cGUubWFrZUNvbXBsZXhDb21wb25lbnRUZW5zb3JIYW5kbGU9ZnVuY3Rpb24odCxlKXtyZXR1cm57ZGF0YUlkOmUuZGF0YUlkLGR0eXBlOmUuZHR5cGUsc2hhcGU6dC5zaGFwZX19LHQucHJvdG90eXBlLmFkZE49ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRbMF0sbj0xO248dC5sZW5ndGg7bisrKWU9dGhpcy5hZGQoZSx0W25dKTtyZXR1cm4gZX0sdC5wcm90b3R5cGUuc3VidHJhY3Q9ZnVuY3Rpb24odCxlKXtpZihcImNvbXBsZXg2NFwiPT09dC5kdHlwZSYmXCJjb21wbGV4NjRcIj09PWUuZHR5cGUpcmV0dXJuIHRoaXMuY29tcGxleFNlcGFyYWJsZUJpbmFyeU9wKHQsZSx5bik7aWYodGhpcy5zaG91bGRFeGVjdXRlT25DUFUoW3QsZV0pKXJldHVybiB0aGlzLmNwdUJhY2tlbmQuc3VidHJhY3QodCxlKTt2YXIgbj1fdCh0LmR0eXBlLGUuZHR5cGUpO2lmKHRoaXMudXNlUGFja2VkQmluYXJ5T3AodCxlKSlyZXR1cm4gdGhpcy5wYWNrZWRCaW5hcnlPcCh0LGUseW4sdC5kdHlwZSk7dmFyIHI9bmV3IGJuKHluLHQuc2hhcGUsZS5zaGFwZSksaT10aGlzLm1ha2VPdXRwdXRBcnJheShyLm91dHB1dFNoYXBlLG4pO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocixbdCxlXSxpKX0sdC5wcm90b3R5cGUucG93PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy51c2VQYWNrZWRCaW5hcnlPcCh0LGUpLHI9bj9uZXcgd24oXCJcXG4gIC8vIGlzTW9kUm91bmQxIGhhcyAxIGZvciBjb21wb25lbnRzIHdpdGggcm91bmQobW9kKGIsIDIuMCkpID09IDEsIDAgb3RoZXJ3aXNlLlxcbiAgdmVjNCBpc01vZFJvdW5kMSA9IHZlYzQoZXF1YWwocm91bmQobW9kKGIsIDIuMCkpLCBpdmVjNCgxKSkpO1xcbiAgdmVjNCBtdWx0aXBsaWVyID0gc2lnbihhKSAqIGlzTW9kUm91bmQxICsgKHZlYzQoMS4wKSAtIGlzTW9kUm91bmQxKTtcXG4gIHZlYzQgcmVzdWx0ID0gbXVsdGlwbGllciAqIHBvdyhhYnMoYSksIGIpO1xcblxcbiAgdmVjNCBpc05hTiA9IHZlYzQobGVzc1RoYW4oYSwgdmVjNCgwLjApKSkgKiB2ZWM0KGxlc3NUaGFuKGZsb29yKGIpLCBiKSk7XFxuICByZXN1bHQuciA9IGlzTmFOLnIgPT0gMS4wID8gTkFOIDogcmVzdWx0LnI7XFxuICByZXN1bHQuZyA9IGlzTmFOLmcgPT0gMS4wID8gTkFOIDogcmVzdWx0Lmc7XFxuICByZXN1bHQuYiA9IGlzTmFOLmIgPT0gMS4wID8gTkFOIDogcmVzdWx0LmI7XFxuICByZXN1bHQuYSA9IGlzTmFOLmEgPT0gMS4wID8gTkFOIDogcmVzdWx0LmE7XFxuICBcXG4gIHJldHVybiByZXN1bHQ7XFxuXCIsdC5zaGFwZSxlLnNoYXBlKTpuZXcgYm4oXCJcXG5pZihhIDwgMC4wICYmIGZsb29yKGIpIDwgYil7XFxuICByZXR1cm4gTkFOO1xcbn1cXG5yZXR1cm4gKHJvdW5kKG1vZChiLCAyLjApKSAhPSAxKSA/XFxuICAgIHBvdyhhYnMoYSksIGIpIDogc2lnbihhKSAqIHBvdyhhYnMoYSksIGIpO1xcblwiLHQuc2hhcGUsZS5zaGFwZSksaT1fdCh0LmR0eXBlLGUuZHR5cGUpLGE9bj90aGlzLm1ha2VQYWNrZWRUZW5zb3Ioci5vdXRwdXRTaGFwZSxpKTp0aGlzLm1ha2VPdXRwdXRBcnJheShyLm91dHB1dFNoYXBlLGkpLG89ci5nZXRDdXN0b21TZXR1cEZ1bmMoKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3QsZV0sYSxvKX0sdC5wcm90b3R5cGUuY2VpbD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiBjZWlsKHgpO1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuZmxvb3I9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gZmxvb3IoeCk7XCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwiXFxuICBpZiAoaXNOYU4oeCkpIHsgcmV0dXJuIDAuMDsgfVxcbiAgcmV0dXJuIHNpZ24oeCk7XFxuXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5yb3VuZD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcIlxcbiAgLy8gT3BlbkdMIEVTIGRvZXMgbm90IHN1cHBvcnQgcm91bmQgZnVuY3Rpb24uXFxuICAvLyBUaGUgYWxnb3JpdGhtIGlzIGJhc2VkIG9uIGJhbmtlcidzIHJvdW5kaW5nLlxcbiAgZmxvYXQgYmFzZSA9IGZsb29yKHgpO1xcbiAgaWYgKCh4IC0gYmFzZSkgPCAwLjUpIHtcXG4gICAgcmV0dXJuIGZsb29yKHgpO1xcbiAgfSBlbHNlIGlmICgoeCAtIGJhc2UpID4gMC41KSB7XFxuICAgIHJldHVybiBjZWlsKHgpO1xcbiAgfSBlbHNlIHtcXG4gICAgaWYgKG1vZChiYXNlLCAyLjApID09IDAuMCkge1xcbiAgICAgIHJldHVybiBiYXNlO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIHJldHVybiBiYXNlICsgMS4wO1xcbiAgICB9XFxuICB9XFxuXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5leHA9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gZXhwKHgpO1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuZXhwbTE9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gZXhwKHgpIC0gMS4wO1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUubG9nPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwiaWYgKHggPCAwLjApIHJldHVybiBOQU47XFxuICByZXR1cm4gbG9nKHgpO1wiKSxuPWUuZ2V0Q3VzdG9tU2V0dXBGdW5jKCk7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSxudWxsLG4pfSx0LnByb3RvdHlwZS5sb2cxcD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiBsb2coMS4wICsgeCk7XCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5zcXJ0PWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwicmV0dXJuIHNxcnQoeCk7XCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5yc3FydD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiBpbnZlcnNlc3FydCh4KTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLnNxdWFyZT1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiB4ICogeDtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLnJlY2lwcm9jYWw9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gMS4wIC8geDtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLnJlbHU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsdWEpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5wcmVsdT1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBibihcInJldHVybiAoYSA8IDAuKSA/IGIgKiBhIDogYTtcIix0LnNoYXBlLGUuc2hhcGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSl9LHQucHJvdG90eXBlLmVsdT1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiAoeCA+PSAwLjApID8geCA6IChleHAoeCkgLSAxLjApO1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuZWx1RGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGJuKFwicmV0dXJuIChiID49IDEuMCkgPyBhIDogYSAqIChiICsgMS4wKTtcIix0LnNoYXBlLGUuc2hhcGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSl9LHQucHJvdG90eXBlLnNlbHU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsY2EpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5pbnQ9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gZmxvYXQoaW50KHgpKTtcIiksbj10aGlzLm1ha2VPdXRwdXRBcnJheShlLm91dHB1dFNoYXBlLFwiaW50MzJcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSxuKX0sdC5wcm90b3R5cGUuY2xpcD1mdW5jdGlvbih0LGUsbil7dmFyIHIsaT0ocj1MdC5nZXQoXCJXRUJHTF9QQUNLX0NMSVBcIik/bmV3IHhuKHQuc2hhcGUpOm5ldyBfbih0LnNoYXBlKSkuZ2V0Q3VzdG9tU2V0dXBGdW5jKGUsbik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0XSxudWxsLGkpfSx0LnByb3RvdHlwZS5hYnM9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gYWJzKHgpO1wiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuY29tcGxleEFicz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnRleERhdGEuZ2V0KHQuZGF0YUlkKSxuPW5ldyBFbih0LnNoYXBlKSxyPVt0aGlzLm1ha2VDb21wbGV4Q29tcG9uZW50VGVuc29ySGFuZGxlKHQsZS5jb21wbGV4VGVuc29ycy5yZWFsKSx0aGlzLm1ha2VDb21wbGV4Q29tcG9uZW50VGVuc29ySGFuZGxlKHQsZS5jb21wbGV4VGVuc29ycy5pbWFnKV07cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihuLHIpfSx0LnByb3RvdHlwZS5zaWdtb2lkPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwicmV0dXJuIDEuMCAvICgxLjAgKyBleHAoLTEuMCAqIHgpKTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLnNvZnRwbHVzPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwiXFxuICBmbG9hdCBlcHNpbG9uID0gMS4xOTIwOTI4OTU1MDc4MTI1ZS03O1xcbiAgZmxvYXQgdGhyZXNob2xkID0gbG9nKGVwc2lsb24pICsgMi4wO1xcblxcbiAgYm9vbCB0b29fbGFyZ2UgPSB4ID4gLXRocmVzaG9sZDtcXG4gIGJvb2wgdG9vX3NtYWxsID0geCA8IHRocmVzaG9sZDtcXG5cXG4gIGZsb2F0IHJlc3VsdDtcXG4gIGZsb2F0IGV4cF94ID0gZXhwKHgpO1xcblxcbiAgaWYgKHRvb19sYXJnZSl7XFxuICAgIHJlc3VsdCA9IHg7XFxuICB9XFxuICBlbHNlIGlmICh0b29fc21hbGwpe1xcbiAgICByZXN1bHQgPSBleHBfeDtcXG4gIH1cXG4gIGVsc2V7XFxuICAgIHJlc3VsdCA9IGxvZyhleHBfeCArIDEuMCk7XFxuICB9XFxuICByZXR1cm4gcmVzdWx0O1xcblwiKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuc2luPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLGxhKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuY29zPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLGZhKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUudGFuPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwicmV0dXJuIHRhbih4KTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLmFzaW49ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gYXNpbih4KTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLmFjb3M9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJyZXR1cm4gYWNvcyh4KTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLmF0YW49ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsaGEpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5hdGFuMj1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBibihcIlxcbiAgaWYgKGlzTmFOKGEpKSByZXR1cm4gYTtcXG4gIGlmIChpc05hTihiKSkgcmV0dXJuIGI7XFxuXFxuICByZXR1cm4gYXRhbihhLCBiKTtcXG5cIix0LnNoYXBlLGUuc2hhcGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdCxlXSl9LHQucHJvdG90eXBlLnNpbmg9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJcXG4gIGZsb2F0IGUyeCA9IGV4cCh4KTtcXG4gIHJldHVybiAoZTJ4IC0gMS4wIC8gZTJ4KSAvIDIuMDtcXG5cIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLmNvc2g9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG9hKHQuc2hhcGUsXCJcXG4gIGZsb2F0IGUyeCA9IGV4cCgteCk7XFxuICByZXR1cm4gKGUyeCArIDEuMCAvIGUyeCkgLyAyLjA7XFxuXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS50YW5oPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLFwiXFxuICBmbG9hdCBlMnggPSBleHAoLTIuMCAqIGFicyh4KSk7XFxuICByZXR1cm4gc2lnbih4KSAqICgxLjAgLSBlMngpIC8gKDEuMCArIGUyeCk7XFxuXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0pfSx0LnByb3RvdHlwZS5hc2luaD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxcInJldHVybiBsb2coeCArIHNxcnQoeCAqIHggKyAxLjApKTtcIik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSl9LHQucHJvdG90eXBlLmFjb3NoPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLHBhKSxuPWUuZ2V0Q3VzdG9tU2V0dXBGdW5jKCk7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihlLFt0XSxudWxsLG4pfSx0LnByb3RvdHlwZS5hdGFuaD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgb2EodC5zaGFwZSxkYSksbj1lLmdldEN1c3RvbVNldHVwRnVuYygpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZSxbdF0sbnVsbCxuKX0sdC5wcm90b3R5cGUuZXJmPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvYSh0LnNoYXBlLCdcXG4gIC8vIEVycm9yIGZ1bmN0aW9uIGlzIGNhbGN1bGF0ZWQgYXBwcm94aW1hdGVseSB3aXRoIGVsZW1lbnRhcnkgZnVuY3Rpb24uXFxuICAvLyBTZWUgXCJIYW5kYm9vayBvZiBNYXRoZW1hdGljYWwgRnVuY3Rpb25zIHdpdGggRm9ybXVsYXMsXFxuICAvLyBHcmFwaHMsIGFuZCBNYXRoZW1hdGljYWwgVGFibGVzXCIsIEFicmFtb3dpdHogYW5kIFN0ZWd1bi5cXG4gIGZsb2F0IHAgPSAwLjMyNzU5MTE7XFxuICBmbG9hdCBhMSA9IDAuMjU0ODI5NTkyO1xcbiAgZmxvYXQgYTIgPSAtMC4yODQ0OTY3MzY7XFxuICBmbG9hdCBhMyA9IDEuNDIxNDEzNzQxO1xcbiAgZmxvYXQgYTQgPSAtMS40NTMxNTIwMjc7XFxuICBmbG9hdCBhNSA9IDEuMDYxNDA1NDI5O1xcblxcbiAgZmxvYXQgdCA9IDEuMCAvICgxLjAgKyBwICogeCk7XFxuICByZXR1cm4gMS4wIC0gKCgoKChhNSp0ICsgYTQpKnQpICsgYTMpKnQgKyBhMikqdCArIGExKSp0KmV4cCgteCp4KTtcXG4nKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdKX0sdC5wcm90b3R5cGUuc3RlcD1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyBvYSh0LnNoYXBlLGZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSxzYStcIlxcbiAgICByZXR1cm4geCA+IDAuMCA/IDEuMCA6IGZsb2F0KFwiK3QrXCIpO1xcbiAgXCJ9KGUpKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKG4sW3RdKX0sdC5wcm90b3R5cGUuY29udjJkV2l0aEltMlJvdz1mdW5jdGlvbih0LGUsbil7dmFyIHI9bi5maWx0ZXJXaWR0aCxpPW4uZmlsdGVySGVpZ2h0LGE9bi5pbkNoYW5uZWxzLG89bi5vdXRXaWR0aCxzPW4ub3V0SGVpZ2h0LHU9cippKmEsYz1zKm8sbD1bdSxjXSxmPXQuc3F1ZWV6ZShbMF0pLGg9ZS5yZXNoYXBlKFt1LC0xXSkscD1uZXcga2kobCxmLnNoYXBlLG4pLGQ9dGhpcy5jb21waWxlQW5kUnVuKHAsW2ZdKSxtPW5ldyBSaShkLnNoYXBlLGguc2hhcGUsW2Msbi5vdXRDaGFubmVsc10sITAsITEpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obSxbZCxoXSkucmVzaGFwZShbMSxzLG8sbi5vdXRDaGFubmVsc10pfSx0LnByb3RvdHlwZS5jb252MmQ9ZnVuY3Rpb24odCxlLG4pe2lmKEx0LmdldChcIldFQkdMX0NPTlZfSU0yQ09MXCIpJiYxPT09dC5zaGFwZVswXSlyZXR1cm4gdGhpcy5jb252MmRXaXRoSW0yUm93KHQsZSxuKTt2YXIgcj1uZXcgUG4obik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKX0sdC5wcm90b3R5cGUuY29udjJkRGVySW5wdXQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPW5ldyBJbihuKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3QsZV0pfSx0LnByb3RvdHlwZS5jb252MmREZXJGaWx0ZXI9ZnVuY3Rpb24odCxlLG4pe3ZhciByPW5ldyBObihuKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3QsZV0pfSx0LnByb3RvdHlwZS5kZXB0aHdpc2VDb252MkQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByO3JldHVybiBMdC5nZXQoXCJXRUJHTF9QQUNLX0RFUFRIV0lTRUNPTlZcIikmJjE9PT1uLmRpbGF0aW9uV2lkdGgmJjE9PT1uLmRpbGF0aW9uSGVpZ2h0JiZuLnBhZEluZm8ubGVmdDw9MSYmbi5zdHJpZGVXaWR0aDw9MiYmbi5vdXRDaGFubmVscy9uLmluQ2hhbm5lbHM9PTE/KHI9bmV3IERuKG4pLHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdLHRoaXMubWFrZVBhY2tlZFRlbnNvcihuLm91dFNoYXBlLHQuZHR5cGUpKSk6KHI9bmV3IFJuKG4pLHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKSl9LHQucHJvdG90eXBlLmRlcHRod2lzZUNvbnYyRERlcklucHV0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgQ24obik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKX0sdC5wcm90b3R5cGUuZGVwdGh3aXNlQ29udjJERGVyRmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgQW4obik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKX0sdC5wcm90b3R5cGUuY29udjNkPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgVG4obik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0LGVdKX0sdC5wcm90b3R5cGUuY29udjNkRGVySW5wdXQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPW5ldyBrbihuKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3QsZV0pfSx0LnByb3RvdHlwZS5jb252M2REZXJGaWx0ZXI9ZnVuY3Rpb24odCxlLG4pe3ZhciByPW5ldyBPbihuKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3QsZV0pfSx0LnByb3RvdHlwZS5tYXhQb29sPWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IHppKGUsXCJtYXhcIiwhMSkscj10aGlzLm1ha2VPdXRwdXRBcnJheShuLm91dHB1dFNoYXBlLHQuZHR5cGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdF0scil9LHQucHJvdG90eXBlLmF2Z1Bvb2w9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgemkoZSxcImF2Z1wiLCExKSxyPXRoaXMubWFrZU91dHB1dEFycmF5KG4ub3V0cHV0U2hhcGUsXCJmbG9hdDMyXCIpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obixbdF0scil9LHQucHJvdG90eXBlLm1heFBvb2xCYWNrcHJvcD1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1uZXcgemkocixcIm1heFwiLCEwKSxhPXRoaXMuY29tcGlsZUFuZFJ1bihpLFtlXSksbz1uZXcgUGkocikscz10aGlzLm1ha2VPdXRwdXRBcnJheShvLm91dHB1dFNoYXBlLGUuZHR5cGUpLHU9dGhpcy5jb21waWxlQW5kUnVuKG8sW3QsYV0scyk7cmV0dXJuIGEuZGlzcG9zZSgpLHV9LHQucHJvdG90eXBlLmF2Z1Bvb2xCYWNrcHJvcD1mdW5jdGlvbih0LGUsbil7dmFyIHI9bmV3IGxuKG4pLGk9dGhpcy5tYWtlT3V0cHV0QXJyYXkoci5vdXRwdXRTaGFwZSxlLmR0eXBlKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHIsW3RdLGkpfSx0LnByb3RvdHlwZS5jYXN0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFplKHQsZSx0aGlzKX0sdC5wcm90b3R5cGUudW5zdGFjaz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10LnNoYXBlW2VdLHI9bmV3IEFycmF5KHQucmFuay0xKSxpPTAsYT0wO2E8dC5yYW5rO2ErKylhIT09ZSYmKHJbaSsrXT10LnNoYXBlW2FdKTt2YXIgbz1uZXcgQXJyYXkodC5yYW5rKS5maWxsKDApLHM9dC5zaGFwZS5zbGljZSgpO3NbZV09MTt2YXIgdT1uZXcgQXJyYXkobik7Zm9yKGE9MDthPHUubGVuZ3RoO2ErKylvW2VdPWEsdVthXT10aGlzLnNsaWNlKHQsbyxzKS5yZXNoYXBlKHIpO3JldHVybiB1fSx0LnByb3RvdHlwZS5yZXNoYXBlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGV4RGF0YS5nZXQodC5kYXRhSWQpLmlzUGFja2VkJiYhbmkodC5zaGFwZSxlKT90aGlzLnBhY2tlZFJlc2hhcGUodCxlKTpRZSh0LGUpfSx0LnByb3RvdHlwZS5yZXNpemVCaWxpbmVhcj1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1uZXcgV2kodC5zaGFwZSxlLG4scik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihpLFt0XSl9LHQucHJvdG90eXBlLnJlc2l6ZUJpbGluZWFyQmFja3Byb3A9ZnVuY3Rpb24odCxlLG4pe3ZhciByPW5ldyBWaSh0LGUsbik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihyLFt0XSl9LHQucHJvdG90eXBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvcj1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1uZXcgJGkodC5zaGFwZSxlLG4scik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihpLFt0XSl9LHQucHJvdG90eXBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvckJhY2twcm9wPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uZXcgcWkodCxlLG4pO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocixbdF0pfSx0LnByb3RvdHlwZS5tdWx0aW5vbWlhbD1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1lP3Q6Q2UodCksYT1pLnNoYXBlWzBdLG89aS5zaGFwZVsxXSxzPW5ldyBEaShhLG8sbiksdT10aGlzLm1ha2VPdXRwdXRBcnJheShzLm91dHB1dFNoYXBlLFwiaW50MzJcIiksYz1zLmdldEN1c3RvbVNldHVwRnVuYyhyKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKHMsW2ldLHUsYyl9LHQucHJvdG90eXBlLm9uZUhvdD1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT1uZXcgTWkodC5zaXplLGUsbixyKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGksW3RdKX0sdC5wcm90b3R5cGUubm9uTWF4U3VwcHJlc3Npb249ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gWnQoXCJ0Zi5ub25NYXhTdXBwcmVzc2lvbigpIGluIHdlYmdsIGxvY2tzIHRoZSBVSSB0aHJlYWQuIENhbGwgdGYubm9uTWF4U3VwcHJlc3Npb25Bc3luYygpIGluc3RlYWRcIiksYW4odC5kYXRhU3luYygpLGUuZGF0YVN5bmMoKSxuLHIsaSl9LHQucHJvdG90eXBlLmNyb3BBbmRSZXNpemU9ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZhciBvPW5ldyB6bih0LnNoYXBlLGUuc2hhcGUscixpLGEpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4obyxbdCxlLG5dKX0sdC5wcm90b3R5cGUuZGVwdGhUb1NwYWNlPWZ1bmN0aW9uKHQsZSxuKXtiKGU+MSxcImJsb2NrU2l6ZSBzaG91bGQgYmUgPiAxIGZvciBkZXB0aFRvU3BhY2UsIGJ1dCB3YXM6IFwiK2UpO3ZhciByPXQuc2hhcGVbMF0saT0oXCJOSFdDXCI9PT1uP3Quc2hhcGVbMV06dC5zaGFwZVsyXSkqZSxhPShcIk5IV0NcIj09PW4/dC5zaGFwZVsyXTp0LnNoYXBlWzNdKSplLG89KFwiTkhXQ1wiPT09bj90LnNoYXBlWzNdOnQuc2hhcGVbMV0pLyhlKmUpLHM9bmV3IGhyKFwiTkhXQ1wiPT09bj9bcixpLGEsb106W3IsbyxpLGFdLGUsbik7cmV0dXJuIHRoaXMuY29tcGlsZUFuZFJ1bihzLFt0XSl9LHQucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gc24odCxlLG4pfSx0LnByb3RvdHlwZS5zY2F0dGVyTkQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPWJlKDAsdCxuKSxpPXIuc2xpY2VSYW5rLGE9ci5udW1VcGRhdGVzLG89ci5zbGljZVNpemUscz1yLnN0cmlkZXMsdT1yLm91dHB1dFNpemUsYz1bdS9vLG9dLGw9dC5yZXNoYXBlKFthLGldKSxmPWUucmVzaGFwZShbYSxvXSk7aWYoMD09PXUpcmV0dXJuIFFlKE1lKFtdKSxuKTt2YXIgaD1qZSgwKSxwPW5ldyBLaShhLGksbC5yYW5rLGYucmFuayxzLGMpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4ocCxbZixsLGhdKS5yZXNoYXBlKG4pfSx0LnByb3RvdHlwZS5zcGFyc2VUb0RlbnNlPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPWJlKDAsdCxuKSxhPWkuc2xpY2VSYW5rLG89aS5udW1VcGRhdGVzLHM9aS5zdHJpZGVzLHU9aS5vdXRwdXRTaXplLGM9bmV3IEtpKG8sYSx0LnJhbmssZS5yYW5rLHMsW3UsMV0sITEpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oYyxbZSx0LHJdKS5yZXNoYXBlKG4pfSx0LnByb3RvdHlwZS5mZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZmZ0SW1wbCh0LCExKX0sdC5wcm90b3R5cGUuaWZmdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5mZnRJbXBsKHQsITApfSx0LnByb3RvdHlwZS5mZnRJbXBsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy50ZXhEYXRhLmdldCh0LmRhdGFJZCkscj1uZXcgZ3IoZHIsdC5zaGFwZSxlKSxpPW5ldyBncihtcix0LnNoYXBlLGUpLGE9W3RoaXMubWFrZUNvbXBsZXhDb21wb25lbnRUZW5zb3JIYW5kbGUodCxuLmNvbXBsZXhUZW5zb3JzLnJlYWwpLHRoaXMubWFrZUNvbXBsZXhDb21wb25lbnRUZW5zb3JIYW5kbGUodCxuLmNvbXBsZXhUZW5zb3JzLmltYWcpXSxvPXRoaXMuY29tcGlsZUFuZFJ1bihyLGEpLHM9dGhpcy5jb21waWxlQW5kUnVuKGksYSksdT10aGlzLmNvbXBsZXgobyxzKS5hczJEKHQuc2hhcGVbMF0sdC5zaGFwZVsxXSk7cmV0dXJuIG8uZGlzcG9zZSgpLHMuZGlzcG9zZSgpLHV9LHQucHJvdG90eXBlLmdhdGhlck5EPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5zaGFwZSxyPW5bbi5sZW5ndGgtMV0saT1tZSh0LGUpLGE9aVswXSxvPWlbMV0scz1pWzJdLHU9aVszXSxjPWUucmVzaGFwZShbbyxyXSksbD10LnJlc2hhcGUoW3Quc2l6ZS9zLHNdKSxmPW5ldyBicihyLHUsW28sc10pO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oZixbbCxjXSkucmVzaGFwZShhKX0sdC5wcm90b3R5cGUubWFrZU91dHB1dEFycmF5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ0Lm1ha2UodCx7fSxlKX0sdC5wcm90b3R5cGUubWFrZVBhY2tlZFRlbnNvcj1mdW5jdGlvbih0LGUpe3ZhciBuPWZ0Lm1ha2UodCx7fSxlKTtyZXR1cm4gdGhpcy50ZXhEYXRhLmdldChuLmRhdGFJZCkuaXNQYWNrZWQ9ITAsbn0sdC5wcm90b3R5cGUudW5wYWNrVGVuc29yPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBtYSh0LnNoYXBlKTtyZXR1cm4gdGhpcy5jb21waWxlQW5kUnVuKGUsW3RdLGZ0Lm1ha2UoZS5vdXRwdXRTaGFwZSx7fSx0LmR0eXBlKSl9LHQucHJvdG90eXBlLnBhY2tlZFJlc2hhcGU9ZnVuY3Rpb24odCxlKXt2YXIgbj10LnJlc2hhcGUoW1pyKHQuc2hhcGUpXS5jb25jYXQoUXIodC5zaGFwZSkpKSxyPVtacihlKV0uY29uY2F0KFFyKGUpKSxpPW5ldyBVaShyLG4uc2hhcGUpO3JldHVybiB0aGlzLmNvbXBpbGVBbmRSdW4oaSxbbl0pLnJlc2hhcGUoZSl9LHQucHJvdG90eXBlLmNvbXBpbGVBbmRSdW49ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT10aGlzO2lmKHZvaWQgMD09PWkmJihpPSEwKSxudWxsPT1uJiYobj10LnVzZXNQYWNrZWRUZXh0dXJlcz90aGlzLm1ha2VQYWNrZWRUZW5zb3IodC5vdXRwdXRTaGFwZSxlWzBdLmR0eXBlKTp0aGlzLm1ha2VPdXRwdXRBcnJheSh0Lm91dHB1dFNoYXBlLGVbMF0uZHR5cGUpKSwwPT09bi5zaXplKXJldHVybiB0aGlzLnRleERhdGEuZ2V0KG4uZGF0YUlkKS52YWx1ZXM9UihuLmR0eXBlLDApLG47dmFyIG89ZS5tYXAoZnVuY3Rpb24oZSl7aWYoXCJjb21wbGV4NjRcIj09PWUuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiR1BHUFVQcm9ncmFtIGRvZXMgbm90IHN1cHBvcnQgY29tcGxleDY0IGlucHV0LiBGb3IgY29tcGxleDY0IGR0eXBlcywgcGxlYXNlIHNlcGFyYXRlIHRoZSBwcm9ncmFtIGludG8gcmVhbCBhbmQgaW1hZ2luYXJ5IHBhcnRzLlwiKTt2YXIgbj1hLnRleERhdGEuZ2V0KGUuZGF0YUlkKTtpZihudWxsPT1uLnRleHR1cmUpe2lmKCF0LnVzZXNQYWNrZWRUZXh0dXJlcyYmRShlLnNoYXBlKTw9THQuZ2V0KFwiV0VCR0xfU0laRV9VUExPQURfVU5JRk9STVwiKSlyZXR1cm57c2hhcGU6ZS5zaGFwZSx0ZXhEYXRhOm51bGwsaXNVbmlmb3JtOiEwLHVuaWZvcm1WYWx1ZXM6YS5yZWFkU3luYyhlLmRhdGFJZCl9O3QudXNlc1BhY2tlZFRleHR1cmVzJiYobi5pc1BhY2tlZD0hMCxuLnNoYXBlPWUuc2hhcGUpfWVsc2UgaWYoISFuLmlzUGFja2VkIT0hIXQudXNlc1BhY2tlZFRleHR1cmVzKXt2YXIgcj12b2lkIDAsaT12b2lkIDA7bi5pc1BhY2tlZD8ocj1uZXcgbWEoZS5zaGFwZSksaT1hLmNvbXBpbGVBbmRSdW4ocixbZV0sZnQubWFrZShyLm91dHB1dFNoYXBlLHt9LGUuZHR5cGUpKSk6KHI9bmV3IEJpKGUuc2hhcGUpLGk9YS5jb21waWxlQW5kUnVuKHIsW2VdLGEubWFrZVBhY2tlZFRlbnNvcihlLnNoYXBlLGUuZHR5cGUpKSksbj1hLnRleERhdGEuZ2V0KGkuZGF0YUlkKSxlPWl9ZWxzZSBpZihuLmlzUGFja2VkJiYhbmkobi5zaGFwZSxlLnNoYXBlKSl7YS5kZWxheWVkU3RvcmFnZT0hMTt2YXIgbz1lLmRhdGFTeW5jKCk7YS5kZWxheWVkU3RvcmFnZT0hMCxlPWZ0Lm1ha2UoZS5zaGFwZSx7dmFsdWVzOm99LGUuZHR5cGUpLChuPWEudGV4RGF0YS5nZXQoZS5kYXRhSWQpKS5pc1BhY2tlZD0hMH1yZXR1cm4gYS51cGxvYWRUb0dQVShlLmRhdGFJZCkse3NoYXBlOmUuc2hhcGUsdGV4RGF0YTpuLGlzVW5pZm9ybTohMX19KTt0aGlzLnVwbG9hZFRvR1BVKG4uZGF0YUlkKTt2YXIgcyx1PXtzaGFwZTpuLnNoYXBlLHRleERhdGE6dGhpcy50ZXhEYXRhLmdldChuLmRhdGFJZCksaXNVbmlmb3JtOiExfSxjPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1cIlwiO2UuY29uY2F0KG4pLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9bnVsbCE9dC50ZXhEYXRhJiZudWxsIT10LnRleERhdGEuc2xpY2UmJnQudGV4RGF0YS5zbGljZS5mbGF0T2Zmc2V0PjAsbj10LmlzVW5pZm9ybT9cInVuaWZvcm1cIjp0LnRleERhdGEudGV4U2hhcGU7cis9dC5zaGFwZStcIl9cIituK1wiX1wiK2V9KTt2YXIgaT10LnVzZXJDb2RlO3JldHVybiB0LmNvbnN0cnVjdG9yLm5hbWUrXCJfXCIrcitcIl9cIitpfSh0LG8sdSksbD10aGlzLmdldEFuZFNhdmVCaW5hcnkoYyxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0LGUsbixyKXtmb3IodmFyIGk9ZS51c2VyQ29kZSxhPW4ubWFwKGZ1bmN0aW9uKHQsbil7dmFyIHI9e2xvZ2ljYWxTaGFwZTp0LnNoYXBlLHRleFNoYXBlOnQuaXNVbmlmb3JtP251bGw6dC50ZXhEYXRhLnRleFNoYXBlLGlzVW5pZm9ybTp0LmlzVW5pZm9ybSxpc1BhY2tlZDohdC5pc1VuaWZvcm0mJnQudGV4RGF0YS5pc1BhY2tlZCxmbGF0T2Zmc2V0Om51bGx9O3JldHVybiBudWxsIT10LnRleERhdGEmJm51bGwhPXQudGV4RGF0YS5zbGljZSYmdC50ZXhEYXRhLnNsaWNlLmZsYXRPZmZzZXQ+MCYmKHIuZmxhdE9mZnNldD10LnRleERhdGEuc2xpY2UuZmxhdE9mZnNldCkse25hbWU6ZS52YXJpYWJsZU5hbWVzW25dLHNoYXBlSW5mbzpyfX0pLG89YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2hhcGVJbmZvfSkscz17bG9naWNhbFNoYXBlOnIuc2hhcGUsdGV4U2hhcGU6ci50ZXhEYXRhLnRleFNoYXBlLGlzVW5pZm9ybTohMSxpc1BhY2tlZDpyLnRleERhdGEuaXNQYWNrZWQsZmxhdE9mZnNldDpudWxsfSx1PVhuKGEscyxpLGUudXNlc1BhY2tlZFRleHR1cmVzKSxjPXQuY3JlYXRlUHJvZ3JhbSh1KSxsPXt9LGY9MDtmPGUudmFyaWFibGVOYW1lcy5sZW5ndGg7ZisrKXt2YXIgaD1lLnZhcmlhYmxlTmFtZXNbZl07bFtoXT10LmdldFVuaWZvcm1Mb2NhdGlvbihjLGgsITEpLGxbXCJvZmZzZXRcIitoXT10LmdldFVuaWZvcm1Mb2NhdGlvbihjLFwib2Zmc2V0XCIraCwhMSl9cmV0dXJue3Byb2dyYW06ZSxzb3VyY2U6dSx3ZWJHTFByb2dyYW06Yyx1bmlmb3JtTG9jYXRpb25zOmwsZ3BncHU6dCxpblNoYXBlSW5mb3M6byxvdXRTaGFwZUluZm86c319KGEuZ3BncHUsdCxvLHUpfSksZj1udWxsIT10aGlzLmFjdGl2ZVRpbWVycztmJiYocz10aGlzLnN0YXJ0VGltZXIoKSksZnVuY3Rpb24odCxlLG4scil7T2kodC5pblNoYXBlSW5mb3MsZSksT2koW3Qub3V0U2hhcGVJbmZvXSxbbl0pO3ZhciBpPW4udGV4RGF0YS50ZXh0dXJlLGE9bi50ZXhEYXRhLnRleFNoYXBlLG89dC5ncGdwdTtuLnRleERhdGEuaXNQYWNrZWQ/by5zZXRPdXRwdXRQYWNrZWRNYXRyaXhUZXh0dXJlKGksYVswXSxhWzFdKTpvLnNldE91dHB1dE1hdHJpeFRleHR1cmUoaSxhWzBdLGFbMV0pLG8uc2V0UHJvZ3JhbSh0LndlYkdMUHJvZ3JhbSksZS5mb3JFYWNoKGZ1bmN0aW9uKGUsbil7dmFyIHI9dC5wcm9ncmFtLnZhcmlhYmxlTmFtZXNbbl0saT10LnVuaWZvcm1Mb2NhdGlvbnNbcl0sYT10LnVuaWZvcm1Mb2NhdGlvbnNbXCJvZmZzZXRcIityXTtpZihudWxsIT1pKWlmKGUuaXNVbmlmb3JtKWlmKDE9PT1FKGUuc2hhcGUpKW8uZ2wudW5pZm9ybTFmKGksZS51bmlmb3JtVmFsdWVzWzBdKTtlbHNle3ZhciBzPWUudW5pZm9ybVZhbHVlcztzIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHwocz1uZXcgRmxvYXQzMkFycmF5KHMpKSxvLmdsLnVuaWZvcm0xZnYoaSxzKX1lbHNlIG51bGwhPWUudGV4RGF0YS5zbGljZSYmbnVsbCE9YSYmby5nbC51bmlmb3JtMWkoYSxlLnRleERhdGEuc2xpY2UuZmxhdE9mZnNldCksby5zZXRJbnB1dE1hdHJpeFRleHR1cmUoZS50ZXhEYXRhLnRleHR1cmUsaSxuKX0pLG51bGwhPXImJnIobyx0LndlYkdMUHJvZ3JhbSksby5leGVjdXRlUHJvZ3JhbSgpfShsLG8sdSxyKTt2YXIgaD0xMDI0Kkx0LmdldChcIldFQkdMX05VTV9NQl9CRUZPUkVfUEFHSU5HXCIpO2lmKGkmJnRoaXMubnVtQnl0ZXNJbkdQVT5oKWZvcih2YXIgcD10aGlzLm51bUJ5dGVzSW5HUFUtaDtwPjAmJnRoaXMubHJ1RGF0YUdQVS5sZW5ndGg+MDspe3ZhciBkPXRoaXMubHJ1RGF0YUdQVS5zaGlmdCgpLG09dGhpcy50ZXhEYXRhLmdldChkKSxnPW0uc2hhcGUseT1tLmR0eXBlO3AtPXRoaXMuY29tcHV0ZUJ5dGVzKGcseSksdGhpcy5yZWFkKGQpfXJldHVybiBmJiYocz10aGlzLmVuZFRpbWVyKHMpLHRoaXMuYWN0aXZlVGltZXJzLnB1c2goe25hbWU6dC5jb25zdHJ1Y3Rvci5uYW1lLHF1ZXJ5OnRoaXMuZ2V0UXVlcnlUaW1lKHMpfSkpLEx0LmdldChcIldFQkdMX0xBWklMWV9VTlBBQ0tcIil8fCF0aGlzLnRleERhdGEuZ2V0KG4uZGF0YUlkKS5pc1BhY2tlZHx8dC5pc1BhY2tTaGFkZXI/bjp0aGlzLnVucGFja1RlbnNvcihuKX0sdC5wcm90b3R5cGUuZ2V0QW5kU2F2ZUJpbmFyeT1mdW5jdGlvbih0LGUpe3JldHVybiB0IGluIHRoaXMuYmluYXJ5Q2FjaGV8fCh0aGlzLmJpbmFyeUNhY2hlW3RdPWUoKSksdGhpcy5iaW5hcnlDYWNoZVt0XX0sdC5wcm90b3R5cGUuZ2V0VGV4dHVyZU1hbmFnZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50ZXh0dXJlTWFuYWdlcn0sdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2lmKCF0aGlzLmRpc3Bvc2VkKXtmb3IodmFyIHQgaW4gdGhpcy5iaW5hcnlDYWNoZSl0aGlzLmdwZ3B1LmRlbGV0ZVByb2dyYW0odGhpcy5iaW5hcnlDYWNoZVt0XS53ZWJHTFByb2dyYW0pO3RoaXMudGV4dHVyZU1hbmFnZXIuZGlzcG9zZSgpLHRoaXMuY2FudmFzLnJlbW92ZSgpLG51bGwhPXRoaXMuZnJvbVBpeGVsczJEQ29udGV4dCYmdGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0LmNhbnZhcy5yZW1vdmUoKSx0aGlzLmdwZ3B1Q3JlYXRlZExvY2FsbHkmJnRoaXMuZ3BncHUuZGlzcG9zZSgpLHRoaXMuZGlzcG9zZWQ9ITB9fSx0LnByb3RvdHlwZS5mbG9hdFByZWNpc2lvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIEt0KGZ1bmN0aW9uKCl7dmFyIGU9THQuZ2V0KFwiREVCVUdcIik7THQuc2V0KFwiREVCVUdcIiwhMSk7dmFyIG49dC5hYnMoamUoMWUtOCkpLmdldCgpO3JldHVybiBMdC5zZXQoXCJERUJVR1wiLGUpLG4+MD8zMjoxNn0pfSx0LnByb3RvdHlwZS51cGxvYWRUb0dQVT1mdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMudGV4RGF0YS5nZXQodCkscj1uLnNoYXBlLGk9bi52YWx1ZXMsYT1uLnRleHR1cmUsbz1uLnVzYWdlLHM9bi5pc1BhY2tlZDtpZihudWxsPT1hKXt2YXIgdSxjPW51bGwhPXRoaXMuYWN0aXZlVGltZXJzO2MmJih1PXBlcmZvcm1hbmNlLm5vdygpKTt2YXIgbD10aShyLHMpO24udGV4U2hhcGU9bDt2YXIgZj10aGlzLmFjcXVpcmVUZXh0dXJlKHQsbCxvLHMpO2lmKG4udGV4dHVyZT1mLG51bGwhPWkpe2lmKHMpe3ZhciBoPVpyKHIpLHA9MSxkPTE7ci5sZW5ndGgmJihwPShlPVFyKHIpKVswXSxkPWVbMV0pLHRoaXMuZ3BncHUudXBsb2FkTWF0cml4VG9QYWNrZWRUZXh0dXJlKGYsaCxwLGQsbFswXSxsWzFdLGNvKGkpKX1lbHNlIHRoaXMuZ3BncHUudXBsb2FkTWF0cml4VG9UZXh0dXJlKGYsbFswXSxsWzFdLGNvKGkpKTtuLnZhbHVlcz1udWxsLGMmJih0aGlzLnVwbG9hZFdhaXRNcys9cGVyZm9ybWFuY2Uubm93KCktdSl9fWVsc2UgTHQuZ2V0KFwiV0VCR0xfTlVNX01CX0JFRk9SRV9QQUdJTkdcIik8TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZJiZ0aGlzLmxydURhdGFHUFUuaW5kZXhPZih0KT49MCYmKHRoaXMubHJ1RGF0YUdQVS5zcGxpY2UodGhpcy5scnVEYXRhR1BVLmluZGV4T2YodCksMSksdGhpcy5scnVEYXRhR1BVLnB1c2godCkpfSx0LnByb3RvdHlwZS5jb252ZXJ0QW5kQ2FjaGVPbkNQVT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZGVsYXllZFN0b3JhZ2Uscj10aGlzLnRleERhdGEuZ2V0KHQpLGk9ci50ZXh0dXJlLGE9ci50ZXhTaGFwZSxvPXIuZHR5cGUscz1yLnVzYWdlLHU9ci5pc1BhY2tlZDtyZXR1cm4gbiYmbnVsbCE9aSYmKHRoaXMucmVsZWFzZVRleHR1cmUodCxpLGEscyx1KSxyLnRleHR1cmU9bnVsbCxyLnRleFNoYXBlPW51bGwsci5pc1BhY2tlZD0hMSksci51c2FnZT1Cbi5VUExPQUQsbnVsbCE9ZSYmKHIudmFsdWVzPWZ1bmN0aW9uKHQsZSl7aWYoXCJmbG9hdDMyXCI9PT1lfHxcImNvbXBsZXg2NFwiPT09ZSlyZXR1cm4gdDtpZihcImludDMyXCI9PT1lfHxcImJvb2xcIj09PWUpe2Zvcih2YXIgbj1cImludDMyXCI9PT1lP25ldyBJbnQzMkFycmF5KHQubGVuZ3RoKTpuZXcgVWludDhBcnJheSh0Lmxlbmd0aCkscj0wO3I8bi5sZW5ndGg7KytyKW5bcl09TWF0aC5yb3VuZCh0W3JdKTtyZXR1cm4gbn10aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGR0eXBlIFwiK2UpfShlLG8pKSxyLnZhbHVlc30sdC5wcm90b3R5cGUucmVsZWFzZVRleHR1cmU9ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT10aGlzLnRleERhdGEuZ2V0KHQpLG89YS5zaGFwZSxzPWEuZHR5cGU7aWYoTHQuZ2V0KFwiV0VCR0xfTlVNX01CX0JFRk9SRV9QQUdJTkdcIik8TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKXt2YXIgdT10aGlzLmxydURhdGFHUFUuaW5kZXhPZih0KTt1Pj0wJiZ0aGlzLmxydURhdGFHUFUuc3BsaWNlKHUsMSl9dGhpcy5udW1CeXRlc0luR1BVLT10aGlzLmNvbXB1dGVCeXRlcyhvLHMpLHRoaXMudGV4dHVyZU1hbmFnZXIucmVsZWFzZVRleHR1cmUoZSxuLHIsaSl9LHQucHJvdG90eXBlLmFjcXVpcmVUZXh0dXJlPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMudGV4RGF0YS5nZXQodCksYT1pLnNoYXBlLG89aS5kdHlwZTtyZXR1cm4gTHQuZ2V0KFwiV0VCR0xfTlVNX01CX0JFRk9SRV9QQUdJTkdcIik8TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZJiZ0aGlzLmxydURhdGFHUFUucHVzaCh0KSx0aGlzLm51bUJ5dGVzSW5HUFUrPXRoaXMuY29tcHV0ZUJ5dGVzKGEsbyksdGhpcy50ZXh0dXJlTWFuYWdlci5hY3F1aXJlVGV4dHVyZShlLG4scil9LHQucHJvdG90eXBlLmNvbXB1dGVCeXRlcz1mdW5jdGlvbih0LGUpe3JldHVybiBFKHQpKnooZSl9LHR9KCk7ZnVuY3Rpb24gY28odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/dDpuZXcgRmxvYXQzMkFycmF5KHQpfUx0LmdldChcIklTX0JST1dTRVJcIikmJkx0LnJlZ2lzdGVyQmFja2VuZChcIndlYmdsXCIsZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHVvfSwyLGx0KTt2YXIgbG89QWUoe2Fic186ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImFic1wiKTtyZXR1cm5cImNvbXBsZXg2NFwiPT09ZS5kdHlwZT9MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbXBsZXhBYnMoZSl9LHskeDplfSk6THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5hYnMoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5tdWxTdHJpY3QoZS50b0Zsb2F0KCkuc3RlcCgtMSkpfX19KX19KSxmbz1BZSh7YWNvc186ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImFjb3NcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYWNvcyhlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LmRpdlN0cmljdChqZSgxKS5zdWIoZS50b0Zsb2F0KCkuc3F1YXJlKCkpLnNxcnQoKSkubmVnKCl9fX0pfX0pLGhvPUFlKHthY29zaF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImFjb3NoXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFjb3NoKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGl2U3RyaWN0KGUudG9GbG9hdCgpLnNxdWFyZSgpLnN1YigxKS5zcXJ0KCkpfX19KX19KSxwbz1BZSh7YXNpbl86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImFzaW5cIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXNpbihlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LmRpdlN0cmljdChqZSgxKS5zdWIoZS50b0Zsb2F0KCkuc3F1YXJlKCkpLnNxcnQoKSl9fX0pfX0pLG1vPUFlKHthc2luaF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImFzaW5oXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFzaW5oKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGl2U3RyaWN0KGplKDEpLmFkZChlLnRvRmxvYXQoKS5zcXVhcmUoKSkuc3FydCgpKX19fSl9fSksZ289QWUoe2F0YW5fOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJhdGFuXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmF0YW4oZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5kaXYoZS50b0Zsb2F0KCkuc3F1YXJlKCkuYWRkKDEpKX19fSl9fSkseW89QWUoe2F0YW5oXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiYXRhbmhcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXRhbmgoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5kaXYoamUoMSkuc3ViKGUudG9GbG9hdCgpLnNxdWFyZSgpKSl9fX0pfX0pLHZvPUFlKHtjZWlsXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiY2VpbFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jZWlsKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIFhlKHQpfX19KX19KSxibz1BZSh7Y2xpcEJ5VmFsdWVfOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1PZSh0LFwieFwiLFwiY2xpcEJ5VmFsdWVcIik7cmV0dXJuIGIoZTw9bixcIkVycm9yIGluIGNsaXA6IG1pbiAoXCIrZStcIikgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gbWF4IChcIituK1wiKS5cIiksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jbGlwKHIsZSxuKX0seyR4OnJ9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LndoZXJlKHIuZ3JlYXRlckVxdWFsKGUpLmxvZ2ljYWxBbmQoci5sZXNzRXF1YWwobikpLFhlKHQpKX19fSl9fSksd289QWUoe2Nvc186ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImNvc1wiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb3MoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gZS50b0Zsb2F0KCkuc2luKCkubmVnKCkubXVsU3RyaWN0KHQpfX19KX19KSxfbz1BZSh7Y29zaF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImNvc2hcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY29zaChlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBlLnRvRmxvYXQoKS5zaW5oKCkubXVsU3RyaWN0KHQpfX19KX19KSx4bz1BZSh7ZXJmXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiZXJmXCIpO3JldHVybiBiKFwiaW50MzJcIj09PWUuZHR5cGV8fFwiZmxvYXQzMlwiPT09ZS5kdHlwZSxcIklucHV0IGR0eXBlIG11c3QgYmUgYGludDMyYCBvciBgZmxvYXQzMmAuXCIpLFwiaW50MzJcIj09PWUuZHR5cGUmJihlPWUudG9GbG9hdCgpKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVyZihlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0Lm11bChlLnNxdWFyZSgpLm5lZygpLmV4cCgpLm11bCgyL01hdGguc3FydChNYXRoLlBJKSkpfX19KX19KSxFbz1BZSh7ZXhwXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiZXhwXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4odC5leHAoZSkpfSx7JHg6ZX0sZnVuY3Rpb24odCxlKXt2YXIgbj1lWzBdO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0Lm11bFN0cmljdChuKX19fSl9fSksU289QWUoe2V4cG0xXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiZXhwbTFcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuZXhwbTEoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5tdWxTdHJpY3QoZS5leHAoKSl9fX0pfX0pLE5vPUFlKHtmbG9vcl86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImZsb29yXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmZsb29yKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIFhlKHQpfX19KX19KSxJbz1BZSh7bG9nXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwibG9nXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmxvZyhlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LmRpdlN0cmljdChlLnRvRmxvYXQoKSl9fX0pfX0pLE9vPUFlKHtsb2cxcF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImxvZzFwXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmxvZzFwKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGl2KGUuYWRkKDEpKX19fSl9fSksa289QWUoe2xvZ1NpZ21vaWRfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJsb2dTaWdtb2lkXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNvZnRwbHVzKGUubmVnKCkpLm5lZygpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQubXVsU3RyaWN0KGUubmVnKCkuc2lnbW9pZCgpKX19fSl9fSksQW89QWUoe25lZ186ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcIm5lZ1wiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5uZWcoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5uZWcoKX19fSl9fSksQ289QWUoe3JlY2lwcm9jYWxfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJyZWNpcHJvY2FsXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlY2lwcm9jYWwoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5kaXZTdHJpY3QoZS5zcXVhcmUoKS5uZWcoKSl9fX0pfX0pLFBvPUFlKHtyb3VuZF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInJvdW5kXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJvdW5kKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIFhlKHQpfX19KX19KSxUbz1BZSh7cnNxcnRfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJyc3FydFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5yc3FydChlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LmRpdihlLnBvdygxLjUpLm11bCgyKSkubmVnKCl9fX0pfX0pLFJvPUFlKHtzaWdtb2lkXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwic2lnbW9pZFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0LG4pe3JldHVybiBuKHQuc2lnbW9pZChlKSl9LHskeDplfSxmdW5jdGlvbih0LGUpe3ZhciBuPWVbMF07cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQubXVsKG4ubXVsKGplKDEpLnN1YihuKSkpfX19KX19KSxEbz1BZSh7c2lnbl86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInNpZ25cIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2lnbihlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBYZSh0KX19fSl9fSksTW89QWUoe3Npbl86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInNpblwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaW4oZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gZS50b0Zsb2F0KCkuY29zKCkubXVsU3RyaWN0KHQpfX19KX19KSxqbz1BZSh7c2luaF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInNpbmhcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2luaChlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBlLnRvRmxvYXQoKS5jb3NoKCkubXVsU3RyaWN0KHQpfX19KX19KSxCbz1BZSh7c29mdHBsdXNfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJzb2Z0cGx1c1wiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zb2Z0cGx1cyhlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0Lm11bFN0cmljdChlLnNpZ21vaWQoKSl9fX0pfX0pLExvPUFlKHtzcXJ0XzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwic3FydFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zcXJ0KGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGl2KGUudG9GbG9hdCgpLnNxcnQoKS5tdWwoMikpfX19KX19KSx6bz1BZSh7c3F1YXJlXzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwic3F1YXJlXCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNxdWFyZShlKX0seyR4OmV9LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0Lm11bChlLnRvRmxvYXQoKS5tdWwoMikpfX19KX19KSxGbz1BZSh7c3RlcF86ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0wKTt2YXIgbj1PZSh0LFwieFwiLFwic3RlcFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zdGVwKG4sZSl9LHskeDpufSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gWGUodCl9fX0pfX0pLFVvPUFlKHt0YW5fOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJ0YW5cIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQudGFuKGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQuZGl2U3RyaWN0KGUuY29zKCkuc3F1YXJlKCkpfX19KX19KSxWbz1BZSh7dGFuaF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInRhbmhcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCxuKXtyZXR1cm4gbih0LnRhbmgoZSkpfSx7JHg6ZX0sZnVuY3Rpb24odCxlKXt2YXIgbj1lWzBdO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBqZSgxKS5zdWIobi5zcXVhcmUoKSkubXVsU3RyaWN0KHQpfX19KX19KTtmdW5jdGlvbiBXbyh0KXtyZXR1cm4gbnVsbD09dD9udWxsOjA9PT10LnJhbms/dC5hczFEKCk6MT09PXQucmFuaz90OjI9PT10LnJhbms/dC5hczREKDEsMSx0LnNoYXBlWzBdLHQuc2hhcGVbMV0pOjM9PT10LnJhbms/dC5hczREKDEsdC5zaGFwZVswXSx0LnNoYXBlWzFdLHQuc2hhcGVbMl0pOnR9dmFyIHFvPUFlKHtiYXRjaE5vcm1hbGl6YXRpb24yZF86ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZvaWQgMD09PXImJihyPS4wMDEpO3ZhciBvLHMsdT1PZSh0LFwieFwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpLGM9T2UoZSxcIm1lYW5cIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSxsPU9lKG4sXCJ2YXJpYW5jZVwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpO3JldHVybiBudWxsIT1pJiYobz1PZShpLFwic2NhbGVcIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSksbnVsbCE9YSYmKHM9T2UoYSxcIm9mZnNldFwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpKSxiKDI9PT11LnJhbmssXCJFcnJvciBpbiBiYXRjaE5vcm1hbGl6YXRpb24zRDogeCBtdXN0IGJlIHJhbmsgMyBidXQgZ290IHJhbmsgXCIrdS5yYW5rK1wiLlwiKSxiKDI9PT1jLnJhbmt8fDE9PT1jLnJhbmssXCJFcnJvciBpbiBiYXRjaE5vcm1hbGl6YXRpb24yRDogbWVhbiBtdXN0IGJlIHJhbmsgMiBvciByYW5rIDEgYnV0IGdvdCByYW5rIFwiK2MucmFuaytcIi5cIiksYigyPT09bC5yYW5rfHwxPT09bC5yYW5rLFwiRXJyb3IgaW4gYmF0Y2hOb3JtYWxpemF0aW9uMkQ6IHZhcmlhbmNlIG11c3QgYmUgcmFuayAyIG9yIHJhbmsgMSBidXQgZ290IHJhbmsgXCIrbC5yYW5rK1wiLlwiKSxudWxsIT1vJiZiKDI9PT1vLnJhbmt8fDE9PT1vLnJhbmssXCJFcnJvciBpbiBiYXRjaE5vcm1hbGl6YXRpb24yRDogc2NhbGUgbXVzdCBiZSByYW5rIDIgb3IgcmFuayAxIGJ1dCBnb3QgcmFuayBcIitvLnJhbmsrXCIuXCIpLG51bGwhPXMmJmIoMj09PXMucmFua3x8MT09PXMucmFuayxcIkVycm9yIGluIGJhdGNoTm9ybWFsaXphdGlvbjJEOiBvZmZzZXQgbXVzdCBiZSByYW5rIDIgb3IgcmFuayAxIGJ1dCBnb3QgcmFuayBcIitzLnJhbmsrXCIuXCIpLEtvKHUsYyxsLHIsbyxzKX19KSwkbz1BZSh7YmF0Y2hOb3JtYWxpemF0aW9uM2RfOmZ1bmN0aW9uKHQsZSxuLHIsaSxhKXt2b2lkIDA9PT1yJiYocj0uMDAxKTt2YXIgbyxzLHU9T2UodCxcInhcIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSxjPU9lKGUsXCJtZWFuXCIsXCJiYXRjaE5vcm1hbGl6YXRpb25cIiksbD1PZShuLFwidmFyaWFuY2VcIixcImJhdGNoTm9ybWFsaXphdGlvblwiKTtyZXR1cm4gbnVsbCE9aSYmKG89T2UoaSxcInNjYWxlXCIsXCJiYXRjaE5vcm1hbGl6YXRpb25cIikpLG51bGwhPWEmJihzPU9lKGEsXCJvZmZzZXRcIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSksYigzPT09dS5yYW5rLFwiRXJyb3IgaW4gYmF0Y2hOb3JtYWxpemF0aW9uM0Q6IHggbXVzdCBiZSByYW5rIDMgYnV0IGdvdCByYW5rIFwiK3UucmFuaytcIi5cIiksYigzPT09Yy5yYW5rfHwxPT09Yy5yYW5rLFwiRXJyb3IgaW4gYmF0Y2hOb3JtYWxpemF0aW9uM0Q6IG1lYW4gbXVzdCBiZSByYW5rIDMgb3IgcmFuayAxIGJ1dCBnb3QgcmFuayBcIitjLnJhbmsrXCIuXCIpLGIoMz09PWwucmFua3x8MT09PWwucmFuayxcIkVycm9yIGluIGJhdGNoTm9ybWFsaXphdGlvbjNEOiB2YXJpYW5jZSBtdXN0IGJlIHJhbmsgMyBvciByYW5rIDEgYnV0IGdvdCByYW5rIFwiK2wucmFuaytcIi5cIiksbnVsbCE9byYmYigzPT09by5yYW5rfHwxPT09by5yYW5rLFwiRXJyb3IgaW4gYmF0Y2hOb3JtYWxpemF0aW9uM0Q6IHNjYWxlIG11c3QgYmUgcmFuayAzIG9yIHJhbmsgMSBidXQgZ290IHJhbmsgXCIrby5yYW5rK1wiLlwiKSxudWxsIT1zJiZiKDM9PT1zLnJhbmt8fDE9PT1zLnJhbmssXCJFcnJvciBpbiBiYXRjaE5vcm1hbGl6YXRpb24zRDogb2Zmc2V0IG11c3QgYmUgcmFuayAzIG9yIHJhbmsgMSBidXQgZ290IHJhbmsgXCIrcy5yYW5rK1wiLlwiKSxLbyh1LGMsbCxyLG8scyl9fSksSG89QWUoe2JhdGNoTm9ybWFsaXphdGlvbjRkXzpmdW5jdGlvbih0LGUsbixyLGksYSl7dm9pZCAwPT09ciYmKHI9LjAwMSk7dmFyIG8scyx1PU9lKHQsXCJ4XCIsXCJiYXRjaE5vcm1hbGl6YXRpb25cIiksYz1PZShlLFwibWVhblwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpLGw9T2UobixcInZhcmlhbmNlXCIsXCJiYXRjaE5vcm1hbGl6YXRpb25cIik7cmV0dXJuIG51bGwhPWkmJihvPU9lKGksXCJzY2FsZVwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpKSxudWxsIT1hJiYocz1PZShhLFwib2Zmc2V0XCIsXCJiYXRjaE5vcm1hbGl6YXRpb25cIikpLGIoND09PXUucmFuayxcIkVycm9yIGluIGJhdGNoTm9ybWFsaXphdGlvbjREOiB4IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayBcIit1LnJhbmsrXCIuXCIpLGIoND09PWMucmFua3x8MT09PWMucmFuayxcIkVycm9yIGluIGJhdGNoTm9ybWFsaXphdGlvbjREOiBtZWFuIG11c3QgYmUgcmFuayA0IG9yIHJhbmsgMSBidXQgZ290IHJhbmsgXCIrYy5yYW5rK1wiLlwiKSxiKDQ9PT1sLnJhbmt8fDE9PT1sLnJhbmssXCJFcnJvciBpbiBiYXRjaE5vcm1hbGl6YXRpb240RDogdmFyaWFuY2UgbXVzdCBiZSByYW5rIDQgb3IgcmFuayAxIGJ1dCBnb3QgcmFuayBcIitsLnJhbmsrXCIuXCIpLG51bGwhPW8mJmIoND09PW8ucmFua3x8MT09PW8ucmFuayxcIkVycm9yIGluIGJhdGNoTm9ybWFsaXphdGlvbjREOiBzY2FsZSBtdXN0IGJlIHJhbmsgNCBvciByYW5rIDEgYnV0IGdvdCByYW5rIFwiK28ucmFuaytcIi5cIiksbnVsbCE9cyYmYig0PT09cy5yYW5rfHwxPT09cy5yYW5rLFwiRXJyb3IgaW4gYmF0Y2hOb3JtYWxpemF0aW9uNEQ6IG9mZnNldCBtdXN0IGJlIHJhbmsgNCBvciByYW5rIDEgYnV0IGdvdCByYW5rIFwiK3MucmFuaytcIi5cIiksS28odSxjLGwscixvLHMpfX0pLEtvPUFlKHtiYXRjaE5vcm1hbGl6YXRpb25fOmZ1bmN0aW9uKHQsZSxuLHIsaSxhKXt2b2lkIDA9PT1yJiYocj0uMDAxKTt2YXIgbyxzLHUsYz1PZSh0LFwieFwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpLGw9T2UoZSxcIm1lYW5cIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSxmPU9lKG4sXCJ2YXJpYW5jZVwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpO3JldHVybiBudWxsIT1pJiYobz1PZShpLFwic2NhbGVcIixcImJhdGNoTm9ybWFsaXphdGlvblwiKSksbnVsbCE9YSYmKHM9T2UoYSxcIm9mZnNldFwiLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIpKSxiKGwucmFuaz09PWYucmFuayxcIkJhdGNoIG5vcm1hbGl6YXRpb24gZ3JhZGllbnQgcmVxdWlyZXMgbWVhbiBhbmQgdmFyaWFuY2UgdG8gaGF2ZSBlcXVhbCByYW5rcy5cIiksYihudWxsPT1zfHxsLnJhbms9PT1zLnJhbmssXCJCYXRjaCBub3JtYWxpemF0aW9uIGdyYWRpZW50IHJlcXVpcmVzIG1lYW4gYW5kIG9mZnNldCB0byBoYXZlIGVxdWFsIHJhbmtzLlwiKSxiKG51bGw9PW98fGwucmFuaz09PW8ucmFuayxcIkJhdGNoIG5vcm1hbGl6YXRpb24gZ3JhZGllbnQgcmVxdWlyZXMgbWVhbiBhbmQgc2NhbGUgdG8gaGF2ZSBlcXVhbCByYW5rcy5cIiksdT0wPT09Yy5yYW5rfHwxPT09Yy5yYW5rP2MuYXM0RCgxLDEsMSxjLnNpemUpOjI9PT1jLnJhbms/Yy5hczREKDEsMSxjLnNoYXBlWzBdLGMuc2hhcGVbMV0pOjM9PT1jLnJhbms/Yy5hczREKDEsYy5zaGFwZVswXSxjLnNoYXBlWzFdLGMuc2hhcGVbMl0pOmMsTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5iYXRjaE5vcm1hbGl6YXRpb24odSxXbyhsKSxXbyhmKSxyLFdvKG8pLFdvKHMpKX0seyR4OmMsJG1lYW46bCwkdmFyaWFuY2U6Ziwkc2NhbGU6bywkb2Zmc2V0OnN9LGZ1bmN0aW9uKHQpe3ZhciBlPW51bGw9PW8/amUoMSk6byxuPWhlKGwuc2hhcGUsdS5zaGFwZSksaT1bXTtpZigxPT09bC5yYW5rKXtmb3IodmFyIGE9MDthPHUuc2hhcGUubGVuZ3RoLTE7KythKWkucHVzaCh1LnNoYXBlW2FdKTtpLnB1c2goMSl9dmFyIHM9Yy5zdWIobCksaD10Lm11bChlKSxwPVRvKGYuYWRkKGplKHIpKSksZD1wLm11bChwKS5tdWwocCkubXVsKGplKC0uNSkpO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiAxPT09bC5yYW5rP3QubXVsKHJvKHAuYXM0RCgxLDEsMSxsLnNoYXBlWzBdKSxpKSkubXVsKGUpLnJlc2hhcGUoYy5zaGFwZSk6dC5tdWwocCkubXVsKGUpLnJlc2hhcGUoYy5zaGFwZSl9LCRtZWFuOmZ1bmN0aW9uKCl7dmFyIHQ9cC5tdWwoamUoLTEpKS5tdWwoaCk7cmV0dXJuIDE9PT1sLnJhbmsmJih0PXQuc3VtKG4pKSx0LnJlc2hhcGUobC5zaGFwZSl9LCR2YXJpYW5jZTpmdW5jdGlvbigpe3ZhciB0PWQubXVsKHMpLm11bChoKTtyZXR1cm4gMT09PWwucmFuayYmKHQ9dC5zdW0obikpLHQucmVzaGFwZShsLnNoYXBlKX0sJHNjYWxlOmZ1bmN0aW9uKCl7dmFyIGU9cy5tdWwocCkscj10Lm11bChlKTtyZXR1cm4gMT09PWwucmFuayYmKHI9ci5zdW0obikpLHIucmVzaGFwZShsLnNoYXBlKX0sJG9mZnNldDpmdW5jdGlvbigpe3ZhciBlPXQ7cmV0dXJuIDE9PT1sLnJhbmsmJihlPWUuc3VtKG4pKSxlLnJlc2hhcGUobC5zaGFwZSl9fX0pLnJlc2hhcGUoYy5zaGFwZSl9fSk7ZnVuY3Rpb24gR28odCxlLG4scixpLGEsbyl7dm9pZCAwPT09byYmKG89XCJjaGFubmVsc0xhc3RcIik7dmFyIHMsdT1KbyhlKSxjPXVbMF0sbD11WzFdO2lmKFwiY2hhbm5lbHNMYXN0XCI9PT1vKXM9W2MsbCx0WzNdLHRbM11dO2Vsc2V7aWYoXCJjaGFubmVsc0ZpcnN0XCIhPT1vKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YUZvcm1hdCBcIitvKTtzPVtjLGwsdFsxXSx0WzFdXX1yZXR1cm4gWG8odCxzLG4scixpLGEsITEsbyl9ZnVuY3Rpb24gWG8odCxlLG4scixpLGEsbyxzKXt2b2lkIDA9PT1vJiYobz0hMSksdm9pZCAwPT09cyYmKHM9XCJjaGFubmVsc0xhc3RcIik7dmFyIHU9Wy0xLC0xLC0xLC0xXSxjPXVbMF0sbD11WzFdLGY9dVsyXSxoPXVbM107aWYoXCJjaGFubmVsc0xhc3RcIj09PXMpYz10WzBdLGw9dFsxXSxmPXRbMl0saD10WzNdO2Vsc2V7aWYoXCJjaGFubmVsc0ZpcnN0XCIhPT1zKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YUZvcm1hdCBcIitzKTtjPXRbMF0saD10WzFdLGw9dFsyXSxmPXRbM119dmFyIHAsZD1lWzBdLG09ZVsxXSxnPWVbM10seT1KbyhuKSx2PXlbMF0sdz15WzFdLF89Sm8ocikseD1fWzBdLEU9X1sxXSxTPVFvKGQseCksST1RbyhtLEUpLE89ZnVuY3Rpb24odCxlLG4scixpLGEsbyxzKXt2YXIgdSxjLGw7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpe3U9e3RvcDp0LGJvdHRvbTp0LGxlZnQ6dCxyaWdodDp0LHR5cGU6MD09PXQ/XCJWQUxJRFwiOlwiTlVNQkVSXCJ9O3ZhciBmPWZ1bmN0aW9uKHQsZSxuLHIsaSxhKXtudWxsPT1pJiYoaT1mdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1yJiYocj0xKTt2YXIgaT1RbyhlLHIpO3JldHVybiBNYXRoLmZsb29yKCh0WzBdKihuLTEpLW4raSkvMil9KHQsZSxyKSk7dmFyIG89dFswXSxzPXRbMV0sdT10cygoby1lKzIqaSkvcisxLGEpO2IoTih1KSxcIlRoZSBvdXRwdXQgIyBvZiByb3dzIChcIit1K1wiKSBtdXN0IGJlIGFuIGludGVnZXIuIENoYW5nZSB0aGUgc3RyaWRlIGFuZC9vciB6ZXJvIHBhZCBwYXJhbWV0ZXJzXCIpO3ZhciBjPXRzKChzLWUrMippKS9yKzEsYSk7cmV0dXJuIGIoTihjKSxcIlRoZSBvdXRwdXQgIyBvZiBjb2x1bW5zIChcIitjK1wiKSBtdXN0IGJlIGFuIGludGVnZXIuIENoYW5nZSB0aGUgc3RyaWRlIGFuZC9vciB6ZXJvIHBhZCBwYXJhbWV0ZXJzXCIpLFt1LGMsbl19KFtlLG4sMV0sYSwxLHIsdCxzKTtjPWZbMF0sbD1mWzFdfWVsc2UgaWYoXCJzYW1lXCI9PT10KXt2YXIgaD0oKGM9TWF0aC5jZWlsKGUvcikpLTEpKnIrYS1lLHA9KChsPU1hdGguY2VpbChuL2kpKS0xKSppK28tbixkPU1hdGguZmxvb3IoaC8yKSxtPWgtZCxnPU1hdGguZmxvb3IocC8yKTt1PXt0b3A6ZCxib3R0b206bSxsZWZ0OmcscmlnaHQ6cC1nLHR5cGU6XCJTQU1FXCJ9fWVsc2V7aWYoXCJ2YWxpZFwiIT09dCl0aHJvdyBFcnJvcihcIlVua25vd24gcGFkZGluZyBwYXJhbWV0ZXI6IFwiK3QpO3U9e3RvcDowLGJvdHRvbTowLGxlZnQ6MCxyaWdodDowLHR5cGU6XCJWQUxJRFwifSxjPU1hdGguY2VpbCgoZS1hKzEpL3IpLGw9TWF0aC5jZWlsKChuLW8rMSkvaSl9cmV0dXJue3BhZEluZm86dSxvdXRIZWlnaHQ6YyxvdXRXaWR0aDpsfX0oaSxsLGYsdix3LFMsSSxhKSxrPU8ucGFkSW5mbyxBPU8ub3V0SGVpZ2h0LEM9Ty5vdXRXaWR0aCxQPW8/ZypoOmc7cmV0dXJuXCJjaGFubmVsc0ZpcnN0XCI9PT1zP3A9W2MsUCxBLENdOlwiY2hhbm5lbHNMYXN0XCI9PT1zJiYocD1bYyxBLEMsUF0pLHtiYXRjaFNpemU6YyxkYXRhRm9ybWF0OnMsaW5IZWlnaHQ6bCxpbldpZHRoOmYsaW5DaGFubmVsczpoLG91dEhlaWdodDpBLG91dFdpZHRoOkMsb3V0Q2hhbm5lbHM6UCxwYWRJbmZvOmssc3RyaWRlSGVpZ2h0OnYsc3RyaWRlV2lkdGg6dyxmaWx0ZXJIZWlnaHQ6ZCxmaWx0ZXJXaWR0aDptLGVmZmVjdGl2ZUZpbHRlckhlaWdodDpTLGVmZmVjdGl2ZUZpbHRlcldpZHRoOkksZGlsYXRpb25IZWlnaHQ6eCxkaWxhdGlvbldpZHRoOkUsaW5TaGFwZTp0LG91dFNoYXBlOnAsZmlsdGVyU2hhcGU6ZX19ZnVuY3Rpb24gWW8odCxlLG4scixpLGEsbyl7dm9pZCAwPT09YSYmKGE9ITEpLHZvaWQgMD09PW8mJihvPVwiY2hhbm5lbHNMYXN0XCIpO3ZhciBzPVstMSwtMSwtMSwtMSwtMV0sdT1zWzBdLGM9c1sxXSxsPXNbMl0sZj1zWzNdLGg9c1s0XTtpZihcImNoYW5uZWxzTGFzdFwiPT09byl1PXRbMF0sYz10WzFdLGw9dFsyXSxmPXRbM10saD10WzRdO2Vsc2V7aWYoXCJjaGFubmVsc0ZpcnN0XCIhPT1vKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YUZvcm1hdCBcIitvKTt1PXRbMF0saD10WzFdLGM9dFsyXSxsPXRbM10sZj10WzRdfXZhciBwLGQ9ZVswXSxtPWVbMV0sZz1lWzJdLHk9ZVs0XSx2PVpvKG4pLGI9dlswXSx3PXZbMV0sXz12WzJdLHg9Wm8ociksRT14WzBdLFM9eFsxXSxOPXhbMl0sST1mdW5jdGlvbih0LGUsbixyLGksYSxvLHMsdSxjKXt2YXIgbCxmLGgscDtpZihcInNhbWVcIj09PXQpe3ZhciBkPSgoZj1NYXRoLmNlaWwoZS9pKSktMSkqaStzLWUsbT0oKGg9TWF0aC5jZWlsKG4vYSkpLTEpKmErdS1uLGc9KChwPU1hdGguY2VpbChyL28pKS0xKSpvK2Mtcix5PU1hdGguZmxvb3IoZC8yKSx2PWQteSxiPU1hdGguZmxvb3IobS8yKSx3PW0tYixfPU1hdGguZmxvb3IoZy8yKTtsPXt0b3A6Yixib3R0b206dyxsZWZ0Ol8scmlnaHQ6Zy1fLGZyb250OnksYmFjazp2LHR5cGU6XCJTQU1FXCJ9fWVsc2V7aWYoXCJ2YWxpZFwiIT09dCl0aHJvdyBFcnJvcihcIlVua25vd24gcGFkZGluZyBwYXJhbWV0ZXI6IFwiK3QpO2w9e3RvcDowLGJvdHRvbTowLGxlZnQ6MCxyaWdodDowLGZyb250OjAsYmFjazowLHR5cGU6XCJWQUxJRFwifSxmPU1hdGguY2VpbCgoZS1zKzEpL2kpLGg9TWF0aC5jZWlsKChuLXUrMSkvYSkscD1NYXRoLmNlaWwoKHItYysxKS9vKX1yZXR1cm57cGFkSW5mbzpsLG91dERlcHRoOmYsb3V0SGVpZ2h0Omgsb3V0V2lkdGg6cH19KGksYyxsLGYsYix3LF8sUW8oZCxFKSxRbyhtLFMpLFFvKGcsTikpLE89SS5wYWRJbmZvLGs9SS5vdXREZXB0aCxBPUkub3V0SGVpZ2h0LEM9SS5vdXRXaWR0aCxQPWE/eSpoOnk7cmV0dXJuXCJjaGFubmVsc0ZpcnN0XCI9PT1vP3A9W3UsUCxrLEEsQ106XCJjaGFubmVsc0xhc3RcIj09PW8mJihwPVt1LGssQSxDLFBdKSx7YmF0Y2hTaXplOnUsZGF0YUZvcm1hdDpvLGluRGVwdGg6YyxpbkhlaWdodDpsLGluV2lkdGg6ZixpbkNoYW5uZWxzOmgsb3V0RGVwdGg6ayxvdXRIZWlnaHQ6QSxvdXRXaWR0aDpDLG91dENoYW5uZWxzOlAscGFkSW5mbzpPLHN0cmlkZURlcHRoOmIsc3RyaWRlSGVpZ2h0Oncsc3RyaWRlV2lkdGg6XyxmaWx0ZXJEZXB0aDpkLGZpbHRlckhlaWdodDptLGZpbHRlcldpZHRoOmcsZGlsYXRpb25EZXB0aDpFLGRpbGF0aW9uSGVpZ2h0OlMsZGlsYXRpb25XaWR0aDpOLGluU2hhcGU6dCxvdXRTaGFwZTpwLGZpbHRlclNoYXBlOmV9fWZ1bmN0aW9uIEpvKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0P1t0LHRdOnR9ZnVuY3Rpb24gWm8odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/W3QsdCx0XTp0fWZ1bmN0aW9uIFFvKHQsZSl7cmV0dXJuIGU8PTE/dDp0Kyh0LTEpKihlLTEpfWZ1bmN0aW9uIHRzKHQsZSl7aWYoIWUpcmV0dXJuIHQ7c3dpdGNoKGUpe2Nhc2VcInJvdW5kXCI6cmV0dXJuIE1hdGgucm91bmQodCk7Y2FzZVwiY2VpbFwiOnJldHVybiBNYXRoLmNlaWwodCk7Y2FzZVwiZmxvb3JcIjpyZXR1cm4gTWF0aC5mbG9vcih0KTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVua25vd24gcm91bmRpbmdNb2RlIFwiK2UpfX1mdW5jdGlvbiBlcyh0KXt2YXIgZT1Kbyh0KSxuPWVbMF0scj1lWzFdO3JldHVybiAxPT09biYmMT09PXJ9ZnVuY3Rpb24gbnModCxlKXtyZXR1cm4gZXModCl8fGVzKGUpfXZhciBycz1BZSh7bWF0TXVsXzpmdW5jdGlvbih0LGUsbixyKXt2YXIgaTt2b2lkIDA9PT1uJiYobj0hMSksdm9pZCAwPT09ciYmKHI9ITEpO3ZhciBhPU9lKHQsXCJhXCIsXCJtYXRNdWxcIiksbz1PZShlLFwiYlwiLFwibWF0TXVsXCIpO2E9KGk9RXQoYSxvKSlbMF0sbz1pWzFdO3ZhciBzPW4/YS5zaGFwZVthLnJhbmstMl06YS5zaGFwZVthLnJhbmstMV0sdT1yP28uc2hhcGVbby5yYW5rLTFdOm8uc2hhcGVbby5yYW5rLTJdLGM9bj9hLnNoYXBlW2EucmFuay0xXTphLnNoYXBlW2EucmFuay0yXSxsPXI/by5zaGFwZVtvLnJhbmstMl06by5zaGFwZVtvLnJhbmstMV0sZj1hLnNoYXBlLnNsaWNlKDAsLTIpLGg9by5zaGFwZS5zbGljZSgwLC0yKSxwPUUoZiksZD1FKGgpO2IoYS5yYW5rPj0yJiZvLnJhbms+PTImJmEucmFuaz09PW8ucmFuayxcIkVycm9yIGluIG1hdE11bDogaW5wdXRzIG11c3QgaGF2ZSB0aGUgc2FtZSByYW5rIG9mIGF0IGxlYXN0IDIsIGdvdCByYW5rcyBcIithLnJhbmsrXCIgYW5kIFwiK28ucmFuaytcIi5cIiksYihTKGYsaCksXCJFcnJvciBpbiBtYXRNdWw6IG91dGVyIGRpbWVuc2lvbnMgKFwiK2YrXCIpIGFuZCAoXCIraCtcIikgb2YgVGVuc29ycyB3aXRoIHNoYXBlcyBcIithLnNoYXBlK1wiIGFuZCBcIitvLnNoYXBlK1wiIG11c3QgbWF0Y2guXCIpLGIocz09PXUsXCJFcnJvciBpbiBtYXRNdWw6IGlubmVyIHNoYXBlcyAoXCIrcytcIikgYW5kIChcIit1K1wiKSBvZiBUZW5zb3JzIHdpdGggc2hhcGVzIFwiK2Euc2hhcGUrXCIgYW5kIFwiK28uc2hhcGUrXCIgYW5kIHRyYW5zcG9zZUE9XCIrbitcIiBhbmQgdHJhbnNwb3NlQj1cIityK1wiIG11c3QgbWF0Y2guXCIpO3ZhciBtPWEuc2hhcGUuc2xpY2UoMCwtMikuY29uY2F0KFtjLGxdKSxnPW4/YS5hczNEKHAscyxjKTphLmFzM0QocCxjLHMpLHk9cj9vLmFzM0QoZCxsLHUpOm8uYXMzRChkLHUsbCk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYmF0Y2hNYXRNdWwoZyx5LG4scil9LHskYTpnLCRiOnl9LGZ1bmN0aW9uKHQpe3JldHVybiBufHxyPyFuJiZyP3skYTpmdW5jdGlvbigpe3JldHVybiB0Lm1hdE11bCh5LCExLCExKX0sJGI6ZnVuY3Rpb24oKXtyZXR1cm4gdC5tYXRNdWwoZywhMCwhMSl9fTpuJiYhcj97JGE6ZnVuY3Rpb24oKXtyZXR1cm4geS5tYXRNdWwodCwhMSwhMCl9LCRiOmZ1bmN0aW9uKCl7cmV0dXJuIGcubWF0TXVsKHQsITEsITEpfX06eyRhOmZ1bmN0aW9uKCl7cmV0dXJuIHkubWF0TXVsKHQsITAsITApfSwkYjpmdW5jdGlvbigpe3JldHVybiB0Lm1hdE11bChnLCEwLCEwKX19OnskYTpmdW5jdGlvbigpe3JldHVybiB0Lm1hdE11bCh5LCExLCEwKX0sJGI6ZnVuY3Rpb24oKXtyZXR1cm4gZy5tYXRNdWwodCwhMCwhMSl9fX0pLnJlc2hhcGUobSl9fSksaXM9QWUoe2RvdF86ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwidDFcIixcImRvdFwiKSxyPU9lKGUsXCJ0MlwiLFwiZG90XCIpO2IoISgxIT09bi5yYW5rJiYyIT09bi5yYW5rfHwxIT09ci5yYW5rJiYyIT09ci5yYW5rKSxcIkVycm9yIGluIGRvdDogaW5wdXRzIG11c3QgYWxsIGJlIHJhbmsgMSBvciAyLCBidXQgZ290IHJhbmtzIFwiK24ucmFuaytcIiBhbmQgXCIrci5yYW5rK1wiLlwiKTt2YXIgaT0xPT09bi5yYW5rP24uc2l6ZTpuLnNoYXBlWzFdLGE9MT09PXIucmFuaz9yLnNpemU6ci5zaGFwZVswXTtyZXR1cm4gYihpPT09YSxcIkVycm9yIGluIGRvdDogaW5uZXIgZGltZW5zaW9ucyBvZiBpbnB1dHMgbXVzdCBtYXRjaCwgYnV0IGdvdCBcIitpK1wiIGFuZCBcIithK1wiLlwiKSwxPT09bi5yYW5rJiYxPT09ci5yYW5rP24uYXMyRCgxLC0xKS5tYXRNdWwoci5hczJEKC0xLDEpKS5hc1NjYWxhcigpOjE9PT1uLnJhbmsmJjI9PT1yLnJhbms/bi5hczJEKDEsLTEpLm1hdE11bChyLmFzMkQoci5zaGFwZVswXSxyLnNoYXBlWzFdKSkuYXMxRCgpOjI9PT1uLnJhbmsmJjE9PT1yLnJhbms/bi5tYXRNdWwoci5hczJEKC0xLDEpKS5hczFEKCk6bi5tYXRNdWwoci5hczJEKHIuc2hhcGVbMF0sci5zaGFwZVsxXSkpfX0pLGFzPUFlKHtvdXRlclByb2R1Y3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInYxXCIsXCJvdXRlclByb2R1Y3RcIikscj1PZShlLFwidjJcIixcIm91dGVyUHJvZHVjdFwiKTtyZXR1cm4gYigxPT09bi5yYW5rJiYxPT09ci5yYW5rLFwiRXJyb3IgaW4gb3V0ZXJQcm9kdWN0OiBpbnB1dHMgbXVzdCBiZSByYW5rIDEsIGJ1dCBnb3QgcmFua3MgXCIrbi5yYW5rK1wiIGFuZCBcIityLnJhbmsrXCIuXCIpLG4uYXMyRCgtMSwxKS5tYXRNdWwoci5hczJEKDEsLTEpKX19KTtmdW5jdGlvbiBvcyh0LGUsbixyLGksYSl7Yih0Lmxlbmd0aD09PWUucmFuayxcIkxlbmd0aCBvZiBpblNoYXBlIChcIit0Lmxlbmd0aCtcIikgYW5kIHJhbmsgb2YgZHkgKFwiK2UucmFuaytcIikgbXVzdCBtYXRjaFwiKTt2YXIgbz10LHM9ZSx1PSExOzM9PT1lLnJhbmsmJih1PSEwLHM9ZS5hczREKDEsZS5zaGFwZVswXSxlLnNoYXBlWzFdLGUuc2hhcGVbMl0pLG89WzEsdFswXSx0WzFdLHRbMl1dKTt2YXIgYz1vWzNdLGw9cy5zaGFwZVszXTtiKDQ9PT1vLmxlbmd0aCxcIkVycm9yIGluIGNvbnYyZERlcklucHV0OiBpblNoYXBlIG11c3QgYmUgbGVuZ3RoIDQsIGJ1dCBnb3QgbGVuZ3RoIFwiK28ubGVuZ3RoK1wiLlwiKSxiKDQ9PT1zLnJhbmssXCJFcnJvciBpbiBjb252MmREZXJJbnB1dDogZHkgbXVzdCBiZSByYW5rIDQsIGJ1dCBnb3QgcmFuayBcIitzLnJhbmspLGIoND09PW4ucmFuayxcIkVycm9yIGluIGNvbnYyZERlcklucHV0OiBmaWx0ZXIgbXVzdCBiZSByYW5rIDQsIGJ1dCBnb3QgcmFuayBcIituLnJhbmspLGIoYz09PW4uc2hhcGVbMl0sXCJFcnJvciBpbiBjb252MmREZXJJbnB1dDogZGVwdGggb2YgaW5wdXQgKFwiK2MrXCIpIG11c3QgbWF0Y2ggaW5wdXQgZGVwdGggZm9yIGZpbHRlciBcIituLnNoYXBlWzJdK1wiLlwiKSxiKGw9PT1uLnNoYXBlWzNdLFwiRXJyb3IgaW4gY29udjJkRGVySW5wdXQ6IGRlcHRoIG9mIG91dHB1dCAoXCIrbCtcIikgbXVzdCBtYXRjaCBvdXRwdXQgZGVwdGggZm9yIGZpbHRlciBcIituLnNoYXBlWzNdK1wiLlwiKSxudWxsIT1hJiZiKE4oaSksXCJFcnJvciBpbiBjb252MmREZXJJbnB1dDogcGFkIG11c3QgYmUgYW4gaW50ZWdlciB3aGVuIHVzaW5nLCBkaW1Sb3VuZGluZ01vZGUgXCIrYStcIiBidXQgZ290IHBhZCBcIitpK1wiLlwiKTt2YXIgZj1YbyhvLG4uc2hhcGUsciwxLGksYSksaD1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbnYyZERlcklucHV0KHMsbixmKX0se2R5NEQ6cyxmaWx0ZXI6bn0sZnVuY3Rpb24odCl7cmV0dXJue2R5NEQ6ZnVuY3Rpb24oKXtyZXR1cm4gbHModCxuLHIsaSxcIk5IV0NcIiwxLGEpfSxmaWx0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gaHModCxzLG4uc2hhcGUscixpLGEpfX19KTtyZXR1cm4gdT9oLmFzM0QoaC5zaGFwZVsxXSxoLnNoYXBlWzJdLGguc2hhcGVbM10pOmh9ZnVuY3Rpb24gc3ModCxlLG4scixpLGEpe3ZhciBvPXQ7Mz09PXQucmFuayYmKG89dC5hczREKDEsdC5zaGFwZVswXSx0LnNoYXBlWzFdLHQuc2hhcGVbMl0pKTt2YXIgcz1lOzM9PT1zLnJhbmsmJihzPWUuYXM0RCgxLGUuc2hhcGVbMF0sZS5zaGFwZVsxXSxlLnNoYXBlWzJdKSksYig0PT09by5yYW5rLFwiRXJyb3IgaW4gY29udjJkRGVyRmlsdGVyOiBpbnB1dCBtdXN0IGJlIHJhbmsgNCwgYnV0IGdvdCBzaGFwZSBcIitvLnNoYXBlK1wiLlwiKSxiKDQ9PT1zLnJhbmssXCJFcnJvciBpbiBjb252MmREZXJGaWx0ZXI6IGR5IG11c3QgYmUgcmFuayA0LCBidXQgZ290IHNoYXBlIFwiK3Muc2hhcGUrXCIuXCIpLGIoND09PW4ubGVuZ3RoLFwiRXJyb3IgaW4gY29udjJkRGVyRmlsdGVyOiBmaWx0ZXJTaGFwZSBtdXN0IGJlIGxlbmd0aCA0LCBidXQgZ290IFwiK24rXCIuXCIpLGIoby5zaGFwZVszXT09PW5bMl0sXCJFcnJvciBpbiBjb252MmREZXJGaWx0ZXI6IGRlcHRoIG9mIGlucHV0IFwiK28uc2hhcGVbM10rXCIpIG11c3QgbWF0Y2ggaW5wdXQgZGVwdGggaW4gZmlsdGVyIChcIituWzJdK1wiLlwiKSxiKHMuc2hhcGVbM109PT1uWzNdLFwiRXJyb3IgaW4gY29udjJkRGVyRmlsdGVyOiBkZXB0aCBvZiBkeSAoXCIrcy5zaGFwZVszXStcIikgbXVzdCBtYXRjaCBvdXRwdXQgZGVwdGggZm9yIGZpbHRlciAoXCIrblszXStcIikuXCIpLG51bGwhPWEmJmIoTihpKSxcIkVycm9yIGluIGNvbnYyZERlckZpbHRlcjogcGFkIG11c3QgYmUgYW4gaW50ZWdlciB3aGVuIHVzaW5nLCBkaW1Sb3VuZGluZ01vZGUgXCIrYStcIiBidXQgZ290IHBhZCBcIitpK1wiLlwiKTt2YXIgdT1YbyhvLnNoYXBlLG4sciwxLGksYSk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY29udjJkRGVyRmlsdGVyKG8scyx1KX0se3g0RDpvLGR5NEQ6c30pfWZ1bmN0aW9uIHVzKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0P1t0LHQsdF06Mj09PXQubGVuZ3RoP1t0WzBdLHRbMV0sMV06dH0odCksbj1lWzBdLHI9ZVsxXSxpPWVbMl07cmV0dXJuIDE9PT1uJiYxPT09ciYmMT09PWl9dmFyIGNzPUFlKHtjb252MWRfOmZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8pe3ZvaWQgMD09PWkmJihpPVwiTldDXCIpLHZvaWQgMD09PWEmJihhPTEpO3ZhciBzPU9lKHQsXCJ4XCIsXCJjb252MWRcIiksdT1PZShlLFwiZmlsdGVyXCIsXCJjb252MWRcIiksYz1zLGw9ITE7Mj09PXMucmFuayYmKGw9ITAsYz1zLmFzM0QoMSxzLnNoYXBlWzBdLHMuc2hhcGVbMV0pKSxiKDM9PT1jLnJhbmssXCJFcnJvciBpbiBjb252MWQ6IGlucHV0IG11c3QgYmUgcmFuayAzLCBidXQgZ290IHJhbmsgXCIrYy5yYW5rK1wiLlwiKSxiKDM9PT11LnJhbmssXCJFcnJvciBpbiBjb252MWQ6IGZpbHRlciBtdXN0IGJlIHJhbmsgMywgYnV0IGdvdCByYW5rIFwiK3UucmFuaytcIi5cIiksbnVsbCE9byYmYihOKHIpLFwiRXJyb3IgaW4gY29udjFkOiBwYWQgbXVzdCBiZSBhbiBpbnRlZ2VyIHdoZW4gdXNpbmcsIGRpbVJvdW5kaW5nTW9kZSBcIitvK1wiIGJ1dCBnb3QgcGFkIFwiK3IrXCIuXCIpLGIoYy5zaGFwZVsyXT09PXUuc2hhcGVbMV0sXCJFcnJvciBpbiBjb252MWQ6IGRlcHRoIG9mIGlucHV0IChcIitjLnNoYXBlWzJdK1wiKSBtdXN0IG1hdGNoIGlucHV0IGRlcHRoIGZvciBmaWx0ZXIgXCIrdS5zaGFwZVsxXStcIi5cIiksYihucyhuLGEpLFwiRXJyb3IgaW4gY29udjFEOiBFaXRoZXIgc3RyaWRlIG9yIGRpbGF0aW9uIG11c3QgYmUgMS4gR290IHN0cmlkZSBcIituK1wiIGFuZCBkaWxhdGlvbiAnXCIrYStcIidcIiksYihcIk5XQ1wiPT09aSxcIkVycm9yIGluIGNvbnYxZDogZ290IGRhdGFGb3JtYXQgb2YgXCIraStcIiBidXQgb25seSBOV0MgaXMgY3VycmVudGx5IHN1cHBvcnRlZC5cIik7dmFyIGY9dS5hczREKDEsdS5zaGFwZVswXSx1LnNoYXBlWzFdLHUuc2hhcGVbMl0pLGg9Yy5hczREKGMuc2hhcGVbMF0sMSxjLnNoYXBlWzFdLGMuc2hhcGVbMl0pLHA9bHMoaCxmLFsxLG5dLHIsXCJOSFdDXCIsWzEsYV0sbyk7cmV0dXJuIGw/cC5hczJEKHAuc2hhcGVbMl0scC5zaGFwZVszXSk6cC5hczNEKHAuc2hhcGVbMF0scC5zaGFwZVsyXSxwLnNoYXBlWzNdKX19KSxscz1BZSh7Y29udjJkXzpmdW5jdGlvbih0LGUsbixyLGksYSxvKXt2b2lkIDA9PT1pJiYoaT1cIk5IV0NcIiksdm9pZCAwPT09YSYmKGE9WzEsMV0pO3ZhciBzPU9lKHQsXCJ4XCIsXCJjb252MmRcIiksdT1PZShlLFwiZmlsdGVyXCIsXCJjb252MmRcIiksYz1zLGw9ITE7Mz09PXMucmFuayYmKGw9ITAsYz1zLmFzNEQoMSxzLnNoYXBlWzBdLHMuc2hhcGVbMV0scy5zaGFwZVsyXSkpLGIoND09PWMucmFuayxcIkVycm9yIGluIGNvbnYyZDogaW5wdXQgbXVzdCBiZSByYW5rIDQsIGJ1dCBnb3QgcmFuayBcIitjLnJhbmsrXCIuXCIpLGIoND09PXUucmFuayxcIkVycm9yIGluIGNvbnYyZDogZmlsdGVyIG11c3QgYmUgcmFuayA0LCBidXQgZ290IHJhbmsgXCIrdS5yYW5rK1wiLlwiKSxudWxsIT1vJiZiKE4ociksXCJFcnJvciBpbiBjb252MmQ6IHBhZCBtdXN0IGJlIGFuIGludGVnZXIgd2hlbiB1c2luZywgZGltUm91bmRpbmdNb2RlIFwiK28rXCIgYnV0IGdvdCBwYWQgXCIrcitcIi5cIiksYihjLnNoYXBlWzNdPT09dS5zaGFwZVsyXSxcIkVycm9yIGluIGNvbnYyZDogZGVwdGggb2YgaW5wdXQgKFwiK2Muc2hhcGVbM10rXCIpIG11c3QgbWF0Y2ggaW5wdXQgZGVwdGggZm9yIGZpbHRlciBcIit1LnNoYXBlWzJdK1wiLlwiKSxiKG5zKG4sYSksXCJFcnJvciBpbiBjb252MkQ6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuIEdvdCBzdHJpZGVzIFwiK24rXCIgYW5kIGRpbGF0aW9ucyAnXCIrYStcIidcIiksYihcIk5IV0NcIj09PWksXCJFcnJvciBpbiBjb252MmQ6IGdvdCBkYXRhRm9ybWF0IG9mIFwiK2krXCIgYnV0IG9ubHkgTkhXQyBpcyBjdXJyZW50bHkgc3VwcG9ydGVkLlwiKTt2YXIgZixoPVhvKGMuc2hhcGUsdS5zaGFwZSxuLGEscixvKTtpZigxIT09aC5maWx0ZXJIZWlnaHR8fDEhPT1oLmZpbHRlcldpZHRofHwxIT09aC5kaWxhdGlvbkhlaWdodHx8MSE9PWguZGlsYXRpb25XaWR0aHx8MSE9PWguc3RyaWRlSGVpZ2h0fHwxIT09aC5zdHJpZGVXaWR0aHx8XCJTQU1FXCIhPT1oLnBhZEluZm8udHlwZSYmXCJWQUxJRFwiIT09aC5wYWRJbmZvLnR5cGUpZj1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbnYyZChjLHUsaCl9LHt4OmMsJGZpbHRlcjp1fSxmdW5jdGlvbih0KXtyZXR1cm4gYihlcyhhKSxcIkVycm9yIGluIGdyYWRpZW50IG9mIGNvbnYyRDogZGlsYXRpb24gcmF0ZXMgZ3JlYXRlciB0aGFuIDEgYXJlIG5vdHlldCBzdXBwb3J0ZWQgaW4gZ3JhZGllbnRzLiBHb3QgZGlsYXRpb25zICdcIithK1wiJ1wiKSx7eDpmdW5jdGlvbigpe3JldHVybiBvcyhjLnNoYXBlLHQsdSxuLHIpfSwkZmlsdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHNzKGMsdCx1LnNoYXBlLG4scil9fX0pO2Vsc2V7dmFyIHA9Yy5yZXNoYXBlKFstMSxoLmluQ2hhbm5lbHNdKSxkPXUucmVzaGFwZShbaC5pbkNoYW5uZWxzLGgub3V0Q2hhbm5lbHNdKTtmPXJzKHAsZCkucmVzaGFwZShoLm91dFNoYXBlKX1yZXR1cm4gbD9mLmFzM0QoZi5zaGFwZVsxXSxmLnNoYXBlWzJdLGYuc2hhcGVbM10pOmZ9fSksZnM9QWUoe2NvbnYzZF86ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZvaWQgMD09PWkmJihpPVwiTkhXQ1wiKSx2b2lkIDA9PT1hJiYoYT1bMSwxLDFdKTt2YXIgbz1PZSh0LFwieFwiLFwiY29udjNkXCIpLHM9T2UoZSxcImZpbHRlclwiLFwiY29udjNkXCIpLHU9byxjPSExOzQ9PT1vLnJhbmsmJihjPSEwLHU9by5hczVEKDEsby5zaGFwZVswXSxvLnNoYXBlWzFdLG8uc2hhcGVbMl0sby5zaGFwZVszXSkpLGIoNT09PXUucmFuayxcIkVycm9yIGluIGNvbnYzZDogaW5wdXQgbXVzdCBiZSByYW5rIDUsIGJ1dCBnb3QgcmFuayBcIit1LnJhbmsrXCIuXCIpLGIoNT09PXMucmFuayxcIkVycm9yIGluIGNvbnYzZDogZmlsdGVyIG11c3QgYmUgcmFuayA1LCBidXQgZ290IHJhbmsgXCIrcy5yYW5rK1wiLlwiKSxiKHUuc2hhcGVbNF09PT1zLnNoYXBlWzNdLFwiRXJyb3IgaW4gY29udjNkOiBkZXB0aCBvZiBpbnB1dCAoXCIrdS5zaGFwZVs0XStcIikgbXVzdCBtYXRjaCBpbnB1dCBkZXB0aCBmb3IgZmlsdGVyIFwiK3Muc2hhcGVbM10rXCIuXCIpLGIoZnVuY3Rpb24odCxlKXtyZXR1cm4gdXModCl8fHVzKGUpfShuLGEpLFwiRXJyb3IgaW4gY29udjNEOiBFaXRoZXIgc3RyaWRlcyBvciBkaWxhdGlvbnMgbXVzdCBiZSAxLiBHb3Qgc3RyaWRlcyBcIituK1wiIGFuZCBkaWxhdGlvbnMgJ1wiK2ErXCInXCIpLGIoXCJOSFdDXCI9PT1pLFwiRXJyb3IgaW4gY29udjNkOiBnb3QgZGF0YUZvcm1hdCBvZiBcIitpK1wiIGJ1dCBvbmx5IE5IV0MgaXMgY3VycmVudGx5IHN1cHBvcnRlZC5cIik7dmFyIGw9WW8odS5zaGFwZSxzLnNoYXBlLG4sYSxyKSxmPUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY29udjNkKHUscyxsKX0se3g6dSwkZmlsdGVyOnN9LGZ1bmN0aW9uKHQpe3JldHVybiBiKHVzKGEpLFwiRXJyb3IgaW4gZ3JhZGllbnQgb2YgY29udjNEOiBkaWxhdGlvbiByYXRlcyBncmVhdGVyIHRoYW4gMSBhcmUgbm90eWV0IHN1cHBvcnRlZCBpbiBncmFkaWVudHMuIEdvdCBkaWxhdGlvbnMgJ1wiK2ErXCInXCIpLHt4OmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsaSl7Yih0Lmxlbmd0aD09PWUucmFuayxcIkxlbmd0aCBvZiBpblNoYXBlIChcIit0Lmxlbmd0aCtcIikgYW5kIHJhbmsgb2YgZHkgKFwiK2UucmFuaytcIikgbXVzdCBtYXRjaFwiKTt2YXIgYT10LG89ZSxzPSExOzQ9PT1lLnJhbmsmJihzPSEwLG89ZS5hczVEKDEsZS5zaGFwZVswXSxlLnNoYXBlWzFdLGUuc2hhcGVbMl0sZS5zaGFwZVszXSksYT1bMSx0WzBdLHRbMV0sdFsyXSx0WzNdXSk7dmFyIHU9YVs0XSxjPW8uc2hhcGVbNF07Yig1PT09YS5sZW5ndGgsXCJFcnJvciBpbiBjb252M2REZXJJbnB1dDogaW5TaGFwZSBtdXN0IGJlIGxlbmd0aCA1LCBidXQgZ290IGxlbmd0aCBcIithLmxlbmd0aCtcIi5cIiksYig1PT09by5yYW5rLFwiRXJyb3IgaW4gY29udjNkRGVySW5wdXQ6IGR5IG11c3QgYmUgcmFuayA1LCBidXQgZ290IHJhbmsgXCIrby5yYW5rKSxiKDU9PT1uLnJhbmssXCJFcnJvciBpbiBjb252M2REZXJJbnB1dDogZmlsdGVyIG11c3QgYmUgcmFuayA1LCBidXQgZ290IHJhbmsgXCIrbi5yYW5rKSxiKHU9PT1uLnNoYXBlWzNdLFwiRXJyb3IgaW4gY29udjNkRGVySW5wdXQ6IGRlcHRoIG9mIGlucHV0IChcIit1K1wiKSBtdXN0IG1hdGNoIGlucHV0IGRlcHRoIGZvciBmaWx0ZXIgXCIrbi5zaGFwZVszXStcIi5cIiksYihjPT09bi5zaGFwZVs0XSxcIkVycm9yIGluIGNvbnYzZERlcklucHV0OiBkZXB0aCBvZiBvdXRwdXQgKFwiK2MrXCIpIG11c3QgbWF0Y2ggb3V0cHV0IGRlcHRoIGZvciBmaWx0ZXIgXCIrbi5zaGFwZVs0XStcIi5cIik7dmFyIGw9WW8oYSxuLnNoYXBlLHIsMSxpKSxmPUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuY29udjNkRGVySW5wdXQobyxuLGwpfSx7ZHk1RDpvfSk7cmV0dXJuIHM/Zi5hczREKGYuc2hhcGVbMV0sZi5zaGFwZVsyXSxmLnNoYXBlWzNdLGYuc2hhcGVbNF0pOmZ9KHUuc2hhcGUsdCxzLG4scil9LCRmaWx0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYT10OzQ9PT10LnJhbmsmJihhPXQuYXM1RCgxLHQuc2hhcGVbMF0sdC5zaGFwZVsxXSx0LnNoYXBlWzJdLHQuc2hhcGVbM10pKTt2YXIgbz1lOzQ9PT1vLnJhbmsmJihvPWUuYXM1RCgxLGUuc2hhcGVbMF0sZS5zaGFwZVsxXSxlLnNoYXBlWzJdLGUuc2hhcGVbM10pKSxiKDU9PT1hLnJhbmssXCJFcnJvciBpbiBjb252M2REZXJGaWx0ZXI6IGlucHV0IG11c3QgYmUgcmFuayA1LCBidXQgZ290IHNoYXBlIFwiK2Euc2hhcGUrXCIuXCIpLGIoNT09PW8ucmFuayxcIkVycm9yIGluIGNvbnYzZERlckZpbHRlcjogZHkgbXVzdCBiZSByYW5rIDUsIGJ1dCBnb3Qgc2hhcGUgXCIrby5zaGFwZStcIi5cIiksYig1PT09bi5sZW5ndGgsXCJFcnJvciBpbiBjb252M2REZXJGaWx0ZXI6IGZpbHRlclNoYXBlIG11c3QgYmUgbGVuZ3RoIDUsIGJ1dCBnb3QgXCIrbitcIi5cIiksYihhLnNoYXBlWzRdPT09blszXSxcIkVycm9yIGluIGNvbnYzZERlckZpbHRlcjogZGVwdGggb2YgaW5wdXQgXCIrYS5zaGFwZVs0XStcIikgbXVzdCBtYXRjaCBpbnB1dCBkZXB0aCBpbiBmaWx0ZXIgKFwiK25bM10rXCIuXCIpLGIoby5zaGFwZVs0XT09PW5bNF0sXCJFcnJvciBpbiBjb252M2REZXJGaWx0ZXI6IGRlcHRoIG9mIGR5IChcIitvLnNoYXBlWzRdK1wiKSBtdXN0IG1hdGNoIG91dHB1dCBkZXB0aCBmb3IgZmlsdGVyIChcIituWzRdK1wiKS5cIik7dmFyIHM9WW8oYS5zaGFwZSxuLHIsMSxpKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5jb252M2REZXJGaWx0ZXIoYSxvLHMpfSx7eDVEOmEsZHk1RDpvfSl9KHUsdCxzLnNoYXBlLG4scil9fX0pO3JldHVybiBjP2YuYXM0RChmLnNoYXBlWzFdLGYuc2hhcGVbMl0sZi5zaGFwZVszXSxmLnNoYXBlWzRdKTpmfX0pLGhzPUFlKHtjb252MmREZXJGaWx0ZXJfOnNzfSkscHM9QWUoe2RlcHRod2lzZUNvbnYyZF86ZnVuY3Rpb24odCxlLG4scixpLGEsbyl7dm9pZCAwPT09aSYmKGk9XCJOSFdDXCIpLHZvaWQgMD09PWEmJihhPVsxLDFdKTt2YXIgcz1PZSh0LFwieFwiLFwiZGVwdGh3aXNlQ29udjJkXCIpLHU9T2UoZSxcImZpbHRlclwiLFwiZGVwdGh3aXNlQ29udjJkXCIpLGM9cyxsPSExOzM9PT1zLnJhbmsmJihsPSEwLGM9cy5hczREKDEscy5zaGFwZVswXSxzLnNoYXBlWzFdLHMuc2hhcGVbMl0pKSxiKDQ9PT1jLnJhbmssXCJFcnJvciBpbiBkZXB0aHdpc2VDb252MmQ6IGlucHV0IG11c3QgYmUgcmFuayA0LCBidXQgZ290IHJhbmsgXCIrYy5yYW5rK1wiLlwiKSxiKDQ9PT11LnJhbmssXCJFcnJvciBpbiBkZXB0aHdpc2VDb252MmQ6IGZpbHRlciBtdXN0IGJlIHJhbmsgNCwgYnV0IGdvdCByYW5rIFwiK3UucmFuaytcIi5cIiksYihjLnNoYXBlWzNdPT09dS5zaGFwZVsyXSxcIkVycm9yIGluIGRlcHRod2lzZUNvbnYyZDogbnVtYmVyIG9mIGlucHV0IGNoYW5uZWxzIChcIitjLnNoYXBlWzNdK1wiKSBtdXN0IG1hdGNoIHRoZSBpbkNoYW5uZWxzIGRpbWVuc2lvbiBpbiBmaWx0ZXIgXCIrdS5zaGFwZVsyXStcIi5cIiksbnVsbD09YSYmKGE9WzEsMV0pLGIobnMobixhKSxcIkVycm9yIGluIGRlcHRod2lzZUNvbnYyZDogRWl0aGVyIHN0cmlkZXMgb3IgZGlsYXRpb25zIG11c3QgYmUgMS4gR290IHN0cmlkZXMgXCIrbitcIiBhbmQgZGlsYXRpb25zICdcIithK1wiJ1wiKSxudWxsIT1vJiZiKE4ociksXCJFcnJvciBpbiBkZXB0aHdpc2VDb252MmQ6IHBhZCBtdXN0IGJlIGFuIGludGVnZXIgd2hlbiB1c2luZywgZGltUm91bmRpbmdNb2RlIFwiK28rXCIgYnV0IGdvdCBwYWQgXCIrcitcIi5cIik7dmFyIGY9WG8oYy5zaGFwZSx1LnNoYXBlLG4sYSxyLG8sITApLGg9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5kZXB0aHdpc2VDb252MkQoYyx1LGYpfSx7eDpjLCRmaWx0ZXI6dX0sZnVuY3Rpb24odCl7cmV0dXJuIGIoZXMoYSksXCJFcnJvciBpbiBncmFkaWVudCBvZiBkZXB0aHdpc2VDb252MmQ6IGRpbGF0aW9uIHJhdGVzIGdyZWF0ZXIgdGhhbiAxIGFyZSBub3QgeWV0IHN1cHBvcnRlZC4gR290IGRpbGF0aW9ucyAnXCIrYStcIidcIikse3g6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7dmFyIGk9ZSxhPSExOzM9PT1lLnJhbmsmJihhPSEwLGk9ZS5hczREKDEsZS5zaGFwZVswXSxlLnNoYXBlWzFdLGUuc2hhcGVbMl0pKTt2YXIgbz1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmRlcHRod2lzZUNvbnYyRERlcklucHV0KGksbixyKX0se2R5NEQ6aX0pO3JldHVybiBhP28uYXMzRChvLnNoYXBlWzFdLG8uc2hhcGVbMl0sby5zaGFwZVszXSk6b30oYy5zaGFwZSx0LHUsZil9LCRmaWx0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7dmFyIGk9dDszPT09dC5yYW5rJiYoaT10LmFzNEQoMSx0LnNoYXBlWzBdLHQuc2hhcGVbMV0sdC5zaGFwZVsyXSkpO3ZhciBhPWU7cmV0dXJuIDM9PT1hLnJhbmsmJihhPWUuYXM0RCgxLGUuc2hhcGVbMF0sZS5zaGFwZVsxXSxlLnNoYXBlWzJdKSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5kZXB0aHdpc2VDb252MkREZXJGaWx0ZXIoaSxhLHIpfSx7eDREOmksZHk0RDphfSl9KGMsdCx1LnNoYXBlLGYpfX19KTtyZXR1cm4gbD9oLmFzM0QoaC5zaGFwZVsxXSxoLnNoYXBlWzJdLGguc2hhcGVbM10pOmh9fSksZHM9QWUoe3NlcGFyYWJsZUNvbnYyZF86ZnVuY3Rpb24odCxlLG4scixpLGEsbyl7dm9pZCAwPT09YSYmKGE9WzEsMV0pLHZvaWQgMD09PW8mJihvPVwiTkhXQ1wiKTt2YXIgcz1PZSh0LFwieFwiLFwic2VwYXJhYmxlQ29udjJkXCIpLHU9T2UoZSxcImRlcHRod2lzZUZpbHRlclwiLFwic2VwYXJhYmxlQ29udjJkXCIpLGM9T2UobixcInBvaW50d2lzZUZpbHRlclwiLFwic2VwYXJhYmxlQ29udjJkXCIpLGw9cyxmPSExO2lmKDM9PT1zLnJhbmsmJihmPSEwLGw9cy5hczREKDEscy5zaGFwZVswXSxzLnNoYXBlWzFdLHMuc2hhcGVbMl0pKSxcIk5DSFdcIj09PW8pdGhyb3cgbmV3IEVycm9yKFwic2VwYXJhYmxlQ29udjJkIGN1cnJlbnRseSBkb2VzIG5vdCBzdXBwb3J0IGRhdGFGb3JtYXQgTkNIVzsgb25seSBOSFdDIGlzIHN1cHBvcnRlZFwiKTtiKDQ9PT1sLnJhbmssXCJFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IGlucHV0IG11c3QgYmUgcmFuayA0LCBidXQgZ290IHJhbmsgXCIrbC5yYW5rK1wiLlwiKSxiKDQ9PT11LnJhbmssXCJFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IGRlcHRod2lzZSBmaWx0ZXIgbXVzdCBiZSByYW5rIDQsIGJ1dCBnb3QgcmFuayBcIit1LnJhbmsrXCIuXCIpLGIoND09PWMucmFuayxcIkVycm9yIGluIHNlcGFyYWJsZUNvbnYyZDogcG9pbnR3aXNlIGZpbHRlciBtdXN0IGJlIHJhbmsgNCwgYnV0IGdvdCByYW5rIFwiK3UucmFuaytcIi5cIiksYigxPT09Yy5zaGFwZVswXSxcIkVycm9yIGluIHNlcGFyYWJsZUNvbnYyZDogdGhlIGZpcnN0IGRpbWVuc2lvbiBvZiBwb2ludHdpc2UgZmlsdGVyICBtdXN0IGJlIDEsIGJ1dCBnb3QgXCIrYy5zaGFwZVswXStcIi5cIiksYigxPT09Yy5zaGFwZVsxXSxcIkVycm9yIGluIHNlcGFyYWJsZUNvbnYyZDogdGhlIHNlY29uZCBkaW1lbnNpb24gb2YgcG9pbnR3aXNlIGZpbHRlciAgbXVzdCBiZSAxLCBidXQgZ290IFwiK2Muc2hhcGVbMV0rXCIuXCIpO3ZhciBoPXUuc2hhcGVbMl0scD11LnNoYXBlWzNdO2IoYy5zaGFwZVsyXT09PWgqcCxcIkVycm9yIGluIHNlcGFyYWJsZUNvbnYyZDogdGhlIHRoaXJkIGRpbWVuc2lvbiBvZiBwb2ludHdpc2UgZmlsdGVyIG11c3QgYmUgXCIraCpwK1wiLCBidXQgZ290IFwiK2Muc2hhcGVbMl0rXCIuXCIpO3ZhciBkPXBzKGwsdSxyLGksbyxhKSxtPWxzKGQsYywxLFwidmFsaWRcIixvKTtyZXR1cm4gZj9tLmFzM0QobS5zaGFwZVsxXSxtLnNoYXBlWzJdLG0uc2hhcGVbM10pOm19fSksbXM9QWUoe2NvbnYyZFRyYW5zcG9zZV86ZnVuY3Rpb24odCxlLG4scixpLGEpe3JldHVybiBvcyhuLE9lKHQsXCJ4XCIsXCJjb252MmRUcmFuc3Bvc2VcIiksT2UoZSxcImZpbHRlclwiLFwiY29udjJkVHJhbnNwb3NlXCIpLHIsaSxhKX19KTt2YXIgZ3M9QWUoe3JldmVyc2VfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInJldmVyc2VcIik7aWYoMD09PW4ucmFuaylyZXR1cm4gbi5jbG9uZSgpO3ZhciByPVAoZSxuLnNoYXBlKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXZlcnNlKG4scil9LHskeDpufSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5yZXZlcnNlKHIpfX19KS5yZXNoYXBlQXMobil9fSkseXM9QWUoe3JldmVyc2UxZF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcInJldmVyc2VcIik7cmV0dXJuIGIoMT09PWUucmFuayxcIkVycm9yIGluIHJldmVyc2UxRDogeCBtdXN0IGJlIHJhbmsgMSBidXQgZ290XFxuICAgICAgICAgICAgIHJhbmsgXCIrZS5yYW5rK1wiLlwiKSxncyhlLDApfX0pLHZzPUFlKHtyZXZlcnNlMmRfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInJldmVyc2VcIik7cmV0dXJuIGIoMj09PW4ucmFuayxcIkVycm9yIGluIHJldmVyc2UyRDogeCBtdXN0IGJlIHJhbmsgMiBidXQgZ290XFxuICAgICAgICAgICAgIHJhbmsgXCIrbi5yYW5rK1wiLlwiKSxncyhuLGUpfX0pLGJzPUFlKHtyZXZlcnNlM2RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInJldmVyc2VcIik7cmV0dXJuIGIoMz09PW4ucmFuayxcIkVycm9yIGluIHJldmVyc2UzRDogeCBtdXN0IGJlIHJhbmsgMyBidXQgZ290XFxuICAgICAgICAgICAgIHJhbmsgXCIrbi5yYW5rK1wiLlwiKSxncyhuLGUpfX0pLHdzPUFlKHtyZXZlcnNlNGRfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcInhcIixcInJldmVyc2VcIik7cmV0dXJuIGIoND09PW4ucmFuayxcIkVycm9yIGluIHJldmVyc2U0RDogeCBtdXN0IGJlIHJhbmsgNCBidXQgZ290XFxuICAgICAgICAgICAgIHJhbmsgXCIrbi5yYW5rK1wiLlwiKSxncyhuLGUpfX0pO2Z1bmN0aW9uIF9zKHQsZSxuLHIsaSxhKXt2YXIgbz1PZSh0LFwieFwiLFwibWF4UG9vbFwiKSxzPW8sdT0hMTszPT09by5yYW5rJiYodT0hMCxzPW8uYXM0RCgxLG8uc2hhcGVbMF0sby5zaGFwZVsxXSxvLnNoYXBlWzJdKSksbnVsbD09ciYmKHI9WzEsMV0pLGIoND09PXMucmFuayxcIkVycm9yIGluIG1heFBvb2w6IGlucHV0IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayBcIitzLnJhbmsrXCIuXCIpLGIobnMobixyKSxcIkVycm9yIGluIG1heFBvb2w6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuIEdvdCBzdHJpZGVzIFwiK24rXCIgYW5kIGRpbGF0aW9ucyAnXCIrcitcIidcIiksbnVsbCE9YSYmYihOKGkpLFwiRXJyb3IgaW4gbWF4UG9vbDogcGFkIG11c3QgYmUgYW4gaW50ZWdlciB3aGVuIHVzaW5nLCBkaW1Sb3VuZGluZ01vZGUgXCIrYStcIiBidXQgZ290IHBhZCBcIitpK1wiLlwiKTt2YXIgYz1HbyhzLnNoYXBlLGUsbixyLGksYSksbD1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUodC5tYXhQb29sKHMsYykpfSx7eDpzfSxmdW5jdGlvbih0LGEpe3ZhciBvPWFbMF07cmV0dXJue3g6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixpLGEsbyxzKXt2YXIgdT1PZSh0LFwiZHlcIixcIm1heFBvb2xCYWNrcHJvcFwiKSxjPU9lKGUsXCJpbnB1dFwiLFwibWF4UG9vbEJhY2twcm9wXCIpLGw9T2UobixcIm91dHB1dFwiLFwibWF4UG9vbEJhY2twcm9wXCIpO2IoYy5yYW5rPT09dS5yYW5rLFwiUmFuayBvZiBpbnB1dCAoXCIrYy5yYW5rK1wiKSBkb2VzIG5vdCBtYXRjaCByYW5rIG9mIGR5IChcIit1LnJhbmsrXCIpXCIpLG51bGw9PWEmJihhPVsxLDFdKSxiKG5zKGksYSksXCJFcnJvciBpbiBtYXhQb29sQmFja1Byb3A6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuIEdvdCBzdHJpZGVzIFwiK2krXCIgYW5kIGRpbGF0aW9ucyAnXCIrYStcIidcIiksYig0PT09dS5yYW5rLFwiRXJyb3IgaW4gbWF4UG9vbEJhY2twcm9wOiBkeSBtdXN0IGJlIHJhbmsgNCBidXQgZ290IHJhbmsgXCIrdS5yYW5rK1wiLlwiKSxiKDQ9PT1jLnJhbmssXCJFcnJvciBpbiBtYXhQb29sQmFja3Byb3A6IGlucHV0IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayBcIitjLnJhbmsrXCIuXCIpLG51bGwhPXMmJmIoTihvKSxcIkVycm9yIGluIG1heFBvb2xCYWNrcHJvcDogcGFkIG11c3QgYmUgYW4gaW50ZWdlciB3aGVuIHVzaW5nLCBkaW1Sb3VuZGluZ01vZGUgXCIrcytcIiBidXQgZ290IHBhZCBcIitvK1wiLlwiKTt2YXIgZj1HbyhjLnNoYXBlLHIsaSxhLG8scyk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubWF4UG9vbEJhY2twcm9wKHUsYyxsLGYpfSx7JGR5OnUsJGlucHV0OmN9KX0odCxzLG8sZSxuLHIsaSl9fX0pO3JldHVybiB1P2wuYXMzRChsLnNoYXBlWzFdLGwuc2hhcGVbMl0sbC5zaGFwZVszXSk6bH1mdW5jdGlvbiB4cyh0LGUsbixyLGksYSl7dmFyIG89T2UodCxcInhcIixcImF2Z1Bvb2xcIixcImZsb2F0MzJcIik7bnVsbD09ciYmKHI9WzEsMV0pLGIobnMobixyKSxcIkVycm9yIGluIGF2Z1Bvb2w6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuIEdvdCBzdHJpZGVzIFwiK24rXCIgYW5kIGRpbGF0aW9ucyAnXCIrcitcIidcIik7dmFyIHM9byx1PSExOzM9PT1vLnJhbmsmJih1PSEwLHM9by5hczREKDEsby5zaGFwZVswXSxvLnNoYXBlWzFdLG8uc2hhcGVbMl0pKSxiKDQ9PT1zLnJhbmssXCJFcnJvciBpbiBhdmdQb29sOiB4IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayBcIitzLnJhbmsrXCIuXCIpLG51bGwhPWEmJmIoTihpKSxcIkVycm9yIGluIGF2Z1Bvb2w6IHBhZCBtdXN0IGJlIGFuIGludGVnZXIgd2hlbiB1c2luZywgZGltUm91bmRpbmdNb2RlIFwiK2ErXCIgYnV0IGdvdCBwYWQgXCIraStcIi5cIik7dmFyIGM9R28ocy5zaGFwZSxlLG4scixpLGEpLGw9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5hdmdQb29sKHMsYyl9LHt4OnN9LGZ1bmN0aW9uKHQpe3JldHVybnt4OmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsaSxhKXt2YXIgbz1PZSh0LFwiZHlcIixcImF2Z1Bvb2xCYWNrcHJvcFwiKSxzPU9lKGUsXCJpbnB1dFwiLFwiYXZnUG9vbEJhY2twcm9wXCIpO2Iocy5yYW5rPT09by5yYW5rLFwiUmFuayBvZiBpbnB1dCAoXCIrcy5yYW5rK1wiKSBkb2VzIG5vdCBtYXRjaCByYW5rIG9mIGR5IChcIitvLnJhbmsrXCIpXCIpLG51bGw9PWkmJihpPVsxLDFdKSxiKG5zKHIsaSksXCJFcnJvciBpbiBhdmdQb29sQmFja3Byb3A6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuIEdvdCBzdHJpZGVzIFwiK3IrXCIgYW5kIGRpbGF0aW9ucyAnXCIraStcIidcIik7dmFyIHU9cyxjPW8sbD0hMTszPT09cy5yYW5rJiYobD0hMCx1PXMuYXM0RCgxLHMuc2hhcGVbMF0scy5zaGFwZVsxXSxzLnNoYXBlWzJdKSxjPW8uYXM0RCgxLG8uc2hhcGVbMF0sby5zaGFwZVsxXSxvLnNoYXBlWzJdKSksYig0PT09Yy5yYW5rLFwiRXJyb3IgaW4gYXZnUG9vbEJhY2twcm9wOiBkeSBtdXN0IGJlIHJhbmsgNCBidXQgZ290IHJhbmsgXCIrYy5yYW5rK1wiLlwiKSxiKDQ9PT11LnJhbmssXCJFcnJvciBpbiBhdmdQb29sQmFja3Byb3A6IGlucHV0IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayBcIit1LnJhbmsrXCIuXCIpO3ZhciBmPUdvKHUuc2hhcGUsbixyLGksYSksaD1MdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmF2Z1Bvb2xCYWNrcHJvcChjLHUsZil9LHtkeTREOmMsaW5wdXQ0RDp1fSk7cmV0dXJuIGw/aC5hczNEKGguc2hhcGVbMV0saC5zaGFwZVsyXSxoLnNoYXBlWzNdKTpofSh0LHMsZSxuLHIsaSl9fX0pO3JldHVybiBsPWwuY2FzdChvLmR0eXBlKSx1P2wuYXMzRChsLnNoYXBlWzFdLGwuc2hhcGVbMl0sbC5zaGFwZVszXSk6bH12YXIgRXM9QWUoe21heFBvb2xfOmZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIF9zKHQsZSxuLDEscixpKX19KSxTcz1BZSh7YXZnUG9vbF86ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4geHModCxlLG4sMSxyLGkpfX0pLE5zPUFlKHtwb29sXzpmdW5jdGlvbih0LGUsbixyLGksYSl7bnVsbD09aSYmKGk9WzEsMV0pLG51bGw9PWEmJihhPTEpLDA9PT1yJiYocj1cInZhbGlkXCIpO3ZhciBvPU9lKHQsXCJ4XCIsXCJtYXhQb29sXCIpLHM9byx1PSExOzM9PT1vLnJhbmsmJih1PSEwLHM9by5hczREKDEsby5zaGFwZVswXSxvLnNoYXBlWzFdLG8uc2hhcGVbMl0pKSxiKG5zKGEsaSksXCJFcnJvciBpbiBwb29sOiBFaXRoZXIgc3RyaWRlcyBvciBkaWxhdGlvbnMgbXVzdCBiZSAxLiBHb3Qgc3RyaWRlcyBcIithK1wiIGFuZCBkaWxhdGlvbnMgJ1wiK2krXCInXCIpO3ZhciBjLGw9R28ocy5zaGFwZSxlLGEsaSxyKSxmPVtsLmRpbGF0aW9uSGVpZ2h0LGwuZGlsYXRpb25XaWR0aF07Yz1cInNhbWVcIj09PXI/ZnVuY3Rpb24odCxlKXt2YXIgbj10Lm1hcChmdW5jdGlvbih0LG4pe3JldHVybiB0Kyh0LTEpKihlW25dLTEpfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LTF9KSxyPW4ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmZsb29yKHQvMil9KSxpPW4ubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQtcltlXX0pO3JldHVybiBuLm1hcChmdW5jdGlvbih0LGUpe3JldHVybltyW2VdLGlbZV1dfSl9KFtsLmZpbHRlckhlaWdodCxsLmZpbHRlcldpZHRoXSxmKTpbWzAsMF0sWzAsMF1dO3ZhciBoPTE9PT1mWzBdJiYxPT09ZlsxXSxwPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdFswXX0pLGk9bi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHRbMV19KSxhPXQuY29uY2F0KHIsaSksbz1lLm1hcChmdW5jdGlvbih0LGUpe3JldHVybih0LWFbZV0ldCkldH0pLHM9aS5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCtvW2VdfSk7cmV0dXJuW2UubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuW3JbZV0sc1tlXV19KSxlLm1hcChmdW5jdGlvbih0LGUpe3JldHVyblswLG9bZV1dfSldfShbbC5pbkhlaWdodCxsLmluV2lkdGhdLGYsYyksZD1wWzBdLG09cFsxXSxnPWg/cjpcInZhbGlkXCIseT1oP3M6dG8ocyxmLGQpLHY9KFwiYXZnXCI9PT1uP2Z1bmN0aW9uKCl7cmV0dXJuIHhzKHksZSxhLDEsZyl9OmZ1bmN0aW9uKCl7cmV0dXJuIF9zKHksZSxhLDEsZyl9KSgpLHc9aD92Ok1hKHYsZixtKTtyZXR1cm4gdT93LmFzM0Qody5zaGFwZVsxXSx3LnNoYXBlWzJdLHcuc2hhcGVbM10pOnd9fSk7dmFyIElzPUFlKHtzbGljZV86ZnVuY3Rpb24odCxlLG4pe3ZhciByLGksYT1PZSh0LFwieFwiLFwic2xpY2VcIik7aWYoMD09PWEucmFuayl0aHJvdyBuZXcgRXJyb3IoXCJTbGljaW5nIHNjYWxhciBpcyBub3QgcG9zc2libGVcIik7cj1cIm51bWJlclwiPT10eXBlb2YgZT9bZV0uY29uY2F0KG5ldyBBcnJheShhLnJhbmstMSkuZmlsbCgwKSk6ZS5sZW5ndGg8YS5yYW5rP2UuY29uY2F0KG5ldyBBcnJheShhLnJhbmstZS5sZW5ndGgpLmZpbGwoMCkpOmUuc2xpY2UoKSxpPShpPW51bGw9PW4/bmV3IEFycmF5KGEucmFuaykuZmlsbCgtMSk6XCJudW1iZXJcIj09dHlwZW9mIG4/W25dLmNvbmNhdChuZXcgQXJyYXkoYS5yYW5rLTEpLmZpbGwoLTEpKTpuLmxlbmd0aDxhLnJhbms/bi5jb25jYXQobmV3IEFycmF5KGEucmFuay1uLmxlbmd0aCkuZmlsbCgtMSkpOm4pLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiB0Pj0wP3Q6KGIoLTE9PT10LFwiQmFkIHZhbHVlIGluIHNpemVcIiksYS5zaGFwZVtlXS1yW2VdKX0pLGZ1bmN0aW9uKHQsZSxuKXtiKHQucmFuaz09PWUubGVuZ3RoLFwiRXJyb3IgaW4gc2xpY2VcIit0LnJhbmsrXCJEOiBMZW5ndGggb2YgYmVnaW4gXCIrZStcIiBtdXN0IG1hdGNoIHRoZSByYW5rIG9mIHRoZSBhcnJheSAoXCIrdC5yYW5rK1wiKS5cIiksYih0LnJhbms9PT1uLmxlbmd0aCxcIkVycm9yIGluIHNsaWNlXCIrdC5yYW5rK1wiRDogTGVuZ3RoIG9mIHNpemUgXCIrbitcIiBtdXN0IG1hdGNoIHRoZSByYW5rIG9mIHRoZSBhcnJheSAoXCIrdC5yYW5rK1wiKS5cIik7Zm9yKHZhciByPTA7cjx0LnJhbms7KytyKWIoZVtyXStuW3JdPD10LnNoYXBlW3JdLFwiRXJyb3IgaW4gc2xpY2VcIit0LnJhbmsrXCJEOiBiZWdpbltcIityK1wiXSArIHNpemVbXCIrcitcIl0gKFwiKyhlW3JdK25bcl0pK1wiKSB3b3VsZCBvdmVyZmxvdyBpbnB1dC5zaGFwZVtcIityK1wiXSAoXCIrdC5zaGFwZVtyXStcIilcIil9KGEscixpKTt2YXIgbz1hLnNoYXBlO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNsaWNlKGEscixpKX0seyR4OmF9LGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0LnJhbms7bisrKWUucHVzaChbcltuXSxvW25dLXJbbl0taVtuXV0pO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LnBhZChlKX19fSl9fSksT3M9QWUoe3NsaWNlMWRfOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1PZSh0LFwieFwiLFwic2xpY2UxZFwiKTtyZXR1cm4gYigxPT09ci5yYW5rLFwic2xpY2UxZCBleHBlY3RzIGEgcmFuay0xIHRlbnNvciwgYnV0IGdvdCBhIHJhbmstXCIrci5yYW5rK1wiIHRlbnNvclwiKSxJcyhyLFtlXSxbbl0pfX0pLGtzPUFlKHtzbGljZTJkXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UodCxcInhcIixcInNsaWNlMmRcIik7cmV0dXJuIGIoMj09PXIucmFuayxcInNsaWNlMmQgZXhwZWN0cyBhIHJhbmstMiB0ZW5zb3IsIGJ1dCBnb3QgYSByYW5rLVwiK3IucmFuaytcIiB0ZW5zb3JcIiksSXMocixlLG4pfX0pLEFzPUFlKHtzbGljZTNkXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UodCxcInhcIixcInNsaWNlM2RcIik7cmV0dXJuIGIoMz09PXIucmFuayxcInNsaWNlM2QgZXhwZWN0cyBhIHJhbmstMyB0ZW5zb3IsIGJ1dCBnb3QgYSByYW5rLVwiK3IucmFuaytcIiB0ZW5zb3JcIiksSXMocixlLG4pfX0pLENzPUFlKHtzbGljZTRkXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UodCxcInhcIixcInNsaWNlNGRcIik7cmV0dXJuIGIoND09PXIucmFuayxcInNsaWNlNGQgZXhwZWN0cyBhIHJhbmstNCB0ZW5zb3IsIGJ1dCBnb3QgYSByYW5rLVwiK3IucmFuaytcIiB0ZW5zb3JcIiksSXMocixlLG4pfX0pO2Z1bmN0aW9uIFBzKHQsZSxuLHIsaSl7dmFyIGE9ZVswXTtyZXR1cm4gYS5yYW5rPG4ucmFuayYmKGE9YS5yZXNoYXBlKG9lKGEuc2hhcGUscikpKSx0LnJhbms8bi5yYW5rJiYodD10LnJlc2hhcGUob2UodC5zaGFwZSxyKSkpLHskeDpmdW5jdGlvbigpe3ZhciBlPXQubXVsKG4uZXF1YWwoYSkuY2FzdCh0LmR0eXBlKSk7cmV0dXJuIG51bGw9PWk/ZTplLnRyYW5zcG9zZShpKX19fXZhciBUcz1BZSh7YWxsXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9bnVsbCksdm9pZCAwPT09biYmKG49ITEpO3ZhciByPU9lKHQsXCJ4XCIsXCJhbGxcIixcImJvb2xcIiksaT1QKGUsci5zaGFwZSksYT1pLG89dWUoYSxyLnJhbmspO251bGwhPW8mJihyPXIudHJhbnNwb3NlKG8pLGE9bGUoYS5sZW5ndGgsci5yYW5rKSk7dmFyIHM9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5hbGwocixhKX0seyR4OnJ9KTtpZihuKXt2YXIgdT1vZShzLnNoYXBlLGkpO3JldHVybiBzLnJlc2hhcGUodSl9cmV0dXJuIHN9fSksUnM9QWUoe2FueV86ZnVuY3Rpb24odCxlLG4pe3ZvaWQgMD09PWUmJihlPW51bGwpLHZvaWQgMD09PW4mJihuPSExKTt2YXIgcj1PZSh0LFwieFwiLFwiYW55XCIsXCJib29sXCIpLGk9UChlLHIuc2hhcGUpLGE9aSxvPXVlKGEsci5yYW5rKTtudWxsIT1vJiYocj1yLnRyYW5zcG9zZShvKSxhPWxlKGEubGVuZ3RoLHIucmFuaykpO3ZhciBzPUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYW55KHIsYSl9LHskeDpyfSk7aWYobil7dmFyIHU9b2Uocy5zaGFwZSxpKTtyZXR1cm4gcy5yZXNoYXBlKHUpfXJldHVybiBzfX0pLERzPUFlKHthcmdNYXhfOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9MCk7dmFyIG49T2UodCxcInhcIixcImFyZ01heFwiKTtudWxsPT1lJiYoZT0wKTt2YXIgcj1QKGUsbi5zaGFwZSksaT11ZShyLG4ucmFuayk7cmV0dXJuIG51bGwhPWkmJihuPW4udHJhbnNwb3NlKGkpLHI9bGUoci5sZW5ndGgsbi5yYW5rKSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5hcmdNYXgobixyWzBdKX0seyR4Om59LGZ1bmN0aW9uKHQpe3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBYZShuKX19fSl9fSksTXM9QWUoe2FyZ01pbl86ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0wKTt2YXIgbj1PZSh0LFwieFwiLFwiYXJnTWluXCIpO251bGw9PWUmJihlPTApO3ZhciByPVAoZSxuLnNoYXBlKSxpPXVlKHIsbi5yYW5rKTtyZXR1cm4gbnVsbCE9aSYmKG49bi50cmFuc3Bvc2UoaSkscj1sZShyLmxlbmd0aCxuLnJhbmspKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFyZ01pbihuLHJbMF0pfSx7JHg6bn0sZnVuY3Rpb24odCl7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIFhlKG4pfX19KX19KSxqcz1BZSh7bG9nU3VtRXhwXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9bnVsbCksdm9pZCAwPT09biYmKG49ITEpO3ZhciByPU9lKHQsXCJ4XCIsXCJsb2dTdW1FeHBcIiksaT1QKGUsci5zaGFwZSksYT1yLm1heChpLCEwKSxvPXIuc3ViKGEpLmV4cCgpLnN1bShpKS5sb2coKSxzPWEucmVzaGFwZShvLnNoYXBlKS5hZGQobyk7aWYobil7dmFyIHU9b2Uocy5zaGFwZSxpKTtyZXR1cm4gcy5yZXNoYXBlKHUpfXJldHVybiBzfX0pLEJzPUFlKHttYXhfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1lJiYoZT1udWxsKSx2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHI9T2UodCxcInhcIixcIm1heFwiKSxpPXIsYT1QKGUsci5zaGFwZSksbz1hLHM9dWUobyxyLnJhbmspO251bGwhPXMmJihyPXIudHJhbnNwb3NlKHMpLG89bGUoby5sZW5ndGgsci5yYW5rKSk7dmFyIHU9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0LGUpe3JldHVybiBlKHQubWF4KHIsbykpfSx7JHg6cn0sZnVuY3Rpb24odCxlKXtyZXR1cm4gUHModCxlLGksYSxzKX0pO2lmKG4pe3ZhciBjPW9lKHUuc2hhcGUsYSk7dT11LnJlc2hhcGUoYyl9cmV0dXJuIHV9fSksTHM9QWUoe21lYW5fOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1lJiYoZT1udWxsKSx2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHI9T2UodCxcInhcIixcIm1lYW5cIiksaT1QKGUsci5zaGFwZSksYT1FKGFlKHIuc2hhcGUsaSlbMV0pO3JldHVybiAkdChmdW5jdGlvbih0KXt2YXIgcj1qZShhKTtyZXR1cm57dmFsdWU6KHIuZHR5cGU9PT10LmR0eXBlP3Q6dC5jYXN0KHIuZHR5cGUpKS5kaXYocikuc3VtKGUsbiksZ3JhZEZ1bmM6ZnVuY3Rpb24oZSl7dmFyIG49dC5zaGFwZS5zbGljZSgpO3JldHVybiBpLmZvckVhY2goZnVuY3Rpb24odCl7blt0XT0xfSksZS5yZXNoYXBlKG4pLm11bChXZSh0LnNoYXBlLFwiZmxvYXQzMlwiKSkuZGl2KHIpfX19KShyKX19KSx6cz1BZSh7bWluXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9bnVsbCksdm9pZCAwPT09biYmKG49ITEpO3ZhciByPU9lKHQsXCJ4XCIsXCJtaW5cIiksaT1yLGE9UChlLHIuc2hhcGUpLG89YSxzPXVlKG8sci5yYW5rKTtudWxsIT1zJiYocj1yLnRyYW5zcG9zZShzKSxvPWxlKG8ubGVuZ3RoLHIucmFuaykpO3ZhciB1PUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCxlKXtyZXR1cm4gZSh0Lm1pbihyLG8pKX0seyR4OnJ9LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIFBzKHQsZSxpLGEscyl9KTtpZihuKXt2YXIgYz1vZSh1LnNoYXBlLGEpO3U9dS5yZXNoYXBlKGMpfXJldHVybiB1fX0pLEZzPUFlKHttb21lbnRzXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9bnVsbCksdm9pZCAwPT09biYmKG49ITEpO3ZhciByPVAoZSwodD1PZSh0LFwieFwiLFwibW9tZW50c1wiKSkuc2hhcGUpLGk9dC5tZWFuKHIsbiksYT1pLnNoYXBlO3JldHVybiBufHwoYT1vZShpLnNoYXBlLHIpKSx7bWVhbjppLHZhcmlhbmNlOnQudG9GbG9hdCgpLnN1YihpLnJlc2hhcGUoYSkpLnNxdWFyZSgpLm1lYW4ocixuKX19fSksVXM9QWUoe3N1bV86ZnVuY3Rpb24odCxlLG4pe3ZvaWQgMD09PWUmJihlPW51bGwpLHZvaWQgMD09PW4mJihuPSExKTt2YXIgcj1PZSh0LFwieFwiLFwic3VtXCIpO1wiYm9vbFwiPT09ci5kdHlwZSYmKHI9ci50b0ludCgpKTt2YXIgaT1QKGUsci5zaGFwZSk7cmV0dXJuICR0KGZ1bmN0aW9uKHQpe3ZhciBlPXVlKGksdC5yYW5rKSxyPWksYT10O251bGwhPWUmJihhPXQudHJhbnNwb3NlKGUpLHI9bGUoci5sZW5ndGgsdC5yYW5rKSk7dmFyIG89THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zdW0oYSxyKX0se3Blcm11dGVkWDphfSk7aWYobil7dmFyIHM9b2Uoby5zaGFwZSxpKTtvPW8ucmVzaGFwZShzKX1yZXR1cm57dmFsdWU6byxncmFkRnVuYzpmdW5jdGlvbihlKXt2YXIgbj10LnNoYXBlLnNsaWNlKCk7cmV0dXJuIGkuZm9yRWFjaChmdW5jdGlvbih0KXtuW3RdPTF9KSxlLnJlc2hhcGUobikubXVsKFdlKHQuc2hhcGUsXCJmbG9hdDMyXCIpKX19fSkocil9fSksVnM9QWUoe3Byb2RfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1lJiYoZT1udWxsKSx2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHI9T2UodCxcInhcIixcInByb2RcIik7XCJib29sXCI9PT1yLmR0eXBlJiYocj1yLnRvSW50KCkpO3ZhciBpPVAoZSxyLnNoYXBlKSxhPXVlKGksci5yYW5rKSxvPWkscz1yO251bGwhPWEmJihzPXIudHJhbnNwb3NlKGEpLG89bGUoby5sZW5ndGgsci5yYW5rKSk7dmFyIHU9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5wcm9kKHMsbyl9LHtwZXJtdXRlZFg6c30pO2lmKG4pe3ZhciBjPW9lKHUuc2hhcGUsaSk7dT11LnJlc2hhcGUoYyl9cmV0dXJuIHV9fSk7dmFyIFdzPUFlKHtlcXVhbF86ZnVuY3Rpb24odCxlKXt2YXIgbixyPU9lKHQsXCJhXCIsXCJlcXVhbFwiKSxpPU9lKGUsXCJiXCIsXCJlcXVhbFwiKTtyZXR1cm4gbj1FdChyLGkpLHI9blswXSxpPW5bMV0scGUoci5zaGFwZSxpLnNoYXBlKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmVxdWFsKHIsaSl9LHskYTpyLCRiOml9KX19KSxxcz1BZSh7ZXF1YWxTdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcImVxdWFsU3RyaWN0XCIpLHI9T2UoZSxcImJcIixcImVxdWFsU3RyaWN0XCIpO3JldHVybiB3KG4uc2hhcGUsci5zaGFwZSxcIkVycm9yIGluIGVxdWFsU3RyaWN0OiBcIiksbi5lcXVhbChyKX19KSwkcz1BZSh7Z3JlYXRlcl86ZnVuY3Rpb24odCxlKXt2YXIgbixyPU9lKHQsXCJhXCIsXCJncmVhdGVyXCIpLGk9T2UoZSxcImJcIixcImdyZWF0ZXJcIik7cmV0dXJuIG49RXQocixpKSxyPW5bMF0saT1uWzFdLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5ncmVhdGVyKHIsaSl9LHskYTpyLCRiOml9KX19KSxIcz1BZSh7Z3JlYXRlckVxdWFsXzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9T2UodCxcImFcIixcImdyZWF0ZXJFcXVhbFwiKSxpPU9lKGUsXCJiXCIsXCJncmVhdGVyRXF1YWxcIik7cmV0dXJuIG49RXQocixpKSxyPW5bMF0saT1uWzFdLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5ncmVhdGVyRXF1YWwocixpKX0seyRhOnIsJGI6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRhOmZ1bmN0aW9uKCl7cmV0dXJuIFhlKHIpfSwkYjpmdW5jdGlvbigpe3JldHVybiBYZShpKX19fSl9fSksS3M9QWUoe2dyZWF0ZXJFcXVhbFN0cmljdF86ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwiYVwiLFwiZ3JlYXRlckVxdWFsU3RyaWN0XCIpLHI9T2UoZSxcImJcIixcImdyZWF0ZXJFcXVhbFN0cmljdFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBncmVhdGVyRXF1YWxTdHJpY3Q6IFwiKSxuLmdyZWF0ZXJFcXVhbChyKX19KSxHcz1BZSh7Z3JlYXRlclN0cmljdF86ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwiYVwiLFwiZ3JlYXRlclN0cmljdFwiKSxyPU9lKGUsXCJiXCIsXCJncmVhdGVyU3RyaWN0XCIpO3JldHVybiB3KG4uc2hhcGUsci5zaGFwZSxcIkVycm9yIGluIGdyZWF0ZXJTdHJpY3Q6IFwiKSxuLmdyZWF0ZXIocil9fSksWHM9QWUoe2xlc3NfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwibGVzc1wiKSxpPU9lKGUsXCJiXCIsXCJsZXNzXCIpO3JldHVybiBuPUV0KHIsaSkscj1uWzBdLGk9blsxXSxwZShyLnNoYXBlLGkuc2hhcGUpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubGVzcyhyLGkpfSx7JGE6ciwkYjppfSl9fSksWXM9QWUoe2xlc3NFcXVhbF86ZnVuY3Rpb24odCxlKXt2YXIgbixyPU9lKHQsXCJhXCIsXCJsZXNzRXF1YWxcIiksaT1PZShlLFwiYlwiLFwibGVzc0VxdWFsXCIpO3JldHVybiBuPUV0KHIsaSkscj1uWzBdLGk9blsxXSxwZShyLnNoYXBlLGkuc2hhcGUpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubGVzc0VxdWFsKHIsaSl9LHskYTpyLCRiOml9KX19KSxKcz1BZSh7bGVzc0VxdWFsU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJsZXNzRXF1YWxTdHJpY3RcIikscj1PZShlLFwiYlwiLFwibGVzc0VxdWFsU3RyaWN0XCIpO3JldHVybiB3KG4uc2hhcGUsci5zaGFwZSxcIkVycm9yIGluIGxlc3NFcXVhbFN0cmljdDogXCIpLG4ubGVzc0VxdWFsKHIpfX0pLFpzPUFlKHtsZXNzU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJsZXNzU3RyaWN0XCIpLHI9T2UoZSxcImJcIixcImxlc3NTdHJpY3RcIik7cmV0dXJuIHcobi5zaGFwZSxyLnNoYXBlLFwiRXJyb3IgaW4gbGVzc1N0cmljdDogXCIpLG4ubGVzcyhyKX19KSxRcz1BZSh7bm90RXF1YWxfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwibm90RXF1YWxcIiksaT1PZShlLFwiYlwiLFwibm90RXF1YWxcIik7cmV0dXJuIG49RXQocixpKSxyPW5bMF0saT1uWzFdLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5ub3RFcXVhbChyLGkpfSx7JGE6ciwkYjppfSl9fSksdHU9QWUoe25vdEVxdWFsU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJub3RFcXVhbFN0cmljdFwiKSxyPU9lKGUsXCJiXCIsXCJub3RFcXVhbFN0cmljdFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBub3RFcXVhbFN0cmljdDogXCIpLG4ubm90RXF1YWwocil9fSk7dmFyIGV1PUFlKHthZGRfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwiYWRkXCIpLGk9T2UoZSxcImJcIixcImFkZFwiKTtuPUV0KHIsaSkscj1uWzBdLGk9blsxXTt2YXIgYT1wZShyLnNoYXBlLGkuc2hhcGUpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFkZChyLGkpfSx7JGE6ciwkYjppfSxmdW5jdGlvbih0KXtyZXR1cm57JGE6ZnVuY3Rpb24oKXt2YXIgZT10LG49aGUoci5zaGFwZSxhKTtyZXR1cm4gbi5sZW5ndGg+MCYmKGU9ZS5zdW0obikpLGUucmVzaGFwZShyLnNoYXBlKX0sJGI6ZnVuY3Rpb24oKXt2YXIgZT10LG49aGUoaS5zaGFwZSxhKTtyZXR1cm4gbi5sZW5ndGg+MCYmKGU9ZS5zdW0obikpLGUucmVzaGFwZShpLnNoYXBlKX19fSl9fSksbnU9QWUoe2FkZE5fOmZ1bmN0aW9uKHQpe2IoQXJyYXkuaXNBcnJheSh0KSxmdW5jdGlvbigpe3JldHVyblwiVGhlIGFyZ3VtZW50IHBhc3NlZCB0byB0Zi5hZGROKCkgbXVzdCBiZSBhIGxpc3Qgb2YgdGVuc29yc1wifSksYih0Lmxlbmd0aD49MSxmdW5jdGlvbigpe3JldHVyblwiTXVzdCBwYXNzIGF0IGxlYXN0IG9uZSB0ZW5zb3IgdG8gdGYuYWRkTigpLCBidXQgZ290IFwiK3QubGVuZ3RofSk7dmFyIGU9dC5tYXAoZnVuY3Rpb24odCxlKXtyZXR1cm4gT2UodCxcInRlbnNvcnNcIitlLFwiYWRkTlwiKX0pLG49ZVswXTtlLmZvckVhY2goZnVuY3Rpb24odCl7aWYodC5kdHlwZSE9PW4uZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiQWxsIHRlbnNvcnMgcGFzc2VkIHRvIHRmLmFkZE4oKSBtdXN0IGhhdmUgdGhlIHNhbWUgZHR5cGVcIil9KSxlLmZvckVhY2goZnVuY3Rpb24odCl7aWYoIVModC5zaGFwZSxuLnNoYXBlKSl0aHJvdyBuZXcgRXJyb3IoXCJBbGwgdGVuc29ycyBwYXNzZWQgdG8gdGYuYWRkTigpIG11c3QgaGF2ZSB0aGUgc2FtZSBzaGFwZVwiKX0pO3ZhciByPWU7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYWRkTihlKX0scixmdW5jdGlvbih0KXt2YXIgbj17fTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUscil7bltyXT1mdW5jdGlvbigpe3JldHVybiB0LmNsb25lKCl9fSksbn0pfX0pLHJ1PUFlKHthZGRTdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcImFkZFN0cmljdFwiKSxyPU9lKGUsXCJiXCIsXCJhZGRTdHJpY3RcIik7cmV0dXJuIHcobi5zaGFwZSxyLnNoYXBlLFwiRXJyb3IgaW4gYWRkU3RyaWN0OiBcIiksbi5hZGQocil9fSksaXU9QWUoe2F0YW4yXzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9T2UodCxcImFcIixcImF0YW4yXCIpLGk9T2UoZSxcImJcIixcImF0YW4yXCIpO249RXQocixpKSxyPW5bMF0saT1uWzFdO3ZhciBhPXBlKHIuc2hhcGUsaS5zaGFwZSk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuYXRhbjIocixpKX0seyRhOnIsJGI6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRhOmZ1bmN0aW9uKCl7dmFyIGU9ZXUoci5zcXVhcmUoKSxpLnNxdWFyZSgpKSxuPXQubXVsKGkuZGl2KGUpKSxvPWhlKHIuc2hhcGUsYSk7cmV0dXJuIG8ubGVuZ3RoPjAmJihuPW4uc3VtKG8pKSxuLnJlc2hhcGUoci5zaGFwZSl9LCRiOmZ1bmN0aW9uKCl7dmFyIGU9ZXUoci5zcXVhcmUoKSxpLnNxdWFyZSgpKSxuPUFvKHQubXVsKHIuZGl2KGUpKSksbz1oZShpLnNoYXBlLGEpO3JldHVybiBvLmxlbmd0aD4wJiYobj1uLnN1bShvKSksbi5yZXNoYXBlKGkuc2hhcGUpfX19KX19KSxhdT1BZSh7ZGl2XzpmdW5jdGlvbih0LGUpe3ZhciBuLHIsaT1PZSh0LFwiYVwiLFwiZGl2XCIpLGE9T2UoZSxcImJcIixcImRpdlwiKTtpZihuPUV0KGksYSksaT1uWzBdLGE9blsxXSxcImludDMyXCI9PT1pLmR0eXBlJiZcImludDMyXCI9PT1hLmR0eXBlKXJldHVybiBzdShpLGEpO3I9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVhbERpdmlkZShpLGEpfTt2YXIgbz1wZShpLnNoYXBlLGEuc2hhcGUpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKHIseyRhOmksJGI6YX0sZnVuY3Rpb24odCl7cmV0dXJueyRhOmZ1bmN0aW9uKCl7dmFyIGU9dC5kaXYoYS50b0Zsb2F0KCkpLG49aGUoaS5zaGFwZSxvKTtyZXR1cm4gbi5sZW5ndGg+MD9lLnN1bShuKS5yZXNoYXBlKGkuc2hhcGUpOmV9LCRiOmZ1bmN0aW9uKCl7dmFyIGU9dC5tdWwoaS50b0Zsb2F0KCkpLG49aGUoYS5zaGFwZSxvKTtuLmxlbmd0aD4wJiYoZT1lLnN1bShuKS5yZXNoYXBlKGEuc2hhcGUpKTt2YXIgcj1hLnNxdWFyZSgpO3JldHVybiBlLmRpdihyLnRvRmxvYXQoKSkubmVnKCl9fX0pfX0pLG91PUFlKHtkaXZTdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcImRpdlwiKSxyPU9lKGUsXCJiXCIsXCJkaXZcIik7cmV0dXJuIHcobi5zaGFwZSxyLnNoYXBlLFwiRXJyb3IgaW4gZGl2aWRlU3RyaWN0OiBcIiksbi5kaXYocil9fSksc3U9QWUoe2Zsb29yRGl2XzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9T2UodCxcImFcIixcImZsb29yRGl2XCIpLGk9T2UoZSxcImJcIixcImZsb29yRGl2XCIpO249RXQocixpKSxyPW5bMF0saT1uWzFdO3ZhciBhPXBlKHIuc2hhcGUsaS5zaGFwZSk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuZmxvb3JEaXYocixpKX0seyRhOnIsJGI6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRhOmZ1bmN0aW9uKCl7dmFyIGU9dC5kaXYoaS50b0Zsb2F0KCkpLG49aGUoci5zaGFwZSxhKTtyZXR1cm4gbi5sZW5ndGg+MD9lLnN1bShuKS5yZXNoYXBlKHIuc2hhcGUpOmV9LCRiOmZ1bmN0aW9uKCl7dmFyIGU9dC5tdWwoci50b0Zsb2F0KCkpLG49aGUoaS5zaGFwZSxhKTtuLmxlbmd0aD4wJiYoZT1lLnN1bShuKS5yZXNoYXBlKGkuc2hhcGUpKTt2YXIgbz1pLnNxdWFyZSgpO3JldHVybiBlLmRpdihvLnRvRmxvYXQoKSkubmVnKCl9fX0pfX0pLHV1PUFlKHttYXhpbXVtXzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9T2UodCxcImFcIixcIm1heGltdW1cIiksaT1PZShlLFwiYlwiLFwibWF4aW11bVwiKTtyZXR1cm4gbj1FdChyLGkpLHI9blswXSxpPW5bMV0sXCJib29sXCI9PT1yLmR0eXBlJiYocj1yLnRvSW50KCksaT1pLnRvSW50KCkpLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXhpbXVtKHIsaSl9LHskYTpyLCRiOml9LGZ1bmN0aW9uKHQpe3JldHVybnskYTpmdW5jdGlvbigpe3JldHVybiB0Lm11bChyLmdyZWF0ZXJFcXVhbChpKS50b0Zsb2F0KCkpfSwkYjpmdW5jdGlvbigpe3JldHVybiB0Lm11bChyLmxlc3MoaSkudG9GbG9hdCgpKX19fSl9fSksY3U9QWUoe21heGltdW1TdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcIm1heGltdW1TdHJpY3RcIikscj1PZShlLFwiYlwiLFwibWF4aW11bVN0cmljdFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBtYXhpbXVtU3RyaWN0OiBcIiksbi5tYXhpbXVtKHIpfX0pLGx1PUFlKHttaW5pbXVtXzpmdW5jdGlvbih0LGUpe3ZhciBuLHI9T2UodCxcImFcIixcIm1pbmltdW1cIiksaT1PZShlLFwiYlwiLFwibWluaW11bVwiKTtyZXR1cm4gbj1FdChyLGkpLHI9blswXSxpPW5bMV0sXCJib29sXCI9PT1yLmR0eXBlJiYocj1yLnRvSW50KCksaT1pLnRvSW50KCkpLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5taW5pbXVtKHIsaSl9LHskYTpyLCRiOml9LGZ1bmN0aW9uKHQpe3JldHVybnskYTpmdW5jdGlvbigpe3JldHVybiB0Lm11bChyLmxlc3NFcXVhbChpKS50b0Zsb2F0KCkpfSwkYjpmdW5jdGlvbigpe3JldHVybiB0Lm11bChyLmdyZWF0ZXIoaSkudG9GbG9hdCgpKX19fSl9fSksZnU9QWUoe21pbmltdW1TdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcIm1pbmltdW1TdHJpY3RcIikscj1PZShlLFwiYlwiLFwibWluaW11bVN0cmljdFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBtaW5pbXVtU3RyaWN0OiBcIiksbi5taW5pbXVtKHIpfX0pLGh1PUFlKHttb2RfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwibW9kXCIpLGk9T2UoZSxcImJcIixcIm1vZFwiKTtuPUV0KHIsaSkscj1uWzBdLGk9blsxXTt2YXIgYT1wZShyLnNoYXBlLGkuc2hhcGUpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1vZChyLGkpfSx7JGE6ciwkYjppfSxmdW5jdGlvbih0KXtyZXR1cm57JGE6ZnVuY3Rpb24oKXt2YXIgZT1oZShyLnNoYXBlLGEpO3JldHVybiBlLmxlbmd0aD4wP3Quc3VtKGUpLnJlc2hhcGUoci5zaGFwZSk6dH0sJGI6ZnVuY3Rpb24oKXt2YXIgZT10Lm11bChyLmRpdihpKS5mbG9vcigpLm5lZygpKSxuPWhlKGkuc2hhcGUsYSk7cmV0dXJuIG4ubGVuZ3RoPjA/ZS5zdW0obikucmVzaGFwZShpLnNoYXBlKTplfX19KX19KSxwdT1BZSh7bW9kU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJtb2RTdHJpY3RcIikscj1PZShlLFwiYlwiLFwibW9kU3RyaWN0XCIpO3JldHVybiB3KG4uc2hhcGUsci5zaGFwZSxcIkVycm9yIGluIG1vZFN0cmljdDogXCIpLG4ubW9kKHIpfX0pLGR1PUFlKHttdWxfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwibXVsXCIpLGk9T2UoZSxcImJcIixcIm11bFwiKTtuPUV0KHIsaSkscj1uWzBdLGk9blsxXTt2YXIgYT1wZShyLnNoYXBlLGkuc2hhcGUpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm11bHRpcGx5KHIsaSl9LHskYTpyLCRiOml9LGZ1bmN0aW9uKHQpe3JldHVybnskYTpmdW5jdGlvbigpe3ZhciBlPXQubXVsKGkudG9GbG9hdCgpKSxuPWhlKHIuc2hhcGUsYSk7cmV0dXJuIG4ubGVuZ3RoPjA/ZS5zdW0obikucmVzaGFwZShyLnNoYXBlKTplfSwkYjpmdW5jdGlvbigpe3ZhciBlPXQubXVsKHIudG9GbG9hdCgpKSxuPWhlKGkuc2hhcGUsYSk7cmV0dXJuIG4ubGVuZ3RoPjA/ZS5zdW0obikucmVzaGFwZShpLnNoYXBlKTplfX19KX19KSxtdT1BZSh7bXVsU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJtdWxcIikscj1PZShlLFwiYlwiLFwibXVsXCIpO3JldHVybiB3KG4uc2hhcGUsci5zaGFwZSxcIkVycm9yIGluIG11bHRpcGx5U3RyaWN0OiBcIiksbi5tdWwocil9fSksZ3U9QWUoe3Bvd186ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwiYmFzZVwiLFwicG93XCIpLHI9T2UoZSxcImV4cFwiLFwicG93XCIpLGk9cGUobi5zaGFwZSxyLnNoYXBlKTtyZXR1cm4gdD1uLmNhc3QoX3Qobi5kdHlwZSxyLmR0eXBlKSksZT1yLmNhc3QoX3Qobi5kdHlwZSxyLmR0eXBlKSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0LGUpe3JldHVybiBlKHQucG93KG4scikpfSx7JGJhc2U6biwkZXhwOnJ9LGZ1bmN0aW9uKHQsZSl7dmFyIGE9ZVswXTtyZXR1cm57JGJhc2U6ZnVuY3Rpb24oKXt2YXIgZT1yLnRvRmxvYXQoKSxhPXQubXVsKGUubXVsKG4ucG93KGUuc3ViKGplKDEpKSkpKSxvPWhlKG4uc2hhcGUsaSk7cmV0dXJuIG8ubGVuZ3RoPjAmJihhPWEuc3VtKG8pKSxhLnJlc2hhcGUobi5zaGFwZSl9LCRleHA6ZnVuY3Rpb24oKXt2YXIgZT1uLmdyZWF0ZXIoMCksbz1uLmxvZygpLndoZXJlKGUsWGUobikpLHM9dC5tdWwoYS5tdWwobykpLHU9aGUoci5zaGFwZSxpKTtyZXR1cm4gdS5sZW5ndGg+MCYmKHM9cy5zdW0odSkpLHMucmVzaGFwZShyLnNoYXBlKX19fSl9fSkseXU9QWUoe3Bvd1N0cmljdF86ZnVuY3Rpb24odCxlKXtyZXR1cm4gdyh0LnNoYXBlLGUuc2hhcGUsXCJFcnJvciBpbiBwb3dTdHJpY3Q6IFwiKSx0LnBvdyhlKX19KSx2dT1BZSh7c3F1YXJlZERpZmZlcmVuY2VfOmZ1bmN0aW9uKHQsZSl7dmFyIG4scj1PZSh0LFwiYVwiLFwic3F1YXJlZERpZmZlcmVuY2VcIiksaT1PZShlLFwiYlwiLFwic3F1YXJlZERpZmZlcmVuY2VcIik7cmV0dXJuIG49RXQocixpKSxyPW5bMF0saT1uWzFdLHBlKHIuc2hhcGUsaS5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zcXVhcmVkRGlmZmVyZW5jZShyLGkpfSx7JGE6ciwkYjppfSxmdW5jdGlvbih0KXt2YXIgZT1qZSgyKTtyZXR1cm57JGE6ZnVuY3Rpb24oKXtyZXR1cm4gdC5tdWwoci5zdWIoaSkubXVsKGUpKX0sJGI6ZnVuY3Rpb24oKXtyZXR1cm4gdC5tdWwoaS5zdWIocikubXVsKGUpKX19fSl9fSksYnU9QWUoe3NxdWFyZWREaWZmZXJlbmNlU3RyaWN0XzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJzcXVhcmVkRGlmZmVyZW5jZVN0cmljdFwiKSxyPU9lKGUsXCJiXCIsXCJzcXVhcmVkRGlmZmVyZW5jZVN0cmljdFwiKTtyZXR1cm4gdyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBzcXVhcmVkRGlmZmVyZW5jZVN0cmljdDogXCIpLG4uc3F1YXJlZERpZmZlcmVuY2Uocil9fSksd3U9QWUoe3N1Yl86ZnVuY3Rpb24odCxlKXt2YXIgbixyPU9lKHQsXCJhXCIsXCJzdWJcIiksaT1PZShlLFwiYlwiLFwic3ViXCIpO249RXQocixpKSxyPW5bMF0saT1uWzFdO3ZhciBhPXBlKHIuc2hhcGUsaS5zaGFwZSk7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc3VidHJhY3QocixpKX0seyRhOnIsJGI6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRhOmZ1bmN0aW9uKCl7dmFyIGU9dCxuPWhlKHIuc2hhcGUsYSk7cmV0dXJuIG4ubGVuZ3RoPjAmJihlPWUuc3VtKG4pKSxlLnJlc2hhcGUoci5zaGFwZSl9LCRiOmZ1bmN0aW9uKCl7dmFyIGU9dCxuPWhlKGkuc2hhcGUsYSk7cmV0dXJuIG4ubGVuZ3RoPjAmJihlPWUuc3VtKG4pKSxlLm5lZygpLnJlc2hhcGUoaS5zaGFwZSl9fX0pfX0pLF91PUFlKHtzdWJTdHJpY3RfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UodCxcImFcIixcInN1YlN0cmljdFwiKSxyPU9lKGUsXCJiXCIsXCJzdWJTdHJpY3RcIik7cmV0dXJuIHcobi5zaGFwZSxyLnNoYXBlLFwiRXJyb3IgaW4gc3ViU3RyaWN0OiBcIiksbi5zdWIocil9fSk7dmFyIHh1PUFlKHtsb2dpY2FsQW5kXzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJsb2dpY2FsQW5kXCIsXCJib29sXCIpLHI9T2UoZSxcImJcIixcImxvZ2ljYWxBbmRcIixcImJvb2xcIik7cmV0dXJuIHBlKG4uc2hhcGUsci5zaGFwZSksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5sb2dpY2FsQW5kKG4scil9LHskYTpuLCRiOnJ9KX19KSxFdT1BZSh7bG9naWNhbE5vdF86ZnVuY3Rpb24odCl7dmFyIGU9T2UodCxcInhcIixcImxvZ2ljYWxOb3RcIixcImJvb2xcIik7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubG9naWNhbE5vdChlKX0seyR4OmV9KX19KSxTdT1BZSh7bG9naWNhbE9yXzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJhXCIsXCJsb2dpY2FsT3JcIixcImJvb2xcIikscj1PZShlLFwiYlwiLFwibG9naWNhbE9yXCIsXCJib29sXCIpO3JldHVybiBwZShuLnNoYXBlLHIuc2hhcGUpLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubG9naWNhbE9yKG4scil9LHskYTpuLCRiOnJ9KX19KSxOdT1BZSh7bG9naWNhbFhvcl86ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwiYVwiLFwibG9naWNhbFhvclwiLFwiYm9vbFwiKSxyPU9lKGUsXCJiXCIsXCJsb2dpY2FsWG9yXCIsXCJib29sXCIpO3JldHVybiBwZShuLnNoYXBlLHIuc2hhcGUpLFN1KHQsZSkubG9naWNhbEFuZCh4dSh0LGUpLmxvZ2ljYWxOb3QoKSl9fSksSXU9QWUoe3doZXJlXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UoZSxcImFcIixcIndoZXJlXCIpLGk9T2UobixcImJcIixcIndoZXJlXCIpLGE9T2UodCxcImNvbmRpdGlvblwiLFwid2hlcmVcIixcImJvb2xcIik7cmV0dXJuIHcoci5zaGFwZSxpLnNoYXBlLFwiRXJyb3IgaW4gd2hlcmU6IFwiKSwxPT09YS5yYW5rP2IoYS5zaGFwZVswXT09PXIuc2hhcGVbMF0sXCJUaGUgZmlyc3QgZGltZW5zaW9uIG9mIGBhYCBtdXN0IG1hdGNoIHRoZSBzaXplIG9mIGBjb25kaXRpb25gLlwiKTp3KGEuc2hhcGUsaS5zaGFwZSxcIkVycm9yIGluIHdoZXJlOiBcIiksTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5zZWxlY3QoYSxyLGkpfSx7JGNvbmRpdGlvbjphLCRhOnIsJGI6aX0sZnVuY3Rpb24odCl7cmV0dXJueyRjb25kaXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gWGUoYSkudG9GbG9hdCgpfSwkYTpmdW5jdGlvbigpe3JldHVybiB0Lm11bChhLmNhc3QodC5kdHlwZSkpfSwkYjpmdW5jdGlvbigpe3JldHVybiB0Lm11bChhLmxvZ2ljYWxOb3QoKS5jYXN0KHQuZHR5cGUpKX19fSl9fSksT3U9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBsKHRoaXMsZnVuY3Rpb24oaSl7c3dpdGNoKGkubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCwoZT1PZSh0LFwiY29uZGl0aW9uXCIsXCJ3aGVyZUFzeW5jXCIsXCJib29sXCIpKS5kYXRhKCldO2Nhc2UgMTpyZXR1cm4gbj1pLnNlbnQoKSxyPXNvKGUuc2hhcGUsbiksdCE9PWUmJmUuZGlzcG9zZSgpLFsyLHJdfX0pfSl9O3ZhciBrdT1BZSh7ZWx1XzpmdW5jdGlvbih0KXt2YXIgZT1PZSh0LFwieFwiLFwiZWx1XCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIG4odC5lbHUoZSkpfSx7JHg6ZX0sZnVuY3Rpb24odCxlKXt2YXIgbj1lWzBdO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKGUpe3JldHVybiBlLmVsdURlcih0LG4pfSx7ZHk6dCx5Om59KX19fSl9fSksQXU9QWUoe2xlYWt5UmVsdV86ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0uMik7dmFyIG49T2UodCxcInhcIixcImxlYWt5UmVsdVwiKTtyZXR1cm4gdXUoamUoZSkubXVsKG4pLG4pfX0pLEN1PUFlKHtwcmVsdV86ZnVuY3Rpb24odCxlKXt2YXIgbj1PZSh0LFwieFwiLFwicHJlbHVcIikscj1PZShlLFwiYWxwaGFcIixcInByZWx1XCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnByZWx1KG4scil9LHskeDpuLCRhbHBoYTpyfSxmdW5jdGlvbih0KXt2YXIgZT1uLmdyZWF0ZXIoMCk7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIEl1KGUsdCx0Lm11bChyKSl9LCRhbHBoYTpmdW5jdGlvbigpe3ZhciBpPUl1KGUsWGUodCksdC5tdWwobikpLGE9aGUoci5zaGFwZSx0LnNoYXBlKTtyZXR1cm4gYS5sZW5ndGg+MCYmKGk9aS5zdW0oYSkpLGkucmVzaGFwZShyLnNoYXBlKX19fSl9fSksUHU9QWUoe3JlbHVfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJyZWx1XCIpO3JldHVyblwiYm9vbFwiPT09ZS5kdHlwZT9lLnRvSW50KCk6THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5yZWx1KGUpfSx7JHg6ZX0sZnVuY3Rpb24odCl7dmFyIG49ZS5zdGVwKCk7cmV0dXJueyR4OmZ1bmN0aW9uKCl7cmV0dXJuIHQubXVsU3RyaWN0KG4udG9GbG9hdCgpKX19fSl9fSksVHU9QWUoe3NlbHVfOmZ1bmN0aW9uKHQpe3ZhciBlPU9lKHQsXCJ4XCIsXCJzZWx1XCIpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNlbHUoZSl9LHskeDplfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXt2YXIgbj1lLmdyZWF0ZXIoamUoMCkpLHI9amUoaWEpLGk9amUoYWEpLGE9dC5tdWwoaSksbz10Lm11bChyKS5tdWwoZS50b0Zsb2F0KCkuZXhwKCkpO3JldHVybiBJdShuLGEsbyl9fX0pfX0pO3ZhciBSdT1BZSh7dHJhbnNwb3NlXzpmdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJ4XCIsXCJ0cmFuc3Bvc2VcIik7cmV0dXJuIG51bGw9PWUmJihlPW4uc2hhcGUubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV9KS5yZXZlcnNlKCkpLGIobi5yYW5rPT09ZS5sZW5ndGgsXCJFcnJvciBpbiB0cmFuc3Bvc2U6IHJhbmsgb2YgaW5wdXQgXCIrbi5yYW5rK1wiIG11c3QgbWF0Y2ggbGVuZ3RoIG9mIHBlcm0gXCIrZStcIi5cIiksZS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2IodD49MCYmdDxuLnJhbmssXCJBbGwgZW50cmllcyBpbiAncGVybScgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIFwiKyhuLnJhbmstMSkrXCIgYnV0IGdvdCBcIitlKX0pLG4ucmFuazw9MT9uLmNsb25lKCk6THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC50cmFuc3Bvc2UobixlKX0seyR4Om59LGZ1bmN0aW9uKHQpe3ZhciBuPWNlKGUpO3JldHVybnskeDpmdW5jdGlvbigpe3JldHVybiB0LnRyYW5zcG9zZShuKX19fSl9fSk7dmFyIER1PUFlKHtsb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbl86ZnVuY3Rpb24odCxlLG4scixpKXt2b2lkIDA9PT1lJiYoZT01KSx2b2lkIDA9PT1uJiYobj0xKSx2b2lkIDA9PT1yJiYocj0xKSx2b2lkIDA9PT1pJiYoaT0uNSk7dmFyIGE9T2UodCxcInhcIixcImxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uXCIpO2IoND09PWEucmFua3x8Mz09PWEucmFuayxcIkVycm9yIGluIGxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uOiB4IG11c3QgYmUgcmFuayAzIG9yIDQgYnV0IGdvdFxcbiAgICAgICAgICAgICAgIHJhbmsgXCIrYS5yYW5rK1wiLlwiKSxiKE4oZSksXCJFcnJvciBpbiBsb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbjogZGVwdGhSYWRpdXMgbXVzdCBiZSBhbiBpbnRlZ2VyXFxuICAgICAgICAgICAgICAgICAgICAgYnV0IGdvdCBkZXB0aFJhZGl1cyBcIitlK1wiLlwiKTt2YXIgbz1hLHM9ITE7Mz09PWEucmFuayYmKHM9ITAsbz1hLmFzNEQoMSxhLnNoYXBlWzBdLGEuc2hhcGVbMV0sYS5zaGFwZVsyXSkpO3ZhciB1PUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCxhKXtyZXR1cm4gYSh0LmxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uNEQobyxlLG4scixpKSl9LHt4NEQ6b30sZnVuY3Rpb24odCxhKXt2YXIgcz1hWzBdO3JldHVybnt4NEQ6ZnVuY3Rpb24oKXtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbihhKXtyZXR1cm4gYS5MUk5HcmFkKHQsbyxzLGUsbixyLGkpfSx7fSl9fX0pO3JldHVybiBzP3UuYXMzRCh1LnNoYXBlWzFdLHUuc2hhcGVbMl0sdS5zaGFwZVszXSk6dX19KTt2YXIgTXU9QWUoe25vcm1fOmZ1bmN0aW9uKHQsZSxuLHIpe3ZvaWQgMD09PWUmJihlPVwiZXVjbGlkZWFuXCIpLHZvaWQgMD09PW4mJihuPW51bGwpLHZvaWQgMD09PXImJihyPSExKTt2YXIgaT1mdW5jdGlvbiB0KGUsbixyKXtpZih2b2lkIDA9PT1yJiYocj1udWxsKSwwPT09ZS5yYW5rKXJldHVybiBlLmFicygpO2lmKDEhPT1lLnJhbmsmJm51bGw9PT1yKXJldHVybiB0KGUucmVzaGFwZShbLTFdKSxuLHIpO2lmKDE9PT1lLnJhbmt8fFwibnVtYmVyXCI9PXR5cGVvZiByfHxyIGluc3RhbmNlb2YgQXJyYXkmJjE9PT1yLmxlbmd0aCl7aWYoMT09PW4pcmV0dXJuIGUuYWJzKCkuc3VtKHIpO2lmKG49PT0xLzApcmV0dXJuIGUuYWJzKCkubWF4KHIpO2lmKG49PT0tMS8wKXJldHVybiBlLmFicygpLm1pbihyKTtpZihcImV1Y2xpZGVhblwiPT09bnx8Mj09PW4pcmV0dXJuIGUuYWJzKCkucG93KGplKDIsXCJpbnQzMlwiKSkuc3VtKHIpLnNxcnQoKTt0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBub3JtOiBpbnZhbGlkIG9yZCB2YWx1ZTogXCIrbil9aWYociBpbnN0YW5jZW9mIEFycmF5JiYyPT09ci5sZW5ndGgpe2lmKDE9PT1uKXJldHVybiBlLmFicygpLnN1bShyWzBdKS5tYXgoclsxXS0xKTtpZihuPT09MS8wKXJldHVybiBlLmFicygpLnN1bShyWzFdKS5tYXgoclswXSk7aWYobj09PS0xLzApcmV0dXJuIGUuYWJzKCkuc3VtKHJbMV0pLm1pbihyWzBdKTtpZihcImZyb1wiPT09bnx8XCJldWNsaWRlYW5cIj09PW4pcmV0dXJuIGUuc3F1YXJlKCkuc3VtKHIpLnNxcnQoKTt0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBpbiBub3JtOiBpbnZhbGlkIG9yZCB2YWx1ZTogXCIrbil9dGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgaW4gbm9ybTogaW52YWxpZCBheGlzOiBcIityKX0odD1PZSh0LFwieFwiLFwibm9ybVwiKSxlLG4pLGE9aS5zaGFwZTtpZihyKXt2YXIgbz1QKG4sdC5zaGFwZSk7YT1vZShpLnNoYXBlLG8pfXJldHVybiBpLnJlc2hhcGUoYSl9fSk7ZnVuY3Rpb24ganUodCxlKXtmb3IodmFyIG49W10scj10O3I8ZTsrK3Ipbi5wdXNoKHIpO3JldHVybiBufWZ1bmN0aW9uIEJ1KHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDsrK24pZm9yKHZhciByPTA7cjx0W25dLmxlbmd0aDsrK3IpZS5wdXNoKHRbbl1bcl0pO3JldHVybiBlfXZhciBMdT1BZSh7Z2F0aGVyXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49MCk7dmFyIHI9T2UodCxcInhcIixcImdhdGhlclwiKSxpPU9lKGUsXCJpbmRpY2VzXCIsXCJnYXRoZXJcIixcImludDMyXCIpO3JldHVybiBuPVAobixyLnNoYXBlKVswXSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmdhdGhlcihyLGksbil9LHskeDpyfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtpZigwPT09bilyZXR1cm4genUodCxpLHIuc2hhcGVbbl0pO3ZhciBlPXIuc2hhcGUsYT1pLnNpemUsbz1lLnNsaWNlKDAsbikscz1vLmxlbmd0aCx1PWUuc2xpY2UobixlLmxlbmd0aCkuc2xpY2UoMSksYz11Lmxlbmd0aCxsPWp1KDAscyksZj1qdShzKzEscysxK2MpLGg9QnUoW28sW2FdLHVdKSxwPXQucmVzaGFwZShoKSxkPWkucmVzaGFwZShbYV0pLG09QnUoW1tzXSxsLGZdKSxnPXAudHJhbnNwb3NlKG0pLHk9enUoZyxkLHIuc2hhcGVbbl0pLHY9Y2UobSk7cmV0dXJuIHkudHJhbnNwb3NlKHYpfX19KX19KSx6dT1BZSh7dW5zb3J0ZWRTZWdtZW50U3VtXzpmdW5jdGlvbih0LGUsbil7dmFyIHI9T2UodCxcInhcIixcInVuc29ydGVkU2VnbWVudFN1bVwiKSxpPU9lKGUsXCJzZWdtZW50SWRzXCIsXCJ1bnNvcnRlZFNlZ21lbnRTdW1cIixcImludDMyXCIpO3JldHVybiBiKE4obiksXCJudW1TZWdtZW50cyBtdXN0IGJlIG9mIGR0eXBlIGludFwiKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnVuc29ydGVkU2VnbWVudFN1bShyLGksbil9LHskeDpyfSxmdW5jdGlvbih0KXtyZXR1cm57JHg6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dXUoZSxYZShlKSkscj1MdSh0LG4pLGk9SHMoZSxqZSgwLFwiaW50MzJcIikpLGE9ci5yYW5rLWkucmFuayxvPTA7bzxhOysrbylpPUZhKGksbysxKTtpPXh1KGksV2Uoci5zaGFwZSxcImJvb2xcIikpO3ZhciBzPVhlKHIpO3JldHVybiBJdShpLHIscyl9KHQsaSl9fX0pfX0pO3ZhciBGdT1BZSh7YmFzaWNMU1RNQ2VsbF86ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZhciBvPU9lKHQsXCJmb3JnZXRCaWFzXCIsXCJiYXNpY0xTVE1DZWxsXCIpLHM9T2UoZSxcImxzdG1LZXJuZWxcIixcImJhc2ljTFNUTUNlbGxcIiksdT1PZShuLFwibHN0bUJpYXNcIixcImJhc2ljTFNUTUNlbGxcIiksYz1PZShyLFwiZGF0YVwiLFwiYmFzaWNMU1RNQ2VsbFwiKSxsPU9lKGksXCJjXCIsXCJiYXNpY0xTVE1DZWxsXCIpLGY9T2UoYSxcImhcIixcImJhc2ljTFNUTUNlbGxcIiksaD1jLmNvbmNhdChmLDEpLm1hdE11bChzKS5hZGQodSkscD1oLnNoYXBlWzBdLGQ9aC5zaGFwZVsxXS80LG09W3AsZF0sZz1oLnNsaWNlKFswLDBdLG0pLHk9aC5zbGljZShbMCxkXSxtKSx2PWguc2xpY2UoWzAsMipkXSxtKSxiPWguc2xpY2UoWzAsMypkXSxtKSx3PWcuc2lnbW9pZCgpLm11bFN0cmljdCh5LnRhbmgoKSkuYWRkU3RyaWN0KGwubXVsU3RyaWN0KG8uYWRkKHYpLnNpZ21vaWQoKSkpO3JldHVyblt3LHcudGFuaCgpLm11bFN0cmljdChiLnNpZ21vaWQoKSldfX0pLFV1PUFlKHttdWx0aVJOTkNlbGxfOmZ1bmN0aW9uKHQsZSxuLHIpe2Zvcih2YXIgaT1PZShlLFwiZGF0YVwiLFwibXVsdGlSTk5DZWxsXCIpLGE9a2UobixcImNcIixcIm11bHRpUk5OQ2VsbFwiKSxvPWtlKHIsXCJoXCIsXCJtdWx0aVJOTkNlbGxcIikscz1pLHU9W10sYz0wO2M8dC5sZW5ndGg7YysrKXt2YXIgbD10W2NdKHMsYVtjXSxvW2NdKTt1LnB1c2gobFswXSksdS5wdXNoKGxbMV0pLHM9bFsxXX12YXIgZj1bXSxoPVtdO2ZvcihjPTA7Yzx1Lmxlbmd0aDtjKz0yKWYucHVzaCh1W2NdKSxoLnB1c2godVtjKzFdKTtyZXR1cm5bZixoXX19KTt2YXIgVnU9QWUoe21vdmluZ0F2ZXJhZ2VfOmZ1bmN0aW9uKHQsZSxuLHIsaSl7dm9pZCAwPT09aSYmKGk9ITApO3ZhciBhPU9lKHQsXCJ2XCIsXCJtb3ZpbmdBdmVyYWdlXCIpLG89T2UoZSxcInhcIixcIm1vdmluZ0F2ZXJhZ2VcIikscz1PZShuLFwiZGVjYXlcIixcIm1vdmluZ0F2ZXJhZ2VcIik7KGZ1bmN0aW9uKHQsZSl7Yih0LmR0eXBlPT09ZS5kdHlwZSxcIlRoZSBkdHlwZXMgb2YgdGhlIGZpcnN0KFwiK3QuZHR5cGUrXCIpIGFuZCBzZWNvbmQoXCIrZS5kdHlwZStcIikgaW5wdXQgbXVzdCBtYXRjaFwiKX0pKGEsbyksYihTKGEuc2hhcGUsby5zaGFwZSksXCJTaGFwZSBtaXNtYXRjaCBpbiB2IGFuZCB4XCIpO3ZhciB1PWplKDEpLGM9dS5zdWIocyksbD1vLnN1YihhKS5tdWwoYyk7aWYoaSl7YihudWxsIT1yLFwiV2hlbiB1c2luZyB6ZXJvRGViaWFzOiB0cnVlLCBzdGVwIGlzIHJlcXVpcmVkLlwiKTt2YXIgZj1PZShyLFwic3RlcFwiLFwibW92aW5nQXZlcmFnZVwiKTtsPWwuZGl2KHUuc3ViKGd1KHMsZikpKX1yZXR1cm4gYS5hZGQobCl9fSk7dmFyIFd1PUFlKHtzdHJpZGVkU2xpY2VfOmZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyx1KXtpZih2b2lkIDA9PT1pJiYoaT0wKSx2b2lkIDA9PT1hJiYoYT0wKSx2b2lkIDA9PT1vJiYobz0wKSx2b2lkIDA9PT1zJiYocz0wKSx2b2lkIDA9PT11JiYodT0wKSwwIT09byl0aHJvdyBuZXcgRXJyb3IoXCJlbGxpcHNpcyBtYXNrIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpO2lmKDAhPT1zKXRocm93IG5ldyBFcnJvcihcIm5ldyBheGlzIG1hc2sgaXMgbm90IHlldCBzdXBwb3J0ZWRcIik7dmFyIGM9T2UodCxcInhcIixcInN0cmlkZWRTbGljZVwiKTtpZihyLmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiAxPT09dH0pKXt2YXIgbD13ZShjLnNoYXBlLGUsbixyLGksYSxvLHMsdSksZj1sWzBdLGg9bFsxXSxwPWxbMl0sZD1oLmZpbHRlcihmdW5jdGlvbih0LGUpe3JldHVybi0xPT09cC5pbmRleE9mKGUpfSk7cmV0dXJuIElzKGMsZixoKS5yZXNoYXBlKGQpfXJldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnN0cmlkZWRTbGljZShjLGUsbixyLGksYSxvLHMsdSl9LHskeDpjfSl9fSk7dmFyIHF1PUFlKHt0b3BrXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9MSksdm9pZCAwPT09biYmKG49ITApO3ZhciByPU9lKHQsXCJ4XCIsXCJ0b3BrXCIpO2lmKDA9PT1yLnJhbmspdGhyb3cgbmV3IEVycm9yKFwidG9waygpIGV4cGVjdHMgdGhlIGlucHV0IHRvIGJlIG9mIHJhbmsgMSBvciBoaWdoZXJcIik7dmFyIGk9ci5zaGFwZVtyLnNoYXBlLmxlbmd0aC0xXTtpZihlPmkpdGhyb3cgbmV3IEVycm9yKFwiJ2snIHBhc3NlZCB0byB0b3BrKCkgbXVzdCBiZSA8PSB0aGUgbGFzdCBkaW1lbnNpb24gKFwiK2krXCIpIGJ1dCBnb3QgXCIrZSk7dmFyIGE9THQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC50b3BrKHIsZSxuKX0seyR4OnJ9KTtyZXR1cm57dmFsdWVzOmFbMF0saW5kaWNlczphWzFdfX19KTt2YXIgJHU9QWUoe3NjYXR0ZXJORF86ZnVuY3Rpb24odCxlLG4pe3ZhciByPU9lKHQsXCJpbmRpY2VzXCIsXCJzY2F0dGVyTkRcIixcImludDMyXCIpLGk9T2UoZSxcInVwZGF0ZXNcIixcInNjYXR0ZXJORFwiKTtyZXR1cm4gdmUoaSxyLG4pLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2NhdHRlck5EKHIsaSxuKX0seyRpbmRpY2VzOnIsJHVwZGF0ZXM6aX0pfX0pO3ZhciBIdT1BZSh7ZmZ0XzpmdW5jdGlvbih0KXtiKFwiY29tcGxleDY0XCI9PT10LmR0eXBlLFwiVGhlIGR0eXBlIGZvciB0Zi5zcGVjdHJhbC5mZnQoKSBtdXN0IGJlIGNvbXBsZXg2NCBidXQgZ290IFwiK3QuZHR5cGUrXCIuXCIpO3ZhciBlPXQuc2hhcGVbdC5zaGFwZS5sZW5ndGgtMV0sbj10LnNpemUvZSxyPXQuYXMyRChuLGUpO3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQpe3JldHVybiB0LmZmdChyKX0se2lucHV0OnR9KS5yZXNoYXBlKHQuc2hhcGUpfX0pLEt1PUFlKHtpZmZ0XzpmdW5jdGlvbih0KXtiKFwiY29tcGxleDY0XCI9PT10LmR0eXBlLFwiVGhlIGR0eXBlIGZvciB0Zi5zcGVjdHJhbC5pZmZ0KCkgbXVzdCBiZSBjb21wbGV4NjQgYnV0IGdvdCBcIit0LmR0eXBlK1wiLlwiKTt2YXIgZT10LnNoYXBlW3Quc2hhcGUubGVuZ3RoLTFdLG49dC5zaXplL2Uscj10LmFzMkQobixlKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5pZmZ0KHIpfSx7aW5wdXQ6dH0pLnJlc2hhcGUodC5zaGFwZSl9fSksR3U9QWUoe3JmZnRfOmZ1bmN0aW9uKHQpe2IoXCJmbG9hdDMyXCI9PT10LmR0eXBlLFwiVGhlIGR0eXBlIGZvciByZmZ0KCkgbXVzdCBiZSByZWFsIHZhbHVlIGJ1dFxcbiAgICBnb3QgXCIrdC5kdHlwZSk7dmFyIGU9dC5zaGFwZVt0LnNoYXBlLmxlbmd0aC0xXSxuPXQuc2l6ZS9lLHI9dC56ZXJvc0xpa2UoKSxpPVRlKHQscikuYXMyRChuLGUpLGE9SHUoaSksbz1NYXRoLmZsb29yKGUvMikrMSxzPVJlKGEpLHU9RGUoYSksYz1zLnNwbGl0KFtvLGUtb10scy5zaGFwZS5sZW5ndGgtMSksbD11LnNwbGl0KFtvLGUtb10sdS5zaGFwZS5sZW5ndGgtMSksZj10LnNoYXBlLnNsaWNlKCk7cmV0dXJuIGZbdC5zaGFwZS5sZW5ndGgtMV09byxUZShjWzBdLGxbMF0pLnJlc2hhcGUoZil9fSksWHU9QWUoe2lyZmZ0XzpmdW5jdGlvbih0KXt2YXIgZT10LnNoYXBlW3Quc2hhcGUubGVuZ3RoLTFdLG49dC5zaXplL2U7aWYoZTw9Mil7dmFyIHI9dC5hczJEKG4sZSksaT1LdShyKTtyZXR1cm4gUmUoaSl9dmFyIGE9W24sMiooZS0xKV0sbz1SZSh0KS5hczJEKG4sZSkscz1EZSh0KS5hczJEKG4sZSksdT1vLnNsaWNlKFswLDFdLFtuLGUtMl0pLnJldmVyc2UoMSksYz1zLnNsaWNlKFswLDFdLFtuLGUtMl0pLnJldmVyc2UoMSkubXVsKGplKC0xKSksbD1vLmNvbmNhdCh1LDEpLGY9cy5jb25jYXQoYywxKTtyZXR1cm4gcj1UZShsLGYpLmFzMkQoYVswXSxhWzFdKSxpPUt1KHIpLFJlKGkpfX0pLFl1PU9iamVjdC5mcmVlemUoe2ZmdDpIdSxpZmZ0Okt1LHJmZnQ6R3UsaXJmZnQ6WHV9KTt2YXIgSnU9QWUoe3NwYXJzZVRvRGVuc2VfOmZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPU9lKHQsXCJzcGFyc2VJbmRpY2VzXCIsXCJzcGFyc2VUb0RlbnNlXCIsXCJpbnQzMlwiKSxhPU9lKGUsXCJzcGFyc2VWYWx1ZXNcIixcInNwYXJzZVRvRGVuc2VcIiksbz1PZShyLFwiZGVmYXVsdFZhbHVlXCIsXCJzcGFyc2VUb0RlbnNlXCIsYS5kdHlwZSk7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIpe2lmKFwiaW50MzJcIiE9PXQuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwidGYuc3BhcnNlVG9EZW5zZSgpIGV4cGVjdHMgdGhlIGluZGljZXMgdG8gYmUgaW50MzIgdHlwZSwgYnV0IHRoZSBkdHlwZSB3YXMgXCIrdC5kdHlwZStcIi5cIik7aWYodC5yYW5rPjIpdGhyb3cgbmV3IEVycm9yKFwic3BhcnNlSW5kaWNlcyBzaG91bGQgYmUgYSBzY2FsYXIsIHZlY3Rvciwgb3IgbWF0cml4LCBidXQgZ290IHNoYXBlIFwiK3Quc2hhcGUrXCIuXCIpO3ZhciBpPXQucmFuaz4wP3Quc2hhcGVbMF06MSxhPXQucmFuaz4xP3Quc2hhcGVbMV06MTtpZihuLmxlbmd0aCE9PWEpdGhyb3cgbmV3IEVycm9yKFwib3V0cHV0U2hhcGUgaGFzIGluY29ycmVjdCBudW1iZXIgb2YgZWxlbWVudHM6LCBcIituLmxlbmd0aCtcIiwgc2hvdWxkIGJlOiBcIithK1wiLlwiKTt2YXIgbz1lLnNpemU7aWYoMCE9PWUucmFuayYmKDEhPT1lLnJhbmt8fG8hPT1pKSl0aHJvdyBuZXcgRXJyb3IoXCJzcGFyc2VWYWx1ZXMgaGFzIGluY29ycmVjdCBzaGFwZSBcIitlLnNoYXBlK1wiLCBzaG91bGQgYmUgW10gb3IgW1wiK2krXCJdXCIpO2lmKGUuZHR5cGUhPT1yLmR0eXBlKXRocm93IG5ldyBFcnJvcihcInNwYXJzZVZhbHVlcy5kdHlwZSBtdXN0IG1hdGNoIGRlZmF1bHRWYWx1ZXMuZHR5cGVcIil9KGksYSxuLG8pLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc3BhcnNlVG9EZW5zZShpLGEsbixvKX0seyRzcGFyc2VJbmRpY2VzOmksJHNwYXJzZVZhbHVlczphLCRkZWZhdWx0VmFsdWU6b30pfX0pO3ZhciBadSxRdT1BZSh7Z2F0aGVyTkRfOmZ1bmN0aW9uKHQsZSl7dmFyIG49T2UoZSxcImluZGljZXNcIixcImdhdGhlck5EXCIsXCJpbnQzMlwiKSxyPU9lKHQsXCJ4XCIsXCJnYXRoZXJORFwiKTtyZXR1cm4gTHQuZW5naW5lLnJ1bktlcm5lbChmdW5jdGlvbih0KXtyZXR1cm4gdC5nYXRoZXJORChyLG4pfSx7JHg6ciwkaW5kaWNlczpufSl9fSk7IWZ1bmN0aW9uKHQpe3RbdC5OT05FPTBdPVwiTk9ORVwiLHRbdC5NRUFOPTFdPVwiTUVBTlwiLHRbdC5TVU09Ml09XCJTVU1cIix0W3QuU1VNX0JZX05PTlpFUk9fV0VJR0hUUz0zXT1cIlNVTV9CWV9OT05aRVJPX1dFSUdIVFNcIn0oWnV8fChadT17fSkpO3ZhciB0Yz1BZSh7YWJzb2x1dGVEaWZmZXJlbmNlXzpmdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1yJiYocj1adS5TVU1fQllfTk9OWkVST19XRUlHSFRTKTt2YXIgaT1PZSh0LFwibGFiZWxzXCIsXCJhYnNvbHV0ZURpZmZlcmVuY2VcIiksYT1PZShlLFwicHJlZGljdGlvbnNcIixcImFic29sdXRlRGlmZmVyZW5jZVwiKSxvPW51bGw7bnVsbCE9biYmKG89T2UobixcIndlaWdodHNcIixcImFic29sdXRlRGlmZmVyZW5jZVwiKSksdyhpLnNoYXBlLGEuc2hhcGUsXCJFcnJvciBpbiBhYnNvbHV0ZURpZmZlcmVuY2U6IFwiKTt2YXIgcz1pLnN1YihhKS5hYnMoKTtyZXR1cm4gZWMocyxvLHIpfX0pLGVjPUFlKHtjb21wdXRlV2VpZ2h0ZWRMb3NzXzpmdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49WnUuU1VNX0JZX05PTlpFUk9fV0VJR0hUUyk7dmFyIHI9T2UodCxcImxvc3Nlc1wiLFwiY29tcHV0ZVdlaWdodGVkTG9zc1wiKSxpPW51bGw7bnVsbCE9ZSYmKGk9T2UoZSxcIndlaWdodHNcIixcImNvbXB1dGVXZWlnaHRlZExvc3NcIikpO3ZhciBhPW51bGw9PWk/cjpyLm11bChpKTtpZihuPT09WnUuTk9ORSlyZXR1cm4gYTtpZihuPT09WnUuU1VNKXJldHVybiBhLnN1bSgpO2lmKG49PT1adS5NRUFOKXtpZihudWxsPT1pKXJldHVybiBhLm1lYW4oKTt2YXIgbz1FKHIuc2hhcGUpL0UoaS5zaGFwZSkscz1hLnN1bSgpLmRpdihpLnN1bSgpKTtyZXR1cm4gbz4xP3MuZGl2KGplKG8pKTpzfWlmKG49PT1adS5TVU1fQllfTk9OWkVST19XRUlHSFRTKXtpZihudWxsPT1pKXJldHVybiBhLnN1bSgpLmRpdihqZShyLnNpemUpKTt2YXIgdT1pLm11bChXZShyLnNoYXBlKSkubm90RXF1YWwoamUoMCkpLnN1bSgpLnRvRmxvYXQoKTtyZXR1cm4gYS5zdW0oKS5kaXYodSl9dGhyb3cgRXJyb3IoXCJVbmtub3duIHJlZHVjdGlvbjogXCIrbil9fSksbmM9QWUoe2Nvc2luZURpc3RhbmNlXzpmdW5jdGlvbih0LGUsbixyLGkpe3ZvaWQgMD09PWkmJihpPVp1LlNVTV9CWV9OT05aRVJPX1dFSUdIVFMpO3ZhciBhPU9lKHQsXCJsYWJlbHNcIixcImNvc2luZURpc3RhbmNlXCIpLG89T2UoZSxcInByZWRpY3Rpb25zXCIsXCJjb3NpbmVEaXN0YW5jZVwiKSxzPW51bGw7bnVsbCE9ciYmKHM9T2UocixcIndlaWdodHNcIixcImNvc2luZURpc3RhbmNlXCIpKSx3KGEuc2hhcGUsby5zaGFwZSxcIkVycm9yIGluIGNvc2luZURpc3RhbmNlOiBcIik7dmFyIHU9amUoMSkuc3ViKGEubXVsKG8pLnN1bShuLCEwKSk7cmV0dXJuIGVjKHUscyxpKX19KSxyYz1BZSh7aGluZ2VMb3NzXzpmdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1yJiYocj1adS5TVU1fQllfTk9OWkVST19XRUlHSFRTKTt2YXIgaT1PZSh0LFwibGFiZWxzXCIsXCJoaW5nZUxvc3NcIiksYT1PZShlLFwicHJlZGljdGlvbnNcIixcImhpbmdlTG9zc1wiKSxvPW51bGw7bnVsbCE9biYmKG89T2UobixcIndlaWdodHNcIixcImhpbmdlTG9zc1wiKSksdyhpLnNoYXBlLGEuc2hhcGUsXCJFcnJvciBpbiBoaW5nZUxvc3M6IFwiKTt2YXIgcz1qZSgxKTtpPWplKDIpLm11bChpKS5zdWIocyk7dmFyIHU9cy5zdWIoaS5tdWwoYSkpLnJlbHUoKTtyZXR1cm4gZWModSxvLHIpfX0pLGljPUFlKHtodWJlckxvc3NfOmZ1bmN0aW9uKHQsZSxuLHIsaSl7dm9pZCAwPT09ciYmKHI9MSksdm9pZCAwPT09aSYmKGk9WnUuU1VNX0JZX05PTlpFUk9fV0VJR0hUUyk7dmFyIGE9T2UodCxcImxhYmVsc1wiLFwiaHViZXJMb3NzXCIpLG89T2UoZSxcInByZWRpY3Rpb25zXCIsXCJodWJlckxvc3NcIikscz1udWxsO251bGwhPW4mJihzPU9lKG4sXCJ3ZWlnaHRzXCIsXCJodWJlckxvc3NcIikpLHcoYS5zaGFwZSxvLnNoYXBlLFwiRXJyb3IgaW4gaHViZXJMb3NzOiBcIik7dmFyIHU9amUociksYz1vLnN1YihhKS5hYnMoKSxsPWx1KGMsdSksZj1jLnN1YihsKSxoPWplKC41KS5tdWwobC5zcXVhcmUoKSkuYWRkKHUubXVsKGYpKTtyZXR1cm4gZWMoaCxzLGkpfX0pLGFjPUFlKHtsb2dMb3NzXzpmdW5jdGlvbih0LGUsbixyLGkpe3ZvaWQgMD09PXImJihyPTFlLTcpLHZvaWQgMD09PWkmJihpPVp1LlNVTV9CWV9OT05aRVJPX1dFSUdIVFMpO3ZhciBhPU9lKHQsXCJsYWJlbHNcIixcImxvZ0xvc3NcIiksbz1PZShlLFwicHJlZGljdGlvbnNcIixcImxvZ0xvc3NcIikscz1udWxsO251bGwhPW4mJihzPU9lKG4sXCJ3ZWlnaHRzXCIsXCJsb2dMb3NzXCIpKSx3KGEuc2hhcGUsby5zaGFwZSxcIkVycm9yIGluIGxvZ0xvc3M6IFwiKTt2YXIgdT1qZSgxKSxjPWplKHIpLGw9YS5tdWwoby5hZGQoYykubG9nKCkpLm5lZygpLnN1Yih1LnN1YihhKS5tdWwodS5zdWIobykuYWRkKGMpLmxvZygpKSk7cmV0dXJuIGVjKGwscyxpKX19KSxvYz1BZSh7bWVhblNxdWFyZWRFcnJvcl86ZnVuY3Rpb24odCxlLG4scil7dm9pZCAwPT09ciYmKHI9WnUuU1VNX0JZX05PTlpFUk9fV0VJR0hUUyk7dmFyIGk9T2UodCxcImxhYmVsc1wiLFwibWVhblNxdWFyZWRFcnJvclwiKSxhPU9lKGUsXCJwcmVkaWN0aW9uc1wiLFwibWVhblNxdWFyZWRFcnJvclwiKSxvPW51bGw7bnVsbCE9biYmKG89T2UobixcIndlaWdodHNcIixcIm1lYW5TcXVhcmVkRXJyb3JcIikpLHcoaS5zaGFwZSxhLnNoYXBlLFwiRXJyb3IgaW4gbWVhblNxdWFyZWRFcnJvcjogXCIpO3ZhciBzPWkuc3F1YXJlZERpZmZlcmVuY2UoYSk7cmV0dXJuIGVjKHMsbyxyKX19KSxzYz1BZSh7c2lnbW9pZENyb3NzRW50cm9weV86ZnVuY3Rpb24odCxlLG4scixpKXt2b2lkIDA9PT1yJiYocj0wKSx2b2lkIDA9PT1pJiYoaT1adS5TVU1fQllfTk9OWkVST19XRUlHSFRTKTt2YXIgYT1PZSh0LFwibXVsdGlDbGFzc0xhYmVsc1wiLFwic2lnbW9pZENyb3NzRW50cm9weVwiKSxvPU9lKGUsXCJsb2dpdHNcIixcInNpZ21vaWRDcm9zc0VudHJvcHlcIikscz1udWxsO2lmKG51bGwhPW4mJihzPU9lKG4sXCJ3ZWlnaHRzXCIsXCJzaWdtb2lkQ3Jvc3NFbnRyb3B5XCIpKSx3KGEuc2hhcGUsby5zaGFwZSxcIkVycm9yIGluIHNpZ21vaWRDcm9zc0VudHJvcHk6IFwiKSxyPjApe3ZhciB1PWplKHIpLGM9amUoMSksbD1qZSguNSk7YT1hLm11bChjLnN1Yih1KSkuYWRkKGwubXVsKHUpKX12YXIgZj1mdW5jdGlvbih0LGUpe3ZhciBuPU9lKHQsXCJsYWJlbHNcIixcInNpZ21vaWRDcm9zc0VudHJvcHlXaXRoTG9naXRzXCIpLHI9T2UoZSxcImxvZ2l0c1wiLFwic2lnbW9pZENyb3NzRW50cm9weVdpdGhMb2dpdHNcIik7dyhuLnNoYXBlLHIuc2hhcGUsXCJFcnJvciBpbiBzaWdtb2lkQ3Jvc3NFbnRyb3B5V2l0aExvZ2l0czogXCIpO3ZhciBpPXIucmVsdSgpLGE9ci5tdWwobiksbz1yLmFicygpLm5lZygpLmV4cCgpLmxvZzFwKCk7cmV0dXJuIGkuc3ViKGEpLmFkZChvKX0oYSxvKTtyZXR1cm4gZWMoZixzLGkpfX0pLHVjPUFlKHtzb2Z0bWF4Q3Jvc3NFbnRyb3B5XzpmdW5jdGlvbih0LGUsbixyLGkpe3ZvaWQgMD09PXImJihyPTApLHZvaWQgMD09PWkmJihpPVp1LlNVTV9CWV9OT05aRVJPX1dFSUdIVFMpO3ZhciBhPU9lKHQsXCJvbmVob3RMYWJlbHNcIixcInNvZnRtYXhDcm9zc0VudHJvcHlcIiksbz1PZShlLFwibG9naXRzXCIsXCJzb2Z0bWF4Q3Jvc3NFbnRyb3B5XCIpLHM9bnVsbDtpZihudWxsIT1uJiYocz1PZShuLFwid2VpZ2h0c1wiLFwic29mdG1heENyb3NzRW50cm9weVwiKSksdyhhLnNoYXBlLG8uc2hhcGUsXCJFcnJvciBpbiBzb2Z0bWF4Q3Jvc3NFbnRyb3B5OiBcIikscj4wKXt2YXIgdT1qZShyKSxjPWplKDEpLGw9amUoYS5zaGFwZVsxXSk7YT1hLm11bChjLnN1Yih1KSkuYWRkKHUuZGl2KGwpKX12YXIgZj1mdW5jdGlvbih0LGUsbil7aWYodm9pZCAwPT09biYmKG49LTEpLC0xPT09biYmKG49ZS5yYW5rLTEpLG4hPT1lLnJhbmstMSl0aHJvdyBFcnJvcihcIlNvZnRtYXggY3Jvc3MgZW50cm9weSBhbG9uZyBhIG5vbi1sYXN0IGRpbWVuc2lvbiBpcyBub3QgeWV0IHN1cHBvcnRlZC4gTGFiZWxzIC8gbG9naXRzIHdhcyByYW5rIFwiK2UucmFuaytcIiBhbmQgZGltIHdhcyBcIituKTtyZXR1cm4gJHQoZnVuY3Rpb24odCxlKXt2YXIgcj1lLmxvZ1N1bUV4cChbbl0sITApLGk9ZS50b0Zsb2F0KCkuc3ViKHIpO3JldHVybnt2YWx1ZTppLm11bCh0KS5uZWcoKS5zdW0oW25dKSxncmFkRnVuYzpmdW5jdGlvbihlKXt2YXIgcj1vZShlLnNoYXBlLFtuXSk7cmV0dXJuW2UucmVzaGFwZShyKS5tdWwodC50b0Zsb2F0KCkuc3ViKGkuZXhwKCkpKSxlLnJlc2hhcGUocikubXVsKGkuZXhwKCkuc3ViKHQudG9GbG9hdCgpKSldfX19KSh0LGUpfShhLG8pO3JldHVybiBlYyhmLHMsaSl9fSksY2M9T2JqZWN0LmZyZWV6ZSh7Z2V0IFJlZHVjdGlvbigpe3JldHVybiBadX0sYWJzb2x1dGVEaWZmZXJlbmNlOnRjLGNvbXB1dGVXZWlnaHRlZExvc3M6ZWMsY29zaW5lRGlzdGFuY2U6bmMsaGluZ2VMb3NzOnJjLGh1YmVyTG9zczppYyxsb2dMb3NzOmFjLG1lYW5TcXVhcmVkRXJyb3I6b2Msc2lnbW9pZENyb3NzRW50cm9weTpzYyxzb2Z0bWF4Q3Jvc3NFbnRyb3B5OnVjfSk7ZnVuY3Rpb24gbGModCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLEx0LmVuZ2luZS50aWR5KGZ1bmN0aW9uKCl7aWYoMiE9PXQuc2hhcGUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInFyMmQoKSByZXF1aXJlcyBhIDJEIFRlbnNvciwgYnV0IGdvdCBhIFwiK3Quc2hhcGUubGVuZ3RoK1wiRCBUZW5zb3IuXCIpO2Zvcih2YXIgbj10LnNoYXBlWzBdLHI9dC5zaGFwZVsxXSxpPVVhKG4pLGE9dC5jbG9uZSgpLG89TGUoW1sxXV0sWzEsMV0pLHM9by5jbG9uZSgpLHU9bj49cj9yOm4sYz1mdW5jdGlvbih0KXt2YXIgZSx1PWEsYz1zLGw9aTtlPUx0LmVuZ2luZS50aWR5KGZ1bmN0aW9uKCl7dmFyIGU9YS5zbGljZShbdCx0XSxbbi10LDFdKSx1PWUubm9ybSgpLGM9YS5zbGljZShbdCx0XSxbMSwxXSksbD1jLnNpZ24oKS5uZWcoKSxmPWMuc3ViKGwubXVsKHUpKSxoPWUuZGl2KGYpO3M9MT09PWguc2hhcGVbMF0/by5jbG9uZSgpOm8uY29uY2F0KGguc2xpY2UoWzEsMF0sW2guc2hhcGVbMF0tMSxoLnNoYXBlWzFdXSksMCk7dmFyIHA9bC5tYXRNdWwoZikuZGl2KHUpLm5lZygpLGQ9YS5zbGljZShbdCwwXSxbbi10LHJdKSxtPXAubXVsKHMpO2E9MD09PXQ/ZC5zdWIobS5tYXRNdWwocy50cmFuc3Bvc2UoKS5tYXRNdWwoZCkpKTphLnNsaWNlKFswLDBdLFt0LHJdKS5jb25jYXQoZC5zdWIobS5tYXRNdWwocy50cmFuc3Bvc2UoKS5tYXRNdWwoZCkpKSwwKTt2YXIgZz1pLnNsaWNlKFswLHRdLFtuLGkuc2hhcGVbMV0tdF0pO3JldHVybiBpPTA9PT10P2cuc3ViKGcubWF0TXVsKHMpLm1hdE11bChtLnRyYW5zcG9zZSgpKSk6aS5zbGljZShbMCwwXSxbbix0XSkuY29uY2F0KGcuc3ViKGcubWF0TXVsKHMpLm1hdE11bChtLnRyYW5zcG9zZSgpKSksMSksW3MsYSxpXX0pLHM9ZVswXSxhPWVbMV0saT1lWzJdLFh0KFt1LGMsbF0pfSxsPTA7bDx1OysrbCljKGwpO3JldHVybiFlJiZuPnImJihpPWkuc2xpY2UoWzAsMF0sW24scl0pLGE9YS5zbGljZShbMCwwXSxbcixyXSkpLFtpLGFdfSl9dmFyIGZjPUFlKHtncmFtU2NobWlkdF86ZnVuY3Rpb24odCl7dmFyIGU7aWYoQXJyYXkuaXNBcnJheSh0KSl7ZT0hMSxiKG51bGwhPXQmJnQubGVuZ3RoPjAsXCJHcmFtLVNjaG1pZHQgcHJvY2VzczogaW5wdXQgbXVzdCBub3QgYmUgbnVsbCwgdW5kZWZpbmVkLCBvciBlbXB0eVwiKTtmb3IodmFyIG49dFswXS5zaGFwZVswXSxyPTE7cjx0Lmxlbmd0aDsrK3IpYih0W3JdLnNoYXBlWzBdPT09bixcIkdyYW0tU2NobWlkdDogTm9uLXVuaXF1ZSBsZW5ndGhzIGZvdW5kIGluIHRoZSBpbnB1dCB2ZWN0b3JzOiAoXCIrdFtyXS5zaGFwZVswXStcIiB2cy4gXCIrbitcIilcIil9ZWxzZSBlPSEwLHQ9X2EodCx0LnNoYXBlWzBdLDApLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZW8odCxbMF0pfSk7Yih0Lmxlbmd0aDw9dFswXS5zaGFwZVswXSxcIkdyYW0tU2NobWlkdDogTnVtYmVyIG9mIHZlY3RvcnMgKFwiK3QubGVuZ3RoK1wiKSBleGNlZWRzIG51bWJlciBvZiBkaW1lbnNpb25zIChcIit0WzBdLnNoYXBlWzBdK1wiKS5cIik7dmFyIGk9W10sYT10LG89ZnVuY3Rpb24odCl7aS5wdXNoKEx0LmVuZ2luZS50aWR5KGZ1bmN0aW9uKCl7dmFyIGU9YVt0XTtpZih0PjApZm9yKHZhciBuPTA7bjx0Oysrbil7dmFyIHI9VXMoaVtuXS5tdWxTdHJpY3QoZSkpLm11bChpW25dKTtlPWUuc3ViKHIpfXJldHVybiBlLmRpdihNdShlLFwiZXVjbGlkZWFuXCIpKX0pKX07Zm9yKHI9MDtyPHQubGVuZ3RoOysrcilvKHIpO3JldHVybiBlP25vKGksMCk6aX19KSxoYz1BZSh7cXJfOmZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwPT09ZSYmKGU9ITEpLHQucmFuazwyKXRocm93IG5ldyBFcnJvcihcInFyKCkgcmVxdWlyZXMgaW5wdXQgdGVuc29yIHRvIGhhdmUgYSByYW5rID49IDIsIGJ1dCBnb3QgcmFuayBcIit0LnJhbmspO2lmKDI9PT10LnJhbmspcmV0dXJuIGxjKHQsZSk7dmFyIG49dC5zaGFwZS5zbGljZSgwLHQuc2hhcGUubGVuZ3RoLTIpLnJlZHVjZShmdW5jdGlvbih0LGUpe3JldHVybiB0KmV9KSxyPVtdLGk9W107cmV0dXJuIGFvKHQucmVzaGFwZShbbix0LnNoYXBlW3Quc2hhcGUubGVuZ3RoLTJdLHQuc2hhcGVbdC5zaGFwZS5sZW5ndGgtMV1dKSwwKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBuPWxjKHQsZSksYT1uWzBdLG89blsxXTtyLnB1c2goYSksaS5wdXNoKG8pfSksW25vKHIsMCkucmVzaGFwZSh0LnNoYXBlKSxubyhpLDApLnJlc2hhcGUodC5zaGFwZSldfX0pLHBjPU9iamVjdC5mcmVlemUoe2dyYW1TY2htaWR0OmZjLHFyOmhjfSk7ZnVuY3Rpb24gZGModCxlLG4scixpKXtudWxsPT1yJiYocj0uNSksbnVsbD09aSYmKGk9TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZKTt2YXIgYT10LnNoYXBlWzBdO3JldHVybiBuPU1hdGgubWluKG4sYSksYigwPD1yJiZyPD0xLFwiaW91VGhyZXNob2xkIG11c3QgYmUgaW4gWzAsIDFdLCBidXQgd2FzICdcIityK1wiJ1wiKSxiKDI9PT10LnJhbmssXCJib3hlcyBtdXN0IGJlIGEgMkQgdGVuc29yLCBidXQgd2FzIG9mIHJhbmsgJ1wiK3QucmFuaytcIidcIiksYig0PT09dC5zaGFwZVsxXSxcImJveGVzIG11c3QgaGF2ZSA0IGNvbHVtbnMsIGJ1dCAybmQgZGltZW5zaW9uIHdhcyBcIit0LnNoYXBlWzFdKSxiKDE9PT1lLnJhbmssXCJzY29yZXMgbXVzdCBiZSBhIDFEIHRlbnNvclwiKSxiKGUuc2hhcGVbMF09PT1hLFwic2NvcmVzIGhhcyBpbmNvbXBhdGlibGUgc2hhcGUgd2l0aCBib3hlcy4gRXhwZWN0ZWQgXCIrYStcIiwgYnV0IHdhcyBcIitlLnNoYXBlWzBdKSx7bWF4T3V0cHV0U2l6ZTpuLGlvdVRocmVzaG9sZDpyLHNjb3JlVGhyZXNob2xkOml9fXZhciBtYz1BZSh7cmVzaXplQmlsaW5lYXJfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHI9T2UodCxcImltYWdlc1wiLFwicmVzaXplQmlsaW5lYXJcIik7YigzPT09ci5yYW5rfHw0PT09ci5yYW5rLFwiRXJyb3IgaW4gcmVzaXplQmlsaW5lYXI6IHggbXVzdCBiZSByYW5rIDMgb3IgNCwgYnV0IGdvdCByYW5rIFwiK3IucmFuaytcIi5cIiksYigyPT09ZS5sZW5ndGgsXCJFcnJvciBpbiByZXNpemVCaWxpbmVhcjogbmV3IHNoYXBlIG11c3QgMkQsIGJ1dCBnb3Qgc2hhcGUgXCIrZStcIi5cIik7dmFyIGk9cixhPSExOzM9PT1yLnJhbmsmJihhPSEwLGk9ci5hczREKDEsci5zaGFwZVswXSxyLnNoYXBlWzFdLHIuc2hhcGVbMl0pKTt2YXIgbz1lWzBdLHM9ZVsxXSx1PUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5yZXNpemVCaWxpbmVhcihpLG8scyxuKX0se2JhdGNoSW1hZ2VzOml9LGZ1bmN0aW9uKHQsZSl7cmV0dXJue2JhdGNoSW1hZ2VzOmZ1bmN0aW9uKCl7cmV0dXJuIEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVzaXplQmlsaW5lYXJCYWNrcHJvcCh0LGksbil9LHt9KX19fSk7cmV0dXJuIGE/dS5hczNEKHUuc2hhcGVbMV0sdS5zaGFwZVsyXSx1LnNoYXBlWzNdKTp1fX0pLGdjPUFlKHtyZXNpemVOZWFyZXN0TmVpZ2hib3JfOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHI9T2UodCxcImltYWdlc1wiLFwicmVzaXplTmVhcmVzdE5laWdoYm9yXCIpO2IoMz09PXIucmFua3x8ND09PXIucmFuayxcIkVycm9yIGluIHJlc2l6ZU5lYXJlc3ROZWlnaGJvcjogeCBtdXN0IGJlIHJhbmsgMyBvciA0LCBidXQgZ290IHJhbmsgXCIrci5yYW5rK1wiLlwiKSxiKDI9PT1lLmxlbmd0aCxcIkVycm9yIGluIHJlc2l6ZU5lYXJlc3ROZWlnaGJvcjogbmV3IHNoYXBlIG11c3QgMkQsIGJ1dCBnb3Qgc2hhcGUgXCIrZStcIi5cIiksYihcImZsb2F0MzJcIj09PXIuZHR5cGV8fFwiaW50MzJcIj09PXIuZHR5cGUsXCJgaW1hZ2VzYCBtdXN0IGhhdmUgYGludDMyYCBvciBgZmxvYXQzMmAgYXMgZHR5cGVcIik7dmFyIGk9cixhPSExOzM9PT1yLnJhbmsmJihhPSEwLGk9ci5hczREKDEsci5zaGFwZVswXSxyLnNoYXBlWzFdLHIuc2hhcGVbMl0pKTt2YXIgbz1lWzBdLHM9ZVsxXSx1PUx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5yZXNpemVOZWFyZXN0TmVpZ2hib3IoaSxvLHMsbil9LHtiYXRjaEltYWdlczppfSxmdW5jdGlvbih0LGUpe3JldHVybntiYXRjaEltYWdlczpmdW5jdGlvbigpe3JldHVybiBMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKGUpe3JldHVybiBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvckJhY2twcm9wKHQsaSxuKX0se30pfX19KTtyZXR1cm4gYT91LmFzM0QodS5zaGFwZVsxXSx1LnNoYXBlWzJdLHUuc2hhcGVbM10pOnV9fSkseWM9QWUoe25vbk1heFN1cHByZXNzaW9uXzpmdW5jdGlvbih0LGUsbixyLGkpe3ZvaWQgMD09PXImJihyPS41KSx2b2lkIDA9PT1pJiYoaT1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkpO3ZhciBhPU9lKHQsXCJib3hlc1wiLFwibm9uTWF4U3VwcHJlc3Npb25cIiksbz1PZShlLFwic2NvcmVzXCIsXCJub25NYXhTdXBwcmVzc2lvblwiKSxzPWRjKGEsbyxuLHIsaSk7cmV0dXJuIG49cy5tYXhPdXRwdXRTaXplLHI9cy5pb3VUaHJlc2hvbGQsaT1zLnNjb3JlVGhyZXNob2xkLEx0LmVuZ2luZS5ydW5LZXJuZWwoZnVuY3Rpb24odCl7cmV0dXJuIHQubm9uTWF4U3VwcHJlc3Npb24oYSxvLG4scixpKX0seyRib3hlczphfSl9fSksdmM9ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9LjUpLHZvaWQgMD09PWkmJihpPU51bWJlci5ORUdBVElWRV9JTkZJTklUWSksYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgYSxvLHMsdSxjLGY7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihsKXtzd2l0Y2gobC5sYWJlbCl7Y2FzZSAwOnJldHVybiBhPU9lKHQsXCJib3hlc1wiLFwibm9uTWF4U3VwcHJlc3Npb25Bc3luY1wiKSxvPU9lKGUsXCJzY29yZXNcIixcIm5vbk1heFN1cHByZXNzaW9uQXN5bmNcIikscz1kYyhhLG8sbixyLGkpLG49cy5tYXhPdXRwdXRTaXplLHI9cy5pb3VUaHJlc2hvbGQsaT1zLnNjb3JlVGhyZXNob2xkLFs0LGEuZGF0YSgpXTtjYXNlIDE6cmV0dXJuIHU9bC5zZW50KCksWzQsby5kYXRhKCldO2Nhc2UgMjpyZXR1cm4gYz1sLnNlbnQoKSxmPWFuKHUsYyxuLHIsaSksYSE9PXQmJmEuZGlzcG9zZSgpLG8hPT1lJiZvLmRpc3Bvc2UoKSxbMixmXX19KX0pfSxiYz1mdW5jdGlvbih0LGUsbixyLGksYSl7dmFyIG89T2UodCxcImltYWdlXCIsXCJjcm9wQW5kUmVzaXplXCIsXCJmbG9hdDMyXCIpLHM9T2UoZSxcImJveGVzXCIsXCJjcm9wQW5kUmVzaXplXCIsXCJmbG9hdDMyXCIpLHU9T2UobixcImJveEluZFwiLFwiY3JvcEFuZFJlc2l6ZVwiLFwiaW50MzJcIik7aT1pfHxcImJpbGluZWFyXCIsYT1hfHwwO3ZhciBjPXMuc2hhcGVbMF07cmV0dXJuIGIoND09PW8ucmFuayxcIkVycm9yIGluIGNyb3BBbmRSZXNpemU6IGltYWdlIG11c3QgYmUgcmFuayA0LGJ1dCBnb3QgcmFuayBcIitvLnJhbmsrXCIuXCIpLGIoMj09PXMucmFuayYmND09PXMuc2hhcGVbMV0sXCJFcnJvciBpbiBjcm9wQW5kUmVzaXplOiBib3hlcyBtdXN0IGJlIGhhdmUgc2l6ZSBbXCIrYytcIiw0XSBidXQgaGFkIHNoYXBlIFwiK3Muc2hhcGUrXCIuXCIpLGIoMT09PXUucmFuayYmdS5zaGFwZVswXT09PWMsXCJFcnJvciBpbiBjcm9wQW5kUmVzaXplOiBib3hJbmQgbXVzdCBiZSBoYXZlIHNpemUgW1wiK2MrXCJdIGJ1dCBoYWQgc2hhcGUgXCIrcy5zaGFwZStcIi5cIiksYigyPT09ci5sZW5ndGgsXCJFcnJvciBpbiBjcm9wQW5kUmVzaXplOiBjcm9wU2l6ZSBtdXN0IGJlIG9mIGxlbmd0aCAyLCBidXQgZ290IGxlbmd0aCBcIityLmxlbmd0aCtcIi5cIiksYihyWzBdPj0xJiZyWzFdPj0xLFwiY3JvcFNpemUgbXVzdCBiZSBhdGxlYXN0IFsxLDFdLCBidXQgd2FzIFwiK3IpLGIoXCJiaWxpbmVhclwiPT09aXx8XCJuZWFyZXN0XCI9PT1pLFwibWV0aG9kIG11c3QgYmUgYmlsaW5lYXIgb3IgbmVhcmVzdCwgYnV0IHdhcyBcIitpKSxMdC5lbmdpbmUucnVuS2VybmVsKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY3JvcEFuZFJlc2l6ZShvLHMsdSxyLGksYSl9LHskaW1hZ2U6bywkYm94ZXM6c30pfSx3Yz1PYmplY3QuZnJlZXplKHtyZXNpemVCaWxpbmVhcjptYyxyZXNpemVOZWFyZXN0TmVpZ2hib3I6Z2Msbm9uTWF4U3VwcHJlc3Npb246eWMsbm9uTWF4U3VwcHJlc3Npb25Bc3luYzp2Yyxjcm9wQW5kUmVzaXplOmJjfSksX2M9T2JqZWN0LmZyZWV6ZSh7aW1hZ2U6d2MsbGluYWxnOnBjLGxvc3NlczpjYyxzcGVjdHJhbDpZdSxvcDpBZSxiYXRjaE5vcm1hbGl6YXRpb24yZDpxbyxiYXRjaE5vcm1hbGl6YXRpb24zZDokbyxiYXRjaE5vcm1hbGl6YXRpb240ZDpIbyxiYXRjaE5vcm1hbGl6YXRpb246S28sY29tcGxleDpUZSxyZWFsOlJlLGltYWc6RGUsY29uY2F0OmdhLGNvbmNhdDFkOnlhLGNvbmNhdDJkOnZhLGNvbmNhdDNkOmJhLGNvbmNhdDRkOndhLHNwbGl0Ol9hLGNvbnYxZDpjcyxjb252MmQ6bHMsY29udjNkOmZzLGNvbnYyZERlckZpbHRlcjpocyxkZXB0aHdpc2VDb252MmQ6cHMsc2VwYXJhYmxlQ29udjJkOmRzLGNvbnYyZFRyYW5zcG9zZTptcyxtYXRNdWw6cnMsZG90OmlzLG91dGVyUHJvZHVjdDphcyxyZXZlcnNlOmdzLHJldmVyc2UxZDp5cyxyZXZlcnNlMmQ6dnMscmV2ZXJzZTNkOmJzLHJldmVyc2U0ZDp3cyxtYXhQb29sOkVzLGF2Z1Bvb2w6U3MscG9vbDpOcyxzbGljZTpJcyxzbGljZTFkOk9zLHNsaWNlMmQ6a3Msc2xpY2UzZDpBcyxzbGljZTRkOkNzLGFiczpsbyxhY29zOmZvLGFjb3NoOmhvLGFzaW46cG8sYXNpbmg6bW8sYXRhbjpnbyxhdGFuaDp5byxjZWlsOnZvLGNsaXBCeVZhbHVlOmJvLGNvczp3byxjb3NoOl9vLGVyZjp4byxleHA6RW8sZXhwbTE6U28sZmxvb3I6Tm8sbG9nOklvLGxvZzFwOk9vLGxvZ1NpZ21vaWQ6a28sbmVnOkFvLHJlY2lwcm9jYWw6Q28scm91bmQ6UG8scnNxcnQ6VG8sc2lnbW9pZDpSbyxzaWduOkRvLHNpbjpNbyxzaW5oOmpvLHNvZnRwbHVzOkJvLHNxcnQ6TG8sc3F1YXJlOnpvLHN0ZXA6Rm8sdGFuOlVvLHRhbmg6Vm8sYWxsOlRzLGFueTpScyxhcmdNYXg6RHMsYXJnTWluOk1zLGxvZ1N1bUV4cDpqcyxtYXg6QnMsbWVhbjpMcyxtaW46enMsbW9tZW50czpGcyxzdW06VXMscHJvZDpWcyxlcXVhbDpXcyxlcXVhbFN0cmljdDpxcyxncmVhdGVyOiRzLGdyZWF0ZXJFcXVhbDpIcyxncmVhdGVyRXF1YWxTdHJpY3Q6S3MsZ3JlYXRlclN0cmljdDpHcyxsZXNzOlhzLGxlc3NFcXVhbDpZcyxsZXNzRXF1YWxTdHJpY3Q6SnMsbGVzc1N0cmljdDpacyxub3RFcXVhbDpRcyxub3RFcXVhbFN0cmljdDp0dSxhZGQ6ZXUsYWRkTjpudSxhZGRTdHJpY3Q6cnUsYXRhbjI6aXUsZGl2OmF1LGRpdlN0cmljdDpvdSxmbG9vckRpdjpzdSxtYXhpbXVtOnV1LG1heGltdW1TdHJpY3Q6Y3UsbWluaW11bTpsdSxtaW5pbXVtU3RyaWN0OmZ1LG1vZDpodSxtb2RTdHJpY3Q6cHUsbXVsOmR1LG11bFN0cmljdDptdSxwb3c6Z3UscG93U3RyaWN0Onl1LHNxdWFyZWREaWZmZXJlbmNlOnZ1LHNxdWFyZWREaWZmZXJlbmNlU3RyaWN0OmJ1LHN1Yjp3dSxzdWJTdHJpY3Q6X3UsZWx1Omt1LGxlYWt5UmVsdTpBdSxwcmVsdTpDdSxyZWx1OlB1LHNlbHU6VHUsbG9naWNhbEFuZDp4dSxsb2dpY2FsTm90OkV1LGxvZ2ljYWxPcjpTdSxsb2dpY2FsWG9yOk51LHdoZXJlOkl1LHdoZXJlQXN5bmM6T3UsYnVmZmVyOlJhLHRvUGl4ZWxzOlRhLHByaW50OkRhLGJhdGNoVG9TcGFjZU5EOk1hLGNhc3Q6amEsY2xvbmU6QmEsY3Vtc3VtOkxhLGRlcHRoVG9TcGFjZTp6YSxleHBhbmREaW1zOkZhLGV5ZTpVYSxmcm9tUGl4ZWxzOlZhLG11bHRpbm9taWFsOldhLG9uZUhvdDpxYSxwYWQ6JGEscGFkMWQ6SGEscGFkMmQ6S2EscGFkM2Q6R2EscGFkNGQ6WGEscmFuZDpZYSxyYW5kb21Ob3JtYWw6SmEscmFuZG9tVW5pZm9ybTpaYSxyZXNoYXBlOlFhLHNwYWNlVG9CYXRjaE5EOnRvLHNxdWVlemU6ZW8sc3RhY2s6bm8sdGlsZTpybyx0cnVuY2F0ZWROb3JtYWw6aW8sdW5zdGFjazphbyxzZXRkaWZmMWRBc3luYzpvbyxmaWxsOiRlLGxpbnNwYWNlOkhlLG9uZXM6V2UscmFuZ2U6S2Usc2NhbGFyOmplLHRlbnNvcjpNZSx0ZW5zb3IxZDpCZSx0ZW5zb3IyZDpMZSx0ZW5zb3IzZDp6ZSx0ZW5zb3I0ZDpGZSx0ZW5zb3I1ZDpVZSx0ZW5zb3I2ZDpWZSx6ZXJvczpxZSxvbmVzTGlrZTpHZSx6ZXJvc0xpa2U6WGUsdHJhbnNwb3NlOlJ1LHNvZnRtYXg6Q2UsbG9nU29mdG1heDpQZSxsb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbjpEdSxub3JtOk11LGdhdGhlcjpMdSx1bnNvcnRlZFNlZ21lbnRTdW06enUsYmFzaWNMU1RNQ2VsbDpGdSxtdWx0aVJOTkNlbGw6VXUsbW92aW5nQXZlcmFnZTpWdSxzdHJpZGVkU2xpY2U6V3UsdG9wazpxdSxzY2F0dGVyTkQ6JHUsZmZ0Okh1LGlmZnQ6S3UscmZmdDpHdSxpcmZmdDpYdSxzcGFyc2VUb0RlbnNlOkp1LGdhdGhlck5EOlF1fSkseGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dGhpcy5ibG9ja1NpemU9NDgsdGhpcy5maXJzdFVzZT0hMCxMdC5nZXQoXCJJU19CUk9XU0VSXCIpJiYodGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikuZ2V0Q29udGV4dChcIjJkXCIpKX1yZXR1cm4gdC5wcm90b3R5cGUuc2V0RGF0YU1vdmVyPWZ1bmN0aW9uKHQpe3RoaXMuZGF0YT1uZXcgWWUodCl9LHQucHJvdG90eXBlLnJlZ2lzdGVyPWZ1bmN0aW9uKHQsZSxuKXtpZih0aGlzLmZpcnN0VXNlJiYodGhpcy5maXJzdFVzZT0hMSxMdC5nZXQoXCJJU19OT0RFXCIpJiZadChcIlxcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG5IaSB0aGVyZSDwn5GLLiBMb29rcyBsaWtlIHlvdSBhcmUgcnVubmluZyBUZW5zb3JGbG93LmpzIGluIE5vZGUuanMuIFRvIHNwZWVkIHRoaW5ncyB1cCBkcmFtYXRpY2FsbHksIGluc3RhbGwgb3VyIG5vZGUgYmFja2VuZCwgd2hpY2ggYmluZHMgdG8gVGVuc29yRmxvdyBDKyssIGJ5IHJ1bm5pbmcgbnBtIGkgQHRlbnNvcmZsb3cvdGZqcy1ub2RlLCBvciBucG0gaSBAdGVuc29yZmxvdy90ZmpzLW5vZGUtZ3B1IGlmIHlvdSBoYXZlIENVREEuIFRoZW4gY2FsbCByZXF1aXJlKCdAdGVuc29yZmxvdy90ZmpzLW5vZGUnKTsgKC1ncHUgc3VmZml4IGZvciBDVURBKSBhdCB0aGUgc3RhcnQgb2YgeW91ciBwcm9ncmFtLiBWaXNpdCBodHRwczovL2dpdGh1Yi5jb20vdGVuc29yZmxvdy90ZmpzLW5vZGUgZm9yIG1vcmUgZGV0YWlscy5cXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09XFxuXCIpKSx0aGlzLmRhdGEuaGFzKHQpKXRocm93IG5ldyBFcnJvcihcIkRhdGEgYnVmZmVyIGlzIGFscmVhZHkgcmVnaXN0ZXJlZFwiKTt0aGlzLmRhdGEuc2V0KHQse2R0eXBlOm59KX0sdC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCxlKXtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIk1hdGhCYWNrZW5kQ1BVLndyaXRlKCk6IHZhbHVlcyBjYW4gbm90IGJlIG51bGxcIik7dGhpcy5kYXRhLmdldCh0KS52YWx1ZXM9ZX0sdC5wcm90b3R5cGUuZnJvbVBpeGVscz1mdW5jdGlvbih0LGUpe2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwicGl4ZWxzIHBhc3NlZCB0byB0Zi5mcm9tUGl4ZWxzKCkgY2FuIG5vdCBiZSBudWxsXCIpO3ZhciBuLHI7aWYoTHQuZ2V0KFwiSVNfTk9ERVwiKSYmbnVsbD09dC5nZXRDb250ZXh0KXRocm93IG5ldyBFcnJvcihcIldoZW4gcnVubmluZyBpbiBub2RlLCBwaXhlbHMgbXVzdCBiZSBhbiBIVE1MQ2FudmFzRWxlbWVudCBsaWtlIHRoZSBvbmUgcmV0dXJuZWQgYnkgdGhlIGBjYW52YXNgIG5wbSBwYWNrYWdlXCIpO2lmKG51bGwhPXQuZ2V0Q29udGV4dCluPXQuZ2V0Q29udGV4dChcIjJkXCIpLmdldEltYWdlRGF0YSgwLDAsdC53aWR0aCx0LmhlaWdodCkuZGF0YTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBJbWFnZURhdGEpbj10LmRhdGE7ZWxzZXtpZighKHQgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50fHx0IGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudCkpdGhyb3cgbmV3IEVycm9yKFwicGl4ZWxzIHBhc3NlZCB0byB0Zi5mcm9tUGl4ZWxzKCkgbXVzdCBiZSBlaXRoZXIgYW4gSFRNTFZpZGVvRWxlbWVudCwgSFRNTEltYWdlRWxlbWVudCwgSFRNTENhbnZhc0VsZW1lbnQgb3IgSW1hZ2VEYXRhLCBidXQgd2FzIFwiK3QuY29uc3RydWN0b3IubmFtZSk7aWYobnVsbD09dGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0KXRocm93IG5ldyBFcnJvcihcIkNhbid0IHJlYWQgcGl4ZWxzIGZyb20gSFRNTEltYWdlRWxlbWVudCBvdXRzaWRlIHRoZSBicm93c2VyLlwiKTt0aGlzLmZyb21QaXhlbHMyRENvbnRleHQuY2FudmFzLndpZHRoPXQud2lkdGgsdGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0LmNhbnZhcy5oZWlnaHQ9dC5oZWlnaHQsdGhpcy5mcm9tUGl4ZWxzMkRDb250ZXh0LmRyYXdJbWFnZSh0LDAsMCx0LndpZHRoLHQuaGVpZ2h0KSxuPXRoaXMuZnJvbVBpeGVsczJEQ29udGV4dC5nZXRJbWFnZURhdGEoMCwwLHQud2lkdGgsdC5oZWlnaHQpLmRhdGF9aWYoND09PWUpcj1uZXcgSW50MzJBcnJheShuKTtlbHNle3ZhciBpPXQud2lkdGgqdC5oZWlnaHQ7cj1uZXcgSW50MzJBcnJheShpKmUpO2Zvcih2YXIgYT0wO2E8aTthKyspZm9yKHZhciBvPTA7bzxlOysrbylyW2EqZStvXT1uWzQqYStvXX1yZXR1cm4gemUocixbdC5oZWlnaHQsdC53aWR0aCxlXSxcImludDMyXCIpfSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBsKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuWzIsdGhpcy5yZWFkU3luYyh0KV19KX0pfSx0LnByb3RvdHlwZS5yZWFkU3luYz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmRhdGEuZ2V0KHQpLG49ZS5kdHlwZSxyPWUuY29tcGxleFRlbnNvcnM7cmV0dXJuXCJjb21wbGV4NjRcIj09PW4/dG4oci5yZWFsLmRhdGFTeW5jKCksci5pbWFnLmRhdGFTeW5jKCkpOnRoaXMuZGF0YS5nZXQodCkudmFsdWVzfSx0LnByb3RvdHlwZS5kaXNwb3NlRGF0YT1mdW5jdGlvbih0KXtpZih0aGlzLmRhdGEuaGFzKHQpKXt2YXIgZT10aGlzLmRhdGEuZ2V0KHQpLmNvbXBsZXhUZW5zb3JzO251bGwhPWUmJihlLnJlYWwuZGlzcG9zZSgpLGUuaW1hZy5kaXNwb3NlKCkpLHRoaXMuZGF0YS5kZWxldGUodCl9fSx0LnByb3RvdHlwZS50aW1lPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuIGU9SigpLHQoKSxbMix7a2VybmVsTXM6SigpLWV9XX0pfSl9LHQucHJvdG90eXBlLm1lbW9yeT1mdW5jdGlvbigpe3JldHVybnt1bnJlbGlhYmxlOiEwLHJlYXNvbnM6W1wiVGhlIHJlcG9ydGVkIG1lbW9yeSBpcyBhbiB1cHBlciBib3VuZC4gRHVlIHRvIGF1dG9tYXRpYyBnYXJiYWdlIGNvbGxlY3Rpb24sIHRoZSB0cnVlIGFsbG9jYXRlZCBtZW1vcnkgbWF5IGJlIGxlc3MuXCJdfX0sdC5wcm90b3R5cGUuY29tcGxleD1mdW5jdGlvbih0LGUpe3ZhciBuPWZ0Lm1ha2UodC5zaGFwZSx7fSxcImNvbXBsZXg2NFwiKTtyZXR1cm4gdGhpcy5kYXRhLmdldChuLmRhdGFJZCkuY29tcGxleFRlbnNvcnM9e3JlYWw6THQuZW5naW5lLmtlZXAodC5jbG9uZSgpKSxpbWFnOkx0LmVuZ2luZS5rZWVwKGUuY2xvbmUoKSl9LG59LHQucHJvdG90eXBlLnJlYWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5nZXQodC5kYXRhSWQpLmNvbXBsZXhUZW5zb3JzLnJlYWwuY2xvbmUoKX0sdC5wcm90b3R5cGUuaW1hZz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kYXRhLmdldCh0LmRhdGFJZCkuY29tcGxleFRlbnNvcnMuaW1hZy5jbG9uZSgpfSx0LnByb3RvdHlwZS5hc3NlcnROb3RDb21wbGV4PWZ1bmN0aW9uKHQsZSl7QXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKSx0LmZvckVhY2goZnVuY3Rpb24odCl7bnVsbCE9dCYmYihcImNvbXBsZXg2NFwiIT09dC5kdHlwZSxlK1wiIGRvZXMgbm90IHN1cHBvcnQgY29tcGxleDY0IHRlbnNvcnMuXCIpfSl9LHQucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uKHQsZSxuKXtpZih0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInNsaWNlXCIpLEVlKHQuc2hhcGUsZSxuKSl7dmFyIHI9U2UoZSx0LnN0cmlkZXMpLGk9RShuKTtyZXR1cm4gTWUodC5kYXRhU3luYygpLnN1YmFycmF5KHIscitpKSxuLHQuZHR5cGUpfWZvcih2YXIgYT1SYShuLHQuZHR5cGUpLG89MDtvPGEuc2l6ZTsrK28pe3ZhciBzPWEuaW5kZXhUb0xvYyhvKS5tYXAoZnVuY3Rpb24odCxuKXtyZXR1cm4gdCtlW25dfSk7YS52YWx1ZXNbb109dC5nZXQuYXBwbHkodCxzKX1yZXR1cm4gYS50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5zdHJpZGVkU2xpY2U9ZnVuY3Rpb24odCxlLG4scixpLGEsbyxzLHUpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwic3RyaWRlZFNsaWNlXCIpO3ZhciBjPXdlKHQuc2hhcGUsZSxuLHIsaSxhLG8scyx1KSxsPWNbMF0sZj1jWzFdLGg9Y1syXSxwPWYuZmlsdGVyKGZ1bmN0aW9uKHQsZSl7cmV0dXJuLTE9PT1oLmluZGV4T2YoZSl9KTtpZihwLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10fSkpcmV0dXJuIE1lKFtdLHApO2Zvcih2YXIgZD1SYShmLHQuZHR5cGUpLG09MDttPGQuc2l6ZTttKyspe2Zvcih2YXIgZz1kLmluZGV4VG9Mb2MobSkseT1uZXcgQXJyYXkoZy5sZW5ndGgpLHY9MDt2PHkubGVuZ3RoO3YrKyl5W3ZdPWdbdl0qclt2XStsW3ZdO2Quc2V0LmFwcGx5KGQsW3QuZ2V0LmFwcGx5KHQseSldLmNvbmNhdChnKSl9cmV0dXJuIGQudG9UZW5zb3IoKS5yZXNoYXBlKHApfSx0LnByb3RvdHlwZS51bnN0YWNrPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQuc2hhcGVbZV0scj1uZXcgQXJyYXkodC5yYW5rLTEpLGk9MCxhPTA7YTx0LnJhbms7YSsrKWEhPT1lJiYocltpKytdPXQuc2hhcGVbYV0pO3ZhciBvPW5ldyBBcnJheSh0LnJhbmspLmZpbGwoMCkscz10LnNoYXBlLnNsaWNlKCk7c1tlXT0xO3ZhciB1PW5ldyBBcnJheShuKTtmb3IoYT0wO2E8dS5sZW5ndGg7YSsrKW9bZV09YSx1W2FdPXRoaXMuc2xpY2UodCxvLHMpLnJlc2hhcGUocik7cmV0dXJuIHV9LHQucHJvdG90eXBlLnJldmVyc2U9ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInJldmVyc2VcIik7Zm9yKHZhciBuPVJhKHQuc2hhcGUsdC5kdHlwZSkscj10LmJ1ZmZlcigpLGk9ZnVuY3Rpb24oaSl7dmFyIGE9bi5pbmRleFRvTG9jKGkpLG89YS5zbGljZSgpO2UuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gb1tlXT10LnNoYXBlW2VdLTEtb1tlXX0pLG4uc2V0LmFwcGx5KG4sW3IuZ2V0LmFwcGx5KHIsbyldLmNvbmNhdChhKSl9LGE9MDthPG4uc2l6ZTthKyspaShhKTtyZXR1cm4gbi50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5jb25jYXQ9ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImNvbmNhdFwiKTt2YXIgbj10Lm1hcChmdW5jdGlvbih0KXt2YXIgbj1FKHQuc2hhcGUuc2xpY2UoZSkpO3JldHVybiB0LmFzMkQoLTEsbil9KSxyPWRlKG4ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSksMSksaT1SYShyLHRbMF0uZHR5cGUpLnZhbHVlcztpZigxPT09blswXS5zaGFwZVswXSl7dmFyIGE9MDtuLmZvckVhY2goZnVuY3Rpb24odCl7aS5zZXQodC5kYXRhU3luYygpLGEpLGErPXQuc2l6ZX0pfWVsc2V7dmFyIG89MDtuLmZvckVhY2goZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPTAsYT0wO2E8dC5zaGFwZVswXTsrK2EpZm9yKHZhciBzPWEqclsxXStvLHU9MDt1PHQuc2hhcGVbMV07Kyt1KWlbcyt1XT1lW24rK107bys9dC5zaGFwZVsxXX0pfXZhciBzPWRlKHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSksZSk7cmV0dXJuIE1lKGkscyx0WzBdLmR0eXBlKX0sdC5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcIm5lZ1wiKSx0aGlzLm11bHRpcGx5KGplKC0xKSx0KX0sdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJjb21wbGV4NjRcIj09PXQuZHR5cGV8fFwiY29tcGxleDY0XCI9PT1lLmR0eXBlP3RoaXMuYnJvYWRjYXN0ZWRCaW5hcnlDb21wbGV4T3AodC5jYXN0KFwiY29tcGxleDY0XCIpLGUuY2FzdChcImNvbXBsZXg2NFwiKSxmdW5jdGlvbih0LGUsbixyKXtyZXR1cm57cmVhbDp0K24saW1hZzplK3J9fSk6dGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSxfdCh0LmR0eXBlLGUuZHR5cGUpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0pfSx0LnByb3RvdHlwZS5hZGROPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiYWRkTlwiKTtmb3IodmFyIGU9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuZGF0YVN5bmMoKX0pLG49UmEodFswXS5zaGFwZSx0WzBdLmR0eXBlKSxyPW4udmFsdWVzLGk9MDtpPHQubGVuZ3RoO2krKylmb3IodmFyIGE9ZVtpXSxvPTA7bzxyLmxlbmd0aDtvKyspcltvXSs9YVtvXTtyZXR1cm4gbi50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5zdWJ0cmFjdD1mdW5jdGlvbih0LGUpe3JldHVyblwiY29tcGxleDY0XCI9PT10LmR0eXBlfHxcImNvbXBsZXg2NFwiPT09ZS5kdHlwZT90aGlzLmJyb2FkY2FzdGVkQmluYXJ5Q29tcGxleE9wKHQuY2FzdChcImNvbXBsZXg2NFwiKSxlLmNhc3QoXCJjb21wbGV4NjRcIiksZnVuY3Rpb24odCxlLG4scil7cmV0dXJue3JlYWw6dC1uLGltYWc6ZS1yfX0pOnRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsX3QodC5kdHlwZSxlLmR0eXBlKSxmdW5jdGlvbih0LGUpe3JldHVybiB0LWV9KX0sdC5wcm90b3R5cGUucG93PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcInBvd1wiKSx0aGlzLmJyb2FkY2FzdGVkQmluYXJ5T3AodCxlLHQuZHR5cGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gTWF0aC5wb3codCxlKX0pfSx0LnByb3RvdHlwZS5iYXRjaE1hdE11bD1mdW5jdGlvbih0LGUsbixyKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJtYXRNdWxcIik7Zm9yKHZhciBpPW4/dC5zaGFwZVsxXTp0LnNoYXBlWzJdLGE9bj90LnNoYXBlWzJdOnQuc2hhcGVbMV0sbz1yP2Uuc2hhcGVbMV06ZS5zaGFwZVsyXSxzPXQuc2hhcGVbMF0sdT10LmRhdGFTeW5jKCksYz1lLmRhdGFTeW5jKCksbD1uP1t0LnN0cmlkZXNbMF0sMSx0LnN0cmlkZXNbMV1dOlt0LnN0cmlkZXNbMF0sdC5zdHJpZGVzWzFdLDFdLGY9bFswXSxoPWxbMV0scD1sWzJdLGQ9cj9bMSxlLnN0cmlkZXNbMV0sZS5zdHJpZGVzWzBdXTpbZS5zdHJpZGVzWzFdLDEsZS5zdHJpZGVzWzBdXSxtPWRbMF0sZz1kWzFdLHk9ZFsyXSx2PWEqbyxiPVJhKFtzLGEsb10sdC5kdHlwZSksdz1iLnZhbHVlcyxfPXRoaXMuYmxvY2tTaXplLHg9MDt4PHM7eCsrKWZvcih2YXIgRT0wO0U8YTtFKz1fKWZvcih2YXIgUz0wO1M8bztTKz1fKWZvcih2YXIgTj0wO048aTtOKz1fKWZvcih2YXIgST1NYXRoLm1pbihFK18sYSksTz1NYXRoLm1pbihTK18sbyksaz1NYXRoLm1pbihOK18saSksQT1FO0E8STtBKyspZm9yKHZhciBDPVM7QzxPO0MrKyl7Zm9yKHZhciBQPTAsVD1OO1Q8aztUKyspUCs9dVt4KmYrQSpoK1QqcF0qY1tUKm0rQypnK3gqeV07d1t4KnYrKEEqbytDKV0rPVB9cmV0dXJuIGIudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUubXVsdGlwbHk9ZnVuY3Rpb24odCxlKXtyZXR1cm5cImNvbXBsZXg2NFwiPT09dC5kdHlwZXx8XCJjb21wbGV4NjRcIj09PWUuZHR5cGU/dGhpcy5icm9hZGNhc3RlZEJpbmFyeUNvbXBsZXhPcCh0LmNhc3QoXCJjb21wbGV4NjRcIiksZS5jYXN0KFwiY29tcGxleDY0XCIpLGZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybntyZWFsOnQqbi1lKnIsaW1hZzp0KnIrZSpufX0pOnRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsX3QodC5kdHlwZSxlLmR0eXBlKSxmdW5jdGlvbih0LGUpe3JldHVybiB0KmV9KX0sdC5wcm90b3R5cGUucmVhbERpdmlkZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJyZWFsRGl2aWRlXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJmbG9hdDMyXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC9lfSl9LHQucHJvdG90eXBlLmZsb29yRGl2PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcImZsb29yRGl2XCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJpbnQzMlwiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE1hdGguZmxvb3IodC9lKX0pfSx0LnByb3RvdHlwZS5zdW09ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInN1bVwiKSxzZShcInN1bVwiLGUsdC5yYW5rKTtmb3IodmFyIG49YWUodC5zaGFwZSxlKSxyPW5bMF0saT1uWzFdLGE9cWUocixfdCh0LmR0eXBlLFwiaW50MzJcIikpLG89RShpKSxzPWEuZGF0YVN5bmMoKSx1PXQuZGF0YVN5bmMoKSxjPTA7YzxzLmxlbmd0aDsrK2Mpe2Zvcih2YXIgbD1jKm8sZj0wLGg9MDtoPG87KytoKWYrPXVbbCtoXTtzW2NdPWZ9cmV0dXJuIGF9LHQucHJvdG90eXBlLnByb2Q9ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInN1bVwiKTtmb3IodmFyIG49YWUodC5zaGFwZSxlKSxyPW5bMF0saT1uWzFdLGE9cWUocixfdCh0LmR0eXBlLFwiaW50MzJcIikpLG89RShpKSxzPWEuZGF0YVN5bmMoKSx1PXQuZGF0YVN5bmMoKSxjPTA7YzxzLmxlbmd0aDsrK2Mpe2Zvcih2YXIgbD1jKm8sZj0xLGg9MDtoPG87KytoKWYqPXVbbCtoXTtzW2NdPWZ9cmV0dXJuIGF9LHQucHJvdG90eXBlLnVuc29ydGVkU2VnbWVudFN1bT1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ1bnNvcnRlZFNlZ21lbnRTdW1cIik7Zm9yKHZhciByPVtdLGk9dC5yYW5rLWUucmFuayxhPTA7YTxpOysrYSllPWUuZXhwYW5kRGltcyhhKzEpO2ZvcihhPTA7YTxuOysrYSl7dmFyIG89amUoYSxcImludDMyXCIpLHM9V3MobyxlKS5hc1R5cGUoXCJmbG9hdDMyXCIpLm11bCh0KS5zdW0oMCk7ci5wdXNoKHMpfXJldHVybiBubyhyKX0sdC5wcm90b3R5cGUuYXJnTWluPWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJhcmdNaW5cIik7dmFyIG49W2VdO3NlKFwiYXJnTWluXCIsbix0LnJhbmspO2Zvcih2YXIgcj1hZSh0LnNoYXBlLG4pLGk9clswXSxhPXJbMV0sbz1xZShpLFwiaW50MzJcIikscz1FKGEpLHU9by5kYXRhU3luYygpLGM9dC5kYXRhU3luYygpLGw9MDtsPHUubGVuZ3RoOysrbCl7Zm9yKHZhciBmPWwqcyxoPWNbZl0scD0wLGQ9MDtkPHM7KytkKXt2YXIgbT1jW2YrZF07bTxoJiYoaD1tLHA9ZCl9dVtsXT1wfXJldHVybiBvfSx0LnByb3RvdHlwZS5hcmdNYXg9ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImFyZ01heFwiKTt2YXIgbj1bZV07c2UoXCJhcmdNYXhcIixuLHQucmFuayk7Zm9yKHZhciByPWFlKHQuc2hhcGUsbiksaT1yWzBdLGE9clsxXSxvPXFlKGksXCJpbnQzMlwiKSxzPUUoYSksdT1vLmRhdGFTeW5jKCksYz10LmRhdGFTeW5jKCksbD0wO2w8dS5sZW5ndGg7KytsKXtmb3IodmFyIGY9bCpzLGg9Y1tmXSxwPTAsZD0wO2Q8czsrK2Qpe3ZhciBtPWNbZitkXTttPmgmJihoPW0scD1kKX11W2xdPXB9cmV0dXJuIG99LHQucHJvdG90eXBlLmN1bXN1bT1mdW5jdGlvbih0LGUsbixyKXtpZih0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImN1bXN1bVwiKSxlIT09dC5yYW5rLTEpdGhyb3cgbmV3IEVycm9yKFwiYmFja2VuZC5jdW1zdW0gaW4gQ1BVIGV4cGVjdHMgYW4gaW5uZXItbW9zdCBheGlzPVwiKyh0LnJhbmstMSkrXCIgYnV0IGdvdCBheGlzPVwiK2UpO2Zvcih2YXIgaT1fdCh0LmR0eXBlLFwiaW50MzJcIiksYT1xZSh0LnNoYXBlLGkpLG89YS5kYXRhU3luYygpLHM9dC5kYXRhU3luYygpLHU9dC5zaGFwZVt0LnJhbmstMV0sYz1yP2Z1bmN0aW9uKHQsZSl7cmV0dXJuIHQrdS1lLTF9OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0sbD0wO2w8cy5sZW5ndGg7bCs9dSlmb3IodmFyIGY9MDtmPHU7ZisrKXt2YXIgaD1jKGwsZik7aWYoMD09PWYpb1toXT1uPzA6c1toXTtlbHNle3ZhciBwPWMobCxmLTEpO29baF09bj9zW3BdK29bcF06c1toXStvW3BdfX1yZXR1cm4gYX0sdC5wcm90b3R5cGUuZXF1YWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwiZXF1YWxcIiksdGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSxcImJvb2xcIixmdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZT8xOjB9KX0sdC5wcm90b3R5cGUubm90RXF1YWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwibm90RXF1YWxcIiksdGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSxcImJvb2xcIixmdW5jdGlvbih0LGUpe3JldHVybiB0IT09ZT8xOjB9KX0sdC5wcm90b3R5cGUubGVzcz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJsZXNzXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJib29sXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gdDxlPzE6MH0pfSx0LnByb3RvdHlwZS5sZXNzRXF1YWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwibGVzc0VxdWFsXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJib29sXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gdDw9ZT8xOjB9KX0sdC5wcm90b3R5cGUuZ3JlYXRlcj1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJncmVhdGVyXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJib29sXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gdD5lPzE6MH0pfSx0LnByb3RvdHlwZS5ncmVhdGVyRXF1YWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwiZ3JlYXRlckVxdWFsXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsXCJib29sXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gdD49ZT8xOjB9KX0sdC5wcm90b3R5cGUubG9naWNhbE5vdD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImxvZ2ljYWxOb3RcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBVaW50OEFycmF5KGUubGVuZ3RoKSxyPTA7cjxlLmxlbmd0aDsrK3IpbltyXT1lW3JdPzA6MTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0sXCJib29sXCIpfSx0LnByb3RvdHlwZS5sb2dpY2FsQW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcImxvZ2ljYWxBbmRcIiksdGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSxcImJvb2xcIixmdW5jdGlvbih0LGUpe3JldHVybiB0JiZlfSl9LHQucHJvdG90eXBlLmxvZ2ljYWxPcj1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJsb2dpY2FsT3JcIiksdGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSxcImJvb2xcIixmdW5jdGlvbih0LGUpe3JldHVybiB0fHxlfSl9LHQucHJvdG90eXBlLnNlbGVjdD1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGUsbl0sXCJzZWxlY3RcIik7Zm9yKHZhciByPXQuZGF0YVN5bmMoKSxpPWUuZGF0YVN5bmMoKSxhPW4uZGF0YVN5bmMoKSxvPXFlKGUuc2hhcGUsX3QoZS5kdHlwZSxuLmR0eXBlKSkscz1vLmRhdGFTeW5jKCksdT0wLGM9MD09PXQucmFua3x8dC5yYW5rPjF8fDE9PT1lLnJhbms/MTplLnNoYXBlWzFdLGw9MDtsPHIubGVuZ3RoO2wrKylmb3IodmFyIGY9MDtmPGM7ZisrKTE9PT1yW2xdP3NbdSsrXT1pW2xdOnNbdSsrXT1hW2xdO3JldHVybiBvfSx0LnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3RdLFwid2hlcmVcIik7dmFyIGU9dC5kYXRhU3luYygpO3JldHVybiBzbyh0LnNoYXBlLGUpfSx0LnByb3RvdHlwZS50b3BrPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ0b3BrXCIpLHVuKHQuZGF0YVN5bmMoKSx0LnNoYXBlLHQuZHR5cGUsZSl9LHQucHJvdG90eXBlLm1pbj1mdW5jdGlvbih0LGUpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwibWluXCIpLHNlKFwibWluXCIsZSx0LnJhbmspO2Zvcih2YXIgbj1hZSh0LnNoYXBlLGUpLHI9blswXSxpPW5bMV0sYT1xZShyLHQuZHR5cGUpLG89RShpKSxzPWEuZGF0YVN5bmMoKSx1PXQuZGF0YVN5bmMoKSxjPTA7YzxzLmxlbmd0aDsrK2Mpe2Zvcih2YXIgbD1jKm8sZj11W2xdLGg9MDtoPG87KytoKXt2YXIgcD11W2wraF07cDxmJiYoZj1wKX1zW2NdPWZ9cmV0dXJuIGF9LHQucHJvdG90eXBlLm1pbmltdW09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwibWluaW11bVwiKSx0aGlzLmJyb2FkY2FzdGVkQmluYXJ5T3AodCxlLHQuZHR5cGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gTWF0aC5taW4odCxlKX0pfSx0LnByb3RvdHlwZS5tb2Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwibW9kXCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsdC5kdHlwZSxmdW5jdGlvbih0LGUpe3ZhciBuPXQlZTtyZXR1cm4gdDwwJiZlPDB8fHQ+PTAmJmU+PTA/bjoobitlKSVlfSl9LHQucHJvdG90eXBlLm1heD1mdW5jdGlvbih0LGUpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwibWF4XCIpLHNlKFwibWF4XCIsZSx0LnJhbmspO2Zvcih2YXIgbj1hZSh0LnNoYXBlLGUpLHI9blswXSxpPW5bMV0sYT1xZShyLHQuZHR5cGUpLG89RShpKSxzPWEuZGF0YVN5bmMoKSx1PXQuZGF0YVN5bmMoKSxjPTA7YzxzLmxlbmd0aDsrK2Mpe2Zvcih2YXIgbD1jKm8sZj11W2xdLGg9MDtoPG87KytoKXt2YXIgcD11W2wraF07cD5mJiYoZj1wKX1zW2NdPWZ9cmV0dXJuIGF9LHQucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwibWF4aW11bVwiKSx0aGlzLmJyb2FkY2FzdGVkQmluYXJ5T3AodCxlLHQuZHR5cGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gTWF0aC5tYXgodCxlKX0pfSx0LnByb3RvdHlwZS5hbGw9ZnVuY3Rpb24odCxlKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImFsbFwiKSxzZShcImFsbFwiLGUsdC5yYW5rKTtmb3IodmFyIG49YWUodC5zaGFwZSxlKSxyPW5bMF0saT1uWzFdLGE9cWUocix0LmR0eXBlKSxvPUUoaSkscz1hLmRhdGFTeW5jKCksdT10LmRhdGFTeW5jKCksYz0wO2M8cy5sZW5ndGg7KytjKXtmb3IodmFyIGw9YypvLGY9dVtsXSxoPTA7aDxvOysraCl7dmFyIHA9dVtsK2hdO2Y9ZiYmcH1zW2NdPWZ9cmV0dXJuIGF9LHQucHJvdG90eXBlLmFueT1mdW5jdGlvbih0LGUpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiYW55XCIpLHNlKFwiYW55XCIsZSx0LnJhbmspO2Zvcih2YXIgbj1hZSh0LnNoYXBlLGUpLHI9blswXSxpPW5bMV0sYT1xZShyLHQuZHR5cGUpLG89RShpKSxzPWEuZGF0YVN5bmMoKSx1PXQuZGF0YVN5bmMoKSxjPTA7YzxzLmxlbmd0aDsrK2Mpe2Zvcih2YXIgbD1jKm8sZj11W2xdLGg9MDtoPG87KytoKXt2YXIgcD11W2wraF07Zj1mfHxwfXNbY109Zn1yZXR1cm4gYX0sdC5wcm90b3R5cGUuc3F1YXJlZERpZmZlcmVuY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwic3F1YXJlZERpZmZlcmVuY2VcIiksdGhpcy5icm9hZGNhc3RlZEJpbmFyeU9wKHQsZSx0LmR0eXBlLGZ1bmN0aW9uKHQsZSl7dmFyIG49dC1lO3JldHVybiBuKm59KX0sdC5wcm90b3R5cGUuY2VpbD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImNlaWxcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBGbG9hdDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrciluW3JdPU1hdGguY2VpbChlW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5mbG9vcj1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImZsb29yXCIpO2Zvcih2YXIgZT10LmRhdGFTeW5jKCksbj1uZXcgRmxvYXQzMkFycmF5KGUubGVuZ3RoKSxyPTA7cjxlLmxlbmd0aDsrK3IpbltyXT1NYXRoLmZsb29yKGVbcl0pO3JldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczpufSl9LHQucHJvdG90eXBlLnNpZ249ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ4XCIpO2Zvcih2YXIgZT10LmRhdGFTeW5jKCksbj1uZXcgRmxvYXQzMkFycmF5KGUubGVuZ3RoKSxyPTA7cjxlLmxlbmd0aDsrK3IpZVtyXTwwP25bcl09LTE6ZVtyXT4wP25bcl09MTpuW3JdPTA7cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOm59KX0sdC5wcm90b3R5cGUucm91bmQ9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJyb3VuZFwiKTtmb3IodmFyIGU9dC5kYXRhU3luYygpLG49bmV3IEZsb2F0MzJBcnJheShlLmxlbmd0aCkscj0wO3I8ZS5sZW5ndGg7KytyKXt2YXIgaT1NYXRoLmZsb29yKGVbcl0pO2Vbcl0taTwuNT9uW3JdPU1hdGguZmxvb3IoZVtyXSk6ZVtyXS1pPi41P25bcl09TWF0aC5jZWlsKGVbcl0pOm5bcl09aSUyPT0wP2k6aSsxfXJldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczpufSl9LHQucHJvdG90eXBlLmV4cD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImV4cFwiKTtmb3IodmFyIGU9dC5kYXRhU3luYygpLG49bmV3IEZsb2F0MzJBcnJheShlLmxlbmd0aCkscj0wO3I8ZS5sZW5ndGg7KytyKW5bcl09TWF0aC5leHAoZVtyXSk7cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOm59KX0sdC5wcm90b3R5cGUuZXhwbTE9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJleHBtMVwiKTtmb3IodmFyIGU9dC5kYXRhU3luYygpLG49bmV3IEZsb2F0MzJBcnJheShlLmxlbmd0aCkscj0wO3I8ZS5sZW5ndGg7KytyKW5bcl09TWF0aC5leHBtMShlW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5sb2c9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJsb2dcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBGbG9hdDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcil7dmFyIGk9ZVtyXTtuW3JdPU1hdGgubG9nKGkpfXJldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczpufSl9LHQucHJvdG90eXBlLmxvZzFwPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwibG9nMXBcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBGbG9hdDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcil7dmFyIGk9ZVtyXTtuW3JdPU1hdGgubG9nMXAoaSl9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOm59KX0sdC5wcm90b3R5cGUuc3FydD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInNxcnRcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBGbG9hdDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcil7dmFyIGk9ZVtyXTtuW3JdPU1hdGguc3FydChpKX1yZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5yc3FydD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInJzcXJ0XCIpO2Zvcih2YXIgZT10LmRhdGFTeW5jKCksbj1uZXcgRmxvYXQzMkFycmF5KGUubGVuZ3RoKSxyPTA7cjxlLmxlbmd0aDsrK3Ipe3ZhciBpPWVbcl07bltyXT0xL01hdGguc3FydChpKX1yZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5zcXVhcmU9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJzcXVhcmVcIik7Zm9yKHZhciBlPXQuZGF0YVN5bmMoKSxuPW5ldyBGbG9hdDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtyPGUubGVuZ3RoOysrcil7dmFyIGk9ZVtyXTtuW3JdPWkqaX1yZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5yZWNpcHJvY2FsPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwicmVjaXByb2NhbFwiKTtmb3IodmFyIGU9dC5kYXRhU3luYygpLG49bmV3IEZsb2F0MzJBcnJheShlLmxlbmd0aCkscj0wO3I8ZS5sZW5ndGg7KytyKW5bcl09MS9lW3JdO3JldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczpufSl9LHQucHJvdG90eXBlLnJlbHU9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJyZWx1XCIpO2Zvcih2YXIgZT1xZSh0LnNoYXBlLHQuZHR5cGUpLG49ZS5kYXRhU3luYygpLHI9dC5kYXRhU3luYygpLGk9MDtpPHIubGVuZ3RoOysraSluW2ldPU1hdGgubWF4KDAscltpXSk7cmV0dXJuIGV9LHQucHJvdG90eXBlLnByZWx1PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcInByZWx1XCIpLHRoaXMuYnJvYWRjYXN0ZWRCaW5hcnlPcCh0LGUsdC5kdHlwZSxmdW5jdGlvbih0LGUpe3JldHVybiB0PDA/ZSp0OnR9KX0sdC5wcm90b3R5cGUuZWx1PWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiZWx1XCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKXt2YXIgaT1uW3JdO2Vbcl09aT49MD9pOk1hdGguZXhwKGkpLTF9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOmV9KX0sdC5wcm90b3R5cGUuZWx1RGVyPWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwiZWx1RGVyXCIpO2Zvcih2YXIgbj1uZXcgRmxvYXQzMkFycmF5KGUuc2l6ZSkscj1lLmRhdGFTeW5jKCksaT10LmRhdGFTeW5jKCksYT0wO2E8ci5sZW5ndGg7KythKXt2YXIgbz1yW2FdO25bYV09bz49MT9pW2FdOmlbYV0qKG8rMSl9cmV0dXJuIGZ0Lm1ha2UoZS5zaGFwZSx7dmFsdWVzOm59KX0sdC5wcm90b3R5cGUuc2VsdT1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInNlbHVcIik7Zm9yKHZhciBlPWlhLG49YWEscj1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksaT10LmRhdGFTeW5jKCksYT0wO2E8aS5sZW5ndGg7KythKXt2YXIgbz1pW2FdO3JbYV09bz49MD9uKm86ZSooTWF0aC5leHAobyktMSl9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOnJ9KX0sdC5wcm90b3R5cGUuY2xpcD1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJjbGlwXCIpO2Zvcih2YXIgcj1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksaT10LmRhdGFTeW5jKCksYT0wO2E8aS5sZW5ndGg7KythKXt2YXIgbz1pW2FdO3JbYV09bz5uP246bzxlP2U6b31yZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6cn0pfSx0LnByb3RvdHlwZS5hYnM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxuPXQuZGF0YVN5bmMoKSxyPTA7cjxuLmxlbmd0aDsrK3IpZVtyXT1NYXRoLmFicyhuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5jb21wbGV4QWJzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8dC5zaXplOysrcil7dmFyIGk9blsyKnJdLGE9blsyKnIrMV07ZVtyXT1NYXRoLmh5cG90KGksYSl9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOmV9KX0sdC5wcm90b3R5cGUuaW50PWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiaW50XCIpO2Zvcih2YXIgZT1uZXcgSW50MzJBcnJheSh0LnNpemUpLG49dC5kYXRhU3luYygpLHI9MDtyPG4ubGVuZ3RoOysrcillW3JdPW5bcl07cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOmV9LFwiaW50MzJcIil9LHQucHJvdG90eXBlLnNpZ21vaWQ9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJzaWdtb2lkXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09MS8oMStNYXRoLmV4cCgtbltyXSkpO3JldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczplfSl9LHQucHJvdG90eXBlLnNvZnRwbHVzPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwic29mdHBsdXNcIik7Zm9yKHZhciBlPU1hdGgubG9nKDEuMTkyMDkyODk1NTA3ODEyNWUtNykrMixuPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxyPXQuZGF0YVN5bmMoKSxpPTA7aTxyLmxlbmd0aDsrK2kpe3ZhciBhLG89cltpXT4tZSxzPXJbaV08ZSx1PU1hdGguZXhwKHJbaV0pO2E9cz91Om8/cltpXTpNYXRoLmxvZygxK3UpLG5baV09YX1yZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6bn0pfSx0LnByb3RvdHlwZS5zaW49ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJzaW5cIik7Zm9yKHZhciBlPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxuPXQuZGF0YVN5bmMoKSxyPTA7cjxuLmxlbmd0aDsrK3IpZVtyXT1NYXRoLnNpbihuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5jb3M9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJjb3NcIik7Zm9yKHZhciBlPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxuPXQuZGF0YVN5bmMoKSxyPTA7cjxuLmxlbmd0aDsrK3IpZVtyXT1NYXRoLmNvcyhuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS50YW49ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ0YW5cIik7Zm9yKHZhciBlPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxuPXQuZGF0YVN5bmMoKSxyPTA7cjxuLmxlbmd0aDsrK3IpZVtyXT1NYXRoLnRhbihuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hc2luPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiYXNpblwiKTtmb3IodmFyIGU9bmV3IEZsb2F0MzJBcnJheSh0LnNpemUpLG49dC5kYXRhU3luYygpLHI9MDtyPG4ubGVuZ3RoOysrcillW3JdPU1hdGguYXNpbihuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hY29zPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiYWNvc1wiKTtmb3IodmFyIGU9bmV3IEZsb2F0MzJBcnJheSh0LnNpemUpLG49dC5kYXRhU3luYygpLHI9MDtyPG4ubGVuZ3RoOysrcillW3JdPU1hdGguYWNvcyhuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hdGFuPWZ1bmN0aW9uKHQpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwiYXRhblwiKTtmb3IodmFyIGU9bmV3IEZsb2F0MzJBcnJheSh0LnNpemUpLG49dC5kYXRhU3luYygpLHI9MDtyPG4ubGVuZ3RoOysrcillW3JdPU1hdGguYXRhbihuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hdGFuMj1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJhdGFuMlwiKSx0aGlzLmJyb2FkY2FzdGVkQmluYXJ5T3AodCxlLHQuZHR5cGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gTWF0aC5hdGFuMih0LGUpfSl9LHQucHJvdG90eXBlLnNpbmg9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJzaW5oXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09TWF0aC5zaW5oKG5bcl0pO3JldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczplfSl9LHQucHJvdG90eXBlLmNvc2g9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJjb3NoXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09TWF0aC5jb3NoKG5bcl0pO3JldHVybiBmdC5tYWtlKHQuc2hhcGUse3ZhbHVlczplfSl9LHQucHJvdG90eXBlLnRhbmg9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ0YW5oXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09SShuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hc2luaD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImFzaW5oXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09TWF0aC5hc2luaChuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hY29zaD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImFjb3NoXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09TWF0aC5hY29zaChuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5hdGFuaD1mdW5jdGlvbih0KXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImF0YW5oXCIpO2Zvcih2YXIgZT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSksbj10LmRhdGFTeW5jKCkscj0wO3I8bi5sZW5ndGg7KytyKWVbcl09TWF0aC5hdGFuaChuW3JdKTtyZXR1cm4gZnQubWFrZSh0LnNoYXBlLHt2YWx1ZXM6ZX0pfSx0LnByb3RvdHlwZS5lcmY9ZnVuY3Rpb24odCl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJlcmZcIik7Zm9yKHZhciBlPW5ldyBGbG9hdDMyQXJyYXkodC5zaXplKSxuPXQuZGF0YVN5bmMoKSxyPTA7cjxuLmxlbmd0aDsrK3Ipe3ZhciBpPW5bcl0sYT0xLygxKy4zMjc1OTExKmkpO2Vbcl09MS0oKCgoMS4wNjE0MDU0MjkqYS0xLjQ1MzE1MjAyNykqYSsxLjQyMTQxMzc0MSkqYS0uMjg0NDk2NzM2KSphKy4yNTQ4Mjk1OTIpKmEqTWF0aC5leHAoLWkqaSl9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOmV9KX0sdC5wcm90b3R5cGUuc3RlcD1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPTApLHRoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwic3RlcFwiKTtmb3IodmFyIG49bmV3IEZsb2F0MzJBcnJheSh0LnNpemUpLHI9dC5kYXRhU3luYygpLGk9MDtpPHIubGVuZ3RoOysraSl7dmFyIGE9cltpXTtpc05hTihhKT9uW2ldPU5hTjpuW2ldPWE+MD8xOmV9cmV0dXJuIGZ0Lm1ha2UodC5zaGFwZSx7dmFsdWVzOm59KX0sdC5wcm90b3R5cGUuY29udjJkPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJjb252MmRcIik7Zm9yKHZhciByPW4uZmlsdGVySGVpZ2h0LGk9bi5maWx0ZXJXaWR0aCxhPW4uZGlsYXRpb25IZWlnaHQsbz1uLmRpbGF0aW9uV2lkdGgscz1uLnBhZEluZm8ubGVmdCx1PW4ucGFkSW5mby50b3AsYz1SYShuLm91dFNoYXBlLHQuZHR5cGUpLGw9dC5kYXRhU3luYygpLGY9ZS5kYXRhU3luYygpLGg9Yy52YWx1ZXMscD0wO3A8bi5iYXRjaFNpemU7KytwKWZvcih2YXIgZD1wKnQuc3RyaWRlc1swXSxtPXAqYy5zdHJpZGVzWzBdLGc9MDtnPG4ub3V0SGVpZ2h0OysrZylmb3IodmFyIHk9bStnKmMuc3RyaWRlc1sxXSx2PWcqbi5zdHJpZGVIZWlnaHQtcyxiPTA7YjxyO2IrKyl7dmFyIHc9ditiKmE7aWYoISh3PDB8fHc+PW4uaW5IZWlnaHQpKWZvcih2YXIgXz1iKmUuc3RyaWRlc1swXSx4PWQrdyp0LnN0cmlkZXNbMV0sRT0wO0U8bi5vdXRXaWR0aDsrK0UpZm9yKHZhciBTPXkrRSpuLm91dENoYW5uZWxzLE49RSpuLnN0cmlkZVdpZHRoLXUsST0wO0k8aTtJKyspe3ZhciBPPU4rSSpvO2lmKCEoTzwwfHxPPj1uLmluV2lkdGgpKWZvcih2YXIgaz1fK0kqZS5zdHJpZGVzWzFdLEE9eCtPKm4uaW5DaGFubmVscyxDPWssUD0wO1A8bi5pbkNoYW5uZWxzOysrUCl7Zm9yKHZhciBUPWxbQStQXSxSPTA7UjxuLm91dENoYW5uZWxzOysrUiloW1MrUl0rPVQqZltDK1JdO0MrPW4ub3V0Q2hhbm5lbHN9fX1yZXR1cm4gYy50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5jb252M2Q9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1uLmZpbHRlckRlcHRoLGk9bi5maWx0ZXJIZWlnaHQsYT1uLmZpbHRlcldpZHRoLG89bi5kaWxhdGlvbkRlcHRoLHM9bi5kaWxhdGlvbkhlaWdodCx1PW4uZGlsYXRpb25XaWR0aCxjPW4ucGFkSW5mby5mcm9udCxsPW4ucGFkSW5mby5sZWZ0LGY9bi5wYWRJbmZvLnRvcCxoPVJhKG4ub3V0U2hhcGUsdC5kdHlwZSkscD10LmRhdGFTeW5jKCksZD1lLmRhdGFTeW5jKCksbT1oLnZhbHVlcyxnPTA7ZzxuLmJhdGNoU2l6ZTsrK2cpZm9yKHZhciB5PWcqdC5zdHJpZGVzWzBdLHY9ZypoLnN0cmlkZXNbMF0sYj0wO2I8bi5vdXREZXB0aDsrK2IpZm9yKHZhciB3PXYrYipoLnN0cmlkZXNbMV0sXz1iKm4uc3RyaWRlRGVwdGgtYyx4PTA7eDxyO3grKyl7dmFyIEU9Xyt4Km87aWYoIShFPDB8fEU+PW4uaW5EZXB0aCkpZm9yKHZhciBTPXgqZS5zdHJpZGVzWzBdLE49eStFKnQuc3RyaWRlc1sxXSxJPTA7STxuLm91dEhlaWdodDsrK0kpZm9yKHZhciBPPXcrSSpoLnN0cmlkZXNbMl0saz1JKm4uc3RyaWRlSGVpZ2h0LWYsQT0wO0E8aTtBKyspe3ZhciBDPWsrQSpzO2lmKCEoQzwwfHxDPj1uLmluSGVpZ2h0KSlmb3IodmFyIFA9UytBKmUuc3RyaWRlc1sxXSxUPU4rQyp0LnN0cmlkZXNbMl0sUj0wO1I8bi5vdXRXaWR0aDsrK1IpZm9yKHZhciBEPU8rUipuLm91dENoYW5uZWxzLE09UipuLnN0cmlkZVdpZHRoLWwsaj0wO2o8YTtqKyspe3ZhciBCPU0raip1O2lmKCEoQjwwfHxCPj1uLmluV2lkdGgpKWZvcih2YXIgTD1QK2oqZS5zdHJpZGVzWzJdLHo9VCtCKm4uaW5DaGFubmVscyxGPUwsVT0wO1U8bi5pbkNoYW5uZWxzOysrVSl7Zm9yKHZhciBWPXBbeitVXSxXPTA7VzxuLm91dENoYW5uZWxzOysrVyltW0QrV10rPVYqZFtGK1ddO0YrPW4ub3V0Q2hhbm5lbHN9fX19cmV0dXJuIGgudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUuY29udjJkRGVySW5wdXQ9ZnVuY3Rpb24odCxlLG4pe3RoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcImNvbnYyZERlcklucHV0XCIpO2Zvcih2YXIgcj1SYShuLmluU2hhcGUsXCJmbG9hdDMyXCIpLGk9ci52YWx1ZXMsYT1yLnN0cmlkZXMsbz1hWzBdLHM9YVsxXSx1PWFbMl0sYz10LmRhdGFTeW5jKCksbD10LnN0cmlkZXMsZj1sWzBdLGg9bFsxXSxwPWxbMl0sZD1lLmRhdGFTeW5jKCksbT1lLnN0cmlkZXMsZz1tWzBdLHk9bVsxXSx2PW1bMl0sYj1uLmJhdGNoU2l6ZSx3PW4uZmlsdGVySGVpZ2h0LF89bi5maWx0ZXJXaWR0aCx4PW4uaW5DaGFubmVscyxFPW4uaW5IZWlnaHQsUz1uLmluV2lkdGgsTj1uLm91dENoYW5uZWxzLEk9bi5vdXRIZWlnaHQsTz1uLm91dFdpZHRoLGs9bi5zdHJpZGVIZWlnaHQsQT1uLnN0cmlkZVdpZHRoLEM9dy0xLW4ucGFkSW5mby50b3AsUD1fLTEtbi5wYWRJbmZvLmxlZnQsVD0wO1Q8YjsrK1QpZm9yKHZhciBSPTA7Ujx4OysrUilmb3IodmFyIEQ9MDtEPEU7KytEKWZvcih2YXIgTT1ELUMsaj1NYXRoLm1heCgwLE1hdGguY2VpbChNL2spKSxCPU1hdGgubWluKEksKHcrTSkvayksTD0wO0w8UzsrK0wpe2Zvcih2YXIgej1MLVAsRj1NYXRoLm1heCgwLE1hdGguY2VpbCh6L0EpKSxVPU1hdGgubWluKE8sKF8reikvQSksVj0wLFc9ajtXPEI7KytXKWZvcih2YXIgcT1XKmstTSwkPUY7JDxVOysrJClmb3IodmFyIEg9ZipUK2gqVytwKiQsSz1nKih3LTEtcSkreSooXy0xLSgkKkEteikpK3YqUixHPTA7RzxOOysrRylWKz1jW0grR10qZFtLK0ddO2lbbypUK3MqRCt1KkwrUl09Vn1yZXR1cm4gci50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5jb252M2REZXJJbnB1dD1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPVJhKG4uaW5TaGFwZSxcImZsb2F0MzJcIiksaT1yLnZhbHVlcyxhPXIuc3RyaWRlcyxvPWFbMF0scz1hWzFdLHU9YVsyXSxjPWFbM10sbD10LmRhdGFTeW5jKCksZj10LnN0cmlkZXMsaD1mWzBdLHA9ZlsxXSxkPWZbMl0sbT1mWzNdLGc9ZS5kYXRhU3luYygpLHk9ZS5zdHJpZGVzLHY9eVswXSxiPXlbMV0sdz15WzJdLF89eVszXSx4PW4uYmF0Y2hTaXplLEU9bi5maWx0ZXJEZXB0aCxTPW4uZmlsdGVySGVpZ2h0LE49bi5maWx0ZXJXaWR0aCxJPW4uaW5DaGFubmVscyxPPW4uaW5EZXB0aCxrPW4uaW5IZWlnaHQsQT1uLmluV2lkdGgsQz1uLm91dENoYW5uZWxzLFA9bi5vdXREZXB0aCxUPW4ub3V0SGVpZ2h0LFI9bi5vdXRXaWR0aCxEPW4uc3RyaWRlRGVwdGgsTT1uLnN0cmlkZUhlaWdodCxqPW4uc3RyaWRlV2lkdGgsQj1FLTEtbi5wYWRJbmZvLmZyb250LEw9Uy0xLW4ucGFkSW5mby50b3Asej1OLTEtbi5wYWRJbmZvLmxlZnQsRj0wO0Y8eDsrK0YpZm9yKHZhciBVPTA7VTxJOysrVSlmb3IodmFyIFY9MDtWPE87KytWKWZvcih2YXIgVz1WLUIscT1NYXRoLm1heCgwLE1hdGguY2VpbChXL0QpKSwkPU1hdGgubWluKFAsKEUrVykvRCksSD0wO0g8azsrK0gpZm9yKHZhciBLPUgtTCxHPU1hdGgubWF4KDAsTWF0aC5jZWlsKEsvTSkpLFg9TWF0aC5taW4oVCwoUytLKS9NKSxZPTA7WTxBOysrWSl7Zm9yKHZhciBKPVkteixaPU1hdGgubWF4KDAsTWF0aC5jZWlsKEovaikpLFE9TWF0aC5taW4oUiwoTitKKS9qKSx0dD0wLGV0PXE7ZXQ8JDsrK2V0KWZvcih2YXIgbnQ9ZXQqRC1XLHJ0PUc7cnQ8WDsrK3J0KWZvcih2YXIgaXQ9cnQqTS1LLGF0PVo7YXQ8UTsrK2F0KWZvcih2YXIgb3Q9aCpGK3AqZXQrZCpydCttKmF0LHN0PXYqKEUtMS1udCkrYiooUy0xLWl0KSt3KihOLTEtKGF0KmotSikpK18qVSx1dD0wO3V0PEM7Kyt1dCl0dCs9bFtvdCt1dF0qZ1tzdCt1dF07aVtvKkYrcypWK3UqSCtjKlkrVV09dHR9cmV0dXJuIHIudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUuY29udjJkRGVyRmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJjb252MmREZXJGaWx0ZXJcIik7Zm9yKHZhciByPW4uc3RyaWRlSGVpZ2h0LGk9bi5zdHJpZGVXaWR0aCxhPW4uZmlsdGVySGVpZ2h0LG89bi5maWx0ZXJXaWR0aCxzPVJhKG4uZmlsdGVyU2hhcGUsXCJmbG9hdDMyXCIpLHU9bi5wYWRJbmZvLmxlZnQsYz1uLnBhZEluZm8udG9wLGw9MDtsPGE7KytsKWZvcih2YXIgZj1NYXRoLm1heCgwLE1hdGguY2VpbCgoYy1sKS9yKSksaD1NYXRoLm1pbihuLm91dEhlaWdodCwobi5pbkhlaWdodCtjLWwpL3IpLHA9MDtwPG87KytwKWZvcih2YXIgZD1NYXRoLm1heCgwLE1hdGguY2VpbCgodS1wKS9pKSksbT1NYXRoLm1pbihuLm91dFdpZHRoLChuLmluV2lkdGgrdS1wKS9pKSxnPTA7ZzxuLmluQ2hhbm5lbHM7KytnKWZvcih2YXIgeT0wO3k8bi5vdXRDaGFubmVsczsrK3kpe2Zvcih2YXIgdj0wLGI9MDtiPG4uYmF0Y2hTaXplOysrYilmb3IodmFyIHc9Zjt3PGg7Kyt3KWZvcih2YXIgXz1sK3cqci1jLHg9ZDt4PG07Kyt4KXt2YXIgRT1wK3gqaS11O3YrPXQuZ2V0KGIsXyxFLGcpKmUuZ2V0KGIsdyx4LHkpfXMuc2V0KHYsbCxwLGcseSl9cmV0dXJuIHMudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUuY29udjNkRGVyRmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9bi5zdHJpZGVEZXB0aCxpPW4uc3RyaWRlSGVpZ2h0LGE9bi5zdHJpZGVXaWR0aCxvPW4uZmlsdGVyRGVwdGgscz1uLmZpbHRlckhlaWdodCx1PW4uZmlsdGVyV2lkdGgsYz1SYShuLmZpbHRlclNoYXBlLFwiZmxvYXQzMlwiKSxsPWMudmFsdWVzLGY9Yy5zdHJpZGVzLGg9ZlswXSxwPWZbMV0sZD1mWzJdLG09ZlszXSxnPWUuZGF0YVN5bmMoKSx5PWUuc3RyaWRlcyx2PXlbMF0sYj15WzFdLHc9eVsyXSxfPXlbM10seD10LmRhdGFTeW5jKCksRT10LnN0cmlkZXMsUz1FWzBdLE49RVsxXSxJPUVbMl0sTz1FWzNdLGs9bi5wYWRJbmZvLmZyb250LEE9bi5wYWRJbmZvLmxlZnQsQz1uLnBhZEluZm8udG9wLFA9MDtQPG87KytQKWZvcih2YXIgVD1NYXRoLm1heCgwLE1hdGguY2VpbCgoay1QKS9yKSksUj1NYXRoLm1pbihuLm91dERlcHRoLChuLmluRGVwdGgray1QKS9yKSxEPVAqaCxNPTA7TTxzOysrTSlmb3IodmFyIGo9TWF0aC5tYXgoMCxNYXRoLmNlaWwoKEMtTSkvaSkpLEI9TWF0aC5taW4obi5vdXRIZWlnaHQsKG4uaW5IZWlnaHQrQy1NKS9pKSxMPU0qcCtELHo9MDt6PHU7Kyt6KWZvcih2YXIgRj1NYXRoLm1heCgwLE1hdGguY2VpbCgoQS16KS9hKSksVT1NYXRoLm1pbihuLm91dFdpZHRoLChuLmluV2lkdGgrQS16KS9hKSxWPXoqZCtMLFc9MDtXPG4uaW5DaGFubmVsczsrK1cpZm9yKHZhciBxPVcqbStWLCQ9MDskPG4ub3V0Q2hhbm5lbHM7KyskKXtmb3IodmFyIEg9MCxLPTA7SzxuLmJhdGNoU2l6ZTsrK0spZm9yKHZhciBHPUsqUyxYPUsqdixZPVQ7WTxSOysrWSlmb3IodmFyIEo9KFArWSpyLWspKk4rRyxaPVkqYitYLFE9ajtRPEI7KytRKWZvcih2YXIgdHQ9KE0rUSppLUMpKkkrSixldD1RKncrWixudD1GO250PFU7KytudCl7dmFyIHJ0PW50Kl8rZXQ7SCs9eFsoeitudCphLUEpKk8rdHQrV10qZ1tydCskXX1sW3ErJF09SH1yZXR1cm4gYy50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5kZXB0aHdpc2VDb252MkQ9ZnVuY3Rpb24odCxlLG4pe3RoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcImRlcHRod2lzZUNvbnYyRFwiKTtmb3IodmFyIHI9bi5maWx0ZXJIZWlnaHQsaT1uLmZpbHRlcldpZHRoLGE9bi5kaWxhdGlvbkhlaWdodCxvPW4uZGlsYXRpb25XaWR0aCxzPW4ucGFkSW5mby5sZWZ0LHU9bi5wYWRJbmZvLnRvcCxjPW4ub3V0Q2hhbm5lbHMvbi5pbkNoYW5uZWxzLGw9UmEobi5vdXRTaGFwZSx0LmR0eXBlKSxmPXQuZGF0YVN5bmMoKSxoPWUuZGF0YVN5bmMoKSxwPWwudmFsdWVzLGQ9MDtkPG4uYmF0Y2hTaXplOysrZClmb3IodmFyIG09ZCp0LnN0cmlkZXNbMF0sZz1kKmwuc3RyaWRlc1swXSx5PTA7eTxuLm91dEhlaWdodDsrK3kpZm9yKHZhciB2PWcreSpsLnN0cmlkZXNbMV0sYj15Km4uc3RyaWRlSGVpZ2h0LXMsdz0wO3c8cjsrK3cpe3ZhciBfPWIrdyphO2lmKCEoXzwwfHxfPj1uLmluSGVpZ2h0KSlmb3IodmFyIHg9dyplLnN0cmlkZXNbMF0sRT1tK18qdC5zdHJpZGVzWzFdLFM9MDtTPG4ub3V0V2lkdGg7KytTKWZvcih2YXIgTj12K1MqbC5zdHJpZGVzWzJdLEk9UypuLnN0cmlkZVdpZHRoLXUsTz0wO088aTsrK08pe3ZhciBrPUkrTypvO2lmKCEoazwwfHxrPj1uLmluV2lkdGgpKWZvcih2YXIgQT14K08qZS5zdHJpZGVzWzFdLEM9RStrKm4uaW5DaGFubmVscyxQPU4sVD1BLFI9MDtSPG4uaW5DaGFubmVsczsrK1Ipe2Zvcih2YXIgRD1mW0MrUl0sTT0wO008YzsrK00pcFtQK01dKz1EKmhbVCtNXTtQKz1jLFQrPWN9fX1yZXR1cm4gbC50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5kZXB0aHdpc2VDb252MkREZXJJbnB1dD1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwiZGVwdGh3aXNlQ29udjJERGVySW5wdXRcIik7Zm9yKHZhciByPVJhKG4uaW5TaGFwZSxcImZsb2F0MzJcIiksaT1yLnZhbHVlcyxhPXIuc3RyaWRlcyxvPWFbMF0scz1hWzFdLHU9YVsyXSxjPXQuZGF0YVN5bmMoKSxsPXQuc3RyaWRlcyxmPWxbMF0saD1sWzFdLHA9bFsyXSxkPWUuZGF0YVN5bmMoKSxtPWUuc3RyaWRlcyxnPW1bMF0seT1tWzFdLHY9bVsyXSxiPW4uYmF0Y2hTaXplLHc9bi5maWx0ZXJIZWlnaHQsXz1uLmZpbHRlcldpZHRoLHg9bi5pbkNoYW5uZWxzLEU9bi5pbkhlaWdodCxTPW4uaW5XaWR0aCxOPW4ub3V0Q2hhbm5lbHMsST1uLm91dEhlaWdodCxPPW4ub3V0V2lkdGgsaz1uLnN0cmlkZUhlaWdodCxBPW4uc3RyaWRlV2lkdGgsQz13LTEtbi5wYWRJbmZvLnRvcCxQPV8tMS1uLnBhZEluZm8ubGVmdCxUPU4veCxSPTA7UjxiOysrUilmb3IodmFyIEQ9MDtEPHg7KytEKWZvcih2YXIgTT0wO008RTsrK00pZm9yKHZhciBqPU0tQyxCPU1hdGgubWF4KDAsTWF0aC5jZWlsKGovaykpLEw9TWF0aC5taW4oSSwodytqKS9rKSx6PTA7ejxTOysreil7Zm9yKHZhciBGPXotUCxVPU1hdGgubWF4KDAsTWF0aC5jZWlsKEYvQSkpLFY9TWF0aC5taW4oTywoXytGKS9BKSxXPTAscT1CO3E8TDsrK3EpZm9yKHZhciAkPXEqay1qLEg9VTtIPFY7KytIKWZvcih2YXIgSz1mKlIraCpxK3AqSCxHPWcqKHctMS0kKSt5KihfLTEtKEgqQS1GKSkrdipELFg9MDtYPFQ7KytYKVcrPWNbSysoRCpUK1gpXSpkW0crWF07aVtvKlIrcypNK3UqeitEXT1XfXJldHVybiByLnRvVGVuc29yKCl9LHQucHJvdG90eXBlLmRlcHRod2lzZUNvbnYyRERlckZpbHRlcj1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KFt0LGVdLFwiZGVwdGh3aXNlQ29udjJERGVyRmlsdGVyXCIpO2Zvcih2YXIgcj1uLnN0cmlkZUhlaWdodCxpPW4uc3RyaWRlV2lkdGgsYT1uLmZpbHRlckhlaWdodCxvPW4uZmlsdGVyV2lkdGgscz1SYShuLmZpbHRlclNoYXBlLFwiZmxvYXQzMlwiKSx1PW4ucGFkSW5mby5sZWZ0LGM9bi5wYWRJbmZvLnRvcCxsPW4ub3V0Q2hhbm5lbHMvbi5pbkNoYW5uZWxzLGY9MDtmPGE7KytmKWZvcih2YXIgaD1NYXRoLm1heCgwLE1hdGguY2VpbCgoYy1mKS9yKSkscD1NYXRoLm1pbihuLm91dEhlaWdodCwobi5pbkhlaWdodCtjLWYpL3IpLGQ9MDtkPG87KytkKWZvcih2YXIgbT1NYXRoLm1heCgwLE1hdGguY2VpbCgodS1kKS9pKSksZz1NYXRoLm1pbihuLm91dFdpZHRoLChuLmluV2lkdGgrdS1kKS9pKSx5PTA7eTxuLm91dENoYW5uZWxzOysreSl7Zm9yKHZhciB2PU1hdGgudHJ1bmMoeS9sKSxiPXklbCx3PTAsXz0wO188bi5iYXRjaFNpemU7KytfKWZvcih2YXIgeD1oO3g8cDsrK3gpZm9yKHZhciBFPWYreCpyLWMsUz1tO1M8ZzsrK1Mpe3ZhciBOPWQrUyppLXU7dys9dC5nZXQoXyxFLE4sdikqZS5nZXQoXyx4LFMseSl9cy5zZXQodyxmLGQsdixiKX1yZXR1cm4gcy50b1RlbnNvcigpfSx0LnByb3RvdHlwZS50aWxlPWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ0aWxlXCIpO2Zvcih2YXIgbj1uZXcgQXJyYXkodC5yYW5rKSxyPTA7cjxuLmxlbmd0aDtyKyspbltyXT10LnNoYXBlW3JdKmVbcl07dmFyIGk9UmEobix0LmR0eXBlKSxhPXQuYnVmZmVyKCk7Zm9yKHI9MDtyPGkudmFsdWVzLmxlbmd0aDsrK3Ipe2Zvcih2YXIgbz1pLmluZGV4VG9Mb2Mocikscz1uZXcgQXJyYXkodC5yYW5rKSx1PTA7dTxzLmxlbmd0aDt1Kyspc1t1XT1vW3VdJXQuc2hhcGVbdV07dmFyIGM9YS5sb2NUb0luZGV4KHMpO2kudmFsdWVzW3JdPWEudmFsdWVzW2NdfXJldHVybiBpLnRvVGVuc29yKCl9LHQucHJvdG90eXBlLnBhZD1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJwYWRcIik7dmFyIHI9ZS5tYXAoZnVuY3Rpb24oZSxuKXtyZXR1cm4gZVswXSt0LnNoYXBlW25dK2VbMV19KSxpPWUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0WzBdfSksYT10LmJ1ZmZlcigpLG89UmEocix0LmR0eXBlKTswIT09biYmby52YWx1ZXMuZmlsbChuKTtmb3IodmFyIHM9MDtzPHQuc2l6ZTtzKyspe3ZhciB1PWEuaW5kZXhUb0xvYyhzKSxjPXUubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQraVtlXX0pO28uc2V0LmFwcGx5KG8sW3QuZ2V0LmFwcGx5KHQsdSldLmNvbmNhdChjKSl9cmV0dXJuIG8udG9UZW5zb3IoKX0sdC5wcm90b3R5cGUudHJhbnNwb3NlPWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJ0cmFuc3Bvc2VcIik7Zm9yKHZhciBuPW5ldyBBcnJheSh0LnJhbmspLHI9MDtyPG4ubGVuZ3RoO3IrKyluW3JdPXQuc2hhcGVbZVtyXV07dmFyIGk9dC5kYXRhU3luYygpLGE9UmEobix0LmR0eXBlKSxvPXQuYnVmZmVyKCk7Zm9yKHI9MDtyPHQuc2l6ZTsrK3Ipe2Zvcih2YXIgcz1vLmluZGV4VG9Mb2MociksdT1uZXcgQXJyYXkocy5sZW5ndGgpLGM9MDtjPHUubGVuZ3RoO2MrKyl1W2NdPXNbZVtjXV07dmFyIGw9YS5sb2NUb0luZGV4KHUpO2EudmFsdWVzW2xdPWlbcl19cmV0dXJuIGEudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUuZ2F0aGVyPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJnYXRoZXJcIik7dmFyIHI9dC5zaGFwZS5zbGljZSgpLGk9ZS5kYXRhU3luYygpO3Jbbl09aS5sZW5ndGg7Zm9yKHZhciBhPVJhKHIsdC5kdHlwZSksbz10LmJ1ZmZlcigpLHM9MDtzPGEuc2l6ZTsrK3Mpe3ZhciB1PWEuaW5kZXhUb0xvYyhzKSxjPXUuc2xpY2UoKTtjW25dPWlbdVtuXV07dmFyIGw9by5sb2NUb0luZGV4KGMpO2EudmFsdWVzW3NdPW8udmFsdWVzW2xdfXJldHVybiBhLnRvVGVuc29yKCl9LHQucHJvdG90eXBlLmJhdGNoVG9TcGFjZU5EPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3RdLFwiYmF0Y2hUb1NwYWNlTkRcIik7dmFyIHI9ZS5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCplfSksaT1RdCh0LnNoYXBlLGUsciksYT10ZShpLmxlbmd0aCxlLmxlbmd0aCksbz1lZSh0LnNoYXBlLGUscikscz1uZShuLGUubGVuZ3RoKSx1PXJlKG8sbixlLmxlbmd0aCk7cmV0dXJuIHQucmVzaGFwZShpKS50cmFuc3Bvc2UoYSkucmVzaGFwZShvKS5zbGljZShzLHUpfSx0LnByb3RvdHlwZS5zcGFjZVRvQmF0Y2hORD1mdW5jdGlvbih0LGUsbil7dGhpcy5hc3NlcnROb3RDb21wbGV4KFt0XSxcInNwYWNlVG9CYXRjaE5EXCIpO3ZhciByPWUucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQqZX0pLGk9W1swLDBdXTtpLnB1c2guYXBwbHkoaSxuKTtmb3IodmFyIGE9MStlLmxlbmd0aDthPHQuc2hhcGUubGVuZ3RoOysrYSlpLnB1c2goWzAsMF0pO3ZhciBvPXQucGFkKGkpLHM9UXQoby5zaGFwZSxlLHIsITEpLHU9dGUocy5sZW5ndGgsZS5sZW5ndGgsITEpLGM9ZWUoby5zaGFwZSxlLHIsITEpO3JldHVybiBvLnJlc2hhcGUocykudHJhbnNwb3NlKHUpLnJlc2hhcGUoYyl9LHQucHJvdG90eXBlLnBvb2w9ZnVuY3Rpb24odCxlLG4pe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwicG9vbFwiKTtmb3IodmFyIHI9ZS5zdHJpZGVIZWlnaHQsaT1lLnN0cmlkZVdpZHRoLGE9ZS5kaWxhdGlvbkhlaWdodCxvPWUuZGlsYXRpb25XaWR0aCxzPWUuZWZmZWN0aXZlRmlsdGVySGVpZ2h0LHU9ZS5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxjPWUucGFkSW5mby50b3AsbD1lLnBhZEluZm8ubGVmdCxmPVwibWF4XCI9PT1uP051bWJlci5ORUdBVElWRV9JTkZJTklUWTpOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksaD10LmRhdGFTeW5jKCkscD1SYShlLm91dFNoYXBlLHQuZHR5cGUpLGQ9cC52YWx1ZXMsbT1lLm91dFNoYXBlWzFdKmUub3V0U2hhcGVbMl0qZS5vdXRTaGFwZVszXSxnPWUub3V0U2hhcGVbMl0qZS5vdXRTaGFwZVszXSx5PWUub3V0U2hhcGVbM10sdj0wO3Y8ZS5iYXRjaFNpemU7Kyt2KWZvcih2YXIgYj12Km0sdz12KnQuc3RyaWRlc1swXSxfPTA7XzxlLmluQ2hhbm5lbHM7KytfKWZvcih2YXIgeD0wO3g8ZS5vdXRIZWlnaHQ7Kyt4KWZvcih2YXIgRT14KnItYyxTPU1hdGgubWF4KDAsRSksTj1NYXRoLm1pbihlLmluSGVpZ2h0LHMrRSksST1iK3gqZyxPPTA7TzxlLm91dFdpZHRoOysrTyl7Zm9yKHZhciBrPU8qaS1sLEE9TWF0aC5tYXgoMCxrKSxDPU1hdGgubWluKGUuaW5XaWR0aCx1K2spLFA9ZixUPTAsUj0wLEQ9UztEPE47RCs9YSl7Zm9yKHZhciBNPXcrRCp0LnN0cmlkZXNbMV0saj1BO2o8QztqKz1vKXt2YXIgQj1oW00raip0LnN0cmlkZXNbMl0rX107XCJtYXhcIj09PW4mJkI+UD9QPUI6XCJhdmdcIj09PW4mJihUKz1CLFIrKyl9aWYoaXNOYU4oUCkpYnJlYWt9ZFtJK08qeStfXT1cImF2Z1wiPT09bj9UL1I6UH1yZXR1cm4gcC50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5tYXhQb29sPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMucG9vbCh0LGUsXCJtYXhcIil9LHQucHJvdG90eXBlLm1heFBvb2xQb3NpdGlvbnM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49UmEoZS5vdXRTaGFwZSxcImludDMyXCIpLHI9ZS5zdHJpZGVIZWlnaHQsaT1lLnN0cmlkZVdpZHRoLGE9ZS5kaWxhdGlvbkhlaWdodCxvPWUuZGlsYXRpb25XaWR0aCxzPWUuZWZmZWN0aXZlRmlsdGVySGVpZ2h0LHU9ZS5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxjPWUucGFkSW5mby50b3AsbD1lLnBhZEluZm8ubGVmdCxmPTA7ZjxlLmJhdGNoU2l6ZTsrK2YpZm9yKHZhciBoPTA7aDxlLmluQ2hhbm5lbHM7KytoKWZvcih2YXIgcD0wO3A8ZS5vdXRIZWlnaHQ7KytwKXtmb3IodmFyIGQ9cCpyLWMsbT1kO208MDspbSs9YTtmb3IodmFyIGc9TWF0aC5taW4oZS5pbkhlaWdodCxzK2QpLHk9MDt5PGUub3V0V2lkdGg7Kyt5KXtmb3IodmFyIHY9eSppLWwsYj12O2I8MDspYis9bztmb3IodmFyIHc9TWF0aC5taW4oZS5pbldpZHRoLHUrdiksXz1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkseD0tMSxFPW07RTxnO0UrPWEpZm9yKHZhciBTPUUtZCxOPWI7Tjx3O04rPW8pe3ZhciBJPU4tdixPPXQuZ2V0KGYsRSxOLGgpO08+XyYmKF89Tyx4PVMqdStJKX1uLnNldCh4LGYscCx5LGgpfX1yZXR1cm4gbi50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5tYXhQb29sQmFja3Byb3A9ZnVuY3Rpb24odCxlLG4scil7dGhpcy5hc3NlcnROb3RDb21wbGV4KFtlLG5dLFwibWF4UG9vbEJhY2twcm9wXCIpO2Zvcih2YXIgaT10aGlzLm1heFBvb2xQb3NpdGlvbnMoZSxyKSxhPXIuc3RyaWRlSGVpZ2h0LG89ci5zdHJpZGVXaWR0aCxzPXIuZGlsYXRpb25IZWlnaHQsdT1yLmRpbGF0aW9uV2lkdGgsYz1yLmVmZmVjdGl2ZUZpbHRlckhlaWdodCxsPXIuZWZmZWN0aXZlRmlsdGVyV2lkdGgsZj1sLTEtci5wYWRJbmZvLmxlZnQsaD1jLTEtci5wYWRJbmZvLnRvcCxwPVJhKGUuc2hhcGUsXCJmbG9hdDMyXCIpLGQ9MDtkPHIuYmF0Y2hTaXplOysrZClmb3IodmFyIG09MDttPHIuaW5DaGFubmVsczsrK20pZm9yKHZhciBnPTA7ZzxyLmluSGVpZ2h0OysrZylmb3IodmFyIHk9MDt5PHIuaW5XaWR0aDsrK3kpe2Zvcih2YXIgdj1nLWgsYj15LWYsdz0wLF89MDtfPGM7Xys9cyl7dmFyIHg9KHYrXykvYTtpZighKHg8MHx8eD49ci5vdXRIZWlnaHR8fE1hdGguZmxvb3IoeCkhPT14KSlmb3IodmFyIEU9MDtFPGw7RSs9dSl7dmFyIFM9KGIrRSkvbztpZighKFM8MHx8Uz49ci5vdXRXaWR0aHx8TWF0aC5mbG9vcihTKSE9PVMpKXt2YXIgTj1jKmwtMS1pLmdldChkLHgsUyxtKT09PV8qbCtFPzE6MDswIT09TiYmKHcrPXQuZ2V0KGQseCxTLG0pKk4pfX19cC5zZXQodyxkLGcseSxtKX1yZXR1cm4gcC50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5hdmdQb29sQmFja3Byb3A9ZnVuY3Rpb24odCxlLG4pe3RoaXMuYXNzZXJ0Tm90Q29tcGxleChbdCxlXSxcImF2Z1Bvb2xCYWNrcHJvcFwiKTtmb3IodmFyIHI9bi5zdHJpZGVIZWlnaHQsaT1uLnN0cmlkZVdpZHRoLGE9bi5maWx0ZXJIZWlnaHQsbz1uLmZpbHRlcldpZHRoLHM9bi5kaWxhdGlvbkhlaWdodCx1PW4uZGlsYXRpb25XaWR0aCxjPW4uZWZmZWN0aXZlRmlsdGVySGVpZ2h0LGw9bi5lZmZlY3RpdmVGaWx0ZXJXaWR0aCxmPWwtMS1uLnBhZEluZm8ubGVmdCxoPWMtMS1uLnBhZEluZm8udG9wLHA9UmEoZS5zaGFwZSxcImZsb2F0MzJcIiksZD0xLyhhKm8pLG09MDttPG4uYmF0Y2hTaXplOysrbSlmb3IodmFyIGc9MDtnPG4uaW5DaGFubmVsczsrK2cpZm9yKHZhciB5PTA7eTxuLmluSGVpZ2h0OysreSlmb3IodmFyIHY9MDt2PG4uaW5XaWR0aDsrK3Ype2Zvcih2YXIgYj15LWgsdz12LWYsXz0wLHg9MDt4PGM7eCs9cyl7dmFyIEU9KGIreCkvcjtpZighKEU8MHx8RT49bi5vdXRIZWlnaHR8fE1hdGguZmxvb3IoRSkhPT1FKSlmb3IodmFyIFM9MDtTPGw7Uys9dSl7dmFyIE49KHcrUykvaTtOPDB8fE4+PW4ub3V0V2lkdGh8fE1hdGguZmxvb3IoTikhPT1OfHwoXys9dC5nZXQobSxFLE4sZykpfX1wLnNldChfKmQsbSx5LHYsZyl9cmV0dXJuIHAudG9UZW5zb3IoKX0sdC5wcm90b3R5cGUuY2FzdD1mdW5jdGlvbih0LGUpe3JldHVybiBaZSh0LGUsdGhpcyl9LHQucHJvdG90eXBlLnJlc2hhcGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gUWUodCxlKX0sdC5wcm90b3R5cGUuYXZnUG9vbD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcImF2Z1Bvb2xcIiksdGhpcy5wb29sKHQsZSxcImF2Z1wiKS50b0Zsb2F0KCl9LHQucHJvdG90eXBlLnJlc2l6ZUJpbGluZWFyPWZ1bmN0aW9uKHQsZSxuLHIpe3RoaXMuYXNzZXJ0Tm90Q29tcGxleCh0LFwicmVzaXplQmlsaW5lYXJcIik7Zm9yKHZhciBpPXQuc2hhcGUsYT1pWzBdLG89aVsxXSxzPWlbMl0sdT1pWzNdLGM9dC5kYXRhU3luYygpLGw9bmV3IEZsb2F0MzJBcnJheShFKFthLGUsbix1XSkpLGY9W3ImJmU+MT9vLTE6byxyJiZuPjE/cy0xOnNdLGg9W3ImJmU+MT9lLTE6ZSxyJiZuPjE/bi0xOm5dLHA9MCxkPWZbMF0vaFswXSxtPWZbMV0vaFsxXSxnPTA7ZzxhO2crKylmb3IodmFyIHk9MDt5PGU7eSsrKWZvcih2YXIgdj1kKnksYj1NYXRoLmZsb29yKHYpLHc9di1iLF89TWF0aC5taW4oby0xLE1hdGguY2VpbCh2KSkseD1nKnQuc3RyaWRlc1swXStiKnQuc3RyaWRlc1sxXSxTPWcqdC5zdHJpZGVzWzBdK18qdC5zdHJpZGVzWzFdLE49MDtOPG47TisrKWZvcih2YXIgST1tKk4sTz1NYXRoLmZsb29yKEkpLGs9SS1PLEE9TWF0aC5taW4ocy0xLE1hdGguY2VpbChJKSksQz14K08qdC5zdHJpZGVzWzJdLFA9UytPKnQuc3RyaWRlc1syXSxUPXgrICtBKnQuc3RyaWRlc1syXSxSPVMrQSp0LnN0cmlkZXNbMl0sRD0wO0Q8dTtEKyspe3ZhciBNPWNbQytEXSxqPWNbUCtEXSxCPU0rKGNbVCtEXS1NKSprLEw9QisoaisoY1tSK0RdLWopKmstQikqdztsW3ArK109TH1yZXR1cm4gTWUobCxbYSxlLG4sdV0pfSx0LnByb3RvdHlwZS5yZXNpemVCaWxpbmVhckJhY2twcm9wPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJyZXNpemVCaWxpbmVhckJhY2twcm9wXCIpO2Zvcih2YXIgcj1lLnNoYXBlLGk9clswXSxhPXJbMV0sbz1yWzJdLHM9clszXSx1PXQuc2hhcGUsYz11WzFdLGw9dVsyXSxmPW5ldyBGbG9hdDMyQXJyYXkoaSphKm8qcyksaD1bbiYmYz4xP2EtMTphLG4mJmw+MT9vLTE6b10scD1bbiYmYz4xP2MtMTpjLG4mJmw+MT9sLTE6bF0sZD1oWzBdL3BbMF0sbT1oWzFdL3BbMV0sZz10LmRhdGFTeW5jKCkseT0wLHY9MDt2PGk7disrKWZvcih2YXIgYj12KmUuc3RyaWRlc1swXSx3PTA7dzxjO3crKylmb3IodmFyIF89dypkLHg9TWF0aC5mbG9vcihfKSxFPU1hdGgubWluKE1hdGguY2VpbChfKSxhLTEpLFM9Yit4KmUuc3RyaWRlc1sxXSxOPWIrRSplLnN0cmlkZXNbMV0sST1fLXgsTz0xLUksaz0wO2s8bDtrKyspZm9yKHZhciBBPWsqbSxDPU1hdGguZmxvb3IoQSksUD1NYXRoLm1pbihNYXRoLmNlaWwoQSksby0xKSxUPUEtQyxSPTEtVCxEPVMrQyplLnN0cmlkZXNbMl0sTT1TK1AqZS5zdHJpZGVzWzJdLGo9TitDKmUuc3RyaWRlc1syXSxCPU4rUCplLnN0cmlkZXNbMl0sTD1PKlIsej1PKlQsRj1JKlIsVT1JKlQsVj0wO1Y8cztWKyspe3ZhciBXPWdbeSsrXTtmW0QrVl0rPVcqTCxmW00rVl0rPVcqeixmW2orVl0rPVcqRixmW0IrVl0rPVcqVX1yZXR1cm4gRmUoZixbaSxvLGEsc10sZS5kdHlwZSl9LHQucHJvdG90eXBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvcj1mdW5jdGlvbih0LGUsbixyKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcInJlc2l6ZU5lYXJlc3ROZWlnaGJvclwiKTtmb3IodmFyIGk9dC5zaGFwZSxhPWlbMF0sbz1pWzFdLHM9aVsyXSx1PWlbM10sYz10LmRhdGFTeW5jKCksbD1uZXcgRmxvYXQzMkFycmF5KGEqZSpuKnUpLGY9W3ImJmU+MT9vLTE6byxyJiZuPjE/cy0xOnNdLGg9W3ImJmU+MT9lLTE6ZSxyJiZuPjE/bi0xOm5dLHA9ZlswXS9oWzBdLGQ9ZlsxXS9oWzFdLG09MCxnPTA7ZzxhO2crKylmb3IodmFyIHk9Zyp0LnN0cmlkZXNbMF0sdj0wO3Y8ZTt2KyspZm9yKHZhciBiPXAqdix3PXkrTWF0aC5taW4oby0xLHI/TWF0aC5yb3VuZChiKTpNYXRoLmZsb29yKGIpKSp0LnN0cmlkZXNbMV0sXz0wO188bjtfKyspZm9yKHZhciB4PWQqXyxFPXcrTWF0aC5taW4ocy0xLHI/TWF0aC5yb3VuZCh4KTpNYXRoLmZsb29yKHgpKSp0LnN0cmlkZXNbMl0sUz0wO1M8dTtTKyspe3ZhciBOPWNbRStTXTtsW20rK109Tn1yZXR1cm4gTWUobCxbYSxlLG4sdV0sdC5kdHlwZSl9LHQucHJvdG90eXBlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvckJhY2twcm9wPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZV0sXCJyZXNpemVOZWFyZXN0TmVpZ2hib3JCYWNrcHJvcFwiKTtmb3IodmFyIHI9ZS5zaGFwZSxpPXJbMF0sYT1yWzFdLG89clsyXSxzPXJbM10sdT10LnNoYXBlLGM9dVsxXSxsPXVbMl0sZj1uZXcgRmxvYXQzMkFycmF5KGkqYSpvKnMpLGg9dC5kYXRhU3luYygpLHA9W24mJmM+MT9hLTE6YSxuJiZsPjE/by0xOm9dLGQ9W24mJmM+MT9jLTE6YyxuJiZsPjE/bC0xOmxdLG09cFswXS9kWzBdLGc9cFsxXS9kWzFdLHk9MS9tLHY9MS9nLGI9MipNYXRoLmNlaWwoeSkrMix3PTIqTWF0aC5jZWlsKHYpKzIsXz0wO188aTtfKyspZm9yKHZhciB4PV8qZS5zdHJpZGVzWzBdLEU9MDtFPGE7RSsrKWZvcih2YXIgUz14K0UqZS5zdHJpZGVzWzFdLE49TWF0aC5mbG9vcihFKnkpLEk9TWF0aC5mbG9vcihOLWIvMiksTz0wO088bztPKyspZm9yKHZhciBrPVMrTyplLnN0cmlkZXNbMl0sQT1NYXRoLmZsb29yKE8qdiksQz1NYXRoLmZsb29yKEEtdy8yKSxQPTA7UDxzO1ArKyl7Zm9yKHZhciBUPTAsUj0wO1I8YjtSKyspe3ZhciBEPVIrSTtpZighKEQ8MHx8RD49Yykpe3ZhciBNPXgrRCp0LnN0cmlkZXNbMV0saj1EKm07aWYoRT09PU1hdGgubWluKGEtMSxuP01hdGgucm91bmQoaik6TWF0aC5mbG9vcihqKSkpZm9yKHZhciBCPTA7Qjx3O0IrKyl7dmFyIEw9QitDO2lmKCEoTDwwfHxMPj1sKSl7dmFyIHo9TStMKnQuc3RyaWRlc1syXSxGPUwqZztPPT09TWF0aC5taW4oby0xLG4/TWF0aC5yb3VuZChGKTpNYXRoLmZsb29yKEYpKSYmKFQrPWhbeitQXSl9fX19ZltrK1BdPVR9cmV0dXJuIEZlKGYsZS5zaGFwZSxlLmR0eXBlKX0sdC5wcm90b3R5cGUuYmF0Y2hOb3JtYWxpemF0aW9uPWZ1bmN0aW9uKHQsZSxuLHIsaSxhKXt0aGlzLmFzc2VydE5vdENvbXBsZXgoW3QsZSxuLGksYV0sXCJiYXRjaE5vcm1hbGl6YXRpb25cIik7Zm9yKHZhciBvPXQuZGF0YVN5bmMoKSxzPWUuZGF0YVN5bmMoKSx1PW4uZGF0YVN5bmMoKSxjPWk/aS5kYXRhU3luYygpOm5ldyBGbG9hdDMyQXJyYXkoWzFdKSxsPWE/YS5kYXRhU3luYygpOm5ldyBGbG9hdDMyQXJyYXkoWzBdKSxmPW5ldyBGbG9hdDMyQXJyYXkoby5sZW5ndGgpLGg9bC5sZW5ndGgscD1jLmxlbmd0aCxkPXUubGVuZ3RoLG09cy5sZW5ndGgsZz0wLHk9MCx2PTAsYj0wLHc9MDt3PG8ubGVuZ3RoOysrdylmW3ddPWxbZysrXSsob1t3XS1zW3krK10pKmNbdisrXS9NYXRoLnNxcnQodVtiKytdK3IpLGc+PWgmJihnPTApLHk+PW0mJih5PTApLHY+PXAmJih2PTApLGI+PWQmJihiPTApO3JldHVybiBGZShmLHQuc2hhcGUpfSx0LnByb3RvdHlwZS5sb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbjREPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJsb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbjREXCIpO3ZhciBhPXQuc2hhcGVbM10sbz1hLTEscz10LmRhdGFTeW5jKCksdT1FKHQuc2hhcGUpLGM9bmV3IEZsb2F0MzJBcnJheSh1KTtmdW5jdGlvbiBsKHQpe2Zvcih2YXIgbj10JWEscj10LW4rTWF0aC5tYXgoMCxuLWUpLGk9dC1uK01hdGgubWluKG4rZSxvKSx1PTA7cjw9aTtyKyspe3ZhciBjPXNbcl07dSs9YypjfXJldHVybiB1fWZvcih2YXIgZj0wO2Y8dTtmKyspe3ZhciBoPWwoZikscD1zW2ZdKk1hdGgucG93KG4rcipoLC1pKTtjW2ZdPXB9cmV0dXJuIEZlKGMsdC5zaGFwZSl9LHQucHJvdG90eXBlLkxSTkdyYWQ9ZnVuY3Rpb24odCxlLG4scixpLGEsbyl7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJMUk5HcmFkXCIpO2Zvcih2YXIgcz10LnNoYXBlWzNdLHU9dC5kYXRhU3luYygpLGM9ZS5kYXRhU3luYygpLGw9bi5kYXRhU3luYygpLGY9bmV3IEZsb2F0MzJBcnJheShFKHQuc2hhcGUpKSxoPUUodC5zaGFwZSkscD0wO3A8aDtwKyspe2Zvcih2YXIgZD1wJXMsbT1wLWQrTWF0aC5tYXgoMCxkLXIpLGc9cC1kK01hdGgubWluKHMsZCtyKzEpLHk9MCx2PW07djxnO3YrKyl5Kz1NYXRoLnBvdyhjW3ZdLDIpO2Zvcih5PWEqeStpLHY9bTt2PGc7disrKXt2YXIgYj0tMiphKm8qY1t2XSpsW3BdL3k7cD09PXYmJihiKz1NYXRoLnBvdyh5LC1vKSksYio9dVtwXSxmW3ZdKz1ifX1yZXR1cm4gRmUoZix0LnNoYXBlKX0sdC5wcm90b3R5cGUubXVsdGlub21pYWw9ZnVuY3Rpb24odCxlLG4scil7dGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJtdWx0aW5vbWlhbFwiKTtmb3IodmFyIGk9ZT90OkNlKHQpLGE9aS5zaGFwZVswXSxvPWkuc2hhcGVbMV0scz1xZShbYSxuXSxcImludDMyXCIpLHU9cy5kYXRhU3luYygpLGM9aS5kYXRhU3luYygpLGw9MDtsPGE7KytsKXt2YXIgZj1sKm8saD1uZXcgRmxvYXQzMkFycmF5KG8tMSk7aFswXT1jW2ZdO2Zvcih2YXIgcD0xO3A8aC5sZW5ndGg7KytwKWhbcF09aFtwLTFdK2NbZitwXTtmb3IodmFyIGQ9Q2Eoci50b1N0cmluZygpKSxtPWwqbixnPTA7ZzxuOysrZyl7dmFyIHk9ZCgpO3VbbStnXT1oLmxlbmd0aDtmb3IodmFyIHY9MDt2PGgubGVuZ3RoO3YrKylpZih5PGhbdl0pe3VbbStnXT12O2JyZWFrfX19cmV0dXJuIHN9LHQucHJvdG90eXBlLm9uZUhvdD1mdW5jdGlvbih0LGUsbixyKXt0aGlzLmFzc2VydE5vdENvbXBsZXgodCxcIm9uZUhvdFwiKTt2YXIgaT1uZXcgRmxvYXQzMkFycmF5KHQuc2l6ZSplKTtpLmZpbGwocik7Zm9yKHZhciBhPTA7YTx0LnNpemU7KythKXQuZ2V0KGEpPj0wJiZ0LmdldChhKTxlJiYoaVthKmUrdC5nZXQoYSldPW4pO3JldHVybiBMZShpLFt0LnNpemUsZV0sXCJpbnQzMlwiKX0sdC5wcm90b3R5cGUubm9uTWF4U3VwcHJlc3Npb249ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gdGhpcy5hc3NlcnROb3RDb21wbGV4KHQsXCJub25NYXhTdXBwcmVzc2lvblwiKSxhbih0LmRhdGFTeW5jKCksZS5kYXRhU3luYygpLG4scixpKX0sdC5wcm90b3R5cGUuZmZ0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmZmdEJhdGNoKHQsITEpfSx0LnByb3RvdHlwZS5pZmZ0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmZmdEJhdGNoKHQsITApfSx0LnByb3RvdHlwZS5mZnRCYXRjaD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10LnNoYXBlWzBdLHI9dC5zaGFwZVsxXSxpPVJhKHQuc2hhcGUsXCJmbG9hdDMyXCIpLGE9UmEodC5zaGFwZSxcImZsb2F0MzJcIiksbz1SZSh0KS5hczJEKG4scikscz1EZSh0KS5hczJEKG4sciksdT0wO3U8bjt1KyspZm9yKHZhciBjPW8uc2xpY2UoW3UsMF0sWzEscl0pLGw9cy5zbGljZShbdSwwXSxbMSxyXSksZj1UZShjLGwpLGg9dGhpcy5mZnRJbXBsKGYsZSkuZGF0YVN5bmMoKSxwPTA7cDxyO3ArKyl7dmFyIGQ9ZW4oaCxwKTtpLnZhbHVlc1t1KnIrcF09ZC5yZWFsLGEudmFsdWVzW3UqcitwXT1kLmltYWd9cmV0dXJuIFRlKGkudG9UZW5zb3IoKSxhLnRvVGVuc29yKCkpLmFzMkQobixyKX0sdC5wcm90b3R5cGUuZmZ0SW1wbD1mdW5jdGlvbih0LGUpe3ZhciBuPXQuYXMxRCgpLHI9bi5zaXplO2lmKHRoaXMuaXNFeHBvbmVudE9mMihyKSl7dmFyIGk9dGhpcy5mZnRSYWRpeDIobixyLGUpLmFzMkQodC5zaGFwZVswXSx0LnNoYXBlWzFdKTtyZXR1cm4gZSYmKGk9VGUoUmUoaSkuZGl2KGplKHIpKSxEZShpKS5kaXYoamUocikpKSksaX12YXIgYT10LmRhdGFTeW5jKCksbz1mdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IEZsb2F0MzJBcnJheSh0Lmxlbmd0aC8yKSxuPW5ldyBGbG9hdDMyQXJyYXkodC5sZW5ndGgvMikscj0wO3I8dC5sZW5ndGg7cis9MillW3IvMl09dFtyXSxuW3IvMl09dFtyKzFdO3JldHVybntyZWFsOmUsaW1hZzpufX0odGhpcy5mb3VyaWVyVHJhbnNmb3JtQnlNYXRtdWwoYSxyLGUpKTtyZXR1cm4gVGUoby5yZWFsLG8uaW1hZykuYXMyRCh0LnNoYXBlWzBdLHQuc2hhcGVbMV0pfSx0LnByb3RvdHlwZS5pc0V4cG9uZW50T2YyPWZ1bmN0aW9uKHQpe3JldHVybiAwPT0odCZ0LTEpfSx0LnByb3RvdHlwZS5mZnRSYWRpeDI9ZnVuY3Rpb24odCxlLG4pe2lmKDE9PT1lKXJldHVybiB0O3ZhciByPXQuZGF0YVN5bmMoKSxpPWUvMixhPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1NYXRoLmNlaWwodC5sZW5ndGgvNCksbj1uZXcgRmxvYXQzMkFycmF5KGUpLHI9bmV3IEZsb2F0MzJBcnJheShlKSxpPTA7aTx0Lmxlbmd0aDtpKz00KW5bTWF0aC5mbG9vcihpLzQpXT10W2ldLHJbTWF0aC5mbG9vcihpLzQpXT10W2krMV07cmV0dXJue3JlYWw6bixpbWFnOnJ9fShyKSxvPVRlKGEucmVhbCxhLmltYWcpLmFzMUQoKSxzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1NYXRoLmZsb29yKHQubGVuZ3RoLzQpLG49bmV3IEZsb2F0MzJBcnJheShlKSxyPW5ldyBGbG9hdDMyQXJyYXkoZSksaT0yO2k8dC5sZW5ndGg7aSs9NCluW01hdGguZmxvb3IoaS80KV09dFtpXSxyW01hdGguZmxvb3IoaS80KV09dFtpKzFdO3JldHVybntyZWFsOm4saW1hZzpyfX0ociksdT1UZShzLnJlYWwscy5pbWFnKS5hczFEKCk7bz10aGlzLmZmdFJhZGl4MihvLGksbiksdT10aGlzLmZmdFJhZGl4Mih1LGksbik7dmFyIGM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49bmV3IEZsb2F0MzJBcnJheSh0LzIpLHI9bmV3IEZsb2F0MzJBcnJheSh0LzIpLGk9MDtpPE1hdGguY2VpbCh0LzIpO2krKyl7dmFyIGE9KGU/MjotMikqTWF0aC5QSSooaS90KTtuW2ldPU1hdGguY29zKGEpLHJbaV09TWF0aC5zaW4oYSl9cmV0dXJue3JlYWw6bixpbWFnOnJ9fShlLG4pLGw9VGUoYy5yZWFsLGMuaW1hZykubXVsKHUpLGY9by5hZGQobCksaD1vLnN1YihsKSxwPVJlKGYpLmNvbmNhdChSZShoKSksZD1EZShmKS5jb25jYXQoRGUoaCkpO3JldHVybiBUZShwLGQpLmFzMUQoKX0sdC5wcm90b3R5cGUuZm91cmllclRyYW5zZm9ybUJ5TWF0bXVsPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9bmV3IEZsb2F0MzJBcnJheSgyKmUpLGk9MDtpPGU7aSsrKXtmb3IodmFyIGE9MCxvPTAscz0wO3M8ZTtzKyspe3ZhciB1PXJuKGkqcyxlLG4pLGM9ZW4odCxzKTthKz1jLnJlYWwqdS5yZWFsLWMuaW1hZyp1LmltYWcsbys9Yy5yZWFsKnUuaW1hZytjLmltYWcqdS5yZWFsfW4mJihhLz1lLG8vPWUpLG5uKHIsYSxvLGkpfXJldHVybiByfSx0LnByb3RvdHlwZS5kZXB0aFRvU3BhY2U9ZnVuY3Rpb24odCxlLG4pe2IoXCJOSFdDXCI9PT1uLFwiT25seSBOSFdDIGRhdGFGb3JtYXQgc3VwcG9ydGVkIG9uIENQVSBmb3IgZGVwdGhUb1NwYWNlLiBHb3QgXCIrbiksYihlPjEsXCJibG9ja1NpemUgc2hvdWxkIGJlID4gMSBmb3IgZGVwdGhUb1NwYWNlLCBidXQgd2FzOiBcIitlKTtmb3IodmFyIHI9dC5zaGFwZVswXSxpPXQuc2hhcGVbMV0sYT10LnNoYXBlWzJdLG89dC5zaGFwZVszXSxzPWkqZSx1PWEqZSxjPW8vKGUqZSksbD10LmRhdGFTeW5jKCksZj1uZXcgRmxvYXQzMkFycmF5KHIqcyp1KmMpLGg9MCxwPTA7cDxyOysrcClmb3IodmFyIGQ9MDtkPHM7KytkKWZvcih2YXIgbT1NYXRoLmZsb29yKGQvZSksZz1kJWUseT0wO3k8dTsrK3kpZm9yKHZhciB2PU1hdGguZmxvb3IoeS9lKSx3PShnKmUreSVlKSpjLF89MDtfPGM7KytfKXt2YXIgeD1fK3crbyoodithKihtK2kqcCkpO2ZbaCsrXT1sW3hdfXJldHVybiBGZShmLFtyLHMsdSxjXSl9LHQucHJvdG90eXBlLmJyb2FkY2FzdGVkQmluYXJ5T3A9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9cGUodC5zaGFwZSxlLnNoYXBlKSxhPVJhKGksbiksbz10LmRhdGFTeW5jKCkscz1lLmRhdGFTeW5jKCksdT1mZSh0LnNoYXBlLGkpLGM9ZmUoZS5zaGFwZSxpKSxsPWEudmFsdWVzO2lmKHUubGVuZ3RoK2MubGVuZ3RoPT09MClmb3IodmFyIGY9MDtmPGwubGVuZ3RoOysrZilsW2ZdPXIob1tmJW8ubGVuZ3RoXSxzW2Ylcy5sZW5ndGhdKTtlbHNle3ZhciBoPXQuYnVmZmVyKCkscD1lLmJ1ZmZlcigpLGQ9ZnVuY3Rpb24obil7dmFyIGk9YS5pbmRleFRvTG9jKG4pLGY9aS5zbGljZSgtdC5yYW5rKTt1LmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGZbdF09MH0pO3ZhciBkPWgubG9jVG9JbmRleChmKSxtPWkuc2xpY2UoLWUucmFuayk7Yy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBtW3RdPTB9KTt2YXIgZz1wLmxvY1RvSW5kZXgobSk7bFtuXT1yKG9bZF0sc1tnXSl9O2ZvcihmPTA7ZjxsLmxlbmd0aDsrK2YpZChmKX1yZXR1cm4gYS50b1RlbnNvcigpfSx0LnByb3RvdHlwZS5icm9hZGNhc3RlZEJpbmFyeUNvbXBsZXhPcD1mdW5jdGlvbih0LGUsbil7dmFyIHI9cGUodC5zaGFwZSxlLnNoYXBlKSxpPVJhKHIsXCJmbG9hdDMyXCIpLGE9UmEocixcImZsb2F0MzJcIiksbz10LmRhdGFTeW5jKCkscz1lLmRhdGFTeW5jKCksdT1mZSh0LnNoYXBlLHIpLGM9ZmUoZS5zaGFwZSxyKSxsPWkudmFsdWVzLGY9YS52YWx1ZXM7aWYodS5sZW5ndGgrYy5sZW5ndGg9PT0wKWZvcih2YXIgaD0wO2g8bC5sZW5ndGg7aCsrKXt2YXIgcD1oJW8ubGVuZ3RoLGQ9aCVzLmxlbmd0aCxtPW4ob1syKnBdLG9bMipwKzFdLHNbMipkXSxzWzIqZCsxXSk7bFtoXT1tLnJlYWwsZltoXT1tLmltYWd9ZWxzZXt2YXIgZz10aGlzLmRhdGEuZ2V0KHQuZGF0YUlkKS5jb21wbGV4VGVuc29ycy5yZWFsLmJ1ZmZlcigpLHk9dGhpcy5kYXRhLmdldChlLmRhdGFJZCkuY29tcGxleFRlbnNvcnMucmVhbC5idWZmZXIoKSx2PWZ1bmN0aW9uKHIpe3ZhciBhPWkuaW5kZXhUb0xvYyhyKSxoPWEuc2xpY2UoLXQucmFuayk7dS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBoW3RdPTB9KTt2YXIgcD1nLmxvY1RvSW5kZXgoaCksZD1hLnNsaWNlKC1lLnJhbmspO2MuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZFt0XT0wfSk7dmFyIG09eS5sb2NUb0luZGV4KGQpLHY9bihvWzIqcF0sb1syKnArMV0sc1syKm1dLHNbMiptKzFdKTtsW3JdPXYucmVhbCxmW3JdPXYuaW1hZ307Zm9yKGg9MDtoPGwubGVuZ3RoO2grKyl2KGgpfXJldHVybiB0aGlzLmNvbXBsZXgoaS50b1RlbnNvcigpLGEudG9UZW5zb3IoKSl9LHQucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gc24odCxlLG4pfSx0LnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7fSx0LnByb3RvdHlwZS5mbG9hdFByZWNpc2lvbj1mdW5jdGlvbigpe3JldHVybiAzMn0sdC5wcm90b3R5cGUuY3JvcEFuZFJlc2l6ZT1mdW5jdGlvbih0LGUsbixyLGksYSl7Zm9yKHZhciBvPXQuc2hhcGUscz1vWzBdLHU9b1sxXSxjPW9bMl0sbD1vWzNdLGY9ZS5zaGFwZVswXSxoPXJbMF0scD1yWzFdLGQ9UmEoW2YsaCxwLGxdLHQuZHR5cGUpLG09ZS5kYXRhU3luYygpLGc9bi5kYXRhU3luYygpLHk9dC5kYXRhU3luYygpLHY9dC5zdHJpZGVzLGI9ZC5zdHJpZGVzLHc9MDt3PGY7dysrKXt2YXIgXz00KncseD1tW19dLEU9bVtfKzFdLFM9bVtfKzJdLE49bVtfKzNdLEk9Z1t3XTtpZighKEk+PXMpKWZvcih2YXIgTz1oPjE/KFMteCkqKHUtMSkvKGgtMSk6MCxrPXA+MT8oTi1FKSooYy0xKS8ocC0xKTowLEE9MDtBPGg7QSsrKXt2YXIgQz1oPjE/eCoodS0xKStBKk86LjUqKHgrUykqKHUtMSk7aWYoQzwwfHxDPnUtMSlmb3IodmFyIFA9MDtQPHA7UCsrKWZvcih2YXIgVD0wO1Q8bDtUKyspe3ZhciBSPVQrUCpiWzJdK0EqYlsxXSt3KmJbMF07ZC52YWx1ZXNbUl09YX1lbHNlIGlmKFwiYmlsaW5lYXJcIj09PWkpe3ZhciBEPU1hdGguZmxvb3IoQyksTT1NYXRoLmNlaWwoQyksaj1DLUQ7Zm9yKFA9MDtQPHA7UCsrKWlmKCgkPXA+MT9FKihjLTEpK1AqazouNSooRStOKSooYy0xKSk8MHx8JD5jLTEpZm9yKFQ9MDtUPGw7VCsrKVI9VCtQKmJbMl0rQSpiWzFdK3cqYlswXSxkLnZhbHVlc1tSXT1hO2Vsc2V7dmFyIEI9TWF0aC5mbG9vcigkKSxMPU1hdGguY2VpbCgkKSx6PSQtQjtmb3IoVD0wO1Q8bDtUKyspe3ZhciBGPXlbUj1UK0IqdlsyXStEKnZbMV0rSSp2WzBdXSxVPXlbUj1UK0wqdlsyXStEKnZbMV0rSSp2WzBdXSxWPXlbUj1UK0IqdlsyXStNKnZbMV0rSSp2WzBdXSxXPUYrKFUtRikqeixxPVYrKHlbUj1UK0wqdlsyXStNKnZbMV0rSSp2WzBdXS1WKSp6O1I9VCtQKmJbMl0rQSpiWzFdK3cqYlswXSxkLnZhbHVlc1tSXT1XKyhxLVcpKmp9fX1lbHNlIGZvcihQPTA7UDxwOysrUCl7dmFyICQ7aWYoKCQ9cD4xP0UqKGMtMSkrUCprOi41KihFK04pKihjLTEpKTwwfHwkPmMtMSlmb3IoVD0wO1Q8bDtUKyspUj1UK1AqYlsyXStBKmJbMV0rdypiWzBdLGQudmFsdWVzW1JdPWE7ZWxzZXt2YXIgSD1NYXRoLnJvdW5kKCQpLEs9TWF0aC5yb3VuZChDKTtmb3IoVD0wO1Q8bDtUKyspe3ZhciBHPVQrSCp2WzJdK0sqdlsxXStJKnZbMF0sWD1UK1AqYlsyXStBKmJbMV0rdypiWzBdO2QudmFsdWVzW1hdPXlbR119fX19fXJldHVybiBkLnRvVGVuc29yKCl9LHQucHJvdG90eXBlLnNwYXJzZVRvRGVuc2U9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9YmUoMCx0LG4pLGE9aS5zbGljZVJhbmssbz1pLm51bVVwZGF0ZXMscz1pLnNsaWNlU2l6ZSx1PWkuc3RyaWRlcyxjPWkub3V0cHV0U2l6ZTtyZXR1cm4gdGhpcy5zY2F0dGVyKHQsZSxuLGMscyxvLGEsdSxyLCExKX0sdC5wcm90b3R5cGUuZ2F0aGVyTkQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLnNoYXBlLHI9bltuLmxlbmd0aC0xXSxpPW1lKHQsZSksYT1pWzBdLG89aVsxXSxzPWlbMl0sdT1pWzNdO2lmKDA9PT1vKXJldHVybiBNZShbXSxhLHQuZHR5cGUpO2Zvcih2YXIgYz1uZXcgc3QoW28sc10sdC5kdHlwZSksbD1lLmRhdGFTeW5jKCksZj10LmRhdGFTeW5jKCksaD0wO2g8bztoKyspe2Zvcih2YXIgcD1bXSxkPTAsbT0wO208cjttKyspe3ZhciBnPWxbaCpyK21dO2QrPWcqdVttXSxwLnB1c2goZyl9aWYoZDwwfHxkPj10LnNpemUvcyl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGluZGljZXM6IFwiK3ArXCIgZG9lcyBub3QgaW5kZXggaW50byBcIit0LnNoYXBlKTtmb3IodmFyIHk9MDt5PHM7eSsrKWMudmFsdWVzW2gqcyt5XT1mW2Qqcyt5XX1yZXR1cm4gYy50b1RlbnNvcigpLnJlc2hhcGUoYSl9LHQucHJvdG90eXBlLnNjYXR0ZXJORD1mdW5jdGlvbih0LGUsbil7dmFyIHI9YmUoMCx0LG4pLGk9ci5zbGljZVJhbmssYT1yLm51bVVwZGF0ZXMsbz1yLnNsaWNlU2l6ZSxzPXIuc3RyaWRlcyx1PXIub3V0cHV0U2l6ZSxjPWplKDApO3JldHVybiB0aGlzLnNjYXR0ZXIodCxlLG4sdSxvLGEsaSxzLGMsITApfSx0LnByb3RvdHlwZS5zY2F0dGVyPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyx1LGMpe3ZhciBsPVtyL2ksaV0sZj10LmRhdGFTeW5jKCksaD1lLmRhdGFTeW5jKCk7aWYoMD09PXIpcmV0dXJuIE1lKFtdLG4sZS5kdHlwZSk7dmFyIHA9bmV3IHN0KGwsZS5kdHlwZSk7cC52YWx1ZXMuZmlsbCh1LmRhdGFTeW5jKClbMF0pO2Zvcih2YXIgZD0wO2Q8YTtkKyspe2Zvcih2YXIgbT1bXSxnPTAseT0wO3k8bzt5Kyspe3ZhciB2PWZbZCpvK3ldO20ucHVzaCh2KSxnKz12KnNbeV19aWYoZzwwfHxnPj1yL2kpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbmRpY2VzOiBcIittK1wiIGRvZXMgbm90IGluZGV4IGludG8gXCIrbik7Zm9yKHZhciBiPTA7YjxpO2IrKyljP3AudmFsdWVzW2cqaStiXSs9aFtkKmkrYl06cC52YWx1ZXNbZyppK2JdPTA9PT1lLnJhbms/aFswXTpoW2QqaStiXX1yZXR1cm4gcC50b1RlbnNvcigpLnJlc2hhcGUobil9LHR9KCk7THQucmVnaXN0ZXJCYWNrZW5kKFwiY3B1XCIsZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHhjfSwxLGx0KTt2YXIgRWM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6aTtmdW5jdGlvbiBTYygpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0KXtyZXR1cm4gRWMoZnVuY3Rpb24oKXtyZXR1cm4gdCgpfSl9KX12YXIgTmM9e2Zsb2F0MzI6NCxpbnQzMjo0LHVpbnQxNjoyLHVpbnQ4OjEsYm9vbDoxfTtmdW5jdGlvbiBJYyh0LGUpe2Zvcih2YXIgbj17fSxyPTAsaT1mdW5jdGlvbihlKXt2YXIgaT1lLm5hbWUsYT1lLmR0eXBlLG89ZS5zaGFwZSxzPUUobyksdT12b2lkIDA7aWYoXCJxdWFudGl6YXRpb25cImluIGUpe3ZhciBjPWUucXVhbnRpemF0aW9uO2lmKFwidWludDhcIiE9PWMuZHR5cGUmJlwidWludDE2XCIhPT1jLmR0eXBlKXRocm93IG5ldyBFcnJvcihcIldlaWdodCBcIitlLm5hbWUrXCIgaGFzIHVua25vd24gcXVhbnRpemF0aW9uIGR0eXBlIFwiK2MuZHR5cGUrXCIuIFN1cHBvcnRlZCBxdWFudGl6YXRpb24gZHR5cGVzIGFyZTogJ3VpbnQ4JyBhbmQgJ3VpbnQxNicuXCIpO3ZhciBsPU5jW2MuZHR5cGVdLGY9dC5zbGljZShyLHIrcypsKSxoPVwidWludDhcIj09PWMuZHR5cGU/bmV3IFVpbnQ4QXJyYXkoZik6bmV3IFVpbnQxNkFycmF5KGYpO2lmKFwiZmxvYXQzMlwiPT09YSl1PUZsb2F0MzJBcnJheS5mcm9tKGgsZnVuY3Rpb24odCl7cmV0dXJuIHQqYy5zY2FsZStjLm1pbn0pO2Vsc2V7aWYoXCJpbnQzMlwiIT09YSl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBkdHlwZSBpbiB3ZWlnaHQgJ1wiK2krXCInOiBcIithKTt1PUludDMyQXJyYXkuZnJvbShoLGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLnJvdW5kKHQqYy5zY2FsZStjLm1pbil9KX1yKz1zKmx9ZWxzZXt2YXIgcD1OY1thXTtpZihmPXQuc2xpY2UocixyK3MqcCksXCJmbG9hdDMyXCI9PT1hKXU9bmV3IEZsb2F0MzJBcnJheShmKTtlbHNlIGlmKFwiaW50MzJcIj09PWEpdT1uZXcgSW50MzJBcnJheShmKTtlbHNle2lmKFwiYm9vbFwiIT09YSl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBkdHlwZSBpbiB3ZWlnaHQgJ1wiK2krXCInOiBcIithKTt1PW5ldyBVaW50OEFycmF5KGYpfXIrPXMqcH12YXIgZD12b2lkIDA7aWYoXCJmbG9hdDMyXCI9PT1hKWQ9TWUodSxvLFwiZmxvYXQzMlwiKTtlbHNlIGlmKFwiaW50MzJcIj09PWEpZD1NZSh1LG8sXCJpbnQzMlwiKTtlbHNle2lmKFwiYm9vbFwiIT09YSl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBkdHlwZSBpbiB3ZWlnaHQgJ1wiK2krXCInOiBcIithKTtkPU1lKHUsbyxcImJvb2xcIil9bltpXT1kfSxhPTAsbz1lO2E8by5sZW5ndGg7YSsrKWkob1thXSk7cmV0dXJuIG59ZnVuY3Rpb24gT2ModCl7aWYobnVsbD09PXQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpbnB1dCB2YWx1ZTogXCIrSlNPTi5zdHJpbmdpZnkodCkpO3ZhciBlPTAsbj1bXTt0LmZvckVhY2goZnVuY3Rpb24odCl7aWYoZSs9dC5ieXRlTGVuZ3RoLG4ucHVzaCh0LmJ5dGVMZW5ndGg9PT10LmJ1ZmZlci5ieXRlTGVuZ3RoP3Q6bmV3IHQuY29uc3RydWN0b3IodCkpLCEodCBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheXx8dCBpbnN0YW5jZW9mIEludDMyQXJyYXl8fHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBUeXBlZEFycmF5IHN1YnR5cGU6IFwiK3QuY29uc3RydWN0b3IubmFtZSl9KTt2YXIgcj1uZXcgVWludDhBcnJheShlKSxpPTA7cmV0dXJuIG4uZm9yRWFjaChmdW5jdGlvbih0KXtyLnNldChuZXcgVWludDhBcnJheSh0LmJ1ZmZlciksaSksaSs9dC5ieXRlTGVuZ3RofSksci5idWZmZXJ9dmFyIGtjPXZvaWQgMCE9PWEmJihcInVuZGVmaW5lZFwiPT10eXBlb2YgQmxvYnx8XCJ1bmRlZmluZWRcIj09dHlwZW9mIGF0b2J8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBidG9hKTtmdW5jdGlvbiBBYyh0KXtyZXR1cm4ga2M/YS5ieXRlTGVuZ3RoKHQpOm5ldyBCbG9iKFt0XSkuc2l6ZX1mdW5jdGlvbiBDYyh0KXt2YXIgZT0wO3QuZm9yRWFjaChmdW5jdGlvbih0KXtlKz10LmJ5dGVMZW5ndGh9KTt2YXIgbj1uZXcgVWludDhBcnJheShlKSxyPTA7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXtuLnNldChuZXcgVWludDhBcnJheSh0KSxyKSxyKz10LmJ5dGVMZW5ndGh9KSxuLmJ1ZmZlcn1mdW5jdGlvbiBQYyh0KXtmb3IodD10LnRyaW0oKTt0LmVuZHNXaXRoKFwiL1wiKTspdD10LnNsaWNlKDAsdC5sZW5ndGgtMSk7dmFyIGU9dC5zcGxpdChcIi9cIik7cmV0dXJuIGVbZS5sZW5ndGgtMV19ZnVuY3Rpb24gVGModCl7aWYodC5tb2RlbFRvcG9sb2d5IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgSlNPTiBtb2RlbCB0b3BvbG9neSwgcmVjZWl2ZWQgQXJyYXlCdWZmZXIuXCIpO3JldHVybntkYXRlU2F2ZWQ6bmV3IERhdGUsbW9kZWxUb3BvbG9neVR5cGU6XCJKU09OXCIsbW9kZWxUb3BvbG9neUJ5dGVzOm51bGw9PXQubW9kZWxUb3BvbG9neT8wOkFjKEpTT04uc3RyaW5naWZ5KHQubW9kZWxUb3BvbG9neSkpLHdlaWdodFNwZWNzQnl0ZXM6bnVsbD09dC53ZWlnaHRTcGVjcz8wOkFjKEpTT04uc3RyaW5naWZ5KHQud2VpZ2h0U3BlY3MpKSx3ZWlnaHREYXRhQnl0ZXM6bnVsbD09dC53ZWlnaHREYXRhPzA6dC53ZWlnaHREYXRhLmJ5dGVMZW5ndGh9fXZhciBSYz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLnNhdmVSb3V0ZXJzPVtdLHRoaXMubG9hZFJvdXRlcnM9W119cmV0dXJuIHQuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09dC5pbnN0YW5jZSYmKHQuaW5zdGFuY2U9bmV3IHQpLHQuaW5zdGFuY2V9LHQucmVnaXN0ZXJTYXZlUm91dGVyPWZ1bmN0aW9uKGUpe3QuZ2V0SW5zdGFuY2UoKS5zYXZlUm91dGVycy5wdXNoKGUpfSx0LnJlZ2lzdGVyTG9hZFJvdXRlcj1mdW5jdGlvbihlKXt0LmdldEluc3RhbmNlKCkubG9hZFJvdXRlcnMucHVzaChlKX0sdC5nZXRTYXZlSGFuZGxlcnM9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuZ2V0SGFuZGxlcnMoZSxcInNhdmVcIil9LHQuZ2V0TG9hZEhhbmRsZXJzPWZ1bmN0aW9uKGUpe3JldHVybiB0LmdldEhhbmRsZXJzKGUsXCJsb2FkXCIpfSx0LmdldEhhbmRsZXJzPWZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuKFwibG9hZFwiPT09ZT90aGlzLmdldEluc3RhbmNlKCkubG9hZFJvdXRlcnM6dGhpcy5nZXRJbnN0YW5jZSgpLnNhdmVSb3V0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciByPWUodCk7bnVsbCE9PXImJm4ucHVzaChyKX0pLG59LHR9KCksRGM9XCI6Ly9cIixNYz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLm1hbmFnZXJzPXt9fXJldHVybiB0LmdldEluc3RhbmNlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PXQuaW5zdGFuY2UmJih0Lmluc3RhbmNlPW5ldyB0KSx0Lmluc3RhbmNlfSx0LnJlZ2lzdGVyTWFuYWdlcj1mdW5jdGlvbihlLG4pe2IobnVsbCE9ZSxcInNjaGVtZSBtdXN0IG5vdCBiZSB1bmRlZmluZWQgb3IgbnVsbC5cIiksZS5lbmRzV2l0aChEYykmJihlPWUuc2xpY2UoMCxlLmluZGV4T2YoRGMpKSksYihlLmxlbmd0aD4wLFwic2NoZW1lIG11c3Qgbm90IGJlIGFuIGVtcHR5IHN0cmluZy5cIik7dmFyIHI9dC5nZXRJbnN0YW5jZSgpO2IobnVsbD09ci5tYW5hZ2Vyc1tlXSxcIkEgbW9kZWwgc3RvcmUgbWFuYWdlciBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQgZm9yIHNjaGVtZSAnXCIrZStcIicuXCIpLHIubWFuYWdlcnNbZV09bn0sdC5nZXRNYW5hZ2VyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SW5zdGFuY2UoKS5tYW5hZ2Vyc1t0XTtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZGVsIG1hbmFnZXIgZm9yIHNjaGVtZSAnXCIrdCtcIidcIik7cmV0dXJuIGV9LHQuZ2V0U2NoZW1lcz1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyh0aGlzLmdldEluc3RhbmNlKCkubWFuYWdlcnMpfSx0fSgpO2Z1bmN0aW9uIGpjKHQpe2lmKC0xPT09dC5pbmRleE9mKERjKSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgdXJsIHN0cmluZyBwcm92aWRlZCBkb2VzIG5vdCBjb250YWluIGEgc2NoZW1lLiBTdXBwb3J0ZWQgc2NoZW1lcyBhcmU6IFwiK01jLmdldFNjaGVtZXMoKS5qb2luKFwiLFwiKSk7cmV0dXJue3NjaGVtZTp0LnNwbGl0KERjKVswXSxwYXRoOnQuc3BsaXQoRGMpWzFdfX1mdW5jdGlvbiBCYyh0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSExKSxjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciByLGksYSxvLHMsdSxjLGYsaDtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGwpe3N3aXRjaChsLmxhYmVsKXtjYXNlIDA6cmV0dXJuIGIodCE9PWUsXCJPbGQgcGF0aCBhbmQgbmV3IHBhdGggYXJlIHRoZSBzYW1lOiAnXCIrdCtcIidcIiksYigocj1SYy5nZXRMb2FkSGFuZGxlcnModCkpLmxlbmd0aD4wLFwiQ29weWluZyBmYWlsZWQgYmVjYXVzZSBubyBsb2FkIGhhbmRsZXIgaXMgZm91bmQgZm9yIHNvdXJjZSBVUkwgXCIrdCtcIi5cIiksYihyLmxlbmd0aDwyLFwiQ29weWluZyBmYWlsZWQgYmVjYXVzZSBtb3JlIHRoYW4gb25lIChcIityLmxlbmd0aCtcIikgbG9hZCBoYW5kbGVycyBmb3Igc291cmNlIFVSTCBcIit0K1wiLlwiKSxpPXJbMF0sYigoYT1SYy5nZXRTYXZlSGFuZGxlcnMoZSkpLmxlbmd0aD4wLFwiQ29weWluZyBmYWlsZWQgYmVjYXVzZSBubyBzYXZlIGhhbmRsZXIgaXMgZm91bmQgZm9yIGRlc3RpbmF0aW9uIFVSTCBcIitlK1wiLlwiKSxiKGEubGVuZ3RoPDIsXCJDb3B5aW5nIGZhaWxlZCBiZWNhdXNlIG1vcmUgdGhhbiBvbmUgKFwiK3IubGVuZ3RoK1wiKSBzYXZlIGhhbmRsZXJzIGZvciBkZXN0aW5hdGlvbiBVUkwgXCIrZStcIi5cIiksbz1hWzBdLHM9amModCkuc2NoZW1lLHU9amModCkucGF0aCxjPXM9PT1qYyh0KS5zY2hlbWUsWzQsaS5sb2FkKCldO2Nhc2UgMTpyZXR1cm4gZj1sLnNlbnQoKSxuJiZjP1s0LE1jLmdldE1hbmFnZXIocykucmVtb3ZlTW9kZWwodSldOlszLDNdO2Nhc2UgMjpsLnNlbnQoKSxsLmxhYmVsPTM7Y2FzZSAzOnJldHVybls0LG8uc2F2ZShmKV07Y2FzZSA0OnJldHVybiBoPWwuc2VudCgpLCFufHxjP1szLDZdOls0LE1jLmdldE1hbmFnZXIocykucmVtb3ZlTW9kZWwodSldO2Nhc2UgNTpsLnNlbnQoKSxsLmxhYmVsPTY7Y2FzZSA2OnJldHVyblsyLGgubW9kZWxBcnRpZmFjdHNJbmZvXX19KX0pfXZhciBMYz1cIm1vZGVsc19zdG9yZVwiLHpjPVwibW9kZWxfaW5mb19zdG9yZVwiO2Z1bmN0aW9uIEZjKCl7aWYoIUx0LmdldChcIklTX0JST1dTRVJcIikpdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIG9idGFpbiBJbmRleGVkREIgZmFjdG9yeSBiZWNhdXNlIHRoZSBjdXJyZW50IGVudmlyb25tZW50aXMgbm90IGEgd2ViIGJyb3dzZXIuXCIpO3ZhciB0PXdpbmRvdyxlPXQuaW5kZXhlZERCfHx0Lm1vekluZGV4ZWREQnx8dC53ZWJraXRJbmRleGVkREJ8fHQubXNJbmRleGVkREJ8fHQuc2hpbUluZGV4ZWREQjtpZihudWxsPT1lKXRocm93IG5ldyBFcnJvcihcIlRoZSBjdXJyZW50IGJyb3dzZXIgZG9lcyBub3QgYXBwZWFyIHRvIHN1cHBvcnQgSW5kZXhlZERCLlwiKTtyZXR1cm4gZX1mdW5jdGlvbiBVYyh0KXt2YXIgZT10LnJlc3VsdDtlLmNyZWF0ZU9iamVjdFN0b3JlKExjLHtrZXlQYXRoOlwibW9kZWxQYXRoXCJ9KSxlLmNyZWF0ZU9iamVjdFN0b3JlKHpjLHtrZXlQYXRoOlwibW9kZWxQYXRoXCJ9KX12YXIgVmM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMuaW5kZXhlZERCPUZjKCksbnVsbD09dHx8IXQpdGhyb3cgbmV3IEVycm9yKFwiRm9yIEluZGV4ZWREQiwgbW9kZWxQYXRoIG11c3Qgbm90IGJlIG51bGwsIHVuZGVmaW5lZCBvciBlbXB0eS5cIik7dGhpcy5tb2RlbFBhdGg9dH1yZXR1cm4gdC5wcm90b3R5cGUuc2F2ZT1mdW5jdGlvbih0KXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGUpe2lmKHQubW9kZWxUb3BvbG9neSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKXRocm93IG5ldyBFcnJvcihcIkJyb3dzZXJMb2NhbFN0b3JhZ2Uuc2F2ZSgpIGRvZXMgbm90IHN1cHBvcnQgc2F2aW5nIG1vZGVsIHRvcG9sb2d5IGluIGJpbmFyeSBmb3JtYXRzIHlldC5cIik7cmV0dXJuWzIsdGhpcy5kYXRhYmFzZUFjdGlvbih0aGlzLm1vZGVsUGF0aCx0KV19KX0pfSx0LnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGwodGhpcyxmdW5jdGlvbih0KXtyZXR1cm5bMix0aGlzLmRhdGFiYXNlQWN0aW9uKHRoaXMubW9kZWxQYXRoKV19KX0pfSx0LnByb3RvdHlwZS5kYXRhYmFzZUFjdGlvbj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQscil7dmFyIGk9bi5pbmRleGVkREIub3BlbihcInRlbnNvcmZsb3dqc1wiLDEpO2kub251cGdyYWRlbmVlZGVkPWZ1bmN0aW9uKCl7cmV0dXJuIFVjKGkpfSxpLm9uc3VjY2Vzcz1mdW5jdGlvbigpe3ZhciBhPWkucmVzdWx0O2lmKG51bGw9PWUpe3ZhciBvPWEudHJhbnNhY3Rpb24oTGMsXCJyZWFkb25seVwiKSxzPW8ub2JqZWN0U3RvcmUoTGMpLmdldChuLm1vZGVsUGF0aCk7cy5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtpZihudWxsPT1zLnJlc3VsdClyZXR1cm4gYS5jbG9zZSgpLHIobmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kZWwgd2l0aCBwYXRoICdcIituLm1vZGVsUGF0aCtcIicgaW4gSW5kZXhlZERCLlwiKSk7dChzLnJlc3VsdC5tb2RlbEFydGlmYWN0cyl9LHMub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gYS5jbG9zZSgpLHIocy5lcnJvcil9LG8ub25jb21wbGV0ZT1mdW5jdGlvbigpe3JldHVybiBhLmNsb3NlKCl9fWVsc2V7dmFyIHUsYz1UYyhlKSxsPWEudHJhbnNhY3Rpb24oemMsXCJyZWFkd3JpdGVcIiksZj1sLm9iamVjdFN0b3JlKHpjKSxoPWYucHV0KHttb2RlbFBhdGg6bi5tb2RlbFBhdGgsbW9kZWxBcnRpZmFjdHNJbmZvOmN9KTtoLm9uc3VjY2Vzcz1mdW5jdGlvbigpe3ZhciBpPSh1PWEudHJhbnNhY3Rpb24oTGMsXCJyZWFkd3JpdGVcIikpLm9iamVjdFN0b3JlKExjKS5wdXQoe21vZGVsUGF0aDpuLm1vZGVsUGF0aCxtb2RlbEFydGlmYWN0czplLG1vZGVsQXJ0aWZhY3RzSW5mbzpjfSk7aS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdCh7bW9kZWxBcnRpZmFjdHNJbmZvOmN9KX0saS5vbmVycm9yPWZ1bmN0aW9uKHQpe3ZhciBlPShmPWwub2JqZWN0U3RvcmUoemMpKS5kZWxldGUobi5tb2RlbFBhdGgpO2Uub25zdWNjZXNzPWZ1bmN0aW9uKCl7cmV0dXJuIGEuY2xvc2UoKSxyKGkuZXJyb3IpfSxlLm9uZXJyb3I9ZnVuY3Rpb24odCl7cmV0dXJuIGEuY2xvc2UoKSxyKGkuZXJyb3IpfX19LGgub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gYS5jbG9zZSgpLHIoaC5lcnJvcil9LGwub25jb21wbGV0ZT1mdW5jdGlvbigpe251bGw9PXU/YS5jbG9zZSgpOnUub25jb21wbGV0ZT1mdW5jdGlvbigpe3JldHVybiBhLmNsb3NlKCl9fX19LGkub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gcihpLmVycm9yKX19KX0sdC5VUkxfU0NIRU1FPVwiaW5kZXhlZGRiOi8vXCIsdH0oKSxXYz1mdW5jdGlvbih0KXtyZXR1cm4gTHQuZ2V0KFwiSVNfQlJPV1NFUlwiKSYmIUFycmF5LmlzQXJyYXkodCkmJnQuc3RhcnRzV2l0aChWYy5VUkxfU0NIRU1FKT9mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFZjKHQpfSh0LnNsaWNlKFZjLlVSTF9TQ0hFTUUubGVuZ3RoKSk6bnVsbH07UmMucmVnaXN0ZXJTYXZlUm91dGVyKFdjKSxSYy5yZWdpc3RlckxvYWRSb3V0ZXIoV2MpO3ZhciBxYz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLmluZGV4ZWREQj1GYygpfXJldHVybiB0LnByb3RvdHlwZS5saXN0TW9kZWxzPWZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGUpe3JldHVyblsyLG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsbil7dmFyIHI9dC5pbmRleGVkREIub3BlbihcInRlbnNvcmZsb3dqc1wiLDEpO3Iub251cGdyYWRlbmVlZGVkPWZ1bmN0aW9uKCl7cmV0dXJuIFVjKHIpfSxyLm9uc3VjY2Vzcz1mdW5jdGlvbigpe3ZhciB0PXIucmVzdWx0LGk9dC50cmFuc2FjdGlvbih6YyxcInJlYWRvbmx5XCIpLGE9aS5vYmplY3RTdG9yZSh6YykuZ2V0QWxsKCk7YS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9e30sbj0wLHI9YS5yZXN1bHQ7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXJbbl07dFtpLm1vZGVsUGF0aF09aS5tb2RlbEFydGlmYWN0c0luZm99ZSh0KX0sYS5vbmVycm9yPWZ1bmN0aW9uKGUpe3JldHVybiB0LmNsb3NlKCksbihhLmVycm9yKX0saS5vbmNvbXBsZXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHQuY2xvc2UoKX19LHIub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gbihyLmVycm9yKX19KV19KX0pfSx0LnByb3RvdHlwZS5yZW1vdmVNb2RlbD1mdW5jdGlvbih0KXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuIHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RhcnRzV2l0aChWYy5VUkxfU0NIRU1FKT90LnNsaWNlKFZjLlVSTF9TQ0hFTUUubGVuZ3RoKTp0fSh0KSxbMixuZXcgUHJvbWlzZShmdW5jdGlvbihuLHIpe3ZhciBpPWUuaW5kZXhlZERCLm9wZW4oXCJ0ZW5zb3JmbG93anNcIiwxKTtpLm9udXBncmFkZW5lZWRlZD1mdW5jdGlvbigpe3JldHVybiBVYyhpKX0saS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXt2YXIgZSxhPWkucmVzdWx0LG89YS50cmFuc2FjdGlvbih6YyxcInJlYWR3cml0ZVwiKSxzPW8ub2JqZWN0U3RvcmUoemMpLHU9cy5nZXQodCk7dS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtpZihudWxsPT11LnJlc3VsdClyZXR1cm4gYS5jbG9zZSgpLHIobmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kZWwgd2l0aCBwYXRoICdcIit0K1wiJyBpbiBJbmRleGVkREIuXCIpKTt2YXIgaT1zLmRlbGV0ZSh0KSxvPWZ1bmN0aW9uKCl7dmFyIGk9KGU9YS50cmFuc2FjdGlvbihMYyxcInJlYWR3cml0ZVwiKSkub2JqZWN0U3RvcmUoTGMpLmRlbGV0ZSh0KTtpLm9uc3VjY2Vzcz1mdW5jdGlvbigpe3JldHVybiBuKHUucmVzdWx0Lm1vZGVsQXJ0aWZhY3RzSW5mbyl9LGkub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gcih1LmVycm9yKX19O2kub25zdWNjZXNzPW8saS5vbmVycm9yPWZ1bmN0aW9uKHQpe3JldHVybiBvKCksYS5jbG9zZSgpLHIodS5lcnJvcil9fSx1Lm9uZXJyb3I9ZnVuY3Rpb24odCl7cmV0dXJuIGEuY2xvc2UoKSxyKHUuZXJyb3IpfSxvLm9uY29tcGxldGU9ZnVuY3Rpb24oKXtudWxsPT1lP2EuY2xvc2UoKTplLm9uY29tcGxldGU9ZnVuY3Rpb24oKXtyZXR1cm4gYS5jbG9zZSgpfX19LGkub25lcnJvcj1mdW5jdGlvbih0KXtyZXR1cm4gcihpLmVycm9yKX19KV19KX0pfSx0fSgpO2lmKEx0LmdldChcIklTX0JST1dTRVJcIikpdHJ5e01jLnJlZ2lzdGVyTWFuYWdlcihWYy5VUkxfU0NIRU1FLG5ldyBxYyl9Y2F0Y2godnQpe312YXIgJGM9XCIvXCIsSGM9XCJ0ZW5zb3JmbG93anNfbW9kZWxzXCIsS2M9XCJpbmZvXCIsR2M9XCJtb2RlbF90b3BvbG9neVwiLFhjPVwid2VpZ2h0X3NwZWNzXCIsWWM9XCJ3ZWlnaHRfZGF0YVwiO2Z1bmN0aW9uIEpjKHQpe3JldHVybntpbmZvOltIYyx0LEtjXS5qb2luKCRjKSx0b3BvbG9neTpbSGMsdCxHY10uam9pbigkYyksd2VpZ2h0U3BlY3M6W0hjLHQsWGNdLmpvaW4oJGMpLHdlaWdodERhdGE6W0hjLHQsWWNdLmpvaW4oJGMpfX1mdW5jdGlvbiBaYyh0KXt2YXIgZT10LnNwbGl0KCRjKTtpZihlLmxlbmd0aDwzKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQga2V5IGZvcm1hdDogXCIrdCk7cmV0dXJuIGUuc2xpY2UoMSxlLmxlbmd0aC0xKS5qb2luKCRjKX12YXIgUWM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKCFMdC5nZXQoXCJJU19CUk9XU0VSXCIpfHx2b2lkIDA9PT13aW5kb3cubG9jYWxTdG9yYWdlKXRocm93IG5ldyBFcnJvcihcIlRoZSBjdXJyZW50IGVudmlyb25tZW50IGRvZXMgbm90IHN1cHBvcnQgbG9jYWwgc3RvcmFnZS5cIik7aWYodGhpcy5MUz13aW5kb3cubG9jYWxTdG9yYWdlLG51bGw9PXR8fCF0KXRocm93IG5ldyBFcnJvcihcIkZvciBsb2NhbCBzdG9yYWdlLCBtb2RlbFBhdGggbXVzdCBub3QgYmUgbnVsbCwgdW5kZWZpbmVkIG9yIGVtcHR5LlwiKTt0aGlzLm1vZGVsUGF0aD10LHRoaXMua2V5cz1KYyh0aGlzLm1vZGVsUGF0aCl9cmV0dXJuIHQucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihvKXtpZih0Lm1vZGVsVG9wb2xvZ3kgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcil0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VyTG9jYWxTdG9yYWdlLnNhdmUoKSBkb2VzIG5vdCBzdXBwb3J0IHNhdmluZyBtb2RlbCB0b3BvbG9neSBpbiBiaW5hcnkgZm9ybWF0cyB5ZXQuXCIpO2U9SlNPTi5zdHJpbmdpZnkodC5tb2RlbFRvcG9sb2d5KSxuPUpTT04uc3RyaW5naWZ5KHQud2VpZ2h0U3BlY3MpLHI9VGModCk7dHJ5e3JldHVybiB0aGlzLkxTLnNldEl0ZW0odGhpcy5rZXlzLmluZm8sSlNPTi5zdHJpbmdpZnkocikpLHRoaXMuTFMuc2V0SXRlbSh0aGlzLmtleXMudG9wb2xvZ3ksZSksdGhpcy5MUy5zZXRJdGVtKHRoaXMua2V5cy53ZWlnaHRTcGVjcyxuKSx0aGlzLkxTLnNldEl0ZW0odGhpcy5rZXlzLndlaWdodERhdGEsZnVuY3Rpb24odCl7cmV0dXJuIGtjP2EuZnJvbSh0KS50b1N0cmluZyhcImJhc2U2NFwiKTpidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxuZXcgVWludDhBcnJheSh0KSkpfSh0LndlaWdodERhdGEpKSxbMix7bW9kZWxBcnRpZmFjdHNJbmZvOnJ9XX1jYXRjaCh0KXtmb3IoaSBpbiB0aGlzLmtleXMpdGhpcy5MUy5yZW1vdmVJdGVtKHRoaXMua2V5c1tpXSk7dGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHNhdmUgbW9kZWwgJ1wiK3RoaXMubW9kZWxQYXRoK1wiJyB0byBsb2NhbCBzdG9yYWdlOiBzaXplIHF1b3RhIGJlaW5nIGV4Y2VlZGVkIGlzIGEgcG9zc2libGUgY2F1c2Ugb2YgdGhpcyBmYWlsdXJlOiBtb2RlbFRvcG9sb2d5Qnl0ZXM9XCIrci5tb2RlbFRvcG9sb2d5Qnl0ZXMrXCIsIHdlaWdodFNwZWNzQnl0ZXM9XCIrci53ZWlnaHRTcGVjc0J5dGVzK1wiLCB3ZWlnaHREYXRhQnl0ZXM9XCIrci53ZWlnaHREYXRhQnl0ZXMrXCIuXCIpfXJldHVyblsyXX0pfSl9LHQucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obyl7aWYobnVsbD09KHQ9SlNPTi5wYXJzZSh0aGlzLkxTLmdldEl0ZW0odGhpcy5rZXlzLmluZm8pKSkpdGhyb3cgbmV3IEVycm9yKFwiSW4gbG9jYWwgc3RvcmFnZSwgdGhlcmUgaXMgbm8gbW9kZWwgd2l0aCBuYW1lICdcIit0aGlzLm1vZGVsUGF0aCtcIidcIik7aWYoXCJKU09OXCIhPT10Lm1vZGVsVG9wb2xvZ3lUeXBlKXRocm93IG5ldyBFcnJvcihcIkJyb3dzZXJMb2NhbFN0b3JhZ2UgZG9lcyBub3Qgc3VwcG9ydCBsb2FkaW5nIG5vbi1KU09OIG1vZGVsIHRvcG9sb2d5IHlldC5cIik7aWYoZT17fSxudWxsPT0obj1KU09OLnBhcnNlKHRoaXMuTFMuZ2V0SXRlbSh0aGlzLmtleXMudG9wb2xvZ3kpKSkpdGhyb3cgbmV3IEVycm9yKFwiSW4gbG9jYWwgc3RvcmFnZSwgdGhlIHRvcG9sb2d5IG9mIG1vZGVsICdcIit0aGlzLm1vZGVsUGF0aCtcIicgaXMgbWlzc2luZy5cIik7aWYoZS5tb2RlbFRvcG9sb2d5PW4sbnVsbD09KHI9SlNPTi5wYXJzZSh0aGlzLkxTLmdldEl0ZW0odGhpcy5rZXlzLndlaWdodFNwZWNzKSkpKXRocm93IG5ldyBFcnJvcihcIkluIGxvY2FsIHN0b3JhZ2UsIHRoZSB3ZWlnaHQgc3BlY3Mgb2YgbW9kZWwgJ1wiK3RoaXMubW9kZWxQYXRoK1wiJyBhcmUgbWlzc2luZy5cIik7aWYoZS53ZWlnaHRTcGVjcz1yLG51bGw9PShpPXRoaXMuTFMuZ2V0SXRlbSh0aGlzLmtleXMud2VpZ2h0RGF0YSkpKXRocm93IG5ldyBFcnJvcihcIkluIGxvY2FsIHN0b3JhZ2UsIHRoZSBiaW5hcnkgd2VpZ2h0IHZhbHVlcyBvZiBtb2RlbCAnXCIrdGhpcy5tb2RlbFBhdGgrXCInIGFyZSBtaXNzaW5nLlwiKTtyZXR1cm4gZS53ZWlnaHREYXRhPWZ1bmN0aW9uKHQpe2lmKGtjKXt2YXIgZT1hLmZyb20odCxcImJhc2U2NFwiKTtyZXR1cm4gZS5idWZmZXIuc2xpY2UoZS5ieXRlT2Zmc2V0LGUuYnl0ZU9mZnNldCtlLmJ5dGVMZW5ndGgpfWZvcih2YXIgbj1hdG9iKHQpLHI9bmV3IFVpbnQ4QXJyYXkobi5sZW5ndGgpLGk9MDtpPG4ubGVuZ3RoOysraSlyLnNldChbbi5jaGFyQ29kZUF0KGkpXSxpKTtyZXR1cm4gci5idWZmZXJ9KGkpLFsyLGVdfSl9KX0sdC5VUkxfU0NIRU1FPVwibG9jYWxzdG9yYWdlOi8vXCIsdH0oKSx0bD1mdW5jdGlvbih0KXtyZXR1cm4gTHQuZ2V0KFwiSVNfQlJPV1NFUlwiKSYmIUFycmF5LmlzQXJyYXkodCkmJnQuc3RhcnRzV2l0aChRYy5VUkxfU0NIRU1FKT9mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFFjKHQpfSh0LnNsaWNlKFFjLlVSTF9TQ0hFTUUubGVuZ3RoKSk6bnVsbH07UmMucmVnaXN0ZXJTYXZlUm91dGVyKHRsKSxSYy5yZWdpc3RlckxvYWRSb3V0ZXIodGwpO3ZhciBlbD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXtiKEx0LmdldChcIklTX0JST1dTRVJcIiksXCJDdXJyZW50IGVudmlyb25tZW50IGlzIG5vdCBhIHdlYiBicm93c2VyXCIpLGIodm9pZCAwIT09d2luZG93LmxvY2FsU3RvcmFnZSxcIkN1cnJlbnQgYnJvd3NlciBkb2VzIG5vdCBhcHBlYXIgdG8gc3VwcG9ydCBsb2NhbFN0b3JhZ2VcIiksdGhpcy5MUz13aW5kb3cubG9jYWxTdG9yYWdlfXJldHVybiB0LnByb3RvdHlwZS5saXN0TW9kZWxzPWZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQsZSxuLHIsaSxhO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obyl7Zm9yKHQ9e30sZT1IYyskYyxuPSRjK0tjLHI9MDtyPHRoaXMuTFMubGVuZ3RoOysrcikoaT10aGlzLkxTLmtleShyKSkuc3RhcnRzV2l0aChlKSYmaS5lbmRzV2l0aChuKSYmKGE9WmMoaSksdFthXT1KU09OLnBhcnNlKHRoaXMuTFMuZ2V0SXRlbShpKSkpO3JldHVyblsyLHRdfSl9KX0sdC5wcm90b3R5cGUucmVtb3ZlTW9kZWw9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKHIpe2lmKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RhcnRzV2l0aChRYy5VUkxfU0NIRU1FKT90LnNsaWNlKFFjLlVSTF9TQ0hFTUUubGVuZ3RoKTp0fSh0KSxlPUpjKHQpLG51bGw9PXRoaXMuTFMuZ2V0SXRlbShlLmluZm8pKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZGVsIGF0IHBhdGggJ1wiK3QrXCInXCIpO3JldHVybiBuPUpTT04ucGFyc2UodGhpcy5MUy5nZXRJdGVtKGUuaW5mbykpLHRoaXMuTFMucmVtb3ZlSXRlbShlLmluZm8pLHRoaXMuTFMucmVtb3ZlSXRlbShlLnRvcG9sb2d5KSx0aGlzLkxTLnJlbW92ZUl0ZW0oZS53ZWlnaHRTcGVjcyksdGhpcy5MUy5yZW1vdmVJdGVtKGUud2VpZ2h0RGF0YSksWzIsbl19KX0pfSx0fSgpO2lmKEx0LmdldChcIklTX0JST1dTRVJcIikpdHJ5e01jLnJlZ2lzdGVyTWFuYWdlcihRYy5VUkxfU0NIRU1FLG5ldyBlbCl9Y2F0Y2godnQpe312YXIgbmw9XCJtb2RlbFwiLHJsPVwiLmpzb25cIixpbD1cIi53ZWlnaHRzLmJpblwiLGFsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXtpZighTHQuZ2V0KFwiSVNfQlJPV1NFUlwiKSl0aHJvdyBuZXcgRXJyb3IoXCJicm93c2VyRG93bmxvYWRzKCkgY2Fubm90IHByb2NlZWQgYmVjYXVzZSB0aGUgY3VycmVudCBlbnZpcm9ubWVudCBpcyBub3QgYSBicm93c2VyLlwiKTtlLnN0YXJ0c1dpdGgodC5VUkxfU0NIRU1FKSYmKGU9ZS5zbGljZSh0LlVSTF9TQ0hFTUUubGVuZ3RoKSksbnVsbCE9ZSYmMCE9PWUubGVuZ3RofHwoZT1ubCksdGhpcy5tb2RlbFRvcG9sb2d5RmlsZU5hbWU9ZStybCx0aGlzLndlaWdodERhdGFGaWxlTmFtZT1lK2lsfXJldHVybiB0LnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLGEsbztyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKHMpe2lmKGU9d2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW3Qud2VpZ2h0RGF0YV0se3R5cGU6XCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIn0pKSx0Lm1vZGVsVG9wb2xvZ3kgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcil0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VyRG93bmxvYWRzLnNhdmUoKSBkb2VzIG5vdCBzdXBwb3J0IHNhdmluZyBtb2RlbCB0b3BvbG9neSBpbiBiaW5hcnkgZm9ybWF0cyB5ZXQuXCIpO3JldHVybiBuPVt7cGF0aHM6W1wiLi9cIit0aGlzLndlaWdodERhdGFGaWxlTmFtZV0sd2VpZ2h0czp0LndlaWdodFNwZWNzfV0scj17bW9kZWxUb3BvbG9neTp0Lm1vZGVsVG9wb2xvZ3ksd2VpZ2h0c01hbmlmZXN0Om59LGk9d2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW0pTT04uc3RyaW5naWZ5KHIpXSx7dHlwZTpcImFwcGxpY2F0aW9uL2pzb25cIn0pKSwoYT1udWxsPT10aGlzLmpzb25BbmNob3I/ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik6dGhpcy5qc29uQW5jaG9yKS5kb3dubG9hZD10aGlzLm1vZGVsVG9wb2xvZ3lGaWxlTmFtZSxhLmhyZWY9aSxhLmNsaWNrKCksbnVsbCE9dC53ZWlnaHREYXRhJiYoKG89bnVsbD09dGhpcy53ZWlnaHREYXRhQW5jaG9yP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpOnRoaXMud2VpZ2h0RGF0YUFuY2hvcikuZG93bmxvYWQ9dGhpcy53ZWlnaHREYXRhRmlsZU5hbWUsby5ocmVmPWUsby5jbGljaygpKSxbMix7bW9kZWxBcnRpZmFjdHNJbmZvOlRjKHQpfV19KX0pfSx0LlVSTF9TQ0hFTUU9XCJkb3dubG9hZHM6Ly9cIix0fSgpLG9sPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZihudWxsPT10fHx0Lmxlbmd0aDwxKXRocm93IG5ldyBFcnJvcihcIldoZW4gY2FsbGluZyBicm93c2VyRmlsZXMsIGF0IGxlYXN0IDEgZmlsZSBpcyByZXF1aXJlZCwgYnV0IHJlY2VpdmVkIFwiK3QpO3RoaXMuZmlsZXM9dH1yZXR1cm4gdC5wcm90b3R5cGUubG9hZD1mdW5jdGlvbigpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGUsbj10aGlzO3JldHVybiBsKHRoaXMsZnVuY3Rpb24ocil7cmV0dXJuIHQ9dGhpcy5maWxlc1swXSxlPXRoaXMuZmlsZXMuc2xpY2UoMSksWzIsbmV3IFByb21pc2UoZnVuY3Rpb24ocixpKXt2YXIgYT1uZXcgRmlsZVJlYWRlcjthLm9ubG9hZD1mdW5jdGlvbihhKXt2YXIgbz1KU09OLnBhcnNlKGEudGFyZ2V0LnJlc3VsdCkscz1vLm1vZGVsVG9wb2xvZ3k7aWYobnVsbCE9cyl7MD09PWUubGVuZ3RoJiZyKHttb2RlbFRvcG9sb2d5OnN9KTt2YXIgdT1vLndlaWdodHNNYW5pZmVzdDtpZihudWxsIT11KXt2YXIgYzt0cnl7Yz1uLmNoZWNrTWFuaWZlc3RBbmRXZWlnaHRGaWxlcyh1LGUpfWNhdGNoKHQpe3JldHVybiB2b2lkIGkodCl9dmFyIGw9W10sZj1bXSxoPVtdO3UuZm9yRWFjaChmdW5jdGlvbih0KXt0LnBhdGhzLmZvckVhY2goZnVuY3Rpb24odCl7Zi5wdXNoKHQpLGgucHVzaChudWxsKX0pLGwucHVzaC5hcHBseShsLHQud2VpZ2h0cyl9KSx1LmZvckVhY2goZnVuY3Rpb24odCl7dC5wYXRocy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBGaWxlUmVhZGVyO2Uub25sb2FkPWZ1bmN0aW9uKGUpe3ZhciBuPWUudGFyZ2V0LnJlc3VsdCxpPWYuaW5kZXhPZih0KTtoW2ldPW4sLTE9PT1oLmluZGV4T2YobnVsbCkmJnIoe21vZGVsVG9wb2xvZ3k6cyx3ZWlnaHRTcGVjczpsLHdlaWdodERhdGE6Q2MoaCl9KX0sZS5vbmVycm9yPWZ1bmN0aW9uKGUpe3JldHVybiBpKFwiRmFpbGVkIHRvIHdlaWdodHMgZGF0YSBmcm9tIGZpbGUgb2YgcGF0aCAnXCIrdCtcIicuXCIpfSxlLnJlYWRBc0FycmF5QnVmZmVyKGNbdF0pfSl9KX1lbHNlIGkobmV3IEVycm9yKFwid2VpZ2h0TWFuaWZlc3QgZmllbGQgaXMgbWlzc2luZyBmcm9tIGZpbGUgXCIrdC5uYW1lKSl9ZWxzZSBpKG5ldyBFcnJvcihcIm1vZGVsVG9wb2xvZ3kgZmllbGQgaXMgbWlzc2luZyBmcm9tIGZpbGUgXCIrdC5uYW1lKSl9LGEub25lcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gaShcIkZhaWxlZCB0byByZWFkIG1vZGVsIHRvcG9sb2d5IGFuZCB3ZWlnaHRzIG1hbmlmZXN0IEpTT04gZnJvbSBmaWxlICdcIit0Lm5hbWUrXCInLiBCcm93c2VyRmlsZXMgc3VwcG9ydHMgbG9hZGluZyBLZXJhcy1zdHlsZSB0Zi5Nb2RlbCBhcnRpZmFjdHMgb25seS5cIil9LGEucmVhZEFzVGV4dCh0KX0pXX0pfSl9LHQucHJvdG90eXBlLmNoZWNrTWFuaWZlc3RBbmRXZWlnaHRGaWxlcz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1bXSxyPWUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBQYyh0Lm5hbWUpfSksaT17fSxhPTAsbz10O2E8by5sZW5ndGg7YSsrKW9bYV0ucGF0aHMuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgYT1QYyh0KTtpZigtMSE9PW4uaW5kZXhPZihhKSl0aHJvdyBuZXcgRXJyb3IoXCJEdXBsaWNhdGUgZmlsZSBiYXNlbmFtZSBmb3VuZCBpbiB3ZWlnaHRzIG1hbmlmZXN0OiAnXCIrYStcIidcIik7aWYobi5wdXNoKGEpLC0xPT09ci5pbmRleE9mKGEpKXRocm93IG5ldyBFcnJvcihcIldlaWdodCBmaWxlIHdpdGggYmFzZW5hbWUgJ1wiK2ErXCInIGlzIG5vdCBwcm92aWRlZC5cIik7aVt0XT1lW3IuaW5kZXhPZihhKV19KTtpZihuLmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIk1pc21hdGNoIGluIHRoZSBudW1iZXIgb2YgZmlsZXMgaW4gd2VpZ2h0cyBtYW5pZmVzdCAoXCIrbi5sZW5ndGgrXCIpIGFuZCB0aGUgbnVtYmVyIG9mIHdlaWdodCBmaWxlcyBwcm92aWRlZCAoXCIrZS5sZW5ndGgrXCIpLlwiKTtyZXR1cm4gaX0sdH0oKTtmdW5jdGlvbiBzbCh0LGUsbil7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHIsaTtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGEpe3N3aXRjaChhLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG51bGw9PW4mJihuPWZldGNoKSxyPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuKHQsZSl9KSxbNCxQcm9taXNlLmFsbChyKV07Y2FzZSAxOnJldHVybiBpPWEuc2VudCgpLFs0LFByb21pc2UuYWxsKGkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFycmF5QnVmZmVyKCl9KSldO2Nhc2UgMjpyZXR1cm5bMixhLnNlbnQoKV19fSl9KX1mdW5jdGlvbiB1bCh0KXt2YXIgZT10aGlzO3JldHVybiBmdW5jdGlvbihuLHIsaSl7cmV0dXJuIHZvaWQgMD09PXImJihyPVwiXCIpLGMoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsYSxvLHMsdSxjLGYsaCxwLGQ7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihsKXtzd2l0Y2gobC5sYWJlbCl7Y2FzZSAwOmlmKGU9bi5tYXAoZnVuY3Rpb24oKXtyZXR1cm4hMX0pLGE9e30sbz1udWxsIT1pP2kubWFwKGZ1bmN0aW9uKCl7cmV0dXJuITF9KTpbXSxzPVtdLG4uZm9yRWFjaChmdW5jdGlvbih0LG4pe3ZhciByPTA7dC53ZWlnaHRzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIHU9XCJxdWFudGl6YXRpb25cImluIHQ/dC5xdWFudGl6YXRpb24uZHR5cGU6dC5kdHlwZSxjPU5jW3VdKkUodC5zaGFwZSksbD1mdW5jdGlvbigpe2Vbbl09ITAsbnVsbD09YVtuXSYmKGFbbl09W10pLGFbbl0ucHVzaCh7bWFuaWZlc3RFbnRyeTp0LGdyb3VwT2Zmc2V0OnIsc2l6ZUJ5dGVzOmN9KX07bnVsbCE9aT9pLmZvckVhY2goZnVuY3Rpb24oZSxuKXtlPT09dC5uYW1lJiYobCgpLG9bbl09ITApfSk6bCgpLHMucHVzaCh0Lm5hbWUpLHIrPWN9KX0pLCFvLmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiB0fSkpdGhyb3cgdT1pLmZpbHRlcihmdW5jdGlvbih0LGUpe3JldHVybiFvW2VdfSksbmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgd2VpZ2h0cyBpbiBtYW5pZmVzdCB3aXRoIG5hbWVzOiBcIit1LmpvaW4oXCIsIFwiKStcIi4gXFxuTWFuaWZlc3QgSlNPTiBoYXMgd2VpZ2h0cyB3aXRoIG5hbWVzOiBcIitzLmpvaW4oXCIsIFwiKStcIi5cIik7cmV0dXJuIGM9ZS5yZWR1Y2UoZnVuY3Rpb24odCxlLG4pe3JldHVybiBlJiZ0LnB1c2gobiksdH0sW10pLGY9W10sYy5mb3JFYWNoKGZ1bmN0aW9uKHQpe25bdF0ucGF0aHMuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZT1yKyhyLmVuZHNXaXRoKFwiL1wiKT9cIlwiOlwiL1wiKSt0O2YucHVzaChlKX0pfSksWzQsdChmKV07Y2FzZSAxOnJldHVybiBoPWwuc2VudCgpLHA9e30sZD0wLGMuZm9yRWFjaChmdW5jdGlvbih0KXtmb3IodmFyIGU9blt0XS5wYXRocy5sZW5ndGgscj0wLGk9MDtpPGU7aSsrKXIrPWhbZCtpXS5ieXRlTGVuZ3RoO2Zvcih2YXIgbz1uZXcgQXJyYXlCdWZmZXIocikscz1uZXcgVWludDhBcnJheShvKSx1PTAsYz0wO2M8ZTtjKyspe3ZhciBsPW5ldyBVaW50OEFycmF5KGhbZCtjXSk7cy5zZXQobCx1KSx1Kz1sLmJ5dGVMZW5ndGh9YVt0XS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPUljKG8uc2xpY2UodC5ncm91cE9mZnNldCx0Lmdyb3VwT2Zmc2V0K3Quc2l6ZUJ5dGVzKSxbdC5tYW5pZmVzdEVudHJ5XSk7Zm9yKHZhciBuIGluIGUpcFtuXT1lW25dfSksZCs9ZX0pLFsyLHBdfX0pfSl9fVJjLnJlZ2lzdGVyU2F2ZVJvdXRlcihmdW5jdGlvbih0KXtyZXR1cm4gTHQuZ2V0KFwiSVNfQlJPV1NFUlwiKSYmIUFycmF5LmlzQXJyYXkodCkmJnQuc3RhcnRzV2l0aChhbC5VUkxfU0NIRU1FKT9mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9XCJtb2RlbFwiKSxuZXcgYWwodCl9KHQuc2xpY2UoYWwuVVJMX1NDSEVNRS5sZW5ndGgpKTpudWxsfSk7dmFyIGNsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsbixyKXtpZih0aGlzLndlaWdodFBhdGhQcmVmaXg9bix0aGlzLkRFRkFVTFRfTUVUSE9EPVwiUE9TVFwiLG51bGw9PXIpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBmZXRjaCl0aHJvdyBuZXcgRXJyb3IoXCJicm93c2VySFRUUFJlcXVlc3QgaXMgbm90IHN1cHBvcnRlZCBvdXRzaWRlIHRoZSB3ZWIgYnJvd3NlciB3aXRob3V0IGEgZmV0Y2ggcG9seWZpbGwuXCIpO3RoaXMuZmV0Y2hGdW5jPWZldGNoLmJpbmQoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvdz9udWxsOndpbmRvdyl9ZWxzZSBiKFwiZnVuY3Rpb25cIj09dHlwZW9mIHIsXCJNdXN0IHBhc3MgYSBmdW5jdGlvbiB0aGF0IG1hdGNoZXMgdGhlIHNpZ25hdHVyZSBvZiBgZmV0Y2hgIChzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZldGNoX0FQSSlcIiksdGhpcy5mZXRjaEZ1bmM9cjtpZihiKG51bGwhPXQmJnQubGVuZ3RoPjAsXCJVUkwgcGF0aCBmb3IgYnJvd3NlckhUVFBSZXF1ZXN0IG11c3Qgbm90IGJlIG51bGwsIHVuZGVmaW5lZCBvciBlbXB0eS5cIiksQXJyYXkuaXNBcnJheSh0KSYmYigyPT09dC5sZW5ndGgsXCJVUkwgcGF0aHMgZm9yIGJyb3dzZXJIVFRQUmVxdWVzdCBtdXN0IGhhdmUgYSBsZW5ndGggb2YgMiwgKGFjdHVhbCBsZW5ndGggaXMgXCIrdC5sZW5ndGgrXCIpLlwiKSx0aGlzLnBhdGg9dCxudWxsIT1lJiZudWxsIT1lLmJvZHkpdGhyb3cgbmV3IEVycm9yKFwicmVxdWVzdEluaXQgaXMgZXhwZWN0ZWQgdG8gaGF2ZSBubyBwcmUtZXhpc3RpbmcgYm9keSwgYnV0IGhhcyBvbmUuXCIpO3RoaXMucmVxdWVzdEluaXQ9ZXx8e319cmV0dXJuIHQucHJvdG90eXBlLnNhdmU9ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihhKXtzd2l0Y2goYS5sYWJlbCl7Y2FzZSAwOmlmKHQubW9kZWxUb3BvbG9neSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKXRocm93IG5ldyBFcnJvcihcIkJyb3dzZXJIVFRQUmVxdWVzdC5zYXZlKCkgZG9lcyBub3Qgc3VwcG9ydCBzYXZpbmcgbW9kZWwgdG9wb2xvZ3kgaW4gYmluYXJ5IGZvcm1hdHMgeWV0LlwiKTtyZXR1cm4oZT1PYmplY3QuYXNzaWduKHttZXRob2Q6dGhpcy5ERUZBVUxUX01FVEhPRH0sdGhpcy5yZXF1ZXN0SW5pdCkpLmJvZHk9bmV3IEZvcm1EYXRhLG49W3twYXRoczpbXCIuL21vZGVsLndlaWdodHMuYmluXCJdLHdlaWdodHM6dC53ZWlnaHRTcGVjc31dLHI9e21vZGVsVG9wb2xvZ3k6dC5tb2RlbFRvcG9sb2d5LHdlaWdodHNNYW5pZmVzdDpufSxlLmJvZHkuYXBwZW5kKFwibW9kZWwuanNvblwiLG5ldyBCbG9iKFtKU09OLnN0cmluZ2lmeShyKV0se3R5cGU6XCJhcHBsaWNhdGlvbi9qc29uXCJ9KSxcIm1vZGVsLmpzb25cIiksbnVsbCE9dC53ZWlnaHREYXRhJiZlLmJvZHkuYXBwZW5kKFwibW9kZWwud2VpZ2h0cy5iaW5cIixuZXcgQmxvYihbdC53ZWlnaHREYXRhXSx7dHlwZTpcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwifSksXCJtb2RlbC53ZWlnaHRzLmJpblwiKSxbNCx0aGlzLmdldEZldGNoRnVuYygpKHRoaXMucGF0aCxlKV07Y2FzZSAxOmlmKChpPWEuc2VudCgpKS5vaylyZXR1cm5bMix7bW9kZWxBcnRpZmFjdHNJbmZvOlRjKHQpLHJlc3BvbnNlczpbaV19XTt0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VySFRUUFJlcXVlc3Quc2F2ZSgpIGZhaWxlZCBkdWUgdG8gSFRUUCByZXNwb25zZSBzdGF0dXMgXCIraS5zdGF0dXMrXCIuXCIpfX0pfSl9LHQucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLEFycmF5LmlzQXJyYXkodGhpcy5wYXRoKT90aGlzLmxvYWRCaW5hcnlNb2RlbCgpOnRoaXMubG9hZEpTT05Nb2RlbCgpXX0pfSl9LHQucHJvdG90eXBlLmxvYWRCaW5hcnlUb3BvbG9neT1mdW5jdGlvbigpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGU7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybiBuLnRyeXMucHVzaChbMCwzLCw0XSksWzQsdGhpcy5nZXRGZXRjaEZ1bmMoKSh0aGlzLnBhdGhbMF0sdGhpcy5yZXF1ZXN0SW5pdCldO2Nhc2UgMTppZighKHQ9bi5zZW50KCkpLm9rKXRocm93IG5ldyBFcnJvcihcIkJyb3dzZXJIVFRQUmVxdWVzdC5sb2FkKCkgZmFpbGVkIGR1ZSB0byBIVFRQIHJlc3BvbnNlOiBcIit0LnN0YXR1c1RleHQpO3JldHVybls0LHQuYXJyYXlCdWZmZXIoKV07Y2FzZSAyOnJldHVyblsyLG4uc2VudCgpXTtjYXNlIDM6dGhyb3cgZT1uLnNlbnQoKSxuZXcgRXJyb3IodGhpcy5wYXRoWzBdK1wiIG5vdCBmb3VuZC4gXCIrZSk7Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5sb2FkQmluYXJ5TW9kZWw9ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpLGEsbyxzO3JldHVybiBsKHRoaXMsZnVuY3Rpb24odSl7c3dpdGNoKHUubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdD10aGlzLmxvYWRCaW5hcnlUb3BvbG9neSgpLFs0LHRoaXMuZ2V0RmV0Y2hGdW5jKCkodGhpcy5wYXRoWzFdLHRoaXMucmVxdWVzdEluaXQpXTtjYXNlIDE6aWYoIShlPXUuc2VudCgpKS5vayl0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VySFRUUFJlcXVlc3QubG9hZCgpIGZhaWxlZCBkdWUgdG8gSFRUUCByZXNwb25zZTogXCIrZS5zdGF0dXNUZXh0KTtyZXR1cm5bNCxQcm9taXNlLmFsbChbdCxlXSldO2Nhc2UgMjpyZXR1cm4gbj11LnNlbnQoKSxyPW5bMF0sWzQsblsxXS5qc29uKCldO2Nhc2UgMzpyZXR1cm4gbnVsbD09KGk9dS5zZW50KCkpP1szLDVdOls0LHRoaXMubG9hZFdlaWdodHMoaSldO2Nhc2UgNDpzPXUuc2VudCgpLGE9c1swXSxvPXNbMV0sdS5sYWJlbD01O2Nhc2UgNTpyZXR1cm5bMix7bW9kZWxUb3BvbG9neTpyLHdlaWdodFNwZWNzOmEsd2VpZ2h0RGF0YTpvfV19fSl9KX0sdC5wcm90b3R5cGUubG9hZEpTT05Nb2RlbD1mdW5jdGlvbigpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGUsbixyLGksYSxvLHM7cmV0dXJuIGwodGhpcyxmdW5jdGlvbih1KXtzd2l0Y2godS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuZ2V0RmV0Y2hGdW5jKCkodGhpcy5wYXRoLHRoaXMucmVxdWVzdEluaXQpXTtjYXNlIDE6aWYoISh0PXUuc2VudCgpKS5vayl0aHJvdyBuZXcgRXJyb3IoXCJCcm93c2VySFRUUFJlcXVlc3QubG9hZCgpIGZhaWxlZCBkdWUgdG8gSFRUUCByZXNwb25zZTogXCIrdC5zdGF0dXNUZXh0KTtyZXR1cm5bNCx0Lmpzb24oKV07Y2FzZSAyOmlmKGU9dS5zZW50KCksbj1lLm1vZGVsVG9wb2xvZ3kscj1lLndlaWdodHNNYW5pZmVzdCxudWxsPT1uJiZudWxsPT1yKXRocm93IG5ldyBFcnJvcihcIlRoZSBKU09OIGZyb20gSFRUUCBwYXRoIFwiK3RoaXMucGF0aCtcIiBjb250YWlucyBuZWl0aGVyIG1vZGVsIHRvcG9sb2d5IG9yIG1hbmlmZXN0IGZvciB3ZWlnaHRzLlwiKTtyZXR1cm4gbnVsbD09cj9bMyw0XToobz1lLndlaWdodHNNYW5pZmVzdCxbNCx0aGlzLmxvYWRXZWlnaHRzKG8pXSk7Y2FzZSAzOnM9dS5zZW50KCksaT1zWzBdLGE9c1sxXSx1LmxhYmVsPTQ7Y2FzZSA0OnJldHVyblsyLHttb2RlbFRvcG9sb2d5Om4sd2VpZ2h0U3BlY3M6aSx3ZWlnaHREYXRhOmF9XX19KX0pfSx0LnByb3RvdHlwZS5sb2FkV2VpZ2h0cz1mdW5jdGlvbih0KXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHIsaSxhLG8scyx1LGMsZixoLHA7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihsKXtzd2l0Y2gobC5sYWJlbCl7Y2FzZSAwOmZvcihlPUFycmF5LmlzQXJyYXkodGhpcy5wYXRoKT90aGlzLnBhdGhbMV06dGhpcy5wYXRoLG49ZnVuY3Rpb24odCl7dmFyIGU9dC5sYXN0SW5kZXhPZihcIi9cIiksbj10Lmxhc3RJbmRleE9mKFwiP1wiKTtyZXR1cm5bdC5zdWJzdHJpbmcoMCxlKStcIi9cIixuPmU/dC5zdWJzdHJpbmcobik6XCJcIl19KGUpLHI9blswXSxpPW5bMV0sYT10aGlzLndlaWdodFBhdGhQcmVmaXh8fHIsbz1bXSxzPTAsdT10O3M8dS5sZW5ndGg7cysrKWM9dVtzXSxvLnB1c2guYXBwbHkobyxjLndlaWdodHMpO3JldHVybiBmPVtdLHQuZm9yRWFjaChmdW5jdGlvbih0KXt0LnBhdGhzLmZvckVhY2goZnVuY3Rpb24odCl7Zi5wdXNoKGErdCtpKX0pfSksaD1bb10scD1DYyxbNCxzbChmLHRoaXMucmVxdWVzdEluaXQsdGhpcy5nZXRGZXRjaEZ1bmMoKSldO2Nhc2UgMTpyZXR1cm5bMixoLmNvbmNhdChbcC5hcHBseSh2b2lkIDAsW2wuc2VudCgpXSldKV19fSl9KX0sdC5wcm90b3R5cGUuZ2V0RmV0Y2hGdW5jPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmV0Y2hGdW5jfSx0LlVSTF9TQ0hFTUVfUkVHRVg9L15odHRwcz86XFwvXFwvLyx0fSgpO2Z1bmN0aW9uIGxsKHQpe3JldHVybiBudWxsIT10Lm1hdGNoKGNsLlVSTF9TQ0hFTUVfUkVHRVgpfXZhciBmbD1mdW5jdGlvbih0KXtyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2YgZmV0Y2g/bnVsbDooQXJyYXkuaXNBcnJheSh0KT90LmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiBsbCh0KX0pOmxsKHQpKT9obCh0KTpudWxsfTtmdW5jdGlvbiBobCh0LGUsbixyKXtyZXR1cm4gbmV3IGNsKHQsZSxuLHIpfVJjLnJlZ2lzdGVyU2F2ZVJvdXRlcihmbCksUmMucmVnaXN0ZXJMb2FkUm91dGVyKGZsKTt2YXIgcGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuKXt0aGlzLm1vZGVsVG9wb2xvZ3k9dCx0aGlzLndlaWdodFNwZWNzPWUsdGhpcy53ZWlnaHREYXRhPW59cmV0dXJuIHQucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKGUpe3JldHVybiB0PXt9LG51bGwhPXRoaXMubW9kZWxUb3BvbG9neSYmKHQ9dSh7bW9kZWxUb3BvbG9neTp0aGlzLm1vZGVsVG9wb2xvZ3l9LHQpKSxudWxsIT10aGlzLndlaWdodFNwZWNzJiZ0aGlzLndlaWdodFNwZWNzLmxlbmd0aD4wJiYodD11KHt3ZWlnaHRTcGVjczp0aGlzLndlaWdodFNwZWNzfSx0KSksbnVsbCE9dGhpcy53ZWlnaHREYXRhJiZ0aGlzLndlaWdodERhdGEuYnl0ZUxlbmd0aD4wJiYodD11KHt3ZWlnaHREYXRhOnRoaXMud2VpZ2h0RGF0YX0sdCkpLFsyLHRdfSl9KX0sdH0oKSxkbD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy5zYXZlSGFuZGxlcj10fXJldHVybiB0LnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBsKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuWzIsdGhpcy5zYXZlSGFuZGxlcih0KV19KX0pfSx0fSgpO3ZhciBtbD1SYy5yZWdpc3RlclNhdmVSb3V0ZXIsZ2w9UmMucmVnaXN0ZXJMb2FkUm91dGVyLHlsPVJjLmdldFNhdmVIYW5kbGVycyx2bD1SYy5nZXRMb2FkSGFuZGxlcnMsYmw9T2JqZWN0LmZyZWV6ZSh7YnJvd3NlckZpbGVzOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgb2wodCl9LGJyb3dzZXJIVFRQUmVxdWVzdDpobCxjb25jYXRlbmF0ZUFycmF5QnVmZmVyczpDYyxkZWNvZGVXZWlnaHRzOkljLGVuY29kZVdlaWdodHM6ZnVuY3Rpb24odCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihhKXtzd2l0Y2goYS5sYWJlbCl7Y2FzZSAwOmZvcihyIGluIGU9W10sbj1bXSx0KXtpZihcImZsb2F0MzJcIiE9PShpPXRbcl0pLmR0eXBlJiZcImludDMyXCIhPT1pLmR0eXBlJiZcImJvb2xcIiE9PWkuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZHR5cGUgaW4gd2VpZ2h0ICdcIityK1wiJzogXCIraS5kdHlwZSk7ZS5wdXNoKHtuYW1lOnIsc2hhcGU6aS5zaGFwZSxkdHlwZTppLmR0eXBlfSksbi5wdXNoKGkuZGF0YSgpKX1yZXR1cm5bNCxQcm9taXNlLmFsbChuKV07Y2FzZSAxOnJldHVyblsyLHtkYXRhOk9jKGEuc2VudCgpKSxzcGVjczplfV19fSl9KX0sZnJvbU1lbW9yeTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBwbCh0LGUsbil9LGdldExvYWRIYW5kbGVyczp2bCxnZXRNb2RlbEFydGlmYWN0c0luZm9Gb3JKU09OOlRjLGdldFNhdmVIYW5kbGVyczp5bCxpc0hUVFBTY2hlbWU6bGwsbG9hZFdlaWdodHM6ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHZvaWQgMD09PWUmJihlPVwiXCIpLGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGwodGhpcyxmdW5jdGlvbihpKXtyZXR1cm5bMix1bChmdW5jdGlvbih0KXtyZXR1cm4gc2wodCxyKX0pKHQsZSxuKV19KX0pfSxyZWdpc3RlckxvYWRSb3V0ZXI6Z2wscmVnaXN0ZXJTYXZlUm91dGVyOm1sLHdlaWdodHNMb2FkZXJGYWN0b3J5OnVsLHdpdGhTYXZlSGFuZGxlcjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGRsKHQpfSxjb3B5TW9kZWw6ZnVuY3Rpb24odCxlKXtyZXR1cm4gYyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gbCh0aGlzLGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsQmModCxlLCExKV07Y2FzZSAxOnJldHVyblsyLG4uc2VudCgpXX19KX0pfSxsaXN0TW9kZWxzOmZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQsZSxuLHIsaSxhLG87cmV0dXJuIGwodGhpcyxmdW5jdGlvbihzKXtzd2l0Y2gocy5sYWJlbCl7Y2FzZSAwOnQ9TWMuZ2V0U2NoZW1lcygpLGU9e30sbj0wLHI9dCxzLmxhYmVsPTE7Y2FzZSAxOnJldHVybiBuPHIubGVuZ3RoPyhpPXJbbl0sWzQsTWMuZ2V0TWFuYWdlcihpKS5saXN0TW9kZWxzKCldKTpbMyw0XTtjYXNlIDI6Zm9yKG8gaW4gYT1zLnNlbnQoKSllW2krRGMrb109YVtvXTtzLmxhYmVsPTM7Y2FzZSAzOnJldHVybiBuKyssWzMsMV07Y2FzZSA0OnJldHVyblsyLGVdfX0pfSl9LG1vdmVNb2RlbDpmdW5jdGlvbih0LGUpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBsKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxCYyh0LGUsITApXTtjYXNlIDE6cmV0dXJuWzIsbi5zZW50KCldfX0pfSl9LHJlbW92ZU1vZGVsOmZ1bmN0aW9uKHQpe3JldHVybiBjKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBsKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1qYyh0KSxbNCxNYy5nZXRNYW5hZ2VyKGUuc2NoZW1lKS5yZW1vdmVNb2RlbChlLnBhdGgpXTtjYXNlIDE6cmV0dXJuWzIsbi5zZW50KCldfX0pfSl9fSk7dmFyIHdsPUFlKHtjb25mdXNpb25NYXRyaXhfOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1PZSh0LFwibGFiZWxzXCIsXCJjb25mdXNpb25NYXRyaXhcIiksaT1PZShlLFwicHJlZGljdGlvbnNcIixcImNvbmZ1c2lvbk1hdHJpeFwiKTtiKG51bGw9PW58fG4+MCYmTnVtYmVyLmlzSW50ZWdlcihuKSxcIklmIHByb3ZpZGVkLCBudW1DbGFzc2VzIG11c3QgYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLCBidXQgZ290IFwiK24pLGIoMT09PXIucmFuayxcIkV4cGVjdGVkIHRoZSByYW5rIG9mIGxhYmVscyB0byBiZSAxLCBidXQgZ290IFwiK3IucmFuayksYigxPT09aS5yYW5rLFwiRXhwZWN0ZWQgdGhlIHJhbmsgb2YgcHJlZGljdGlvbnMgdG8gYmUgMSwgYnV0IGdvdCBcIitpLnJhbmspLGIoci5zaGFwZVswXT09PWkuc2hhcGVbMF0sXCJNaXNtYXRjaCBpbiB0aGUgbnVtYmVyIG9mIGV4YW1wbGVzOiBcIityLnNoYXBlWzBdK1wiIHZzLiBcIitpLnNoYXBlWzBdK1wiLiBMYWJlbHMgYW5kIHByZWRpY3Rpb25zIHNob3VsZCBoYXZlIHRoZSBzYW1lIG51bWJlciBvZiBlbGVtZW50cy5cIiksYihuPjAmJk51bWJlci5pc0ludGVnZXIobiksXCJudW1DbGFzc2VzIGlzIHJlcXVpcmVkIHRvIGJlIGEgcG9zaXRpdmUgaW50ZWdlciwgYnV0IGdvdCBcIituKTt2YXIgYT1xYShyLmFzVHlwZShcImludDMyXCIpLG4pLG89cWEoaS5hc1R5cGUoXCJpbnQzMlwiKSxuKTtyZXR1cm4gYS50cmFuc3Bvc2UoKS5tYXRNdWwobykuYXNUeXBlKFwiaW50MzJcIil9fSksX2w9T2JqZWN0LmZyZWV6ZSh7Y29uZnVzaW9uTWF0cml4OndsfSkseGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5nZXRDbGFzc05hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5jbGFzc05hbWV9LHQuZnJvbUNvbmZpZz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgdChlKX0sdH0oKSxFbD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLmNsYXNzTmFtZU1hcD17fX1yZXR1cm4gdC5nZXRNYXA9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09dC5pbnN0YW5jZSYmKHQuaW5zdGFuY2U9bmV3IHQpLHQuaW5zdGFuY2V9LHQucmVnaXN0ZXI9ZnVuY3Rpb24oZSl7dC5nZXRNYXAoKS5jbGFzc05hbWVNYXBbZS5jbGFzc05hbWVdPVtlLGUuZnJvbUNvbmZpZ119LHR9KCk7ZnVuY3Rpb24gU2wodCl7YihudWxsIT10LmNsYXNzTmFtZSxcIkNsYXNzIGJlaW5nIHJlZ2lzdGVyZWQgZG9lcyBub3QgaGF2ZSB0aGUgc3RhdGljIGNsYXNzTmFtZSBwcm9wZXJ0eSBkZWZpbmVkLlwiKSxiKFwic3RyaW5nXCI9PXR5cGVvZiB0LmNsYXNzTmFtZSxcImNsYXNzTmFtZSBpcyByZXF1aXJlZCB0byBiZSBhIHN0cmluZywgYnV0IGdvdCB0eXBlIFwiK3R5cGVvZiB0LmNsYXNzTmFtZSksYih0LmNsYXNzTmFtZS5sZW5ndGg+MCxcIkNsYXNzIGJlaW5nIHJlZ2lzdGVyZWQgaGFzIGFuIGVtcHR5LXN0cmluZyBhcyBpdHMgY2xhc3NOYW1lLCB3aGljaCBpcyBkaXNhbGxvd2VkLlwiKSxFbC5yZWdpc3Rlcih0KX12YXIgTmw9T2JqZWN0LmZyZWV6ZSh7U2VyaWFsaXphYmxlOnhsLFNlcmlhbGl6YXRpb25NYXA6RWwscmVnaXN0ZXJDbGFzczpTbH0pO2Z1bmN0aW9uIElsKHQsZSxuKXtyZXR1cm4gbnVsbD09biYmKG49THQuZ2V0KFwiVEVTVF9FUFNJTE9OXCIpKSxPbCh0LGUsZnVuY3Rpb24odCxlKXtyZXR1cm4ga2wodCxOdW1iZXIoZSksbil9KX1mdW5jdGlvbiBPbCh0LGUsbil7aWYodCBpbnN0YW5jZW9mIGZ0fHxlIGluc3RhbmNlb2YgZnQpe2lmKHQgaW5zdGFuY2VvZiBmdCYmZSBpbnN0YW5jZW9mIGZ0KXtpZih0LmR0eXBlIT09ZS5kdHlwZSl0aHJvdyBuZXcgRXJyb3IoXCJBcnJheXMgYXJlIG9mIGRpZmZlcmVudCB0eXBlIGFjdHVhbDogXCIrdC5kdHlwZStcIiB2cyBleHBlY3RlZDogXCIrZS5kdHlwZStcIi5cIik7aWYoIVModC5zaGFwZSxlLnNoYXBlKSl0aHJvdyBuZXcgRXJyb3IoXCJBcnJheXMgYXJlIG9mIGRpZmZlcmVudCBzaGFwZSBhY3R1YWw6IFwiK3Quc2hhcGUrXCIgdnMgZXhwZWN0ZWQ6IFwiK2Uuc2hhcGUrXCIuXCIpfX1lbHNle3ZhciByPXQuY29uc3RydWN0b3IubmFtZSxpPWUuY29uc3RydWN0b3IubmFtZTtpZihyIT09aSl0aHJvdyBuZXcgRXJyb3IoXCJBcnJheXMgYXJlIG9mIGRpZmZlcmVudCB0eXBlIGFjdHVhbDogXCIrcitcIiB2cyBleHBlY3RlZDogXCIraSl9dmFyIGEsbztpZihhPXQgaW5zdGFuY2VvZiBmdD90LmRhdGFTeW5jKCk6dCxvPWUgaW5zdGFuY2VvZiBmdD9lLmRhdGFTeW5jKCk6ZSxhLmxlbmd0aCE9PW8ubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkFycmF5cyBoYXZlIGRpZmZlcmVudCBsZW5ndGhzIGFjdHVhbDogXCIrYS5sZW5ndGgrXCIgdnMgZXhwZWN0ZWQ6IFwiK28ubGVuZ3RoK1wiLlxcbkFjdHVhbDogICBcIithK1wiLlxcbkV4cGVjdGVkOiBcIitvK1wiLlwiKTtmb3IodmFyIHM9MDtzPG8ubGVuZ3RoOysrcyl7dmFyIHU9YVtzXSxjPW9bc107aWYoIW4odSxjKSl0aHJvdyBuZXcgRXJyb3IoXCJBcnJheXMgZGlmZmVyOiBhY3R1YWxbXCIrcytcIl0gPSBcIit1K1wiLCBleHBlY3RlZFtcIitzK1wiXSA9IFwiK2MrXCIuXFxuQWN0dWFsOiAgIFwiK2ErXCIuXFxuRXhwZWN0ZWQ6IFwiK28rXCIuXCIpfX1mdW5jdGlvbiBrbCh0LGUsbil7cmV0dXJuISghaXNOYU4odCl8fCFpc05hTihlKSl8fCEoaXNOYU4odCl8fGlzTmFOKGUpfHxNYXRoLmFicyh0LWUpPm4pfXZhciBBbD1PYmplY3QuZnJlZXplKHtXRUJHTF9FTlZTOntIQVNfV0VCR0w6ITB9LE5PREVfRU5WUzp7SVNfTk9ERTohMH0sQ0hST01FX0VOVlM6e0lTX0NIUk9NRTohMH0sQlJPV1NFUl9FTlZTOntJU19CUk9XU0VSOiEwfSxDUFVfRU5WUzp7SEFTX1dFQkdMOiExfSxBTExfRU5WUzp7fSxleHBlY3RBcnJheXNDbG9zZTpJbCxleHBlY3RQcm9taXNlVG9GYWlsOmZ1bmN0aW9uKHQsZSl7dCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZS5mYWlsKCl9LGZ1bmN0aW9uKCl7cmV0dXJuIGUoKX0pfSxleHBlY3RBcnJheXNFcXVhbDpmdW5jdGlvbih0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgZnQmJlwic3RyaW5nXCI9PT10LmR0eXBlfHxlIGluc3RhbmNlb2YgZnQmJlwic3RyaW5nXCI9PT1lLmR0eXBlfHx0IGluc3RhbmNlb2YgQXJyYXkmJlUodFswXSl8fGUgaW5zdGFuY2VvZiBBcnJheSYmVShlWzBdKT9PbCh0LGUsZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09ZX0pOklsKHQsZSwwKX0sZXhwZWN0TnVtYmVyc0Nsb3NlOmZ1bmN0aW9uKHQsZSxuKXtpZihudWxsPT1uJiYobj1MdC5nZXQoXCJURVNUX0VQU0lMT05cIikpLCFrbCh0LGUsbikpdGhyb3cgbmV3IEVycm9yKFwiTnVtYmVycyBkaWZmZXI6IGFjdHVhbCA9PT0gXCIrdCtcIiwgZXhwZWN0ZWQgPT09IFwiK2UpfSxleHBlY3RWYWx1ZXNJblJhbmdlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcjtyPXQgaW5zdGFuY2VvZiBmdD90LmRhdGFTeW5jKCk6dDtmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKylpZihyW2ldPGV8fHJbaV0+bil0aHJvdyBuZXcgRXJyb3IoXCJWYWx1ZSBvdXQgb2YgcmFuZ2U6XCIrcltpXStcIiBsb3c6IFwiK2UrXCIsIGhpZ2g6IFwiK24pfSxleHBlY3RBcnJheUJ1ZmZlcnNFcXVhbDpmdW5jdGlvbih0LGUpe2V4cGVjdChuZXcgRmxvYXQzMkFycmF5KHQpKS50b0VxdWFsKG5ldyBGbG9hdDMyQXJyYXkoZSkpfX0pLENsPVwiMC4xNC41XCIsUGw9T2JqZWN0LmZyZWV6ZSh7Z3BncHVfdXRpbDpOaSx3ZWJnbF91dGlsOnJpLE1hdGhCYWNrZW5kV2ViR0w6dW8sR1BHUFVDb250ZXh0OklpfSksVGw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5taW5pbWl6ZT1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09ZSYmKGU9ITEpO3ZhciByPXRoaXMuY29tcHV0ZUdyYWRpZW50cyh0LG4pLGk9ci52YWx1ZSxhPXIuZ3JhZHM7cmV0dXJuIHRoaXMuYXBwbHlHcmFkaWVudHMoYSksT2JqZWN0LmtleXMoYSkuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gYVt0XS5kaXNwb3NlKCl9KSxlP2k6KGkuZGlzcG9zZSgpLG51bGwpfSxlLnByb3RvdHlwZS5jb21wdXRlR3JhZGllbnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHF0KHQsZSl9LGV9KHhsKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoVGwsU3ltYm9sLmhhc0luc3RhbmNlLHt2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dC5taW5pbWl6ZSYmbnVsbCE9dC5jb21wdXRlR3JhZGllbnRzJiZudWxsIT10LmFwcGx5R3JhZGllbnRzfX0pO3ZhciBSbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbixyKXt2b2lkIDA9PT1yJiYocj1udWxsKTt2YXIgaT10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIGkubGVhcm5pbmdSYXRlPWUsaS5yaG89bixpLmVwc2lsb249cixpLmFjY3VtdWxhdGVkR3JhZHM9e30saS5hY2N1bXVsYXRlZFVwZGF0ZXM9e30saS5jPUd0KGplKC1lKSksaS5yaG9TY2FsYXI9R3QoamUobikpLGkub25lTWludXNSaG89R3QoamUoMS1uKSksbnVsbD09PXImJihyPUx0LmdldChcIkVQU0lMT05cIikpLGkuZXBzaWxvblNjYWxhcj1HdChqZShyKSksaX1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLmFwcGx5R3JhZGllbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1mdW5jdGlvbihuKXt2YXIgaT1MdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tuXTtudWxsPT1yLmFjY3VtdWxhdGVkR3JhZHNbbl0mJkt0KGZ1bmN0aW9uKCl7ZS5hY2N1bXVsYXRlZEdyYWRzW25dPVhlKGkpLnZhcmlhYmxlKCExKX0pLG51bGw9PXIuYWNjdW11bGF0ZWRVcGRhdGVzW25dJiZLdChmdW5jdGlvbigpe2UuYWNjdW11bGF0ZWRVcGRhdGVzW25dPVhlKGkpLnZhcmlhYmxlKCExKX0pO3ZhciBhPXRbbl0sbz1yLmFjY3VtdWxhdGVkR3JhZHNbbl0scz1yLmFjY3VtdWxhdGVkVXBkYXRlc1tuXTtLdChmdW5jdGlvbigpe3ZhciB0PWUucmhvU2NhbGFyLm11bChvKS5hZGQoZS5vbmVNaW51c1Joby5tdWwoYS5zcXVhcmUoKSkpLHI9cy5hZGQoZS5lcHNpbG9uU2NhbGFyKS5zcXJ0KCkuZGl2KG8uYWRkKGUuZXBzaWxvblNjYWxhcikuc3FydCgpKS5tdWwoYSksdT1lLnJob1NjYWxhci5tdWwocykuYWRkKGUub25lTWludXNSaG8ubXVsKHIuc3F1YXJlKCkpKTtlLmFjY3VtdWxhdGVkR3JhZHNbbl0uYXNzaWduKHQpLGUuYWNjdW11bGF0ZWRVcGRhdGVzW25dLmFzc2lnbih1KTt2YXIgYz1lLmMubXVsKHIpLmFkZChpKTtpLmFzc2lnbihjKX0pfSxyPXRoaXM7Zm9yKHZhciBpIGluIHQpbihpKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5jLmRpc3Bvc2UoKSx0aGlzLmVwc2lsb25TY2FsYXIuZGlzcG9zZSgpLHRoaXMucmhvU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLm9uZU1pbnVzUmhvLmRpc3Bvc2UoKSxudWxsIT10aGlzLmFjY3VtdWxhdGVkVXBkYXRlcyYmKE9iamVjdC5rZXlzKHRoaXMuYWNjdW11bGF0ZWRVcGRhdGVzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFjY3VtdWxhdGVkVXBkYXRlc1tlXS5kaXNwb3NlKCl9KSxPYmplY3Qua2V5cyh0aGlzLmFjY3VtdWxhdGVkR3JhZHMpLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWNjdW11bGF0ZWRHcmFkc1tlXS5kaXNwb3NlKCl9KSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybntsZWFybmluZ1JhdGU6dGhpcy5sZWFybmluZ1JhdGUscmhvOnRoaXMucmhvLGVwc2lsb246dGhpcy5lcHNpbG9ufX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB0KGUubGVhcm5pbmdSYXRlLGUucmhvLGUuZXBzaWxvbil9LGUuY2xhc3NOYW1lPVwiQWRhZGVsdGFPcHRpbWl6ZXJcIixlfShUbCk7U2woUmwpO3ZhciBEbD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dm9pZCAwPT09biYmKG49LjEpO3ZhciByPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gci5sZWFybmluZ1JhdGU9ZSxyLmluaXRpYWxBY2N1bXVsYXRvclZhbHVlPW4sci5hY2N1bXVsYXRlZEdyYWRzPXt9LHIuYz1HdChqZSgtZSkpLHIuZXBzaWxvbj1HdChqZShMdC5nZXQoXCJFUFNJTE9OXCIpKSkscn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLmFwcGx5R3JhZGllbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1mdW5jdGlvbihuKXt2YXIgaT1MdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tuXTtudWxsPT1yLmFjY3VtdWxhdGVkR3JhZHNbbl0mJkt0KGZ1bmN0aW9uKCl7ZS5hY2N1bXVsYXRlZEdyYWRzW25dPSRlKGkuc2hhcGUsZS5pbml0aWFsQWNjdW11bGF0b3JWYWx1ZSkudmFyaWFibGUoITEpfSk7dmFyIGE9dFtuXSxvPXIuYWNjdW11bGF0ZWRHcmFkc1tuXTtLdChmdW5jdGlvbigpe3ZhciB0PW8uYWRkKGEuc3F1YXJlKCkpO2UuYWNjdW11bGF0ZWRHcmFkc1tuXS5hc3NpZ24odCk7dmFyIHI9ZS5jLm11bChhLmRpdih0LmFkZChlLmVwc2lsb24pLnNxcnQoKSkpLmFkZChpKTtpLmFzc2lnbihyKX0pfSxyPXRoaXM7Zm9yKHZhciBpIGluIHQpbihpKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5lcHNpbG9uLmRpc3Bvc2UoKSx0aGlzLmMuZGlzcG9zZSgpLG51bGwhPXRoaXMuYWNjdW11bGF0ZWRHcmFkcyYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZEdyYWRzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFjY3VtdWxhdGVkR3JhZHNbZV0uZGlzcG9zZSgpfSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybntsZWFybmluZ1JhdGU6dGhpcy5sZWFybmluZ1JhdGUsaW5pdGlhbEFjY3VtdWxhdG9yVmFsdWU6dGhpcy5pbml0aWFsQWNjdW11bGF0b3JWYWx1ZX19LGUuZnJvbUNvbmZpZz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgdChlLmxlYXJuaW5nUmF0ZSxlLmluaXRpYWxBY2N1bXVsYXRvclZhbHVlKX0sZS5jbGFzc05hbWU9XCJBZGFncmFkT3B0aW1pemVyXCIsZX0oVGwpO1NsKERsKTt2YXIgTWw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4scixpKXt2b2lkIDA9PT1pJiYoaT1udWxsKTt2YXIgYT10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIGEubGVhcm5pbmdSYXRlPWUsYS5iZXRhMT1uLGEuYmV0YTI9cixhLmVwc2lsb249aSxhLmFjY3VtdWxhdGVkRmlyc3RNb21lbnQ9e30sYS5hY2N1bXVsYXRlZFNlY29uZE1vbWVudD17fSxhLmM9R3QoamUoLWUpKSxhLmJldGExU2NhbGFyPUd0KGplKG4pKSxhLmJldGEyU2NhbGFyPUd0KGplKHIpKSxLdChmdW5jdGlvbigpe2EuYWNjQmV0YTE9amUobikudmFyaWFibGUoKSxhLmFjY0JldGEyPWplKHIpLnZhcmlhYmxlKCl9KSxhLm9uZU1pbnVzQmV0YTE9R3QoamUoMS1uKSksYS5vbmVNaW51c0JldGEyPUd0KGplKDEtcikpLGEub25lPUd0KGplKDEpKSxudWxsPT09aSYmKGk9THQuZ2V0KFwiRVBTSUxPTlwiKSksYS5lcHNTY2FsYXI9R3QoamUoaSkpLGF9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5hcHBseUdyYWRpZW50cz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO0t0KGZ1bmN0aW9uKCl7dmFyIG49ZS5vbmUuc3ViKGUuYWNjQmV0YTEpLHI9ZS5vbmUuc3ViKGUuYWNjQmV0YTIpO2Zvcih2YXIgaSBpbiB0KXt2YXIgYT1MdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tpXTtpZihudWxsPT1lLmFjY3VtdWxhdGVkRmlyc3RNb21lbnRbaV0pe3ZhciBvPSExO2UuYWNjdW11bGF0ZWRGaXJzdE1vbWVudFtpXT1YZShhKS52YXJpYWJsZShvKX1udWxsPT1lLmFjY3VtdWxhdGVkU2Vjb25kTW9tZW50W2ldJiYobz0hMSxlLmFjY3VtdWxhdGVkU2Vjb25kTW9tZW50W2ldPVhlKGEpLnZhcmlhYmxlKG8pKTt2YXIgcz10W2ldLHU9ZS5hY2N1bXVsYXRlZEZpcnN0TW9tZW50W2ldLGM9ZS5hY2N1bXVsYXRlZFNlY29uZE1vbWVudFtpXSxsPWUuYmV0YTFTY2FsYXIubXVsKHUpLmFkZChlLm9uZU1pbnVzQmV0YTEubXVsKHMpKSxmPWUuYmV0YTJTY2FsYXIubXVsKGMpLmFkZChlLm9uZU1pbnVzQmV0YTIubXVsKHMuc3F1YXJlKCkpKSxoPWwuZGl2KG4pLHA9Zi5kaXYocik7ZS5hY2N1bXVsYXRlZEZpcnN0TW9tZW50W2ldLmFzc2lnbihsKSxlLmFjY3VtdWxhdGVkU2Vjb25kTW9tZW50W2ldLmFzc2lnbihmKTt2YXIgZD1lLmMubXVsKGguZGl2KGUuZXBzU2NhbGFyLmFkZChwLnNxcnQoKSkpKS5hZGQoYSk7YS5hc3NpZ24oZCl9ZS5hY2NCZXRhMS5hc3NpZ24oZS5hY2NCZXRhMS5tdWwoZS5iZXRhMVNjYWxhcikpLGUuYWNjQmV0YTIuYXNzaWduKGUuYWNjQmV0YTIubXVsKGUuYmV0YTJTY2FsYXIpKX0pfSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmMuZGlzcG9zZSgpLHRoaXMuZXBzU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmJldGExU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmJldGEyU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmFjY0JldGExLmRpc3Bvc2UoKSx0aGlzLmFjY0JldGEyLmRpc3Bvc2UoKSx0aGlzLm9uZU1pbnVzQmV0YTEuZGlzcG9zZSgpLHRoaXMub25lTWludXNCZXRhMi5kaXNwb3NlKCksdGhpcy5vbmUuZGlzcG9zZSgpLG51bGwhPXRoaXMuYWNjdW11bGF0ZWRGaXJzdE1vbWVudCYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZEZpcnN0TW9tZW50KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFjY3VtdWxhdGVkRmlyc3RNb21lbnRbZV0uZGlzcG9zZSgpfSksbnVsbCE9dGhpcy5hY2N1bXVsYXRlZFNlY29uZE1vbWVudCYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZFNlY29uZE1vbWVudCkuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5hY2N1bXVsYXRlZFNlY29uZE1vbWVudFtlXS5kaXNwb3NlKCl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue2xlYXJuaW5nUmF0ZTp0aGlzLmxlYXJuaW5nUmF0ZSxiZXRhMTp0aGlzLmJldGExLGJldGEyOnRoaXMuYmV0YTIsZXBzaWxvbjp0aGlzLmVwc2lsb259fSxlLmZyb21Db25maWc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHQoZS5sZWFybmluZ1JhdGUsZS5iZXRhMSxlLmJldGEyLGUuZXBzaWxvbil9LGUuY2xhc3NOYW1lPVwiQWRhbU9wdGltaXplclwiLGV9KFRsKTtTbChNbCk7dmFyIGpsPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuLHIsaSxhKXt2b2lkIDA9PT1pJiYoaT1udWxsKSx2b2lkIDA9PT1hJiYoYT0wKTt2YXIgbz10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG8ubGVhcm5pbmdSYXRlPWUsby5iZXRhMT1uLG8uYmV0YTI9cixvLmVwc2lsb249aSxvLmRlY2F5PWEsby5hY2N1bXVsYXRlZEZpcnN0TW9tZW50PXt9LG8uYWNjdW11bGF0ZWRXZWlnaHRlZEluZk5vcm09e30sby5jPUd0KGplKC1lKSksby5iZXRhMVNjYWxhcj1HdChqZShuKSksby5iZXRhMlNjYWxhcj1HdChqZShyKSksby5kZWNheVNjYWxhcj1HdChqZShhKSksS3QoZnVuY3Rpb24oKXtvLml0ZXJhdGlvbj1qZSgwKS52YXJpYWJsZSgpLG8uYWNjQmV0YTE9amUobikudmFyaWFibGUoKX0pLG8ub25lTWludXNCZXRhMT1HdChqZSgxLW4pKSxvLm9uZT1HdChqZSgxKSksbnVsbD09PWkmJihpPUx0LmdldChcIkVQU0lMT05cIikpLG8uZXBzU2NhbGFyPUd0KGplKGkpKSxvfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuYXBwbHlHcmFkaWVudHM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztLdChmdW5jdGlvbigpe3ZhciBuPWUub25lLnN1YihlLmFjY0JldGExKSxyPWUuYy5kaXYoZS5vbmUuYWRkKGUuZGVjYXlTY2FsYXIubXVsKGUuaXRlcmF0aW9uKSkpO2Zvcih2YXIgaSBpbiB0KXt2YXIgYT1MdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tpXTtpZihudWxsPT1lLmFjY3VtdWxhdGVkRmlyc3RNb21lbnRbaV0pe3ZhciBvPSExO2UuYWNjdW11bGF0ZWRGaXJzdE1vbWVudFtpXT1YZShhKS52YXJpYWJsZShvKX1udWxsPT1lLmFjY3VtdWxhdGVkV2VpZ2h0ZWRJbmZOb3JtW2ldJiYobz0hMSxlLmFjY3VtdWxhdGVkV2VpZ2h0ZWRJbmZOb3JtW2ldPVhlKGEpLnZhcmlhYmxlKG8pKTt2YXIgcz10W2ldLHU9ZS5hY2N1bXVsYXRlZEZpcnN0TW9tZW50W2ldLGM9ZS5hY2N1bXVsYXRlZFdlaWdodGVkSW5mTm9ybVtpXSxsPWUuYmV0YTFTY2FsYXIubXVsKHUpLmFkZChlLm9uZU1pbnVzQmV0YTEubXVsKHMpKSxmPWUuYmV0YTJTY2FsYXIubXVsKGMpLGg9cy5hYnMoKSxwPWYubWF4aW11bShoKTtlLmFjY3VtdWxhdGVkRmlyc3RNb21lbnRbaV0uYXNzaWduKGwpLGUuYWNjdW11bGF0ZWRXZWlnaHRlZEluZk5vcm1baV0uYXNzaWduKHApO3ZhciBkPXIuZGl2KG4pLm11bChsLmRpdihlLmVwc1NjYWxhci5hZGQocCkpKS5hZGQoYSk7YS5hc3NpZ24oZCl9ZS5pdGVyYXRpb24uYXNzaWduKGUuaXRlcmF0aW9uLmFkZChlLm9uZSkpLGUuYWNjQmV0YTEuYXNzaWduKGUuYWNjQmV0YTEubXVsKGUuYmV0YTFTY2FsYXIpKX0pfSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmMuZGlzcG9zZSgpLHRoaXMuZXBzU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmFjY0JldGExLmRpc3Bvc2UoKSx0aGlzLmJldGExU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmJldGEyU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLm9uZU1pbnVzQmV0YTEuZGlzcG9zZSgpLHRoaXMuZGVjYXlTY2FsYXIuZGlzcG9zZSgpLHRoaXMuaXRlcmF0aW9uLmRpc3Bvc2UoKSx0aGlzLm9uZS5kaXNwb3NlKCksbnVsbCE9dGhpcy5hY2N1bXVsYXRlZEZpcnN0TW9tZW50JiZPYmplY3Qua2V5cyh0aGlzLmFjY3VtdWxhdGVkRmlyc3RNb21lbnQpLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWNjdW11bGF0ZWRGaXJzdE1vbWVudFtlXS5kaXNwb3NlKCl9KSxudWxsIT10aGlzLmFjY3VtdWxhdGVkV2VpZ2h0ZWRJbmZOb3JtJiZPYmplY3Qua2V5cyh0aGlzLmFjY3VtdWxhdGVkV2VpZ2h0ZWRJbmZOb3JtKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFjY3VtdWxhdGVkV2VpZ2h0ZWRJbmZOb3JtW2VdLmRpc3Bvc2UoKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57bGVhcm5pbmdSYXRlOnRoaXMubGVhcm5pbmdSYXRlLGJldGExOnRoaXMuYmV0YTEsYmV0YTI6dGhpcy5iZXRhMixlcHNpbG9uOnRoaXMuZXBzaWxvbixkZWNheTp0aGlzLmRlY2F5fX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB0KGUubGVhcm5pbmdSYXRlLGUuYmV0YTEsZS5iZXRhMixlLmVwc2lsb24sZS5kZWNheSl9LGUuY2xhc3NOYW1lPVwiQWRhbWF4T3B0aW1pemVyXCIsZX0oVGwpO1NsKGpsKTt2YXIgQmw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4ubGVhcm5pbmdSYXRlPWUsbi5zZXRMZWFybmluZ1JhdGUoZSksbn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLmFwcGx5R3JhZGllbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgcj10W25dLGk9THQuZW5naW5lLnJlZ2lzdGVyZWRWYXJpYWJsZXNbbl07S3QoZnVuY3Rpb24oKXt2YXIgdD1lLmMubXVsKHIpLmFkZChpKTtpLmFzc2lnbih0KX0pfSl9LGUucHJvdG90eXBlLnNldExlYXJuaW5nUmF0ZT1mdW5jdGlvbih0KXt0aGlzLmxlYXJuaW5nUmF0ZT10LG51bGwhPXRoaXMuYyYmdGhpcy5jLmRpc3Bvc2UoKSx0aGlzLmM9R3QoamUoLXQpKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuYy5kaXNwb3NlKCl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybntsZWFybmluZ1JhdGU6dGhpcy5sZWFybmluZ1JhdGV9fSxlLmZyb21Db25maWc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHQoZS5sZWFybmluZ1JhdGUpfSxlLmNsYXNzTmFtZT1cIlNHRE9wdGltaXplclwiLGV9KFRsKTtTbChCbCk7dmFyIExsPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuLHIpe3ZvaWQgMD09PXImJihyPSExKTt2YXIgaT10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gaS5sZWFybmluZ1JhdGU9ZSxpLm1vbWVudHVtPW4saS51c2VOZXN0ZXJvdj1yLGkubT1qZShpLm1vbWVudHVtKSxpLmFjY3VtdWxhdGlvbnM9e30saX1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLmFwcGx5R3JhZGllbnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1mdW5jdGlvbihuKXt2YXIgaT1MdC5lbmdpbmUucmVnaXN0ZXJlZFZhcmlhYmxlc1tuXTtudWxsPT1yLmFjY3VtdWxhdGlvbnNbbl0mJkt0KGZ1bmN0aW9uKCl7ZS5hY2N1bXVsYXRpb25zW25dPVhlKGkpLnZhcmlhYmxlKCExKX0pO3ZhciBhPXIuYWNjdW11bGF0aW9uc1tuXSxvPXRbbl07S3QoZnVuY3Rpb24oKXt2YXIgdCxyPWUubS5tdWwoYSkuYWRkKG8pO3Q9ZS51c2VOZXN0ZXJvdj9lLmMubXVsKG8uYWRkKHIubXVsKGUubSkpKS5hZGQoaSk6ZS5jLm11bChyKS5hZGQoaSksZS5hY2N1bXVsYXRpb25zW25dLmFzc2lnbihyKSxpLmFzc2lnbih0KX0pfSxyPXRoaXM7Zm9yKHZhciBpIGluIHQpbihpKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2lmKHQucHJvdG90eXBlLmRpc3Bvc2UuY2FsbCh0aGlzKSx0aGlzLm0uZGlzcG9zZSgpLG51bGwhPXRoaXMuYWNjdW11bGF0aW9ucylmb3IodmFyIGUgaW4gdGhpcy5hY2N1bXVsYXRpb25zKXRoaXMuYWNjdW11bGF0aW9uc1tlXS5kaXNwb3NlKCl9LGUucHJvdG90eXBlLnNldE1vbWVudHVtPWZ1bmN0aW9uKHQpe3RoaXMubW9tZW50dW09dH0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue2xlYXJuaW5nUmF0ZTp0aGlzLmxlYXJuaW5nUmF0ZSxtb21lbnR1bTp0aGlzLm1vbWVudHVtLHVzZU5lc3Rlcm92OnRoaXMudXNlTmVzdGVyb3Z9fSxlLmZyb21Db25maWc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHQoZS5sZWFybmluZ1JhdGUsZS5tb21lbnR1bSxlLnVzZU5lc3Rlcm92KX0sZS5jbGFzc05hbWU9XCJNb21lbnR1bU9wdGltaXplclwiLGV9KEJsKTtTbChMbCk7dmFyIHpsPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuLHIsaSxhKXt2b2lkIDA9PT1uJiYobj0uOSksdm9pZCAwPT09ciYmKHI9MCksdm9pZCAwPT09aSYmKGk9bnVsbCksdm9pZCAwPT09YSYmKGE9ITEpO3ZhciBvPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gby5sZWFybmluZ1JhdGU9ZSxvLmRlY2F5PW4sby5tb21lbnR1bT1yLG8uZXBzaWxvbj1pLG8uYWNjdW11bGF0ZWRNZWFuU3F1YXJlcz17fSxvLmFjY3VtdWxhdGVkTWVhbkdyYWRzPXt9LG8uYWNjdW11bGF0ZWRNb21lbnRzPXt9LG8uYz1HdChqZShlKSksby5kZWNheVNjYWxhcj1HdChqZShuKSksby5tb21lbnR1bVNjYWxhcj1HdChqZShyKSksby5vbmVNaW51c0RlY2F5PUd0KGplKDEtbikpLG8uY2VudGVyZWQ9YSxudWxsPT09aSYmKGk9THQuZ2V0KFwiRVBTSUxPTlwiKSksby5lcHNpbG9uU2NhbGFyPUd0KGplKGkpKSxvfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuYXBwbHlHcmFkaWVudHM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWZ1bmN0aW9uKG4pe3ZhciBpPUx0LmVuZ2luZS5yZWdpc3RlcmVkVmFyaWFibGVzW25dO251bGw9PXIuYWNjdW11bGF0ZWRNZWFuU3F1YXJlc1tuXSYmS3QoZnVuY3Rpb24oKXtlLmFjY3VtdWxhdGVkTWVhblNxdWFyZXNbbl09WGUoaSkudmFyaWFibGUoITEpfSksbnVsbD09ci5hY2N1bXVsYXRlZE1lYW5HcmFkc1tuXSYmci5jZW50ZXJlZCYmS3QoZnVuY3Rpb24oKXtlLmFjY3VtdWxhdGVkTWVhbkdyYWRzW25dPVhlKGkpLnZhcmlhYmxlKCExKX0pLG51bGw9PXIuYWNjdW11bGF0ZWRNb21lbnRzW25dJiZLdChmdW5jdGlvbigpe2UuYWNjdW11bGF0ZWRNb21lbnRzW25dPVhlKGkpLnZhcmlhYmxlKCExKX0pO3ZhciBhPXIuYWNjdW11bGF0ZWRNZWFuU3F1YXJlc1tuXSxvPXIuYWNjdW11bGF0ZWRNZWFuR3JhZHNbbl0scz1yLmFjY3VtdWxhdGVkTW9tZW50c1tuXSx1PXRbbl07S3QoZnVuY3Rpb24oKXt2YXIgdD1lLmRlY2F5U2NhbGFyLm11bChhKS5hZGQoZS5vbmVNaW51c0RlY2F5Lm11bCh1LnNxdWFyZSgpKSk7aWYoZS5jZW50ZXJlZCl7dmFyIHI9ZS5kZWNheVNjYWxhci5tdWwobykuYWRkKGUub25lTWludXNEZWNheS5tdWwodSkpLGM9ZS5tb21lbnR1bVNjYWxhci5tdWwocykuYWRkKGUuYy5tdWwodSkuZGl2KHQuc3ViKHIuc3F1YXJlKCkuYWRkKGUuZXBzaWxvblNjYWxhcikpLnNxcnQoKSkpO2UuYWNjdW11bGF0ZWRNZWFuU3F1YXJlc1tuXS5hc3NpZ24odCksZS5hY2N1bXVsYXRlZE1lYW5HcmFkc1tuXS5hc3NpZ24ociksZS5hY2N1bXVsYXRlZE1vbWVudHNbbl0uYXNzaWduKGMpO3ZhciBsPWkuc3ViKGMpO2kuYXNzaWduKGwpfWVsc2V7dmFyIGY9ZS5kZWNheVNjYWxhci5tdWwoYSkuYWRkKGUub25lTWludXNEZWNheS5tdWwodS5zcXVhcmUoKSkpO2M9ZS5tb21lbnR1bVNjYWxhci5tdWwocykuYWRkKGUuYy5tdWwodSkuZGl2KGYuYWRkKGUuZXBzaWxvblNjYWxhcikuc3FydCgpKSksZS5hY2N1bXVsYXRlZE1lYW5TcXVhcmVzW25dLmFzc2lnbihmKSxlLmFjY3VtdWxhdGVkTW9tZW50c1tuXS5hc3NpZ24oYyksbD1pLnN1YihjKSxpLmFzc2lnbihsKX19KX0scj10aGlzO2Zvcih2YXIgaSBpbiB0KW4oaSl9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYy5kaXNwb3NlKCksdGhpcy5lcHNpbG9uU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLmRlY2F5U2NhbGFyLmRpc3Bvc2UoKSx0aGlzLm1vbWVudHVtU2NhbGFyLmRpc3Bvc2UoKSx0aGlzLm9uZU1pbnVzRGVjYXkuZGlzcG9zZSgpLG51bGwhPXRoaXMuYWNjdW11bGF0ZWRNZWFuU3F1YXJlcyYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZE1lYW5TcXVhcmVzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFjY3VtdWxhdGVkTWVhblNxdWFyZXNbZV0uZGlzcG9zZSgpfSksbnVsbCE9dGhpcy5hY2N1bXVsYXRlZE1lYW5HcmFkcyYmdGhpcy5jZW50ZXJlZCYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZE1lYW5HcmFkcykuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5hY2N1bXVsYXRlZE1lYW5HcmFkc1tlXS5kaXNwb3NlKCl9KSxudWxsIT10aGlzLmFjY3VtdWxhdGVkTW9tZW50cyYmT2JqZWN0LmtleXModGhpcy5hY2N1bXVsYXRlZE1vbWVudHMpLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuYWNjdW11bGF0ZWRNb21lbnRzW2VdLmRpc3Bvc2UoKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57bGVhcm5pbmdSYXRlOnRoaXMubGVhcm5pbmdSYXRlLGRlY2F5OnRoaXMuZGVjYXksbW9tZW50dW06dGhpcy5tb21lbnR1bSxlcHNpbG9uOnRoaXMuZXBzaWxvbixjZW50ZXJlZDp0aGlzLmNlbnRlcmVkfX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB0KGUubGVhcm5pbmdSYXRlLGUuZGVjYXksZS5tb21lbnR1bSxlLmVwc2lsb24sZS5jZW50ZXJlZCl9LGUuY2xhc3NOYW1lPVwiUk1TUHJvcE9wdGltaXplclwiLGV9KFRsKTtTbCh6bCk7dmFyIEZsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gdC5zZ2Q9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBCbCh0KX0sdC5tb21lbnR1bT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSExKSxuZXcgTGwodCxlLG4pfSx0LnJtc3Byb3A9ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9LjkpLHZvaWQgMD09PW4mJihuPTApLHZvaWQgMD09PXImJihyPW51bGwpLHZvaWQgMD09PWkmJihpPSExKSxuZXcgemwodCxlLG4scixpKX0sdC5hZGFtPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB2b2lkIDA9PT10JiYodD0uMDAxKSx2b2lkIDA9PT1lJiYoZT0uOSksdm9pZCAwPT09biYmKG49Ljk5OSksdm9pZCAwPT09ciYmKHI9bnVsbCksbmV3IE1sKHQsZSxuLHIpfSx0LmFkYWRlbHRhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9LjAwMSksdm9pZCAwPT09ZSYmKGU9Ljk1KSx2b2lkIDA9PT1uJiYobj1udWxsKSxuZXcgUmwodCxlLG4pfSx0LmFkYW1heD1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB2b2lkIDA9PT10JiYodD0uMDAyKSx2b2lkIDA9PT1lJiYoZT0uOSksdm9pZCAwPT09biYmKG49Ljk5OSksdm9pZCAwPT09ciYmKHI9bnVsbCksdm9pZCAwPT09aSYmKGk9MCksbmV3IGpsKHQsZSxuLHIsaSl9LHQuYWRhZ3JhZD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0uMSksbmV3IERsKHQsZSl9LHR9KCksVWw9e3NnZDpGbC5zZ2QsbW9tZW50dW06RmwubW9tZW50dW0sYWRhZGVsdGE6RmwuYWRhZGVsdGEsYWRhZ3JhZDpGbC5hZGFncmFkLHJtc3Byb3A6Rmwucm1zcHJvcCxhZGFtYXg6RmwuYWRhbWF4LGFkYW06RmwuYWRhbX0sVmw9anQuc2V0QmFja2VuZCxXbD1qdC5nZXRCYWNrZW5kLHFsPWp0LmRpc3Bvc2VWYXJpYWJsZXMsJGw9anQubWVtb3J5OyFmdW5jdGlvbih0KXtjdD10fShfYyl9KS5jYWxsKHRoaXMsbigxNCksbigxMSksbig4Mykuc2V0SW1tZWRpYXRlLG4oNCkuQnVmZmVyKX0sLGZ1bmN0aW9uKHQsZSl7XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmNyZWF0ZT90LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt0LnN1cGVyXz1lLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pfTp0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt0LnN1cGVyXz1lO3ZhciBuPWZ1bmN0aW9uKCl7fTtuLnByb3RvdHlwZT1lLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgbix0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10fX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oNCksaT1yLkJ1ZmZlcjtmdW5jdGlvbiBhKHQsZSl7Zm9yKHZhciBuIGluIHQpZVtuXT10W25dfWZ1bmN0aW9uIG8odCxlLG4pe3JldHVybiBpKHQsZSxuKX1pLmZyb20mJmkuYWxsb2MmJmkuYWxsb2NVbnNhZmUmJmkuYWxsb2NVbnNhZmVTbG93P3QuZXhwb3J0cz1yOihhKHIsZSksZS5CdWZmZXI9byksYShpLG8pLG8uZnJvbT1mdW5jdGlvbih0LGUsbil7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyXCIpO3JldHVybiBpKHQsZSxuKX0sby5hbGxvYz1mdW5jdGlvbih0LGUsbil7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7dmFyIHI9aSh0KTtyZXR1cm4gdm9pZCAwIT09ZT9cInN0cmluZ1wiPT10eXBlb2Ygbj9yLmZpbGwoZSxuKTpyLmZpbGwoZSk6ci5maWxsKDApLHJ9LG8uYWxsb2NVbnNhZmU9ZnVuY3Rpb24odCl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7cmV0dXJuIGkodCl9LG8uYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHQpe2lmKFwibnVtYmVyXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyXCIpO3JldHVybiByLlNsb3dCdWZmZXIodCl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKHQpe1xuLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8ZmVyb3NzQGZlcm9zcy5vcmc+IDxodHRwOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xudmFyIHI9bigxMzcpLGk9bigxMzgpLGE9big4NCk7ZnVuY3Rpb24gbygpe3JldHVybiB1LlRZUEVEX0FSUkFZX1NVUFBPUlQ/MjE0NzQ4MzY0NzoxMDczNzQxODIzfWZ1bmN0aW9uIHModCxlKXtpZihvKCk8ZSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkludmFsaWQgdHlwZWQgYXJyYXkgbGVuZ3RoXCIpO3JldHVybiB1LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHQ9bmV3IFVpbnQ4QXJyYXkoZSkpLl9fcHJvdG9fXz11LnByb3RvdHlwZToobnVsbD09PXQmJih0PW5ldyB1KGUpKSx0Lmxlbmd0aD1lKSx0fWZ1bmN0aW9uIHUodCxlLG4pe2lmKCEodS5UWVBFRF9BUlJBWV9TVVBQT1JUfHx0aGlzIGluc3RhbmNlb2YgdSkpcmV0dXJuIG5ldyB1KHQsZSxuKTtpZihcIm51bWJlclwiPT10eXBlb2YgdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpdGhyb3cgbmV3IEVycm9yKFwiSWYgZW5jb2RpbmcgaXMgc3BlY2lmaWVkIHRoZW4gdGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmdcIik7cmV0dXJuIGYodGhpcyx0KX1yZXR1cm4gYyh0aGlzLHQsZSxuKX1mdW5jdGlvbiBjKHQsZSxuLHIpe2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlcicpO3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyP2Z1bmN0aW9uKHQsZSxuLHIpe2lmKGUuYnl0ZUxlbmd0aCxuPDB8fGUuYnl0ZUxlbmd0aDxuKXRocm93IG5ldyBSYW5nZUVycm9yKFwiJ29mZnNldCcgaXMgb3V0IG9mIGJvdW5kc1wiKTtpZihlLmJ5dGVMZW5ndGg8bisocnx8MCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCInbGVuZ3RoJyBpcyBvdXQgb2YgYm91bmRzXCIpO2U9dm9pZCAwPT09biYmdm9pZCAwPT09cj9uZXcgVWludDhBcnJheShlKTp2b2lkIDA9PT1yP25ldyBVaW50OEFycmF5KGUsbik6bmV3IFVpbnQ4QXJyYXkoZSxuLHIpO3UuVFlQRURfQVJSQVlfU1VQUE9SVD8odD1lKS5fX3Byb3RvX189dS5wcm90b3R5cGU6dD1oKHQsZSk7cmV0dXJuIHR9KHQsZSxuLHIpOlwic3RyaW5nXCI9PXR5cGVvZiBlP2Z1bmN0aW9uKHQsZSxuKXtcInN0cmluZ1wiPT10eXBlb2YgbiYmXCJcIiE9PW58fChuPVwidXRmOFwiKTtpZighdS5pc0VuY29kaW5nKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiZW5jb2RpbmdcIiBtdXN0IGJlIGEgdmFsaWQgc3RyaW5nIGVuY29kaW5nJyk7dmFyIHI9MHxkKGUsbiksaT0odD1zKHQscikpLndyaXRlKGUsbik7aSE9PXImJih0PXQuc2xpY2UoMCxpKSk7cmV0dXJuIHR9KHQsZSxuKTpmdW5jdGlvbih0LGUpe2lmKHUuaXNCdWZmZXIoZSkpe3ZhciBuPTB8cChlLmxlbmd0aCk7cmV0dXJuIDA9PT0odD1zKHQsbikpLmxlbmd0aD90OihlLmNvcHkodCwwLDAsbiksdCl9aWYoZSl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZlLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyfHxcImxlbmd0aFwiaW4gZSlyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgZS5sZW5ndGh8fChyPWUubGVuZ3RoKSE9cj9zKHQsMCk6aCh0LGUpO2lmKFwiQnVmZmVyXCI9PT1lLnR5cGUmJmEoZS5kYXRhKSlyZXR1cm4gaCh0LGUuZGF0YSl9dmFyIHI7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBhcnJheS1saWtlIG9iamVjdC5cIil9KHQsZSl9ZnVuY3Rpb24gbCh0KXtpZihcIm51bWJlclwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJyk7aWYodDwwKXRocm93IG5ldyBSYW5nZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBuZWdhdGl2ZScpfWZ1bmN0aW9uIGYodCxlKXtpZihsKGUpLHQ9cyh0LGU8MD8wOjB8cChlKSksIXUuVFlQRURfQVJSQVlfU1VQUE9SVClmb3IodmFyIG49MDtuPGU7KytuKXRbbl09MDtyZXR1cm4gdH1mdW5jdGlvbiBoKHQsZSl7dmFyIG49ZS5sZW5ndGg8MD8wOjB8cChlLmxlbmd0aCk7dD1zKHQsbik7Zm9yKHZhciByPTA7cjxuO3IrPTEpdFtyXT0yNTUmZVtyXTtyZXR1cm4gdH1mdW5jdGlvbiBwKHQpe2lmKHQ+PW8oKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gYWxsb2NhdGUgQnVmZmVyIGxhcmdlciB0aGFuIG1heGltdW0gc2l6ZTogMHhcIitvKCkudG9TdHJpbmcoMTYpK1wiIGJ5dGVzXCIpO3JldHVybiAwfHR9ZnVuY3Rpb24gZCh0LGUpe2lmKHUuaXNCdWZmZXIodCkpcmV0dXJuIHQubGVuZ3RoO2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmXCJmdW5jdGlvblwiPT10eXBlb2YgQXJyYXlCdWZmZXIuaXNWaWV3JiYoQXJyYXlCdWZmZXIuaXNWaWV3KHQpfHx0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpKXJldHVybiB0LmJ5dGVMZW5ndGg7XCJzdHJpbmdcIiE9dHlwZW9mIHQmJih0PVwiXCIrdCk7dmFyIG49dC5sZW5ndGg7aWYoMD09PW4pcmV0dXJuIDA7Zm9yKHZhciByPSExOzspc3dpdGNoKGUpe2Nhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIG47Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6Y2FzZSB2b2lkIDA6cmV0dXJuIEYodCkubGVuZ3RoO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiAyKm47Y2FzZVwiaGV4XCI6cmV0dXJuIG4+Pj4xO2Nhc2VcImJhc2U2NFwiOnJldHVybiBVKHQpLmxlbmd0aDtkZWZhdWx0OmlmKHIpcmV0dXJuIEYodCkubGVuZ3RoO2U9KFwiXCIrZSkudG9Mb3dlckNhc2UoKSxyPSEwfX1mdW5jdGlvbiBtKHQsZSxuKXt2YXIgcj10W2VdO3RbZV09dFtuXSx0W25dPXJ9ZnVuY3Rpb24gZyh0LGUsbixyLGkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4tMTtpZihcInN0cmluZ1wiPT10eXBlb2Ygbj8ocj1uLG49MCk6bj4yMTQ3NDgzNjQ3P249MjE0NzQ4MzY0NzpuPC0yMTQ3NDgzNjQ4JiYobj0tMjE0NzQ4MzY0OCksbj0rbixpc05hTihuKSYmKG49aT8wOnQubGVuZ3RoLTEpLG48MCYmKG49dC5sZW5ndGgrbiksbj49dC5sZW5ndGgpe2lmKGkpcmV0dXJuLTE7bj10Lmxlbmd0aC0xfWVsc2UgaWYobjwwKXtpZighaSlyZXR1cm4tMTtuPTB9aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPXUuZnJvbShlLHIpKSx1LmlzQnVmZmVyKGUpKXJldHVybiAwPT09ZS5sZW5ndGg/LTE6eSh0LGUsbixyLGkpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlKXJldHVybiBlJj0yNTUsdS5UWVBFRF9BUlJBWV9TVVBQT1JUJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mP2k/VWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHQsZSxuKTpVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKHQsZSxuKTp5KHQsW2VdLG4scixpKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIHkodCxlLG4scixpKXt2YXIgYSxvPTEscz10Lmxlbmd0aCx1PWUubGVuZ3RoO2lmKHZvaWQgMCE9PXImJihcInVjczJcIj09PShyPVN0cmluZyhyKS50b0xvd2VyQ2FzZSgpKXx8XCJ1Y3MtMlwiPT09cnx8XCJ1dGYxNmxlXCI9PT1yfHxcInV0Zi0xNmxlXCI9PT1yKSl7aWYodC5sZW5ndGg8Mnx8ZS5sZW5ndGg8MilyZXR1cm4tMTtvPTIscy89Mix1Lz0yLG4vPTJ9ZnVuY3Rpb24gYyh0LGUpe3JldHVybiAxPT09bz90W2VdOnQucmVhZFVJbnQxNkJFKGUqbyl9aWYoaSl7dmFyIGw9LTE7Zm9yKGE9bjthPHM7YSsrKWlmKGModCxhKT09PWMoZSwtMT09PWw/MDphLWwpKXtpZigtMT09PWwmJihsPWEpLGEtbCsxPT09dSlyZXR1cm4gbCpvfWVsc2UtMSE9PWwmJihhLT1hLWwpLGw9LTF9ZWxzZSBmb3Iobit1PnMmJihuPXMtdSksYT1uO2E+PTA7YS0tKXtmb3IodmFyIGY9ITAsaD0wO2g8dTtoKyspaWYoYyh0LGEraCkhPT1jKGUsaCkpe2Y9ITE7YnJlYWt9aWYoZilyZXR1cm4gYX1yZXR1cm4tMX1mdW5jdGlvbiB2KHQsZSxuLHIpe249TnVtYmVyKG4pfHwwO3ZhciBpPXQubGVuZ3RoLW47cj8ocj1OdW1iZXIocikpPmkmJihyPWkpOnI9aTt2YXIgYT1lLmxlbmd0aDtpZihhJTIhPTApdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgaGV4IHN0cmluZ1wiKTtyPmEvMiYmKHI9YS8yKTtmb3IodmFyIG89MDtvPHI7KytvKXt2YXIgcz1wYXJzZUludChlLnN1YnN0cigyKm8sMiksMTYpO2lmKGlzTmFOKHMpKXJldHVybiBvO3RbbitvXT1zfXJldHVybiBvfWZ1bmN0aW9uIGIodCxlLG4scil7cmV0dXJuIFYoRihlLHQubGVuZ3RoLW4pLHQsbixyKX1mdW5jdGlvbiB3KHQsZSxuLHIpe3JldHVybiBWKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDsrK24pZS5wdXNoKDI1NSZ0LmNoYXJDb2RlQXQobikpO3JldHVybiBlfShlKSx0LG4scil9ZnVuY3Rpb24gXyh0LGUsbixyKXtyZXR1cm4gdyh0LGUsbixyKX1mdW5jdGlvbiB4KHQsZSxuLHIpe3JldHVybiBWKFUoZSksdCxuLHIpfWZ1bmN0aW9uIEUodCxlLG4scil7cmV0dXJuIFYoZnVuY3Rpb24odCxlKXtmb3IodmFyIG4scixpLGE9W10sbz0wO288dC5sZW5ndGgmJiEoKGUtPTIpPDApOysrbyluPXQuY2hhckNvZGVBdChvKSxyPW4+PjgsaT1uJTI1NixhLnB1c2goaSksYS5wdXNoKHIpO3JldHVybiBhfShlLHQubGVuZ3RoLW4pLHQsbixyKX1mdW5jdGlvbiBTKHQsZSxuKXtyZXR1cm4gMD09PWUmJm49PT10Lmxlbmd0aD9yLmZyb21CeXRlQXJyYXkodCk6ci5mcm9tQnl0ZUFycmF5KHQuc2xpY2UoZSxuKSl9ZnVuY3Rpb24gTih0LGUsbil7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIHI9W10saT1lO2k8bjspe3ZhciBhLG8scyx1LGM9dFtpXSxsPW51bGwsZj1jPjIzOT80OmM+MjIzPzM6Yz4xOTE/MjoxO2lmKGkrZjw9bilzd2l0Y2goZil7Y2FzZSAxOmM8MTI4JiYobD1jKTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihhPXRbaSsxXSkpJiYodT0oMzEmYyk8PDZ8NjMmYSk+MTI3JiYobD11KTticmVhaztjYXNlIDM6YT10W2krMV0sbz10W2krMl0sMTI4PT0oMTkyJmEpJiYxMjg9PSgxOTImbykmJih1PSgxNSZjKTw8MTJ8KDYzJmEpPDw2fDYzJm8pPjIwNDcmJih1PDU1Mjk2fHx1PjU3MzQzKSYmKGw9dSk7YnJlYWs7Y2FzZSA0OmE9dFtpKzFdLG89dFtpKzJdLHM9dFtpKzNdLDEyOD09KDE5MiZhKSYmMTI4PT0oMTkyJm8pJiYxMjg9PSgxOTImcykmJih1PSgxNSZjKTw8MTh8KDYzJmEpPDwxMnwoNjMmbyk8PDZ8NjMmcyk+NjU1MzUmJnU8MTExNDExMiYmKGw9dSl9bnVsbD09PWw/KGw9NjU1MzMsZj0xKTpsPjY1NTM1JiYobC09NjU1MzYsci5wdXNoKGw+Pj4xMCYxMDIzfDU1Mjk2KSxsPTU2MzIwfDEwMjMmbCksci5wdXNoKGwpLGkrPWZ9cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8PUkpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLHQpO3ZhciBuPVwiXCIscj0wO2Zvcig7cjxlOyluKz1TdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyx0LnNsaWNlKHIscis9SSkpO3JldHVybiBufShyKX1lLkJ1ZmZlcj11LGUuU2xvd0J1ZmZlcj1mdW5jdGlvbih0KXsrdCE9dCYmKHQ9MCk7cmV0dXJuIHUuYWxsb2MoK3QpfSxlLklOU1BFQ1RfTUFYX0JZVEVTPTUwLHUuVFlQRURfQVJSQVlfU1VQUE9SVD12b2lkIDAhPT10LlRZUEVEX0FSUkFZX1NVUFBPUlQ/dC5UWVBFRF9BUlJBWV9TVVBQT1JUOmZ1bmN0aW9uKCl7dHJ5e3ZhciB0PW5ldyBVaW50OEFycmF5KDEpO3JldHVybiB0Ll9fcHJvdG9fXz17X19wcm90b19fOlVpbnQ4QXJyYXkucHJvdG90eXBlLGZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19LDQyPT09dC5mb28oKSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5zdWJhcnJheSYmMD09PXQuc3ViYXJyYXkoMSwxKS5ieXRlTGVuZ3RofWNhdGNoKHQpe3JldHVybiExfX0oKSxlLmtNYXhMZW5ndGg9bygpLHUucG9vbFNpemU9ODE5Mix1Ll9hdWdtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fXz11LnByb3RvdHlwZSx0fSx1LmZyb209ZnVuY3Rpb24odCxlLG4pe3JldHVybiBjKG51bGwsdCxlLG4pfSx1LlRZUEVEX0FSUkFZX1NVUFBPUlQmJih1LnByb3RvdHlwZS5fX3Byb3RvX189VWludDhBcnJheS5wcm90b3R5cGUsdS5fX3Byb3RvX189VWludDhBcnJheSxcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuc3BlY2llcyYmdVtTeW1ib2wuc3BlY2llc109PT11JiZPYmplY3QuZGVmaW5lUHJvcGVydHkodSxTeW1ib2wuc3BlY2llcyx7dmFsdWU6bnVsbCxjb25maWd1cmFibGU6ITB9KSksdS5hbGxvYz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBsKGUpLGU8PTA/cyh0LGUpOnZvaWQgMCE9PW4/XCJzdHJpbmdcIj09dHlwZW9mIHI/cyh0LGUpLmZpbGwobixyKTpzKHQsZSkuZmlsbChuKTpzKHQsZSl9KG51bGwsdCxlLG4pfSx1LmFsbG9jVW5zYWZlPWZ1bmN0aW9uKHQpe3JldHVybiBmKG51bGwsdCl9LHUuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHQpe3JldHVybiBmKG51bGwsdCl9LHUuaXNCdWZmZXI9ZnVuY3Rpb24odCl7cmV0dXJuIShudWxsPT10fHwhdC5faXNCdWZmZXIpfSx1LmNvbXBhcmU9ZnVuY3Rpb24odCxlKXtpZighdS5pc0J1ZmZlcih0KXx8IXUuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50cyBtdXN0IGJlIEJ1ZmZlcnNcIik7aWYodD09PWUpcmV0dXJuIDA7Zm9yKHZhciBuPXQubGVuZ3RoLHI9ZS5sZW5ndGgsaT0wLGE9TWF0aC5taW4obixyKTtpPGE7KytpKWlmKHRbaV0hPT1lW2ldKXtuPXRbaV0scj1lW2ldO2JyZWFrfXJldHVybiBuPHI/LTE6cjxuPzE6MH0sdS5pc0VuY29kaW5nPWZ1bmN0aW9uKHQpe3N3aXRjaChTdHJpbmcodCkudG9Mb3dlckNhc2UoKSl7Y2FzZVwiaGV4XCI6Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpjYXNlXCJiYXNlNjRcIjpjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX0sdS5jb25jYXQ9ZnVuY3Rpb24odCxlKXtpZighYSh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtpZigwPT09dC5sZW5ndGgpcmV0dXJuIHUuYWxsb2MoMCk7dmFyIG47aWYodm9pZCAwPT09ZSlmb3IoZT0wLG49MDtuPHQubGVuZ3RoOysrbillKz10W25dLmxlbmd0aDt2YXIgcj11LmFsbG9jVW5zYWZlKGUpLGk9MDtmb3Iobj0wO248dC5sZW5ndGg7KytuKXt2YXIgbz10W25dO2lmKCF1LmlzQnVmZmVyKG8pKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO28uY29weShyLGkpLGkrPW8ubGVuZ3RofXJldHVybiByfSx1LmJ5dGVMZW5ndGg9ZCx1LnByb3RvdHlwZS5faXNCdWZmZXI9ITAsdS5wcm90b3R5cGUuc3dhcDE2PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGg7aWYodCUyIT0wKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDE2LWJpdHNcIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTIpbSh0aGlzLGUsZSsxKTtyZXR1cm4gdGhpc30sdS5wcm90b3R5cGUuc3dhcDMyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sZW5ndGg7aWYodCU0IT0wKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHNcIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTQpbSh0aGlzLGUsZSszKSxtKHRoaXMsZSsxLGUrMik7cmV0dXJuIHRoaXN9LHUucHJvdG90eXBlLnN3YXA2ND1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGVuZ3RoO2lmKHQlOCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzXCIpO2Zvcih2YXIgZT0wO2U8dDtlKz04KW0odGhpcyxlLGUrNyksbSh0aGlzLGUrMSxlKzYpLG0odGhpcyxlKzIsZSs1KSxtKHRoaXMsZSszLGUrNCk7cmV0dXJuIHRoaXN9LHUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9MHx0aGlzLmxlbmd0aDtyZXR1cm4gMD09PXQ/XCJcIjowPT09YXJndW1lbnRzLmxlbmd0aD9OKHRoaXMsMCx0KTpmdW5jdGlvbih0LGUsbil7dmFyIHI9ITE7aWYoKHZvaWQgMD09PWV8fGU8MCkmJihlPTApLGU+dGhpcy5sZW5ndGgpcmV0dXJuXCJcIjtpZigodm9pZCAwPT09bnx8bj50aGlzLmxlbmd0aCkmJihuPXRoaXMubGVuZ3RoKSxuPD0wKXJldHVyblwiXCI7aWYoKG4+Pj49MCk8PShlPj4+PTApKXJldHVyblwiXCI7Zm9yKHR8fCh0PVwidXRmOFwiKTs7KXN3aXRjaCh0KXtjYXNlXCJoZXhcIjpyZXR1cm4gQSh0aGlzLGUsbik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIE4odGhpcyxlLG4pO2Nhc2VcImFzY2lpXCI6cmV0dXJuIE8odGhpcyxlLG4pO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBrKHRoaXMsZSxuKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gUyh0aGlzLGUsbik7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIEModGhpcyxlLG4pO2RlZmF1bHQ6aWYocil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrdCk7dD0odCtcIlwiKS50b0xvd2VyQ2FzZSgpLHI9ITB9fS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHUucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbih0KXtpZighdS5pc0J1ZmZlcih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtyZXR1cm4gdGhpcz09PXR8fDA9PT11LmNvbXBhcmUodGhpcyx0KX0sdS5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3ZhciB0PVwiXCIsbj1lLklOU1BFQ1RfTUFYX0JZVEVTO3JldHVybiB0aGlzLmxlbmd0aD4wJiYodD10aGlzLnRvU3RyaW5nKFwiaGV4XCIsMCxuKS5tYXRjaCgvLnsyfS9nKS5qb2luKFwiIFwiKSx0aGlzLmxlbmd0aD5uJiYodCs9XCIgLi4uIFwiKSksXCI8QnVmZmVyIFwiK3QrXCI+XCJ9LHUucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24odCxlLG4scixpKXtpZighdS5pc0J1ZmZlcih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtpZih2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1uJiYobj10P3QubGVuZ3RoOjApLHZvaWQgMD09PXImJihyPTApLHZvaWQgMD09PWkmJihpPXRoaXMubGVuZ3RoKSxlPDB8fG4+dC5sZW5ndGh8fHI8MHx8aT50aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm91dCBvZiByYW5nZSBpbmRleFwiKTtpZihyPj1pJiZlPj1uKXJldHVybiAwO2lmKHI+PWkpcmV0dXJuLTE7aWYoZT49bilyZXR1cm4gMTtpZih0aGlzPT09dClyZXR1cm4gMDtmb3IodmFyIGE9KGk+Pj49MCktKHI+Pj49MCksbz0obj4+Pj0wKS0oZT4+Pj0wKSxzPU1hdGgubWluKGEsbyksYz10aGlzLnNsaWNlKHIsaSksbD10LnNsaWNlKGUsbiksZj0wO2Y8czsrK2YpaWYoY1tmXSE9PWxbZl0pe2E9Y1tmXSxvPWxbZl07YnJlYWt9cmV0dXJuIGE8bz8tMTpvPGE/MTowfSx1LnByb3RvdHlwZS5pbmNsdWRlcz1mdW5jdGlvbih0LGUsbil7cmV0dXJuLTEhPT10aGlzLmluZGV4T2YodCxlLG4pfSx1LnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZyh0aGlzLHQsZSxuLCEwKX0sdS5wcm90b3R5cGUubGFzdEluZGV4T2Y9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBnKHRoaXMsdCxlLG4sITEpfSx1LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0LGUsbixyKXtpZih2b2lkIDA9PT1lKXI9XCJ1dGY4XCIsbj10aGlzLmxlbmd0aCxlPTA7ZWxzZSBpZih2b2lkIDA9PT1uJiZcInN0cmluZ1wiPT10eXBlb2YgZSlyPWUsbj10aGlzLmxlbmd0aCxlPTA7ZWxzZXtpZighaXNGaW5pdGUoZSkpdGhyb3cgbmV3IEVycm9yKFwiQnVmZmVyLndyaXRlKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldFssIGxlbmd0aF0pIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWRcIik7ZXw9MCxpc0Zpbml0ZShuKT8obnw9MCx2b2lkIDA9PT1yJiYocj1cInV0ZjhcIikpOihyPW4sbj12b2lkIDApfXZhciBpPXRoaXMubGVuZ3RoLWU7aWYoKHZvaWQgMD09PW58fG4+aSkmJihuPWkpLHQubGVuZ3RoPjAmJihuPDB8fGU8MCl8fGU+dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kc1wiKTtyfHwocj1cInV0ZjhcIik7Zm9yKHZhciBhPSExOzspc3dpdGNoKHIpe2Nhc2VcImhleFwiOnJldHVybiB2KHRoaXMsdCxlLG4pO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBiKHRoaXMsdCxlLG4pO2Nhc2VcImFzY2lpXCI6cmV0dXJuIHcodGhpcyx0LGUsbik7Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIF8odGhpcyx0LGUsbik7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIHgodGhpcyx0LGUsbik7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIEUodGhpcyx0LGUsbik7ZGVmYXVsdDppZihhKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIityKTtyPShcIlwiK3IpLnRvTG93ZXJDYXNlKCksYT0hMH19LHUucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3JldHVybnt0eXBlOlwiQnVmZmVyXCIsZGF0YTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnJ8fHRoaXMsMCl9fTt2YXIgST00MDk2O2Z1bmN0aW9uIE8odCxlLG4pe3ZhciByPVwiXCI7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIGk9ZTtpPG47KytpKXIrPVN0cmluZy5mcm9tQ2hhckNvZGUoMTI3JnRbaV0pO3JldHVybiByfWZ1bmN0aW9uIGsodCxlLG4pe3ZhciByPVwiXCI7bj1NYXRoLm1pbih0Lmxlbmd0aCxuKTtmb3IodmFyIGk9ZTtpPG47KytpKXIrPVN0cmluZy5mcm9tQ2hhckNvZGUodFtpXSk7cmV0dXJuIHJ9ZnVuY3Rpb24gQSh0LGUsbil7dmFyIHI9dC5sZW5ndGg7KCFlfHxlPDApJiYoZT0wKSwoIW58fG48MHx8bj5yKSYmKG49cik7Zm9yKHZhciBpPVwiXCIsYT1lO2E8bjsrK2EpaSs9eih0W2FdKTtyZXR1cm4gaX1mdW5jdGlvbiBDKHQsZSxuKXtmb3IodmFyIHI9dC5zbGljZShlLG4pLGk9XCJcIixhPTA7YTxyLmxlbmd0aDthKz0yKWkrPVN0cmluZy5mcm9tQ2hhckNvZGUoclthXSsyNTYqclthKzFdKTtyZXR1cm4gaX1mdW5jdGlvbiBQKHQsZSxuKXtpZih0JTEhPTB8fHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm9mZnNldCBpcyBub3QgdWludFwiKTtpZih0K2U+bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRyeWluZyB0byBhY2Nlc3MgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIil9ZnVuY3Rpb24gVCh0LGUsbixyLGksYSl7aWYoIXUuaXNCdWZmZXIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJyk7aWYoZT5pfHxlPGEpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJyk7aWYobityPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfWZ1bmN0aW9uIFIodCxlLG4scil7ZTwwJiYoZT02NTUzNStlKzEpO2Zvcih2YXIgaT0wLGE9TWF0aC5taW4odC5sZW5ndGgtbiwyKTtpPGE7KytpKXRbbitpXT0oZSYyNTU8PDgqKHI/aToxLWkpKT4+PjgqKHI/aToxLWkpfWZ1bmN0aW9uIEQodCxlLG4scil7ZTwwJiYoZT00Mjk0OTY3Mjk1K2UrMSk7Zm9yKHZhciBpPTAsYT1NYXRoLm1pbih0Lmxlbmd0aC1uLDQpO2k8YTsrK2kpdFtuK2ldPWU+Pj44KihyP2k6My1pKSYyNTV9ZnVuY3Rpb24gTSh0LGUsbixyLGksYSl7aWYobityPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKG48MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiBqKHQsZSxuLHIsYSl7cmV0dXJuIGF8fE0odCwwLG4sNCksaS53cml0ZSh0LGUsbixyLDIzLDQpLG4rNH1mdW5jdGlvbiBCKHQsZSxuLHIsYSl7cmV0dXJuIGF8fE0odCwwLG4sOCksaS53cml0ZSh0LGUsbixyLDUyLDgpLG4rOH11LnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LGUpe3ZhciBuLHI9dGhpcy5sZW5ndGg7aWYoKHQ9fn50KTwwPyh0Kz1yKTwwJiYodD0wKTp0PnImJih0PXIpLChlPXZvaWQgMD09PWU/cjp+fmUpPDA/KGUrPXIpPDAmJihlPTApOmU+ciYmKGU9ciksZTx0JiYoZT10KSx1LlRZUEVEX0FSUkFZX1NVUFBPUlQpKG49dGhpcy5zdWJhcnJheSh0LGUpKS5fX3Byb3RvX189dS5wcm90b3R5cGU7ZWxzZXt2YXIgaT1lLXQ7bj1uZXcgdShpLHZvaWQgMCk7Zm9yKHZhciBhPTA7YTxpOysrYSluW2FdPXRoaXNbYSt0XX1yZXR1cm4gbn0sdS5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbih0LGUsbil7dHw9MCxlfD0wLG58fFAodCxlLHRoaXMubGVuZ3RoKTtmb3IodmFyIHI9dGhpc1t0XSxpPTEsYT0wOysrYTxlJiYoaSo9MjU2KTspcis9dGhpc1t0K2FdKmk7cmV0dXJuIHJ9LHUucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24odCxlLG4pe3R8PTAsZXw9MCxufHxQKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciByPXRoaXNbdCstLWVdLGk9MTtlPjAmJihpKj0yNTYpOylyKz10aGlzW3QrLS1lXSppO3JldHVybiByfSx1LnByb3RvdHlwZS5yZWFkVUludDg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8UCh0LDEsdGhpcy5sZW5ndGgpLHRoaXNbdF19LHUucHJvdG90eXBlLnJlYWRVSW50MTZMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxQKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XXx0aGlzW3QrMV08PDh9LHUucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxQKHQsMix0aGlzLmxlbmd0aCksdGhpc1t0XTw8OHx0aGlzW3QrMV19LHUucHJvdG90eXBlLnJlYWRVSW50MzJMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxQKHQsNCx0aGlzLmxlbmd0aCksKHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTYpKzE2Nzc3MjE2KnRoaXNbdCszXX0sdS5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fFAodCw0LHRoaXMubGVuZ3RoKSwxNjc3NzIxNip0aGlzW3RdKyh0aGlzW3QrMV08PDE2fHRoaXNbdCsyXTw8OHx0aGlzW3QrM10pfSx1LnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24odCxlLG4pe3R8PTAsZXw9MCxufHxQKHQsZSx0aGlzLmxlbmd0aCk7Zm9yKHZhciByPXRoaXNbdF0saT0xLGE9MDsrK2E8ZSYmKGkqPTI1Nik7KXIrPXRoaXNbdCthXSppO3JldHVybiByPj0oaSo9MTI4KSYmKHItPU1hdGgucG93KDIsOCplKSkscn0sdS5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uKHQsZSxuKXt0fD0wLGV8PTAsbnx8UCh0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgcj1lLGk9MSxhPXRoaXNbdCstLXJdO3I+MCYmKGkqPTI1Nik7KWErPXRoaXNbdCstLXJdKmk7cmV0dXJuIGE+PShpKj0xMjgpJiYoYS09TWF0aC5wb3coMiw4KmUpKSxhfSx1LnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxQKHQsMSx0aGlzLmxlbmd0aCksMTI4JnRoaXNbdF0/LTEqKDI1NS10aGlzW3RdKzEpOnRoaXNbdF19LHUucHJvdG90eXBlLnJlYWRJbnQxNkxFPWZ1bmN0aW9uKHQsZSl7ZXx8UCh0LDIsdGhpcy5sZW5ndGgpO3ZhciBuPXRoaXNbdF18dGhpc1t0KzFdPDw4O3JldHVybiAzMjc2OCZuPzQyOTQ5MDE3NjB8bjpufSx1LnByb3RvdHlwZS5yZWFkSW50MTZCRT1mdW5jdGlvbih0LGUpe2V8fFAodCwyLHRoaXMubGVuZ3RoKTt2YXIgbj10aGlzW3QrMV18dGhpc1t0XTw8ODtyZXR1cm4gMzI3Njgmbj80Mjk0OTAxNzYwfG46bn0sdS5wcm90b3R5cGUucmVhZEludDMyTEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8UCh0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTZ8dGhpc1t0KzNdPDwyNH0sdS5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8UCh0LDQsdGhpcy5sZW5ndGgpLHRoaXNbdF08PDI0fHRoaXNbdCsxXTw8MTZ8dGhpc1t0KzJdPDw4fHRoaXNbdCszXX0sdS5wcm90b3R5cGUucmVhZEZsb2F0TEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8UCh0LDQsdGhpcy5sZW5ndGgpLGkucmVhZCh0aGlzLHQsITAsMjMsNCl9LHUucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fFAodCw0LHRoaXMubGVuZ3RoKSxpLnJlYWQodGhpcyx0LCExLDIzLDQpfSx1LnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8UCh0LDgsdGhpcy5sZW5ndGgpLGkucmVhZCh0aGlzLHQsITAsNTIsOCl9LHUucHJvdG90eXBlLnJlYWREb3VibGVCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxQKHQsOCx0aGlzLmxlbmd0aCksaS5yZWFkKHRoaXMsdCwhMSw1Miw4KX0sdS5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24odCxlLG4scil7KHQ9K3QsZXw9MCxufD0wLHIpfHxUKHRoaXMsdCxlLG4sTWF0aC5wb3coMiw4Km4pLTEsMCk7dmFyIGk9MSxhPTA7Zm9yKHRoaXNbZV09MjU1JnQ7KythPG4mJihpKj0yNTYpOyl0aGlzW2UrYV09dC9pJjI1NTtyZXR1cm4gZStufSx1LnByb3RvdHlwZS53cml0ZVVJbnRCRT1mdW5jdGlvbih0LGUsbixyKXsodD0rdCxlfD0wLG58PTAscil8fFQodGhpcyx0LGUsbixNYXRoLnBvdygyLDgqbiktMSwwKTt2YXIgaT1uLTEsYT0xO2Zvcih0aGlzW2UraV09MjU1JnQ7LS1pPj0wJiYoYSo9MjU2KTspdGhpc1tlK2ldPXQvYSYyNTU7cmV0dXJuIGUrbn0sdS5wcm90b3R5cGUud3JpdGVVSW50OD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxUKHRoaXMsdCxlLDEsMjU1LDApLHUuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdGhpc1tlXT0yNTUmdCxlKzF9LHUucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8VCh0aGlzLHQsZSwyLDY1NTM1LDApLHUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOlIodGhpcyx0LGUsITApLGUrMn0sdS5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxUKHRoaXMsdCxlLDIsNjU1MzUsMCksdS5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj44LHRoaXNbZSsxXT0yNTUmdCk6Uih0aGlzLHQsZSwhMSksZSsyfSx1LnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fFQodGhpcyx0LGUsNCw0Mjk0OTY3Mjk1LDApLHUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlKzNdPXQ+Pj4yNCx0aGlzW2UrMl09dD4+PjE2LHRoaXNbZSsxXT10Pj4+OCx0aGlzW2VdPTI1NSZ0KTpEKHRoaXMsdCxlLCEwKSxlKzR9LHUucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8VCh0aGlzLHQsZSw0LDQyOTQ5NjcyOTUsMCksdS5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj4yNCx0aGlzW2UrMV09dD4+PjE2LHRoaXNbZSsyXT10Pj4+OCx0aGlzW2UrM109MjU1JnQpOkQodGhpcyx0LGUsITEpLGUrNH0sdS5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbih0LGUsbixyKXtpZih0PSt0LGV8PTAsIXIpe3ZhciBpPU1hdGgucG93KDIsOCpuLTEpO1QodGhpcyx0LGUsbixpLTEsLWkpfXZhciBhPTAsbz0xLHM9MDtmb3IodGhpc1tlXT0yNTUmdDsrK2E8biYmKG8qPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2UrYS0xXSYmKHM9MSksdGhpc1tlK2FdPSh0L28+PjApLXMmMjU1O3JldHVybiBlK259LHUucHJvdG90eXBlLndyaXRlSW50QkU9ZnVuY3Rpb24odCxlLG4scil7aWYodD0rdCxlfD0wLCFyKXt2YXIgaT1NYXRoLnBvdygyLDgqbi0xKTtUKHRoaXMsdCxlLG4saS0xLC1pKX12YXIgYT1uLTEsbz0xLHM9MDtmb3IodGhpc1tlK2FdPTI1NSZ0Oy0tYT49MCYmKG8qPTI1Nik7KXQ8MCYmMD09PXMmJjAhPT10aGlzW2UrYSsxXSYmKHM9MSksdGhpc1tlK2FdPSh0L28+PjApLXMmMjU1O3JldHVybiBlK259LHUucHJvdG90eXBlLndyaXRlSW50OD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ9K3QsZXw9MCxufHxUKHRoaXMsdCxlLDEsMTI3LC0xMjgpLHUuVFlQRURfQVJSQVlfU1VQUE9SVHx8KHQ9TWF0aC5mbG9vcih0KSksdDwwJiYodD0yNTUrdCsxKSx0aGlzW2VdPTI1NSZ0LGUrMX0sdS5wcm90b3R5cGUud3JpdGVJbnQxNkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fFQodGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLHUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT0yNTUmdCx0aGlzW2UrMV09dD4+PjgpOlIodGhpcyx0LGUsITApLGUrMn0sdS5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fFQodGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLHUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+OCx0aGlzW2UrMV09MjU1JnQpOlIodGhpcyx0LGUsITEpLGUrMn0sdS5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdD0rdCxlfD0wLG58fFQodGhpcyx0LGUsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KSx1LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09MjU1JnQsdGhpc1tlKzFdPXQ+Pj44LHRoaXNbZSsyXT10Pj4+MTYsdGhpc1tlKzNdPXQ+Pj4yNCk6RCh0aGlzLHQsZSwhMCksZSs0fSx1LnByb3RvdHlwZS53cml0ZUludDMyQkU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PSt0LGV8PTAsbnx8VCh0aGlzLHQsZSw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHQ8MCYmKHQ9NDI5NDk2NzI5NSt0KzEpLHUuVFlQRURfQVJSQVlfU1VQUE9SVD8odGhpc1tlXT10Pj4+MjQsdGhpc1tlKzFdPXQ+Pj4xNix0aGlzW2UrMl09dD4+PjgsdGhpc1tlKzNdPTI1NSZ0KTpEKHRoaXMsdCxlLCExKSxlKzR9LHUucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGoodGhpcyx0LGUsITAsbil9LHUucHJvdG90eXBlLndyaXRlRmxvYXRCRT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGoodGhpcyx0LGUsITEsbil9LHUucHJvdG90eXBlLndyaXRlRG91YmxlTEU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBCKHRoaXMsdCxlLCEwLG4pfSx1LnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gQih0aGlzLHQsZSwhMSxuKX0sdS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0LGUsbixyKXtpZihufHwobj0wKSxyfHwwPT09cnx8KHI9dGhpcy5sZW5ndGgpLGU+PXQubGVuZ3RoJiYoZT10Lmxlbmd0aCksZXx8KGU9MCkscj4wJiZyPG4mJihyPW4pLHI9PT1uKXJldHVybiAwO2lmKDA9PT10Lmxlbmd0aHx8MD09PXRoaXMubGVuZ3RoKXJldHVybiAwO2lmKGU8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYobjwwfHxuPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInNvdXJjZVN0YXJ0IG91dCBvZiBib3VuZHNcIik7aWYocjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7cj50aGlzLmxlbmd0aCYmKHI9dGhpcy5sZW5ndGgpLHQubGVuZ3RoLWU8ci1uJiYocj10Lmxlbmd0aC1lK24pO3ZhciBpLGE9ci1uO2lmKHRoaXM9PT10JiZuPGUmJmU8cilmb3IoaT1hLTE7aT49MDstLWkpdFtpK2VdPXRoaXNbaStuXTtlbHNlIGlmKGE8MWUzfHwhdS5UWVBFRF9BUlJBWV9TVVBQT1JUKWZvcihpPTA7aTxhOysraSl0W2krZV09dGhpc1tpK25dO2Vsc2UgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwodCx0aGlzLnN1YmFycmF5KG4sbithKSxlKTtyZXR1cm4gYX0sdS5wcm90b3R5cGUuZmlsbD1mdW5jdGlvbih0LGUsbixyKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGU/KHI9ZSxlPTAsbj10aGlzLmxlbmd0aCk6XCJzdHJpbmdcIj09dHlwZW9mIG4mJihyPW4sbj10aGlzLmxlbmd0aCksMT09PXQubGVuZ3RoKXt2YXIgaT10LmNoYXJDb2RlQXQoMCk7aTwyNTYmJih0PWkpfWlmKHZvaWQgMCE9PXImJlwic3RyaW5nXCIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoXCJlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nXCIpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByJiYhdS5pc0VuY29kaW5nKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIityKX1lbHNlXCJudW1iZXJcIj09dHlwZW9mIHQmJih0Jj0yNTUpO2lmKGU8MHx8dGhpcy5sZW5ndGg8ZXx8dGhpcy5sZW5ndGg8bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihuPD1lKXJldHVybiB0aGlzO3ZhciBhO2lmKGU+Pj49MCxuPXZvaWQgMD09PW4/dGhpcy5sZW5ndGg6bj4+PjAsdHx8KHQ9MCksXCJudW1iZXJcIj09dHlwZW9mIHQpZm9yKGE9ZTthPG47KythKXRoaXNbYV09dDtlbHNle3ZhciBvPXUuaXNCdWZmZXIodCk/dDpGKG5ldyB1KHQscikudG9TdHJpbmcoKSkscz1vLmxlbmd0aDtmb3IoYT0wO2E8bi1lOysrYSl0aGlzW2ErZV09b1thJXNdfXJldHVybiB0aGlzfTt2YXIgTD0vW14rXFwvMC05QS1aYS16LV9dL2c7ZnVuY3Rpb24geih0KXtyZXR1cm4gdDwxNj9cIjBcIit0LnRvU3RyaW5nKDE2KTp0LnRvU3RyaW5nKDE2KX1mdW5jdGlvbiBGKHQsZSl7dmFyIG47ZT1lfHwxLzA7Zm9yKHZhciByPXQubGVuZ3RoLGk9bnVsbCxhPVtdLG89MDtvPHI7KytvKXtpZigobj10LmNoYXJDb2RlQXQobykpPjU1Mjk1JiZuPDU3MzQ0KXtpZighaSl7aWYobj41NjMxOSl7KGUtPTMpPi0xJiZhLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWlmKG8rMT09PXIpeyhlLT0zKT4tMSYmYS5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1pPW47Y29udGludWV9aWYobjw1NjMyMCl7KGUtPTMpPi0xJiZhLnB1c2goMjM5LDE5MSwxODkpLGk9bjtjb250aW51ZX1uPTY1NTM2KyhpLTU1Mjk2PDwxMHxuLTU2MzIwKX1lbHNlIGkmJihlLT0zKT4tMSYmYS5wdXNoKDIzOSwxOTEsMTg5KTtpZihpPW51bGwsbjwxMjgpe2lmKChlLT0xKTwwKWJyZWFrO2EucHVzaChuKX1lbHNlIGlmKG48MjA0OCl7aWYoKGUtPTIpPDApYnJlYWs7YS5wdXNoKG4+PjZ8MTkyLDYzJm58MTI4KX1lbHNlIGlmKG48NjU1MzYpe2lmKChlLT0zKTwwKWJyZWFrO2EucHVzaChuPj4xMnwyMjQsbj4+NiY2M3wxMjgsNjMmbnwxMjgpfWVsc2V7aWYoIShuPDExMTQxMTIpKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKTtpZigoZS09NCk8MClicmVhazthLnB1c2gobj4+MTh8MjQwLG4+PjEyJjYzfDEyOCxuPj42JjYzfDEyOCw2MyZufDEyOCl9fXJldHVybiBhfWZ1bmN0aW9uIFUodCl7cmV0dXJuIHIudG9CeXRlQXJyYXkoZnVuY3Rpb24odCl7aWYoKHQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbT90LnRyaW0oKTp0LnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9KHQpLnJlcGxhY2UoTCxcIlwiKSkubGVuZ3RoPDIpcmV0dXJuXCJcIjtmb3IoO3QubGVuZ3RoJTQhPTA7KXQrPVwiPVwiO3JldHVybiB0fSh0KSl9ZnVuY3Rpb24gVih0LGUsbixyKXtmb3IodmFyIGk9MDtpPHImJiEoaStuPj1lLmxlbmd0aHx8aT49dC5sZW5ndGgpOysraSllW2krbl09dFtpXTtyZXR1cm4gaX19KS5jYWxsKHRoaXMsbigxMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCxlKXtpZighdCl0aHJvdyBuZXcgRXJyb3IoZXx8XCJBc3NlcnRpb24gZmFpbGVkXCIpfWZ1bmN0aW9uIGkodCxlKXt0LnN1cGVyXz1lO3ZhciBuPWZ1bmN0aW9uKCl7fTtuLnByb3RvdHlwZT1lLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgbix0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10fWZ1bmN0aW9uIGEodCxlLG4pe2lmKGEuaXNCTih0KSlyZXR1cm4gdDt0aGlzLm5lZ2F0aXZlPTAsdGhpcy53b3Jkcz1udWxsLHRoaXMubGVuZ3RoPTAsdGhpcy5yZWQ9bnVsbCxudWxsIT09dCYmKFwibGVcIiE9PWUmJlwiYmVcIiE9PWV8fChuPWUsZT0xMCksdGhpcy5faW5pdCh0fHwwLGV8fDEwLG58fFwiYmVcIikpfXZhciBvO1wib2JqZWN0XCI9PXR5cGVvZiB0P3QuZXhwb3J0cz1hOmUuQk49YSxhLkJOPWEsYS53b3JkU2l6ZT0yNjt0cnl7bz1uKDE3NCkuQnVmZmVyfWNhdGNoKHQpe31mdW5jdGlvbiBzKHQsZSxuKXtmb3IodmFyIHI9MCxpPU1hdGgubWluKHQubGVuZ3RoLG4pLGE9ZTthPGk7YSsrKXt2YXIgbz10LmNoYXJDb2RlQXQoYSktNDg7cjw8PTQscnw9bz49NDkmJm88PTU0P28tNDkrMTA6bz49MTcmJm88PTIyP28tMTcrMTA6MTUmb31yZXR1cm4gcn1mdW5jdGlvbiB1KHQsZSxuLHIpe2Zvcih2YXIgaT0wLGE9TWF0aC5taW4odC5sZW5ndGgsbiksbz1lO288YTtvKyspe3ZhciBzPXQuY2hhckNvZGVBdChvKS00ODtpKj1yLGkrPXM+PTQ5P3MtNDkrMTA6cz49MTc/cy0xNysxMDpzfXJldHVybiBpfWEuaXNCTj1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGF8fG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdC5jb25zdHJ1Y3Rvci53b3JkU2l6ZT09PWEud29yZFNpemUmJkFycmF5LmlzQXJyYXkodC53b3Jkcyl9LGEubWF4PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY21wKGUpPjA/dDplfSxhLm1pbj1mdW5jdGlvbih0LGUpe3JldHVybiB0LmNtcChlKTwwP3Q6ZX0sYS5wcm90b3R5cGUuX2luaXQ9ZnVuY3Rpb24odCxlLG4pe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXJldHVybiB0aGlzLl9pbml0TnVtYmVyKHQsZSxuKTtpZihcIm9iamVjdFwiPT10eXBlb2YgdClyZXR1cm4gdGhpcy5faW5pdEFycmF5KHQsZSxuKTtcImhleFwiPT09ZSYmKGU9MTYpLHIoZT09PSgwfGUpJiZlPj0yJiZlPD0zNik7dmFyIGk9MDtcIi1cIj09PSh0PXQudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csXCJcIikpWzBdJiZpKyssMTY9PT1lP3RoaXMuX3BhcnNlSGV4KHQsaSk6dGhpcy5fcGFyc2VCYXNlKHQsZSxpKSxcIi1cIj09PXRbMF0mJih0aGlzLm5lZ2F0aXZlPTEpLHRoaXMuc3RyaXAoKSxcImxlXCI9PT1uJiZ0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksZSxuKX0sYS5wcm90b3R5cGUuX2luaXROdW1iZXI9ZnVuY3Rpb24odCxlLG4pe3Q8MCYmKHRoaXMubmVnYXRpdmU9MSx0PS10KSx0PDY3MTA4ODY0Pyh0aGlzLndvcmRzPVs2NzEwODg2MyZ0XSx0aGlzLmxlbmd0aD0xKTp0PDQ1MDM1OTk2MjczNzA0OTY/KHRoaXMud29yZHM9WzY3MTA4ODYzJnQsdC82NzEwODg2NCY2NzEwODg2M10sdGhpcy5sZW5ndGg9Mik6KHIodDw5MDA3MTk5MjU0NzQwOTkyKSx0aGlzLndvcmRzPVs2NzEwODg2MyZ0LHQvNjcxMDg4NjQmNjcxMDg4NjMsMV0sdGhpcy5sZW5ndGg9MyksXCJsZVwiPT09biYmdGhpcy5faW5pdEFycmF5KHRoaXMudG9BcnJheSgpLGUsbil9LGEucHJvdG90eXBlLl9pbml0QXJyYXk9ZnVuY3Rpb24odCxlLG4pe2lmKHIoXCJudW1iZXJcIj09dHlwZW9mIHQubGVuZ3RoKSx0Lmxlbmd0aDw9MClyZXR1cm4gdGhpcy53b3Jkcz1bMF0sdGhpcy5sZW5ndGg9MSx0aGlzO3RoaXMubGVuZ3RoPU1hdGguY2VpbCh0Lmxlbmd0aC8zKSx0aGlzLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBpPTA7aTx0aGlzLmxlbmd0aDtpKyspdGhpcy53b3Jkc1tpXT0wO3ZhciBhLG8scz0wO2lmKFwiYmVcIj09PW4pZm9yKGk9dC5sZW5ndGgtMSxhPTA7aT49MDtpLT0zKW89dFtpXXx0W2ktMV08PDh8dFtpLTJdPDwxNix0aGlzLndvcmRzW2FdfD1vPDxzJjY3MTA4ODYzLHRoaXMud29yZHNbYSsxXT1vPj4+MjYtcyY2NzEwODg2Mywocys9MjQpPj0yNiYmKHMtPTI2LGErKyk7ZWxzZSBpZihcImxlXCI9PT1uKWZvcihpPTAsYT0wO2k8dC5sZW5ndGg7aSs9MylvPXRbaV18dFtpKzFdPDw4fHRbaSsyXTw8MTYsdGhpcy53b3Jkc1thXXw9bzw8cyY2NzEwODg2Myx0aGlzLndvcmRzW2ErMV09bz4+PjI2LXMmNjcxMDg4NjMsKHMrPTI0KT49MjYmJihzLT0yNixhKyspO3JldHVybiB0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLl9wYXJzZUhleD1mdW5jdGlvbih0LGUpe3RoaXMubGVuZ3RoPU1hdGguY2VpbCgodC5sZW5ndGgtZSkvNiksdGhpcy53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgpO2Zvcih2YXIgbj0wO248dGhpcy5sZW5ndGg7bisrKXRoaXMud29yZHNbbl09MDt2YXIgcixpLGE9MDtmb3Iobj10Lmxlbmd0aC02LHI9MDtuPj1lO24tPTYpaT1zKHQsbixuKzYpLHRoaXMud29yZHNbcl18PWk8PGEmNjcxMDg4NjMsdGhpcy53b3Jkc1tyKzFdfD1pPj4+MjYtYSY0MTk0MzAzLChhKz0yNCk+PTI2JiYoYS09MjYscisrKTtuKzYhPT1lJiYoaT1zKHQsZSxuKzYpLHRoaXMud29yZHNbcl18PWk8PGEmNjcxMDg4NjMsdGhpcy53b3Jkc1tyKzFdfD1pPj4+MjYtYSY0MTk0MzAzKSx0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLl9wYXJzZUJhc2U9ZnVuY3Rpb24odCxlLG4pe3RoaXMud29yZHM9WzBdLHRoaXMubGVuZ3RoPTE7Zm9yKHZhciByPTAsaT0xO2k8PTY3MTA4ODYzO2kqPWUpcisrO3ItLSxpPWkvZXwwO2Zvcih2YXIgYT10Lmxlbmd0aC1uLG89YSVyLHM9TWF0aC5taW4oYSxhLW8pK24sYz0wLGw9bjtsPHM7bCs9ciljPXUodCxsLGwrcixlKSx0aGlzLmltdWxuKGkpLHRoaXMud29yZHNbMF0rYzw2NzEwODg2ND90aGlzLndvcmRzWzBdKz1jOnRoaXMuX2lhZGRuKGMpO2lmKDAhPT1vKXt2YXIgZj0xO2ZvcihjPXUodCxsLHQubGVuZ3RoLGUpLGw9MDtsPG87bCsrKWYqPWU7dGhpcy5pbXVsbihmKSx0aGlzLndvcmRzWzBdK2M8NjcxMDg4NjQ/dGhpcy53b3Jkc1swXSs9Yzp0aGlzLl9pYWRkbihjKX19LGEucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24odCl7dC53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgpO2Zvcih2YXIgZT0wO2U8dGhpcy5sZW5ndGg7ZSsrKXQud29yZHNbZV09dGhpcy53b3Jkc1tlXTt0Lmxlbmd0aD10aGlzLmxlbmd0aCx0Lm5lZ2F0aXZlPXRoaXMubmVnYXRpdmUsdC5yZWQ9dGhpcy5yZWR9LGEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IGEobnVsbCk7cmV0dXJuIHRoaXMuY29weSh0KSx0fSxhLnByb3RvdHlwZS5fZXhwYW5kPWZ1bmN0aW9uKHQpe2Zvcig7dGhpcy5sZW5ndGg8dDspdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXT0wO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS5zdHJpcD1mdW5jdGlvbigpe2Zvcig7dGhpcy5sZW5ndGg+MSYmMD09PXRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV07KXRoaXMubGVuZ3RoLS07cmV0dXJuIHRoaXMuX25vcm1TaWduKCl9LGEucHJvdG90eXBlLl9ub3JtU2lnbj1mdW5jdGlvbigpe3JldHVybiAxPT09dGhpcy5sZW5ndGgmJjA9PT10aGlzLndvcmRzWzBdJiYodGhpcy5uZWdhdGl2ZT0wKSx0aGlzfSxhLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMucmVkP1wiPEJOLVI6IFwiOlwiPEJOOiBcIikrdGhpcy50b1N0cmluZygxNikrXCI+XCJ9O3ZhciBjPVtcIlwiLFwiMFwiLFwiMDBcIixcIjAwMFwiLFwiMDAwMFwiLFwiMDAwMDBcIixcIjAwMDAwMFwiLFwiMDAwMDAwMFwiLFwiMDAwMDAwMDBcIixcIjAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXSxsPVswLDAsMjUsMTYsMTIsMTEsMTAsOSw4LDgsNyw3LDcsNyw2LDYsNiw2LDYsNiw2LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDVdLGY9WzAsMCwzMzU1NDQzMiw0MzA0NjcyMSwxNjc3NzIxNiw0ODgyODEyNSw2MDQ2NjE3Niw0MDM1MzYwNywxNjc3NzIxNiw0MzA0NjcyMSwxZTcsMTk0ODcxNzEsMzU4MzE4MDgsNjI3NDg1MTcsNzUyOTUzNiwxMTM5MDYyNSwxNjc3NzIxNiwyNDEzNzU2OSwzNDAxMjIyNCw0NzA0NTg4MSw2NGU2LDQwODQxMDEsNTE1MzYzMiw2NDM2MzQzLDc5NjI2MjQsOTc2NTYyNSwxMTg4MTM3NiwxNDM0ODkwNywxNzIxMDM2OCwyMDUxMTE0OSwyNDNlNSwyODYyOTE1MSwzMzU1NDQzMiwzOTEzNTM5Myw0NTQzNTQyNCw1MjUyMTg3NSw2MDQ2NjE3Nl07ZnVuY3Rpb24gaCh0LGUsbil7bi5uZWdhdGl2ZT1lLm5lZ2F0aXZlXnQubmVnYXRpdmU7dmFyIHI9dC5sZW5ndGgrZS5sZW5ndGh8MDtuLmxlbmd0aD1yLHI9ci0xfDA7dmFyIGk9MHx0LndvcmRzWzBdLGE9MHxlLndvcmRzWzBdLG89aSphLHM9NjcxMDg4NjMmbyx1PW8vNjcxMDg4NjR8MDtuLndvcmRzWzBdPXM7Zm9yKHZhciBjPTE7YzxyO2MrKyl7Zm9yKHZhciBsPXU+Pj4yNixmPTY3MTA4ODYzJnUsaD1NYXRoLm1pbihjLGUubGVuZ3RoLTEpLHA9TWF0aC5tYXgoMCxjLXQubGVuZ3RoKzEpO3A8PWg7cCsrKXt2YXIgZD1jLXB8MDtsKz0obz0oaT0wfHQud29yZHNbZF0pKihhPTB8ZS53b3Jkc1twXSkrZikvNjcxMDg4NjR8MCxmPTY3MTA4ODYzJm99bi53b3Jkc1tjXT0wfGYsdT0wfGx9cmV0dXJuIDAhPT11P24ud29yZHNbY109MHx1Om4ubGVuZ3RoLS0sbi5zdHJpcCgpfWEucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKHQsZSl7dmFyIG47aWYoZT0wfGV8fDEsMTY9PT0odD10fHwxMCl8fFwiaGV4XCI9PT10KXtuPVwiXCI7Zm9yKHZhciBpPTAsYT0wLG89MDtvPHRoaXMubGVuZ3RoO28rKyl7dmFyIHM9dGhpcy53b3Jkc1tvXSx1PSgxNjc3NzIxNSYoczw8aXxhKSkudG9TdHJpbmcoMTYpO249MCE9PShhPXM+Pj4yNC1pJjE2Nzc3MjE1KXx8byE9PXRoaXMubGVuZ3RoLTE/Y1s2LXUubGVuZ3RoXSt1K246dStuLChpKz0yKT49MjYmJihpLT0yNixvLS0pfWZvcigwIT09YSYmKG49YS50b1N0cmluZygxNikrbik7bi5sZW5ndGglZSE9MDspbj1cIjBcIituO3JldHVybiAwIT09dGhpcy5uZWdhdGl2ZSYmKG49XCItXCIrbiksbn1pZih0PT09KDB8dCkmJnQ+PTImJnQ8PTM2KXt2YXIgaD1sW3RdLHA9Zlt0XTtuPVwiXCI7dmFyIGQ9dGhpcy5jbG9uZSgpO2ZvcihkLm5lZ2F0aXZlPTA7IWQuaXNaZXJvKCk7KXt2YXIgbT1kLm1vZG4ocCkudG9TdHJpbmcodCk7bj0oZD1kLmlkaXZuKHApKS5pc1plcm8oKT9tK246Y1toLW0ubGVuZ3RoXSttK259Zm9yKHRoaXMuaXNaZXJvKCkmJihuPVwiMFwiK24pO24ubGVuZ3RoJWUhPTA7KW49XCIwXCIrbjtyZXR1cm4gMCE9PXRoaXMubmVnYXRpdmUmJihuPVwiLVwiK24pLG59cighMSxcIkJhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzZcIil9LGEucHJvdG90eXBlLnRvTnVtYmVyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy53b3Jkc1swXTtyZXR1cm4gMj09PXRoaXMubGVuZ3RoP3QrPTY3MTA4ODY0KnRoaXMud29yZHNbMV06Mz09PXRoaXMubGVuZ3RoJiYxPT09dGhpcy53b3Jkc1syXT90Kz00NTAzNTk5NjI3MzcwNDk2KzY3MTA4ODY0KnRoaXMud29yZHNbMV06dGhpcy5sZW5ndGg+MiYmcighMSxcIk51bWJlciBjYW4gb25seSBzYWZlbHkgc3RvcmUgdXAgdG8gNTMgYml0c1wiKSwwIT09dGhpcy5uZWdhdGl2ZT8tdDp0fSxhLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1N0cmluZygxNil9LGEucHJvdG90eXBlLnRvQnVmZmVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodm9pZCAwIT09byksdGhpcy50b0FycmF5TGlrZShvLHQsZSl9LGEucHJvdG90eXBlLnRvQXJyYXk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50b0FycmF5TGlrZShBcnJheSx0LGUpfSxhLnByb3RvdHlwZS50b0FycmF5TGlrZT1mdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5ieXRlTGVuZ3RoKCksYT1ufHxNYXRoLm1heCgxLGkpO3IoaTw9YSxcImJ5dGUgYXJyYXkgbG9uZ2VyIHRoYW4gZGVzaXJlZCBsZW5ndGhcIikscihhPjAsXCJSZXF1ZXN0ZWQgYXJyYXkgbGVuZ3RoIDw9IDBcIiksdGhpcy5zdHJpcCgpO3ZhciBvLHMsdT1cImxlXCI9PT1lLGM9bmV3IHQoYSksbD10aGlzLmNsb25lKCk7aWYodSl7Zm9yKHM9MDshbC5pc1plcm8oKTtzKyspbz1sLmFuZGxuKDI1NSksbC5pdXNocm4oOCksY1tzXT1vO2Zvcig7czxhO3MrKyljW3NdPTB9ZWxzZXtmb3Iocz0wO3M8YS1pO3MrKyljW3NdPTA7Zm9yKHM9MDshbC5pc1plcm8oKTtzKyspbz1sLmFuZGxuKDI1NSksbC5pdXNocm4oOCksY1thLXMtMV09b31yZXR1cm4gY30sTWF0aC5jbHozMj9hLnByb3RvdHlwZS5fY291bnRCaXRzPWZ1bmN0aW9uKHQpe3JldHVybiAzMi1NYXRoLmNsejMyKHQpfTphLnByb3RvdHlwZS5fY291bnRCaXRzPWZ1bmN0aW9uKHQpe3ZhciBlPXQsbj0wO3JldHVybiBlPj00MDk2JiYobis9MTMsZT4+Pj0xMyksZT49NjQmJihuKz03LGU+Pj49NyksZT49OCYmKG4rPTQsZT4+Pj00KSxlPj0yJiYobis9MixlPj4+PTIpLG4rZX0sYS5wcm90b3R5cGUuX3plcm9CaXRzPWZ1bmN0aW9uKHQpe2lmKDA9PT10KXJldHVybiAyNjt2YXIgZT10LG49MDtyZXR1cm4gMD09KDgxOTEmZSkmJihuKz0xMyxlPj4+PTEzKSwwPT0oMTI3JmUpJiYobis9NyxlPj4+PTcpLDA9PSgxNSZlKSYmKG4rPTQsZT4+Pj00KSwwPT0oMyZlKSYmKG4rPTIsZT4+Pj0yKSwwPT0oMSZlKSYmbisrLG59LGEucHJvdG90eXBlLmJpdExlbmd0aD1mdW5jdGlvbigpe3ZhciB0PXRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV0sZT10aGlzLl9jb3VudEJpdHModCk7cmV0dXJuIDI2Kih0aGlzLmxlbmd0aC0xKStlfSxhLnByb3RvdHlwZS56ZXJvQml0cz1mdW5jdGlvbigpe2lmKHRoaXMuaXNaZXJvKCkpcmV0dXJuIDA7Zm9yKHZhciB0PTAsZT0wO2U8dGhpcy5sZW5ndGg7ZSsrKXt2YXIgbj10aGlzLl96ZXJvQml0cyh0aGlzLndvcmRzW2VdKTtpZih0Kz1uLDI2IT09bilicmVha31yZXR1cm4gdH0sYS5wcm90b3R5cGUuYnl0ZUxlbmd0aD1mdW5jdGlvbigpe3JldHVybiBNYXRoLmNlaWwodGhpcy5iaXRMZW5ndGgoKS84KX0sYS5wcm90b3R5cGUudG9Ud29zPWZ1bmN0aW9uKHQpe3JldHVybiAwIT09dGhpcy5uZWdhdGl2ZT90aGlzLmFicygpLmlub3RuKHQpLmlhZGRuKDEpOnRoaXMuY2xvbmUoKX0sYS5wcm90b3R5cGUuZnJvbVR3b3M9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGVzdG4odC0xKT90aGlzLm5vdG4odCkuaWFkZG4oMSkuaW5lZygpOnRoaXMuY2xvbmUoKX0sYS5wcm90b3R5cGUuaXNOZWc9ZnVuY3Rpb24oKXtyZXR1cm4gMCE9PXRoaXMubmVnYXRpdmV9LGEucHJvdG90eXBlLm5lZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNsb25lKCkuaW5lZygpfSxhLnByb3RvdHlwZS5pbmVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNaZXJvKCl8fCh0aGlzLm5lZ2F0aXZlXj0xKSx0aGlzfSxhLnByb3RvdHlwZS5pdW9yPWZ1bmN0aW9uKHQpe2Zvcig7dGhpcy5sZW5ndGg8dC5sZW5ndGg7KXRoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MDtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl0aGlzLndvcmRzW2VdPXRoaXMud29yZHNbZV18dC53b3Jkc1tlXTtyZXR1cm4gdGhpcy5zdHJpcCgpfSxhLnByb3RvdHlwZS5pb3I9ZnVuY3Rpb24odCl7cmV0dXJuIHIoMD09KHRoaXMubmVnYXRpdmV8dC5uZWdhdGl2ZSkpLHRoaXMuaXVvcih0KX0sYS5wcm90b3R5cGUub3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubGVuZ3RoPnQubGVuZ3RoP3RoaXMuY2xvbmUoKS5pb3IodCk6dC5jbG9uZSgpLmlvcih0aGlzKX0sYS5wcm90b3R5cGUudW9yPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxlbmd0aD50Lmxlbmd0aD90aGlzLmNsb25lKCkuaXVvcih0KTp0LmNsb25lKCkuaXVvcih0aGlzKX0sYS5wcm90b3R5cGUuaXVhbmQ9ZnVuY3Rpb24odCl7dmFyIGU7ZT10aGlzLmxlbmd0aD50Lmxlbmd0aD90OnRoaXM7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspdGhpcy53b3Jkc1tuXT10aGlzLndvcmRzW25dJnQud29yZHNbbl07cmV0dXJuIHRoaXMubGVuZ3RoPWUubGVuZ3RoLHRoaXMuc3RyaXAoKX0sYS5wcm90b3R5cGUuaWFuZD1mdW5jdGlvbih0KXtyZXR1cm4gcigwPT0odGhpcy5uZWdhdGl2ZXx0Lm5lZ2F0aXZlKSksdGhpcy5pdWFuZCh0KX0sYS5wcm90b3R5cGUuYW5kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxlbmd0aD50Lmxlbmd0aD90aGlzLmNsb25lKCkuaWFuZCh0KTp0LmNsb25lKCkuaWFuZCh0aGlzKX0sYS5wcm90b3R5cGUudWFuZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sZW5ndGg+dC5sZW5ndGg/dGhpcy5jbG9uZSgpLml1YW5kKHQpOnQuY2xvbmUoKS5pdWFuZCh0aGlzKX0sYS5wcm90b3R5cGUuaXV4b3I9ZnVuY3Rpb24odCl7dmFyIGUsbjt0aGlzLmxlbmd0aD50Lmxlbmd0aD8oZT10aGlzLG49dCk6KGU9dCxuPXRoaXMpO2Zvcih2YXIgcj0wO3I8bi5sZW5ndGg7cisrKXRoaXMud29yZHNbcl09ZS53b3Jkc1tyXV5uLndvcmRzW3JdO2lmKHRoaXMhPT1lKWZvcig7cjxlLmxlbmd0aDtyKyspdGhpcy53b3Jkc1tyXT1lLndvcmRzW3JdO3JldHVybiB0aGlzLmxlbmd0aD1lLmxlbmd0aCx0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLml4b3I9ZnVuY3Rpb24odCl7cmV0dXJuIHIoMD09KHRoaXMubmVnYXRpdmV8dC5uZWdhdGl2ZSkpLHRoaXMuaXV4b3IodCl9LGEucHJvdG90eXBlLnhvcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sZW5ndGg+dC5sZW5ndGg/dGhpcy5jbG9uZSgpLml4b3IodCk6dC5jbG9uZSgpLml4b3IodGhpcyl9LGEucHJvdG90eXBlLnV4b3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubGVuZ3RoPnQubGVuZ3RoP3RoaXMuY2xvbmUoKS5pdXhvcih0KTp0LmNsb25lKCkuaXV4b3IodGhpcyl9LGEucHJvdG90eXBlLmlub3RuPWZ1bmN0aW9uKHQpe3IoXCJudW1iZXJcIj09dHlwZW9mIHQmJnQ+PTApO3ZhciBlPTB8TWF0aC5jZWlsKHQvMjYpLG49dCUyNjt0aGlzLl9leHBhbmQoZSksbj4wJiZlLS07Zm9yKHZhciBpPTA7aTxlO2krKyl0aGlzLndvcmRzW2ldPTY3MTA4ODYzJn50aGlzLndvcmRzW2ldO3JldHVybiBuPjAmJih0aGlzLndvcmRzW2ldPX50aGlzLndvcmRzW2ldJjY3MTA4ODYzPj4yNi1uKSx0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLm5vdG49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbm90bih0KX0sYS5wcm90b3R5cGUuc2V0bj1mdW5jdGlvbih0LGUpe3IoXCJudW1iZXJcIj09dHlwZW9mIHQmJnQ+PTApO3ZhciBuPXQvMjZ8MCxpPXQlMjY7cmV0dXJuIHRoaXMuX2V4cGFuZChuKzEpLHRoaXMud29yZHNbbl09ZT90aGlzLndvcmRzW25dfDE8PGk6dGhpcy53b3Jkc1tuXSZ+KDE8PGkpLHRoaXMuc3RyaXAoKX0sYS5wcm90b3R5cGUuaWFkZD1mdW5jdGlvbih0KXt2YXIgZSxuLHI7aWYoMCE9PXRoaXMubmVnYXRpdmUmJjA9PT10Lm5lZ2F0aXZlKXJldHVybiB0aGlzLm5lZ2F0aXZlPTAsZT10aGlzLmlzdWIodCksdGhpcy5uZWdhdGl2ZV49MSx0aGlzLl9ub3JtU2lnbigpO2lmKDA9PT10aGlzLm5lZ2F0aXZlJiYwIT09dC5uZWdhdGl2ZSlyZXR1cm4gdC5uZWdhdGl2ZT0wLGU9dGhpcy5pc3ViKHQpLHQubmVnYXRpdmU9MSxlLl9ub3JtU2lnbigpO3RoaXMubGVuZ3RoPnQubGVuZ3RoPyhuPXRoaXMscj10KToobj10LHI9dGhpcyk7Zm9yKHZhciBpPTAsYT0wO2E8ci5sZW5ndGg7YSsrKWU9KDB8bi53b3Jkc1thXSkrKDB8ci53b3Jkc1thXSkraSx0aGlzLndvcmRzW2FdPTY3MTA4ODYzJmUsaT1lPj4+MjY7Zm9yKDswIT09aSYmYTxuLmxlbmd0aDthKyspZT0oMHxuLndvcmRzW2FdKStpLHRoaXMud29yZHNbYV09NjcxMDg4NjMmZSxpPWU+Pj4yNjtpZih0aGlzLmxlbmd0aD1uLmxlbmd0aCwwIT09aSl0aGlzLndvcmRzW3RoaXMubGVuZ3RoXT1pLHRoaXMubGVuZ3RoKys7ZWxzZSBpZihuIT09dGhpcylmb3IoO2E8bi5sZW5ndGg7YSsrKXRoaXMud29yZHNbYV09bi53b3Jkc1thXTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiAwIT09dC5uZWdhdGl2ZSYmMD09PXRoaXMubmVnYXRpdmU/KHQubmVnYXRpdmU9MCxlPXRoaXMuc3ViKHQpLHQubmVnYXRpdmVePTEsZSk6MD09PXQubmVnYXRpdmUmJjAhPT10aGlzLm5lZ2F0aXZlPyh0aGlzLm5lZ2F0aXZlPTAsZT10LnN1Yih0aGlzKSx0aGlzLm5lZ2F0aXZlPTEsZSk6dGhpcy5sZW5ndGg+dC5sZW5ndGg/dGhpcy5jbG9uZSgpLmlhZGQodCk6dC5jbG9uZSgpLmlhZGQodGhpcyl9LGEucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24odCl7aWYoMCE9PXQubmVnYXRpdmUpe3QubmVnYXRpdmU9MDt2YXIgZT10aGlzLmlhZGQodCk7cmV0dXJuIHQubmVnYXRpdmU9MSxlLl9ub3JtU2lnbigpfWlmKDAhPT10aGlzLm5lZ2F0aXZlKXJldHVybiB0aGlzLm5lZ2F0aXZlPTAsdGhpcy5pYWRkKHQpLHRoaXMubmVnYXRpdmU9MSx0aGlzLl9ub3JtU2lnbigpO3ZhciBuLHIsaT10aGlzLmNtcCh0KTtpZigwPT09aSlyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLHRoaXMubGVuZ3RoPTEsdGhpcy53b3Jkc1swXT0wLHRoaXM7aT4wPyhuPXRoaXMscj10KToobj10LHI9dGhpcyk7Zm9yKHZhciBhPTAsbz0wO288ci5sZW5ndGg7bysrKWE9KGU9KDB8bi53b3Jkc1tvXSktKDB8ci53b3Jkc1tvXSkrYSk+PjI2LHRoaXMud29yZHNbb109NjcxMDg4NjMmZTtmb3IoOzAhPT1hJiZvPG4ubGVuZ3RoO28rKylhPShlPSgwfG4ud29yZHNbb10pK2EpPj4yNix0aGlzLndvcmRzW29dPTY3MTA4ODYzJmU7aWYoMD09PWEmJm88bi5sZW5ndGgmJm4hPT10aGlzKWZvcig7bzxuLmxlbmd0aDtvKyspdGhpcy53b3Jkc1tvXT1uLndvcmRzW29dO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxvKSxuIT09dGhpcyYmKHRoaXMubmVnYXRpdmU9MSksdGhpcy5zdHJpcCgpfSxhLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pc3ViKHQpfTt2YXIgcD1mdW5jdGlvbih0LGUsbil7dmFyIHIsaSxhLG89dC53b3JkcyxzPWUud29yZHMsdT1uLndvcmRzLGM9MCxsPTB8b1swXSxmPTgxOTEmbCxoPWw+Pj4xMyxwPTB8b1sxXSxkPTgxOTEmcCxtPXA+Pj4xMyxnPTB8b1syXSx5PTgxOTEmZyx2PWc+Pj4xMyxiPTB8b1szXSx3PTgxOTEmYixfPWI+Pj4xMyx4PTB8b1s0XSxFPTgxOTEmeCxTPXg+Pj4xMyxOPTB8b1s1XSxJPTgxOTEmTixPPU4+Pj4xMyxrPTB8b1s2XSxBPTgxOTEmayxDPWs+Pj4xMyxQPTB8b1s3XSxUPTgxOTEmUCxSPVA+Pj4xMyxEPTB8b1s4XSxNPTgxOTEmRCxqPUQ+Pj4xMyxCPTB8b1s5XSxMPTgxOTEmQix6PUI+Pj4xMyxGPTB8c1swXSxVPTgxOTEmRixWPUY+Pj4xMyxXPTB8c1sxXSxxPTgxOTEmVywkPVc+Pj4xMyxIPTB8c1syXSxLPTgxOTEmSCxHPUg+Pj4xMyxYPTB8c1szXSxZPTgxOTEmWCxKPVg+Pj4xMyxaPTB8c1s0XSxRPTgxOTEmWix0dD1aPj4+MTMsZXQ9MHxzWzVdLG50PTgxOTEmZXQscnQ9ZXQ+Pj4xMyxpdD0wfHNbNl0sYXQ9ODE5MSZpdCxvdD1pdD4+PjEzLHN0PTB8c1s3XSx1dD04MTkxJnN0LGN0PXN0Pj4+MTMsbHQ9MHxzWzhdLGZ0PTgxOTEmbHQsaHQ9bHQ+Pj4xMyxwdD0wfHNbOV0sZHQ9ODE5MSZwdCxtdD1wdD4+PjEzO24ubmVnYXRpdmU9dC5uZWdhdGl2ZV5lLm5lZ2F0aXZlLG4ubGVuZ3RoPTE5O3ZhciBndD0oYysocj1NYXRoLmltdWwoZixVKSl8MCkrKCg4MTkxJihpPShpPU1hdGguaW11bChmLFYpKStNYXRoLmltdWwoaCxVKXwwKSk8PDEzKXwwO2M9KChhPU1hdGguaW11bChoLFYpKSsoaT4+PjEzKXwwKSsoZ3Q+Pj4yNil8MCxndCY9NjcxMDg4NjMscj1NYXRoLmltdWwoZCxVKSxpPShpPU1hdGguaW11bChkLFYpKStNYXRoLmltdWwobSxVKXwwLGE9TWF0aC5pbXVsKG0sVik7dmFyIHl0PShjKyhyPXIrTWF0aC5pbXVsKGYscSl8MCl8MCkrKCg4MTkxJihpPShpPWkrTWF0aC5pbXVsKGYsJCl8MCkrTWF0aC5pbXVsKGgscSl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChoLCQpfDApKyhpPj4+MTMpfDApKyh5dD4+PjI2KXwwLHl0Jj02NzEwODg2MyxyPU1hdGguaW11bCh5LFUpLGk9KGk9TWF0aC5pbXVsKHksVikpK01hdGguaW11bCh2LFUpfDAsYT1NYXRoLmltdWwodixWKSxyPXIrTWF0aC5pbXVsKGQscSl8MCxpPShpPWkrTWF0aC5pbXVsKGQsJCl8MCkrTWF0aC5pbXVsKG0scSl8MCxhPWErTWF0aC5pbXVsKG0sJCl8MDt2YXIgdnQ9KGMrKHI9citNYXRoLmltdWwoZixLKXwwKXwwKSsoKDgxOTEmKGk9KGk9aStNYXRoLmltdWwoZixHKXwwKStNYXRoLmltdWwoaCxLKXwwKSk8PDEzKXwwO2M9KChhPWErTWF0aC5pbXVsKGgsRyl8MCkrKGk+Pj4xMyl8MCkrKHZ0Pj4+MjYpfDAsdnQmPTY3MTA4ODYzLHI9TWF0aC5pbXVsKHcsVSksaT0oaT1NYXRoLmltdWwodyxWKSkrTWF0aC5pbXVsKF8sVSl8MCxhPU1hdGguaW11bChfLFYpLHI9citNYXRoLmltdWwoeSxxKXwwLGk9KGk9aStNYXRoLmltdWwoeSwkKXwwKStNYXRoLmltdWwodixxKXwwLGE9YStNYXRoLmltdWwodiwkKXwwLHI9citNYXRoLmltdWwoZCxLKXwwLGk9KGk9aStNYXRoLmltdWwoZCxHKXwwKStNYXRoLmltdWwobSxLKXwwLGE9YStNYXRoLmltdWwobSxHKXwwO3ZhciBidD0oYysocj1yK01hdGguaW11bChmLFkpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChmLEopfDApK01hdGguaW11bChoLFkpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoaCxKKXwwKSsoaT4+PjEzKXwwKSsoYnQ+Pj4yNil8MCxidCY9NjcxMDg4NjMscj1NYXRoLmltdWwoRSxVKSxpPShpPU1hdGguaW11bChFLFYpKStNYXRoLmltdWwoUyxVKXwwLGE9TWF0aC5pbXVsKFMsVikscj1yK01hdGguaW11bCh3LHEpfDAsaT0oaT1pK01hdGguaW11bCh3LCQpfDApK01hdGguaW11bChfLHEpfDAsYT1hK01hdGguaW11bChfLCQpfDAscj1yK01hdGguaW11bCh5LEspfDAsaT0oaT1pK01hdGguaW11bCh5LEcpfDApK01hdGguaW11bCh2LEspfDAsYT1hK01hdGguaW11bCh2LEcpfDAscj1yK01hdGguaW11bChkLFkpfDAsaT0oaT1pK01hdGguaW11bChkLEopfDApK01hdGguaW11bChtLFkpfDAsYT1hK01hdGguaW11bChtLEopfDA7dmFyIHd0PShjKyhyPXIrTWF0aC5pbXVsKGYsUSl8MCl8MCkrKCg4MTkxJihpPShpPWkrTWF0aC5pbXVsKGYsdHQpfDApK01hdGguaW11bChoLFEpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoaCx0dCl8MCkrKGk+Pj4xMyl8MCkrKHd0Pj4+MjYpfDAsd3QmPTY3MTA4ODYzLHI9TWF0aC5pbXVsKEksVSksaT0oaT1NYXRoLmltdWwoSSxWKSkrTWF0aC5pbXVsKE8sVSl8MCxhPU1hdGguaW11bChPLFYpLHI9citNYXRoLmltdWwoRSxxKXwwLGk9KGk9aStNYXRoLmltdWwoRSwkKXwwKStNYXRoLmltdWwoUyxxKXwwLGE9YStNYXRoLmltdWwoUywkKXwwLHI9citNYXRoLmltdWwodyxLKXwwLGk9KGk9aStNYXRoLmltdWwodyxHKXwwKStNYXRoLmltdWwoXyxLKXwwLGE9YStNYXRoLmltdWwoXyxHKXwwLHI9citNYXRoLmltdWwoeSxZKXwwLGk9KGk9aStNYXRoLmltdWwoeSxKKXwwKStNYXRoLmltdWwodixZKXwwLGE9YStNYXRoLmltdWwodixKKXwwLHI9citNYXRoLmltdWwoZCxRKXwwLGk9KGk9aStNYXRoLmltdWwoZCx0dCl8MCkrTWF0aC5pbXVsKG0sUSl8MCxhPWErTWF0aC5pbXVsKG0sdHQpfDA7dmFyIF90PShjKyhyPXIrTWF0aC5pbXVsKGYsbnQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChmLHJ0KXwwKStNYXRoLmltdWwoaCxudCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChoLHJ0KXwwKSsoaT4+PjEzKXwwKSsoX3Q+Pj4yNil8MCxfdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoQSxVKSxpPShpPU1hdGguaW11bChBLFYpKStNYXRoLmltdWwoQyxVKXwwLGE9TWF0aC5pbXVsKEMsVikscj1yK01hdGguaW11bChJLHEpfDAsaT0oaT1pK01hdGguaW11bChJLCQpfDApK01hdGguaW11bChPLHEpfDAsYT1hK01hdGguaW11bChPLCQpfDAscj1yK01hdGguaW11bChFLEspfDAsaT0oaT1pK01hdGguaW11bChFLEcpfDApK01hdGguaW11bChTLEspfDAsYT1hK01hdGguaW11bChTLEcpfDAscj1yK01hdGguaW11bCh3LFkpfDAsaT0oaT1pK01hdGguaW11bCh3LEopfDApK01hdGguaW11bChfLFkpfDAsYT1hK01hdGguaW11bChfLEopfDAscj1yK01hdGguaW11bCh5LFEpfDAsaT0oaT1pK01hdGguaW11bCh5LHR0KXwwKStNYXRoLmltdWwodixRKXwwLGE9YStNYXRoLmltdWwodix0dCl8MCxyPXIrTWF0aC5pbXVsKGQsbnQpfDAsaT0oaT1pK01hdGguaW11bChkLHJ0KXwwKStNYXRoLmltdWwobSxudCl8MCxhPWErTWF0aC5pbXVsKG0scnQpfDA7dmFyIHh0PShjKyhyPXIrTWF0aC5pbXVsKGYsYXQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChmLG90KXwwKStNYXRoLmltdWwoaCxhdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChoLG90KXwwKSsoaT4+PjEzKXwwKSsoeHQ+Pj4yNil8MCx4dCY9NjcxMDg4NjMscj1NYXRoLmltdWwoVCxVKSxpPShpPU1hdGguaW11bChULFYpKStNYXRoLmltdWwoUixVKXwwLGE9TWF0aC5pbXVsKFIsVikscj1yK01hdGguaW11bChBLHEpfDAsaT0oaT1pK01hdGguaW11bChBLCQpfDApK01hdGguaW11bChDLHEpfDAsYT1hK01hdGguaW11bChDLCQpfDAscj1yK01hdGguaW11bChJLEspfDAsaT0oaT1pK01hdGguaW11bChJLEcpfDApK01hdGguaW11bChPLEspfDAsYT1hK01hdGguaW11bChPLEcpfDAscj1yK01hdGguaW11bChFLFkpfDAsaT0oaT1pK01hdGguaW11bChFLEopfDApK01hdGguaW11bChTLFkpfDAsYT1hK01hdGguaW11bChTLEopfDAscj1yK01hdGguaW11bCh3LFEpfDAsaT0oaT1pK01hdGguaW11bCh3LHR0KXwwKStNYXRoLmltdWwoXyxRKXwwLGE9YStNYXRoLmltdWwoXyx0dCl8MCxyPXIrTWF0aC5pbXVsKHksbnQpfDAsaT0oaT1pK01hdGguaW11bCh5LHJ0KXwwKStNYXRoLmltdWwodixudCl8MCxhPWErTWF0aC5pbXVsKHYscnQpfDAscj1yK01hdGguaW11bChkLGF0KXwwLGk9KGk9aStNYXRoLmltdWwoZCxvdCl8MCkrTWF0aC5pbXVsKG0sYXQpfDAsYT1hK01hdGguaW11bChtLG90KXwwO3ZhciBFdD0oYysocj1yK01hdGguaW11bChmLHV0KXwwKXwwKSsoKDgxOTEmKGk9KGk9aStNYXRoLmltdWwoZixjdCl8MCkrTWF0aC5pbXVsKGgsdXQpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoaCxjdCl8MCkrKGk+Pj4xMyl8MCkrKEV0Pj4+MjYpfDAsRXQmPTY3MTA4ODYzLHI9TWF0aC5pbXVsKE0sVSksaT0oaT1NYXRoLmltdWwoTSxWKSkrTWF0aC5pbXVsKGosVSl8MCxhPU1hdGguaW11bChqLFYpLHI9citNYXRoLmltdWwoVCxxKXwwLGk9KGk9aStNYXRoLmltdWwoVCwkKXwwKStNYXRoLmltdWwoUixxKXwwLGE9YStNYXRoLmltdWwoUiwkKXwwLHI9citNYXRoLmltdWwoQSxLKXwwLGk9KGk9aStNYXRoLmltdWwoQSxHKXwwKStNYXRoLmltdWwoQyxLKXwwLGE9YStNYXRoLmltdWwoQyxHKXwwLHI9citNYXRoLmltdWwoSSxZKXwwLGk9KGk9aStNYXRoLmltdWwoSSxKKXwwKStNYXRoLmltdWwoTyxZKXwwLGE9YStNYXRoLmltdWwoTyxKKXwwLHI9citNYXRoLmltdWwoRSxRKXwwLGk9KGk9aStNYXRoLmltdWwoRSx0dCl8MCkrTWF0aC5pbXVsKFMsUSl8MCxhPWErTWF0aC5pbXVsKFMsdHQpfDAscj1yK01hdGguaW11bCh3LG50KXwwLGk9KGk9aStNYXRoLmltdWwodyxydCl8MCkrTWF0aC5pbXVsKF8sbnQpfDAsYT1hK01hdGguaW11bChfLHJ0KXwwLHI9citNYXRoLmltdWwoeSxhdCl8MCxpPShpPWkrTWF0aC5pbXVsKHksb3QpfDApK01hdGguaW11bCh2LGF0KXwwLGE9YStNYXRoLmltdWwodixvdCl8MCxyPXIrTWF0aC5pbXVsKGQsdXQpfDAsaT0oaT1pK01hdGguaW11bChkLGN0KXwwKStNYXRoLmltdWwobSx1dCl8MCxhPWErTWF0aC5pbXVsKG0sY3QpfDA7dmFyIFN0PShjKyhyPXIrTWF0aC5pbXVsKGYsZnQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChmLGh0KXwwKStNYXRoLmltdWwoaCxmdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChoLGh0KXwwKSsoaT4+PjEzKXwwKSsoU3Q+Pj4yNil8MCxTdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxVKSxpPShpPU1hdGguaW11bChMLFYpKStNYXRoLmltdWwoeixVKXwwLGE9TWF0aC5pbXVsKHosVikscj1yK01hdGguaW11bChNLHEpfDAsaT0oaT1pK01hdGguaW11bChNLCQpfDApK01hdGguaW11bChqLHEpfDAsYT1hK01hdGguaW11bChqLCQpfDAscj1yK01hdGguaW11bChULEspfDAsaT0oaT1pK01hdGguaW11bChULEcpfDApK01hdGguaW11bChSLEspfDAsYT1hK01hdGguaW11bChSLEcpfDAscj1yK01hdGguaW11bChBLFkpfDAsaT0oaT1pK01hdGguaW11bChBLEopfDApK01hdGguaW11bChDLFkpfDAsYT1hK01hdGguaW11bChDLEopfDAscj1yK01hdGguaW11bChJLFEpfDAsaT0oaT1pK01hdGguaW11bChJLHR0KXwwKStNYXRoLmltdWwoTyxRKXwwLGE9YStNYXRoLmltdWwoTyx0dCl8MCxyPXIrTWF0aC5pbXVsKEUsbnQpfDAsaT0oaT1pK01hdGguaW11bChFLHJ0KXwwKStNYXRoLmltdWwoUyxudCl8MCxhPWErTWF0aC5pbXVsKFMscnQpfDAscj1yK01hdGguaW11bCh3LGF0KXwwLGk9KGk9aStNYXRoLmltdWwodyxvdCl8MCkrTWF0aC5pbXVsKF8sYXQpfDAsYT1hK01hdGguaW11bChfLG90KXwwLHI9citNYXRoLmltdWwoeSx1dCl8MCxpPShpPWkrTWF0aC5pbXVsKHksY3QpfDApK01hdGguaW11bCh2LHV0KXwwLGE9YStNYXRoLmltdWwodixjdCl8MCxyPXIrTWF0aC5pbXVsKGQsZnQpfDAsaT0oaT1pK01hdGguaW11bChkLGh0KXwwKStNYXRoLmltdWwobSxmdCl8MCxhPWErTWF0aC5pbXVsKG0saHQpfDA7dmFyIE50PShjKyhyPXIrTWF0aC5pbXVsKGYsZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChmLG10KXwwKStNYXRoLmltdWwoaCxkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChoLG10KXwwKSsoaT4+PjEzKXwwKSsoTnQ+Pj4yNil8MCxOdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxxKSxpPShpPU1hdGguaW11bChMLCQpKStNYXRoLmltdWwoeixxKXwwLGE9TWF0aC5pbXVsKHosJCkscj1yK01hdGguaW11bChNLEspfDAsaT0oaT1pK01hdGguaW11bChNLEcpfDApK01hdGguaW11bChqLEspfDAsYT1hK01hdGguaW11bChqLEcpfDAscj1yK01hdGguaW11bChULFkpfDAsaT0oaT1pK01hdGguaW11bChULEopfDApK01hdGguaW11bChSLFkpfDAsYT1hK01hdGguaW11bChSLEopfDAscj1yK01hdGguaW11bChBLFEpfDAsaT0oaT1pK01hdGguaW11bChBLHR0KXwwKStNYXRoLmltdWwoQyxRKXwwLGE9YStNYXRoLmltdWwoQyx0dCl8MCxyPXIrTWF0aC5pbXVsKEksbnQpfDAsaT0oaT1pK01hdGguaW11bChJLHJ0KXwwKStNYXRoLmltdWwoTyxudCl8MCxhPWErTWF0aC5pbXVsKE8scnQpfDAscj1yK01hdGguaW11bChFLGF0KXwwLGk9KGk9aStNYXRoLmltdWwoRSxvdCl8MCkrTWF0aC5pbXVsKFMsYXQpfDAsYT1hK01hdGguaW11bChTLG90KXwwLHI9citNYXRoLmltdWwodyx1dCl8MCxpPShpPWkrTWF0aC5pbXVsKHcsY3QpfDApK01hdGguaW11bChfLHV0KXwwLGE9YStNYXRoLmltdWwoXyxjdCl8MCxyPXIrTWF0aC5pbXVsKHksZnQpfDAsaT0oaT1pK01hdGguaW11bCh5LGh0KXwwKStNYXRoLmltdWwodixmdCl8MCxhPWErTWF0aC5pbXVsKHYsaHQpfDA7dmFyIEl0PShjKyhyPXIrTWF0aC5pbXVsKGQsZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChkLG10KXwwKStNYXRoLmltdWwobSxkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChtLG10KXwwKSsoaT4+PjEzKXwwKSsoSXQ+Pj4yNil8MCxJdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxLKSxpPShpPU1hdGguaW11bChMLEcpKStNYXRoLmltdWwoeixLKXwwLGE9TWF0aC5pbXVsKHosRykscj1yK01hdGguaW11bChNLFkpfDAsaT0oaT1pK01hdGguaW11bChNLEopfDApK01hdGguaW11bChqLFkpfDAsYT1hK01hdGguaW11bChqLEopfDAscj1yK01hdGguaW11bChULFEpfDAsaT0oaT1pK01hdGguaW11bChULHR0KXwwKStNYXRoLmltdWwoUixRKXwwLGE9YStNYXRoLmltdWwoUix0dCl8MCxyPXIrTWF0aC5pbXVsKEEsbnQpfDAsaT0oaT1pK01hdGguaW11bChBLHJ0KXwwKStNYXRoLmltdWwoQyxudCl8MCxhPWErTWF0aC5pbXVsKEMscnQpfDAscj1yK01hdGguaW11bChJLGF0KXwwLGk9KGk9aStNYXRoLmltdWwoSSxvdCl8MCkrTWF0aC5pbXVsKE8sYXQpfDAsYT1hK01hdGguaW11bChPLG90KXwwLHI9citNYXRoLmltdWwoRSx1dCl8MCxpPShpPWkrTWF0aC5pbXVsKEUsY3QpfDApK01hdGguaW11bChTLHV0KXwwLGE9YStNYXRoLmltdWwoUyxjdCl8MCxyPXIrTWF0aC5pbXVsKHcsZnQpfDAsaT0oaT1pK01hdGguaW11bCh3LGh0KXwwKStNYXRoLmltdWwoXyxmdCl8MCxhPWErTWF0aC5pbXVsKF8saHQpfDA7dmFyIE90PShjKyhyPXIrTWF0aC5pbXVsKHksZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bCh5LG10KXwwKStNYXRoLmltdWwodixkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bCh2LG10KXwwKSsoaT4+PjEzKXwwKSsoT3Q+Pj4yNil8MCxPdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxZKSxpPShpPU1hdGguaW11bChMLEopKStNYXRoLmltdWwoeixZKXwwLGE9TWF0aC5pbXVsKHosSikscj1yK01hdGguaW11bChNLFEpfDAsaT0oaT1pK01hdGguaW11bChNLHR0KXwwKStNYXRoLmltdWwoaixRKXwwLGE9YStNYXRoLmltdWwoaix0dCl8MCxyPXIrTWF0aC5pbXVsKFQsbnQpfDAsaT0oaT1pK01hdGguaW11bChULHJ0KXwwKStNYXRoLmltdWwoUixudCl8MCxhPWErTWF0aC5pbXVsKFIscnQpfDAscj1yK01hdGguaW11bChBLGF0KXwwLGk9KGk9aStNYXRoLmltdWwoQSxvdCl8MCkrTWF0aC5pbXVsKEMsYXQpfDAsYT1hK01hdGguaW11bChDLG90KXwwLHI9citNYXRoLmltdWwoSSx1dCl8MCxpPShpPWkrTWF0aC5pbXVsKEksY3QpfDApK01hdGguaW11bChPLHV0KXwwLGE9YStNYXRoLmltdWwoTyxjdCl8MCxyPXIrTWF0aC5pbXVsKEUsZnQpfDAsaT0oaT1pK01hdGguaW11bChFLGh0KXwwKStNYXRoLmltdWwoUyxmdCl8MCxhPWErTWF0aC5pbXVsKFMsaHQpfDA7dmFyIGt0PShjKyhyPXIrTWF0aC5pbXVsKHcsZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bCh3LG10KXwwKStNYXRoLmltdWwoXyxkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChfLG10KXwwKSsoaT4+PjEzKXwwKSsoa3Q+Pj4yNil8MCxrdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxRKSxpPShpPU1hdGguaW11bChMLHR0KSkrTWF0aC5pbXVsKHosUSl8MCxhPU1hdGguaW11bCh6LHR0KSxyPXIrTWF0aC5pbXVsKE0sbnQpfDAsaT0oaT1pK01hdGguaW11bChNLHJ0KXwwKStNYXRoLmltdWwoaixudCl8MCxhPWErTWF0aC5pbXVsKGoscnQpfDAscj1yK01hdGguaW11bChULGF0KXwwLGk9KGk9aStNYXRoLmltdWwoVCxvdCl8MCkrTWF0aC5pbXVsKFIsYXQpfDAsYT1hK01hdGguaW11bChSLG90KXwwLHI9citNYXRoLmltdWwoQSx1dCl8MCxpPShpPWkrTWF0aC5pbXVsKEEsY3QpfDApK01hdGguaW11bChDLHV0KXwwLGE9YStNYXRoLmltdWwoQyxjdCl8MCxyPXIrTWF0aC5pbXVsKEksZnQpfDAsaT0oaT1pK01hdGguaW11bChJLGh0KXwwKStNYXRoLmltdWwoTyxmdCl8MCxhPWErTWF0aC5pbXVsKE8saHQpfDA7dmFyIEF0PShjKyhyPXIrTWF0aC5pbXVsKEUsZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChFLG10KXwwKStNYXRoLmltdWwoUyxkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChTLG10KXwwKSsoaT4+PjEzKXwwKSsoQXQ+Pj4yNil8MCxBdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxudCksaT0oaT1NYXRoLmltdWwoTCxydCkpK01hdGguaW11bCh6LG50KXwwLGE9TWF0aC5pbXVsKHoscnQpLHI9citNYXRoLmltdWwoTSxhdCl8MCxpPShpPWkrTWF0aC5pbXVsKE0sb3QpfDApK01hdGguaW11bChqLGF0KXwwLGE9YStNYXRoLmltdWwoaixvdCl8MCxyPXIrTWF0aC5pbXVsKFQsdXQpfDAsaT0oaT1pK01hdGguaW11bChULGN0KXwwKStNYXRoLmltdWwoUix1dCl8MCxhPWErTWF0aC5pbXVsKFIsY3QpfDAscj1yK01hdGguaW11bChBLGZ0KXwwLGk9KGk9aStNYXRoLmltdWwoQSxodCl8MCkrTWF0aC5pbXVsKEMsZnQpfDAsYT1hK01hdGguaW11bChDLGh0KXwwO3ZhciBDdD0oYysocj1yK01hdGguaW11bChJLGR0KXwwKXwwKSsoKDgxOTEmKGk9KGk9aStNYXRoLmltdWwoSSxtdCl8MCkrTWF0aC5pbXVsKE8sZHQpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoTyxtdCl8MCkrKGk+Pj4xMyl8MCkrKEN0Pj4+MjYpfDAsQ3QmPTY3MTA4ODYzLHI9TWF0aC5pbXVsKEwsYXQpLGk9KGk9TWF0aC5pbXVsKEwsb3QpKStNYXRoLmltdWwoeixhdCl8MCxhPU1hdGguaW11bCh6LG90KSxyPXIrTWF0aC5pbXVsKE0sdXQpfDAsaT0oaT1pK01hdGguaW11bChNLGN0KXwwKStNYXRoLmltdWwoaix1dCl8MCxhPWErTWF0aC5pbXVsKGosY3QpfDAscj1yK01hdGguaW11bChULGZ0KXwwLGk9KGk9aStNYXRoLmltdWwoVCxodCl8MCkrTWF0aC5pbXVsKFIsZnQpfDAsYT1hK01hdGguaW11bChSLGh0KXwwO3ZhciBQdD0oYysocj1yK01hdGguaW11bChBLGR0KXwwKXwwKSsoKDgxOTEmKGk9KGk9aStNYXRoLmltdWwoQSxtdCl8MCkrTWF0aC5pbXVsKEMsZHQpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoQyxtdCl8MCkrKGk+Pj4xMyl8MCkrKFB0Pj4+MjYpfDAsUHQmPTY3MTA4ODYzLHI9TWF0aC5pbXVsKEwsdXQpLGk9KGk9TWF0aC5pbXVsKEwsY3QpKStNYXRoLmltdWwoeix1dCl8MCxhPU1hdGguaW11bCh6LGN0KSxyPXIrTWF0aC5pbXVsKE0sZnQpfDAsaT0oaT1pK01hdGguaW11bChNLGh0KXwwKStNYXRoLmltdWwoaixmdCl8MCxhPWErTWF0aC5pbXVsKGosaHQpfDA7dmFyIFR0PShjKyhyPXIrTWF0aC5pbXVsKFQsZHQpfDApfDApKygoODE5MSYoaT0oaT1pK01hdGguaW11bChULG10KXwwKStNYXRoLmltdWwoUixkdCl8MCkpPDwxMyl8MDtjPSgoYT1hK01hdGguaW11bChSLG10KXwwKSsoaT4+PjEzKXwwKSsoVHQ+Pj4yNil8MCxUdCY9NjcxMDg4NjMscj1NYXRoLmltdWwoTCxmdCksaT0oaT1NYXRoLmltdWwoTCxodCkpK01hdGguaW11bCh6LGZ0KXwwLGE9TWF0aC5pbXVsKHosaHQpO3ZhciBSdD0oYysocj1yK01hdGguaW11bChNLGR0KXwwKXwwKSsoKDgxOTEmKGk9KGk9aStNYXRoLmltdWwoTSxtdCl8MCkrTWF0aC5pbXVsKGosZHQpfDApKTw8MTMpfDA7Yz0oKGE9YStNYXRoLmltdWwoaixtdCl8MCkrKGk+Pj4xMyl8MCkrKFJ0Pj4+MjYpfDAsUnQmPTY3MTA4ODYzO3ZhciBEdD0oYysocj1NYXRoLmltdWwoTCxkdCkpfDApKygoODE5MSYoaT0oaT1NYXRoLmltdWwoTCxtdCkpK01hdGguaW11bCh6LGR0KXwwKSk8PDEzKXwwO3JldHVybiBjPSgoYT1NYXRoLmltdWwoeixtdCkpKyhpPj4+MTMpfDApKyhEdD4+PjI2KXwwLER0Jj02NzEwODg2Myx1WzBdPWd0LHVbMV09eXQsdVsyXT12dCx1WzNdPWJ0LHVbNF09d3QsdVs1XT1fdCx1WzZdPXh0LHVbN109RXQsdVs4XT1TdCx1WzldPU50LHVbMTBdPUl0LHVbMTFdPU90LHVbMTJdPWt0LHVbMTNdPUF0LHVbMTRdPUN0LHVbMTVdPVB0LHVbMTZdPVR0LHVbMTddPVJ0LHVbMThdPUR0LDAhPT1jJiYodVsxOV09YyxuLmxlbmd0aCsrKSxufTtmdW5jdGlvbiBkKHQsZSxuKXtyZXR1cm4obmV3IG0pLm11bHAodCxlLG4pfWZ1bmN0aW9uIG0odCxlKXt0aGlzLng9dCx0aGlzLnk9ZX1NYXRoLmltdWx8fChwPWgpLGEucHJvdG90eXBlLm11bFRvPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5sZW5ndGgrdC5sZW5ndGg7cmV0dXJuIDEwPT09dGhpcy5sZW5ndGgmJjEwPT09dC5sZW5ndGg/cCh0aGlzLHQsZSk6bjw2Mz9oKHRoaXMsdCxlKTpuPDEwMjQ/ZnVuY3Rpb24odCxlLG4pe24ubmVnYXRpdmU9ZS5uZWdhdGl2ZV50Lm5lZ2F0aXZlLG4ubGVuZ3RoPXQubGVuZ3RoK2UubGVuZ3RoO2Zvcih2YXIgcj0wLGk9MCxhPTA7YTxuLmxlbmd0aC0xO2ErKyl7dmFyIG89aTtpPTA7Zm9yKHZhciBzPTY3MTA4ODYzJnIsdT1NYXRoLm1pbihhLGUubGVuZ3RoLTEpLGM9TWF0aC5tYXgoMCxhLXQubGVuZ3RoKzEpO2M8PXU7YysrKXt2YXIgbD1hLWMsZj0oMHx0LndvcmRzW2xdKSooMHxlLndvcmRzW2NdKSxoPTY3MTA4ODYzJmY7cz02NzEwODg2MyYoaD1oK3N8MCksaSs9KG89KG89bysoZi82NzEwODg2NHwwKXwwKSsoaD4+PjI2KXwwKT4+PjI2LG8mPTY3MTA4ODYzfW4ud29yZHNbYV09cyxyPW8sbz1pfXJldHVybiAwIT09cj9uLndvcmRzW2FdPXI6bi5sZW5ndGgtLSxuLnN0cmlwKCl9KHRoaXMsdCxlKTpkKHRoaXMsdCxlKX0sbS5wcm90b3R5cGUubWFrZVJCVD1mdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IEFycmF5KHQpLG49YS5wcm90b3R5cGUuX2NvdW50Qml0cyh0KS0xLHI9MDtyPHQ7cisrKWVbcl09dGhpcy5yZXZCaW4ocixuLHQpO3JldHVybiBlfSxtLnByb3RvdHlwZS5yZXZCaW49ZnVuY3Rpb24odCxlLG4pe2lmKDA9PT10fHx0PT09bi0xKXJldHVybiB0O2Zvcih2YXIgcj0wLGk9MDtpPGU7aSsrKXJ8PSgxJnQpPDxlLWktMSx0Pj49MTtyZXR1cm4gcn0sbS5wcm90b3R5cGUucGVybXV0ZT1mdW5jdGlvbih0LGUsbixyLGksYSl7Zm9yKHZhciBvPTA7bzxhO28rKylyW29dPWVbdFtvXV0saVtvXT1uW3Rbb11dfSxtLnByb3RvdHlwZS50cmFuc2Zvcm09ZnVuY3Rpb24odCxlLG4scixpLGEpe3RoaXMucGVybXV0ZShhLHQsZSxuLHIsaSk7Zm9yKHZhciBvPTE7bzxpO288PD0xKWZvcih2YXIgcz1vPDwxLHU9TWF0aC5jb3MoMipNYXRoLlBJL3MpLGM9TWF0aC5zaW4oMipNYXRoLlBJL3MpLGw9MDtsPGk7bCs9cylmb3IodmFyIGY9dSxoPWMscD0wO3A8bztwKyspe3ZhciBkPW5bbCtwXSxtPXJbbCtwXSxnPW5bbCtwK29dLHk9cltsK3Arb10sdj1mKmctaCp5O3k9Zip5K2gqZyxnPXYsbltsK3BdPWQrZyxyW2wrcF09bSt5LG5bbCtwK29dPWQtZyxyW2wrcCtvXT1tLXkscCE9PXMmJih2PXUqZi1jKmgsaD11KmgrYypmLGY9dil9fSxtLnByb3RvdHlwZS5ndWVzc0xlbjEzYj1mdW5jdGlvbih0LGUpe3ZhciBuPTF8TWF0aC5tYXgoZSx0KSxyPTEmbixpPTA7Zm9yKG49bi8yfDA7bjtuPj4+PTEpaSsrO3JldHVybiAxPDxpKzErcn0sbS5wcm90b3R5cGUuY29uanVnYXRlPWZ1bmN0aW9uKHQsZSxuKXtpZighKG48PTEpKWZvcih2YXIgcj0wO3I8bi8yO3IrKyl7dmFyIGk9dFtyXTt0W3JdPXRbbi1yLTFdLHRbbi1yLTFdPWksaT1lW3JdLGVbcl09LWVbbi1yLTFdLGVbbi1yLTFdPS1pfX0sbS5wcm90b3R5cGUubm9ybWFsaXplMTNiPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAscj0wO3I8ZS8yO3IrKyl7dmFyIGk9ODE5MipNYXRoLnJvdW5kKHRbMipyKzFdL2UpK01hdGgucm91bmQodFsyKnJdL2UpK247dFtyXT02NzEwODg2MyZpLG49aTw2NzEwODg2ND8wOmkvNjcxMDg4NjR8MH1yZXR1cm4gdH0sbS5wcm90b3R5cGUuY29udmVydDEzYj1mdW5jdGlvbih0LGUsbixpKXtmb3IodmFyIGE9MCxvPTA7bzxlO28rKylhKz0wfHRbb10sblsyKm9dPTgxOTEmYSxhPj4+PTEzLG5bMipvKzFdPTgxOTEmYSxhPj4+PTEzO2ZvcihvPTIqZTtvPGk7KytvKW5bb109MDtyKDA9PT1hKSxyKDA9PSgtODE5MiZhKSl9LG0ucHJvdG90eXBlLnN0dWI9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKyllW25dPTA7cmV0dXJuIGV9LG0ucHJvdG90eXBlLm11bHA9ZnVuY3Rpb24odCxlLG4pe3ZhciByPTIqdGhpcy5ndWVzc0xlbjEzYih0Lmxlbmd0aCxlLmxlbmd0aCksaT10aGlzLm1ha2VSQlQociksYT10aGlzLnN0dWIociksbz1uZXcgQXJyYXkocikscz1uZXcgQXJyYXkociksdT1uZXcgQXJyYXkociksYz1uZXcgQXJyYXkociksbD1uZXcgQXJyYXkociksZj1uZXcgQXJyYXkociksaD1uLndvcmRzO2gubGVuZ3RoPXIsdGhpcy5jb252ZXJ0MTNiKHQud29yZHMsdC5sZW5ndGgsbyxyKSx0aGlzLmNvbnZlcnQxM2IoZS53b3JkcyxlLmxlbmd0aCxjLHIpLHRoaXMudHJhbnNmb3JtKG8sYSxzLHUscixpKSx0aGlzLnRyYW5zZm9ybShjLGEsbCxmLHIsaSk7Zm9yKHZhciBwPTA7cDxyO3ArKyl7dmFyIGQ9c1twXSpsW3BdLXVbcF0qZltwXTt1W3BdPXNbcF0qZltwXSt1W3BdKmxbcF0sc1twXT1kfXJldHVybiB0aGlzLmNvbmp1Z2F0ZShzLHUsciksdGhpcy50cmFuc2Zvcm0ocyx1LGgsYSxyLGkpLHRoaXMuY29uanVnYXRlKGgsYSxyKSx0aGlzLm5vcm1hbGl6ZTEzYihoLHIpLG4ubmVnYXRpdmU9dC5uZWdhdGl2ZV5lLm5lZ2F0aXZlLG4ubGVuZ3RoPXQubGVuZ3RoK2UubGVuZ3RoLG4uc3RyaXAoKX0sYS5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBhKG51bGwpO3JldHVybiBlLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCt0Lmxlbmd0aCksdGhpcy5tdWxUbyh0LGUpfSxhLnByb3RvdHlwZS5tdWxmPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBhKG51bGwpO3JldHVybiBlLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCt0Lmxlbmd0aCksZCh0aGlzLHQsZSl9LGEucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyh0LHRoaXMpfSxhLnByb3RvdHlwZS5pbXVsbj1mdW5jdGlvbih0KXtyKFwibnVtYmVyXCI9PXR5cGVvZiB0KSxyKHQ8NjcxMDg4NjQpO2Zvcih2YXIgZT0wLG49MDtuPHRoaXMubGVuZ3RoO24rKyl7dmFyIGk9KDB8dGhpcy53b3Jkc1tuXSkqdCxhPSg2NzEwODg2MyZpKSsoNjcxMDg4NjMmZSk7ZT4+PTI2LGUrPWkvNjcxMDg4NjR8MCxlKz1hPj4+MjYsdGhpcy53b3Jkc1tuXT02NzEwODg2MyZhfXJldHVybiAwIT09ZSYmKHRoaXMud29yZHNbbl09ZSx0aGlzLmxlbmd0aCsrKSx0aGlzfSxhLnByb3RvdHlwZS5tdWxuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaW11bG4odCl9LGEucHJvdG90eXBlLnNxcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLm11bCh0aGlzKX0sYS5wcm90b3R5cGUuaXNxcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmltdWwodGhpcy5jbG9uZSgpKX0sYS5wcm90b3R5cGUucG93PWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgQXJyYXkodC5iaXRMZW5ndGgoKSksbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1uLzI2fDAsaT1uJTI2O2Vbbl09KHQud29yZHNbcl0mMTw8aSk+Pj5pfXJldHVybiBlfSh0KTtpZigwPT09ZS5sZW5ndGgpcmV0dXJuIG5ldyBhKDEpO2Zvcih2YXIgbj10aGlzLHI9MDtyPGUubGVuZ3RoJiYwPT09ZVtyXTtyKyssbj1uLnNxcigpKTtpZigrK3I8ZS5sZW5ndGgpZm9yKHZhciBpPW4uc3FyKCk7cjxlLmxlbmd0aDtyKyssaT1pLnNxcigpKTAhPT1lW3JdJiYobj1uLm11bChpKSk7cmV0dXJuIG59LGEucHJvdG90eXBlLml1c2hsbj1mdW5jdGlvbih0KXtyKFwibnVtYmVyXCI9PXR5cGVvZiB0JiZ0Pj0wKTt2YXIgZSxuPXQlMjYsaT0odC1uKS8yNixhPTY3MTA4ODYzPj4+MjYtbjw8MjYtbjtpZigwIT09bil7dmFyIG89MDtmb3IoZT0wO2U8dGhpcy5sZW5ndGg7ZSsrKXt2YXIgcz10aGlzLndvcmRzW2VdJmEsdT0oMHx0aGlzLndvcmRzW2VdKS1zPDxuO3RoaXMud29yZHNbZV09dXxvLG89cz4+PjI2LW59byYmKHRoaXMud29yZHNbZV09byx0aGlzLmxlbmd0aCsrKX1pZigwIT09aSl7Zm9yKGU9dGhpcy5sZW5ndGgtMTtlPj0wO2UtLSl0aGlzLndvcmRzW2UraV09dGhpcy53b3Jkc1tlXTtmb3IoZT0wO2U8aTtlKyspdGhpcy53b3Jkc1tlXT0wO3RoaXMubGVuZ3RoKz1pfXJldHVybiB0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLmlzaGxuPWZ1bmN0aW9uKHQpe3JldHVybiByKDA9PT10aGlzLm5lZ2F0aXZlKSx0aGlzLml1c2hsbih0KX0sYS5wcm90b3R5cGUuaXVzaHJuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtyKFwibnVtYmVyXCI9PXR5cGVvZiB0JiZ0Pj0wKSxpPWU/KGUtZSUyNikvMjY6MDt2YXIgYT10JTI2LG89TWF0aC5taW4oKHQtYSkvMjYsdGhpcy5sZW5ndGgpLHM9NjcxMDg4NjNeNjcxMDg4NjM+Pj5hPDxhLHU9bjtpZihpLT1vLGk9TWF0aC5tYXgoMCxpKSx1KXtmb3IodmFyIGM9MDtjPG87YysrKXUud29yZHNbY109dGhpcy53b3Jkc1tjXTt1Lmxlbmd0aD1vfWlmKDA9PT1vKTtlbHNlIGlmKHRoaXMubGVuZ3RoPm8pZm9yKHRoaXMubGVuZ3RoLT1vLGM9MDtjPHRoaXMubGVuZ3RoO2MrKyl0aGlzLndvcmRzW2NdPXRoaXMud29yZHNbYytvXTtlbHNlIHRoaXMud29yZHNbMF09MCx0aGlzLmxlbmd0aD0xO3ZhciBsPTA7Zm9yKGM9dGhpcy5sZW5ndGgtMTtjPj0wJiYoMCE9PWx8fGM+PWkpO2MtLSl7dmFyIGY9MHx0aGlzLndvcmRzW2NdO3RoaXMud29yZHNbY109bDw8MjYtYXxmPj4+YSxsPWYmc31yZXR1cm4gdSYmMCE9PWwmJih1LndvcmRzW3UubGVuZ3RoKytdPWwpLDA9PT10aGlzLmxlbmd0aCYmKHRoaXMud29yZHNbMF09MCx0aGlzLmxlbmd0aD0xKSx0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLmlzaHJuPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gcigwPT09dGhpcy5uZWdhdGl2ZSksdGhpcy5pdXNocm4odCxlLG4pfSxhLnByb3RvdHlwZS5zaGxuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaXNobG4odCl9LGEucHJvdG90eXBlLnVzaGxuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaGxuKHQpfSxhLnByb3RvdHlwZS5zaHJuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaXNocm4odCl9LGEucHJvdG90eXBlLnVzaHJuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaHJuKHQpfSxhLnByb3RvdHlwZS50ZXN0bj1mdW5jdGlvbih0KXtyKFwibnVtYmVyXCI9PXR5cGVvZiB0JiZ0Pj0wKTt2YXIgZT10JTI2LG49KHQtZSkvMjYsaT0xPDxlO3JldHVybiEodGhpcy5sZW5ndGg8PW4pJiYhISh0aGlzLndvcmRzW25dJmkpfSxhLnByb3RvdHlwZS5pbWFza249ZnVuY3Rpb24odCl7cihcIm51bWJlclwiPT10eXBlb2YgdCYmdD49MCk7dmFyIGU9dCUyNixuPSh0LWUpLzI2O2lmKHIoMD09PXRoaXMubmVnYXRpdmUsXCJpbWFza24gd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlIG51bWJlcnNcIiksdGhpcy5sZW5ndGg8PW4pcmV0dXJuIHRoaXM7aWYoMCE9PWUmJm4rKyx0aGlzLmxlbmd0aD1NYXRoLm1pbihuLHRoaXMubGVuZ3RoKSwwIT09ZSl7dmFyIGk9NjcxMDg4NjNeNjcxMDg4NjM+Pj5lPDxlO3RoaXMud29yZHNbdGhpcy5sZW5ndGgtMV0mPWl9cmV0dXJuIHRoaXMuc3RyaXAoKX0sYS5wcm90b3R5cGUubWFza249ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbWFza24odCl9LGEucHJvdG90eXBlLmlhZGRuPWZ1bmN0aW9uKHQpe3JldHVybiByKFwibnVtYmVyXCI9PXR5cGVvZiB0KSxyKHQ8NjcxMDg4NjQpLHQ8MD90aGlzLmlzdWJuKC10KTowIT09dGhpcy5uZWdhdGl2ZT8xPT09dGhpcy5sZW5ndGgmJigwfHRoaXMud29yZHNbMF0pPHQ/KHRoaXMud29yZHNbMF09dC0oMHx0aGlzLndvcmRzWzBdKSx0aGlzLm5lZ2F0aXZlPTAsdGhpcyk6KHRoaXMubmVnYXRpdmU9MCx0aGlzLmlzdWJuKHQpLHRoaXMubmVnYXRpdmU9MSx0aGlzKTp0aGlzLl9pYWRkbih0KX0sYS5wcm90b3R5cGUuX2lhZGRuPWZ1bmN0aW9uKHQpe3RoaXMud29yZHNbMF0rPXQ7Zm9yKHZhciBlPTA7ZTx0aGlzLmxlbmd0aCYmdGhpcy53b3Jkc1tlXT49NjcxMDg4NjQ7ZSsrKXRoaXMud29yZHNbZV0tPTY3MTA4ODY0LGU9PT10aGlzLmxlbmd0aC0xP3RoaXMud29yZHNbZSsxXT0xOnRoaXMud29yZHNbZSsxXSsrO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxlKzEpLHRoaXN9LGEucHJvdG90eXBlLmlzdWJuPWZ1bmN0aW9uKHQpe2lmKHIoXCJudW1iZXJcIj09dHlwZW9mIHQpLHIodDw2NzEwODg2NCksdDwwKXJldHVybiB0aGlzLmlhZGRuKC10KTtpZigwIT09dGhpcy5uZWdhdGl2ZSlyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLHRoaXMuaWFkZG4odCksdGhpcy5uZWdhdGl2ZT0xLHRoaXM7aWYodGhpcy53b3Jkc1swXS09dCwxPT09dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbMF08MCl0aGlzLndvcmRzWzBdPS10aGlzLndvcmRzWzBdLHRoaXMubmVnYXRpdmU9MTtlbHNlIGZvcih2YXIgZT0wO2U8dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbZV08MDtlKyspdGhpcy53b3Jkc1tlXSs9NjcxMDg4NjQsdGhpcy53b3Jkc1tlKzFdLT0xO3JldHVybiB0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLmFkZG49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pYWRkbih0KX0sYS5wcm90b3R5cGUuc3Vibj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlzdWJuKHQpfSxhLnByb3RvdHlwZS5pYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubmVnYXRpdmU9MCx0aGlzfSxhLnByb3RvdHlwZS5hYnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlhYnMoKX0sYS5wcm90b3R5cGUuX2lzaGxuc3VibXVsPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxhLG89dC5sZW5ndGgrbjt0aGlzLl9leHBhbmQobyk7dmFyIHM9MDtmb3IoaT0wO2k8dC5sZW5ndGg7aSsrKXthPSgwfHRoaXMud29yZHNbaStuXSkrczt2YXIgdT0oMHx0LndvcmRzW2ldKSplO3M9KChhLT02NzEwODg2MyZ1KT4+MjYpLSh1LzY3MTA4ODY0fDApLHRoaXMud29yZHNbaStuXT02NzEwODg2MyZhfWZvcig7aTx0aGlzLmxlbmd0aC1uO2krKylzPShhPSgwfHRoaXMud29yZHNbaStuXSkrcyk+PjI2LHRoaXMud29yZHNbaStuXT02NzEwODg2MyZhO2lmKDA9PT1zKXJldHVybiB0aGlzLnN0cmlwKCk7Zm9yKHIoLTE9PT1zKSxzPTAsaT0wO2k8dGhpcy5sZW5ndGg7aSsrKXM9KGE9LSgwfHRoaXMud29yZHNbaV0pK3MpPj4yNix0aGlzLndvcmRzW2ldPTY3MTA4ODYzJmE7cmV0dXJuIHRoaXMubmVnYXRpdmU9MSx0aGlzLnN0cmlwKCl9LGEucHJvdG90eXBlLl93b3JkRGl2PWZ1bmN0aW9uKHQsZSl7dmFyIG49KHRoaXMubGVuZ3RoLHQubGVuZ3RoKSxyPXRoaXMuY2xvbmUoKSxpPXQsbz0wfGkud29yZHNbaS5sZW5ndGgtMV07MCE9PShuPTI2LXRoaXMuX2NvdW50Qml0cyhvKSkmJihpPWkudXNobG4obiksci5pdXNobG4obiksbz0wfGkud29yZHNbaS5sZW5ndGgtMV0pO3ZhciBzLHU9ci5sZW5ndGgtaS5sZW5ndGg7aWYoXCJtb2RcIiE9PWUpeyhzPW5ldyBhKG51bGwpKS5sZW5ndGg9dSsxLHMud29yZHM9bmV3IEFycmF5KHMubGVuZ3RoKTtmb3IodmFyIGM9MDtjPHMubGVuZ3RoO2MrKylzLndvcmRzW2NdPTB9dmFyIGw9ci5jbG9uZSgpLl9pc2hsbnN1Ym11bChpLDEsdSk7MD09PWwubmVnYXRpdmUmJihyPWwscyYmKHMud29yZHNbdV09MSkpO2Zvcih2YXIgZj11LTE7Zj49MDtmLS0pe3ZhciBoPTY3MTA4ODY0KigwfHIud29yZHNbaS5sZW5ndGgrZl0pKygwfHIud29yZHNbaS5sZW5ndGgrZi0xXSk7Zm9yKGg9TWF0aC5taW4oaC9vfDAsNjcxMDg4NjMpLHIuX2lzaGxuc3VibXVsKGksaCxmKTswIT09ci5uZWdhdGl2ZTspaC0tLHIubmVnYXRpdmU9MCxyLl9pc2hsbnN1Ym11bChpLDEsZiksci5pc1plcm8oKXx8KHIubmVnYXRpdmVePTEpO3MmJihzLndvcmRzW2ZdPWgpfXJldHVybiBzJiZzLnN0cmlwKCksci5zdHJpcCgpLFwiZGl2XCIhPT1lJiYwIT09biYmci5pdXNocm4obikse2RpdjpzfHxudWxsLG1vZDpyfX0sYS5wcm90b3R5cGUuZGl2bW9kPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gcighdC5pc1plcm8oKSksdGhpcy5pc1plcm8oKT97ZGl2Om5ldyBhKDApLG1vZDpuZXcgYSgwKX06MCE9PXRoaXMubmVnYXRpdmUmJjA9PT10Lm5lZ2F0aXZlPyhzPXRoaXMubmVnKCkuZGl2bW9kKHQsZSksXCJtb2RcIiE9PWUmJihpPXMuZGl2Lm5lZygpKSxcImRpdlwiIT09ZSYmKG89cy5tb2QubmVnKCksbiYmMCE9PW8ubmVnYXRpdmUmJm8uaWFkZCh0KSkse2RpdjppLG1vZDpvfSk6MD09PXRoaXMubmVnYXRpdmUmJjAhPT10Lm5lZ2F0aXZlPyhzPXRoaXMuZGl2bW9kKHQubmVnKCksZSksXCJtb2RcIiE9PWUmJihpPXMuZGl2Lm5lZygpKSx7ZGl2OmksbW9kOnMubW9kfSk6MCE9KHRoaXMubmVnYXRpdmUmdC5uZWdhdGl2ZSk/KHM9dGhpcy5uZWcoKS5kaXZtb2QodC5uZWcoKSxlKSxcImRpdlwiIT09ZSYmKG89cy5tb2QubmVnKCksbiYmMCE9PW8ubmVnYXRpdmUmJm8uaXN1Yih0KSkse2RpdjpzLmRpdixtb2Q6b30pOnQubGVuZ3RoPnRoaXMubGVuZ3RofHx0aGlzLmNtcCh0KTwwP3tkaXY6bmV3IGEoMCksbW9kOnRoaXN9OjE9PT10Lmxlbmd0aD9cImRpdlwiPT09ZT97ZGl2OnRoaXMuZGl2bih0LndvcmRzWzBdKSxtb2Q6bnVsbH06XCJtb2RcIj09PWU/e2RpdjpudWxsLG1vZDpuZXcgYSh0aGlzLm1vZG4odC53b3Jkc1swXSkpfTp7ZGl2OnRoaXMuZGl2bih0LndvcmRzWzBdKSxtb2Q6bmV3IGEodGhpcy5tb2RuKHQud29yZHNbMF0pKX06dGhpcy5fd29yZERpdih0LGUpO3ZhciBpLG8sc30sYS5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRpdm1vZCh0LFwiZGl2XCIsITEpLmRpdn0sYS5wcm90b3R5cGUubW9kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRpdm1vZCh0LFwibW9kXCIsITEpLm1vZH0sYS5wcm90b3R5cGUudW1vZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kaXZtb2QodCxcIm1vZFwiLCEwKS5tb2R9LGEucHJvdG90eXBlLmRpdlJvdW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZGl2bW9kKHQpO2lmKGUubW9kLmlzWmVybygpKXJldHVybiBlLmRpdjt2YXIgbj0wIT09ZS5kaXYubmVnYXRpdmU/ZS5tb2QuaXN1Yih0KTplLm1vZCxyPXQudXNocm4oMSksaT10LmFuZGxuKDEpLGE9bi5jbXAocik7cmV0dXJuIGE8MHx8MT09PWkmJjA9PT1hP2UuZGl2OjAhPT1lLmRpdi5uZWdhdGl2ZT9lLmRpdi5pc3VibigxKTplLmRpdi5pYWRkbigxKX0sYS5wcm90b3R5cGUubW9kbj1mdW5jdGlvbih0KXtyKHQ8PTY3MTA4ODYzKTtmb3IodmFyIGU9KDE8PDI2KSV0LG49MCxpPXRoaXMubGVuZ3RoLTE7aT49MDtpLS0pbj0oZSpuKygwfHRoaXMud29yZHNbaV0pKSV0O3JldHVybiBufSxhLnByb3RvdHlwZS5pZGl2bj1mdW5jdGlvbih0KXtyKHQ8PTY3MTA4ODYzKTtmb3IodmFyIGU9MCxuPXRoaXMubGVuZ3RoLTE7bj49MDtuLS0pe3ZhciBpPSgwfHRoaXMud29yZHNbbl0pKzY3MTA4ODY0KmU7dGhpcy53b3Jkc1tuXT1pL3R8MCxlPWkldH1yZXR1cm4gdGhpcy5zdHJpcCgpfSxhLnByb3RvdHlwZS5kaXZuPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNsb25lKCkuaWRpdm4odCl9LGEucHJvdG90eXBlLmVnY2Q9ZnVuY3Rpb24odCl7cigwPT09dC5uZWdhdGl2ZSkscighdC5pc1plcm8oKSk7dmFyIGU9dGhpcyxuPXQuY2xvbmUoKTtlPTAhPT1lLm5lZ2F0aXZlP2UudW1vZCh0KTplLmNsb25lKCk7Zm9yKHZhciBpPW5ldyBhKDEpLG89bmV3IGEoMCkscz1uZXcgYSgwKSx1PW5ldyBhKDEpLGM9MDtlLmlzRXZlbigpJiZuLmlzRXZlbigpOyllLml1c2hybigxKSxuLml1c2hybigxKSwrK2M7Zm9yKHZhciBsPW4uY2xvbmUoKSxmPWUuY2xvbmUoKTshZS5pc1plcm8oKTspe2Zvcih2YXIgaD0wLHA9MTswPT0oZS53b3Jkc1swXSZwKSYmaDwyNjsrK2gscDw8PTEpO2lmKGg+MClmb3IoZS5pdXNocm4oaCk7aC0tID4wOykoaS5pc09kZCgpfHxvLmlzT2RkKCkpJiYoaS5pYWRkKGwpLG8uaXN1YihmKSksaS5pdXNocm4oMSksby5pdXNocm4oMSk7Zm9yKHZhciBkPTAsbT0xOzA9PShuLndvcmRzWzBdJm0pJiZkPDI2OysrZCxtPDw9MSk7aWYoZD4wKWZvcihuLml1c2hybihkKTtkLS0gPjA7KShzLmlzT2RkKCl8fHUuaXNPZGQoKSkmJihzLmlhZGQobCksdS5pc3ViKGYpKSxzLml1c2hybigxKSx1Lml1c2hybigxKTtlLmNtcChuKT49MD8oZS5pc3ViKG4pLGkuaXN1YihzKSxvLmlzdWIodSkpOihuLmlzdWIoZSkscy5pc3ViKGkpLHUuaXN1YihvKSl9cmV0dXJue2E6cyxiOnUsZ2NkOm4uaXVzaGxuKGMpfX0sYS5wcm90b3R5cGUuX2ludm1wPWZ1bmN0aW9uKHQpe3IoMD09PXQubmVnYXRpdmUpLHIoIXQuaXNaZXJvKCkpO3ZhciBlPXRoaXMsbj10LmNsb25lKCk7ZT0wIT09ZS5uZWdhdGl2ZT9lLnVtb2QodCk6ZS5jbG9uZSgpO2Zvcih2YXIgaSxvPW5ldyBhKDEpLHM9bmV3IGEoMCksdT1uLmNsb25lKCk7ZS5jbXBuKDEpPjAmJm4uY21wbigxKT4wOyl7Zm9yKHZhciBjPTAsbD0xOzA9PShlLndvcmRzWzBdJmwpJiZjPDI2OysrYyxsPDw9MSk7aWYoYz4wKWZvcihlLml1c2hybihjKTtjLS0gPjA7KW8uaXNPZGQoKSYmby5pYWRkKHUpLG8uaXVzaHJuKDEpO2Zvcih2YXIgZj0wLGg9MTswPT0obi53b3Jkc1swXSZoKSYmZjwyNjsrK2YsaDw8PTEpO2lmKGY+MClmb3Iobi5pdXNocm4oZik7Zi0tID4wOylzLmlzT2RkKCkmJnMuaWFkZCh1KSxzLml1c2hybigxKTtlLmNtcChuKT49MD8oZS5pc3ViKG4pLG8uaXN1YihzKSk6KG4uaXN1YihlKSxzLmlzdWIobykpfXJldHVybihpPTA9PT1lLmNtcG4oMSk/bzpzKS5jbXBuKDApPDAmJmkuaWFkZCh0KSxpfSxhLnByb3RvdHlwZS5nY2Q9ZnVuY3Rpb24odCl7aWYodGhpcy5pc1plcm8oKSlyZXR1cm4gdC5hYnMoKTtpZih0LmlzWmVybygpKXJldHVybiB0aGlzLmFicygpO3ZhciBlPXRoaXMuY2xvbmUoKSxuPXQuY2xvbmUoKTtlLm5lZ2F0aXZlPTAsbi5uZWdhdGl2ZT0wO2Zvcih2YXIgcj0wO2UuaXNFdmVuKCkmJm4uaXNFdmVuKCk7cisrKWUuaXVzaHJuKDEpLG4uaXVzaHJuKDEpO2Zvcig7Oyl7Zm9yKDtlLmlzRXZlbigpOyllLml1c2hybigxKTtmb3IoO24uaXNFdmVuKCk7KW4uaXVzaHJuKDEpO3ZhciBpPWUuY21wKG4pO2lmKGk8MCl7dmFyIGE9ZTtlPW4sbj1hfWVsc2UgaWYoMD09PWl8fDA9PT1uLmNtcG4oMSkpYnJlYWs7ZS5pc3ViKG4pfXJldHVybiBuLml1c2hsbihyKX0sYS5wcm90b3R5cGUuaW52bT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lZ2NkKHQpLmEudW1vZCh0KX0sYS5wcm90b3R5cGUuaXNFdmVuPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PSgxJnRoaXMud29yZHNbMF0pfSxhLnByb3RvdHlwZS5pc09kZD1mdW5jdGlvbigpe3JldHVybiAxPT0oMSZ0aGlzLndvcmRzWzBdKX0sYS5wcm90b3R5cGUuYW5kbG49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud29yZHNbMF0mdH0sYS5wcm90b3R5cGUuYmluY249ZnVuY3Rpb24odCl7cihcIm51bWJlclwiPT10eXBlb2YgdCk7dmFyIGU9dCUyNixuPSh0LWUpLzI2LGk9MTw8ZTtpZih0aGlzLmxlbmd0aDw9bilyZXR1cm4gdGhpcy5fZXhwYW5kKG4rMSksdGhpcy53b3Jkc1tuXXw9aSx0aGlzO2Zvcih2YXIgYT1pLG89bjswIT09YSYmbzx0aGlzLmxlbmd0aDtvKyspe3ZhciBzPTB8dGhpcy53b3Jkc1tvXTthPShzKz1hKT4+PjI2LHMmPTY3MTA4ODYzLHRoaXMud29yZHNbb109c31yZXR1cm4gMCE9PWEmJih0aGlzLndvcmRzW29dPWEsdGhpcy5sZW5ndGgrKyksdGhpc30sYS5wcm90b3R5cGUuaXNaZXJvPWZ1bmN0aW9uKCl7cmV0dXJuIDE9PT10aGlzLmxlbmd0aCYmMD09PXRoaXMud29yZHNbMF19LGEucHJvdG90eXBlLmNtcG49ZnVuY3Rpb24odCl7dmFyIGUsbj10PDA7aWYoMCE9PXRoaXMubmVnYXRpdmUmJiFuKXJldHVybi0xO2lmKDA9PT10aGlzLm5lZ2F0aXZlJiZuKXJldHVybiAxO2lmKHRoaXMuc3RyaXAoKSx0aGlzLmxlbmd0aD4xKWU9MTtlbHNle24mJih0PS10KSxyKHQ8PTY3MTA4ODYzLFwiTnVtYmVyIGlzIHRvbyBiaWdcIik7dmFyIGk9MHx0aGlzLndvcmRzWzBdO2U9aT09PXQ/MDppPHQ/LTE6MX1yZXR1cm4gMCE9PXRoaXMubmVnYXRpdmU/MHwtZTplfSxhLnByb3RvdHlwZS5jbXA9ZnVuY3Rpb24odCl7aWYoMCE9PXRoaXMubmVnYXRpdmUmJjA9PT10Lm5lZ2F0aXZlKXJldHVybi0xO2lmKDA9PT10aGlzLm5lZ2F0aXZlJiYwIT09dC5uZWdhdGl2ZSlyZXR1cm4gMTt2YXIgZT10aGlzLnVjbXAodCk7cmV0dXJuIDAhPT10aGlzLm5lZ2F0aXZlPzB8LWU6ZX0sYS5wcm90b3R5cGUudWNtcD1mdW5jdGlvbih0KXtpZih0aGlzLmxlbmd0aD50Lmxlbmd0aClyZXR1cm4gMTtpZih0aGlzLmxlbmd0aDx0Lmxlbmd0aClyZXR1cm4tMTtmb3IodmFyIGU9MCxuPXRoaXMubGVuZ3RoLTE7bj49MDtuLS0pe3ZhciByPTB8dGhpcy53b3Jkc1tuXSxpPTB8dC53b3Jkc1tuXTtpZihyIT09aSl7cjxpP2U9LTE6cj5pJiYoZT0xKTticmVha319cmV0dXJuIGV9LGEucHJvdG90eXBlLmd0bj1mdW5jdGlvbih0KXtyZXR1cm4gMT09PXRoaXMuY21wbih0KX0sYS5wcm90b3R5cGUuZ3Q9ZnVuY3Rpb24odCl7cmV0dXJuIDE9PT10aGlzLmNtcCh0KX0sYS5wcm90b3R5cGUuZ3Rlbj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jbXBuKHQpPj0wfSxhLnByb3RvdHlwZS5ndGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY21wKHQpPj0wfSxhLnByb3RvdHlwZS5sdG49ZnVuY3Rpb24odCl7cmV0dXJuLTE9PT10aGlzLmNtcG4odCl9LGEucHJvdG90eXBlLmx0PWZ1bmN0aW9uKHQpe3JldHVybi0xPT09dGhpcy5jbXAodCl9LGEucHJvdG90eXBlLmx0ZW49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY21wbih0KTw9MH0sYS5wcm90b3R5cGUubHRlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNtcCh0KTw9MH0sYS5wcm90b3R5cGUuZXFuPWZ1bmN0aW9uKHQpe3JldHVybiAwPT09dGhpcy5jbXBuKHQpfSxhLnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtyZXR1cm4gMD09PXRoaXMuY21wKHQpfSxhLnJlZD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHgodCl9LGEucHJvdG90eXBlLnRvUmVkPWZ1bmN0aW9uKHQpe3JldHVybiByKCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIikscigwPT09dGhpcy5uZWdhdGl2ZSxcInJlZCB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmVzXCIpLHQuY29udmVydFRvKHRoaXMpLl9mb3JjZVJlZCh0KX0sYS5wcm90b3R5cGUuZnJvbVJlZD1mdW5jdGlvbigpe3JldHVybiByKHRoaXMucmVkLFwiZnJvbVJlZCB3b3JrcyBvbmx5IHdpdGggbnVtYmVycyBpbiByZWR1Y3Rpb24gY29udGV4dFwiKSx0aGlzLnJlZC5jb252ZXJ0RnJvbSh0aGlzKX0sYS5wcm90b3R5cGUuX2ZvcmNlUmVkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJlZD10LHRoaXN9LGEucHJvdG90eXBlLmZvcmNlUmVkPWZ1bmN0aW9uKHQpe3JldHVybiByKCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIiksdGhpcy5fZm9yY2VSZWQodCl9LGEucHJvdG90eXBlLnJlZEFkZD1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZEFkZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuYWRkKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZElBZGQ9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcy5yZWQsXCJyZWRJQWRkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5pYWRkKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZFN1Yj1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZFN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuc3ViKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZElTdWI9ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcy5yZWQsXCJyZWRJU3ViIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5pc3ViKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZFNobD1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZFNobCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuc2hsKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZE11bD1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZE11bCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTIodGhpcyx0KSx0aGlzLnJlZC5tdWwodGhpcyx0KX0sYS5wcm90b3R5cGUucmVkSU11bD1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZE11bCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTIodGhpcyx0KSx0aGlzLnJlZC5pbXVsKHRoaXMsdCl9LGEucHJvdG90eXBlLnJlZFNxcj1mdW5jdGlvbigpe3JldHVybiByKHRoaXMucmVkLFwicmVkU3FyIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5zcXIodGhpcyl9LGEucHJvdG90eXBlLnJlZElTcXI9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZElTcXIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpLHRoaXMucmVkLmlzcXIodGhpcyl9LGEucHJvdG90eXBlLnJlZFNxcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZFNxcnQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpLHRoaXMucmVkLnNxcnQodGhpcyl9LGEucHJvdG90eXBlLnJlZEludm09ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLnJlZCxcInJlZEludm0gd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpLHRoaXMucmVkLmludm0odGhpcyl9LGEucHJvdG90eXBlLnJlZE5lZz1mdW5jdGlvbigpe3JldHVybiByKHRoaXMucmVkLFwicmVkTmVnIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5uZWcodGhpcyl9LGEucHJvdG90eXBlLnJlZFBvdz1mdW5jdGlvbih0KXtyZXR1cm4gcih0aGlzLnJlZCYmIXQucmVkLFwicmVkUG93KG5vcm1hbE51bSlcIiksdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyksdGhpcy5yZWQucG93KHRoaXMsdCl9O3ZhciBnPXtrMjU2Om51bGwscDIyNDpudWxsLHAxOTI6bnVsbCxwMjU1MTk6bnVsbH07ZnVuY3Rpb24geSh0LGUpe3RoaXMubmFtZT10LHRoaXMucD1uZXcgYShlLDE2KSx0aGlzLm49dGhpcy5wLmJpdExlbmd0aCgpLHRoaXMuaz1uZXcgYSgxKS5pdXNobG4odGhpcy5uKS5pc3ViKHRoaXMucCksdGhpcy50bXA9dGhpcy5fdG1wKCl9ZnVuY3Rpb24gdigpe3kuY2FsbCh0aGlzLFwiazI1NlwiLFwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZjMmZcIil9ZnVuY3Rpb24gYigpe3kuY2FsbCh0aGlzLFwicDIyNFwiLFwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIil9ZnVuY3Rpb24gdygpe3kuY2FsbCh0aGlzLFwicDE5MlwiLFwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmZcIil9ZnVuY3Rpb24gXygpe3kuY2FsbCh0aGlzLFwiMjU1MTlcIixcIjdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWRcIil9ZnVuY3Rpb24geCh0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9YS5fcHJpbWUodCk7dGhpcy5tPWUucCx0aGlzLnByaW1lPWV9ZWxzZSByKHQuZ3RuKDEpLFwibW9kdWx1cyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAxXCIpLHRoaXMubT10LHRoaXMucHJpbWU9bnVsbH1mdW5jdGlvbiBFKHQpe3guY2FsbCh0aGlzLHQpLHRoaXMuc2hpZnQ9dGhpcy5tLmJpdExlbmd0aCgpLHRoaXMuc2hpZnQlMjYhPTAmJih0aGlzLnNoaWZ0Kz0yNi10aGlzLnNoaWZ0JTI2KSx0aGlzLnI9bmV3IGEoMSkuaXVzaGxuKHRoaXMuc2hpZnQpLHRoaXMucjI9dGhpcy5pbW9kKHRoaXMuci5zcXIoKSksdGhpcy5yaW52PXRoaXMuci5faW52bXAodGhpcy5tKSx0aGlzLm1pbnY9dGhpcy5yaW52Lm11bCh0aGlzLnIpLmlzdWJuKDEpLmRpdih0aGlzLm0pLHRoaXMubWludj10aGlzLm1pbnYudW1vZCh0aGlzLnIpLHRoaXMubWludj10aGlzLnIuc3ViKHRoaXMubWludil9eS5wcm90b3R5cGUuX3RtcD1mdW5jdGlvbigpe3ZhciB0PW5ldyBhKG51bGwpO3JldHVybiB0LndvcmRzPW5ldyBBcnJheShNYXRoLmNlaWwodGhpcy5uLzEzKSksdH0seS5wcm90b3R5cGUuaXJlZHVjZT1mdW5jdGlvbih0KXt2YXIgZSxuPXQ7ZG97dGhpcy5zcGxpdChuLHRoaXMudG1wKSxlPShuPShuPXRoaXMuaW11bEsobikpLmlhZGQodGhpcy50bXApKS5iaXRMZW5ndGgoKX13aGlsZShlPnRoaXMubik7dmFyIHI9ZTx0aGlzLm4/LTE6bi51Y21wKHRoaXMucCk7cmV0dXJuIDA9PT1yPyhuLndvcmRzWzBdPTAsbi5sZW5ndGg9MSk6cj4wP24uaXN1Yih0aGlzLnApOm4uc3RyaXAoKSxufSx5LnByb3RvdHlwZS5zcGxpdD1mdW5jdGlvbih0LGUpe3QuaXVzaHJuKHRoaXMubiwwLGUpfSx5LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbih0KXtyZXR1cm4gdC5pbXVsKHRoaXMuayl9LGkodix5KSx2LnByb3RvdHlwZS5zcGxpdD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1NYXRoLm1pbih0Lmxlbmd0aCw5KSxyPTA7cjxuO3IrKyllLndvcmRzW3JdPXQud29yZHNbcl07aWYoZS5sZW5ndGg9bix0Lmxlbmd0aDw9OSlyZXR1cm4gdC53b3Jkc1swXT0wLHZvaWQodC5sZW5ndGg9MSk7dmFyIGk9dC53b3Jkc1s5XTtmb3IoZS53b3Jkc1tlLmxlbmd0aCsrXT00MTk0MzAzJmkscj0xMDtyPHQubGVuZ3RoO3IrKyl7dmFyIGE9MHx0LndvcmRzW3JdO3Qud29yZHNbci0xMF09KDQxOTQzMDMmYSk8PDR8aT4+PjIyLGk9YX1pPj4+PTIyLHQud29yZHNbci0xMF09aSwwPT09aSYmdC5sZW5ndGg+MTA/dC5sZW5ndGgtPTEwOnQubGVuZ3RoLT05fSx2LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbih0KXt0LndvcmRzW3QubGVuZ3RoXT0wLHQud29yZHNbdC5sZW5ndGgrMV09MCx0Lmxlbmd0aCs9Mjtmb3IodmFyIGU9MCxuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPTB8dC53b3Jkc1tuXTtlKz05Nzcqcix0LndvcmRzW25dPTY3MTA4ODYzJmUsZT02NCpyKyhlLzY3MTA4ODY0fDApfXJldHVybiAwPT09dC53b3Jkc1t0Lmxlbmd0aC0xXSYmKHQubGVuZ3RoLS0sMD09PXQud29yZHNbdC5sZW5ndGgtMV0mJnQubGVuZ3RoLS0pLHR9LGkoYix5KSxpKHcseSksaShfLHkpLF8ucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9MTkqKDB8dC53b3Jkc1tuXSkrZSxpPTY3MTA4ODYzJnI7cj4+Pj0yNix0LndvcmRzW25dPWksZT1yfXJldHVybiAwIT09ZSYmKHQud29yZHNbdC5sZW5ndGgrK109ZSksdH0sYS5fcHJpbWU9ZnVuY3Rpb24odCl7aWYoZ1t0XSlyZXR1cm4gZ1t0XTt2YXIgZTtpZihcImsyNTZcIj09PXQpZT1uZXcgdjtlbHNlIGlmKFwicDIyNFwiPT09dCllPW5ldyBiO2Vsc2UgaWYoXCJwMTkyXCI9PT10KWU9bmV3IHc7ZWxzZXtpZihcInAyNTUxOVwiIT09dCl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHByaW1lIFwiK3QpO2U9bmV3IF99cmV0dXJuIGdbdF09ZSxlfSx4LnByb3RvdHlwZS5fdmVyaWZ5MT1mdW5jdGlvbih0KXtyKDA9PT10Lm5lZ2F0aXZlLFwicmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXNcIikscih0LnJlZCxcInJlZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIil9LHgucHJvdG90eXBlLl92ZXJpZnkyPWZ1bmN0aW9uKHQsZSl7cigwPT0odC5uZWdhdGl2ZXxlLm5lZ2F0aXZlKSxcInJlZCB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmVzXCIpLHIodC5yZWQmJnQucmVkPT09ZS5yZWQsXCJyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpfSx4LnByb3RvdHlwZS5pbW9kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnByaW1lP3RoaXMucHJpbWUuaXJlZHVjZSh0KS5fZm9yY2VSZWQodGhpcyk6dC51bW9kKHRoaXMubSkuX2ZvcmNlUmVkKHRoaXMpfSx4LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNaZXJvKCk/dC5jbG9uZSgpOnRoaXMubS5zdWIodCkuX2ZvcmNlUmVkKHRoaXMpfSx4LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCxlKXt0aGlzLl92ZXJpZnkyKHQsZSk7dmFyIG49dC5hZGQoZSk7cmV0dXJuIG4uY21wKHRoaXMubSk+PTAmJm4uaXN1Yih0aGlzLm0pLG4uX2ZvcmNlUmVkKHRoaXMpfSx4LnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uKHQsZSl7dGhpcy5fdmVyaWZ5Mih0LGUpO3ZhciBuPXQuaWFkZChlKTtyZXR1cm4gbi5jbXAodGhpcy5tKT49MCYmbi5pc3ViKHRoaXMubSksbn0seC5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKHQsZSl7dGhpcy5fdmVyaWZ5Mih0LGUpO3ZhciBuPXQuc3ViKGUpO3JldHVybiBuLmNtcG4oMCk8MCYmbi5pYWRkKHRoaXMubSksbi5fZm9yY2VSZWQodGhpcyl9LHgucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24odCxlKXt0aGlzLl92ZXJpZnkyKHQsZSk7dmFyIG49dC5pc3ViKGUpO3JldHVybiBuLmNtcG4oMCk8MCYmbi5pYWRkKHRoaXMubSksbn0seC5wcm90b3R5cGUuc2hsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTEodCksdGhpcy5pbW9kKHQudXNobG4oZSkpfSx4LnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIodCxlKSx0aGlzLmltb2QodC5pbXVsKGUpKX0seC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIodCxlKSx0aGlzLmltb2QodC5tdWwoZSkpfSx4LnByb3RvdHlwZS5pc3FyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmltdWwodCx0LmNsb25lKCkpfSx4LnByb3RvdHlwZS5zcXI9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubXVsKHQsdCl9LHgucHJvdG90eXBlLnNxcnQ9ZnVuY3Rpb24odCl7aWYodC5pc1plcm8oKSlyZXR1cm4gdC5jbG9uZSgpO3ZhciBlPXRoaXMubS5hbmRsbigzKTtpZihyKGUlMj09MSksMz09PWUpe3ZhciBuPXRoaXMubS5hZGQobmV3IGEoMSkpLml1c2hybigyKTtyZXR1cm4gdGhpcy5wb3codCxuKX1mb3IodmFyIGk9dGhpcy5tLnN1Ym4oMSksbz0wOyFpLmlzWmVybygpJiYwPT09aS5hbmRsbigxKTspbysrLGkuaXVzaHJuKDEpO3IoIWkuaXNaZXJvKCkpO3ZhciBzPW5ldyBhKDEpLnRvUmVkKHRoaXMpLHU9cy5yZWROZWcoKSxjPXRoaXMubS5zdWJuKDEpLml1c2hybigxKSxsPXRoaXMubS5iaXRMZW5ndGgoKTtmb3IobD1uZXcgYSgyKmwqbCkudG9SZWQodGhpcyk7MCE9PXRoaXMucG93KGwsYykuY21wKHUpOylsLnJlZElBZGQodSk7Zm9yKHZhciBmPXRoaXMucG93KGwsaSksaD10aGlzLnBvdyh0LGkuYWRkbigxKS5pdXNocm4oMSkpLHA9dGhpcy5wb3codCxpKSxkPW87MCE9PXAuY21wKHMpOyl7Zm9yKHZhciBtPXAsZz0wOzAhPT1tLmNtcChzKTtnKyspbT1tLnJlZFNxcigpO3IoZzxkKTt2YXIgeT10aGlzLnBvdyhmLG5ldyBhKDEpLml1c2hsbihkLWctMSkpO2g9aC5yZWRNdWwoeSksZj15LnJlZFNxcigpLHA9cC5yZWRNdWwoZiksZD1nfXJldHVybiBofSx4LnByb3RvdHlwZS5pbnZtPWZ1bmN0aW9uKHQpe3ZhciBlPXQuX2ludm1wKHRoaXMubSk7cmV0dXJuIDAhPT1lLm5lZ2F0aXZlPyhlLm5lZ2F0aXZlPTAsdGhpcy5pbW9kKGUpLnJlZE5lZygpKTp0aGlzLmltb2QoZSl9LHgucHJvdG90eXBlLnBvdz1mdW5jdGlvbih0LGUpe2lmKGUuaXNaZXJvKCkpcmV0dXJuIG5ldyBhKDEpLnRvUmVkKHRoaXMpO2lmKDA9PT1lLmNtcG4oMSkpcmV0dXJuIHQuY2xvbmUoKTt2YXIgbj1uZXcgQXJyYXkoMTYpO25bMF09bmV3IGEoMSkudG9SZWQodGhpcyksblsxXT10O2Zvcih2YXIgcj0yO3I8bi5sZW5ndGg7cisrKW5bcl09dGhpcy5tdWwobltyLTFdLHQpO3ZhciBpPW5bMF0sbz0wLHM9MCx1PWUuYml0TGVuZ3RoKCklMjY7Zm9yKDA9PT11JiYodT0yNikscj1lLmxlbmd0aC0xO3I+PTA7ci0tKXtmb3IodmFyIGM9ZS53b3Jkc1tyXSxsPXUtMTtsPj0wO2wtLSl7dmFyIGY9Yz4+bCYxO2khPT1uWzBdJiYoaT10aGlzLnNxcihpKSksMCE9PWZ8fDAhPT1vPyhvPDw9MSxvfD1mLCg0PT09KytzfHwwPT09ciYmMD09PWwpJiYoaT10aGlzLm11bChpLG5bb10pLHM9MCxvPTApKTpzPTB9dT0yNn1yZXR1cm4gaX0seC5wcm90b3R5cGUuY29udmVydFRvPWZ1bmN0aW9uKHQpe3ZhciBlPXQudW1vZCh0aGlzLm0pO3JldHVybiBlPT09dD9lLmNsb25lKCk6ZX0seC5wcm90b3R5cGUuY29udmVydEZyb209ZnVuY3Rpb24odCl7dmFyIGU9dC5jbG9uZSgpO3JldHVybiBlLnJlZD1udWxsLGV9LGEubW9udD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEUodCl9LGkoRSx4KSxFLnByb3RvdHlwZS5jb252ZXJ0VG89ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaW1vZCh0LnVzaGxuKHRoaXMuc2hpZnQpKX0sRS5wcm90b3R5cGUuY29udmVydEZyb209ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbW9kKHQubXVsKHRoaXMucmludikpO3JldHVybiBlLnJlZD1udWxsLGV9LEUucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24odCxlKXtpZih0LmlzWmVybygpfHxlLmlzWmVybygpKXJldHVybiB0LndvcmRzWzBdPTAsdC5sZW5ndGg9MSx0O3ZhciBuPXQuaW11bChlKSxyPW4ubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pLGk9bi5pc3ViKHIpLml1c2hybih0aGlzLnNoaWZ0KSxhPWk7cmV0dXJuIGkuY21wKHRoaXMubSk+PTA/YT1pLmlzdWIodGhpcy5tKTppLmNtcG4oMCk8MCYmKGE9aS5pYWRkKHRoaXMubSkpLGEuX2ZvcmNlUmVkKHRoaXMpfSxFLnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24odCxlKXtpZih0LmlzWmVybygpfHxlLmlzWmVybygpKXJldHVybiBuZXcgYSgwKS5fZm9yY2VSZWQodGhpcyk7dmFyIG49dC5tdWwoZSkscj1uLm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKSxpPW4uaXN1YihyKS5pdXNocm4odGhpcy5zaGlmdCksbz1pO3JldHVybiBpLmNtcCh0aGlzLm0pPj0wP289aS5pc3ViKHRoaXMubSk6aS5jbXBuKDApPDAmJihvPWkuaWFkZCh0aGlzLm0pKSxvLl9mb3JjZVJlZCh0aGlzKX0sRS5wcm90b3R5cGUuaW52bT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5pbW9kKHQuX2ludm1wKHRoaXMubSkubXVsKHRoaXMucjIpKS5fZm9yY2VSZWQodGhpcyl9fSh0LHRoaXMpfSkuY2FsbCh0aGlzLG4oMTczKSh0KSl9LCwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPWU7ci52ZXJzaW9uPW4oMTgwKS52ZXJzaW9uLHIudXRpbHM9bigxODEpLHIucmFuZD1uKDEwNyksci5jdXJ2ZT1uKDQ1KSxyLmN1cnZlcz1uKDE4Niksci5lYz1uKDE5NCksci5lZGRzYT1uKDE5OCl9LCwsZnVuY3Rpb24odCxlKXt2YXIgbjtuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KCk7dHJ5e249bnx8bmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKX1jYXRjaCh0KXtcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiYobj13aW5kb3cpfXQuZXhwb3J0cz1ufSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCxlKXtpZighdCl0aHJvdyBuZXcgRXJyb3IoZXx8XCJBc3NlcnRpb24gZmFpbGVkXCIpfXQuZXhwb3J0cz1uLG4uZXF1YWw9ZnVuY3Rpb24odCxlLG4pe2lmKHQhPWUpdGhyb3cgbmV3IEVycm9yKG58fFwiQXNzZXJ0aW9uIGZhaWxlZDogXCIrdCtcIiAhPSBcIitlKX19LCxmdW5jdGlvbih0LGUpe3ZhciBuLHIsaT10LmV4cG9ydHM9e307ZnVuY3Rpb24gYSgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gbygpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBzKHQpe2lmKG49PT1zZXRUaW1lb3V0KXJldHVybiBzZXRUaW1lb3V0KHQsMCk7aWYoKG49PT1hfHwhbikmJnNldFRpbWVvdXQpcmV0dXJuIG49c2V0VGltZW91dCxzZXRUaW1lb3V0KHQsMCk7dHJ5e3JldHVybiBuKHQsMCl9Y2F0Y2goZSl7dHJ5e3JldHVybiBuLmNhbGwobnVsbCx0LDApfWNhdGNoKGUpe3JldHVybiBuLmNhbGwodGhpcyx0LDApfX19IWZ1bmN0aW9uKCl7dHJ5e249XCJmdW5jdGlvblwiPT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OmF9Y2F0Y2godCl7bj1hfXRyeXtyPVwiZnVuY3Rpb25cIj09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6b31jYXRjaCh0KXtyPW99fSgpO3ZhciB1LGM9W10sbD0hMSxmPS0xO2Z1bmN0aW9uIGgoKXtsJiZ1JiYobD0hMSx1Lmxlbmd0aD9jPXUuY29uY2F0KGMpOmY9LTEsYy5sZW5ndGgmJnAoKSl9ZnVuY3Rpb24gcCgpe2lmKCFsKXt2YXIgdD1zKGgpO2w9ITA7Zm9yKHZhciBlPWMubGVuZ3RoO2U7KXtmb3IodT1jLGM9W107KytmPGU7KXUmJnVbZl0ucnVuKCk7Zj0tMSxlPWMubGVuZ3RofXU9bnVsbCxsPSExLGZ1bmN0aW9uKHQpe2lmKHI9PT1jbGVhclRpbWVvdXQpcmV0dXJuIGNsZWFyVGltZW91dCh0KTtpZigocj09PW98fCFyKSYmY2xlYXJUaW1lb3V0KXJldHVybiByPWNsZWFyVGltZW91dCxjbGVhclRpbWVvdXQodCk7dHJ5e3IodCl9Y2F0Y2goZSl7dHJ5e3JldHVybiByLmNhbGwobnVsbCx0KX1jYXRjaChlKXtyZXR1cm4gci5jYWxsKHRoaXMsdCl9fX0odCl9fWZ1bmN0aW9uIGQodCxlKXt0aGlzLmZ1bj10LHRoaXMuYXJyYXk9ZX1mdW5jdGlvbiBtKCl7fWkubmV4dFRpY2s9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKWZvcih2YXIgbj0xO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuLTFdPWFyZ3VtZW50c1tuXTtjLnB1c2gobmV3IGQodCxlKSksMSE9PWMubGVuZ3RofHxsfHxzKHApfSxkLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfSxpLnRpdGxlPVwiYnJvd3NlclwiLGkuYnJvd3Nlcj0hMCxpLmVudj17fSxpLmFyZ3Y9W10saS52ZXJzaW9uPVwiXCIsaS52ZXJzaW9ucz17fSxpLm9uPW0saS5hZGRMaXN0ZW5lcj1tLGkub25jZT1tLGkub2ZmPW0saS5yZW1vdmVMaXN0ZW5lcj1tLGkucmVtb3ZlQWxsTGlzdGVuZXJzPW0saS5lbWl0PW0saS5wcmVwZW5kTGlzdGVuZXI9bSxpLnByZXBlbmRPbmNlTGlzdGVuZXI9bSxpLmxpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm5bXX0saS5iaW5kaW5nPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfSxpLmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifSxpLmNoZGlyPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX0saS51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTIpLGk9bigyKTtmdW5jdGlvbiBhKHQsZSl7cmV0dXJuIDU1Mjk2PT0oNjQ1MTImdC5jaGFyQ29kZUF0KGUpKSYmKCEoZTwwfHxlKzE+PXQubGVuZ3RoKSYmNTYzMjA9PSg2NDUxMiZ0LmNoYXJDb2RlQXQoZSsxKSkpfWZ1bmN0aW9uIG8odCl7cmV0dXJuKHQ+Pj4yNHx0Pj4+OCY2NTI4MHx0PDw4JjE2NzExNjgwfCgyNTUmdCk8PDI0KT4+PjB9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gMT09PXQubGVuZ3RoP1wiMFwiK3Q6dH1mdW5jdGlvbiB1KHQpe3JldHVybiA3PT09dC5sZW5ndGg/XCIwXCIrdDo2PT09dC5sZW5ndGg/XCIwMFwiK3Q6NT09PXQubGVuZ3RoP1wiMDAwXCIrdDo0PT09dC5sZW5ndGg/XCIwMDAwXCIrdDozPT09dC5sZW5ndGg/XCIwMDAwMFwiK3Q6Mj09PXQubGVuZ3RoP1wiMDAwMDAwXCIrdDoxPT09dC5sZW5ndGg/XCIwMDAwMDAwXCIrdDp0fWUuaW5oZXJpdHM9aSxlLnRvQXJyYXk9ZnVuY3Rpb24odCxlKXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0LnNsaWNlKCk7aWYoIXQpcmV0dXJuW107dmFyIG49W107aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpaWYoZSl7aWYoXCJoZXhcIj09PWUpZm9yKCh0PXQucmVwbGFjZSgvW15hLXowLTldKy9naSxcIlwiKSkubGVuZ3RoJTIhPTAmJih0PVwiMFwiK3QpLGk9MDtpPHQubGVuZ3RoO2krPTIpbi5wdXNoKHBhcnNlSW50KHRbaV0rdFtpKzFdLDE2KSl9ZWxzZSBmb3IodmFyIHI9MCxpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciBvPXQuY2hhckNvZGVBdChpKTtvPDEyOD9uW3IrK109bzpvPDIwNDg/KG5bcisrXT1vPj42fDE5MixuW3IrK109NjMmb3wxMjgpOmEodCxpKT8obz02NTUzNisoKDEwMjMmbyk8PDEwKSsoMTAyMyZ0LmNoYXJDb2RlQXQoKytpKSksbltyKytdPW8+PjE4fDI0MCxuW3IrK109bz4+MTImNjN8MTI4LG5bcisrXT1vPj42JjYzfDEyOCxuW3IrK109NjMmb3wxMjgpOihuW3IrK109bz4+MTJ8MjI0LG5bcisrXT1vPj42JjYzfDEyOCxuW3IrK109NjMmb3wxMjgpfWVsc2UgZm9yKGk9MDtpPHQubGVuZ3RoO2krKyluW2ldPTB8dFtpXTtyZXR1cm4gbn0sZS50b0hleD1mdW5jdGlvbih0KXtmb3IodmFyIGU9XCJcIixuPTA7bjx0Lmxlbmd0aDtuKyspZSs9cyh0W25dLnRvU3RyaW5nKDE2KSk7cmV0dXJuIGV9LGUuaHRvbmw9byxlLnRvSGV4MzI9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49XCJcIixyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXRbcl07XCJsaXR0bGVcIj09PWUmJihpPW8oaSkpLG4rPXUoaS50b1N0cmluZygxNikpfXJldHVybiBufSxlLnplcm8yPXMsZS56ZXJvOD11LGUuam9pbjMyPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhPW4tZTtyKGElND09MCk7Zm9yKHZhciBvPW5ldyBBcnJheShhLzQpLHM9MCx1PWU7czxvLmxlbmd0aDtzKyssdSs9NCl7dmFyIGM7Yz1cImJpZ1wiPT09aT90W3VdPDwyNHx0W3UrMV08PDE2fHRbdSsyXTw8OHx0W3UrM106dFt1KzNdPDwyNHx0W3UrMl08PDE2fHRbdSsxXTw8OHx0W3VdLG9bc109Yz4+PjB9cmV0dXJuIG99LGUuc3BsaXQzMj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1uZXcgQXJyYXkoNCp0Lmxlbmd0aCkscj0wLGk9MDtyPHQubGVuZ3RoO3IrKyxpKz00KXt2YXIgYT10W3JdO1wiYmlnXCI9PT1lPyhuW2ldPWE+Pj4yNCxuW2krMV09YT4+PjE2JjI1NSxuW2krMl09YT4+PjgmMjU1LG5baSszXT0yNTUmYSk6KG5baSszXT1hPj4+MjQsbltpKzJdPWE+Pj4xNiYyNTUsbltpKzFdPWE+Pj44JjI1NSxuW2ldPTI1NSZhKX1yZXR1cm4gbn0sZS5yb3RyMzI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD4+PmV8dDw8MzItZX0sZS5yb3RsMzI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdDw8ZXx0Pj4+MzItZX0sZS5zdW0zMj1mdW5jdGlvbih0LGUpe3JldHVybiB0K2U+Pj4wfSxlLnN1bTMyXzM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0K2Urbj4+PjB9LGUuc3VtMzJfND1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdCtlK24rcj4+PjB9LGUuc3VtMzJfNT1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB0K2UrbityK2k+Pj4wfSxlLnN1bTY0PWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRbZV0sYT1yK3RbZSsxXT4+PjAsbz0oYTxyPzE6MCkrbitpO3RbZV09bz4+PjAsdFtlKzFdPWF9LGUuc3VtNjRfaGk9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuKGUrcj4+PjA8ZT8xOjApK3Qrbj4+PjB9LGUuc3VtNjRfbG89ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIGUrcj4+PjB9LGUuc3VtNjRfNF9oaT1mdW5jdGlvbih0LGUsbixyLGksYSxvLHMpe3ZhciB1PTAsYz1lO3JldHVybiB1Kz0oYz1jK3I+Pj4wKTxlPzE6MCx1Kz0oYz1jK2E+Pj4wKTxhPzE6MCx0K24raStvKyh1Kz0oYz1jK3M+Pj4wKTxzPzE6MCk+Pj4wfSxlLnN1bTY0XzRfbG89ZnVuY3Rpb24odCxlLG4scixpLGEsbyxzKXtyZXR1cm4gZStyK2Ercz4+PjB9LGUuc3VtNjRfNV9oaT1mdW5jdGlvbih0LGUsbixyLGksYSxvLHMsdSxjKXt2YXIgbD0wLGY9ZTtyZXR1cm4gbCs9KGY9ZityPj4+MCk8ZT8xOjAsbCs9KGY9ZithPj4+MCk8YT8xOjAsbCs9KGY9ZitzPj4+MCk8cz8xOjAsdCtuK2krbyt1KyhsKz0oZj1mK2M+Pj4wKTxjPzE6MCk+Pj4wfSxlLnN1bTY0XzVfbG89ZnVuY3Rpb24odCxlLG4scixpLGEsbyxzLHUsYyl7cmV0dXJuIGUrcithK3MrYz4+PjB9LGUucm90cjY0X2hpPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4oZTw8MzItbnx0Pj4+bik+Pj4wfSxlLnJvdHI2NF9sbz1mdW5jdGlvbih0LGUsbil7cmV0dXJuKHQ8PDMyLW58ZT4+Pm4pPj4+MH0sZS5zaHI2NF9oaT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ+Pj5ufSxlLnNocjY0X2xvPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4odDw8MzItbnxlPj4+bik+Pj4wfX0sLCxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzKS5CdWZmZXIsaT1uKDU3KS5UcmFuc2Zvcm0sYT1uKDQyKS5TdHJpbmdEZWNvZGVyO2Z1bmN0aW9uIG8odCl7aS5jYWxsKHRoaXMpLHRoaXMuaGFzaE1vZGU9XCJzdHJpbmdcIj09dHlwZW9mIHQsdGhpcy5oYXNoTW9kZT90aGlzW3RdPXRoaXMuX2ZpbmFsT3JEaWdlc3Q6dGhpcy5maW5hbD10aGlzLl9maW5hbE9yRGlnZXN0LHRoaXMuX2ZpbmFsJiYodGhpcy5fX2ZpbmFsPXRoaXMuX2ZpbmFsLHRoaXMuX2ZpbmFsPW51bGwpLHRoaXMuX2RlY29kZXI9bnVsbCx0aGlzLl9lbmNvZGluZz1udWxsfW4oMikobyxpKSxvLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxlLG4pe1wic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1yLmZyb20odCxlKSk7dmFyIGk9dGhpcy5fdXBkYXRlKHQpO3JldHVybiB0aGlzLmhhc2hNb2RlP3RoaXM6KG4mJihpPXRoaXMuX3RvU3RyaW5nKGksbikpLGkpfSxvLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZz1mdW5jdGlvbigpe30sby5wcm90b3R5cGUuZ2V0QXV0aFRhZz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInRyeWluZyB0byBnZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIil9LG8ucHJvdG90eXBlLnNldEF1dGhUYWc9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJ0cnlpbmcgdG8gc2V0IGF1dGggdGFnIGluIHVuc3VwcG9ydGVkIHN0YXRlXCIpfSxvLnByb3RvdHlwZS5zZXRBQUQ9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJ0cnlpbmcgdG8gc2V0IGFhZCBpbiB1bnN1cHBvcnRlZCBzdGF0ZVwiKX0sby5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbih0LGUsbil7dmFyIHI7dHJ5e3RoaXMuaGFzaE1vZGU/dGhpcy5fdXBkYXRlKHQpOnRoaXMucHVzaCh0aGlzLl91cGRhdGUodCkpfWNhdGNoKHQpe3I9dH1maW5hbGx5e24ocil9fSxvLnByb3RvdHlwZS5fZmx1c2g9ZnVuY3Rpb24odCl7dmFyIGU7dHJ5e3RoaXMucHVzaCh0aGlzLl9fZmluYWwoKSl9Y2F0Y2godCl7ZT10fXQoZSl9LG8ucHJvdG90eXBlLl9maW5hbE9yRGlnZXN0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19maW5hbCgpfHxyLmFsbG9jKDApO3JldHVybiB0JiYoZT10aGlzLl90b1N0cmluZyhlLHQsITApKSxlfSxvLnByb3RvdHlwZS5fdG9TdHJpbmc9ZnVuY3Rpb24odCxlLG4pe2lmKHRoaXMuX2RlY29kZXJ8fCh0aGlzLl9kZWNvZGVyPW5ldyBhKGUpLHRoaXMuX2VuY29kaW5nPWUpLHRoaXMuX2VuY29kaW5nIT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJjYW4ndCBzd2l0Y2ggZW5jb2RpbmdzXCIpO3ZhciByPXRoaXMuX2RlY29kZXIud3JpdGUodCk7cmV0dXJuIG4mJihyKz10aGlzLl9kZWNvZGVyLmVuZCgpKSxyfSx0LmV4cG9ydHM9b30sLCxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big0MSksaT1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpZS5wdXNoKG4pO3JldHVybiBlfTt0LmV4cG9ydHM9Zjt2YXIgYT1uKDMxKTthLmluaGVyaXRzPW4oMik7dmFyIG89big4Nykscz1uKDYwKTthLmluaGVyaXRzKGYsbyk7Zm9yKHZhciB1PWkocy5wcm90b3R5cGUpLGM9MDtjPHUubGVuZ3RoO2MrKyl7dmFyIGw9dVtjXTtmLnByb3RvdHlwZVtsXXx8KGYucHJvdG90eXBlW2xdPXMucHJvdG90eXBlW2xdKX1mdW5jdGlvbiBmKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGYpKXJldHVybiBuZXcgZih0KTtvLmNhbGwodGhpcyx0KSxzLmNhbGwodGhpcyx0KSx0JiYhMT09PXQucmVhZGFibGUmJih0aGlzLnJlYWRhYmxlPSExKSx0JiYhMT09PXQud3JpdGFibGUmJih0aGlzLndyaXRhYmxlPSExKSx0aGlzLmFsbG93SGFsZk9wZW49ITAsdCYmITE9PT10LmFsbG93SGFsZk9wZW4mJih0aGlzLmFsbG93SGFsZk9wZW49ITEpLHRoaXMub25jZShcImVuZFwiLGgpfWZ1bmN0aW9uIGgoKXt0aGlzLmFsbG93SGFsZk9wZW58fHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWR8fHIubmV4dFRpY2socCx0aGlzKX1mdW5jdGlvbiBwKHQpe3QuZW5kKCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGYucHJvdG90eXBlLFwid3JpdGFibGVIaWdoV2F0ZXJNYXJrXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZi5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX3JlYWRhYmxlU3RhdGUmJnZvaWQgMCE9PXRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCYmdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQpfSxzZXQ6ZnVuY3Rpb24odCl7dm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdm9pZCAwIT09dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPXQsdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9dCl9fSksZi5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksdGhpcy5lbmQoKSxyLm5leHRUaWNrKGUsdCl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKGUscil7dmFyIGk9bigzKS5CdWZmZXIsYT1lLmNyeXB0b3x8ZS5tc0NyeXB0bzthJiZhLmdldFJhbmRvbVZhbHVlcz90LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXtpZih0PjY1NTM2KXRocm93IG5ldyBFcnJvcihcInJlcXVlc3RlZCB0b28gbWFueSByYW5kb20gYnl0ZXNcIik7dmFyIG89bmV3IGUuVWludDhBcnJheSh0KTt0PjAmJmEuZ2V0UmFuZG9tVmFsdWVzKG8pO3ZhciBzPWkuZnJvbShvLmJ1ZmZlcik7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilyZXR1cm4gci5uZXh0VGljayhmdW5jdGlvbigpe24obnVsbCxzKX0pO3JldHVybiBzfTp0LmV4cG9ydHM9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJTZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyLlxcblVzZSBDaHJvbWUsIEZpcmVmb3ggb3IgSW50ZXJuZXQgRXhwbG9yZXIgMTFcIil9fSkuY2FsbCh0aGlzLG4oMTEpLG4oMTQpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMykuQnVmZmVyO2Z1bmN0aW9uIGkodCxlKXt0aGlzLl9ibG9jaz1yLmFsbG9jKHQpLHRoaXMuX2ZpbmFsU2l6ZT1lLHRoaXMuX2Jsb2NrU2l6ZT10LHRoaXMuX2xlbj0wfWkucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUpe1wic3RyaW5nXCI9PXR5cGVvZiB0JiYoZT1lfHxcInV0ZjhcIix0PXIuZnJvbSh0LGUpKTtmb3IodmFyIG49dGhpcy5fYmxvY2ssaT10aGlzLl9ibG9ja1NpemUsYT10Lmxlbmd0aCxvPXRoaXMuX2xlbixzPTA7czxhOyl7Zm9yKHZhciB1PW8laSxjPU1hdGgubWluKGEtcyxpLXUpLGw9MDtsPGM7bCsrKW5bdStsXT10W3MrbF07cys9Yywobys9YyklaT09MCYmdGhpcy5fdXBkYXRlKG4pfXJldHVybiB0aGlzLl9sZW4rPWEsdGhpc30saS5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2xlbiV0aGlzLl9ibG9ja1NpemU7dGhpcy5fYmxvY2tbZV09MTI4LHRoaXMuX2Jsb2NrLmZpbGwoMCxlKzEpLGU+PXRoaXMuX2ZpbmFsU2l6ZSYmKHRoaXMuX3VwZGF0ZSh0aGlzLl9ibG9jayksdGhpcy5fYmxvY2suZmlsbCgwKSk7dmFyIG49OCp0aGlzLl9sZW47aWYobjw9NDI5NDk2NzI5NSl0aGlzLl9ibG9jay53cml0ZVVJbnQzMkJFKG4sdGhpcy5fYmxvY2tTaXplLTQpO2Vsc2V7dmFyIHI9KDQyOTQ5NjcyOTUmbik+Pj4wLGk9KG4tcikvNDI5NDk2NzI5Njt0aGlzLl9ibG9jay53cml0ZVVJbnQzMkJFKGksdGhpcy5fYmxvY2tTaXplLTgpLHRoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUocix0aGlzLl9ibG9ja1NpemUtNCl9dGhpcy5fdXBkYXRlKHRoaXMuX2Jsb2NrKTt2YXIgYT10aGlzLl9oYXNoKCk7cmV0dXJuIHQ/YS50b1N0cmluZyh0KTphfSxpLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiX3VwZGF0ZSBtdXN0IGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzXCIpfSx0LmV4cG9ydHM9aX0sLCwsLCwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMiksaT1uKDU2KSxhPW4oNjEpLG89big2Mikscz1uKDE4KTtmdW5jdGlvbiB1KHQpe3MuY2FsbCh0aGlzLFwiZGlnZXN0XCIpLHRoaXMuX2hhc2g9dH1yKHUscyksdS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXt0aGlzLl9oYXNoLnVwZGF0ZSh0KX0sdS5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hhc2guZGlnZXN0KCl9LHQuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm5cIm1kNVwiPT09KHQ9dC50b0xvd2VyQ2FzZSgpKT9uZXcgaTpcInJtZDE2MFwiPT09dHx8XCJyaXBlbWQxNjBcIj09PXQ/bmV3IGE6bmV3IHUobyh0KSl9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4odCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1lLmlzQXJyYXk9ZnVuY3Rpb24odCl7cmV0dXJuIEFycmF5LmlzQXJyYXk/QXJyYXkuaXNBcnJheSh0KTpcIltvYmplY3QgQXJyYXldXCI9PT1uKHQpfSxlLmlzQm9vbGVhbj1mdW5jdGlvbih0KXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIHR9LGUuaXNOdWxsPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dH0sZS5pc051bGxPclVuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dH0sZS5pc051bWJlcj1mdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdH0sZS5pc1N0cmluZz1mdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH0sZS5pc1N5bWJvbD1mdW5jdGlvbih0KXtyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgdH0sZS5pc1VuZGVmaW5lZD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dH0sZS5pc1JlZ0V4cD1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgUmVnRXhwXVwiPT09bih0KX0sZS5pc09iamVjdD1mdW5jdGlvbih0KXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9PXR9LGUuaXNEYXRlPWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBEYXRlXVwiPT09bih0KX0sZS5pc0Vycm9yPWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBFcnJvcl1cIj09PW4odCl8fHQgaW5zdGFuY2VvZiBFcnJvcn0sZS5pc0Z1bmN0aW9uPWZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR9LGUuaXNQcmltaXRpdmU9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PT10fHxcImJvb2xlYW5cIj09dHlwZW9mIHR8fFwibnVtYmVyXCI9PXR5cGVvZiB0fHxcInN0cmluZ1wiPT10eXBlb2YgdHx8XCJzeW1ib2xcIj09dHlwZW9mIHR8fHZvaWQgMD09PXR9LGUuaXNCdWZmZXI9dC5pc0J1ZmZlcn0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbil7Zm9yKHZhciByPU1hdGgubWluKHQubGVuZ3RoLG4ubGVuZ3RoKSxpPW5ldyBlKHIpLGE9MDthPHI7KythKWlbYV09dFthXV5uW2FdO3JldHVybiBpfX0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE1KSxpPW4oMTIpO2Z1bmN0aW9uIGEoKXt0aGlzLnBlbmRpbmc9bnVsbCx0aGlzLnBlbmRpbmdUb3RhbD0wLHRoaXMuYmxvY2tTaXplPXRoaXMuY29uc3RydWN0b3IuYmxvY2tTaXplLHRoaXMub3V0U2l6ZT10aGlzLmNvbnN0cnVjdG9yLm91dFNpemUsdGhpcy5obWFjU3RyZW5ndGg9dGhpcy5jb25zdHJ1Y3Rvci5obWFjU3RyZW5ndGgsdGhpcy5wYWRMZW5ndGg9dGhpcy5jb25zdHJ1Y3Rvci5wYWRMZW5ndGgvOCx0aGlzLmVuZGlhbj1cImJpZ1wiLHRoaXMuX2RlbHRhOD10aGlzLmJsb2NrU2l6ZS84LHRoaXMuX2RlbHRhMzI9dGhpcy5ibG9ja1NpemUvMzJ9ZS5CbG9ja0hhc2g9YSxhLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxlKXtpZih0PXIudG9BcnJheSh0LGUpLHRoaXMucGVuZGluZz90aGlzLnBlbmRpbmc9dGhpcy5wZW5kaW5nLmNvbmNhdCh0KTp0aGlzLnBlbmRpbmc9dCx0aGlzLnBlbmRpbmdUb3RhbCs9dC5sZW5ndGgsdGhpcy5wZW5kaW5nLmxlbmd0aD49dGhpcy5fZGVsdGE4KXt2YXIgbj0odD10aGlzLnBlbmRpbmcpLmxlbmd0aCV0aGlzLl9kZWx0YTg7dGhpcy5wZW5kaW5nPXQuc2xpY2UodC5sZW5ndGgtbix0Lmxlbmd0aCksMD09PXRoaXMucGVuZGluZy5sZW5ndGgmJih0aGlzLnBlbmRpbmc9bnVsbCksdD1yLmpvaW4zMih0LDAsdC5sZW5ndGgtbix0aGlzLmVuZGlhbik7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKz10aGlzLl9kZWx0YTMyKXRoaXMuX3VwZGF0ZSh0LGksaSt0aGlzLl9kZWx0YTMyKX1yZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnVwZGF0ZSh0aGlzLl9wYWQoKSksaShudWxsPT09dGhpcy5wZW5kaW5nKSx0aGlzLl9kaWdlc3QodCl9LGEucHJvdG90eXBlLl9wYWQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnBlbmRpbmdUb3RhbCxlPXRoaXMuX2RlbHRhOCxuPWUtKHQrdGhpcy5wYWRMZW5ndGgpJWUscj1uZXcgQXJyYXkobit0aGlzLnBhZExlbmd0aCk7clswXT0xMjg7Zm9yKHZhciBpPTE7aTxuO2krKylyW2ldPTA7aWYodDw8PTMsXCJiaWdcIj09PXRoaXMuZW5kaWFuKXtmb3IodmFyIGE9ODthPHRoaXMucGFkTGVuZ3RoO2ErKylyW2krK109MDtyW2krK109MCxyW2krK109MCxyW2krK109MCxyW2krK109MCxyW2krK109dD4+PjI0JjI1NSxyW2krK109dD4+PjE2JjI1NSxyW2krK109dD4+PjgmMjU1LHJbaSsrXT0yNTUmdH1lbHNlIGZvcihyW2krK109MjU1JnQscltpKytdPXQ+Pj44JjI1NSxyW2krK109dD4+PjE2JjI1NSxyW2krK109dD4+PjI0JjI1NSxyW2krK109MCxyW2krK109MCxyW2krK109MCxyW2krK109MCxhPTg7YTx0aGlzLnBhZExlbmd0aDthKyspcltpKytdPTA7cmV0dXJuIHJ9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9ZTtyLmJpZ251bT1uKDUpLHIuZGVmaW5lPW4oMjAyKS5kZWZpbmUsci5iYXNlPW4oMzUpLHIuY29uc3RhbnRzPW4oMTEzKSxyLmRlY29kZXJzPW4oMjA4KSxyLmVuY29kZXJzPW4oMjEwKX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPWU7ci5SZXBvcnRlcj1uKDIwNSkuUmVwb3J0ZXIsci5EZWNvZGVyQnVmZmVyPW4oMTEyKS5EZWNvZGVyQnVmZmVyLHIuRW5jb2RlckJ1ZmZlcj1uKDExMikuRW5jb2RlckJ1ZmZlcixyLk5vZGU9bigyMDYpfSwsLCwsLGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24oZSl7IWUudmVyc2lvbnx8MD09PWUudmVyc2lvbi5pbmRleE9mKFwidjAuXCIpfHwwPT09ZS52ZXJzaW9uLmluZGV4T2YoXCJ2MS5cIikmJjAhPT1lLnZlcnNpb24uaW5kZXhPZihcInYxLjguXCIpP3QuZXhwb3J0cz17bmV4dFRpY2s6ZnVuY3Rpb24odCxuLHIsaSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImNhbGxiYWNrXCIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7dmFyIGEsbyxzPWFyZ3VtZW50cy5sZW5ndGg7c3dpdGNoKHMpe2Nhc2UgMDpjYXNlIDE6cmV0dXJuIGUubmV4dFRpY2sodCk7Y2FzZSAyOnJldHVybiBlLm5leHRUaWNrKGZ1bmN0aW9uKCl7dC5jYWxsKG51bGwsbil9KTtjYXNlIDM6cmV0dXJuIGUubmV4dFRpY2soZnVuY3Rpb24oKXt0LmNhbGwobnVsbCxuLHIpfSk7Y2FzZSA0OnJldHVybiBlLm5leHRUaWNrKGZ1bmN0aW9uKCl7dC5jYWxsKG51bGwsbixyLGkpfSk7ZGVmYXVsdDpmb3IoYT1uZXcgQXJyYXkocy0xKSxvPTA7bzxhLmxlbmd0aDspYVtvKytdPWFyZ3VtZW50c1tvXTtyZXR1cm4gZS5uZXh0VGljayhmdW5jdGlvbigpe3QuYXBwbHkobnVsbCxhKX0pfX19OnQuZXhwb3J0cz1lfSkuY2FsbCh0aGlzLG4oMTQpKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMykuQnVmZmVyLGk9ci5pc0VuY29kaW5nfHxmdW5jdGlvbih0KXtzd2l0Y2goKHQ9XCJcIit0KSYmdC50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOmNhc2VcInJhd1wiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fTtmdW5jdGlvbiBhKHQpe3ZhciBlO3N3aXRjaCh0aGlzLmVuY29kaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVyblwidXRmOFwiO2Zvcih2YXIgZTs7KXN3aXRjaCh0KXtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm5cInV0ZjhcIjtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm5cInV0ZjE2bGVcIjtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm5cImxhdGluMVwiO2Nhc2VcImJhc2U2NFwiOmNhc2VcImFzY2lpXCI6Y2FzZVwiaGV4XCI6cmV0dXJuIHQ7ZGVmYXVsdDppZihlKXJldHVybjt0PShcIlwiK3QpLnRvTG93ZXJDYXNlKCksZT0hMH19KHQpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlJiYoci5pc0VuY29kaW5nPT09aXx8IWkodCkpKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK3QpO3JldHVybiBlfHx0fSh0KSx0aGlzLmVuY29kaW5nKXtjYXNlXCJ1dGYxNmxlXCI6dGhpcy50ZXh0PXUsdGhpcy5lbmQ9YyxlPTQ7YnJlYWs7Y2FzZVwidXRmOFwiOnRoaXMuZmlsbExhc3Q9cyxlPTQ7YnJlYWs7Y2FzZVwiYmFzZTY0XCI6dGhpcy50ZXh0PWwsdGhpcy5lbmQ9ZixlPTM7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gdGhpcy53cml0ZT1oLHZvaWQodGhpcy5lbmQ9cCl9dGhpcy5sYXN0TmVlZD0wLHRoaXMubGFzdFRvdGFsPTAsdGhpcy5sYXN0Q2hhcj1yLmFsbG9jVW5zYWZlKGUpfWZ1bmN0aW9uIG8odCl7cmV0dXJuIHQ8PTEyNz8wOnQ+PjU9PTY/Mjp0Pj40PT0xND8zOnQ+PjM9PTMwPzQ6dD4+Nj09Mj8tMTotMn1mdW5jdGlvbiBzKHQpe3ZhciBlPXRoaXMubGFzdFRvdGFsLXRoaXMubGFzdE5lZWQsbj1mdW5jdGlvbih0LGUsbil7aWYoMTI4IT0oMTkyJmVbMF0pKXJldHVybiB0Lmxhc3ROZWVkPTAsXCLvv71cIjtpZih0Lmxhc3ROZWVkPjEmJmUubGVuZ3RoPjEpe2lmKDEyOCE9KDE5MiZlWzFdKSlyZXR1cm4gdC5sYXN0TmVlZD0xLFwi77+9XCI7aWYodC5sYXN0TmVlZD4yJiZlLmxlbmd0aD4yJiYxMjghPSgxOTImZVsyXSkpcmV0dXJuIHQubGFzdE5lZWQ9MixcIu+/vVwifX0odGhpcyx0KTtyZXR1cm4gdm9pZCAwIT09bj9uOnRoaXMubGFzdE5lZWQ8PXQubGVuZ3RoPyh0LmNvcHkodGhpcy5sYXN0Q2hhcixlLDAsdGhpcy5sYXN0TmVlZCksdGhpcy5sYXN0Q2hhci50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsdGhpcy5sYXN0VG90YWwpKToodC5jb3B5KHRoaXMubGFzdENoYXIsZSwwLHQubGVuZ3RoKSx2b2lkKHRoaXMubGFzdE5lZWQtPXQubGVuZ3RoKSl9ZnVuY3Rpb24gdSh0LGUpe2lmKCh0Lmxlbmd0aC1lKSUyPT0wKXt2YXIgbj10LnRvU3RyaW5nKFwidXRmMTZsZVwiLGUpO2lmKG4pe3ZhciByPW4uY2hhckNvZGVBdChuLmxlbmd0aC0xKTtpZihyPj01NTI5NiYmcjw9NTYzMTkpcmV0dXJuIHRoaXMubGFzdE5lZWQ9Mix0aGlzLmxhc3RUb3RhbD00LHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0sbi5zbGljZSgwLC0xKX1yZXR1cm4gbn1yZXR1cm4gdGhpcy5sYXN0TmVlZD0xLHRoaXMubGFzdFRvdGFsPTIsdGhpcy5sYXN0Q2hhclswXT10W3QubGVuZ3RoLTFdLHQudG9TdHJpbmcoXCJ1dGYxNmxlXCIsZSx0Lmxlbmd0aC0xKX1mdW5jdGlvbiBjKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtpZih0aGlzLmxhc3ROZWVkKXt2YXIgbj10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiBlK3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJ1dGYxNmxlXCIsMCxuKX1yZXR1cm4gZX1mdW5jdGlvbiBsKHQsZSl7dmFyIG49KHQubGVuZ3RoLWUpJTM7cmV0dXJuIDA9PT1uP3QudG9TdHJpbmcoXCJiYXNlNjRcIixlKToodGhpcy5sYXN0TmVlZD0zLW4sdGhpcy5sYXN0VG90YWw9MywxPT09bj90aGlzLmxhc3RDaGFyWzBdPXRbdC5sZW5ndGgtMV06KHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0pLHQudG9TdHJpbmcoXCJiYXNlNjRcIixlLHQubGVuZ3RoLW4pKX1mdW5jdGlvbiBmKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJiYXNlNjRcIiwwLDMtdGhpcy5sYXN0TmVlZCk6ZX1mdW5jdGlvbiBoKHQpe3JldHVybiB0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpfWZ1bmN0aW9uIHAodCl7cmV0dXJuIHQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIn1lLlN0cmluZ0RlY29kZXI9YSxhLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtpZigwPT09dC5sZW5ndGgpcmV0dXJuXCJcIjt2YXIgZSxuO2lmKHRoaXMubGFzdE5lZWQpe2lmKHZvaWQgMD09PShlPXRoaXMuZmlsbExhc3QodCkpKXJldHVyblwiXCI7bj10aGlzLmxhc3ROZWVkLHRoaXMubGFzdE5lZWQ9MH1lbHNlIG49MDtyZXR1cm4gbjx0Lmxlbmd0aD9lP2UrdGhpcy50ZXh0KHQsbik6dGhpcy50ZXh0KHQsbik6ZXx8XCJcIn0sYS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6XCJcIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK1wi77+9XCI6ZX0sYS5wcm90b3R5cGUudGV4dD1mdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLmxlbmd0aC0xO2lmKHI8bilyZXR1cm4gMDt2YXIgaT1vKGVbcl0pO2lmKGk+PTApcmV0dXJuIGk+MCYmKHQubGFzdE5lZWQ9aS0xKSxpO2lmKC0tcjxufHwtMj09PWkpcmV0dXJuIDA7aWYoKGk9byhlW3JdKSk+PTApcmV0dXJuIGk+MCYmKHQubGFzdE5lZWQ9aS0yKSxpO2lmKC0tcjxufHwtMj09PWkpcmV0dXJuIDA7aWYoKGk9byhlW3JdKSk+PTApcmV0dXJuIGk+MCYmKDI9PT1pP2k9MDp0Lmxhc3ROZWVkPWktMyksaTtyZXR1cm4gMH0odGhpcyx0LGUpO2lmKCF0aGlzLmxhc3ROZWVkKXJldHVybiB0LnRvU3RyaW5nKFwidXRmOFwiLGUpO3RoaXMubGFzdFRvdGFsPW47dmFyIHI9dC5sZW5ndGgtKG4tdGhpcy5sYXN0TmVlZCk7cmV0dXJuIHQuY29weSh0aGlzLmxhc3RDaGFyLDAsciksdC50b1N0cmluZyhcInV0ZjhcIixlLHIpfSxhLnByb3RvdHlwZS5maWxsTGFzdD1mdW5jdGlvbih0KXtpZih0aGlzLmxhc3ROZWVkPD10Lmxlbmd0aClyZXR1cm4gdC5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLHRoaXMubGFzdE5lZWQpLHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywwLHRoaXMubGFzdFRvdGFsKTt0LmNvcHkodGhpcy5sYXN0Q2hhcix0aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLDAsdC5sZW5ndGgpLHRoaXMubGFzdE5lZWQtPXQubGVuZ3RofX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMykuQnVmZmVyO2Z1bmN0aW9uIGkodCl7ci5pc0J1ZmZlcih0KXx8KHQ9ci5mcm9tKHQpKTtmb3IodmFyIGU9dC5sZW5ndGgvNHwwLG49bmV3IEFycmF5KGUpLGk9MDtpPGU7aSsrKW5baV09dC5yZWFkVUludDMyQkUoNCppKTtyZXR1cm4gbn1mdW5jdGlvbiBhKHQpe2Zvcig7MDx0Lmxlbmd0aDt0KyspdFswXT0wfWZ1bmN0aW9uIG8odCxlLG4scixpKXtmb3IodmFyIGEsbyxzLHUsYz1uWzBdLGw9blsxXSxmPW5bMl0saD1uWzNdLHA9dFswXV5lWzBdLGQ9dFsxXV5lWzFdLG09dFsyXV5lWzJdLGc9dFszXV5lWzNdLHk9NCx2PTE7djxpO3YrKylhPWNbcD4+PjI0XV5sW2Q+Pj4xNiYyNTVdXmZbbT4+PjgmMjU1XV5oWzI1NSZnXV5lW3krK10sbz1jW2Q+Pj4yNF1ebFttPj4+MTYmMjU1XV5mW2c+Pj44JjI1NV1eaFsyNTUmcF1eZVt5KytdLHM9Y1ttPj4+MjRdXmxbZz4+PjE2JjI1NV1eZltwPj4+OCYyNTVdXmhbMjU1JmRdXmVbeSsrXSx1PWNbZz4+PjI0XV5sW3A+Pj4xNiYyNTVdXmZbZD4+PjgmMjU1XV5oWzI1NSZtXV5lW3krK10scD1hLGQ9byxtPXMsZz11O3JldHVybiBhPShyW3A+Pj4yNF08PDI0fHJbZD4+PjE2JjI1NV08PDE2fHJbbT4+PjgmMjU1XTw8OHxyWzI1NSZnXSleZVt5KytdLG89KHJbZD4+PjI0XTw8MjR8clttPj4+MTYmMjU1XTw8MTZ8cltnPj4+OCYyNTVdPDw4fHJbMjU1JnBdKV5lW3krK10scz0oclttPj4+MjRdPDwyNHxyW2c+Pj4xNiYyNTVdPDwxNnxyW3A+Pj44JjI1NV08PDh8clsyNTUmZF0pXmVbeSsrXSx1PShyW2c+Pj4yNF08PDI0fHJbcD4+PjE2JjI1NV08PDE2fHJbZD4+PjgmMjU1XTw8OHxyWzI1NSZtXSleZVt5KytdLFthPj4+PTAsbz4+Pj0wLHM+Pj49MCx1Pj4+PTBdfXZhciBzPVswLDEsMiw0LDgsMTYsMzIsNjQsMTI4LDI3LDU0XSx1PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PW5ldyBBcnJheSgyNTYpLGU9MDtlPDI1NjtlKyspdFtlXT1lPDEyOD9lPDwxOmU8PDFeMjgzO2Zvcih2YXIgbj1bXSxyPVtdLGk9W1tdLFtdLFtdLFtdXSxhPVtbXSxbXSxbXSxbXV0sbz0wLHM9MCx1PTA7dTwyNTY7Kyt1KXt2YXIgYz1zXnM8PDFeczw8Ml5zPDwzXnM8PDQ7Yz1jPj4+OF4yNTUmY145OSxuW29dPWMscltjXT1vO3ZhciBsPXRbb10sZj10W2xdLGg9dFtmXSxwPTI1Nyp0W2NdXjE2ODQzMDA4KmM7aVswXVtvXT1wPDwyNHxwPj4+OCxpWzFdW29dPXA8PDE2fHA+Pj4xNixpWzJdW29dPXA8PDh8cD4+PjI0LGlbM11bb109cCxwPTE2ODQzMDA5KmheNjU1MzcqZl4yNTcqbF4xNjg0MzAwOCpvLGFbMF1bY109cDw8MjR8cD4+PjgsYVsxXVtjXT1wPDwxNnxwPj4+MTYsYVsyXVtjXT1wPDw4fHA+Pj4yNCxhWzNdW2NdPXAsMD09PW8/bz1zPTE6KG89bF50W3RbdFtoXmxdXV0sc149dFt0W3NdXSl9cmV0dXJue1NCT1g6bixJTlZfU0JPWDpyLFNVQl9NSVg6aSxJTlZfU1VCX01JWDphfX0oKTtmdW5jdGlvbiBjKHQpe3RoaXMuX2tleT1pKHQpLHRoaXMuX3Jlc2V0KCl9Yy5ibG9ja1NpemU9MTYsYy5rZXlTaXplPTMyLGMucHJvdG90eXBlLmJsb2NrU2l6ZT1jLmJsb2NrU2l6ZSxjLnByb3RvdHlwZS5rZXlTaXplPWMua2V5U2l6ZSxjLnByb3RvdHlwZS5fcmVzZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5fa2V5LGU9dC5sZW5ndGgsbj1lKzYscj00KihuKzEpLGk9W10sYT0wO2E8ZTthKyspaVthXT10W2FdO2ZvcihhPWU7YTxyO2ErKyl7dmFyIG89aVthLTFdO2ElZT09MD8obz1vPDw4fG8+Pj4yNCxvPXUuU0JPWFtvPj4+MjRdPDwyNHx1LlNCT1hbbz4+PjE2JjI1NV08PDE2fHUuU0JPWFtvPj4+OCYyNTVdPDw4fHUuU0JPWFsyNTUmb10sb149c1thL2V8MF08PDI0KTplPjYmJmElZT09NCYmKG89dS5TQk9YW28+Pj4yNF08PDI0fHUuU0JPWFtvPj4+MTYmMjU1XTw8MTZ8dS5TQk9YW28+Pj44JjI1NV08PDh8dS5TQk9YWzI1NSZvXSksaVthXT1pW2EtZV1eb31mb3IodmFyIGM9W10sbD0wO2w8cjtsKyspe3ZhciBmPXItbCxoPWlbZi0obCU0PzA6NCldO2NbbF09bDw0fHxmPD00P2g6dS5JTlZfU1VCX01JWFswXVt1LlNCT1hbaD4+PjI0XV1edS5JTlZfU1VCX01JWFsxXVt1LlNCT1hbaD4+PjE2JjI1NV1dXnUuSU5WX1NVQl9NSVhbMl1bdS5TQk9YW2g+Pj44JjI1NV1dXnUuSU5WX1NVQl9NSVhbM11bdS5TQk9YWzI1NSZoXV19dGhpcy5fblJvdW5kcz1uLHRoaXMuX2tleVNjaGVkdWxlPWksdGhpcy5faW52S2V5U2NoZWR1bGU9Y30sYy5wcm90b3R5cGUuZW5jcnlwdEJsb2NrUmF3PWZ1bmN0aW9uKHQpe3JldHVybiBvKHQ9aSh0KSx0aGlzLl9rZXlTY2hlZHVsZSx1LlNVQl9NSVgsdS5TQk9YLHRoaXMuX25Sb3VuZHMpfSxjLnByb3RvdHlwZS5lbmNyeXB0QmxvY2s9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbmNyeXB0QmxvY2tSYXcodCksbj1yLmFsbG9jVW5zYWZlKDE2KTtyZXR1cm4gbi53cml0ZVVJbnQzMkJFKGVbMF0sMCksbi53cml0ZVVJbnQzMkJFKGVbMV0sNCksbi53cml0ZVVJbnQzMkJFKGVbMl0sOCksbi53cml0ZVVJbnQzMkJFKGVbM10sMTIpLG59LGMucHJvdG90eXBlLmRlY3J5cHRCbG9jaz1mdW5jdGlvbih0KXt2YXIgZT0odD1pKHQpKVsxXTt0WzFdPXRbM10sdFszXT1lO3ZhciBuPW8odCx0aGlzLl9pbnZLZXlTY2hlZHVsZSx1LklOVl9TVUJfTUlYLHUuSU5WX1NCT1gsdGhpcy5fblJvdW5kcyksYT1yLmFsbG9jVW5zYWZlKDE2KTtyZXR1cm4gYS53cml0ZVVJbnQzMkJFKG5bMF0sMCksYS53cml0ZVVJbnQzMkJFKG5bM10sNCksYS53cml0ZVVJbnQzMkJFKG5bMl0sOCksYS53cml0ZVVJbnQzMkJFKG5bMV0sMTIpLGF9LGMucHJvdG90eXBlLnNjcnViPWZ1bmN0aW9uKCl7YSh0aGlzLl9rZXlTY2hlZHVsZSksYSh0aGlzLl9pbnZLZXlTY2hlZHVsZSksYSh0aGlzLl9rZXkpfSx0LmV4cG9ydHMuQUVTPWN9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDMpLkJ1ZmZlcixpPW4oNTYpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbixhKXtpZihyLmlzQnVmZmVyKHQpfHwodD1yLmZyb20odCxcImJpbmFyeVwiKSksZSYmKHIuaXNCdWZmZXIoZSl8fChlPXIuZnJvbShlLFwiYmluYXJ5XCIpKSw4IT09ZS5sZW5ndGgpKXRocm93IG5ldyBSYW5nZUVycm9yKFwic2FsdCBzaG91bGQgYmUgQnVmZmVyIHdpdGggOCBieXRlIGxlbmd0aFwiKTtmb3IodmFyIG89bi84LHM9ci5hbGxvYyhvKSx1PXIuYWxsb2MoYXx8MCksYz1yLmFsbG9jKDApO28+MHx8YT4wOyl7dmFyIGw9bmV3IGk7bC51cGRhdGUoYyksbC51cGRhdGUodCksZSYmbC51cGRhdGUoZSksYz1sLmRpZ2VzdCgpO3ZhciBmPTA7aWYobz4wKXt2YXIgaD1zLmxlbmd0aC1vO2Y9TWF0aC5taW4obyxjLmxlbmd0aCksYy5jb3B5KHMsaCwwLGYpLG8tPWZ9aWYoZjxjLmxlbmd0aCYmYT4wKXt2YXIgcD11Lmxlbmd0aC1hLGQ9TWF0aC5taW4oYSxjLmxlbmd0aC1mKTtjLmNvcHkodSxwLGYsZitkKSxhLT1kfX1yZXR1cm4gYy5maWxsKDApLHtrZXk6cyxpdjp1fX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1lO3IuYmFzZT1uKDE4Miksci5zaG9ydD1uKDE4Myksci5tb250PW4oMTg0KSxyLmVkd2FyZHM9bigxODUpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpe3ZhciByPW4oMjAxKSxpPW4oMjEzKSxhPW4oMjE0KSxvPW4oNjQpLHM9big5Nik7ZnVuY3Rpb24gdSh0KXt2YXIgbjtcIm9iamVjdFwiIT10eXBlb2YgdHx8ZS5pc0J1ZmZlcih0KXx8KG49dC5wYXNzcGhyYXNlLHQ9dC5rZXkpLFwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1uZXcgZSh0KSk7dmFyIHUsYyxsPWEodCxuKSxmPWwudGFnLGg9bC5kYXRhO3N3aXRjaChmKXtjYXNlXCJDRVJUSUZJQ0FURVwiOmM9ci5jZXJ0aWZpY2F0ZS5kZWNvZGUoaCxcImRlclwiKS50YnNDZXJ0aWZpY2F0ZS5zdWJqZWN0UHVibGljS2V5SW5mbztjYXNlXCJQVUJMSUMgS0VZXCI6c3dpdGNoKGN8fChjPXIuUHVibGljS2V5LmRlY29kZShoLFwiZGVyXCIpKSx1PWMuYWxnb3JpdGhtLmFsZ29yaXRobS5qb2luKFwiLlwiKSl7Y2FzZVwiMS4yLjg0MC4xMTM1NDkuMS4xLjFcIjpyZXR1cm4gci5SU0FQdWJsaWNLZXkuZGVjb2RlKGMuc3ViamVjdFB1YmxpY0tleS5kYXRhLFwiZGVyXCIpO2Nhc2VcIjEuMi44NDAuMTAwNDUuMi4xXCI6cmV0dXJuIGMuc3ViamVjdFByaXZhdGVLZXk9Yy5zdWJqZWN0UHVibGljS2V5LHt0eXBlOlwiZWNcIixkYXRhOmN9O2Nhc2VcIjEuMi44NDAuMTAwNDAuNC4xXCI6cmV0dXJuIGMuYWxnb3JpdGhtLnBhcmFtcy5wdWJfa2V5PXIuRFNBcGFyYW0uZGVjb2RlKGMuc3ViamVjdFB1YmxpY0tleS5kYXRhLFwiZGVyXCIpLHt0eXBlOlwiZHNhXCIsZGF0YTpjLmFsZ29yaXRobS5wYXJhbXN9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBrZXkgaWQgXCIrdSl9dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBrZXkgdHlwZSBcIitmKTtjYXNlXCJFTkNSWVBURUQgUFJJVkFURSBLRVlcIjpoPWZ1bmN0aW9uKHQsbil7dmFyIHI9dC5hbGdvcml0aG0uZGVjcnlwdC5rZGUua2RlcGFyYW1zLnNhbHQsYT1wYXJzZUludCh0LmFsZ29yaXRobS5kZWNyeXB0LmtkZS5rZGVwYXJhbXMuaXRlcnMudG9TdHJpbmcoKSwxMCksdT1pW3QuYWxnb3JpdGhtLmRlY3J5cHQuY2lwaGVyLmFsZ28uam9pbihcIi5cIildLGM9dC5hbGdvcml0aG0uZGVjcnlwdC5jaXBoZXIuaXYsbD10LnN1YmplY3RQcml2YXRlS2V5LGY9cGFyc2VJbnQodS5zcGxpdChcIi1cIilbMV0sMTApLzgsaD1zLnBia2RmMlN5bmMobixyLGEsZikscD1vLmNyZWF0ZURlY2lwaGVyaXYodSxoLGMpLGQ9W107cmV0dXJuIGQucHVzaChwLnVwZGF0ZShsKSksZC5wdXNoKHAuZmluYWwoKSksZS5jb25jYXQoZCl9KGg9ci5FbmNyeXB0ZWRQcml2YXRlS2V5LmRlY29kZShoLFwiZGVyXCIpLG4pO2Nhc2VcIlBSSVZBVEUgS0VZXCI6c3dpdGNoKHU9KGM9ci5Qcml2YXRlS2V5LmRlY29kZShoLFwiZGVyXCIpKS5hbGdvcml0aG0uYWxnb3JpdGhtLmpvaW4oXCIuXCIpKXtjYXNlXCIxLjIuODQwLjExMzU0OS4xLjEuMVwiOnJldHVybiByLlJTQVByaXZhdGVLZXkuZGVjb2RlKGMuc3ViamVjdFByaXZhdGVLZXksXCJkZXJcIik7Y2FzZVwiMS4yLjg0MC4xMDA0NS4yLjFcIjpyZXR1cm57Y3VydmU6Yy5hbGdvcml0aG0uY3VydmUscHJpdmF0ZUtleTpyLkVDUHJpdmF0ZUtleS5kZWNvZGUoYy5zdWJqZWN0UHJpdmF0ZUtleSxcImRlclwiKS5wcml2YXRlS2V5fTtjYXNlXCIxLjIuODQwLjEwMDQwLjQuMVwiOnJldHVybiBjLmFsZ29yaXRobS5wYXJhbXMucHJpdl9rZXk9ci5EU0FwYXJhbS5kZWNvZGUoYy5zdWJqZWN0UHJpdmF0ZUtleSxcImRlclwiKSx7dHlwZTpcImRzYVwiLHBhcmFtczpjLmFsZ29yaXRobS5wYXJhbXN9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBrZXkgaWQgXCIrdSl9dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBrZXkgdHlwZSBcIitmKTtjYXNlXCJSU0EgUFVCTElDIEtFWVwiOnJldHVybiByLlJTQVB1YmxpY0tleS5kZWNvZGUoaCxcImRlclwiKTtjYXNlXCJSU0EgUFJJVkFURSBLRVlcIjpyZXR1cm4gci5SU0FQcml2YXRlS2V5LmRlY29kZShoLFwiZGVyXCIpO2Nhc2VcIkRTQSBQUklWQVRFIEtFWVwiOnJldHVybnt0eXBlOlwiZHNhXCIscGFyYW1zOnIuRFNBUHJpdmF0ZUtleS5kZWNvZGUoaCxcImRlclwiKX07Y2FzZVwiRUMgUFJJVkFURSBLRVlcIjpyZXR1cm57Y3VydmU6KGg9ci5FQ1ByaXZhdGVLZXkuZGVjb2RlKGgsXCJkZXJcIikpLnBhcmFtZXRlcnMudmFsdWUscHJpdmF0ZUtleTpoLnByaXZhdGVLZXl9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBrZXkgdHlwZSBcIitmKX19dC5leHBvcnRzPXUsdS5zaWduYXR1cmU9ci5zaWduYXR1cmV9KS5jYWxsKHRoaXMsbig0KS5CdWZmZXIpfSwsLCwsLGZ1bmN0aW9uKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbihnbG9iYWwpe19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLFwiYVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEZyb3plbk1vZGVsfSksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sXCJiXCIsZnVuY3Rpb24oKXtyZXR1cm4gbG9hZEZyb3plbk1vZGVsfSksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sXCJjXCIsZnVuY3Rpb24oKXtyZXR1cm4gbG9hZFRmSHViTW9kdWxlfSksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sXCJkXCIsZnVuY3Rpb24oKXtyZXR1cm4gdmVyc2lvbn0pO3ZhciBfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTEscj1hcmd1bWVudHMubGVuZ3RoO248cjtuKyspZm9yKHZhciBpIGluIGU9YXJndW1lbnRzW25dKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLGkpJiYodFtpXT1lW2ldKTtyZXR1cm4gdH07XG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovZnVuY3Rpb24gX19hd2FpdGVyKHQsZSxuLHIpe3JldHVybiBuZXcobnx8KG49UHJvbWlzZSkpKGZ1bmN0aW9uKGksYSl7ZnVuY3Rpb24gbyh0KXt0cnl7dShyLm5leHQodCkpfWNhdGNoKHQpe2EodCl9fWZ1bmN0aW9uIHModCl7dHJ5e3Uoci50aHJvdyh0KSl9Y2F0Y2godCl7YSh0KX19ZnVuY3Rpb24gdSh0KXt0LmRvbmU/aSh0LnZhbHVlKTpuZXcgbihmdW5jdGlvbihlKXtlKHQudmFsdWUpfSkudGhlbihvLHMpfXUoKHI9ci5hcHBseSh0LGV8fFtdKSkubmV4dCgpKX0pfWZ1bmN0aW9uIF9fZ2VuZXJhdG9yKHQsZSl7dmFyIG4scixpLGEsbz17bGFiZWw6MCxzZW50OmZ1bmN0aW9uKCl7aWYoMSZpWzBdKXRocm93IGlbMV07cmV0dXJuIGlbMV19LHRyeXM6W10sb3BzOltdfTtyZXR1cm4gYT17bmV4dDpzKDApLHRocm93OnMoMSkscmV0dXJuOnMoMil9LFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKGFbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSksYTtmdW5jdGlvbiBzKGEpe3JldHVybiBmdW5jdGlvbihzKXtyZXR1cm4gZnVuY3Rpb24oYSl7aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtmb3IoO287KXRyeXtpZihuPTEsciYmKGk9clsyJmFbMF0/XCJyZXR1cm5cIjphWzBdP1widGhyb3dcIjpcIm5leHRcIl0pJiYhKGk9aS5jYWxsKHIsYVsxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKHI9MCxpJiYoYT1bMCxpLnZhbHVlXSksYVswXSl7Y2FzZSAwOmNhc2UgMTppPWE7YnJlYWs7Y2FzZSA0OnJldHVybiBvLmxhYmVsKysse3ZhbHVlOmFbMV0sZG9uZTohMX07Y2FzZSA1Om8ubGFiZWwrKyxyPWFbMV0sYT1bMF07Y29udGludWU7Y2FzZSA3OmE9by5vcHMucG9wKCksby50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoIShpPShpPW8udHJ5cykubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pJiYoNj09PWFbMF18fDI9PT1hWzBdKSl7bz0wO2NvbnRpbnVlfWlmKDM9PT1hWzBdJiYoIWl8fGFbMV0+aVswXSYmYVsxXTxpWzNdKSl7by5sYWJlbD1hWzFdO2JyZWFrfWlmKDY9PT1hWzBdJiZvLmxhYmVsPGlbMV0pe28ubGFiZWw9aVsxXSxpPWE7YnJlYWt9aWYoaSYmby5sYWJlbDxpWzJdKXtvLmxhYmVsPWlbMl0sby5vcHMucHVzaChhKTticmVha31pWzJdJiZvLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWV9YT1lLmNhbGwodCxvKX1jYXRjaCh0KXthPVs2LHRdLHI9MH1maW5hbGx5e249aT0wfWlmKDUmYVswXSl0aHJvdyBhWzFdO3JldHVybnt2YWx1ZTphWzBdP2FbMV06dm9pZCAwLGRvbmU6ITB9fShbYSxzXSl9fX12YXIgY29tbW9uanNHbG9iYWw9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dm9pZCAwIT09Z2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnt9O2Z1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKHQsZSl7cmV0dXJuIHQoZT17ZXhwb3J0czp7fX0sZS5leHBvcnRzKSxlLmV4cG9ydHN9dmFyIGFzcHJvbWlzZT1hc1Byb21pc2U7ZnVuY3Rpb24gYXNQcm9taXNlKHQsZSl7Zm9yKHZhciBuPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpLHI9MCxpPTIsYT0hMDtpPGFyZ3VtZW50cy5sZW5ndGg7KW5bcisrXT1hcmd1bWVudHNbaSsrXTtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oaSxvKXtuW3JdPWZ1bmN0aW9uKHQpe2lmKGEpaWYoYT0hMSx0KW8odCk7ZWxzZXtmb3IodmFyIGU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSksbj0wO248ZS5sZW5ndGg7KWVbbisrXT1hcmd1bWVudHNbbl07aS5hcHBseShudWxsLGUpfX07dHJ5e3QuYXBwbHkoZXx8bnVsbCxuKX1jYXRjaCh0KXthJiYoYT0hMSxvKHQpKX19KX12YXIgYmFzZTY0XzE9Y3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24odCxlKXt2YXIgbj1lO24ubGVuZ3RoPWZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKCFlKXJldHVybiAwO2Zvcih2YXIgbj0wOy0tZSU0PjEmJlwiPVwiPT09dC5jaGFyQXQoZSk7KSsrbjtyZXR1cm4gTWF0aC5jZWlsKDMqdC5sZW5ndGgpLzQtbn07Zm9yKHZhciByPW5ldyBBcnJheSg2NCksaT1uZXcgQXJyYXkoMTIzKSxhPTA7YTw2NDspaVtyW2FdPWE8MjY/YSs2NTphPDUyP2ErNzE6YTw2Mj9hLTQ6YS01OXw0M109YSsrO24uZW5jb2RlPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGksYT1udWxsLG89W10scz0wLHU9MDtlPG47KXt2YXIgYz10W2UrK107c3dpdGNoKHUpe2Nhc2UgMDpvW3MrK109cltjPj4yXSxpPSgzJmMpPDw0LHU9MTticmVhaztjYXNlIDE6b1tzKytdPXJbaXxjPj40XSxpPSgxNSZjKTw8Mix1PTI7YnJlYWs7Y2FzZSAyOm9bcysrXT1yW2l8Yz4+Nl0sb1tzKytdPXJbNjMmY10sdT0wfXM+ODE5MSYmKChhfHwoYT1bXSkpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsbykpLHM9MCl9cmV0dXJuIHUmJihvW3MrK109cltpXSxvW3MrK109NjEsMT09PXUmJihvW3MrK109NjEpKSxhPyhzJiZhLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsby5zbGljZSgwLHMpKSksYS5qb2luKFwiXCIpKTpTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxvLnNsaWNlKDAscykpfSxuLmRlY29kZT1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciByLGE9bixvPTAscz0wO3M8dC5sZW5ndGg7KXt2YXIgdT10LmNoYXJDb2RlQXQocysrKTtpZig2MT09PXUmJm8+MSlicmVhaztpZih2b2lkIDA9PT0odT1pW3VdKSl0aHJvdyBFcnJvcihcImludmFsaWQgZW5jb2RpbmdcIik7c3dpdGNoKG8pe2Nhc2UgMDpyPXUsbz0xO2JyZWFrO2Nhc2UgMTplW24rK109cjw8MnwoNDgmdSk+PjQscj11LG89MjticmVhaztjYXNlIDI6ZVtuKytdPSgxNSZyKTw8NHwoNjAmdSk+PjIscj11LG89MzticmVhaztjYXNlIDM6ZVtuKytdPSgzJnIpPDw2fHUsbz0wfX1pZigxPT09byl0aHJvdyBFcnJvcihcImludmFsaWQgZW5jb2RpbmdcIik7cmV0dXJuIG4tYX0sbi50ZXN0PWZ1bmN0aW9uKHQpe3JldHVybi9eKD86W0EtWmEtejAtOStcXC9dezR9KSooPzpbQS1aYS16MC05K1xcL117Mn09PXxbQS1aYS16MC05K1xcL117M309KT8kLy50ZXN0KHQpfX0pLGV2ZW50ZW1pdHRlcj1FdmVudEVtaXR0ZXI7ZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCl7dGhpcy5fbGlzdGVuZXJzPXt9fUV2ZW50RW1pdHRlci5wcm90b3R5cGUub249ZnVuY3Rpb24odCxlLG4pe3JldHVybih0aGlzLl9saXN0ZW5lcnNbdF18fCh0aGlzLl9saXN0ZW5lcnNbdF09W10pKS5wdXNoKHtmbjplLGN0eDpufHx0aGlzfSksdGhpc30sRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmY9ZnVuY3Rpb24odCxlKXtpZih2b2lkIDA9PT10KXRoaXMuX2xpc3RlbmVycz17fTtlbHNlIGlmKHZvaWQgMD09PWUpdGhpcy5fbGlzdGVuZXJzW3RdPVtdO2Vsc2UgZm9yKHZhciBuPXRoaXMuX2xpc3RlbmVyc1t0XSxyPTA7cjxuLmxlbmd0aDspbltyXS5mbj09PWU/bi5zcGxpY2UociwxKTorK3I7cmV0dXJuIHRoaXN9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9saXN0ZW5lcnNbdF07aWYoZSl7Zm9yKHZhciBuPVtdLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7KW4ucHVzaChhcmd1bWVudHNbcisrXSk7Zm9yKHI9MDtyPGUubGVuZ3RoOyllW3JdLmZuLmFwcGx5KGVbcisrXS5jdHgsbil9cmV0dXJuIHRoaXN9O3ZhciBmbG9hdF8xPWZhY3RvcnkoZmFjdG9yeSk7ZnVuY3Rpb24gZmFjdG9yeSh0KXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgRmxvYXQzMkFycmF5P2Z1bmN0aW9uKCl7dmFyIGU9bmV3IEZsb2F0MzJBcnJheShbLTBdKSxuPW5ldyBVaW50OEFycmF5KGUuYnVmZmVyKSxyPTEyOD09PW5bM107ZnVuY3Rpb24gaSh0LHIsaSl7ZVswXT10LHJbaV09blswXSxyW2krMV09blsxXSxyW2krMl09blsyXSxyW2krM109blszXX1mdW5jdGlvbiBhKHQscixpKXtlWzBdPXQscltpXT1uWzNdLHJbaSsxXT1uWzJdLHJbaSsyXT1uWzFdLHJbaSszXT1uWzBdfWZ1bmN0aW9uIG8odCxyKXtyZXR1cm4gblswXT10W3JdLG5bMV09dFtyKzFdLG5bMl09dFtyKzJdLG5bM109dFtyKzNdLGVbMF19ZnVuY3Rpb24gcyh0LHIpe3JldHVybiBuWzNdPXRbcl0sblsyXT10W3IrMV0sblsxXT10W3IrMl0sblswXT10W3IrM10sZVswXX10LndyaXRlRmxvYXRMRT1yP2k6YSx0LndyaXRlRmxvYXRCRT1yP2E6aSx0LnJlYWRGbG9hdExFPXI/bzpzLHQucmVhZEZsb2F0QkU9cj9zOm99KCk6ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsZSxuLHIpe3ZhciBpPWU8MD8xOjA7aWYoaSYmKGU9LWUpLDA9PT1lKXQoMS9lPjA/MDoyMTQ3NDgzNjQ4LG4scik7ZWxzZSBpZihpc05hTihlKSl0KDIxNDMyODkzNDQsbixyKTtlbHNlIGlmKGU+My40MDI4MjM0NjYzODUyODg2ZTM4KXQoKGk8PDMxfDIxMzkwOTUwNDApPj4+MCxuLHIpO2Vsc2UgaWYoZTwxLjE3NTQ5NDM1MDgyMjI4NzVlLTM4KXQoKGk8PDMxfE1hdGgucm91bmQoZS8xLjQwMTI5ODQ2NDMyNDgxN2UtNDUpKT4+PjAsbixyKTtlbHNle3ZhciBhPU1hdGguZmxvb3IoTWF0aC5sb2coZSkvTWF0aC5MTjIpO3QoKGk8PDMxfGErMTI3PDwyM3w4Mzg4NjA3Jk1hdGgucm91bmQoZSpNYXRoLnBvdygyLC1hKSo4Mzg4NjA4KSk+Pj4wLG4scil9fWZ1bmN0aW9uIG4odCxlLG4pe3ZhciByPXQoZSxuKSxpPTIqKHI+PjMxKSsxLGE9cj4+PjIzJjI1NSxvPTgzODg2MDcmcjtyZXR1cm4gMjU1PT09YT9vP05hTjppKigxLzApOjA9PT1hPzEuNDAxMjk4NDY0MzI0ODE3ZS00NSppKm86aSpNYXRoLnBvdygyLGEtMTUwKSoobys4Mzg4NjA4KX10LndyaXRlRmxvYXRMRT1lLmJpbmQobnVsbCx3cml0ZVVpbnRMRSksdC53cml0ZUZsb2F0QkU9ZS5iaW5kKG51bGwsd3JpdGVVaW50QkUpLHQucmVhZEZsb2F0TEU9bi5iaW5kKG51bGwscmVhZFVpbnRMRSksdC5yZWFkRmxvYXRCRT1uLmJpbmQobnVsbCxyZWFkVWludEJFKX0oKSxcInVuZGVmaW5lZFwiIT10eXBlb2YgRmxvYXQ2NEFycmF5P2Z1bmN0aW9uKCl7dmFyIGU9bmV3IEZsb2F0NjRBcnJheShbLTBdKSxuPW5ldyBVaW50OEFycmF5KGUuYnVmZmVyKSxyPTEyOD09PW5bN107ZnVuY3Rpb24gaSh0LHIsaSl7ZVswXT10LHJbaV09blswXSxyW2krMV09blsxXSxyW2krMl09blsyXSxyW2krM109blszXSxyW2krNF09bls0XSxyW2krNV09bls1XSxyW2krNl09bls2XSxyW2krN109bls3XX1mdW5jdGlvbiBhKHQscixpKXtlWzBdPXQscltpXT1uWzddLHJbaSsxXT1uWzZdLHJbaSsyXT1uWzVdLHJbaSszXT1uWzRdLHJbaSs0XT1uWzNdLHJbaSs1XT1uWzJdLHJbaSs2XT1uWzFdLHJbaSs3XT1uWzBdfWZ1bmN0aW9uIG8odCxyKXtyZXR1cm4gblswXT10W3JdLG5bMV09dFtyKzFdLG5bMl09dFtyKzJdLG5bM109dFtyKzNdLG5bNF09dFtyKzRdLG5bNV09dFtyKzVdLG5bNl09dFtyKzZdLG5bN109dFtyKzddLGVbMF19ZnVuY3Rpb24gcyh0LHIpe3JldHVybiBuWzddPXRbcl0sbls2XT10W3IrMV0sbls1XT10W3IrMl0sbls0XT10W3IrM10sblszXT10W3IrNF0sblsyXT10W3IrNV0sblsxXT10W3IrNl0sblswXT10W3IrN10sZVswXX10LndyaXRlRG91YmxlTEU9cj9pOmEsdC53cml0ZURvdWJsZUJFPXI/YTppLHQucmVhZERvdWJsZUxFPXI/bzpzLHQucmVhZERvdWJsZUJFPXI/czpvfSgpOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LGUsbixyLGksYSl7dmFyIG89cjwwPzE6MDtpZihvJiYocj0tciksMD09PXIpdCgwLGksYStlKSx0KDEvcj4wPzA6MjE0NzQ4MzY0OCxpLGErbik7ZWxzZSBpZihpc05hTihyKSl0KDAsaSxhK2UpLHQoMjE0Njk1OTM2MCxpLGErbik7ZWxzZSBpZihyPjEuNzk3NjkzMTM0ODYyMzE1N2UzMDgpdCgwLGksYStlKSx0KChvPDwzMXwyMTQ2NDM1MDcyKT4+PjAsaSxhK24pO2Vsc2V7dmFyIHM7aWYocjwyLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCl0KChzPXIvNWUtMzI0KT4+PjAsaSxhK2UpLHQoKG88PDMxfHMvNDI5NDk2NzI5Nik+Pj4wLGksYStuKTtlbHNle3ZhciB1PU1hdGguZmxvb3IoTWF0aC5sb2cocikvTWF0aC5MTjIpOzEwMjQ9PT11JiYodT0xMDIzKSx0KDQ1MDM1OTk2MjczNzA0OTYqKHM9cipNYXRoLnBvdygyLC11KSk+Pj4wLGksYStlKSx0KChvPDwzMXx1KzEwMjM8PDIwfDEwNDg1NzYqcyYxMDQ4NTc1KT4+PjAsaSxhK24pfX19ZnVuY3Rpb24gbih0LGUsbixyLGkpe3ZhciBhPXQocixpK2UpLG89dChyLGkrbikscz0yKihvPj4zMSkrMSx1PW8+Pj4yMCYyMDQ3LGM9NDI5NDk2NzI5NiooMTA0ODU3NSZvKSthO3JldHVybiAyMDQ3PT09dT9jP05hTjpzKigxLzApOjA9PT11PzVlLTMyNCpzKmM6cypNYXRoLnBvdygyLHUtMTA3NSkqKGMrNDUwMzU5OTYyNzM3MDQ5Nil9dC53cml0ZURvdWJsZUxFPWUuYmluZChudWxsLHdyaXRlVWludExFLDAsNCksdC53cml0ZURvdWJsZUJFPWUuYmluZChudWxsLHdyaXRlVWludEJFLDQsMCksdC5yZWFkRG91YmxlTEU9bi5iaW5kKG51bGwscmVhZFVpbnRMRSwwLDQpLHQucmVhZERvdWJsZUJFPW4uYmluZChudWxsLHJlYWRVaW50QkUsNCwwKX0oKSx0fWZ1bmN0aW9uIHdyaXRlVWludExFKHQsZSxuKXtlW25dPTI1NSZ0LGVbbisxXT10Pj4+OCYyNTUsZVtuKzJdPXQ+Pj4xNiYyNTUsZVtuKzNdPXQ+Pj4yNH1mdW5jdGlvbiB3cml0ZVVpbnRCRSh0LGUsbil7ZVtuXT10Pj4+MjQsZVtuKzFdPXQ+Pj4xNiYyNTUsZVtuKzJdPXQ+Pj44JjI1NSxlW24rM109MjU1JnR9ZnVuY3Rpb24gcmVhZFVpbnRMRSh0LGUpe3JldHVybih0W2VdfHRbZSsxXTw8OHx0W2UrMl08PDE2fHRbZSszXTw8MjQpPj4+MH1mdW5jdGlvbiByZWFkVWludEJFKHQsZSl7cmV0dXJuKHRbZV08PDI0fHRbZSsxXTw8MTZ8dFtlKzJdPDw4fHRbZSszXSk+Pj4wfXZhciBpbnF1aXJlXzE9aW5xdWlyZTtmdW5jdGlvbiBpbnF1aXJlKG1vZHVsZU5hbWUpe3RyeXt2YXIgbW9kJCQxPWV2YWwoXCJxdWlyZVwiLnJlcGxhY2UoL14vLFwicmVcIikpKG1vZHVsZU5hbWUpO2lmKG1vZCQkMSYmKG1vZCQkMS5sZW5ndGh8fE9iamVjdC5rZXlzKG1vZCQkMSkubGVuZ3RoKSlyZXR1cm4gbW9kJCQxfWNhdGNoKHQpe31yZXR1cm4gbnVsbH12YXIgdXRmOF8xPWNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uKHQsZSl7dmFyIG49ZTtuLmxlbmd0aD1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPTAscj0wO3I8dC5sZW5ndGg7KytyKShuPXQuY2hhckNvZGVBdChyKSk8MTI4P2UrPTE6bjwyMDQ4P2UrPTI6NTUyOTY9PSg2NDUxMiZuKSYmNTYzMjA9PSg2NDUxMiZ0LmNoYXJDb2RlQXQocisxKSk/KCsrcixlKz00KTplKz0zO3JldHVybiBlfSxuLnJlYWQ9ZnVuY3Rpb24odCxlLG4pe2lmKG4tZTwxKXJldHVyblwiXCI7Zm9yKHZhciByLGk9bnVsbCxhPVtdLG89MDtlPG47KShyPXRbZSsrXSk8MTI4P2FbbysrXT1yOnI+MTkxJiZyPDIyND9hW28rK109KDMxJnIpPDw2fDYzJnRbZSsrXTpyPjIzOSYmcjwzNjU/KHI9KCg3JnIpPDwxOHwoNjMmdFtlKytdKTw8MTJ8KDYzJnRbZSsrXSk8PDZ8NjMmdFtlKytdKS02NTUzNixhW28rK109NTUyOTYrKHI+PjEwKSxhW28rK109NTYzMjArKDEwMjMmcikpOmFbbysrXT0oMTUmcik8PDEyfCg2MyZ0W2UrK10pPDw2fDYzJnRbZSsrXSxvPjgxOTEmJigoaXx8KGk9W10pKS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGEpKSxvPTApO3JldHVybiBpPyhvJiZpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsYS5zbGljZSgwLG8pKSksaS5qb2luKFwiXCIpKTpTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxhLnNsaWNlKDAsbykpfSxuLndyaXRlPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHIsaSxhPW4sbz0wO288dC5sZW5ndGg7KytvKShyPXQuY2hhckNvZGVBdChvKSk8MTI4P2VbbisrXT1yOnI8MjA0OD8oZVtuKytdPXI+PjZ8MTkyLGVbbisrXT02MyZyfDEyOCk6NTUyOTY9PSg2NDUxMiZyKSYmNTYzMjA9PSg2NDUxMiYoaT10LmNoYXJDb2RlQXQobysxKSkpPyhyPTY1NTM2KygoMTAyMyZyKTw8MTApKygxMDIzJmkpLCsrbyxlW24rK109cj4+MTh8MjQwLGVbbisrXT1yPj4xMiY2M3wxMjgsZVtuKytdPXI+PjYmNjN8MTI4LGVbbisrXT02MyZyfDEyOCk6KGVbbisrXT1yPj4xMnwyMjQsZVtuKytdPXI+PjYmNjN8MTI4LGVbbisrXT02MyZyfDEyOCk7cmV0dXJuIG4tYX19KSxwb29sXzE9cG9vbDtmdW5jdGlvbiBwb29sKHQsZSxuKXt2YXIgcj1ufHw4MTkyLGk9cj4+PjEsYT1udWxsLG89cjtyZXR1cm4gZnVuY3Rpb24obil7aWYobjwxfHxuPmkpcmV0dXJuIHQobik7bytuPnImJihhPXQociksbz0wKTt2YXIgcz1lLmNhbGwoYSxvLG8rPW4pO3JldHVybiA3Jm8mJihvPTErKDd8bykpLHN9fXZhciBsb25nYml0cz1Mb25nQml0cztmdW5jdGlvbiBMb25nQml0cyh0LGUpe3RoaXMubG89dD4+PjAsdGhpcy5oaT1lPj4+MH12YXIgemVybz1Mb25nQml0cy56ZXJvPW5ldyBMb25nQml0cygwLDApO3plcm8udG9OdW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4gMH0semVyby56ekVuY29kZT16ZXJvLnp6RGVjb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LHplcm8ubGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIDF9O3ZhciB6ZXJvSGFzaD1Mb25nQml0cy56ZXJvSGFzaD1cIlxcMFxcMFxcMFxcMFxcMFxcMFxcMFxcMFwiO0xvbmdCaXRzLmZyb21OdW1iZXI9ZnVuY3Rpb24odCl7aWYoMD09PXQpcmV0dXJuIHplcm87dmFyIGU9dDwwO2UmJih0PS10KTt2YXIgbj10Pj4+MCxyPSh0LW4pLzQyOTQ5NjcyOTY+Pj4wO3JldHVybiBlJiYocj1+cj4+PjAsbj1+bj4+PjAsKytuPjQyOTQ5NjcyOTUmJihuPTAsKytyPjQyOTQ5NjcyOTUmJihyPTApKSksbmV3IExvbmdCaXRzKG4scil9LExvbmdCaXRzLmZyb209ZnVuY3Rpb24odCl7aWYoXCJudW1iZXJcIj09dHlwZW9mIHQpcmV0dXJuIExvbmdCaXRzLmZyb21OdW1iZXIodCk7aWYobWluaW1hbC5pc1N0cmluZyh0KSl7aWYoIW1pbmltYWwuTG9uZylyZXR1cm4gTG9uZ0JpdHMuZnJvbU51bWJlcihwYXJzZUludCh0LDEwKSk7dD1taW5pbWFsLkxvbmcuZnJvbVN0cmluZyh0KX1yZXR1cm4gdC5sb3d8fHQuaGlnaD9uZXcgTG9uZ0JpdHModC5sb3c+Pj4wLHQuaGlnaD4+PjApOnplcm99LExvbmdCaXRzLnByb3RvdHlwZS50b051bWJlcj1mdW5jdGlvbih0KXtpZighdCYmdGhpcy5oaT4+PjMxKXt2YXIgZT0xK350aGlzLmxvPj4+MCxuPX50aGlzLmhpPj4+MDtyZXR1cm4gZXx8KG49bisxPj4+MCksLShlKzQyOTQ5NjcyOTYqbil9cmV0dXJuIHRoaXMubG8rNDI5NDk2NzI5Nip0aGlzLmhpfSxMb25nQml0cy5wcm90b3R5cGUudG9Mb25nPWZ1bmN0aW9uKHQpe3JldHVybiBtaW5pbWFsLkxvbmc/bmV3IG1pbmltYWwuTG9uZygwfHRoaXMubG8sMHx0aGlzLmhpLEJvb2xlYW4odCkpOntsb3c6MHx0aGlzLmxvLGhpZ2g6MHx0aGlzLmhpLHVuc2lnbmVkOkJvb2xlYW4odCl9fTt2YXIgY2hhckNvZGVBdD1TdHJpbmcucHJvdG90eXBlLmNoYXJDb2RlQXQ7TG9uZ0JpdHMuZnJvbUhhc2g9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT16ZXJvSGFzaD96ZXJvOm5ldyBMb25nQml0cygoY2hhckNvZGVBdC5jYWxsKHQsMCl8Y2hhckNvZGVBdC5jYWxsKHQsMSk8PDh8Y2hhckNvZGVBdC5jYWxsKHQsMik8PDE2fGNoYXJDb2RlQXQuY2FsbCh0LDMpPDwyNCk+Pj4wLChjaGFyQ29kZUF0LmNhbGwodCw0KXxjaGFyQ29kZUF0LmNhbGwodCw1KTw8OHxjaGFyQ29kZUF0LmNhbGwodCw2KTw8MTZ8Y2hhckNvZGVBdC5jYWxsKHQsNyk8PDI0KT4+PjApfSxMb25nQml0cy5wcm90b3R5cGUudG9IYXNoPWZ1bmN0aW9uKCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JnRoaXMubG8sdGhpcy5sbz4+PjgmMjU1LHRoaXMubG8+Pj4xNiYyNTUsdGhpcy5sbz4+PjI0LDI1NSZ0aGlzLmhpLHRoaXMuaGk+Pj44JjI1NSx0aGlzLmhpPj4+MTYmMjU1LHRoaXMuaGk+Pj4yNCl9LExvbmdCaXRzLnByb3RvdHlwZS56ekVuY29kZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuaGk+PjMxO3JldHVybiB0aGlzLmhpPSgodGhpcy5oaTw8MXx0aGlzLmxvPj4+MzEpXnQpPj4+MCx0aGlzLmxvPSh0aGlzLmxvPDwxXnQpPj4+MCx0aGlzfSxMb25nQml0cy5wcm90b3R5cGUuenpEZWNvZGU9ZnVuY3Rpb24oKXt2YXIgdD0tKDEmdGhpcy5sbyk7cmV0dXJuIHRoaXMubG89KCh0aGlzLmxvPj4+MXx0aGlzLmhpPDwzMSledCk+Pj4wLHRoaXMuaGk9KHRoaXMuaGk+Pj4xXnQpPj4+MCx0aGlzfSxMb25nQml0cy5wcm90b3R5cGUubGVuZ3RoPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sbyxlPSh0aGlzLmxvPj4+Mjh8dGhpcy5oaTw8NCk+Pj4wLG49dGhpcy5oaT4+PjI0O3JldHVybiAwPT09bj8wPT09ZT90PDE2Mzg0P3Q8MTI4PzE6Mjp0PDIwOTcxNTI/Mzo0OmU8MTYzODQ/ZTwxMjg/NTo2OmU8MjA5NzE1Mj83Ojg6bjwxMjg/OToxMH07dmFyIG1pbmltYWw9Y3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24odCxlKXt2YXIgbj1lO2Z1bmN0aW9uIHIodCxlLG4pe2Zvcih2YXIgcj1PYmplY3Qua2V5cyhlKSxpPTA7aTxyLmxlbmd0aDsrK2kpdm9pZCAwIT09dFtyW2ldXSYmbnx8KHRbcltpXV09ZVtyW2ldXSk7cmV0dXJuIHR9ZnVuY3Rpb24gaSh0KXtmdW5jdGlvbiBlKHQsbil7aWYoISh0aGlzIGluc3RhbmNlb2YgZSkpcmV0dXJuIG5ldyBlKHQsbik7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJtZXNzYWdlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0fX0pLEVycm9yLmNhcHR1cmVTdGFja1RyYWNlP0Vycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsZSk6T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJzdGFja1wiLHt2YWx1ZToobmV3IEVycm9yKS5zdGFja3x8XCJcIn0pLG4mJnIodGhpcyxuKX1yZXR1cm4oZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1lLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm5hbWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHR9fSksZS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5uYW1lK1wiOiBcIit0aGlzLm1lc3NhZ2V9LGV9bi5hc1Byb21pc2U9YXNwcm9taXNlLG4uYmFzZTY0PWJhc2U2NF8xLG4uRXZlbnRFbWl0dGVyPWV2ZW50ZW1pdHRlcixuLmZsb2F0PWZsb2F0XzEsbi5pbnF1aXJlPWlucXVpcmVfMSxuLnV0Zjg9dXRmOF8xLG4ucG9vbD1wb29sXzEsbi5Mb25nQml0cz1sb25nYml0cyxuLmVtcHR5QXJyYXk9T2JqZWN0LmZyZWV6ZT9PYmplY3QuZnJlZXplKFtdKTpbXSxuLmVtcHR5T2JqZWN0PU9iamVjdC5mcmVlemU/T2JqZWN0LmZyZWV6ZSh7fSk6e30sbi5pc05vZGU9Qm9vbGVhbihjb21tb25qc0dsb2JhbC5wcm9jZXNzJiZjb21tb25qc0dsb2JhbC5wcm9jZXNzLnZlcnNpb25zJiZjb21tb25qc0dsb2JhbC5wcm9jZXNzLnZlcnNpb25zLm5vZGUpLG4uaXNJbnRlZ2VyPU51bWJlci5pc0ludGVnZXJ8fGZ1bmN0aW9uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0JiZpc0Zpbml0ZSh0KSYmTWF0aC5mbG9vcih0KT09PXR9LG4uaXNTdHJpbmc9ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR8fHQgaW5zdGFuY2VvZiBTdHJpbmd9LG4uaXNPYmplY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwib2JqZWN0XCI9PXR5cGVvZiB0fSxuLmlzc2V0PW4uaXNTZXQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10W2VdO3JldHVybiEobnVsbD09bnx8IXQuaGFzT3duUHJvcGVydHkoZSkpJiYoXCJvYmplY3RcIiE9dHlwZW9mIG58fChBcnJheS5pc0FycmF5KG4pP24ubGVuZ3RoOk9iamVjdC5rZXlzKG4pLmxlbmd0aCk+MCl9LG4uQnVmZmVyPWZ1bmN0aW9uKCl7dHJ5e3ZhciB0PW4uaW5xdWlyZShcImJ1ZmZlclwiKS5CdWZmZXI7cmV0dXJuIHQucHJvdG90eXBlLnV0ZjhXcml0ZT90Om51bGx9Y2F0Y2godCl7cmV0dXJuIG51bGx9fSgpLG4uX0J1ZmZlcl9mcm9tPW51bGwsbi5fQnVmZmVyX2FsbG9jVW5zYWZlPW51bGwsbi5uZXdCdWZmZXI9ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/bi5CdWZmZXI/bi5fQnVmZmVyX2FsbG9jVW5zYWZlKHQpOm5ldyBuLkFycmF5KHQpOm4uQnVmZmVyP24uX0J1ZmZlcl9mcm9tKHQpOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50OEFycmF5P3Q6bmV3IFVpbnQ4QXJyYXkodCl9LG4uQXJyYXk9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXk/VWludDhBcnJheTpBcnJheSxuLkxvbmc9Y29tbW9uanNHbG9iYWwuZGNvZGVJTyYmY29tbW9uanNHbG9iYWwuZGNvZGVJTy5Mb25nfHxuLmlucXVpcmUoXCJsb25nXCIpLG4ua2V5MlJlPS9edHJ1ZXxmYWxzZXwwfDEkLyxuLmtleTMyUmU9L14tPyg/OjB8WzEtOV1bMC05XSopJC8sbi5rZXk2NFJlPS9eKD86W1xcXFx4MDAtXFxcXHhmZl17OH18LT8oPzowfFsxLTldWzAtOV0qKSkkLyxuLmxvbmdUb0hhc2g9ZnVuY3Rpb24odCl7cmV0dXJuIHQ/bi5Mb25nQml0cy5mcm9tKHQpLnRvSGFzaCgpOm4uTG9uZ0JpdHMuemVyb0hhc2h9LG4ubG9uZ0Zyb21IYXNoPWZ1bmN0aW9uKHQsZSl7dmFyIHI9bi5Mb25nQml0cy5mcm9tSGFzaCh0KTtyZXR1cm4gbi5Mb25nP24uTG9uZy5mcm9tQml0cyhyLmxvLHIuaGksZSk6ci50b051bWJlcihCb29sZWFuKGUpKX0sbi5tZXJnZT1yLG4ubGNGaXJzdD1mdW5jdGlvbih0KXtyZXR1cm4gdC5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSt0LnN1YnN0cmluZygxKX0sbi5uZXdFcnJvcj1pLG4uUHJvdG9jb2xFcnJvcj1pKFwiUHJvdG9jb2xFcnJvclwiKSxuLm9uZU9mR2V0dGVyPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT17fSxuPTA7bjx0Lmxlbmd0aDsrK24pZVt0W25dXT0xO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgdD1PYmplY3Qua2V5cyh0aGlzKSxuPXQubGVuZ3RoLTE7bj4tMTstLW4paWYoMT09PWVbdFtuXV0mJnZvaWQgMCE9PXRoaXNbdFtuXV0mJm51bGwhPT10aGlzW3Rbbl1dKXJldHVybiB0W25dfX0sbi5vbmVPZlNldHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDsrK24pdFtuXSE9PWUmJmRlbGV0ZSB0aGlzW3Rbbl1dfX0sbi50b0pTT05PcHRpb25zPXtsb25nczpTdHJpbmcsZW51bXM6U3RyaW5nLGJ5dGVzOlN0cmluZyxqc29uOiEwfSxuLl9jb25maWd1cmU9ZnVuY3Rpb24oKXt2YXIgdD1uLkJ1ZmZlcjt0PyhuLl9CdWZmZXJfZnJvbT10LmZyb20hPT1VaW50OEFycmF5LmZyb20mJnQuZnJvbXx8ZnVuY3Rpb24oZSxuKXtyZXR1cm4gbmV3IHQoZSxuKX0sbi5fQnVmZmVyX2FsbG9jVW5zYWZlPXQuYWxsb2NVbnNhZmV8fGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgdChlKX0pOm4uX0J1ZmZlcl9mcm9tPW4uX0J1ZmZlcl9hbGxvY1Vuc2FmZT1udWxsfX0pLHdyaXRlcj1Xcml0ZXIsQnVmZmVyV3JpdGVyLExvbmdCaXRzJDE9bWluaW1hbC5Mb25nQml0cyxiYXNlNjQ9bWluaW1hbC5iYXNlNjQsdXRmOD1taW5pbWFsLnV0Zjg7ZnVuY3Rpb24gT3AodCxlLG4pe3RoaXMuZm49dCx0aGlzLmxlbj1lLHRoaXMubmV4dD12b2lkIDAsdGhpcy52YWw9bn1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIFN0YXRlKHQpe3RoaXMuaGVhZD10LmhlYWQsdGhpcy50YWlsPXQudGFpbCx0aGlzLmxlbj10Lmxlbix0aGlzLm5leHQ9dC5zdGF0ZXN9ZnVuY3Rpb24gV3JpdGVyKCl7dGhpcy5sZW49MCx0aGlzLmhlYWQ9bmV3IE9wKG5vb3AsMCwwKSx0aGlzLnRhaWw9dGhpcy5oZWFkLHRoaXMuc3RhdGVzPW51bGx9ZnVuY3Rpb24gd3JpdGVCeXRlKHQsZSxuKXtlW25dPTI1NSZ0fWZ1bmN0aW9uIHdyaXRlVmFyaW50MzIodCxlLG4pe2Zvcig7dD4xMjc7KWVbbisrXT0xMjcmdHwxMjgsdD4+Pj03O2Vbbl09dH1mdW5jdGlvbiBWYXJpbnRPcCh0LGUpe3RoaXMubGVuPXQsdGhpcy5uZXh0PXZvaWQgMCx0aGlzLnZhbD1lfWZ1bmN0aW9uIHdyaXRlVmFyaW50NjQodCxlLG4pe2Zvcig7dC5oaTspZVtuKytdPTEyNyZ0LmxvfDEyOCx0LmxvPSh0LmxvPj4+N3x0LmhpPDwyNSk+Pj4wLHQuaGk+Pj49Nztmb3IoO3QubG8+MTI3OyllW24rK109MTI3JnQubG98MTI4LHQubG89dC5sbz4+Pjc7ZVtuKytdPXQubG99ZnVuY3Rpb24gd3JpdGVGaXhlZDMyKHQsZSxuKXtlW25dPTI1NSZ0LGVbbisxXT10Pj4+OCYyNTUsZVtuKzJdPXQ+Pj4xNiYyNTUsZVtuKzNdPXQ+Pj4yNH1Xcml0ZXIuY3JlYXRlPW1pbmltYWwuQnVmZmVyP2Z1bmN0aW9uKCl7cmV0dXJuKFdyaXRlci5jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEJ1ZmZlcldyaXRlcn0pKCl9OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBXcml0ZXJ9LFdyaXRlci5hbGxvYz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG1pbmltYWwuQXJyYXkodCl9LG1pbmltYWwuQXJyYXkhPT1BcnJheSYmKFdyaXRlci5hbGxvYz1taW5pbWFsLnBvb2woV3JpdGVyLmFsbG9jLG1pbmltYWwuQXJyYXkucHJvdG90eXBlLnN1YmFycmF5KSksV3JpdGVyLnByb3RvdHlwZS5fcHVzaD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMudGFpbD10aGlzLnRhaWwubmV4dD1uZXcgT3AodCxlLG4pLHRoaXMubGVuKz1lLHRoaXN9LFZhcmludE9wLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKE9wLnByb3RvdHlwZSksVmFyaW50T3AucHJvdG90eXBlLmZuPXdyaXRlVmFyaW50MzIsV3JpdGVyLnByb3RvdHlwZS51aW50MzI9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubGVuKz0odGhpcy50YWlsPXRoaXMudGFpbC5uZXh0PW5ldyBWYXJpbnRPcCgodD4+Pj0wKTwxMjg/MTp0PDE2Mzg0PzI6dDwyMDk3MTUyPzM6dDwyNjg0MzU0NTY/NDo1LHQpKS5sZW4sdGhpc30sV3JpdGVyLnByb3RvdHlwZS5pbnQzMj1mdW5jdGlvbih0KXtyZXR1cm4gdDwwP3RoaXMuX3B1c2god3JpdGVWYXJpbnQ2NCwxMCxMb25nQml0cyQxLmZyb21OdW1iZXIodCkpOnRoaXMudWludDMyKHQpfSxXcml0ZXIucHJvdG90eXBlLnNpbnQzMj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy51aW50MzIoKHQ8PDFedD4+MzEpPj4+MCl9LFdyaXRlci5wcm90b3R5cGUudWludDY0PWZ1bmN0aW9uKHQpe3ZhciBlPUxvbmdCaXRzJDEuZnJvbSh0KTtyZXR1cm4gdGhpcy5fcHVzaCh3cml0ZVZhcmludDY0LGUubGVuZ3RoKCksZSl9LFdyaXRlci5wcm90b3R5cGUuaW50NjQ9V3JpdGVyLnByb3RvdHlwZS51aW50NjQsV3JpdGVyLnByb3RvdHlwZS5zaW50NjQ9ZnVuY3Rpb24odCl7dmFyIGU9TG9uZ0JpdHMkMS5mcm9tKHQpLnp6RW5jb2RlKCk7cmV0dXJuIHRoaXMuX3B1c2god3JpdGVWYXJpbnQ2NCxlLmxlbmd0aCgpLGUpfSxXcml0ZXIucHJvdG90eXBlLmJvb2w9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3B1c2god3JpdGVCeXRlLDEsdD8xOjApfSxXcml0ZXIucHJvdG90eXBlLmZpeGVkMzI9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3B1c2god3JpdGVGaXhlZDMyLDQsdD4+PjApfSxXcml0ZXIucHJvdG90eXBlLnNmaXhlZDMyPVdyaXRlci5wcm90b3R5cGUuZml4ZWQzMixXcml0ZXIucHJvdG90eXBlLmZpeGVkNjQ9ZnVuY3Rpb24odCl7dmFyIGU9TG9uZ0JpdHMkMS5mcm9tKHQpO3JldHVybiB0aGlzLl9wdXNoKHdyaXRlRml4ZWQzMiw0LGUubG8pLl9wdXNoKHdyaXRlRml4ZWQzMiw0LGUuaGkpfSxXcml0ZXIucHJvdG90eXBlLnNmaXhlZDY0PVdyaXRlci5wcm90b3R5cGUuZml4ZWQ2NCxXcml0ZXIucHJvdG90eXBlLmZsb2F0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wdXNoKG1pbmltYWwuZmxvYXQud3JpdGVGbG9hdExFLDQsdCl9LFdyaXRlci5wcm90b3R5cGUuZG91YmxlPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9wdXNoKG1pbmltYWwuZmxvYXQud3JpdGVEb3VibGVMRSw4LHQpfTt2YXIgd3JpdGVCeXRlcz1taW5pbWFsLkFycmF5LnByb3RvdHlwZS5zZXQ/ZnVuY3Rpb24odCxlLG4pe2Uuc2V0KHQsbil9OmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoOysrcillW24rcl09dFtyXX07V3JpdGVyLnByb3RvdHlwZS5ieXRlcz1mdW5jdGlvbih0KXt2YXIgZT10Lmxlbmd0aD4+PjA7aWYoIWUpcmV0dXJuIHRoaXMuX3B1c2god3JpdGVCeXRlLDEsMCk7aWYobWluaW1hbC5pc1N0cmluZyh0KSl7dmFyIG49V3JpdGVyLmFsbG9jKGU9YmFzZTY0Lmxlbmd0aCh0KSk7YmFzZTY0LmRlY29kZSh0LG4sMCksdD1ufXJldHVybiB0aGlzLnVpbnQzMihlKS5fcHVzaCh3cml0ZUJ5dGVzLGUsdCl9LFdyaXRlci5wcm90b3R5cGUuc3RyaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPXV0ZjgubGVuZ3RoKHQpO3JldHVybiBlP3RoaXMudWludDMyKGUpLl9wdXNoKHV0Zjgud3JpdGUsZSx0KTp0aGlzLl9wdXNoKHdyaXRlQnl0ZSwxLDApfSxXcml0ZXIucHJvdG90eXBlLmZvcms9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0ZXM9bmV3IFN0YXRlKHRoaXMpLHRoaXMuaGVhZD10aGlzLnRhaWw9bmV3IE9wKG5vb3AsMCwwKSx0aGlzLmxlbj0wLHRoaXN9LFdyaXRlci5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0ZXM/KHRoaXMuaGVhZD10aGlzLnN0YXRlcy5oZWFkLHRoaXMudGFpbD10aGlzLnN0YXRlcy50YWlsLHRoaXMubGVuPXRoaXMuc3RhdGVzLmxlbix0aGlzLnN0YXRlcz10aGlzLnN0YXRlcy5uZXh0KToodGhpcy5oZWFkPXRoaXMudGFpbD1uZXcgT3Aobm9vcCwwLDApLHRoaXMubGVuPTApLHRoaXN9LFdyaXRlci5wcm90b3R5cGUubGRlbGltPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5oZWFkLGU9dGhpcy50YWlsLG49dGhpcy5sZW47cmV0dXJuIHRoaXMucmVzZXQoKS51aW50MzIobiksbiYmKHRoaXMudGFpbC5uZXh0PXQubmV4dCx0aGlzLnRhaWw9ZSx0aGlzLmxlbis9biksdGhpc30sV3JpdGVyLnByb3RvdHlwZS5maW5pc2g9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5oZWFkLm5leHQsZT10aGlzLmNvbnN0cnVjdG9yLmFsbG9jKHRoaXMubGVuKSxuPTA7dDspdC5mbih0LnZhbCxlLG4pLG4rPXQubGVuLHQ9dC5uZXh0O3JldHVybiBlfSxXcml0ZXIuX2NvbmZpZ3VyZT1mdW5jdGlvbih0KXtCdWZmZXJXcml0ZXI9dH07dmFyIHdyaXRlcl9idWZmZXI9QnVmZmVyV3JpdGVyJDE7KEJ1ZmZlcldyaXRlciQxLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHdyaXRlci5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1CdWZmZXJXcml0ZXIkMTt2YXIgQnVmZmVyPW1pbmltYWwuQnVmZmVyO2Z1bmN0aW9uIEJ1ZmZlcldyaXRlciQxKCl7d3JpdGVyLmNhbGwodGhpcyl9QnVmZmVyV3JpdGVyJDEuYWxsb2M9ZnVuY3Rpb24odCl7cmV0dXJuKEJ1ZmZlcldyaXRlciQxLmFsbG9jPW1pbmltYWwuX0J1ZmZlcl9hbGxvY1Vuc2FmZSkodCl9O3ZhciB3cml0ZUJ5dGVzQnVmZmVyPUJ1ZmZlciYmQnVmZmVyLnByb3RvdHlwZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkmJlwic2V0XCI9PT1CdWZmZXIucHJvdG90eXBlLnNldC5uYW1lP2Z1bmN0aW9uKHQsZSxuKXtlLnNldCh0LG4pfTpmdW5jdGlvbih0LGUsbil7aWYodC5jb3B5KXQuY29weShlLG4sMCx0Lmxlbmd0aCk7ZWxzZSBmb3IodmFyIHI9MDtyPHQubGVuZ3RoOyllW24rK109dFtyKytdfTtmdW5jdGlvbiB3cml0ZVN0cmluZ0J1ZmZlcih0LGUsbil7dC5sZW5ndGg8NDA/bWluaW1hbC51dGY4LndyaXRlKHQsZSxuKTplLnV0ZjhXcml0ZSh0LG4pfUJ1ZmZlcldyaXRlciQxLnByb3RvdHlwZS5ieXRlcz1mdW5jdGlvbih0KXttaW5pbWFsLmlzU3RyaW5nKHQpJiYodD1taW5pbWFsLl9CdWZmZXJfZnJvbSh0LFwiYmFzZTY0XCIpKTt2YXIgZT10Lmxlbmd0aD4+PjA7cmV0dXJuIHRoaXMudWludDMyKGUpLGUmJnRoaXMuX3B1c2god3JpdGVCeXRlc0J1ZmZlcixlLHQpLHRoaXN9LEJ1ZmZlcldyaXRlciQxLnByb3RvdHlwZS5zdHJpbmc9ZnVuY3Rpb24odCl7dmFyIGU9QnVmZmVyLmJ5dGVMZW5ndGgodCk7cmV0dXJuIHRoaXMudWludDMyKGUpLGUmJnRoaXMuX3B1c2god3JpdGVTdHJpbmdCdWZmZXIsZSx0KSx0aGlzfTt2YXIgcmVhZGVyPVJlYWRlcixCdWZmZXJSZWFkZXIsTG9uZ0JpdHMkMj1taW5pbWFsLkxvbmdCaXRzLHV0ZjgkMT1taW5pbWFsLnV0Zjg7ZnVuY3Rpb24gaW5kZXhPdXRPZlJhbmdlKHQsZSl7cmV0dXJuIFJhbmdlRXJyb3IoXCJpbmRleCBvdXQgb2YgcmFuZ2U6IFwiK3QucG9zK1wiICsgXCIrKGV8fDEpK1wiID4gXCIrdC5sZW4pfWZ1bmN0aW9uIFJlYWRlcih0KXt0aGlzLmJ1Zj10LHRoaXMucG9zPTAsdGhpcy5sZW49dC5sZW5ndGh9dmFyIGNyZWF0ZV9hcnJheT1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9mdW5jdGlvbih0KXtpZih0IGluc3RhbmNlb2YgVWludDhBcnJheXx8QXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gbmV3IFJlYWRlcih0KTt0aHJvdyBFcnJvcihcImlsbGVnYWwgYnVmZmVyXCIpfTpmdW5jdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiBuZXcgUmVhZGVyKHQpO3Rocm93IEVycm9yKFwiaWxsZWdhbCBidWZmZXJcIil9LGU7ZnVuY3Rpb24gcmVhZExvbmdWYXJpbnQoKXt2YXIgdD1uZXcgTG9uZ0JpdHMkMigwLDApLGU9MDtpZighKHRoaXMubGVuLXRoaXMucG9zPjQpKXtmb3IoO2U8MzsrK2Upe2lmKHRoaXMucG9zPj10aGlzLmxlbil0aHJvdyBpbmRleE91dE9mUmFuZ2UodGhpcyk7aWYodC5sbz0odC5sb3woMTI3JnRoaXMuYnVmW3RoaXMucG9zXSk8PDcqZSk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gdH1yZXR1cm4gdC5sbz0odC5sb3woMTI3JnRoaXMuYnVmW3RoaXMucG9zKytdKTw8NyplKT4+PjAsdH1mb3IoO2U8NDsrK2UpaWYodC5sbz0odC5sb3woMTI3JnRoaXMuYnVmW3RoaXMucG9zXSk8PDcqZSk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gdDtpZih0LmxvPSh0LmxvfCgxMjcmdGhpcy5idWZbdGhpcy5wb3NdKTw8MjgpPj4+MCx0LmhpPSh0LmhpfCgxMjcmdGhpcy5idWZbdGhpcy5wb3NdKT4+NCk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gdDtpZihlPTAsdGhpcy5sZW4tdGhpcy5wb3M+NCl7Zm9yKDtlPDU7KytlKWlmKHQuaGk9KHQuaGl8KDEyNyZ0aGlzLmJ1Zlt0aGlzLnBvc10pPDw3KmUrMyk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gdH1lbHNlIGZvcig7ZTw1OysrZSl7aWYodGhpcy5wb3M+PXRoaXMubGVuKXRocm93IGluZGV4T3V0T2ZSYW5nZSh0aGlzKTtpZih0LmhpPSh0LmhpfCgxMjcmdGhpcy5idWZbdGhpcy5wb3NdKTw8NyplKzMpPj4+MCx0aGlzLmJ1Zlt0aGlzLnBvcysrXTwxMjgpcmV0dXJuIHR9dGhyb3cgRXJyb3IoXCJpbnZhbGlkIHZhcmludCBlbmNvZGluZ1wiKX1mdW5jdGlvbiByZWFkRml4ZWQzMl9lbmQodCxlKXtyZXR1cm4odFtlLTRdfHRbZS0zXTw8OHx0W2UtMl08PDE2fHRbZS0xXTw8MjQpPj4+MH1mdW5jdGlvbiByZWFkRml4ZWQ2NCgpe2lmKHRoaXMucG9zKzg+dGhpcy5sZW4pdGhyb3cgaW5kZXhPdXRPZlJhbmdlKHRoaXMsOCk7cmV0dXJuIG5ldyBMb25nQml0cyQyKHJlYWRGaXhlZDMyX2VuZCh0aGlzLmJ1Zix0aGlzLnBvcys9NCkscmVhZEZpeGVkMzJfZW5kKHRoaXMuYnVmLHRoaXMucG9zKz00KSl9UmVhZGVyLmNyZWF0ZT1taW5pbWFsLkJ1ZmZlcj9mdW5jdGlvbih0KXtyZXR1cm4oUmVhZGVyLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbWluaW1hbC5CdWZmZXIuaXNCdWZmZXIodCk/bmV3IEJ1ZmZlclJlYWRlcih0KTpjcmVhdGVfYXJyYXkodCl9KSh0KX06Y3JlYXRlX2FycmF5LFJlYWRlci5wcm90b3R5cGUuX3NsaWNlPW1pbmltYWwuQXJyYXkucHJvdG90eXBlLnN1YmFycmF5fHxtaW5pbWFsLkFycmF5LnByb3RvdHlwZS5zbGljZSxSZWFkZXIucHJvdG90eXBlLnVpbnQzMj0oZT00Mjk0OTY3Mjk1LGZ1bmN0aW9uKCl7aWYoZT0oMTI3JnRoaXMuYnVmW3RoaXMucG9zXSk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gZTtpZihlPShlfCgxMjcmdGhpcy5idWZbdGhpcy5wb3NdKTw8Nyk+Pj4wLHRoaXMuYnVmW3RoaXMucG9zKytdPDEyOClyZXR1cm4gZTtpZihlPShlfCgxMjcmdGhpcy5idWZbdGhpcy5wb3NdKTw8MTQpPj4+MCx0aGlzLmJ1Zlt0aGlzLnBvcysrXTwxMjgpcmV0dXJuIGU7aWYoZT0oZXwoMTI3JnRoaXMuYnVmW3RoaXMucG9zXSk8PDIxKT4+PjAsdGhpcy5idWZbdGhpcy5wb3MrK108MTI4KXJldHVybiBlO2lmKGU9KGV8KDE1JnRoaXMuYnVmW3RoaXMucG9zXSk8PDI4KT4+PjAsdGhpcy5idWZbdGhpcy5wb3MrK108MTI4KXJldHVybiBlO2lmKCh0aGlzLnBvcys9NSk+dGhpcy5sZW4pdGhyb3cgdGhpcy5wb3M9dGhpcy5sZW4saW5kZXhPdXRPZlJhbmdlKHRoaXMsMTApO3JldHVybiBlfSksUmVhZGVyLnByb3RvdHlwZS5pbnQzMj1mdW5jdGlvbigpe3JldHVybiAwfHRoaXMudWludDMyKCl9LFJlYWRlci5wcm90b3R5cGUuc2ludDMyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy51aW50MzIoKTtyZXR1cm4gdD4+PjFeLSgxJnQpfDB9LFJlYWRlci5wcm90b3R5cGUuYm9vbD1mdW5jdGlvbigpe3JldHVybiAwIT09dGhpcy51aW50MzIoKX0sUmVhZGVyLnByb3RvdHlwZS5maXhlZDMyPWZ1bmN0aW9uKCl7aWYodGhpcy5wb3MrND50aGlzLmxlbil0aHJvdyBpbmRleE91dE9mUmFuZ2UodGhpcyw0KTtyZXR1cm4gcmVhZEZpeGVkMzJfZW5kKHRoaXMuYnVmLHRoaXMucG9zKz00KX0sUmVhZGVyLnByb3RvdHlwZS5zZml4ZWQzMj1mdW5jdGlvbigpe2lmKHRoaXMucG9zKzQ+dGhpcy5sZW4pdGhyb3cgaW5kZXhPdXRPZlJhbmdlKHRoaXMsNCk7cmV0dXJuIDB8cmVhZEZpeGVkMzJfZW5kKHRoaXMuYnVmLHRoaXMucG9zKz00KX0sUmVhZGVyLnByb3RvdHlwZS5mbG9hdD1mdW5jdGlvbigpe2lmKHRoaXMucG9zKzQ+dGhpcy5sZW4pdGhyb3cgaW5kZXhPdXRPZlJhbmdlKHRoaXMsNCk7dmFyIHQ9bWluaW1hbC5mbG9hdC5yZWFkRmxvYXRMRSh0aGlzLmJ1Zix0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz00LHR9LFJlYWRlci5wcm90b3R5cGUuZG91YmxlPWZ1bmN0aW9uKCl7aWYodGhpcy5wb3MrOD50aGlzLmxlbil0aHJvdyBpbmRleE91dE9mUmFuZ2UodGhpcyw0KTt2YXIgdD1taW5pbWFsLmZsb2F0LnJlYWREb3VibGVMRSh0aGlzLmJ1Zix0aGlzLnBvcyk7cmV0dXJuIHRoaXMucG9zKz04LHR9LFJlYWRlci5wcm90b3R5cGUuYnl0ZXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnVpbnQzMigpLGU9dGhpcy5wb3Msbj10aGlzLnBvcyt0O2lmKG4+dGhpcy5sZW4pdGhyb3cgaW5kZXhPdXRPZlJhbmdlKHRoaXMsdCk7cmV0dXJuIHRoaXMucG9zKz10LEFycmF5LmlzQXJyYXkodGhpcy5idWYpP3RoaXMuYnVmLnNsaWNlKGUsbik6ZT09PW4/bmV3IHRoaXMuYnVmLmNvbnN0cnVjdG9yKDApOnRoaXMuX3NsaWNlLmNhbGwodGhpcy5idWYsZSxuKX0sUmVhZGVyLnByb3RvdHlwZS5zdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmJ5dGVzKCk7cmV0dXJuIHV0ZjgkMS5yZWFkKHQsMCx0Lmxlbmd0aCl9LFJlYWRlci5wcm90b3R5cGUuc2tpcD1mdW5jdGlvbih0KXtpZihcIm51bWJlclwiPT10eXBlb2YgdCl7aWYodGhpcy5wb3MrdD50aGlzLmxlbil0aHJvdyBpbmRleE91dE9mUmFuZ2UodGhpcyx0KTt0aGlzLnBvcys9dH1lbHNlIGRve2lmKHRoaXMucG9zPj10aGlzLmxlbil0aHJvdyBpbmRleE91dE9mUmFuZ2UodGhpcyl9d2hpbGUoMTI4JnRoaXMuYnVmW3RoaXMucG9zKytdKTtyZXR1cm4gdGhpc30sUmVhZGVyLnByb3RvdHlwZS5za2lwVHlwZT1mdW5jdGlvbih0KXtzd2l0Y2godCl7Y2FzZSAwOnRoaXMuc2tpcCgpO2JyZWFrO2Nhc2UgMTp0aGlzLnNraXAoOCk7YnJlYWs7Y2FzZSAyOnRoaXMuc2tpcCh0aGlzLnVpbnQzMigpKTticmVhaztjYXNlIDM6Zm9yKDs0IT0odD03JnRoaXMudWludDMyKCkpOyl0aGlzLnNraXBUeXBlKHQpO2JyZWFrO2Nhc2UgNTp0aGlzLnNraXAoNCk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcImludmFsaWQgd2lyZSB0eXBlIFwiK3QrXCIgYXQgb2Zmc2V0IFwiK3RoaXMucG9zKX1yZXR1cm4gdGhpc30sUmVhZGVyLl9jb25maWd1cmU9ZnVuY3Rpb24odCl7QnVmZmVyUmVhZGVyPXQ7dmFyIGU9bWluaW1hbC5Mb25nP1widG9Mb25nXCI6XCJ0b051bWJlclwiO21pbmltYWwubWVyZ2UoUmVhZGVyLnByb3RvdHlwZSx7aW50NjQ6ZnVuY3Rpb24oKXtyZXR1cm4gcmVhZExvbmdWYXJpbnQuY2FsbCh0aGlzKVtlXSghMSl9LHVpbnQ2NDpmdW5jdGlvbigpe3JldHVybiByZWFkTG9uZ1ZhcmludC5jYWxsKHRoaXMpW2VdKCEwKX0sc2ludDY0OmZ1bmN0aW9uKCl7cmV0dXJuIHJlYWRMb25nVmFyaW50LmNhbGwodGhpcykuenpEZWNvZGUoKVtlXSghMSl9LGZpeGVkNjQ6ZnVuY3Rpb24oKXtyZXR1cm4gcmVhZEZpeGVkNjQuY2FsbCh0aGlzKVtlXSghMCl9LHNmaXhlZDY0OmZ1bmN0aW9uKCl7cmV0dXJuIHJlYWRGaXhlZDY0LmNhbGwodGhpcylbZV0oITEpfX0pfTt2YXIgcmVhZGVyX2J1ZmZlcj1CdWZmZXJSZWFkZXIkMTtmdW5jdGlvbiBCdWZmZXJSZWFkZXIkMSh0KXtyZWFkZXIuY2FsbCh0aGlzLHQpfShCdWZmZXJSZWFkZXIkMS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShyZWFkZXIucHJvdG90eXBlKSkuY29uc3RydWN0b3I9QnVmZmVyUmVhZGVyJDEsbWluaW1hbC5CdWZmZXImJihCdWZmZXJSZWFkZXIkMS5wcm90b3R5cGUuX3NsaWNlPW1pbmltYWwuQnVmZmVyLnByb3RvdHlwZS5zbGljZSksQnVmZmVyUmVhZGVyJDEucHJvdG90eXBlLnN0cmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMudWludDMyKCk7cmV0dXJuIHRoaXMuYnVmLnV0ZjhTbGljZSh0aGlzLnBvcyx0aGlzLnBvcz1NYXRoLm1pbih0aGlzLnBvcyt0LHRoaXMubGVuKSl9O3ZhciBzZXJ2aWNlPVNlcnZpY2U7ZnVuY3Rpb24gU2VydmljZSh0LGUsbil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBUeXBlRXJyb3IoXCJycGNJbXBsIG11c3QgYmUgYSBmdW5jdGlvblwiKTttaW5pbWFsLkV2ZW50RW1pdHRlci5jYWxsKHRoaXMpLHRoaXMucnBjSW1wbD10LHRoaXMucmVxdWVzdERlbGltaXRlZD1Cb29sZWFuKGUpLHRoaXMucmVzcG9uc2VEZWxpbWl0ZWQ9Qm9vbGVhbihuKX0oU2VydmljZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShtaW5pbWFsLkV2ZW50RW1pdHRlci5wcm90b3R5cGUpKS5jb25zdHJ1Y3Rvcj1TZXJ2aWNlLFNlcnZpY2UucHJvdG90eXBlLnJwY0NhbGw9ZnVuY3Rpb24gdChlLG4scixpLGEpe2lmKCFpKXRocm93IFR5cGVFcnJvcihcInJlcXVlc3QgbXVzdCBiZSBzcGVjaWZpZWRcIik7dmFyIG89dGhpcztpZighYSlyZXR1cm4gbWluaW1hbC5hc1Byb21pc2UodCxvLGUsbixyLGkpO2lmKG8ucnBjSW1wbCl0cnl7cmV0dXJuIG8ucnBjSW1wbChlLG5bby5yZXF1ZXN0RGVsaW1pdGVkP1wiZW5jb2RlRGVsaW1pdGVkXCI6XCJlbmNvZGVcIl0oaSkuZmluaXNoKCksZnVuY3Rpb24odCxuKXtpZih0KXJldHVybiBvLmVtaXQoXCJlcnJvclwiLHQsZSksYSh0KTtpZihudWxsIT09bil7aWYoIShuIGluc3RhbmNlb2YgcikpdHJ5e249cltvLnJlc3BvbnNlRGVsaW1pdGVkP1wiZGVjb2RlRGVsaW1pdGVkXCI6XCJkZWNvZGVcIl0obil9Y2F0Y2godCl7cmV0dXJuIG8uZW1pdChcImVycm9yXCIsdCxlKSxhKHQpfXJldHVybiBvLmVtaXQoXCJkYXRhXCIsbixlKSxhKG51bGwsbil9by5lbmQoITApfSl9Y2F0Y2godCl7cmV0dXJuIG8uZW1pdChcImVycm9yXCIsdCxlKSx2b2lkIHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKHQpfSwwKX1lbHNlIHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKEVycm9yKFwiYWxyZWFkeSBlbmRlZFwiKSl9LDApfSxTZXJ2aWNlLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucnBjSW1wbCYmKHR8fHRoaXMucnBjSW1wbChudWxsLG51bGwsbnVsbCksdGhpcy5ycGNJbXBsPW51bGwsdGhpcy5lbWl0KFwiZW5kXCIpLm9mZigpKSx0aGlzfTt2YXIgcnBjXzE9Y3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24odCxlKXtlLlNlcnZpY2U9c2VydmljZX0pLHJvb3RzPXt9LGluZGV4TWluaW1hbD1jcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbih0LGUpe3ZhciBuPWU7ZnVuY3Rpb24gcigpe24uUmVhZGVyLl9jb25maWd1cmUobi5CdWZmZXJSZWFkZXIpLG4udXRpbC5fY29uZmlndXJlKCl9bi5idWlsZD1cIm1pbmltYWxcIixuLldyaXRlcj13cml0ZXIsbi5CdWZmZXJXcml0ZXI9d3JpdGVyX2J1ZmZlcixuLlJlYWRlcj1yZWFkZXIsbi5CdWZmZXJSZWFkZXI9cmVhZGVyX2J1ZmZlcixuLnV0aWw9bWluaW1hbCxuLnJwYz1ycGNfMSxuLnJvb3RzPXJvb3RzLG4uY29uZmlndXJlPXIsbi5Xcml0ZXIuX2NvbmZpZ3VyZShuLkJ1ZmZlcldyaXRlcikscigpfSksbWluaW1hbCQxPWluZGV4TWluaW1hbCxtaW5pbWFsXzE9bWluaW1hbCQxLnJvb3RzLG1pbmltYWxfMj1taW5pbWFsJDEuUmVhZGVyLG1pbmltYWxfMz1taW5pbWFsJDEudXRpbCwkUmVhZGVyPW1pbmltYWwkMS5SZWFkZXIsJHV0aWw9bWluaW1hbCQxLnV0aWwsJHJvb3Q9bWluaW1hbCQxLnJvb3RzLmRlZmF1bHR8fChtaW5pbWFsJDEucm9vdHMuZGVmYXVsdD17fSk7JHJvb3QudGVuc29yZmxvdz1mdW5jdGlvbigpe3ZhciB0LGUsbj17fTtyZXR1cm4gbi5Bbnk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUudHlwZVVybD1cIlwiLHQucHJvdG90eXBlLnZhbHVlPSR1dGlsLm5ld0J1ZmZlcihbXSksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5Bbnk7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci50eXBlVXJsPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAyOnIudmFsdWU9dC5ieXRlcygpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSxuLkRhdGFUeXBlPSh0PXt9LChlPU9iamVjdC5jcmVhdGUodCkpW3RbMF09XCJEVF9JTlZBTElEXCJdPTAsZVt0WzFdPVwiRFRfRkxPQVRcIl09MSxlW3RbMl09XCJEVF9ET1VCTEVcIl09MixlW3RbM109XCJEVF9JTlQzMlwiXT0zLGVbdFs0XT1cIkRUX1VJTlQ4XCJdPTQsZVt0WzVdPVwiRFRfSU5UMTZcIl09NSxlW3RbNl09XCJEVF9JTlQ4XCJdPTYsZVt0WzddPVwiRFRfU1RSSU5HXCJdPTcsZVt0WzhdPVwiRFRfQ09NUExFWDY0XCJdPTgsZVt0WzldPVwiRFRfSU5UNjRcIl09OSxlW3RbMTBdPVwiRFRfQk9PTFwiXT0xMCxlW3RbMTFdPVwiRFRfUUlOVDhcIl09MTEsZVt0WzEyXT1cIkRUX1FVSU5UOFwiXT0xMixlW3RbMTNdPVwiRFRfUUlOVDMyXCJdPTEzLGVbdFsxNF09XCJEVF9CRkxPQVQxNlwiXT0xNCxlW3RbMTAxXT1cIkRUX0ZMT0FUX1JFRlwiXT0xMDEsZVt0WzEwMl09XCJEVF9ET1VCTEVfUkVGXCJdPTEwMixlW3RbMTAzXT1cIkRUX0lOVDMyX1JFRlwiXT0xMDMsZVt0WzEwNF09XCJEVF9VSU5UOF9SRUZcIl09MTA0LGVbdFsxMDVdPVwiRFRfSU5UMTZfUkVGXCJdPTEwNSxlW3RbMTA2XT1cIkRUX0lOVDhfUkVGXCJdPTEwNixlW3RbMTA3XT1cIkRUX1NUUklOR19SRUZcIl09MTA3LGVbdFsxMDhdPVwiRFRfQ09NUExFWDY0X1JFRlwiXT0xMDgsZVt0WzEwOV09XCJEVF9JTlQ2NF9SRUZcIl09MTA5LGVbdFsxMTBdPVwiRFRfQk9PTF9SRUZcIl09MTEwLGVbdFsxMTFdPVwiRFRfUUlOVDhfUkVGXCJdPTExMSxlW3RbMTEyXT1cIkRUX1FVSU5UOF9SRUZcIl09MTEyLGVbdFsxMTNdPVwiRFRfUUlOVDMyX1JFRlwiXT0xMTMsZVt0WzExNF09XCJEVF9CRkxPQVQxNl9SRUZcIl09MTE0LGUpLG4uVGVuc29yU2hhcGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMuZGltPVtdLHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUuZGltPSR1dGlsLmVtcHR5QXJyYXksdC5wcm90b3R5cGUudW5rbm93blJhbms9ITEsdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5UZW5zb3JTaGFwZTt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMjpyLmRpbSYmci5kaW0ubGVuZ3RofHwoci5kaW09W10pLHIuZGltLnB1c2goJHJvb3QudGVuc29yZmxvdy5UZW5zb3JTaGFwZS5EaW0uZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2Nhc2UgMzpyLnVua25vd25SYW5rPXQuYm9vbCgpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdC5EaW09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUuc2l6ZT0kdXRpbC5Mb25nPyR1dGlsLkxvbmcuZnJvbUJpdHMoMCwwLCExKTowLHQucHJvdG90eXBlLm5hbWU9XCJcIix0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LlRlbnNvclNoYXBlLkRpbTt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLnNpemU9dC5pbnQ2NCgpO2JyZWFrO2Nhc2UgMjpyLm5hbWU9dC5zdHJpbmcoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdH0oKSxuLlRlbnNvcj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy5mbG9hdFZhbD1bXSx0aGlzLmRvdWJsZVZhbD1bXSx0aGlzLmludFZhbD1bXSx0aGlzLnN0cmluZ1ZhbD1bXSx0aGlzLnNjb21wbGV4VmFsPVtdLHRoaXMuaW50NjRWYWw9W10sdGhpcy5ib29sVmFsPVtdLHRoaXMudWludDMyVmFsPVtdLHRoaXMudWludDY0VmFsPVtdLHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUuZHR5cGU9MCx0LnByb3RvdHlwZS50ZW5zb3JTaGFwZT1udWxsLHQucHJvdG90eXBlLnZlcnNpb25OdW1iZXI9MCx0LnByb3RvdHlwZS50ZW5zb3JDb250ZW50PSR1dGlsLm5ld0J1ZmZlcihbXSksdC5wcm90b3R5cGUuZmxvYXRWYWw9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5kb3VibGVWYWw9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5pbnRWYWw9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5zdHJpbmdWYWw9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5zY29tcGxleFZhbD0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLmludDY0VmFsPSR1dGlsLmVtcHR5QXJyYXksdC5wcm90b3R5cGUuYm9vbFZhbD0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLnVpbnQzMlZhbD0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLnVpbnQ2NFZhbD0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuVGVuc29yO3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIuZHR5cGU9dC5pbnQzMigpO2JyZWFrO2Nhc2UgMjpyLnRlbnNvclNoYXBlPSRyb290LnRlbnNvcmZsb3cuVGVuc29yU2hhcGUuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSAzOnIudmVyc2lvbk51bWJlcj10LmludDMyKCk7YnJlYWs7Y2FzZSA0OnIudGVuc29yQ29udGVudD10LmJ5dGVzKCk7YnJlYWs7Y2FzZSA1OmlmKHIuZmxvYXRWYWwmJnIuZmxvYXRWYWwubGVuZ3RofHwoci5mbG9hdFZhbD1bXSksMj09KDcmaSkpZm9yKHZhciBhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci5mbG9hdFZhbC5wdXNoKHQuZmxvYXQoKSk7ZWxzZSByLmZsb2F0VmFsLnB1c2godC5mbG9hdCgpKTticmVhaztjYXNlIDY6aWYoci5kb3VibGVWYWwmJnIuZG91YmxlVmFsLmxlbmd0aHx8KHIuZG91YmxlVmFsPVtdKSwyPT0oNyZpKSlmb3IoYT10LnVpbnQzMigpK3QucG9zO3QucG9zPGE7KXIuZG91YmxlVmFsLnB1c2godC5kb3VibGUoKSk7ZWxzZSByLmRvdWJsZVZhbC5wdXNoKHQuZG91YmxlKCkpO2JyZWFrO2Nhc2UgNzppZihyLmludFZhbCYmci5pbnRWYWwubGVuZ3RofHwoci5pbnRWYWw9W10pLDI9PSg3JmkpKWZvcihhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci5pbnRWYWwucHVzaCh0LmludDMyKCkpO2Vsc2Ugci5pbnRWYWwucHVzaCh0LmludDMyKCkpO2JyZWFrO2Nhc2UgODpyLnN0cmluZ1ZhbCYmci5zdHJpbmdWYWwubGVuZ3RofHwoci5zdHJpbmdWYWw9W10pLHIuc3RyaW5nVmFsLnB1c2godC5ieXRlcygpKTticmVhaztjYXNlIDk6aWYoci5zY29tcGxleFZhbCYmci5zY29tcGxleFZhbC5sZW5ndGh8fChyLnNjb21wbGV4VmFsPVtdKSwyPT0oNyZpKSlmb3IoYT10LnVpbnQzMigpK3QucG9zO3QucG9zPGE7KXIuc2NvbXBsZXhWYWwucHVzaCh0LmZsb2F0KCkpO2Vsc2Ugci5zY29tcGxleFZhbC5wdXNoKHQuZmxvYXQoKSk7YnJlYWs7Y2FzZSAxMDppZihyLmludDY0VmFsJiZyLmludDY0VmFsLmxlbmd0aHx8KHIuaW50NjRWYWw9W10pLDI9PSg3JmkpKWZvcihhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci5pbnQ2NFZhbC5wdXNoKHQuaW50NjQoKSk7ZWxzZSByLmludDY0VmFsLnB1c2godC5pbnQ2NCgpKTticmVhaztjYXNlIDExOmlmKHIuYm9vbFZhbCYmci5ib29sVmFsLmxlbmd0aHx8KHIuYm9vbFZhbD1bXSksMj09KDcmaSkpZm9yKGE9dC51aW50MzIoKSt0LnBvczt0LnBvczxhOylyLmJvb2xWYWwucHVzaCh0LmJvb2woKSk7ZWxzZSByLmJvb2xWYWwucHVzaCh0LmJvb2woKSk7YnJlYWs7Y2FzZSAxNjppZihyLnVpbnQzMlZhbCYmci51aW50MzJWYWwubGVuZ3RofHwoci51aW50MzJWYWw9W10pLDI9PSg3JmkpKWZvcihhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci51aW50MzJWYWwucHVzaCh0LnVpbnQzMigpKTtlbHNlIHIudWludDMyVmFsLnB1c2godC51aW50MzIoKSk7YnJlYWs7Y2FzZSAxNzppZihyLnVpbnQ2NFZhbCYmci51aW50NjRWYWwubGVuZ3RofHwoci51aW50NjRWYWw9W10pLDI9PSg3JmkpKWZvcihhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci51aW50NjRWYWwucHVzaCh0LnVpbnQ2NCgpKTtlbHNlIHIudWludDY0VmFsLnB1c2godC51aW50NjQoKSk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLG4uQXR0clZhbHVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9dmFyIGU7cmV0dXJuIHQucHJvdG90eXBlLmxpc3Q9bnVsbCx0LnByb3RvdHlwZS5zPSR1dGlsLm5ld0J1ZmZlcihbXSksdC5wcm90b3R5cGUuaT0kdXRpbC5Mb25nPyR1dGlsLkxvbmcuZnJvbUJpdHMoMCwwLCExKTowLHQucHJvdG90eXBlLmY9MCx0LnByb3RvdHlwZS5iPSExLHQucHJvdG90eXBlLnR5cGU9MCx0LnByb3RvdHlwZS5zaGFwZT1udWxsLHQucHJvdG90eXBlLnRlbnNvcj1udWxsLHQucHJvdG90eXBlLnBsYWNlaG9sZGVyPVwiXCIsdC5wcm90b3R5cGUuZnVuYz1udWxsLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcInZhbHVlXCIse2dldDokdXRpbC5vbmVPZkdldHRlcihlPVtcImxpc3RcIixcInNcIixcImlcIixcImZcIixcImJcIixcInR5cGVcIixcInNoYXBlXCIsXCJ0ZW5zb3JcIixcInBsYWNlaG9sZGVyXCIsXCJmdW5jXCJdKSxzZXQ6JHV0aWwub25lT2ZTZXR0ZXIoZSl9KSx0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LkF0dHJWYWx1ZTt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLmxpc3Q9JHJvb3QudGVuc29yZmxvdy5BdHRyVmFsdWUuTGlzdFZhbHVlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMjpyLnM9dC5ieXRlcygpO2JyZWFrO2Nhc2UgMzpyLmk9dC5pbnQ2NCgpO2JyZWFrO2Nhc2UgNDpyLmY9dC5mbG9hdCgpO2JyZWFrO2Nhc2UgNTpyLmI9dC5ib29sKCk7YnJlYWs7Y2FzZSA2OnIudHlwZT10LmludDMyKCk7YnJlYWs7Y2FzZSA3OnIuc2hhcGU9JHJvb3QudGVuc29yZmxvdy5UZW5zb3JTaGFwZS5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztjYXNlIDg6ci50ZW5zb3I9JHJvb3QudGVuc29yZmxvdy5UZW5zb3IuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSA5OnIucGxhY2Vob2xkZXI9dC5zdHJpbmcoKTticmVhaztjYXNlIDEwOnIuZnVuYz0kcm9vdC50ZW5zb3JmbG93Lk5hbWVBdHRyTGlzdC5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHQuTGlzdFZhbHVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLnM9W10sdGhpcy5pPVtdLHRoaXMuZj1bXSx0aGlzLmI9W10sdGhpcy50eXBlPVtdLHRoaXMuc2hhcGU9W10sdGhpcy50ZW5zb3I9W10sdGhpcy5mdW5jPVtdLHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUucz0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLmk9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5mPSR1dGlsLmVtcHR5QXJyYXksdC5wcm90b3R5cGUuYj0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLnR5cGU9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5zaGFwZT0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLnRlbnNvcj0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLmZ1bmM9JHV0aWwuZW1wdHlBcnJheSx0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LkF0dHJWYWx1ZS5MaXN0VmFsdWU7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDI6ci5zJiZyLnMubGVuZ3RofHwoci5zPVtdKSxyLnMucHVzaCh0LmJ5dGVzKCkpO2JyZWFrO2Nhc2UgMzppZihyLmkmJnIuaS5sZW5ndGh8fChyLmk9W10pLDI9PSg3JmkpKWZvcih2YXIgYT10LnVpbnQzMigpK3QucG9zO3QucG9zPGE7KXIuaS5wdXNoKHQuaW50NjQoKSk7ZWxzZSByLmkucHVzaCh0LmludDY0KCkpO2JyZWFrO2Nhc2UgNDppZihyLmYmJnIuZi5sZW5ndGh8fChyLmY9W10pLDI9PSg3JmkpKWZvcihhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci5mLnB1c2godC5mbG9hdCgpKTtlbHNlIHIuZi5wdXNoKHQuZmxvYXQoKSk7YnJlYWs7Y2FzZSA1OmlmKHIuYiYmci5iLmxlbmd0aHx8KHIuYj1bXSksMj09KDcmaSkpZm9yKGE9dC51aW50MzIoKSt0LnBvczt0LnBvczxhOylyLmIucHVzaCh0LmJvb2woKSk7ZWxzZSByLmIucHVzaCh0LmJvb2woKSk7YnJlYWs7Y2FzZSA2OmlmKHIudHlwZSYmci50eXBlLmxlbmd0aHx8KHIudHlwZT1bXSksMj09KDcmaSkpZm9yKGE9dC51aW50MzIoKSt0LnBvczt0LnBvczxhOylyLnR5cGUucHVzaCh0LmludDMyKCkpO2Vsc2Ugci50eXBlLnB1c2godC5pbnQzMigpKTticmVhaztjYXNlIDc6ci5zaGFwZSYmci5zaGFwZS5sZW5ndGh8fChyLnNoYXBlPVtdKSxyLnNoYXBlLnB1c2goJHJvb3QudGVuc29yZmxvdy5UZW5zb3JTaGFwZS5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSA4OnIudGVuc29yJiZyLnRlbnNvci5sZW5ndGh8fChyLnRlbnNvcj1bXSksci50ZW5zb3IucHVzaCgkcm9vdC50ZW5zb3JmbG93LlRlbnNvci5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSA5OnIuZnVuYyYmci5mdW5jLmxlbmd0aHx8KHIuZnVuYz1bXSksci5mdW5jLnB1c2goJHJvb3QudGVuc29yZmxvdy5OYW1lQXR0ckxpc3QuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSx0fSgpLG4uTmFtZUF0dHJMaXN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLmF0dHI9e30sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5uYW1lPVwiXCIsdC5wcm90b3R5cGUuYXR0cj0kdXRpbC5lbXB0eU9iamVjdCx0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuLHI9dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLGk9bmV3ICRyb290LnRlbnNvcmZsb3cuTmFtZUF0dHJMaXN0O3QucG9zPHI7KXt2YXIgYT10LnVpbnQzMigpO3N3aXRjaChhPj4+Myl7Y2FzZSAxOmkubmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMjp0LnNraXAoKS5wb3MrKyxpLmF0dHI9PT0kdXRpbC5lbXB0eU9iamVjdCYmKGkuYXR0cj17fSksbj10LnN0cmluZygpLHQucG9zKyssaS5hdHRyW25dPSRyb290LnRlbnNvcmZsb3cuQXR0clZhbHVlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmEpfX1yZXR1cm4gaX0sdH0oKSxuLk5vZGVEZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMuaW5wdXQ9W10sdGhpcy5hdHRyPXt9LHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUubmFtZT1cIlwiLHQucHJvdG90eXBlLm9wPVwiXCIsdC5wcm90b3R5cGUuaW5wdXQ9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5kZXZpY2U9XCJcIix0LnByb3RvdHlwZS5hdHRyPSR1dGlsLmVtcHR5T2JqZWN0LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG4scj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2UsaT1uZXcgJHJvb3QudGVuc29yZmxvdy5Ob2RlRGVmO3QucG9zPHI7KXt2YXIgYT10LnVpbnQzMigpO3N3aXRjaChhPj4+Myl7Y2FzZSAxOmkubmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMjppLm9wPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAzOmkuaW5wdXQmJmkuaW5wdXQubGVuZ3RofHwoaS5pbnB1dD1bXSksaS5pbnB1dC5wdXNoKHQuc3RyaW5nKCkpO2JyZWFrO2Nhc2UgNDppLmRldmljZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgNTp0LnNraXAoKS5wb3MrKyxpLmF0dHI9PT0kdXRpbC5lbXB0eU9iamVjdCYmKGkuYXR0cj17fSksbj10LnN0cmluZygpLHQucG9zKyssaS5hdHRyW25dPSRyb290LnRlbnNvcmZsb3cuQXR0clZhbHVlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmEpfX1yZXR1cm4gaX0sdH0oKSxuLlZlcnNpb25EZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMuYmFkQ29uc3VtZXJzPVtdLHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUucHJvZHVjZXI9MCx0LnByb3RvdHlwZS5taW5Db25zdW1lcj0wLHQucHJvdG90eXBlLmJhZENvbnN1bWVycz0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuVmVyc2lvbkRlZjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLnByb2R1Y2VyPXQuaW50MzIoKTticmVhaztjYXNlIDI6ci5taW5Db25zdW1lcj10LmludDMyKCk7YnJlYWs7Y2FzZSAzOmlmKHIuYmFkQ29uc3VtZXJzJiZyLmJhZENvbnN1bWVycy5sZW5ndGh8fChyLmJhZENvbnN1bWVycz1bXSksMj09KDcmaSkpZm9yKHZhciBhPXQudWludDMyKCkrdC5wb3M7dC5wb3M8YTspci5iYWRDb25zdW1lcnMucHVzaCh0LmludDMyKCkpO2Vsc2Ugci5iYWRDb25zdW1lcnMucHVzaCh0LmludDMyKCkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSxuLkdyYXBoRGVmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLm5vZGU9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5ub2RlPSR1dGlsLmVtcHR5QXJyYXksdC5wcm90b3R5cGUudmVyc2lvbnM9bnVsbCx0LnByb3RvdHlwZS5saWJyYXJ5PW51bGwsdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5HcmFwaERlZjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLm5vZGUmJnIubm9kZS5sZW5ndGh8fChyLm5vZGU9W10pLHIubm9kZS5wdXNoKCRyb290LnRlbnNvcmZsb3cuTm9kZURlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSA0OnIudmVyc2lvbnM9JHJvb3QudGVuc29yZmxvdy5WZXJzaW9uRGVmLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMjpyLmxpYnJhcnk9JHJvb3QudGVuc29yZmxvdy5GdW5jdGlvbkRlZkxpYnJhcnkuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLG4uQ29sbGVjdGlvbkRlZj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXZhciBlO3JldHVybiB0LnByb3RvdHlwZS5ub2RlTGlzdD1udWxsLHQucHJvdG90eXBlLmJ5dGVzTGlzdD1udWxsLHQucHJvdG90eXBlLmludDY0TGlzdD1udWxsLHQucHJvdG90eXBlLmZsb2F0TGlzdD1udWxsLHQucHJvdG90eXBlLmFueUxpc3Q9bnVsbCxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJraW5kXCIse2dldDokdXRpbC5vbmVPZkdldHRlcihlPVtcIm5vZGVMaXN0XCIsXCJieXRlc0xpc3RcIixcImludDY0TGlzdFwiLFwiZmxvYXRMaXN0XCIsXCJhbnlMaXN0XCJdKSxzZXQ6JHV0aWwub25lT2ZTZXR0ZXIoZSl9KSx0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LkNvbGxlY3Rpb25EZWY7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci5ub2RlTGlzdD0kcm9vdC50ZW5zb3JmbG93LkNvbGxlY3Rpb25EZWYuTm9kZUxpc3QuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSAyOnIuYnl0ZXNMaXN0PSRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5CeXRlc0xpc3QuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSAzOnIuaW50NjRMaXN0PSRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5JbnQ2NExpc3QuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSA0OnIuZmxvYXRMaXN0PSRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5GbG9hdExpc3QuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSA1OnIuYW55TGlzdD0kcm9vdC50ZW5zb3JmbG93LkNvbGxlY3Rpb25EZWYuQW55TGlzdC5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHQuTm9kZUxpc3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMudmFsdWU9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS52YWx1ZT0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5Ob2RlTGlzdDt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLnZhbHVlJiZyLnZhbHVlLmxlbmd0aHx8KHIudmFsdWU9W10pLHIudmFsdWUucHVzaCh0LnN0cmluZygpKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdC5CeXRlc0xpc3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMudmFsdWU9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS52YWx1ZT0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5CeXRlc0xpc3Q7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci52YWx1ZSYmci52YWx1ZS5sZW5ndGh8fChyLnZhbHVlPVtdKSxyLnZhbHVlLnB1c2godC5ieXRlcygpKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdC5JbnQ2NExpc3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMudmFsdWU9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS52YWx1ZT0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuQ29sbGVjdGlvbkRlZi5JbnQ2NExpc3Q7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6aWYoci52YWx1ZSYmci52YWx1ZS5sZW5ndGh8fChyLnZhbHVlPVtdKSwyPT0oNyZpKSlmb3IodmFyIGE9dC51aW50MzIoKSt0LnBvczt0LnBvczxhOylyLnZhbHVlLnB1c2godC5pbnQ2NCgpKTtlbHNlIHIudmFsdWUucHVzaCh0LmludDY0KCkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSx0LkZsb2F0TGlzdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy52YWx1ZT1bXSx0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9cmV0dXJuIHQucHJvdG90eXBlLnZhbHVlPSR1dGlsLmVtcHR5QXJyYXksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5Db2xsZWN0aW9uRGVmLkZsb2F0TGlzdDt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTppZihyLnZhbHVlJiZyLnZhbHVlLmxlbmd0aHx8KHIudmFsdWU9W10pLDI9PSg3JmkpKWZvcih2YXIgYT10LnVpbnQzMigpK3QucG9zO3QucG9zPGE7KXIudmFsdWUucHVzaCh0LmZsb2F0KCkpO2Vsc2Ugci52YWx1ZS5wdXNoKHQuZmxvYXQoKSk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLHQuQW55TGlzdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy52YWx1ZT1bXSx0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9cmV0dXJuIHQucHJvdG90eXBlLnZhbHVlPSR1dGlsLmVtcHR5QXJyYXksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5Db2xsZWN0aW9uRGVmLkFueUxpc3Q7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci52YWx1ZSYmci52YWx1ZS5sZW5ndGh8fChyLnZhbHVlPVtdKSxyLnZhbHVlLnB1c2goJHJvb3QudGVuc29yZmxvdy5BbnkuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSx0fSgpLG4uU2F2ZXJEZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX12YXIgZSxuO3JldHVybiB0LnByb3RvdHlwZS5maWxlbmFtZVRlbnNvck5hbWU9XCJcIix0LnByb3RvdHlwZS5zYXZlVGVuc29yTmFtZT1cIlwiLHQucHJvdG90eXBlLnJlc3RvcmVPcE5hbWU9XCJcIix0LnByb3RvdHlwZS5tYXhUb0tlZXA9MCx0LnByb3RvdHlwZS5zaGFyZGVkPSExLHQucHJvdG90eXBlLmtlZXBDaGVja3BvaW50RXZlcnlOSG91cnM9MCx0LnByb3RvdHlwZS52ZXJzaW9uPTAsdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5TYXZlckRlZjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLmZpbGVuYW1lVGVuc29yTmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMjpyLnNhdmVUZW5zb3JOYW1lPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAzOnIucmVzdG9yZU9wTmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgNDpyLm1heFRvS2VlcD10LmludDMyKCk7YnJlYWs7Y2FzZSA1OnIuc2hhcmRlZD10LmJvb2woKTticmVhaztjYXNlIDY6ci5rZWVwQ2hlY2twb2ludEV2ZXJ5TkhvdXJzPXQuZmxvYXQoKTticmVhaztjYXNlIDc6ci52ZXJzaW9uPXQuaW50MzIoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHQuQ2hlY2twb2ludEZvcm1hdFZlcnNpb249KGU9e30sKG49T2JqZWN0LmNyZWF0ZShlKSlbZVswXT1cIkxFR0FDWVwiXT0wLG5bZVsxXT1cIlYxXCJdPTEsbltlWzJdPVwiVjJcIl09MixuKSx0fSgpLG4uVGVuc29ySW5mbz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXZhciBlO3JldHVybiB0LnByb3RvdHlwZS5uYW1lPVwiXCIsdC5wcm90b3R5cGUuY29vU3BhcnNlPW51bGwsdC5wcm90b3R5cGUuZHR5cGU9MCx0LnByb3RvdHlwZS50ZW5zb3JTaGFwZT1udWxsLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImVuY29kaW5nXCIse2dldDokdXRpbC5vbmVPZkdldHRlcihlPVtcIm5hbWVcIixcImNvb1NwYXJzZVwiXSksc2V0OiR1dGlsLm9uZU9mU2V0dGVyKGUpfSksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5UZW5zb3JJbmZvO3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIubmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgNDpyLmNvb1NwYXJzZT0kcm9vdC50ZW5zb3JmbG93LlRlbnNvckluZm8uQ29vU3BhcnNlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMjpyLmR0eXBlPXQuaW50MzIoKTticmVhaztjYXNlIDM6ci50ZW5zb3JTaGFwZT0kcm9vdC50ZW5zb3JmbG93LlRlbnNvclNoYXBlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdC5Db29TcGFyc2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUudmFsdWVzVGVuc29yTmFtZT1cIlwiLHQucHJvdG90eXBlLmluZGljZXNUZW5zb3JOYW1lPVwiXCIsdC5wcm90b3R5cGUuZGVuc2VTaGFwZVRlbnNvck5hbWU9XCJcIix0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LlRlbnNvckluZm8uQ29vU3BhcnNlO3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIudmFsdWVzVGVuc29yTmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMjpyLmluZGljZXNUZW5zb3JOYW1lPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAzOnIuZGVuc2VTaGFwZVRlbnNvck5hbWU9dC5zdHJpbmcoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdH0oKSxuLlNpZ25hdHVyZURlZj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy5pbnB1dHM9e30sdGhpcy5vdXRwdXRzPXt9LHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUuaW5wdXRzPSR1dGlsLmVtcHR5T2JqZWN0LHQucHJvdG90eXBlLm91dHB1dHM9JHV0aWwuZW1wdHlPYmplY3QsdC5wcm90b3R5cGUubWV0aG9kTmFtZT1cIlwiLHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG4scj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2UsaT1uZXcgJHJvb3QudGVuc29yZmxvdy5TaWduYXR1cmVEZWY7dC5wb3M8cjspe3ZhciBhPXQudWludDMyKCk7c3dpdGNoKGE+Pj4zKXtjYXNlIDE6dC5za2lwKCkucG9zKyssaS5pbnB1dHM9PT0kdXRpbC5lbXB0eU9iamVjdCYmKGkuaW5wdXRzPXt9KSxuPXQuc3RyaW5nKCksdC5wb3MrKyxpLmlucHV0c1tuXT0kcm9vdC50ZW5zb3JmbG93LlRlbnNvckluZm8uZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSAyOnQuc2tpcCgpLnBvcysrLGkub3V0cHV0cz09PSR1dGlsLmVtcHR5T2JqZWN0JiYoaS5vdXRwdXRzPXt9KSxuPXQuc3RyaW5nKCksdC5wb3MrKyxpLm91dHB1dHNbbl09JHJvb3QudGVuc29yZmxvdy5UZW5zb3JJbmZvLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMzppLm1ldGhvZE5hbWU9dC5zdHJpbmcoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZhKX19cmV0dXJuIGl9LHR9KCksbi5Bc3NldEZpbGVEZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUudGVuc29ySW5mbz1udWxsLHQucHJvdG90eXBlLmZpbGVuYW1lPVwiXCIsdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5Bc3NldEZpbGVEZWY7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci50ZW5zb3JJbmZvPSRyb290LnRlbnNvcmZsb3cuVGVuc29ySW5mby5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztjYXNlIDI6ci5maWxlbmFtZT10LnN0cmluZygpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSxuLk9wRGVmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLmlucHV0QXJnPVtdLHRoaXMub3V0cHV0QXJnPVtdLHRoaXMuYXR0cj1bXSx0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9cmV0dXJuIHQucHJvdG90eXBlLm5hbWU9XCJcIix0LnByb3RvdHlwZS5pbnB1dEFyZz0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLm91dHB1dEFyZz0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLmF0dHI9JHV0aWwuZW1wdHlBcnJheSx0LnByb3RvdHlwZS5kZXByZWNhdGlvbj1udWxsLHQucHJvdG90eXBlLnN1bW1hcnk9XCJcIix0LnByb3RvdHlwZS5kZXNjcmlwdGlvbj1cIlwiLHQucHJvdG90eXBlLmlzQ29tbXV0YXRpdmU9ITEsdC5wcm90b3R5cGUuaXNBZ2dyZWdhdGU9ITEsdC5wcm90b3R5cGUuaXNTdGF0ZWZ1bD0hMSx0LnByb3RvdHlwZS5hbGxvd3NVbmluaXRpYWxpemVkSW5wdXQ9ITEsdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5PcERlZjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLm5hbWU9dC5zdHJpbmcoKTticmVhaztjYXNlIDI6ci5pbnB1dEFyZyYmci5pbnB1dEFyZy5sZW5ndGh8fChyLmlucHV0QXJnPVtdKSxyLmlucHV0QXJnLnB1c2goJHJvb3QudGVuc29yZmxvdy5PcERlZi5BcmdEZWYuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2Nhc2UgMzpyLm91dHB1dEFyZyYmci5vdXRwdXRBcmcubGVuZ3RofHwoci5vdXRwdXRBcmc9W10pLHIub3V0cHV0QXJnLnB1c2goJHJvb3QudGVuc29yZmxvdy5PcERlZi5BcmdEZWYuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2Nhc2UgNDpyLmF0dHImJnIuYXR0ci5sZW5ndGh8fChyLmF0dHI9W10pLHIuYXR0ci5wdXNoKCRyb290LnRlbnNvcmZsb3cuT3BEZWYuQXR0ckRlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSA4OnIuZGVwcmVjYXRpb249JHJvb3QudGVuc29yZmxvdy5PcERlZi5PcERlcHJlY2F0aW9uLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgNTpyLnN1bW1hcnk9dC5zdHJpbmcoKTticmVhaztjYXNlIDY6ci5kZXNjcmlwdGlvbj10LnN0cmluZygpO2JyZWFrO2Nhc2UgMTg6ci5pc0NvbW11dGF0aXZlPXQuYm9vbCgpO2JyZWFrO2Nhc2UgMTY6ci5pc0FnZ3JlZ2F0ZT10LmJvb2woKTticmVhaztjYXNlIDE3OnIuaXNTdGF0ZWZ1bD10LmJvb2woKTticmVhaztjYXNlIDE5OnIuYWxsb3dzVW5pbml0aWFsaXplZElucHV0PXQuYm9vbCgpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdC5BcmdEZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUubmFtZT1cIlwiLHQucHJvdG90eXBlLmRlc2NyaXB0aW9uPVwiXCIsdC5wcm90b3R5cGUudHlwZT0wLHQucHJvdG90eXBlLnR5cGVBdHRyPVwiXCIsdC5wcm90b3R5cGUubnVtYmVyQXR0cj1cIlwiLHQucHJvdG90eXBlLnR5cGVMaXN0QXR0cj1cIlwiLHQucHJvdG90eXBlLmlzUmVmPSExLHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuT3BEZWYuQXJnRGVmO3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIubmFtZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMjpyLmRlc2NyaXB0aW9uPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAzOnIudHlwZT10LmludDMyKCk7YnJlYWs7Y2FzZSA0OnIudHlwZUF0dHI9dC5zdHJpbmcoKTticmVhaztjYXNlIDU6ci5udW1iZXJBdHRyPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSA2OnIudHlwZUxpc3RBdHRyPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAxNjpyLmlzUmVmPXQuYm9vbCgpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSx0LkF0dHJEZWY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUubmFtZT1cIlwiLHQucHJvdG90eXBlLnR5cGU9XCJcIix0LnByb3RvdHlwZS5kZWZhdWx0VmFsdWU9bnVsbCx0LnByb3RvdHlwZS5kZXNjcmlwdGlvbj1cIlwiLHQucHJvdG90eXBlLmhhc01pbmltdW09ITEsdC5wcm90b3R5cGUubWluaW11bT0kdXRpbC5Mb25nPyR1dGlsLkxvbmcuZnJvbUJpdHMoMCwwLCExKTowLHQucHJvdG90eXBlLmFsbG93ZWRWYWx1ZXM9bnVsbCx0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93Lk9wRGVmLkF0dHJEZWY7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci5uYW1lPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAyOnIudHlwZT10LnN0cmluZygpO2JyZWFrO2Nhc2UgMzpyLmRlZmF1bHRWYWx1ZT0kcm9vdC50ZW5zb3JmbG93LkF0dHJWYWx1ZS5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztjYXNlIDQ6ci5kZXNjcmlwdGlvbj10LnN0cmluZygpO2JyZWFrO2Nhc2UgNTpyLmhhc01pbmltdW09dC5ib29sKCk7YnJlYWs7Y2FzZSA2OnIubWluaW11bT10LmludDY0KCk7YnJlYWs7Y2FzZSA3OnIuYWxsb3dlZFZhbHVlcz0kcm9vdC50ZW5zb3JmbG93LkF0dHJWYWx1ZS5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdC5PcERlcHJlY2F0aW9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9cmV0dXJuIHQucHJvdG90eXBlLnZlcnNpb249MCx0LnByb3RvdHlwZS5leHBsYW5hdGlvbj1cIlwiLHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuT3BEZWYuT3BEZXByZWNhdGlvbjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLnZlcnNpb249dC5pbnQzMigpO2JyZWFrO2Nhc2UgMjpyLmV4cGxhbmF0aW9uPXQuc3RyaW5nKCk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLHR9KCksbi5PcExpc3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMub3A9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5vcD0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuT3BMaXN0O3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIub3AmJnIub3AubGVuZ3RofHwoci5vcD1bXSksci5vcC5wdXNoKCRyb290LnRlbnNvcmZsb3cuT3BEZWYuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSxuLk1ldGFHcmFwaERlZj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodGhpcy5jb2xsZWN0aW9uRGVmPXt9LHRoaXMuc2lnbmF0dXJlRGVmPXt9LHRoaXMuYXNzZXRGaWxlRGVmPVtdLHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUubWV0YUluZm9EZWY9bnVsbCx0LnByb3RvdHlwZS5ncmFwaERlZj1udWxsLHQucHJvdG90eXBlLnNhdmVyRGVmPW51bGwsdC5wcm90b3R5cGUuY29sbGVjdGlvbkRlZj0kdXRpbC5lbXB0eU9iamVjdCx0LnByb3RvdHlwZS5zaWduYXR1cmVEZWY9JHV0aWwuZW1wdHlPYmplY3QsdC5wcm90b3R5cGUuYXNzZXRGaWxlRGVmPSR1dGlsLmVtcHR5QXJyYXksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbixyPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxpPW5ldyAkcm9vdC50ZW5zb3JmbG93Lk1ldGFHcmFwaERlZjt0LnBvczxyOyl7dmFyIGE9dC51aW50MzIoKTtzd2l0Y2goYT4+PjMpe2Nhc2UgMTppLm1ldGFJbmZvRGVmPSRyb290LnRlbnNvcmZsb3cuTWV0YUdyYXBoRGVmLk1ldGFJbmZvRGVmLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMjppLmdyYXBoRGVmPSRyb290LnRlbnNvcmZsb3cuR3JhcGhEZWYuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSAzOmkuc2F2ZXJEZWY9JHJvb3QudGVuc29yZmxvdy5TYXZlckRlZi5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztjYXNlIDQ6dC5za2lwKCkucG9zKyssaS5jb2xsZWN0aW9uRGVmPT09JHV0aWwuZW1wdHlPYmplY3QmJihpLmNvbGxlY3Rpb25EZWY9e30pLG49dC5zdHJpbmcoKSx0LnBvcysrLGkuY29sbGVjdGlvbkRlZltuXT0kcm9vdC50ZW5zb3JmbG93LkNvbGxlY3Rpb25EZWYuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSA1OnQuc2tpcCgpLnBvcysrLGkuc2lnbmF0dXJlRGVmPT09JHV0aWwuZW1wdHlPYmplY3QmJihpLnNpZ25hdHVyZURlZj17fSksbj10LnN0cmluZygpLHQucG9zKyssaS5zaWduYXR1cmVEZWZbbl09JHJvb3QudGVuc29yZmxvdy5TaWduYXR1cmVEZWYuZGVjb2RlKHQsdC51aW50MzIoKSk7YnJlYWs7Y2FzZSA2OmkuYXNzZXRGaWxlRGVmJiZpLmFzc2V0RmlsZURlZi5sZW5ndGh8fChpLmFzc2V0RmlsZURlZj1bXSksaS5hc3NldEZpbGVEZWYucHVzaCgkcm9vdC50ZW5zb3JmbG93LkFzc2V0RmlsZURlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmYSl9fXJldHVybiBpfSx0Lk1ldGFJbmZvRGVmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLnRhZ3M9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5tZXRhR3JhcGhWZXJzaW9uPVwiXCIsdC5wcm90b3R5cGUuc3RyaXBwZWRPcExpc3Q9bnVsbCx0LnByb3RvdHlwZS5hbnlJbmZvPW51bGwsdC5wcm90b3R5cGUudGFncz0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLnRlbnNvcmZsb3dWZXJzaW9uPVwiXCIsdC5wcm90b3R5cGUudGVuc29yZmxvd0dpdFZlcnNpb249XCJcIix0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93Lk1ldGFHcmFwaERlZi5NZXRhSW5mb0RlZjt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLm1ldGFHcmFwaFZlcnNpb249dC5zdHJpbmcoKTticmVhaztjYXNlIDI6ci5zdHJpcHBlZE9wTGlzdD0kcm9vdC50ZW5zb3JmbG93Lk9wTGlzdC5kZWNvZGUodCx0LnVpbnQzMigpKTticmVhaztjYXNlIDM6ci5hbnlJbmZvPSRyb290LnRlbnNvcmZsb3cuQW55LmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgNDpyLnRhZ3MmJnIudGFncy5sZW5ndGh8fChyLnRhZ3M9W10pLHIudGFncy5wdXNoKHQuc3RyaW5nKCkpO2JyZWFrO2Nhc2UgNTpyLnRlbnNvcmZsb3dWZXJzaW9uPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSA2OnIudGVuc29yZmxvd0dpdFZlcnNpb249dC5zdHJpbmcoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZpKX19cmV0dXJuIHJ9LHR9KCksdH0oKSxuLlNhdmVkTW9kZWw9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMubWV0YUdyYXBocz1bXSx0KWZvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxuPTA7bjxlLmxlbmd0aDsrK24pbnVsbCE9dFtlW25dXSYmKHRoaXNbZVtuXV09dFtlW25dXSl9cmV0dXJuIHQucHJvdG90eXBlLnNhdmVkTW9kZWxTY2hlbWFWZXJzaW9uPSR1dGlsLkxvbmc/JHV0aWwuTG9uZy5mcm9tQml0cygwLDAsITEpOjAsdC5wcm90b3R5cGUubWV0YUdyYXBocz0kdXRpbC5lbXB0eUFycmF5LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG49dm9pZCAwPT09ZT90Lmxlbjp0LnBvcytlLHI9bmV3ICRyb290LnRlbnNvcmZsb3cuU2F2ZWRNb2RlbDt0LnBvczxuOyl7dmFyIGk9dC51aW50MzIoKTtzd2l0Y2goaT4+PjMpe2Nhc2UgMTpyLnNhdmVkTW9kZWxTY2hlbWFWZXJzaW9uPXQuaW50NjQoKTticmVhaztjYXNlIDI6ci5tZXRhR3JhcGhzJiZyLm1ldGFHcmFwaHMubGVuZ3RofHwoci5tZXRhR3JhcGhzPVtdKSxyLm1ldGFHcmFwaHMucHVzaCgkcm9vdC50ZW5zb3JmbG93Lk1ldGFHcmFwaERlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLG4uRnVuY3Rpb25EZWZMaWJyYXJ5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLmZ1bmN0aW9uPVtdLHRoaXMuZ3JhZGllbnQ9W10sdClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5mdW5jdGlvbj0kdXRpbC5lbXB0eUFycmF5LHQucHJvdG90eXBlLmdyYWRpZW50PSR1dGlsLmVtcHR5QXJyYXksdC5kZWNvZGU9ZnVuY3Rpb24odCxlKXt0IGluc3RhbmNlb2YgJFJlYWRlcnx8KHQ9JFJlYWRlci5jcmVhdGUodCkpO2Zvcih2YXIgbj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2Uscj1uZXcgJHJvb3QudGVuc29yZmxvdy5GdW5jdGlvbkRlZkxpYnJhcnk7dC5wb3M8bjspe3ZhciBpPXQudWludDMyKCk7c3dpdGNoKGk+Pj4zKXtjYXNlIDE6ci5mdW5jdGlvbiYmci5mdW5jdGlvbi5sZW5ndGh8fChyLmZ1bmN0aW9uPVtdKSxyLmZ1bmN0aW9uLnB1c2goJHJvb3QudGVuc29yZmxvdy5GdW5jdGlvbkRlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSAyOnIuZ3JhZGllbnQmJnIuZ3JhZGllbnQubGVuZ3RofHwoci5ncmFkaWVudD1bXSksci5ncmFkaWVudC5wdXNoKCRyb290LnRlbnNvcmZsb3cuR3JhZGllbnREZWYuZGVjb2RlKHQsdC51aW50MzIoKSkpO2JyZWFrO2RlZmF1bHQ6dC5za2lwVHlwZSg3JmkpfX1yZXR1cm4gcn0sdH0oKSxuLkZ1bmN0aW9uRGVmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLmF0dHI9e30sdGhpcy5ub2RlRGVmPVtdLHRoaXMucmV0PXt9LHQpZm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoOysrbiludWxsIT10W2Vbbl1dJiYodGhpc1tlW25dXT10W2Vbbl1dKX1yZXR1cm4gdC5wcm90b3R5cGUuc2lnbmF0dXJlPW51bGwsdC5wcm90b3R5cGUuYXR0cj0kdXRpbC5lbXB0eU9iamVjdCx0LnByb3RvdHlwZS5ub2RlRGVmPSR1dGlsLmVtcHR5QXJyYXksdC5wcm90b3R5cGUucmV0PSR1dGlsLmVtcHR5T2JqZWN0LHQuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dCBpbnN0YW5jZW9mICRSZWFkZXJ8fCh0PSRSZWFkZXIuY3JlYXRlKHQpKTtmb3IodmFyIG4scj12b2lkIDA9PT1lP3QubGVuOnQucG9zK2UsaT1uZXcgJHJvb3QudGVuc29yZmxvdy5GdW5jdGlvbkRlZjt0LnBvczxyOyl7dmFyIGE9dC51aW50MzIoKTtzd2l0Y2goYT4+PjMpe2Nhc2UgMTppLnNpZ25hdHVyZT0kcm9vdC50ZW5zb3JmbG93Lk9wRGVmLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgNTp0LnNraXAoKS5wb3MrKyxpLmF0dHI9PT0kdXRpbC5lbXB0eU9iamVjdCYmKGkuYXR0cj17fSksbj10LnN0cmluZygpLHQucG9zKyssaS5hdHRyW25dPSRyb290LnRlbnNvcmZsb3cuQXR0clZhbHVlLmRlY29kZSh0LHQudWludDMyKCkpO2JyZWFrO2Nhc2UgMzppLm5vZGVEZWYmJmkubm9kZURlZi5sZW5ndGh8fChpLm5vZGVEZWY9W10pLGkubm9kZURlZi5wdXNoKCRyb290LnRlbnNvcmZsb3cuTm9kZURlZi5kZWNvZGUodCx0LnVpbnQzMigpKSk7YnJlYWs7Y2FzZSA0OnQuc2tpcCgpLnBvcysrLGkucmV0PT09JHV0aWwuZW1wdHlPYmplY3QmJihpLnJldD17fSksbj10LnN0cmluZygpLHQucG9zKyssaS5yZXRbbl09dC5zdHJpbmcoKTticmVhaztkZWZhdWx0OnQuc2tpcFR5cGUoNyZhKX19cmV0dXJuIGl9LHR9KCksbi5HcmFkaWVudERlZj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYodClmb3IodmFyIGU9T2JqZWN0LmtleXModCksbj0wO248ZS5sZW5ndGg7KytuKW51bGwhPXRbZVtuXV0mJih0aGlzW2Vbbl1dPXRbZVtuXV0pfXJldHVybiB0LnByb3RvdHlwZS5mdW5jdGlvbk5hbWU9XCJcIix0LnByb3RvdHlwZS5ncmFkaWVudEZ1bmM9XCJcIix0LmRlY29kZT1mdW5jdGlvbih0LGUpe3QgaW5zdGFuY2VvZiAkUmVhZGVyfHwodD0kUmVhZGVyLmNyZWF0ZSh0KSk7Zm9yKHZhciBuPXZvaWQgMD09PWU/dC5sZW46dC5wb3MrZSxyPW5ldyAkcm9vdC50ZW5zb3JmbG93LkdyYWRpZW50RGVmO3QucG9zPG47KXt2YXIgaT10LnVpbnQzMigpO3N3aXRjaChpPj4+Myl7Y2FzZSAxOnIuZnVuY3Rpb25OYW1lPXQuc3RyaW5nKCk7YnJlYWs7Y2FzZSAyOnIuZ3JhZGllbnRGdW5jPXQuc3RyaW5nKCk7YnJlYWs7ZGVmYXVsdDp0LnNraXBUeXBlKDcmaSl9fXJldHVybiByfSx0fSgpLG59KCk7dmFyIGNvbXBpbGVkX2FwaT0kcm9vdCxjb21waWxlZF9hcGlfMT1jb21waWxlZF9hcGkudGVuc29yZmxvdztmdW5jdGlvbiBnZXRQYXJhbVZhbHVlKHQsZSxuLHIpe3ZhciBpPWUucGFyYW1zW3RdO2lmKGkmJnZvaWQgMCE9PWkuaW5wdXRJbmRleCl7aWYoXCJ0ZW5zb3JcIj09PWkudHlwZSlyZXR1cm4gZ2V0VGVuc29yKGUuaW5wdXROYW1lc1tpLmlucHV0SW5kZXhdLG4scik7aWYoXCJ0ZW5zb3JzXCI9PT1pLnR5cGUpcmV0dXJuKDA9PT1pLmlucHV0SW5kZXg/MD09PWkuaW5wdXRQYXJhbUxlbmd0aD9lLmlucHV0TmFtZXM6ZS5pbnB1dE5hbWVzLnNsaWNlKGkuaW5wdXRJbmRleCwtaS5pbnB1dFBhcmFtTGVuZ3RoKTplLmlucHV0TmFtZXMuc3BsaWNlKGkuaW5wdXRJbmRleCkpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZ2V0VGVuc29yKHQsbixyKX0pO3ZhciBhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGdldFRlbnNvcihlLmlucHV0TmFtZXMuc2xpY2UoaS5pbnB1dEluZGV4KVswXSxuLHIpLmRhdGFTeW5jKCkpO3JldHVyblwibnVtYmVyXCI9PT1pLnR5cGU/YVswXTphfXJldHVybiBpJiZpLnZhbHVlfWZ1bmN0aW9uIGdldFRlbnNvcih0LGUsbil7dmFyIHI9cGFyc2VOb2RlTmFtZSh0KSxpPXJbMF0sYT1yWzFdLG89bi5jdXJyZW50Q29udGV4dElkcy5maW5kKGZ1bmN0aW9uKHQpe3JldHVybiEhZVtnZXROb2RlTmFtZVdpdGhDb250ZXh0SWQoaSx0KV19KTtyZXR1cm4gdm9pZCAwIT09bz9lW2dldE5vZGVOYW1lV2l0aENvbnRleHRJZChpLG8pXVthXTp2b2lkIDB9ZnVuY3Rpb24gZ2V0VGVuc29yc0ZvckN1cnJlbnRDb250ZW54dCh0LGUsbil7cmV0dXJuIGVbZ2V0Tm9kZU5hbWVXaXRoQ29udGV4dElkKHQsbi5jdXJyZW50Q29udGV4dElkKV19ZnVuY3Rpb24gZ2V0Tm9kZU5hbWVBbmRJbmRleCh0LGUpe3ZhciBuPXBhcnNlTm9kZU5hbWUodCkscj1uWzBdLGk9blsxXTtyZXR1cm5bZ2V0Tm9kZU5hbWVXaXRoQ29udGV4dElkKHIsZSYmZS5jdXJyZW50Q29udGV4dElkKSxpXX1mdW5jdGlvbiBnZXROb2RlTmFtZVdpdGhDb250ZXh0SWQodCxlKXtyZXR1cm4gZT90K1wiLVwiK2U6dH1mdW5jdGlvbiBwYXJzZU5vZGVOYW1lKHQpe3ZhciBlPXQubGFzdEluZGV4T2YoXCI6XCIpO3JldHVybi0xPT09ZT9bdCwwXTpbdC5zdWJzdHJpbmcoMCxlKSxOdW1iZXIodC5zdWJzdHJpbmcoZSsxKSldfWZ1bmN0aW9uIHNwbGl0JDEodCxlKXtmb3IodmFyIG49W10scj0wO3I8dC5sZW5ndGg7cis9ZSluLnB1c2godC5zbGljZShyLHIrZSkpO3JldHVybiBufXZhciBqc29uPVt7dGZPcE5hbWU6XCJBZGRcIixkbE9wTmFtZTpcImFkZFwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiQWRkTlwiLGRsT3BOYW1lOlwiYWRkTlwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLHRmSW5wdXRQYXJhbUxlbmd0aDowLGRsUGFyYW1OYW1lOlwidGVuc29yc1wiLHR5cGU6XCJ0ZW5zb3JzXCJ9XX0se3RmT3BOYW1lOlwiQmlhc0FkZFwiLGRsT3BOYW1lOlwiYWRkXCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJTdWJcIixkbE9wTmFtZTpcInN1YlwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiUmVhbERpdlwiLGRsT3BOYW1lOlwiZGl2XCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJEaXZcIixkbE9wTmFtZTpcImRpdlwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiRmxvb3JEaXZcIixkbE9wTmFtZTpcImZsb29yRGl2XCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJNdWxcIixkbE9wTmFtZTpcIm11bFwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTWF4aW11bVwiLGRsT3BOYW1lOlwibWF4aW11bVwiLGNhdGVnb3J5OlwiYXJpdGhtZXRpY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJNaW5pbXVtXCIsZGxPcE5hbWU6XCJtaW5pbXVtXCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifV19LHt0Zk9wTmFtZTpcIlBvd1wiLGRsT3BOYW1lOlwicG93XCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJTcXVhcmVkRGlmZmVyZW5jZVwiLGRsT3BOYW1lOlwic3F1YXJlZERpZmZlcmVuY2VcIixjYXRlZ29yeTpcImFyaXRobWV0aWNcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImFcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIk1vZFwiLGRsT3BOYW1lOlwibW9kXCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJGbG9vck1vZFwiLGRsT3BOYW1lOlwibW9kXCIsY2F0ZWdvcnk6XCJhcml0aG1ldGljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfV0sYXJpdGhtZXRpYz1PYmplY3QuZnJlZXplKHtqc29uOmpzb259KSxqc29uJDE9W3t0Zk9wTmFtZTpcIkFic1wiLGRsT3BOYW1lOlwiYWJzXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJBY29zXCIsZGxPcE5hbWU6XCJhY29zXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJBc2luXCIsZGxPcE5hbWU6XCJhc2luXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJBdGFuXCIsZGxPcE5hbWU6XCJhdGFuXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJBdGFuMlwiLGRsT3BOYW1lOlwiYXRhbjJcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInlcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkNlaWxcIixkbE9wTmFtZTpcImNlaWxcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkNsaXBCeVZhbHVlXCIsZGxPcE5hbWU6XCJjbGlwQnlWYWx1ZVwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiY2xpcF92YWx1ZV9taW5cIixkbFBhcmFtTmFtZTpcImNsaXBWYWx1ZU1pblwiLHR5cGU6XCJudW1iZXJcIn0se3RmUGFyYW1OYW1lOlwiY2xpcF92YWx1ZV9tYXhcIixkbFBhcmFtTmFtZTpcImNsaXBWYWx1ZU1heFwiLHR5cGU6XCJudW1iZXJcIn1dfSx7dGZPcE5hbWU6XCJDb3NcIixkbE9wTmFtZTpcImNvc1wiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiQ29zaFwiLGRsT3BOYW1lOlwiY29zaFwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiRWx1XCIsZGxPcE5hbWU6XCJlbHVcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkV4cFwiLGRsT3BOYW1lOlwiZXhwXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJGbG9vclwiLGRsT3BOYW1lOlwiZmxvb3JcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkxvZ1wiLGRsT3BOYW1lOlwibG9nXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJOZWdcIixkbE9wTmFtZTpcIm5lZ1wiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiUmVsdVwiLGRsT3BOYW1lOlwicmVsdVwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiUmVsdTZcIixkbE9wTmFtZTpcImNsaXBCeVZhbHVlXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH0se2RsUGFyYW1OYW1lOlwiY2xpcFZhbHVlTWluXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7ZGxQYXJhbU5hbWU6XCJjbGlwVmFsdWVNYXhcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjZ9XX0se3RmT3BOYW1lOlwiU2VsdVwiLGRsT3BOYW1lOlwic2VsdVwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiU2lnbW9pZFwiLGRsT3BOYW1lOlwic2lnbW9pZFwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiU2luXCIsZGxPcE5hbWU6XCJzaW5cIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlNpbmhcIixkbE9wTmFtZTpcInNpbmhcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlNxcnRcIixkbE9wTmFtZTpcInNxcnRcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlJzcXJ0XCIsZGxPcE5hbWU6XCJyc3FydFwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiU3F1YXJlXCIsZGxPcE5hbWU6XCJzcXVhcmVcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlRhblwiLGRsT3BOYW1lOlwidGFuXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJUYW5oXCIsZGxPcE5hbWU6XCJ0YW5oXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJTaWduXCIsZGxPcE5hbWU6XCJzaWduXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJSb3VuZFwiLGRsT3BOYW1lOlwicm91bmRcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkV4cG0xXCIsZGxPcE5hbWU6XCJleHBtMVwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTG9nMXBcIixkbE9wTmFtZTpcImxvZzFwXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJSZWNpcHJvY2FsXCIsZGxPcE5hbWU6XCJyZWNpcHJvY2FsXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJSZWNpcHJvY2FsXCIsZGxPcE5hbWU6XCJyZWNpcHJvY2FsXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJTb2Z0cGx1c1wiLGRsT3BOYW1lOlwic29mdHBsdXNcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkFzaW5oXCIsZGxPcE5hbWU6XCJhc2luaFwiLGNhdGVnb3J5OlwiYmFzaWNfbWF0aFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiQWNvc2hcIixkbE9wTmFtZTpcImFjb3NoXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJBdGFuaFwiLGRsT3BOYW1lOlwiYXRhbmhcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkVyZlwiLGRsT3BOYW1lOlwiZXJmXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJQcm9kXCIsZGxPcE5hbWU6XCJwcm9kXCIsY2F0ZWdvcnk6XCJiYXNpY19tYXRoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJheGVzXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImtlZXBfZGltc1wiLGRsUGFyYW1OYW1lOlwia2VlcERpbXNcIix0eXBlOlwiYm9vbFwiLG5vdFN1cHBvcnRlZDohMH0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTGVha3lSZWx1XCIsZGxPcE5hbWU6XCJsZWFreVJlbHVcIixjYXRlZ29yeTpcImJhc2ljX21hdGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcImFscGhhXCIsZGxQYXJhbU5hbWU6XCJhbHBoYVwiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6LjJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19XSxiYXNpY01hdGg9T2JqZWN0LmZyZWV6ZSh7anNvbjpqc29uJDF9KSxqc29uJDI9W3t0Zk9wTmFtZTpcIkxvb3BDb25kXCIsZGxPcE5hbWU6XCJsb29wQ29uZFwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwicHJlZFwiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJTd2l0Y2hcIixkbE9wTmFtZTpcInN3aXRjaFwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiZGF0YVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwicHJlZFwiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJNZXJnZVwiLGRsT3BOYW1lOlwibWVyZ2VcIixjYXRlZ29yeTpcImNvbnRyb2xcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCx0ZklucHV0UGFyYW1MZW5ndGg6MCxkbFBhcmFtTmFtZTpcInRlbnNvcnNcIix0eXBlOlwidGVuc29yc1wifV19LHt0Zk9wTmFtZTpcIkVudGVyXCIsZGxPcE5hbWU6XCJlbnRlclwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH0se3RmUGFyYW1OYW1lOlwiZnJhbWVfbmFtZVwiLGRsUGFyYW1OYW1lOlwiZnJhbWVOYW1lXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJpc19jb25zdGFudFwiLGRsUGFyYW1OYW1lOlwiaXNDb25zdGFudFwiLHR5cGU6XCJib29sXCJ9XX0se3RmT3BOYW1lOlwiRXhpdFwiLGRsT3BOYW1lOlwiZXhpdFwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJOZXh0SXRlcmF0aW9uXCIsZGxPcE5hbWU6XCJuZXh0SXRlcmF0aW9uXCIsY2F0ZWdvcnk6XCJjb250cm9sXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlRlbnNvckFycmF5VjNcIixkbE9wTmFtZTpcInRlbnNvckFycmF5XCIsY2F0ZWdvcnk6XCJjb250cm9sXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJzaXplXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn0se3RmUGFyYW1OYW1lOlwiZWxlbWVudF9zaGFwZVwiLGRsUGFyYW1OYW1lOlwiZWxlbWVudFNoYXBlXCIsdHlwZTpcInNoYXBlXCJ9LHt0ZlBhcmFtTmFtZTpcImR5bmFtaWNfc2l6ZVwiLGRsUGFyYW1OYW1lOlwiZHluYW1pY1NpemVcIix0eXBlOlwiYm9vbFwifSx7dGZQYXJhbU5hbWU6XCJjbGVhcl9hZnRlcl9yZWFkXCIsZGxQYXJhbU5hbWU6XCJjbGVhckFmdGVyUmVhZFwiLHR5cGU6XCJib29sXCJ9LHt0ZlBhcmFtTmFtZTpcImlkZW50aWNhbF9lbGVtZW50X3NoYXBlc1wiLGRsUGFyYW1OYW1lOlwiaWRlbnRpY2FsRWxlbWVudFNoYXBlc1wiLHR5cGU6XCJib29sXCJ9LHt0ZlBhcmFtTmFtZTpcInRlbnNvcl9hcnJheV9uYW1lXCIsZGxQYXJhbU5hbWU6XCJuYW1lXCIsdHlwZTpcInN0cmluZ1wifV19LHt0Zk9wTmFtZTpcIlRlbnNvckFycmF5V3JpdGVWM1wiLGRsT3BOYW1lOlwidGVuc29yQXJyYXlXcml0ZVwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yQXJyYXlJZFwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiaW5kZXhcIix0eXBlOlwibnVtYmVyXCJ9LHt0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcInRlbnNvclwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDozLGRsUGFyYW1OYW1lOlwiZmxvd0luXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJUZW5zb3JBcnJheVJlYWRWM1wiLGRsT3BOYW1lOlwidGVuc29yQXJyYXlSZWFkXCIsY2F0ZWdvcnk6XCJjb250cm9sXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JBcnJheUlkXCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJpbmRleFwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwiZmxvd0luXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiVGVuc29yQXJyYXlHYXRoZXJWM1wiLGRsT3BOYW1lOlwidGVuc29yQXJyYXlHYXRoZXJcIixjYXRlZ29yeTpcImNvbnRyb2xcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInRlbnNvckFycmF5SWRcIix0eXBlOlwibnVtYmVyXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImluZGljZXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwiZmxvd0luXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn0se3RmUGFyYW1OYW1lOlwiZWxlbWVudF9zaGFwZVwiLGRsUGFyYW1OYW1lOlwiZWxlbWVudFNoYXBlXCIsdHlwZTpcInNoYXBlXCJ9XX0se3RmT3BOYW1lOlwiVGVuc29yQXJyYXlTY2F0dGVyVjNcIixkbE9wTmFtZTpcInRlbnNvckFycmF5U2NhdHRlclwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yQXJyYXlJZFwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcImZsb3dJblwiLHR5cGU6XCJudW1iZXJcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn1dfSx7dGZPcE5hbWU6XCJUZW5zb3JBcnJheUNvbmNhdFYzXCIsZGxPcE5hbWU6XCJ0ZW5zb3JBcnJheUNvbmNhdFwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yQXJyYXlJZFwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiZmxvd0luXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn0se3RmUGFyYW1OYW1lOlwiZWxlbWVudF9zaGFwZV9leGNlcHQwXCIsZGxQYXJhbU5hbWU6XCJlbGVtZW50U2hhcGVFeGNlcHQwXCIsdHlwZTpcInNoYXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlRlbnNvckFycmF5U3BsaXRWM1wiLGRsT3BOYW1lOlwidGVuc29yQXJyYXlTcGxpdFwiLGNhdGVnb3J5OlwiY29udHJvbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwidGVuc29yQXJyYXlJZFwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwidGVuc29yXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJsZW5ndGhzXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcImZsb3dJblwiLHR5cGU6XCJudW1iZXJcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn1dfSx7dGZPcE5hbWU6XCJUZW5zb3JBcnJheVNpemVWM1wiLGRsT3BOYW1lOlwidGVuc29yQXJyYXlTaXplXCIsY2F0ZWdvcnk6XCJjb250cm9sXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JBcnJheUlkXCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJmbG93SW5cIix0eXBlOlwibnVtYmVyXCJ9XX0se3RmT3BOYW1lOlwiVGVuc29yQXJyYXlDbG9zZVYzXCIsZGxPcE5hbWU6XCJ0ZW5zb3JBcnJheUNsb3NlXCIsY2F0ZWdvcnk6XCJjb250cm9sXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JBcnJheUlkXCIsdHlwZTpcIm51bWJlclwifV19XSxjb250cm9sPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQyfSksanNvbiQzPVt7dGZPcE5hbWU6XCJBdmdQb29sXCIsZGxPcE5hbWU6XCJhdmdQb29sXCIsY2F0ZWdvcnk6XCJjb252b2x1dGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwic3RyaWRlc1wiLGRsUGFyYW1OYW1lOlwic3RyaWRlc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZQYXJhbU5hbWU6XCJwYWRkaW5nXCIsZGxQYXJhbU5hbWU6XCJwYWRcIix0eXBlOlwic3RyaW5nXCJ9LHt0ZlBhcmFtTmFtZTpcImRhdGFfZm9ybWF0XCIsZGxQYXJhbU5hbWU6XCJkYXRhRm9ybWF0XCIsdHlwZTpcInN0cmluZ1wiLG5vdFN1cHBvcnRlZDohMH0se3RmUGFyYW1OYW1lOlwia3NpemVcIixkbFBhcmFtTmFtZTpcImtlcm5lbFNpemVcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTWF4UG9vbFwiLGRsT3BOYW1lOlwibWF4UG9vbFwiLGNhdGVnb3J5OlwiY29udm9sdXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcInN0cmlkZXNcIixkbFBhcmFtTmFtZTpcInN0cmlkZXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwicGFkZGluZ1wiLGRsUGFyYW1OYW1lOlwicGFkXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJkYXRhX2Zvcm1hdFwiLGRsUGFyYW1OYW1lOlwiZGF0YUZvcm1hdFwiLHR5cGU6XCJzdHJpbmdcIixub3RTdXBwb3J0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcImtzaXplXCIsZGxQYXJhbU5hbWU6XCJrZXJuZWxTaXplXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkNvbnYxRFwiLGRsT3BOYW1lOlwiY29udjFkXCIsY2F0ZWdvcnk6XCJjb252b2x1dGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiZmlsdGVyXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJzdHJpZGVcIixkbFBhcmFtTmFtZTpcInN0cmlkZVwiLHR5cGU6XCJudW1iZXJcIn0se3RmUGFyYW1OYW1lOlwicGFkZGluZ1wiLGRsUGFyYW1OYW1lOlwicGFkXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJkYXRhX2Zvcm1hdFwiLGRsUGFyYW1OYW1lOlwiZGF0YUZvcm1hdFwiLHR5cGU6XCJzdHJpbmdcIixkZWZhdWx0VmFsdWU6XCJOV0NcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcImRpbGF0aW9uXCIsZGxQYXJhbU5hbWU6XCJkaWxhdGlvblwiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MX1dfSx7dGZPcE5hbWU6XCJDb252MkRcIixkbE9wTmFtZTpcImNvbnYyZFwiLGNhdGVnb3J5OlwiY29udm9sdXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImZpbHRlclwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcInN0cmlkZXNcIixkbFBhcmFtTmFtZTpcInN0cmlkZXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwicGFkZGluZ1wiLGRsUGFyYW1OYW1lOlwicGFkXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJ1c2VDdWRubk9uR3B1XCIsZGxQYXJhbU5hbWU6XCJ1c2VDdWRubk9uR3B1XCIsdHlwZTpcImJvb2xcIn0se3RmUGFyYW1OYW1lOlwiZGF0YV9mb3JtYXRcIixkbFBhcmFtTmFtZTpcImRhdGFGb3JtYXRcIix0eXBlOlwic3RyaW5nXCIsZGVmYXVsdFZhbHVlOlwiTkhXQ1wifSx7dGZQYXJhbU5hbWU6XCJkaWxhdGlvbnNcIixkbFBhcmFtTmFtZTpcImRpbGF0aW9uc1wiLHR5cGU6XCJudW1iZXJbXVwifV19LHt0Zk9wTmFtZTpcIkNvbnYyREJhY2twcm9wSW5wdXRcIixkbE9wTmFtZTpcImNvbnYyZFRyYW5zcG9zZVwiLGNhdGVnb3J5OlwiY29udm9sdXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImZpbHRlclwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwib3V0cHV0U2hhcGVcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwic3RyaWRlc1wiLGRsUGFyYW1OYW1lOlwic3RyaWRlc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZQYXJhbU5hbWU6XCJwYWRkaW5nXCIsZGxQYXJhbU5hbWU6XCJwYWRcIix0eXBlOlwic3RyaW5nXCJ9LHt0ZlBhcmFtTmFtZTpcImRhdGFfZm9ybWF0XCIsZGxQYXJhbU5hbWU6XCJkYXRhRm9ybWF0XCIsdHlwZTpcInN0cmluZ1wiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJEZXB0aHdpc2VDb252MmRcIixkbE9wTmFtZTpcImRlcHRod2lzZUNvbnYyZFwiLGNhdGVnb3J5OlwiY29udm9sdXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImlucHV0XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJmaWx0ZXJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcInN0cmlkZXNcIixkbFBhcmFtTmFtZTpcInN0cmlkZXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwicGFkZGluZ1wiLGRsUGFyYW1OYW1lOlwicGFkXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJkYXRhX2Zvcm1hdFwiLGRsUGFyYW1OYW1lOlwiZGF0YUZvcm1hdFwiLHR5cGU6XCJzdHJpbmdcIixkZWZhdWx0VmFsdWU6XCJOSFdDXCJ9LHt0ZlBhcmFtTmFtZTpcImRpbGF0aW9uc1wiLGRsUGFyYW1OYW1lOlwiZGlsYXRpb25zXCIsdHlwZTpcIm51bWJlcltdXCJ9XX0se3RmT3BOYW1lOlwiRGVwdGh3aXNlQ29udjJkTmF0aXZlXCIsZGxPcE5hbWU6XCJkZXB0aHdpc2VDb252MmRcIixjYXRlZ29yeTpcImNvbnZvbHV0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJpbnB1dFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiZmlsdGVyXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJzdHJpZGVzXCIsZGxQYXJhbU5hbWU6XCJzdHJpZGVzXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcInBhZGRpbmdcIixkbFBhcmFtTmFtZTpcInBhZFwiLHR5cGU6XCJzdHJpbmdcIn0se3RmUGFyYW1OYW1lOlwiZGF0YV9mb3JtYXRcIixkbFBhcmFtTmFtZTpcImRhdGFGb3JtYXRcIix0eXBlOlwic3RyaW5nXCIsZGVmYXVsdFZhbHVlOlwiTkhXQ1wifSx7dGZQYXJhbU5hbWU6XCJkaWxhdGlvbnNcIixkbFBhcmFtTmFtZTpcImRpbGF0aW9uc1wiLHR5cGU6XCJudW1iZXJbXVwifV19XSxjb252b2x1dGlvbj1PYmplY3QuZnJlZXplKHtqc29uOmpzb24kM30pLGpzb24kND1be3RmT3BOYW1lOlwiRmlsbFwiLGRsT3BOYW1lOlwiZmlsbFwiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInNoYXBlXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInZhbHVlXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwifV19LHt0Zk9wTmFtZTpcIkxpblNwYWNlXCIsZGxPcE5hbWU6XCJsaW5zcGFjZVwiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInN0YXJ0XCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJzdG9wXCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJudW1cIix0eXBlOlwibnVtYmVyXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIk9uZUhvdFwiLGRsT3BOYW1lOlwib25lSG90XCIsY2F0ZWdvcnk6XCJjcmVhdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiZGVwdGhcIix0eXBlOlwibnVtYmVyXCJ9LHt0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcIm9uVmFsdWVcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjF9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcIm9mZlZhbHVlXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZQYXJhbU5hbWU6XCJheGlzXCIsZGxQYXJhbU5hbWU6XCJheGlzXCIsdHlwZTpcIm51bWJlclwiLG5vdFN1cHBvcnRlZDohMH0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiT25lc1wiLGRsT3BOYW1lOlwib25lc1wiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInNoYXBlXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9XX0se3RmT3BOYW1lOlwiT25lc0xpa2VcIixkbE9wTmFtZTpcIm9uZXNMaWtlXCIsY2F0ZWdvcnk6XCJjcmVhdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiZHR5cGVcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9XX0se3RmT3BOYW1lOlwiUmFuZG9tVW5pZm9ybVwiLGRsT3BOYW1lOlwicmFuZG9tVW5pZm9ybVwiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInNoYXBlXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcIm1pbnZhbFwiLGRsUGFyYW1OYW1lOlwibWludmFsXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZQYXJhbU5hbWU6XCJtYXh2YWxcIixkbFBhcmFtTmFtZTpcIm1heHZhbFwiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MX0se3RmUGFyYW1OYW1lOlwiZHR5cGVcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9LHt0ZlBhcmFtTmFtZTpcInNlZWRcIixkbFBhcmFtTmFtZTpcInNlZWRcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9LHt0ZlBhcmFtTmFtZTpcInNlZWQyXCIsZGxQYXJhbU5hbWU6XCJzZWVkMlwiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MCxub3RTdXBwb3J0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcIlRcIix0eXBlOlwibnVtYmVyXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlJhbmdlXCIsZGxPcE5hbWU6XCJyYW5nZVwiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInN0YXJ0XCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJzdG9wXCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJzdGVwXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZQYXJhbU5hbWU6XCJUaWR4XCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwifV19LHt0Zk9wTmFtZTpcInRydW5jYXRlZE5vcm1hbFwiLGRsT3BOYW1lOlwidHJ1bmNhdGVkTm9ybWFsXCIsY2F0ZWdvcnk6XCJjcmVhdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwic2hhcGVcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwibWVhbnNcIixkbFBhcmFtTmFtZTpcIm1lYW5cIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9LHt0ZlBhcmFtTmFtZTpcInN0ZGRldlwiLGRsUGFyYW1OYW1lOlwic3RkRGV2XCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZToxfSx7dGZQYXJhbU5hbWU6XCJzZWVkXCIsZGxQYXJhbU5hbWU6XCJzZWVkXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJzZWVkMlwiLGRsUGFyYW1OYW1lOlwic2VlZDJcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjAsbm90U3VwcG9ydGVkOiEwfSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiVFwiLHR5cGU6XCJudW1iZXJcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiWmVyb3NcIixkbE9wTmFtZTpcInplcm9zXCIsY2F0ZWdvcnk6XCJjcmVhdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwic2hhcGVcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn1dfSx7dGZPcE5hbWU6XCJaZXJvc0xpa2VcIixkbE9wTmFtZTpcInplcm9zTGlrZVwiLGNhdGVnb3J5OlwiY3JlYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9XX1dLGNyZWF0aW9uPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQ0fSksanNvbiQ1PVt7dGZPcE5hbWU6XCJOb25NYXhTdXBwcmVzc2lvblYyXCIsZGxPcE5hbWU6XCJub25NYXhTdXBwcmVzc2lvblwiLGNhdGVnb3J5OlwiZHluYW1pY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYm94ZXNcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInNjb3Jlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwibWF4T3V0cHV0U2l6ZVwiLHR5cGU6XCJudW1iZXJcIn0se3RmSW5wdXRJbmRleDozLGRsUGFyYW1OYW1lOlwiaW91VGhyZXNob2xkXCIsdHlwZTpcIm51bWJlclwifV19LHt0Zk9wTmFtZTpcIk5vbk1heFN1cHByZXNzaW9uVjNcIixkbE9wTmFtZTpcIm5vbk1heFN1cHByZXNzaW9uXCIsY2F0ZWdvcnk6XCJkeW5hbWljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJib3hlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwic2NvcmVzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJtYXhPdXRwdXRTaXplXCIsdHlwZTpcIm51bWJlclwifSx7dGZJbnB1dEluZGV4OjMsZGxQYXJhbU5hbWU6XCJpb3VUaHJlc2hvbGRcIix0eXBlOlwibnVtYmVyXCJ9LHt0ZklucHV0SW5kZXg6NCxkbFBhcmFtTmFtZTpcInNjb3JlVGhyZXNob2xkXCIsdHlwZTpcIm51bWJlclwifV19LHt0Zk9wTmFtZTpcIldoZXJlXCIsZGxPcE5hbWU6XCJ3aGVyZUFzeW5jXCIsY2F0ZWdvcnk6XCJkeW5hbWljXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJjb25kaXRpb25cIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkxpc3REaWZmXCIsZGxPcE5hbWU6XCJzZXRkaWZmMWRBc3luY1wiLGNhdGVnb3J5OlwiZHluYW1pY1wiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwieVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX1dLGR5bmFtaWM9T2JqZWN0LmZyZWV6ZSh7anNvbjpqc29uJDV9KSxqc29uJDY9W3t0Zk9wTmFtZTpcIlRvcEtWMlwiLGRsT3BOYW1lOlwidG9wS1wiLGNhdGVnb3J5OlwiZXZhbHVhdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwia1wiLHR5cGU6XCJudW1iZXJcIn0se3RmUGFyYW1OYW1lOlwic29ydGVkXCIsZGxQYXJhbU5hbWU6XCJzb3J0ZWRcIix0eXBlOlwiYm9vbFwifV19XSxldmFsdWF0aW9uPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQ2fSksanNvbiQ3PVt7dGZPcE5hbWU6XCJQbGFjZWhvbGRlcldpdGhEZWZhdWx0XCIsZGxPcE5hbWU6XCJwbGFjZWhvbGRlclwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImRlZmF1bHRcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcInNoYXBlXCIsZGxQYXJhbU5hbWU6XCJzaGFwZVwiLHR5cGU6XCJzaGFwZVwifSx7dGZQYXJhbU5hbWU6XCJkdHlwZVwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIn1dfSx7dGZPcE5hbWU6XCJQbGFjZWhvbGRlclwiLGRsT3BOYW1lOlwicGxhY2Vob2xkZXJcIixjYXRlZ29yeTpcImdyYXBoXCIscGFyYW1zOlt7dGZQYXJhbU5hbWU6XCJzaGFwZVwiLGRsUGFyYW1OYW1lOlwic2hhcGVcIix0eXBlOlwic2hhcGVcIn0se3RmUGFyYW1OYW1lOlwiZHR5cGVcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9XX0se3RmT3BOYW1lOlwiQ29uc3RcIixkbE9wTmFtZTpcImNvbnN0XCIsY2F0ZWdvcnk6XCJncmFwaFwifSx7dGZPcE5hbWU6XCJJZGVudGl0eVwiLGRsT3BOYW1lOlwiaWRlbnRpdHlcIixjYXRlZ29yeTpcImdyYXBoXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifV19LHt0Zk9wTmFtZTpcIlNuYXBzaG90XCIsZGxPcE5hbWU6XCJzbmFwc2hvdFwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9XX0se3RmT3BOYW1lOlwiUmFua1wiLGRsT3BOYW1lOlwicmFua1wiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9XX0se3RmT3BOYW1lOlwiU2l6ZVwiLGRsT3BOYW1lOlwic2l6ZVwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9XX0se3RmT3BOYW1lOlwiU2hhcGVcIixkbE9wTmFtZTpcInNoYXBlXCIsY2F0ZWdvcnk6XCJncmFwaFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJTaGFwZU5cIixkbE9wTmFtZTpcInNoYXBlTlwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCx0ZklucHV0UGFyYW1MZW5ndGg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yc1wifV19LHt0Zk9wTmFtZTpcIlByaW50XCIsZGxPcE5hbWU6XCJwcmludFwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSx0ZklucHV0UGFyYW1MZW5ndGg6MSxkbFBhcmFtTmFtZTpcImRhdGFcIix0eXBlOlwidGVuc29yc1wifSx7dGZQYXJhbU5hbWU6XCJtZXNzYWdlXCIsZGxQYXJhbU5hbWU6XCJtZXNzYWdlXCIsdHlwZTpcInN0cmluZ1wifSx7dGZQYXJhbU5hbWU6XCJmaXJzdF9uXCIsZGxQYXJhbU5hbWU6XCJmaXJzdE5cIix0eXBlOlwibnVtYmVyXCIsbm90U3VwcHJ0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcInN1bW1hcml6ZVwiLGRsUGFyYW1OYW1lOlwic3VtbWFyaXplXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTozfV19LHt0Zk9wTmFtZTpcIk5vT3BcIixkbE9wTmFtZTpcIm5vb3BcIixjYXRlZ29yeTpcImdyYXBoXCIscGFyYW1zOltdfSx7dGZPcE5hbWU6XCJTdG9wR3JhZGllbnRcIixkbE9wTmFtZTpcInN0b3BHcmFkaWVudFwiLGNhdGVnb3J5OlwiZ3JhcGhcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9XX0se3RmT3BOYW1lOlwiRmFrZVF1YW50V2l0aE1pbk1heFZhcnNcIixkbE9wTmFtZTpcImZha2VRdWFudFdpdGhNaW5NYXhWYXJzXCIsY2F0ZWdvcnk6XCJncmFwaFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwibWluXCIsZGxQYXJhbU5hbWU6XCJtaW5cIix0eXBlOlwibnVtYmVyXCJ9LHt0ZlBhcmFtTmFtZTpcIm1heFwiLGRsUGFyYW1OYW1lOlwibWF4XCIsdHlwZTpcIm51bWJlclwifV19XSxncmFwaD1PYmplY3QuZnJlZXplKHtqc29uOmpzb24kN30pLGpzb24kOD1be3RmT3BOYW1lOlwiUmVzaXplQmlsaW5lYXJcIixkbE9wTmFtZTpcInJlc2l6ZUJpbGluZWFyXCIsY2F0ZWdvcnk6XCJpbWFnZVwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiaW1hZ2VzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJzaXplXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImFsaWduX2Nvcm5lcnNcIixkbFBhcmFtTmFtZTpcImFsaWduQ29ybmVyc1wiLHR5cGU6XCJib29sXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlJlc2l6ZU5lYXJlc3ROZWlnaGJvclwiLGRsT3BOYW1lOlwicmVzaXplTmVhcmVzdE5laWdoYm9yXCIsY2F0ZWdvcnk6XCJpbWFnZVwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiaW1hZ2VzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJzaXplXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImFsaWduX2Nvcm5lcnNcIixkbFBhcmFtTmFtZTpcImFsaWduQ29ybmVyc1wiLHR5cGU6XCJib29sXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkNyb3BBbmRSZXNpemVcIixkbE9wTmFtZTpcImNyb3BBbmRSZXNpemVcIixjYXRlZ29yeTpcImltYWdlXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJpbWFnZVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYm94ZXNcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcImJveEluZFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDozLGRsUGFyYW1OYW1lOlwiY3JvcFNpemVcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwibWV0aG9kXCIsZGxQYXJhbU5hbWU6XCJtZXRob2RcIix0eXBlOlwic3RyaW5nXCJ9LHt0ZlBhcmFtTmFtZTpcImV4dHJhcG9sYXRpb25fdmFsdWVcIixkbFBhcmFtTmFtZTpcImV4dHJhcG9sYXRpb25WYWx1ZVwiLHR5cGU6XCJudW1iZXJcIn1dfV0saW1hZ2UkMT1PYmplY3QuZnJlZXplKHtqc29uOmpzb24kOH0pLGpzb24kOT1be3RmT3BOYW1lOlwiRXF1YWxcIixkbE9wTmFtZTpcImVxdWFsXCIsY2F0ZWdvcnk6XCJsb2dpY2FsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJOb3RFcXVhbFwiLGRsT3BOYW1lOlwibm90RXF1YWxcIixjYXRlZ29yeTpcImxvZ2ljYWxcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImFcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkdyZWF0ZXJcIixkbE9wTmFtZTpcImdyZWF0ZXJcIixjYXRlZ29yeTpcImxvZ2ljYWxcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImFcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkdyZWF0ZXJFcXVhbFwiLGRsT3BOYW1lOlwiZ3JlYXRlckVxdWFsXCIsY2F0ZWdvcnk6XCJsb2dpY2FsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJMZXNzXCIsZGxPcE5hbWU6XCJsZXNzXCIsY2F0ZWdvcnk6XCJsb2dpY2FsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJMZXNzRXF1YWxcIixkbE9wTmFtZTpcImxlc3NFcXVhbFwiLGNhdGVnb3J5OlwibG9naWNhbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTG9naWNhbEFuZFwiLGRsT3BOYW1lOlwibG9naWNhbEFuZFwiLGNhdGVnb3J5OlwibG9naWNhbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTG9naWNhbE5vdFwiLGRsT3BOYW1lOlwibG9naWNhbE5vdFwiLGNhdGVnb3J5OlwibG9naWNhbFwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiTG9naWNhbE9yXCIsZGxPcE5hbWU6XCJsb2dpY2FsT3JcIixjYXRlZ29yeTpcImxvZ2ljYWxcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImFcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlNlbGVjdFwiLGRsT3BOYW1lOlwid2hlcmVcIixjYXRlZ29yeTpcImxvZ2ljYWxcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImNvbmRpdGlvblwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwiYlwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX1dLGxvZ2ljYWw9T2JqZWN0LmZyZWV6ZSh7anNvbjpqc29uJDl9KSxqc29uJDEwPVt7dGZPcE5hbWU6XCJNYXRNdWxcIixkbE9wTmFtZTpcIm1hdE11bFwiLGNhdGVnb3J5OlwibWF0cmljZXNcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImFcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImJcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcInRyYW5zcG9zZV9hXCIsZGxQYXJhbU5hbWU6XCJ0cmFuc3Bvc2VBXCIsdHlwZTpcImJvb2xcIixkZWZhdWx0VmFsdWU6ITF9LHt0ZlBhcmFtTmFtZTpcInRyYW5zcG9zZV9iXCIsZGxQYXJhbU5hbWU6XCJ0cmFuc3Bvc2VCXCIsdHlwZTpcImJvb2xcIixkZWZhdWx0VmFsdWU6ITF9LHt0ZlBhcmFtTmFtZTpcIlRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkJhdGNoTWF0TXVsXCIsZGxPcE5hbWU6XCJtYXRNdWxcIixjYXRlZ29yeTpcIm1hdHJpY2VzXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJhXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJhZGpfeFwiLGRsUGFyYW1OYW1lOlwidHJhbnNwb3NlQVwiLHR5cGU6XCJib29sXCIsZGVmYXVsdFZhbHVlOiExfSx7dGZQYXJhbU5hbWU6XCJhZGpfeVwiLGRsUGFyYW1OYW1lOlwidHJhbnNwb3NlQlwiLHR5cGU6XCJib29sXCIsZGVmYXVsdFZhbHVlOiExfSx7dGZQYXJhbU5hbWU6XCJUXCIsZGxQYXJhbU5hbWU6XCJkdHlwZVwiLHR5cGU6XCJkdHlwZVwiLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJUcmFuc3Bvc2VcIixkbE9wTmFtZTpcInRyYW5zcG9zZVwiLGNhdGVnb3J5OlwibWF0cmljZXNcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInBlcm1cIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwiVFwiLGRsUGFyYW1OYW1lOlwiZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9XX1dLG1hdHJpY2VzPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQxMH0pLGpzb24kMTE9W3t0Zk9wTmFtZTpcIkZ1c2VkQmF0Y2hOb3JtXCIsZGxPcE5hbWU6XCJiYXRjaE5vcm1hbGl6YXRpb25cIixjYXRlZ29yeTpcIm5vcm1hbGl6YXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInNjYWxlXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJvZmZzZXRcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcIm1lYW5cIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6NCxkbFBhcmFtTmFtZTpcInZhcmlhbmNlXCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJlcHNpbG9uXCIsZGxQYXJhbU5hbWU6XCJlcHNpbG9uXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTouMDAxfSx7dGZQYXJhbU5hbWU6XCJkYXRhX2Zvcm1hdFwiLGRsUGFyYW1OYW1lOlwiZGF0YUZvcm1hdFwiLHR5cGU6XCJzdHJpbmdcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiRnVzZWRCYXRjaE5vcm1WMlwiLGRsT3BOYW1lOlwiYmF0Y2hOb3JtYWxpemF0aW9uXCIsY2F0ZWdvcnk6XCJub3JtYWxpemF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJzY2FsZVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwib2Zmc2V0XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjMsZGxQYXJhbU5hbWU6XCJtZWFuXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjQsZGxQYXJhbU5hbWU6XCJ2YXJpYW5jZVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiZXBzaWxvblwiLGRsUGFyYW1OYW1lOlwiZXBzaWxvblwiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6LjAwMX0se3RmUGFyYW1OYW1lOlwiZGF0YV9mb3JtYXRcIixkbFBhcmFtTmFtZTpcImRhdGFGb3JtYXRcIix0eXBlOlwic3RyaW5nXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIkxSTlwiLGRsT3BOYW1lOlwibG9jYWxSZXNwb25zZU5vcm1hbGl6YXRpb25cIixjYXRlZ29yeTpcIm5vcm1hbGl6YXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcImRlcHRoX3JhZGl1c1wiLGRsUGFyYW1OYW1lOlwicmFkaXVzXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTo1fSx7dGZQYXJhbU5hbWU6XCJiaWFzXCIsZGxQYXJhbU5hbWU6XCJiaWFzXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZToxfSx7dGZQYXJhbU5hbWU6XCJhbHBoYVwiLGRsUGFyYW1OYW1lOlwiYWxwaGFcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjF9LHt0ZlBhcmFtTmFtZTpcImJldGFcIixkbFBhcmFtTmFtZTpcImJldGFcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOi41fV19LHt0Zk9wTmFtZTpcIlNvZnRtYXhcIixkbE9wTmFtZTpcInNvZnRtYXhcIixjYXRlZ29yeTpcIm5vcm1hbGl6YXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9XX0se3RmT3BOYW1lOlwiTG9nU29mdG1heFwiLGRsT3BOYW1lOlwibG9nU29mdG1heFwiLGNhdGVnb3J5Olwibm9ybWFsaXphdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJTcGFyc2VUb0RlbnNlXCIsZGxPcE5hbWU6XCJzcGFyc2VUb0RlbnNlXCIsY2F0ZWdvcnk6XCJub3JtYWxpemF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJzcGFyc2VJbmRpY2VzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJvdXRwdXRTaGFwZVwiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJzcGFyc2VWYWx1ZXNcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcImRlZmF1bHRWYWx1ZVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwidmFsaWRhdGVfaW5kaWNlc1wiLGRsUGFyYW1OYW1lOlwidmFsaWRhdGVJbmRpY2VzXCIsdHlwZTpcImJvb2xcIixkZWZhdWx0VmFsdWU6ITAsbm90U3VwcG9ydGVkOiEwfV19XSxub3JtYWxpemF0aW9uPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQxMX0pLGpzb24kMTI9W3t0Zk9wTmFtZTpcIk1heFwiLGRsT3BOYW1lOlwibWF4XCIsY2F0ZWdvcnk6XCJyZWR1Y3Rpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwia2VlcF9kaW1zXCIsZGxQYXJhbU5hbWU6XCJrZWVwRGltc1wiLHR5cGU6XCJib29sXCJ9XX0se3RmT3BOYW1lOlwiTWVhblwiLGRsT3BOYW1lOlwibWVhblwiLGNhdGVnb3J5OlwicmVkdWN0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJheGlzXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImtlZXBfZGltc1wiLGRsUGFyYW1OYW1lOlwia2VlcERpbXNcIix0eXBlOlwiYm9vbFwifV19LHt0Zk9wTmFtZTpcIk1pblwiLGRsT3BOYW1lOlwibWluXCIsY2F0ZWdvcnk6XCJyZWR1Y3Rpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwia2VlcF9kaW1zXCIsZGxQYXJhbU5hbWU6XCJrZWVwRGltc1wiLHR5cGU6XCJib29sXCJ9XX0se3RmT3BOYW1lOlwiU3VtXCIsZGxPcE5hbWU6XCJzdW1cIixjYXRlZ29yeTpcInJlZHVjdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZQYXJhbU5hbWU6XCJrZWVwX2RpbXNcIixkbFBhcmFtTmFtZTpcImtlZXBEaW1zXCIsdHlwZTpcImJvb2xcIn1dfSx7dGZPcE5hbWU6XCJBbGxcIixkbE9wTmFtZTpcImFsbFwiLGNhdGVnb3J5OlwicmVkdWN0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJheGlzXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImtlZXBfZGltc1wiLGRsUGFyYW1OYW1lOlwia2VlcERpbXNcIix0eXBlOlwiYm9vbFwifV19LHt0Zk9wTmFtZTpcIkFueVwiLGRsT3BOYW1lOlwiYW55XCIsY2F0ZWdvcnk6XCJyZWR1Y3Rpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmUGFyYW1OYW1lOlwia2VlcF9kaW1zXCIsZGxQYXJhbU5hbWU6XCJrZWVwRGltc1wiLHR5cGU6XCJib29sXCJ9XX0se3RmT3BOYW1lOlwiQXJnTWF4XCIsZGxPcE5hbWU6XCJhcmdNYXhcIixjYXRlZ29yeTpcInJlZHVjdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJcIn1dfSx7dGZPcE5hbWU6XCJBcmdNaW5cIixkbE9wTmFtZTpcImFyZ01pblwiLGNhdGVnb3J5OlwicmVkdWN0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJheGlzXCIsdHlwZTpcIm51bWJlclwifV19LHt0Zk9wTmFtZTpcIlByb2RcIixkbE9wTmFtZTpcInByb2RcIixjYXRlZ29yeTpcInJlZHVjdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZQYXJhbU5hbWU6XCJrZWVwX2RpbXNcIixkbFBhcmFtTmFtZTpcImtlZXBEaW1zXCIsdHlwZTpcImJvb2xcIn1dfV0scmVkdWN0aW9uPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQxMn0pLGpzb24kMTM9W3t0Zk9wTmFtZTpcIkNvbmNhdFYyXCIsZGxPcE5hbWU6XCJjb25jYXRcIixjYXRlZ29yeTpcInNsaWNlX2pvaW5cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCx0ZklucHV0UGFyYW1MZW5ndGg6MSxkbFBhcmFtTmFtZTpcInRlbnNvcnNcIix0eXBlOlwidGVuc29yc1wifSx7dGZJbnB1dEluZGV4Oi0xLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJcIn1dfSx7dGZPcE5hbWU6XCJDb25jYXRcIixkbE9wTmFtZTpcImNvbmNhdFwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDoxLHRmSW5wdXRQYXJhbUxlbmd0aDoxLGRsUGFyYW1OYW1lOlwidGVuc29yc1wiLHR5cGU6XCJ0ZW5zb3JzXCJ9LHt0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyXCJ9XX0se3RmT3BOYW1lOlwiR2F0aGVyVjJcIixkbE9wTmFtZTpcImdhdGhlclwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MH1dfSx7dGZPcE5hbWU6XCJHYXRoZXJcIixkbE9wTmFtZTpcImdhdGhlclwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiYXhpc1wiLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MH0se3RmUGFyYW1OYW1lOlwidmFsaWRhdGVfaW5kaWNlc1wiLGRsUGFyYW1OYW1lOlwidmFsaWRhdGVJbmRpY2VzXCIsdHlwZTpcImJvb2xcIixub3RTdXBwb3J0ZWQ6ITB9XX0se3RmT3BOYW1lOlwiUmV2ZXJzZVwiLGRsT3BOYW1lOlwicmV2ZXJzZVwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiZGltc1wiLHR5cGU6XCJib29sXCIsbm90U3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIlJldmVyc2VWMlwiLGRsT3BOYW1lOlwicmV2ZXJzZVwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJbXVwifV19LHt0Zk9wTmFtZTpcIlNsaWNlXCIsZGxPcE5hbWU6XCJzbGljZVwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYmVnaW5cIix0eXBlOlwibnVtYmVyW11cIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwic2l6ZVwiLHR5cGU6XCJudW1iZXJbXVwifV19LHt0Zk9wTmFtZTpcIlN0cmlkZWRTbGljZVwiLGRsT3BOYW1lOlwic3RyaWRlZFNsaWNlXCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJiZWdpblwiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJlbmRcIix0eXBlOlwibnVtYmVyW11cIn0se3RmSW5wdXRJbmRleDozLGRsUGFyYW1OYW1lOlwic3RyaWRlc1wiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZQYXJhbU5hbWU6XCJiZWdpbl9tYXNrXCIsZGxQYXJhbU5hbWU6XCJiZWdpbk1hc2tcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9LHt0ZlBhcmFtTmFtZTpcImVuZF9tYXNrXCIsZGxQYXJhbU5hbWU6XCJlbmRNYXNrXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZQYXJhbU5hbWU6XCJuZXdfYXhpc19tYXNrXCIsZGxQYXJhbU5hbWU6XCJuZXdBeGlzTWFza1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MH0se3RmUGFyYW1OYW1lOlwiZWxsaXBzaXNfbWFza1wiLGRsUGFyYW1OYW1lOlwiZWxsaXBzaXNNYXNrXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZQYXJhbU5hbWU6XCJzaHJpbmtfYXhpc19tYXNrXCIsZGxQYXJhbU5hbWU6XCJzaHJpbmtBeGlzTWFza1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MH1dfSx7dGZPcE5hbWU6XCJQYWNrXCIsZGxPcE5hbWU6XCJzdGFja1wiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLHRmSW5wdXRQYXJhbUxlbmd0aDowLGRsUGFyYW1OYW1lOlwidGVuc29yc1wiLHR5cGU6XCJ0ZW5zb3JzXCJ9LHt0ZlBhcmFtTmFtZTpcImF4aXNcIixkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9XX0se3RmT3BOYW1lOlwiVW5wYWNrXCIsZGxPcE5hbWU6XCJ1bnN0YWNrXCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsdGZJbnB1dFBhcmFtTGVuZ3RoOjAsZGxQYXJhbU5hbWU6XCJ0ZW5zb3JcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcImF4aXNcIixkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9LHt0ZlBhcmFtTmFtZTpcIm51bVwiLGRsUGFyYW1OYW1lOlwibnVtXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowLG5vdFN1cHBvcnRlZDohMH1dfSx7dGZPcE5hbWU6XCJUaWxlXCIsZGxPcE5hbWU6XCJ0aWxlXCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJyZXBzXCIsdHlwZTpcIm51bWJlcltdXCJ9XX0se3RmT3BOYW1lOlwiU3BsaXRcIixkbE9wTmFtZTpcInNwbGl0XCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJheGlzXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJudW1fc3BsaXRcIixkbFBhcmFtTmFtZTpcIm51bU9yU2l6ZVNwbGl0c1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MX1dfSx7dGZPcE5hbWU6XCJTcGxpdFZcIixkbE9wTmFtZTpcInNwbGl0XCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJudW1PclNpemVTcGxpdHNcIix0eXBlOlwibnVtYmVyW11cIn0se3RmSW5wdXRJbmRleDoyLGRsUGFyYW1OYW1lOlwiYXhpc1wiLHR5cGU6XCJudW1iZXJcIixkZWZhdWx0VmFsdWU6MH1dfSx7dGZPcE5hbWU6XCJTY2F0dGVyTmRcIixkbE9wTmFtZTpcInNjYXR0ZXJOZFwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwidmFsdWVzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJzaGFwZVwiLHR5cGU6XCJudW1iZXJbXVwifV19LHt0Zk9wTmFtZTpcIkdhdGhlck5kXCIsZGxPcE5hbWU6XCJnYXRoZXJOZFwiLGNhdGVnb3J5Olwic2xpY2Vfam9pblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiaW5kaWNlc1wiLHR5cGU6XCJ0ZW5zb3JcIn1dfSx7dGZPcE5hbWU6XCJTcGFyc2VUb0RlbnNlXCIsZGxPcE5hbWU6XCJzcGFyc2VUb0RlbnNlXCIsY2F0ZWdvcnk6XCJzbGljZV9qb2luXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJzcGFyc2VJbmRpY2VzXCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJvdXRwdXRTaGFwZVwiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJzcGFyc2VWYWx1ZXNcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MyxkbFBhcmFtTmFtZTpcImRlZmF1bHRWYWx1ZVwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwidmFsaWRhdGVfaW5kaWNlc1wiLGRsUGFyYW1OYW1lOlwidmFsaWRhdGVJbmRpY2VzXCIsdHlwZTpcImJvb2xcIixkZWZhdWx0VmFsdWU6ITEsbm90U3VwcG9ydGVkOiEwfV19XSxzbGljZUpvaW49T2JqZWN0LmZyZWV6ZSh7anNvbjpqc29uJDEzfSksanNvbiQxND1be3RmT3BOYW1lOlwiRkZUXCIsZGxPcE5hbWU6XCJmZnRcIixjYXRlZ29yeTpcInNwZWN0cmFsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifV19LHt0Zk9wTmFtZTpcIklGRlRcIixkbE9wTmFtZTpcImlmZnRcIixjYXRlZ29yeTpcInNwZWN0cmFsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifV19LHt0Zk9wTmFtZTpcIlJGRlRcIixkbE9wTmFtZTpcInJmZnRcIixjYXRlZ29yeTpcInNwZWN0cmFsXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJmZnRfbGVuZ3RoXCIsdHlwZTpcIm51bWJlclwiLHVuc3VwcG9ydGVkOiEwfV19LHt0Zk9wTmFtZTpcIklSRkZUXCIsZGxPcE5hbWU6XCJpcmZmdFwiLGNhdGVnb3J5Olwic3BlY3RyYWxcIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcImZmdF9sZW5ndGhcIix0eXBlOlwibnVtYmVyXCIsdW5zdXBwb3J0ZWQ6ITB9XX1dLHNwZWN0cmFsPU9iamVjdC5mcmVlemUoe2pzb246anNvbiQxNH0pLGpzb24kMTU9W3t0Zk9wTmFtZTpcIkNhc3RcIixkbE9wTmFtZTpcImNhc3RcIixjYXRlZ29yeTpcInRyYW5zZm9ybWF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZQYXJhbU5hbWU6XCJTcmNUXCIsZGxQYXJhbU5hbWU6XCJzZHR5cGVcIix0eXBlOlwiZHR5cGVcIixub3RTdXBwb3J0ZWQ6ITB9LHt0ZlBhcmFtTmFtZTpcIkRzdFRcIixkbFBhcmFtTmFtZTpcImR0eXBlXCIsdHlwZTpcImR0eXBlXCJ9XX0se3RmT3BOYW1lOlwiRXhwYW5kRGltc1wiLGRsT3BOYW1lOlwiZXhwYW5kRGltc1wiLGNhdGVnb3J5OlwidHJhbnNmb3JtYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSx0ZlBhcmFtTmFtZURlcHJlY2F0ZWQ6XCJkaW1cIixkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyXCJ9XX0se3RmT3BOYW1lOlwiUGFkXCIsZGxPcE5hbWU6XCJwYWRcIixjYXRlZ29yeTpcInRyYW5zZm9ybWF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJwYWRkaW5nXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZlBhcmFtTmFtZTpcImNvbnN0YW50X3ZhbHVlXCIsZGxQYXJhbU5hbWU6XCJjb25zdGFudFZhbHVlXCIsdHlwZTpcIm51bWJlclwiLGRlZmF1bHRWYWx1ZTowfV19LHt0Zk9wTmFtZTpcIlBhZFYyXCIsZGxPcE5hbWU6XCJwYWRcIixjYXRlZ29yeTpcInRyYW5zZm9ybWF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJwYWRkaW5nXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcImNvbnN0YW50VmFsdWVcIix0eXBlOlwibnVtYmVyXCIsZGVmYXVsdFZhbHVlOjB9XX0se3RmT3BOYW1lOlwiUmVzaGFwZVwiLGRsT3BOYW1lOlwicmVzaGFwZVwiLGNhdGVnb3J5OlwidHJhbnNmb3JtYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZklucHV0SW5kZXg6MSxkbFBhcmFtTmFtZTpcInNoYXBlXCIsdHlwZTpcIm51bWJlcltdXCJ9XX0se3RmT3BOYW1lOlwiU3F1ZWV6ZVwiLGRsT3BOYW1lOlwic3F1ZWV6ZVwiLGNhdGVnb3J5OlwidHJhbnNmb3JtYXRpb25cIixwYXJhbXM6W3t0ZklucHV0SW5kZXg6MCxkbFBhcmFtTmFtZTpcInhcIix0eXBlOlwidGVuc29yXCJ9LHt0ZlBhcmFtTmFtZTpcImF4aXNcIix0ZlBhcmFtTmFtZURlcHJlY2F0ZWQ6XCJzcXVlZXplX2RpbXNcIixkbFBhcmFtTmFtZTpcImF4aXNcIix0eXBlOlwibnVtYmVyW11cIn1dfSx7dGZPcE5hbWU6XCJTcGFjZVRvQmF0Y2hORFwiLGRsT3BOYW1lOlwic3BhY2VUb0JhdGNoTkRcIixjYXRlZ29yeTpcInRyYW5zZm9ybWF0aW9uXCIscGFyYW1zOlt7dGZJbnB1dEluZGV4OjAsZGxQYXJhbU5hbWU6XCJ4XCIsdHlwZTpcInRlbnNvclwifSx7dGZJbnB1dEluZGV4OjEsZGxQYXJhbU5hbWU6XCJibG9ja1NoYXBlXCIsdHlwZTpcIm51bWJlcltdXCJ9LHt0ZklucHV0SW5kZXg6MixkbFBhcmFtTmFtZTpcInBhZGRpbmdzXCIsdHlwZTpcIm51bWJlcltdXCJ9XX0se3RmT3BOYW1lOlwiQmF0Y2hUb1NwYWNlTkRcIixkbE9wTmFtZTpcImJhdGNoVG9TcGFjZU5EXCIsY2F0ZWdvcnk6XCJ0cmFuc2Zvcm1hdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmSW5wdXRJbmRleDoxLGRsUGFyYW1OYW1lOlwiYmxvY2tTaGFwZVwiLHR5cGU6XCJudW1iZXJbXVwifSx7dGZJbnB1dEluZGV4OjIsZGxQYXJhbU5hbWU6XCJjcm9wc1wiLHR5cGU6XCJudW1iZXJbXVwifV19LHt0Zk9wTmFtZTpcIkRlcHRoVG9TcGFjZVwiLGRsT3BOYW1lOlwiZGVwdGhUb1NwYWNlXCIsY2F0ZWdvcnk6XCJ0cmFuc2Zvcm1hdGlvblwiLHBhcmFtczpbe3RmSW5wdXRJbmRleDowLGRsUGFyYW1OYW1lOlwieFwiLHR5cGU6XCJ0ZW5zb3JcIn0se3RmUGFyYW1OYW1lOlwiYmxvY2tfc2l6ZVwiLGRsUGFyYW1OYW1lOlwiYmxvY2tTaXplXCIsdHlwZTpcIm51bWJlclwifSx7dGZQYXJhbU5hbWU6XCJkYXRhX2Zvcm1hdFwiLGRsUGFyYW1OYW1lOlwiZGF0YUZvcm1hdFwiLHR5cGU6XCJzdHJpbmdcIn1dfV0sdHJhbnNmb3JtYXRpb249T2JqZWN0LmZyZWV6ZSh7anNvbjpqc29uJDE1fSksQ09OVFJPTF9GTE9XX09QUz1bXCJTd2l0Y2hcIixcIk1lcmdlXCIsXCJFbnRlclwiLFwiRXhpdFwiLFwiTmV4dEl0ZXJhdGlvblwiXSxEWU5BTUlDX1NIQVBFX09QUz1bXCJOb25NYXhTdXBwcmVzc2lvblYyXCIsXCJOb25NYXhTdXBwcmVzc2lvblYzXCIsXCJXaGVyZVwiXSxPcGVyYXRpb25NYXBwZXI9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ9W2FyaXRobWV0aWMsYmFzaWNNYXRoLGNvbnRyb2wsY29udm9sdXRpb24sY3JlYXRpb24sZHluYW1pYyxldmFsdWF0aW9uLGxvZ2ljYWwsaW1hZ2UkMSxncmFwaCxtYXRyaWNlcyxub3JtYWxpemF0aW9uLHJlZHVjdGlvbixzbGljZUpvaW4sc3BlY3RyYWwsdHJhbnNmb3JtYXRpb25dLGU9W10uY29uY2F0LmFwcGx5KFtdLHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmpzb259KSk7dGhpcy5vcE1hcHBlcnM9ZS5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdFtlLnRmT3BOYW1lXT1lLHR9LHt9KX1yZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJJbnN0YW5jZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5zdGFuY2V8fCh0aGlzLl9pbnN0YW5jZT1uZXcgdGhpcyl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdC5wcm90b3R5cGUuaXNDb250cm9sRmxvdz1mdW5jdGlvbih0KXtyZXR1cm4gQ09OVFJPTF9GTE9XX09QUy5zb21lKGZ1bmN0aW9uKGUpe3JldHVybiBlPT09dC5vcH0pfSx0LnByb3RvdHlwZS5pc0R5bmFtaWNTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm4gRFlOQU1JQ19TSEFQRV9PUFMuc29tZShmdW5jdGlvbihlKXtyZXR1cm4gZT09PXQub3B9KX0sdC5wcm90b3R5cGUudHJhbnNmb3JtR3JhcGg9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPSExLHI9ITEsaT1bXSxhPVtdLG89dC5ub2RlLnJlZHVjZShmdW5jdGlvbih0LG8pe3JldHVybiB0W28ubmFtZV09ZS5tYXBOb2RlKG8pLGUuaXNDb250cm9sRmxvdyhvKSYmKG49ITApLGUuaXNEeW5hbWljU2hhcGUobykmJihyPSEwKSxcIlBsYWNlaG9sZGVyXCI9PT1vLm9wJiZpLnB1c2godFtvLm5hbWVdKSxcIkNvbnN0XCI9PT1vLm9wJiZhLnB1c2godFtvLm5hbWVdKSx0fSx7fSkscz1bXSx1PVtdO3JldHVybiBPYmplY3Qua2V5cyhvKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPW9bdF07ZS5pbnB1dE5hbWVzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49Z2V0Tm9kZU5hbWVBbmRJbmRleCh0KVswXTtlLmlucHV0cy5wdXNoKG9bbl0pLG9bbl0uY2hpbGRyZW4ucHVzaChlKX0pLDA9PT1lLmlucHV0cy5sZW5ndGgmJnMucHVzaChlKX0pLE9iamVjdC5rZXlzKG8pLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9b1t0XTswPT09ZS5jaGlsZHJlbi5sZW5ndGgmJnUucHVzaChlKX0pLHtub2RlczpvLGlucHV0czpzLG91dHB1dHM6dSx3ZWlnaHRzOmEscGxhY2Vob2xkZXJzOmksd2l0aENvbnRyb2xGbG93Om4sd2l0aER5bmFtaWNTaGFwZTpyfX0sdC5wcm90b3R5cGUubWFwTm9kZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcy5vcE1hcHBlcnNbdC5vcF07aWYodm9pZCAwPT09bil0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JmbG93IE9wIGlzIG5vdCBzdXBwb3J0ZWQ6IFwiK3Qub3ApO3ZhciByPXtuYW1lOnQubmFtZSxvcDpuLmRsT3BOYW1lLGNhdGVnb3J5Om4uY2F0ZWdvcnksaW5wdXROYW1lczoodC5pbnB1dHx8W10pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zdGFydHNXaXRoKFwiXlwiKT90LnN1YnN0cigxKTp0fSksaW5wdXRzOltdLGNoaWxkcmVuOltdLHBhcmFtczp7fX07cmV0dXJuIG4ucGFyYW1zJiYoci5wYXJhbXM9bi5wYXJhbXMucmVkdWNlKGZ1bmN0aW9uKG4scil7dmFyIGk9ci50ZklucHV0SW5kZXgsYT1yLnRmSW5wdXRQYXJhbUxlbmd0aCxvPXIudHlwZSxzPXZvaWQgMDtpZih2b2lkIDA9PT1pKXN3aXRjaChyLnR5cGUpe2Nhc2VcInN0cmluZ1wiOnZvaWQgMD09PShzPWUuZ2V0U3RyaW5nUGFyYW0odC5hdHRyLHIudGZQYXJhbU5hbWUsci5kZWZhdWx0VmFsdWUpKSYmci50ZlBhcmFtTmFtZURlcHJlY2F0ZWQmJihzPWUuZ2V0U3RyaW5nUGFyYW0odC5hdHRyLHIudGZQYXJhbU5hbWVEZXByZWNhdGVkLHIuZGVmYXVsdFZhbHVlKSk7YnJlYWs7Y2FzZVwibnVtYmVyXCI6dm9pZCAwPT09KHM9ZS5nZXROdW1iZXJQYXJhbSh0LmF0dHIsci50ZlBhcmFtTmFtZSxyLmRlZmF1bHRWYWx1ZXx8MCkpJiZyLnRmUGFyYW1OYW1lRGVwcmVjYXRlZCYmKHM9ZS5nZXROdW1iZXJQYXJhbSh0LmF0dHIsci50ZlBhcmFtTmFtZURlcHJlY2F0ZWQsci5kZWZhdWx0VmFsdWUpKTticmVhaztjYXNlXCJudW1iZXJbXVwiOnZvaWQgMD09PShzPWUuZ2V0TnVtZXJpY0FycmF5UGFyYW0odC5hdHRyLHIudGZQYXJhbU5hbWUsci5kZWZhdWx0VmFsdWUpKSYmci50ZlBhcmFtTmFtZURlcHJlY2F0ZWQmJihzPWUuZ2V0TnVtZXJpY0FycmF5UGFyYW0odC5hdHRyLHIudGZQYXJhbU5hbWVEZXByZWNhdGVkLHIuZGVmYXVsdFZhbHVlKSk7YnJlYWs7Y2FzZVwiYm9vbFwiOnZvaWQgMD09PShzPWUuZ2V0Qm9vbFBhcmFtKHQuYXR0cixyLnRmUGFyYW1OYW1lLHIuZGVmYXVsdFZhbHVlKSkmJnIudGZQYXJhbU5hbWVEZXByZWNhdGVkJiYocz1lLmdldEJvb2xQYXJhbSh0LmF0dHIsci50ZlBhcmFtTmFtZURlcHJlY2F0ZWQsci5kZWZhdWx0VmFsdWUpKTticmVhaztjYXNlXCJzaGFwZVwiOnZvaWQgMD09PShzPWUuZ2V0VGVuc29yU2hhcGVQYXJhbSh0LmF0dHIsci50ZlBhcmFtTmFtZSxyLmRlZmF1bHRWYWx1ZSkpJiZyLnRmUGFyYW1OYW1lRGVwcmVjYXRlZCYmKHM9ZS5nZXRUZW5zb3JTaGFwZVBhcmFtKHQuYXR0cixyLnRmUGFyYW1OYW1lRGVwcmVjYXRlZCxyLmRlZmF1bHRWYWx1ZSkpO2JyZWFrO2Nhc2VcImR0eXBlXCI6dm9pZCAwPT09KHM9ZS5nZXREdHlwZVBhcmFtKHQuYXR0cixyLnRmUGFyYW1OYW1lLHIuZGVmYXVsdFZhbHVlKSkmJnIudGZQYXJhbU5hbWVEZXByZWNhdGVkJiYocz1lLmdldER0eXBlUGFyYW0odC5hdHRyLHIudGZQYXJhbU5hbWVEZXByZWNhdGVkLHIuZGVmYXVsdFZhbHVlKSk7YnJlYWs7Y2FzZVwidGVuc29yXCI6Y2FzZVwidGVuc29yc1wiOmJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcGFyYW0gdHlwZTogXCIrci50eXBlK1wiIGZvciBvcDogXCIrdC5vcCl9cmV0dXJuIG5bci5kbFBhcmFtTmFtZV09e3ZhbHVlOnMsaW5wdXRJbmRleDppLHR5cGU6byxpbnB1dFBhcmFtTGVuZ3RoOmF9LG59LHt9KSkscn0sdC5wcm90b3R5cGUuZ2V0U3RyaW5nUGFyYW09ZnVuY3Rpb24odCxlLG4scil7dm9pZCAwPT09ciYmKHI9ITEpO3ZhciBpPXRbZV07aWYodm9pZCAwIT09aSl7dmFyIGE9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLGkucyk7cmV0dXJuIHI/YTphLnRvTG93ZXJDYXNlKCl9cmV0dXJuIG59LHQucHJvdG90eXBlLmdldEJvb2xQYXJhbT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dFtlXTtyZXR1cm4gcj9yLmI6bn0sdC5wcm90b3R5cGUuZ2V0TnVtYmVyUGFyYW09ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRbZV0saT1yP3Jbci52YWx1ZV06bjtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgaT9pOmkudG9JbnQoKX0sdC5wcm90b3R5cGUuZ2V0RHR5cGVQYXJhbT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dFtlXTtpZihyJiZyLnR5cGUpc3dpdGNoKHIudHlwZSl7Y2FzZSBjb21waWxlZF9hcGlfMS5EYXRhVHlwZS5EVF9GTE9BVDpyZXR1cm5cImZsb2F0MzJcIjtjYXNlIGNvbXBpbGVkX2FwaV8xLkRhdGFUeXBlLkRUX0lOVDMyOnJldHVyblwiaW50MzJcIjtjYXNlIGNvbXBpbGVkX2FwaV8xLkRhdGFUeXBlLkRUX0JPT0w6cmV0dXJuXCJib29sXCI7ZGVmYXVsdDpyZXR1cm4gbn1yZXR1cm4gbn0sdC5wcm90b3R5cGUuZ2V0VGVuc29yU2hhcGVQYXJhbT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dFtlXTtyZXR1cm4gciYmci5zaGFwZT9yLnNoYXBlLmRpbS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQuc2l6ZT90LnNpemU6dC5zaXplLnRvSW50KCl9KTpufSx0LnByb3RvdHlwZS5nZXROdW1lcmljQXJyYXlQYXJhbT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dFtlXTtyZXR1cm4gcj8oci5saXN0LmYmJnIubGlzdC5mLmxlbmd0aD9yLmxpc3QuZjpyLmxpc3QuaSkubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0P3Q6dC50b0ludCgpfSk6bn0sdH0oKSxleGVjdXRlT3A9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJhZGRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnUpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwiYWRkTlwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18udikoZ2V0UGFyYW1WYWx1ZShcInRlbnNvcnNcIix0LGUsbikpXTtjYXNlXCJtb2RcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZjKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYlwiLHQsZSxuKSldO2Nhc2VcIm11bFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uemMpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwiZGl2XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5sYikoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJmbG9vckRpdlwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uQmIpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwic3ViXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5UZCkoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJtaW5pbXVtXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy50YykoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJtYXhpbXVtXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5vYykoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJwb3dcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlRjKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYlwiLHQsZSxuKSldO2Nhc2VcInNxdWFyZWREaWZmZXJlbmNlXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5OZCkoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtkZWZhdWx0OnRocm93IFR5cGVFcnJvcihcIk5vZGUgdHlwZSBcIit0Lm9wK1wiIGlzIG5vdCBpbXBsZW1lbnRlZFwiKX19LGV4ZWN1dGVPcCQxPWZ1bmN0aW9uKHQsZSxuKXtzd2l0Y2godC5vcCl7Y2FzZVwiYWJzXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5yKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcImFjb3NcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnMpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwiYWNvc2hcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwiYXNpblwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uQikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJhc2luaFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uQykoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJhdGFuXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5EKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcImF0YW4yXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5FKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwieVwiLHQsZSxuKSldO2Nhc2VcImF0YW5oXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5GKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcImNlaWxcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlApKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwiY29zXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5kYikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJjb3NoXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5lYikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJlbHVcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm9iKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcImVyZlwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18udGIpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwiZXhwXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy51YikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJleHBtMVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ud2IpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwiZmxvb3JcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkFiKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcImxvZ1wiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uYWMpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwibG9nMXBcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJjKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcIm5lZ1wiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uRGMpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwicmVjaXByb2NhbFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uZWQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwicmVsdVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uZmQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwicm91bmRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm5kKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInNlbHVcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnJkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInNpZ21vaWRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLndkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInNpblwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ueWQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwic2lnblwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ueGQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwic2luaFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uemQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwic29mdHBsdXNcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkdkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInNxcnRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkxkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInNxdWFyZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uTWQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwidGFuaFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uWGQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07Y2FzZVwidGFuXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5XZCkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJjbGlwQnlWYWx1ZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uUSkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImNsaXBWYWx1ZU1pblwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiY2xpcFZhbHVlTWF4XCIsdCxlLG4pKV07Y2FzZVwicnNxcnRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmxiKShPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGQpKDEsXCJmbG9hdDMyXCIpLE9iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5MZCkoZ2V0VGVuc29yKHQuaW5wdXROYW1lc1swXSxlLG4pKSldO2Nhc2VcInByb2RcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlhjKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYXhlc1wiLHQsZSxuKSldO2Nhc2VcImxlYWt5UmVsdVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uU2IpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJhbHBoYVwiLHQsZSxuKSldO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX0sVGVuc29yQXJyYXk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUsbixyLGksYSxvLHMpe3RoaXMubmFtZT1lLHRoaXMuZHR5cGU9bix0aGlzLm1heFNpemU9cix0aGlzLmVsZW1lbnRTaGFwZT1pLHRoaXMuaWRlbnRpY2FsRWxlbWVudFNoYXBlcz1hLHRoaXMuZHluYW1pY1NpemU9byx0aGlzLmNsZWFyQWZ0ZXJSZWFkPXMsdGhpcy50ZW5zb3JzPVtdLHRoaXMuY2xvc2VkXz0hMSx0aGlzLmlkPXQubmV4dElkKyt9cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImNsb3NlZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9zZWRffSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLHQucHJvdG90eXBlLmNsZWFyQW5kQ2xvc2U9ZnVuY3Rpb24oKXt0aGlzLnRlbnNvcnMuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gdC50ZW5zb3IuZGlzcG9zZSgpfSksdGhpcy50ZW5zb3JzPVtdLHRoaXMuY2xvc2VkXz0hMH0sdC5wcm90b3R5cGUuc2l6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRlbnNvcnMubGVuZ3RofSx0LnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuY2xvc2VkXyl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JBcnJheSBcIit0aGlzLm5hbWUrXCIgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQuXCIpO2lmKHQ8MHx8dD49dGhpcy50ZW5zb3JzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUcmllZCB0byByZWFkIGZyb20gaW5kZXggXCIrdCtcIiwgYnV0IGFycmF5IHNpemUgaXM6IFwiK3RoaXMudGVuc29ycy5sZW5ndGgpO3ZhciBlPXRoaXMudGVuc29yc1t0XTtpZihlLmNsZWFyZWQpdGhyb3cgbmV3IEVycm9yKFwiVGVuc29yQXJyYXkgXCIrdGhpcy5uYW1lK1wiOiBDb3VsZCBub3QgcmVhZCBpbmRleCBcIit0K1wiIHR3aWNlIGJlY2F1c2UgaXQgd2FzIGNsZWFyZWQgYWZ0ZXIgYSBwcmV2aW91cyByZWFkIChwZXJoYXBzIHRyeSBzZXR0aW5nIGNsZWFyX2FmdGVyX3JlYWQgPSBmYWxzZT8pLlwiKTtyZXR1cm4gdGhpcy5jbGVhckFmdGVyUmVhZCYmKGUuY2xlYXJlZD0hMCksZS5yZWFkPSEwLGUudGVuc29yfSx0LnByb3RvdHlwZS5yZWFkTWFueT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZS5yZWFkKHQpfSl9LHQucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5jbG9zZWRfKXRocm93IG5ldyBFcnJvcihcIlRlbnNvckFycmF5IFwiK3RoaXMubmFtZStcIiBoYXMgYWxyZWFkeSBiZWVuIGNsb3NlZC5cIik7aWYodDwwfHwhdGhpcy5keW5hbWljU2l6ZSYmdD49dGhpcy5tYXhTaXplKXRocm93IG5ldyBFcnJvcihcIlRyaWVkIHRvIHdyaXRlIHRvIGluZGV4IFwiK3QrXCIsIGJ1dCBhcnJheSBpcyBub3QgcmVzaXplYWJsZSBhbmQgc2l6ZSBpczogXCIrdGhpcy5tYXhTaXplKTt2YXIgbj10aGlzLnRlbnNvcnNbdF18fHt9O2lmKGUuZHR5cGUhPT10aGlzLmR0eXBlKXRocm93IG5ldyBFcnJvcihcIlRlbnNvckFycmF5IFwiK3RoaXMubmFtZStcIjogQ291bGQgbm90IHdyaXRlIHRvIFRlbnNvckFycmF5IGluZGV4IFwiK3QrXCIsXFxuICAgICAgICAgIGJlY2F1c2UgdGhlIHZhbHVlIGR0eXBlIGlzIFwiK2UuZHR5cGUrXCIsIGJ1dCBUZW5zb3JBcnJheSBkdHlwZSBpcyBcIit0aGlzLmR0eXBlK1wiLlwiKTtpZigwPT09dGhpcy5zaXplKCkmJjA9PT10aGlzLmVsZW1lbnRTaGFwZS5sZW5ndGgmJih0aGlzLmVsZW1lbnRTaGFwZT1lLnNoYXBlKSx0aGlzLmFzc2VydFNoYXBlc01hdGNoKHRoaXMuZWxlbWVudFNoYXBlLGUuc2hhcGUsXCJUZW5zb3JBcnJheSBcIit0aGlzLm5hbWUrXCI6IENvdWxkIG5vdCB3cml0ZSB0byBUZW5zb3JBcnJheSBpbmRleCBcIit0K1wiLlwiKSxuJiZuLnJlYWQpdGhyb3cgbmV3IEVycm9yKFwiVGVuc29yQXJyYXkgXCIrdGhpcy5uYW1lK1wiOiBDb3VsZCBub3Qgd3JpdGUgdG8gVGVuc29yQXJyYXkgaW5kZXggXCIrdCtcIiwgYmVjYXVzZSBpdCBoYXMgYWxyZWFkeSBiZWVuIHJlYWQuXCIpO2lmKG4mJm4ud3JpdHRlbil0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JBcnJheSBcIit0aGlzLm5hbWUrXCI6IENvdWxkIG5vdCB3cml0ZSB0byBUZW5zb3JBcnJheSBpbmRleCBcIit0K1wiLCBiZWNhdXNlIGl0IGhhcyBhbHJlYWR5IGJlZW4gd3JpdHRlbi5cIik7bi50ZW5zb3I9ZSxuLndyaXR0ZW49ITAsdGhpcy50ZW5zb3JzW3RdPW59LHQucHJvdG90eXBlLndyaXRlTWFueT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JBcnJheSBcIit0aGlzLm5hbWUrXCI6IGNvdWxkIG5vdCB3cml0ZSBtdWx0aXBsZSB0ZW5zb3JzLGJlY2F1c2UgdGhlIGluZGV4IHNpemU6IFwiK3QubGVuZ3RoK1wiIGlzIG5vdCB0aGUgc2FtZSBhcyB0ZW5zb3JzIHNpemU6IFwiK2UubGVuZ3RoK1wiLlwiKTt0LmZvckVhY2goZnVuY3Rpb24odCxyKXtyZXR1cm4gbi53cml0ZSh0LGVbcl0pfSl9LHQucHJvdG90eXBlLmdhdGhlcj1mdW5jdGlvbih0LGUpe2lmKGUmJmUhPT10aGlzLmR0eXBlKXRocm93IG5ldyBFcnJvcihcIlRlbnNvckFycmF5IGR0eXBlIGlzIFwiK3RoaXMuZHR5cGUrXCIgYnV0IGdhdGhlciByZXF1ZXN0ZWQgZHR5cGUgXCIrZSk7aWYoIXQpe3Q9W107Zm9yKHZhciBuPTA7bjx0aGlzLnNpemUoKTtuKyspdC5wdXNoKG4pfWlmKDA9PT10Lmxlbmd0aClyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLllkKShbXSxbMF0uY29uY2F0KHRoaXMuZWxlbWVudFNoYXBlKSk7dmFyIHI9dGhpcy5yZWFkTWFueSh0KTtyZXR1cm4gdGhpcy5hc3NlcnRTaGFwZXNNYXRjaCh0aGlzLmVsZW1lbnRTaGFwZSxyWzBdLnNoYXBlLFwiVGVuc29yQXJyYXkgc2hhcGUgbWlzbWF0Y2g6IFwiKSxPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uUWQpKHIsMCl9LHQucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbih0KXtpZih0JiZ0IT09dGhpcy5kdHlwZSl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JBcnJheSBkdHlwZSBpcyBcIit0aGlzLmR0eXBlK1wiIGJ1dCBjb25jYXQgcmVxdWVzdGVkIGR0eXBlIFwiK3QpO2lmKDA9PT10aGlzLnNpemUoKSlyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLllkKShbXSxbMF0uY29uY2F0KHRoaXMuZWxlbWVudFNoYXBlKSk7Zm9yKHZhciBlPVtdLG49MDtuPHRoaXMuc2l6ZSgpO24rKyllLnB1c2gobik7dmFyIHI9dGhpcy5yZWFkTWFueShlKTtyZXR1cm4gdGhpcy5hc3NlcnRTaGFwZXNNYXRjaCh0aGlzLmVsZW1lbnRTaGFwZSxyWzBdLnNoYXBlLFwiVGVuc29yQXJyYXkgc2hhcGUgbWlzbWF0Y2g6IHRlbnNvciBhcnJheSBzaGFwZSAoXCIrdGhpcy5lbGVtZW50U2hhcGUrXCIpIHZzIGZpcnN0IHRlbnNvciBzaGFwZSAoXCIrclswXS5zaGFwZStcIilcIiksT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlQpKHIsMCl9LHQucHJvdG90eXBlLnNjYXR0ZXI9ZnVuY3Rpb24odCxlKXtpZihlLmR0eXBlIT09dGhpcy5kdHlwZSl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3JBcnJheSBkdHlwZSBpcyBcIit0aGlzLmR0eXBlK1wiIGJ1dCB0ZW5zb3IgaGFzIGR0eXBlIFwiK2UuZHR5cGUpO2lmKHQubGVuZ3RoIT09ZS5zaGFwZVswXSl0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBsZW4oaW5kaWNlcykgPT0gdGVuc29yLnNoYXBlWzBdLCBidXQgc2F3OiBcIit0Lmxlbmd0aCtcIiB2cy4gXCIrZS5zaGFwZVswXSk7dmFyIG49TWF0aC5tYXguYXBwbHkoTWF0aCx0KTtpZighdGhpcy5keW5hbWljU2l6ZSYmbj49dGhpcy5tYXhTaXplKXRocm93IG5ldyBFcnJvcihcIk1heCBpbmRleCBtdXN0IGJlIDwgYXJyYXkgc2l6ZSAoXCIrbitcIiAgdnMuIFwiK3RoaXMubWF4U2l6ZStcIilcIik7dGhpcy53cml0ZU1hbnkodCxPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGUpKGUsMCkpfSx0LnByb3RvdHlwZS5zcGxpdD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYoZS5kdHlwZSE9PXRoaXMuZHR5cGUpdGhyb3cgbmV3IEVycm9yKFwiVGVuc29yQXJyYXkgZHR5cGUgaXMgXCIrdGhpcy5kdHlwZStcIiBidXQgdGVuc29yIGhhcyBkdHlwZSBcIitlLmR0eXBlKTt2YXIgcj0wLGk9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHIrPXR9KTtpZihyIT09ZS5zaGFwZVswXSl0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCBzdW0gb2YgbGVuZ3RocyB0byBiZSBlcXVhbCB0b1xcbiAgICAgICAgICB0ZW5zb3Iuc2hhcGVbMF0sIGJ1dCBzdW0gb2YgbGVuZ3RocyBpc1xcbiAgICAgICAgXCIrcitcIiwgYW5kIHRlbnNvcidzIHNoYXBlIGlzOiBcIitlLnNoYXBlKTtpZighdGhpcy5keW5hbWljU2l6ZSYmdC5sZW5ndGghPT10aGlzLm1heFNpemUpdGhyb3cgbmV3IEVycm9yKFwiVGVuc29yQXJyYXkncyBzaXplIGlzIG5vdCBlcXVhbCB0byB0aGUgc2l6ZSBvZiBsZW5ndGhzIChcIit0aGlzLm1heFNpemUrXCIgdnMuIFwiK3QubGVuZ3RoK1wiKSwgYW5kIHRoZSBUZW5zb3JBcnJheSBpcyBub3QgbWFya2VkIGFzIGR5bmFtaWNhbGx5IHJlc2l6ZWFibGVcIik7dmFyIGE9MD09PXI/MDplLnNpemUvcixvPVtdO09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5nZSkoZnVuY3Rpb24oKXtlPWUucmVzaGFwZShbMSxyLGFdKTtmb3IodmFyIHM9MDtzPHQubGVuZ3RoOysrcyl7dmFyIHU9WzAsMD09PXM/MDppW3MtMV0sMF0sYz1bMSx0W3NdLGFdO29bc109T2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkFkKShlLHUsYykucmVzaGFwZShuLmVsZW1lbnRTaGFwZSl9cmV0dXJuIG99KTtmb3IodmFyIHM9W10sdT0wO3U8dC5sZW5ndGg7dSsrKXNbdV09dTt0aGlzLndyaXRlTWFueShzLG8pfSx0LnByb3RvdHlwZS5hc3NlcnRTaGFwZXNNYXRjaD1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49XCJcIiksX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucWUuYXNzZXJ0KHRoaXMuYXJyYXlzRXF1YWwodCxlKSxuK1wiIFNoYXBlcyBcIit0K1wiIGFuZCBcIitlK1wiIG11c3QgbWF0Y2hcIil9LHQucHJvdG90eXBlLmFycmF5c0VxdWFsPWZ1bmN0aW9uKHQsZSl7aWYodC5sZW5ndGghPT1lLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKylpZigtMSE9PXRbbl0mJi0xIT09ZVtuXSYmdFtuXSE9PWVbbl0pcmV0dXJuITE7cmV0dXJuITB9LHQubmV4dElkPTAsdH0oKTtmdW5jdGlvbiBleGVjdXRlT3AkMih0LGUsbil7cmV0dXJuIF9fYXdhaXRlcih0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcixpLGEsbyxzLHUsYyxsLGYsaCxwLGQsbSxnLHksdixiLHcsXyx4LEUsUyxOLEksTyxrLEEsQyxQLFQsUixELE0saixCO3JldHVybiBfX2dlbmVyYXRvcih0aGlzLGZ1bmN0aW9uKEwpe3N3aXRjaChMLmxhYmVsKXtjYXNlIDA6c3dpdGNoKHQub3Ape2Nhc2VcImxvb3BDb25kXCI6cmV0dXJuWzMsMV07Y2FzZVwic3dpdGNoXCI6cmV0dXJuWzMsMl07Y2FzZVwibWVyZ2VcIjpyZXR1cm5bMyw0XTtjYXNlXCJlbnRlclwiOnJldHVyblszLDVdO2Nhc2VcImV4aXRcIjpyZXR1cm5bMyw2XTtjYXNlXCJuZXh0SXRlcmF0aW9uXCI6cmV0dXJuWzMsN107Y2FzZVwidGVuc29yQXJyYXlcIjpyZXR1cm5bMyw4XTtjYXNlXCJ0ZW5zb3JBcnJheVdyaXRlXCI6cmV0dXJuWzMsOV07Y2FzZVwidGVuc29yQXJyYXlSZWFkXCI6cmV0dXJuWzMsMTBdO2Nhc2VcInRlbnNvckFycmF5R2F0aGVyXCI6cmV0dXJuWzMsMTFdO2Nhc2VcInRlbnNvckFycmF5U2NhdHRlclwiOnJldHVyblszLDEyXTtjYXNlXCJ0ZW5zb3JBcnJheUNvbmNhdFwiOnJldHVyblszLDEzXTtjYXNlXCJ0ZW5zb3JBcnJheVNwbGl0XCI6cmV0dXJuWzMsMTRdO2Nhc2VcInRlbnNvckFycmF5U2l6ZVwiOnJldHVyblszLDE1XTtjYXNlXCJ0ZW5zb3JBcnJheUNsb3NlXCI6cmV0dXJuWzMsMTZdfXJldHVyblszLDE3XTtjYXNlIDE6cmV0dXJuWzIsW2dldFBhcmFtVmFsdWUoXCJwcmVkXCIsdCxlLG4pLmNsb25lKCldXTtjYXNlIDI6cmV0dXJuIHI9Z2V0UGFyYW1WYWx1ZShcInByZWRcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwiZGF0YVwiLHQsZSxuKSxbNCxyLmRhdGEoKV07Y2FzZSAzOnJldHVyblsyLEwuc2VudCgpWzBdP1t2b2lkIDAsaS5jbG9uZSgpXTpbaS5jbG9uZSgpLHZvaWQgMF1dO2Nhc2UgNDpyZXR1cm5bMiwoYT10LmlucHV0TmFtZXMuZmluZChmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09Z2V0VGVuc29yKHQsZSxuKX0pKT9bZ2V0VGVuc29yKGEsZSxuKS5jbG9uZSgpXTp2b2lkIDBdO2Nhc2UgNTpyZXR1cm4gbz1nZXRQYXJhbVZhbHVlKFwiZnJhbWVOYW1lXCIsdCxlLG4pLHM9Z2V0UGFyYW1WYWx1ZShcInRlbnNvclwiLHQsZSxuKSxuLmVudGVyRnJhbWUobyksWzIsW3MuY2xvbmUoKV1dO2Nhc2UgNjpyZXR1cm4gdT1nZXRQYXJhbVZhbHVlKFwidGVuc29yXCIsdCxlLG4pLG4uZXhpdEZyYW1lKCksWzIsW3UuY2xvbmUoKV1dO2Nhc2UgNzpyZXR1cm4gYz1nZXRQYXJhbVZhbHVlKFwidGVuc29yXCIsdCxlLG4pLG4ubmV4dEl0ZXJhdGlvbigpLFsyLFtjLmNsb25lKCldXTtjYXNlIDg6cmV0dXJuIGw9Z2V0UGFyYW1WYWx1ZShcInNpemVcIix0LGUsbiksZj1nZXRQYXJhbVZhbHVlKFwiZHR5cGVcIix0LGUsbiksaD1nZXRQYXJhbVZhbHVlKFwiZWxlbWVudFNoYXBlXCIsdCxlLG4pLHA9Z2V0UGFyYW1WYWx1ZShcImR5bmFtaWNTaXplXCIsdCxlLG4pLGQ9Z2V0UGFyYW1WYWx1ZShcImNsZWFyQWZ0ZXJSZWFkXCIsdCxlLG4pLG09Z2V0UGFyYW1WYWx1ZShcImlkZW50aWNhbEVsZW1lbnRTaGFwZXNcIix0LGUsbiksZz1nZXRQYXJhbVZhbHVlKFwibmFtZVwiLHQsZSxuKSx5PW5ldyBUZW5zb3JBcnJheShnLGYsbCxoLG0scCxkKSxuLmFkZFRlbnNvckFycmF5KHkpLFsyLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGQpKHkuaWQpLE9iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5wZCkoMSldXTtjYXNlIDk6cmV0dXJuIHY9Z2V0UGFyYW1WYWx1ZShcInRlbnNvckFycmF5SWRcIix0LGUsbiksYj1nZXRQYXJhbVZhbHVlKFwiaW5kZXhcIix0LGUsbiksdz1nZXRQYXJhbVZhbHVlKFwidGVuc29yXCIsdCxlLG4pLG4uZ2V0VGVuc29yQXJyYXkodikud3JpdGUoYix3KSxbMixbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnBkKSgxKV1dO2Nhc2UgMTA6cmV0dXJuIF89Z2V0UGFyYW1WYWx1ZShcInRlbnNvckFycmF5SWRcIix0LGUsbikseD1nZXRQYXJhbVZhbHVlKFwiaW5kZXhcIix0LGUsbiksWzIsW24uZ2V0VGVuc29yQXJyYXkoXykucmVhZCh4KV1dO2Nhc2UgMTE6cmV0dXJuIEU9Z2V0UGFyYW1WYWx1ZShcInRlbnNvckFycmF5SWRcIix0LGUsbiksUz1nZXRQYXJhbVZhbHVlKFwiaW5kaWNlc1wiLHQsZSxuKSxOPWdldFBhcmFtVmFsdWUoXCJkdHlwZVwiLHQsZSxuKSxbMixbbi5nZXRUZW5zb3JBcnJheShFKS5nYXRoZXIoUyxOKV1dO2Nhc2UgMTI6cmV0dXJuIEk9Z2V0UGFyYW1WYWx1ZShcInRlbnNvckFycmF5SWRcIix0LGUsbiksTz1nZXRQYXJhbVZhbHVlKFwiaW5kaWNlc1wiLHQsZSxuKSxrPWdldFBhcmFtVmFsdWUoXCJ0ZW5zb3JcIix0LGUsbiksbi5nZXRUZW5zb3JBcnJheShJKS5zY2F0dGVyKE8sayksWzIsW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5wZCkoMSldXTtjYXNlIDEzOnJldHVybiBBPWdldFBhcmFtVmFsdWUoXCJ0ZW5zb3JBcnJheUlkXCIsdCxlLG4pLEM9bi5nZXRUZW5zb3JBcnJheShBKSxQPWdldFBhcmFtVmFsdWUoXCJkdHlwZVwiLHQsZSxuKSxbMixbQy5jb25jYXQoUCldXTtjYXNlIDE0OnJldHVybiBUPWdldFBhcmFtVmFsdWUoXCJ0ZW5zb3JBcnJheUlkXCIsdCxlLG4pLFI9Z2V0UGFyYW1WYWx1ZShcInRlbnNvclwiLHQsZSxuKSxEPWdldFBhcmFtVmFsdWUoXCJsZW5ndGhzXCIsdCxlLG4pLG4uZ2V0VGVuc29yQXJyYXkoVCkuc3BsaXQoRCxSKSxbMixbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnBkKSgxKV1dO2Nhc2UgMTU6cmV0dXJuIE09Z2V0UGFyYW1WYWx1ZShcInRlbnNvckFycmF5SWRcIix0LGUsbiksaj1uLmdldFRlbnNvckFycmF5KE0pLFsyLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGQpKGouc2l6ZSgpLFwiaW50MzJcIildXTtjYXNlIDE2OnJldHVybiBCPWdldFBhcmFtVmFsdWUoXCJ0ZW5zb3JBcnJheUlkXCIsdCxlLG4pLG4uZ2V0VGVuc29yQXJyYXkoQikuY2xlYXJBbmRDbG9zZSgpLFsyLFtdXTtjYXNlIDE3OnRocm93IFR5cGVFcnJvcihcIk5vZGUgdHlwZSBcIit0Lm9wK1wiIGlzIG5vdCBpbXBsZW1lbnRlZFwiKX19KX0pfXZhciBleGVjdXRlT3AkMz1mdW5jdGlvbih0LGUsbil7c3dpdGNoKHQub3Ape2Nhc2VcImNvbnYxZFwiOnZhciByPWdldFBhcmFtVmFsdWUoXCJzdHJpZGVcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwicGFkXCIsdCxlLG4pLGE9Z2V0UGFyYW1WYWx1ZShcImRhdGFGb3JtYXRcIix0LGUsbikudG9VcHBlckNhc2UoKSxvPWdldFBhcmFtVmFsdWUoXCJkaWxhdGlvblwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlkpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJmaWx0ZXJcIix0LGUsbikscixpLGEsbyldO2Nhc2VcImNvbnYyZFwiOnI9Z2V0UGFyYW1WYWx1ZShcInN0cmlkZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwicGFkXCIsdCxlLG4pLGE9Z2V0UGFyYW1WYWx1ZShcImRhdGFGb3JtYXRcIix0LGUsbikudG9VcHBlckNhc2UoKTt2YXIgcz1nZXRQYXJhbVZhbHVlKFwiZGlsYXRpb25zXCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uWikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImZpbHRlclwiLHQsZSxuKSxbclsxXSxyWzJdXSxpLGEsW3NbMF0sc1sxXV0pXTtjYXNlXCJjb252MmRUcmFuc3Bvc2VcIjp2YXIgdT1nZXRQYXJhbVZhbHVlKFwib3V0cHV0U2hhcGVcIix0LGUsbik7cmV0dXJuIHI9Z2V0UGFyYW1WYWx1ZShcInN0cmlkZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwicGFkXCIsdCxlLG4pLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uYmIpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJmaWx0ZXJcIix0LGUsbiksdSxbclsxXSxyWzJdXSxpKV07Y2FzZVwiZGVwdGh3aXNlQ29udjJkXCI6cmV0dXJuIHI9Z2V0UGFyYW1WYWx1ZShcInN0cmlkZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwicGFkXCIsdCxlLG4pLHM9Z2V0UGFyYW1WYWx1ZShcImRpbGF0aW9uc1wiLHQsZSxuKSxhPWdldFBhcmFtVmFsdWUoXCJkYXRhRm9ybWF0XCIsdCxlLG4pLnRvVXBwZXJDYXNlKCksW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5pYikoZ2V0UGFyYW1WYWx1ZShcImlucHV0XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJmaWx0ZXJcIix0LGUsbiksW3JbMV0sclsyXV0saSxhLFtzWzBdLHNbMV1dKV07Y2FzZVwiYXZnUG9vbFwiOnI9Z2V0UGFyYW1WYWx1ZShcInN0cmlkZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwicGFkXCIsdCxlLG4pO3ZhciBjPWdldFBhcmFtVmFsdWUoXCJrZXJuZWxTaXplXCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uRykoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksW2NbMV0sY1syXV0sW3JbMV0sclsyXV0saSldO2Nhc2VcIm1heFBvb2xcIjpyZXR1cm4gcj1nZXRQYXJhbVZhbHVlKFwic3RyaWRlc1wiLHQsZSxuKSxpPWdldFBhcmFtVmFsdWUoXCJwYWRcIix0LGUsbiksYz1nZXRQYXJhbVZhbHVlKFwia2VybmVsU2l6ZVwiLHQsZSxuKSxbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm5jKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxbY1sxXSxjWzJdXSxbclsxXSxyWzJdXSxpKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkND1mdW5jdGlvbih0LGUsbil7c3dpdGNoKHQub3Ape2Nhc2VcImZpbGxcIjp2YXIgcj1nZXRQYXJhbVZhbHVlKFwic2hhcGVcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwiZHR5cGVcIix0LGUsbiksYT1nZXRQYXJhbVZhbHVlKFwidmFsdWVcIix0LGUsbik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy56YikocixhLGkpXTtjYXNlXCJsaW5zcGFjZVwiOnZhciBvPWdldFBhcmFtVmFsdWUoXCJzdGFydFwiLHQsZSxuKSxzPWdldFBhcmFtVmFsdWUoXCJzdG9wXCIsdCxlLG4pLHU9Z2V0UGFyYW1WYWx1ZShcIm51bVwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlliKShvLHMsdSldO2Nhc2VcIm9uZUhvdFwiOnZhciBjPWdldFBhcmFtVmFsdWUoXCJpbmRpY2VzXCIsdCxlLG4pLGw9Z2V0UGFyYW1WYWx1ZShcImRlcHRoXCIsdCxlLG4pLGY9Z2V0UGFyYW1WYWx1ZShcIm9uVmFsdWVcIix0LGUsbiksaD1nZXRQYXJhbVZhbHVlKFwib2ZmVmFsdWVcIix0LGUsbik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5JYykoYyxsLGYsaCldO2Nhc2VcIm9uZXNcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkpjKShnZXRQYXJhbVZhbHVlKFwic2hhcGVcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImR0eXBlXCIsdCxlLG4pKV07Y2FzZVwib25lc0xpa2VcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLktjKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSldO2Nhc2VcInJhbmRvbVVuaWZvcm1cIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJkKShnZXRQYXJhbVZhbHVlKFwic2hhcGVcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcIm1pbnZhbFwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwibWF4dmFsXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJkdHlwZVwiLHQsZSxuKSldO2Nhc2VcInJhbmdlXCI6bz1nZXRQYXJhbVZhbHVlKFwic3RhcnRcIix0LGUsbik7dmFyIHA9Z2V0UGFyYW1WYWx1ZShcInN0b3BcIix0LGUsbiksZD1nZXRQYXJhbVZhbHVlKFwic3RlcFwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmNkKShvLHAsZCxnZXRQYXJhbVZhbHVlKFwiZHR5cGVcIix0LGUsbikpXTtjYXNlXCJ0cnVuY2F0ZWROb3JtYWxcIjpyPWdldFBhcmFtVmFsdWUoXCJzaGFwZVwiLHQsZSxuKTt2YXIgbT1nZXRQYXJhbVZhbHVlKFwibWVhblwiLHQsZSxuKSxnPWdldFBhcmFtVmFsdWUoXCJzdGREZXZcIix0LGUsbikseT1nZXRQYXJhbVZhbHVlKFwic2VlZFwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm5lKShyLG0sZyxnZXRQYXJhbVZhbHVlKFwiZHR5cGVcIix0LGUsbikseSldO2Nhc2VcInplcm9zXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy56ZSkoZ2V0UGFyYW1WYWx1ZShcInNoYXBlXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJkdHlwZVwiLHQsZSxuKSldO2Nhc2VcInplcm9zTGlrZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uQWUpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fTtmdW5jdGlvbiBleGVjdXRlT3AkNSh0LGUsbil7cmV0dXJuIF9fYXdhaXRlcih0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcixpLGEsbyxzO3JldHVybiBfX2dlbmVyYXRvcih0aGlzLGZ1bmN0aW9uKHUpe3N3aXRjaCh1LmxhYmVsKXtjYXNlIDA6c3dpdGNoKHQub3Ape2Nhc2VcIm5vbk1heFN1cHByZXNzaW9uXCI6cmV0dXJuWzMsMV07Y2FzZVwid2hlcmVBc3luY1wiOnJldHVyblszLDNdO2Nhc2VcInNldGRpZmYxZEFzeW5jXCI6cmV0dXJuWzMsNV19cmV0dXJuWzMsN107Y2FzZSAxOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJib3hlc1wiLHQsZSxuKSxpPWdldFBhcmFtVmFsdWUoXCJzY29yZXNcIix0LGUsbiksYT1nZXRQYXJhbVZhbHVlKFwibWF4T3V0cHV0U2l6ZVwiLHQsZSxuKSxvPWdldFBhcmFtVmFsdWUoXCJpb3VUaHJlc2hvbGRcIix0LGUsbikscz1nZXRQYXJhbVZhbHVlKFwic2NvcmVUaHJlc2hvbGRcIix0LGUsbiksWzQsX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uT2Iubm9uTWF4U3VwcHJlc3Npb25Bc3luYyhyLGksYSxvLHMpXTtjYXNlIDI6cmV0dXJuWzIsW3Uuc2VudCgpXV07Y2FzZSAzOnJldHVybls0LE9iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy55ZSkoZ2V0UGFyYW1WYWx1ZShcImNvbmRpdGlvblwiLHQsZSxuKSldO2Nhc2UgNDpyZXR1cm5bMixbdS5zZW50KCldXTtjYXNlIDU6cmV0dXJuWzQsT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwieVwiLHQsZSxuKSldO2Nhc2UgNjpyZXR1cm5bMix1LnNlbnQoKV07Y2FzZSA3OnRocm93IFR5cGVFcnJvcihcIk5vZGUgdHlwZSBcIit0Lm9wK1wiIGlzIG5vdCBpbXBsZW1lbnRlZFwiKX19KX0pfXZhciBleGVjdXRlT3AkNj1mdW5jdGlvbih0LGUsbil7c3dpdGNoKHQub3Ape2Nhc2VcInRvcEtcIjp2YXIgcj1nZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxpPWdldFBhcmFtVmFsdWUoXCJrXCIsdCxlLG4pLGE9Z2V0UGFyYW1WYWx1ZShcInNvcnRlZFwiLHQsZSxuKSxvPU9iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5rZSkocixpLGEpO3JldHVybltvLnZhbHVlcyxvLmluZGljZXNdO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX0sZXhlY3V0ZU9wJDc9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJjb25zdFwiOnJldHVybiBlW3QubmFtZV07Y2FzZVwicGxhY2Vob2xkZXJcIjp2YXIgcj1nZXRQYXJhbVZhbHVlKFwiZGVmYXVsdFwiLHQsZSxuKTtyZXR1cm5bZ2V0VGVuc29yKHQubmFtZSxlLG4pfHxyXTtjYXNlXCJpZGVudGl0eVwiOmNhc2VcInN0b3BHcmFkaWVudFwiOmNhc2VcImZha2VRdWFudFdpdGhNaW5NYXhWYXJzXCI6Y2FzZVwic25hcHNob3RcIjpyZXR1cm5bZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikuY2xvbmUoKV07Y2FzZVwic2hhcGVcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlpkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKS5zaGFwZSxcImludDMyXCIpXTtjYXNlXCJzaGFwZU5cIjpyZXR1cm4gZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uWmQpKHQuc2hhcGUpfSk7Y2FzZVwic2l6ZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLnNpemUsXCJpbnQzMlwiKV07Y2FzZVwicmFua1wiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLnJhbmssXCJpbnQzMlwiKV07Y2FzZVwibm9vcFwiOnJldHVybltdO2Nhc2VcInByaW50XCI6dmFyIGk9Z2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksYT1nZXRQYXJhbVZhbHVlKFwiZGF0YVwiLHQsZSxuKSxvPWdldFBhcmFtVmFsdWUoXCJtZXNzYWdlXCIsdCxlLG4pLHM9Z2V0UGFyYW1WYWx1ZShcInN1bW1hcml6ZVwiLHQsZSxuKTtjb25zb2xlLndhcm4oXCJUaGUgZ3JhcGggaGFzIGEgdGYucHJpbnQoKSBvcGVyYXRpb24sdXN1YWxseSB1c2VkIGZvciBkZWJ1Z2dpbmcsIHdoaWNoIHNsb3dzIGRvd24gcGVyZm9ybWFuY2UuXCIpLGNvbnNvbGUubG9nKG8pO2Zvcih2YXIgdT0wO3U8YS5sZW5ndGg7dSsrKWNvbnNvbGUubG9nKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFbMF0uZGF0YVN5bmMoKSkuc2xpY2UoMCxzKSk7cmV0dXJuW2ldO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX0sZXhlY3V0ZU9wJDg9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJyZXNpemVCaWxpbmVhclwiOnZhciByPWdldFBhcmFtVmFsdWUoXCJpbWFnZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwic2l6ZVwiLHQsZSxuKSxhPWdldFBhcmFtVmFsdWUoXCJhbGlnbkNvcm5lcnNcIix0LGUsbik7cmV0dXJuW190ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLk9iLnJlc2l6ZUJpbGluZWFyKHIsW2lbMF0saVsxXV0sYSldO2Nhc2VcInJlc2l6ZU5lYXJlc3ROZWlnaGJvclwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJpbWFnZXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwic2l6ZVwiLHQsZSxuKSxhPWdldFBhcmFtVmFsdWUoXCJhbGlnbkNvcm5lcnNcIix0LGUsbiksW190ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLk9iLnJlc2l6ZU5lYXJlc3ROZWlnaGJvcihyLFtpWzBdLGlbMV1dLGEpXTtjYXNlXCJjcm9wQW5kUmVzaXplXCI6dmFyIG89Z2V0UGFyYW1WYWx1ZShcImltYWdlXCIsdCxlLG4pLHM9Z2V0UGFyYW1WYWx1ZShcImJveGVzXCIsdCxlLG4pLHU9Z2V0UGFyYW1WYWx1ZShcImJveEluZFwiLHQsZSxuKSxjPWdldFBhcmFtVmFsdWUoXCJjcm9wU2l6ZVwiLHQsZSxuKSxsPWdldFBhcmFtVmFsdWUoXCJtZXRob2RcIix0LGUsbiksZj1nZXRQYXJhbVZhbHVlKFwiZXh0cmFwb2xhdGlvblZhbHVlXCIsdCxlLG4pO3JldHVybltfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5PYi5jcm9wQW5kUmVzaXplKG8scyx1LGMsbCxmKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkOT1mdW5jdGlvbih0LGUsbil7c3dpdGNoKHQub3Ape2Nhc2VcImVxdWFsXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5yYikoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJub3RFcXVhbFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uR2MpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwiZ3JlYXRlclwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uSWIpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwiZ3JlYXRlckVxdWFsXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5KYikoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJsZXNzXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5UYikoZ2V0UGFyYW1WYWx1ZShcImFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJcIix0LGUsbikpXTtjYXNlXCJsZXNzRXF1YWxcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlViKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYlwiLHQsZSxuKSldO2Nhc2VcImxvZ2ljYWxBbmRcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmZjKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYlwiLHQsZSxuKSldO2Nhc2VcImxvZ2ljYWxOb3RcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmdjKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSldO2Nhc2VcImxvZ2ljYWxPclwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaGMpKGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07Y2FzZVwid2hlcmVcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnhlKShnZXRQYXJhbVZhbHVlKFwiY29uZGl0aW9uXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJhXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJiXCIsdCxlLG4pKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkMTA9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJtYXRNdWxcIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmtjKShnZXRQYXJhbVZhbHVlKFwiYVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYlwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwidHJhbnNwb3NlQVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwidHJhbnNwb3NlQlwiLHQsZSxuKSldO2Nhc2VcInRyYW5zcG9zZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ubWUpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJwZXJtXCIsdCxlLG4pKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkMTE9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJiYXRjaE5vcm1hbGl6YXRpb25cIjpyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkkpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJtZWFuXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJ2YXJpYW5jZVwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiZXBzaWxvblwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwic2NhbGVcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcIm9mZnNldFwiLHQsZSxuKSldO2Nhc2VcImxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5aYikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcInJhZGl1c1wiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYmlhc1wiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiYWxwaGFcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImJldGFcIix0LGUsbikpXTtjYXNlXCJzb2Z0bWF4XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5GZCkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJsb2dTb2Z0bWF4XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5kYykoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJzcGFyc2VUb0RlbnNlXCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5JZCkoZ2V0UGFyYW1WYWx1ZShcInNwYXJzZUluZGljZXNcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcIm91dHB1dFNoYXBlXCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJzcGFyc2VWYWx1ZXNcIix0LGUsbiksZ2V0UGFyYW1WYWx1ZShcImRlZmF1bHRWYWx1ZVwiLHQsZSxuKSldO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX0sZXhlY3V0ZU9wJDEyPWZ1bmN0aW9uKHQsZSxuKXtzd2l0Y2godC5vcCl7Y2FzZVwibWF4XCI6dmFyIHI9Z2V0UGFyYW1WYWx1ZShcImF4aXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwia2VlcERpbXNcIix0LGUsbik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5tYykoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikscixpKV07Y2FzZVwibWVhblwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcImtlZXBEaW1zXCIsdCxlLG4pLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucWMpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHIsaSldO2Nhc2VcIm1pblwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcImtlZXBEaW1zXCIsdCxlLG4pLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uc2MpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHIsaSldO2Nhc2VcInN1bVwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcImtlZXBEaW1zXCIsdCxlLG4pLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uVmQpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHIsaSldO2Nhc2VcImFsbFwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcImtlZXBEaW1zXCIsdCxlLG4pLFtPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ueCkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikscixpKV07Y2FzZVwiYW55XCI6cmV0dXJuIHI9Z2V0UGFyYW1WYWx1ZShcImF4aXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwia2VlcERpbXNcIix0LGUsbiksW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy55KShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxyLGkpXTtjYXNlXCJhcmdNYXhcIjpyZXR1cm4gcj1nZXRQYXJhbVZhbHVlKFwiYXhpc1wiLHQsZSxuKSxbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnopKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHIpXTtjYXNlXCJhcmdNaW5cIjpyZXR1cm4gcj1nZXRQYXJhbVZhbHVlKFwiYXhpc1wiLHQsZSxuKSxbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkEpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHIpXTtjYXNlXCJwcm9kXCI6cmV0dXJuIHI9Z2V0UGFyYW1WYWx1ZShcImF4aXNcIix0LGUsbiksaT1nZXRQYXJhbVZhbHVlKFwia2VlcERpbXNcIix0LGUsbiksW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5YYykoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikscixpKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkMTM9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJjb25jYXRcIjp2YXIgcj1nZXRQYXJhbVZhbHVlKFwiYXhpc1wiLHQsZSxuKSxpPWdldFBhcmFtVmFsdWUoXCJ0ZW5zb3JzXCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uVCkoaSxyKV07Y2FzZVwiZ2F0aGVyXCI6cj1nZXRQYXJhbVZhbHVlKFwiYXhpc1wiLHQsZSxuKTt2YXIgYT1nZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxvPWdldFBhcmFtVmFsdWUoXCJpbmRpY2VzXCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uRGIpKGEsbyxyKV07Y2FzZVwicmV2ZXJzZVwiOnJldHVybiByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGE9Z2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5oZCkoYSxyKV07Y2FzZVwic2xpY2VcIjp2YXIgcz1nZXRQYXJhbVZhbHVlKFwiYmVnaW5cIix0LGUsbiksdT1nZXRQYXJhbVZhbHVlKFwic2l6ZVwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLkFkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxzLHUpXTtjYXNlXCJzdHJpZGVkU2xpY2VcIjpzPWdldFBhcmFtVmFsdWUoXCJiZWdpblwiLHQsZSxuKTt2YXIgYz1nZXRQYXJhbVZhbHVlKFwiZW5kXCIsdCxlLG4pLGw9Z2V0UGFyYW1WYWx1ZShcInN0cmlkZXNcIix0LGUsbiksZj1nZXRQYXJhbVZhbHVlKFwiYmVnaW5NYXNrXCIsdCxlLG4pLGg9Z2V0UGFyYW1WYWx1ZShcImVuZE1hc2tcIix0LGUsbikscD1nZXRQYXJhbVZhbHVlKFwiZWxsaXBzaXNNYXNrXCIsdCxlLG4pLGQ9Z2V0UGFyYW1WYWx1ZShcIm5ld0F4aXNNYXNrXCIsdCxlLG4pLG09Z2V0UGFyYW1WYWx1ZShcInNocmlua0F4aXNNYXNrXCIsdCxlLG4pLGc9Z2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbik7aWYoMT09PXMubGVuZ3RoJiZnLnNoYXBlLmxlbmd0aD4xKWZvcih2YXIgeT0xO3k8Zy5zaGFwZS5sZW5ndGg7eSsrKXMucHVzaCgwKSxjLnB1c2goZy5zaGFwZVt5XSksbC5wdXNoKGxbMF0pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uU2QpKGcscyxjLGwsZixoLHAsZCxtKV07Y2FzZVwic3RhY2tcIjpyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmdlKShmdW5jdGlvbigpe3ZhciByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcInRlbnNvcnNcIix0LGUsbiksYT1pWzBdLnNoYXBlLG89aVswXS5zcXVlZXplKCkuc2hhcGUscz1pLm1hcChmdW5jdGlvbih0KXt2YXIgZT1fdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5xZS5hcnJheXNFcXVhbCh0LnNoYXBlLGEpO2lmKCFlJiYhX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucWUuYXJyYXlzRXF1YWwodC5zcXVlZXplKCkuc2hhcGUsbykpdGhyb3cgbmV3IEVycm9yKFwidGhlIGlucHV0IHRlbnNvcnMgc2hhcGUgZG9lcyBub3QgbWF0Y2hcIik7cmV0dXJuIGU/dDp0LnJlc2hhcGUoYSl9KTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlFkKShzLHIpXX0pO2Nhc2VcInVuc3RhY2tcIjpyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmdlKShmdW5jdGlvbigpe3ZhciByPWdldFBhcmFtVmFsdWUoXCJheGlzXCIsdCxlLG4pLGk9Z2V0UGFyYW1WYWx1ZShcInRlbnNvclwiLHQsZSxuKTtyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnBlKShpLHIpfSk7Y2FzZVwidGlsZVwiOnZhciB2PWdldFBhcmFtVmFsdWUoXCJyZXBzXCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaGUpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHYpXTtjYXNlXCJzcGxpdFwiOnI9Z2V0UGFyYW1WYWx1ZShcImF4aXNcIix0LGUsbik7dmFyIGI9Z2V0UGFyYW1WYWx1ZShcIm51bU9yU2l6ZVNwbGl0c1wiLHQsZSxuKTtyZXR1cm4gT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLktkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxiLHIpO2Nhc2VcInNjYXR0ZXJOZFwiOm89Z2V0UGFyYW1WYWx1ZShcImluZGljZXNcIix0LGUsbik7dmFyIHc9Z2V0UGFyYW1WYWx1ZShcInZhbHVlc1wiLHQsZSxuKSxfPWdldFBhcmFtVmFsdWUoXCJzaGFwZVwiLHQsZSxuKTtyZXR1cm5bT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnFkKShvLHcsXyldO2Nhc2VcImdhdGhlck5kXCI6dmFyIHg9Z2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbik7cmV0dXJuIG89Z2V0UGFyYW1WYWx1ZShcImluZGljZXNcIix0LGUsbiksW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5FYikoeCxvKV07Y2FzZVwic3BhcnNlVG9EZW5zZVwiOm89Z2V0UGFyYW1WYWx1ZShcInNwYXJzZUluZGljZXNcIix0LGUsbiksXz1nZXRQYXJhbVZhbHVlKFwib3V0cHV0U2hhcGVcIix0LGUsbik7dmFyIEU9Z2V0UGFyYW1WYWx1ZShcInNwYXJzZVZhbHVlc1wiLHQsZSxuKSxTPWdldFBhcmFtVmFsdWUoXCJkZWZhdWx0VmFsdWVcIix0LGUsbik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5JZCkobyxFLF8sUyldO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX0sZXhlY3V0ZU9wJDE0PWZ1bmN0aW9uKHQsZSxuKXtzd2l0Y2godC5vcCl7Y2FzZVwiZmZ0XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy55YikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJpZmZ0XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5NYikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJyZmZ0XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5tZCkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikpXTtjYXNlXCJpcmZmdFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uUWIpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pKV07ZGVmYXVsdDp0aHJvdyBUeXBlRXJyb3IoXCJOb2RlIHR5cGUgXCIrdC5vcCtcIiBpcyBub3QgaW1wbGVtZW50ZWRcIil9fSxleGVjdXRlT3AkMTU9ZnVuY3Rpb24odCxlLG4pe3N3aXRjaCh0Lm9wKXtjYXNlXCJjYXN0XCI6cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5PKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxnZXRQYXJhbVZhbHVlKFwiZHR5cGVcIix0LGUsbikpXTtjYXNlXCJleHBhbmREaW1zXCI6dmFyIHI9Z2V0UGFyYW1WYWx1ZShcImF4aXNcIix0LGUsbik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy52YikoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbikscildO2Nhc2VcInNxdWVlemVcIjpyZXR1cm4gcj1nZXRQYXJhbVZhbHVlKFwiYXhpc1wiLHQsZSxuKSxbT2JqZWN0KF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlBkKShnZXRQYXJhbVZhbHVlKFwieFwiLHQsZSxuKSxyKV07Y2FzZVwicmVzaGFwZVwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uZ2QpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLGdldFBhcmFtVmFsdWUoXCJzaGFwZVwiLHQsZSxuKSldO2Nhc2VcInBhZFwiOnJldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uTmMpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHNwbGl0JDEoZ2V0UGFyYW1WYWx1ZShcInBhZGRpbmdcIix0LGUsbiksMiksZ2V0UGFyYW1WYWx1ZShcImNvbnN0YW50VmFsdWVcIix0LGUsbikpXTtjYXNlXCJzcGFjZVRvQmF0Y2hORFwiOnZhciBpPWdldFBhcmFtVmFsdWUoXCJibG9ja1NoYXBlXCIsdCxlLG4pLGE9c3BsaXQkMShnZXRQYXJhbVZhbHVlKFwicGFkZGluZ3NcIix0LGUsbiksMik7cmV0dXJuW09iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5IZCkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksaSxhKV07Y2FzZVwiYmF0Y2hUb1NwYWNlTkRcIjppPWdldFBhcmFtVmFsdWUoXCJibG9ja1NoYXBlXCIsdCxlLG4pO3ZhciBvPXNwbGl0JDEoZ2V0UGFyYW1WYWx1ZShcImNyb3BzXCIsdCxlLG4pLDIpO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uTSkoZ2V0UGFyYW1WYWx1ZShcInhcIix0LGUsbiksaSxvKV07Y2FzZVwiZGVwdGhUb1NwYWNlXCI6dmFyIHM9Z2V0UGFyYW1WYWx1ZShcImJsb2NrU2l6ZVwiLHQsZSxuKSx1PWdldFBhcmFtVmFsdWUoXCJkYXRhRm9ybWF0XCIsdCxlLG4pO3JldHVybltPYmplY3QoX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaGIpKGdldFBhcmFtVmFsdWUoXCJ4XCIsdCxlLG4pLHMsdSldO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX07ZnVuY3Rpb24gZXhlY3V0ZU9wJDE2KHQsZSxuKXtzd2l0Y2godC5jYXRlZ29yeSl7Y2FzZVwiYXJpdGhtZXRpY1wiOnJldHVybiBleGVjdXRlT3AodCxlLG4pO2Nhc2VcImJhc2ljX21hdGhcIjpyZXR1cm4gZXhlY3V0ZU9wJDEodCxlLG4pO2Nhc2VcImNvbnRyb2xcIjpyZXR1cm4gZXhlY3V0ZU9wJDIodCxlLG4pO2Nhc2VcImNvbnZvbHV0aW9uXCI6cmV0dXJuIGV4ZWN1dGVPcCQzKHQsZSxuKTtjYXNlXCJjcmVhdGlvblwiOnJldHVybiBleGVjdXRlT3AkNCh0LGUsbik7Y2FzZVwiZHluYW1pY1wiOnJldHVybiBleGVjdXRlT3AkNSh0LGUsbik7Y2FzZVwiZXZhbHVhdGlvblwiOnJldHVybiBleGVjdXRlT3AkNih0LGUsbik7Y2FzZVwiaW1hZ2VcIjpyZXR1cm4gZXhlY3V0ZU9wJDgodCxlLG4pO2Nhc2VcImdyYXBoXCI6cmV0dXJuIGV4ZWN1dGVPcCQ3KHQsZSxuKTtjYXNlXCJsb2dpY2FsXCI6cmV0dXJuIGV4ZWN1dGVPcCQ5KHQsZSxuKTtjYXNlXCJtYXRyaWNlc1wiOnJldHVybiBleGVjdXRlT3AkMTAodCxlLG4pO2Nhc2VcIm5vcm1hbGl6YXRpb25cIjpyZXR1cm4gZXhlY3V0ZU9wJDExKHQsZSxuKTtjYXNlXCJyZWR1Y3Rpb25cIjpyZXR1cm4gZXhlY3V0ZU9wJDEyKHQsZSxuKTtjYXNlXCJzbGljZV9qb2luXCI6cmV0dXJuIGV4ZWN1dGVPcCQxMyh0LGUsbik7Y2FzZVwic3BlY3RyYWxcIjpyZXR1cm4gZXhlY3V0ZU9wJDE0KHQsZSxuKTtjYXNlXCJ0cmFuc2Zvcm1hdGlvblwiOnJldHVybiBleGVjdXRlT3AkMTUodCxlLG4pO2RlZmF1bHQ6dGhyb3cgVHlwZUVycm9yKFwiTm9kZSB0eXBlIFwiK3Qub3ArXCIgaXMgbm90IGltcGxlbWVudGVkXCIpfX12YXIgRXhlY3V0aW9uQ29udGV4dD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLndlaWdodE1hcD10LHRoaXMudGVuc29yQXJyYXlNYXA9ZSx0aGlzLnJvb3RDb250ZXh0PXtpZDowLGZyYW1lTmFtZTpcIlwiLGl0ZXJhdGlvbklkOjB9LHRoaXMuY29udGV4dHM9W3RoaXMucm9vdENvbnRleHRdLHRoaXMubGFzdElkPTAsdGhpcy5nZW5lcmF0ZUN1cnJlbnRDb250ZXh0SWRzKCl9cmV0dXJuIHQucHJvdG90eXBlLm5ld0ZyYW1lPWZ1bmN0aW9uKHQsZSl7cmV0dXJue2lkOnQsZnJhbWVOYW1lOmUsaXRlcmF0aW9uSWQ6MH19LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImN1cnJlbnRDb250ZXh0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbnRleHRzfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5jb250ZXh0cyE9PXQmJih0aGlzLmNvbnRleHRzPXQsdGhpcy5nZW5lcmF0ZUN1cnJlbnRDb250ZXh0SWRzKCkpfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImN1cnJlbnRDb250ZXh0SWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRDb250ZXh0SWRzWzBdfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImN1cnJlbnRDb250ZXh0SWRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdXJyZW50Q29udGV4dElkc30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSx0LnByb3RvdHlwZS5nZW5lcmF0ZUN1cnJlbnRDb250ZXh0SWRzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPHRoaXMuY29udGV4dHMubGVuZ3RoLTE7ZSsrKXt2YXIgbj10aGlzLmNvbnRleHRzLnNsaWNlKDAsdGhpcy5jb250ZXh0cy5sZW5ndGgtZSk7dC5wdXNoKHRoaXMuY29udGV4dElkZm9yQ29udGV4dHMobikpfXQucHVzaChcIlwiKSx0aGlzLl9jdXJyZW50Q29udGV4dElkcz10fSx0LnByb3RvdHlwZS5jb250ZXh0SWRmb3JDb250ZXh0cz1mdW5jdGlvbih0KXtyZXR1cm4gdD90Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gMD09PXQuaWQmJjA9PT10Lml0ZXJhdGlvbklkP1wiXCI6dC5mcmFtZU5hbWUrXCItXCIrdC5pdGVyYXRpb25JZH0pLmpvaW4oXCIvXCIpOlwiXCJ9LHQucHJvdG90eXBlLmVudGVyRnJhbWU9ZnVuY3Rpb24odCl7dGhpcy5jb250ZXh0cyYmKHRoaXMubGFzdElkKyssdGhpcy5jb250ZXh0cz10aGlzLmNvbnRleHRzLnNsaWNlKCksdGhpcy5jb250ZXh0cy5wdXNoKHRoaXMubmV3RnJhbWUodGhpcy5sYXN0SWQsdCkpLHRoaXMuX2N1cnJlbnRDb250ZXh0SWRzLnVuc2hpZnQodGhpcy5jb250ZXh0SWRmb3JDb250ZXh0cyh0aGlzLmNvbnRleHRzKSkpfSx0LnByb3RvdHlwZS5leGl0RnJhbWU9ZnVuY3Rpb24oKXtpZighKHRoaXMuY29udGV4dHMmJnRoaXMuY29udGV4dHMubGVuZ3RoPjEpKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBleGl0IGZyYW1lLCB0aGUgY29udGV4dCBpcyBlbXB0eVwiKTt0aGlzLmNvbnRleHRzPXRoaXMuY29udGV4dHMuc2xpY2UoKSx0aGlzLmNvbnRleHRzLnNwbGljZSgtMSksdGhpcy5jdXJyZW50Q29udGV4dElkcy5zaGlmdCgpfSx0LnByb3RvdHlwZS5uZXh0SXRlcmF0aW9uPWZ1bmN0aW9uKCl7aWYoISh0aGlzLmNvbnRleHRzJiZ0aGlzLmNvbnRleHRzLmxlbmd0aD4wKSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgaW5jcmVhc2UgZnJhbWUgaXRlcmF0aW9uLCB0aGUgY29udGV4dCBpcyBlbXB0eVwiKTt0aGlzLmNvbnRleHRzPXRoaXMuY29udGV4dHMuc2xpY2UoKSx0aGlzLmxhc3RJZCsrO3ZhciB0PU9iamVjdC5hc3NpZ24oe30sdGhpcy5jb250ZXh0c1t0aGlzLmNvbnRleHRzLmxlbmd0aC0xXSk7dC5pdGVyYXRpb25JZCs9MSx0LmlkPXRoaXMubGFzdElkLHRoaXMuY29udGV4dHMuc3BsaWNlKC0xLDEsdCksdGhpcy5fY3VycmVudENvbnRleHRJZHMuc3BsaWNlKDAsMSx0aGlzLmNvbnRleHRJZGZvckNvbnRleHRzKHRoaXMuY29udGV4dHMpKX0sdC5wcm90b3R5cGUuZ2V0V2VpZ2h0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLndlaWdodE1hcFt0XX0sdC5wcm90b3R5cGUuYWRkVGVuc29yQXJyYXk9ZnVuY3Rpb24odCl7dGhpcy50ZW5zb3JBcnJheU1hcFt0LmlkXT10fSx0LnByb3RvdHlwZS5nZXRUZW5zb3JBcnJheT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50ZW5zb3JBcnJheU1hcFt0XX0sdH0oKSxHcmFwaEV4ZWN1dG9yPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLmdyYXBoPXQsdGhpcy5jb21waWxlZE1hcD1uZXcgTWFwLHRoaXMuX3dlaWdodE1hcD17fSx0aGlzLlNFUEVSQVRPUj1cIixcIix0aGlzLnBsYWNlaG9sZGVycz10LnBsYWNlaG9sZGVycyx0aGlzLl9vdXRwdXRzPXQub3V0cHV0cyx0aGlzLmNvbXBpbGUoKX1yZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwid2VpZ2h0TWFwXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93ZWlnaHRNYXB9LHNldDpmdW5jdGlvbih0KXt2YXIgZT1PYmplY3Qua2V5cyh0KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV0ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkfSl9KTt0aGlzLndlaWdodElkcz1bXS5jb25jYXQuYXBwbHkoW10sZSksdGhpcy5fd2VpZ2h0TWFwPXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaW5wdXRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBsYWNlaG9sZGVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJue25hbWU6dC5uYW1lLHNoYXBlOnQucGFyYW1zLnNoYXBlP3QucGFyYW1zLnNoYXBlLnZhbHVlOnZvaWQgMCxkdHlwZTp0LnBhcmFtcy5kdHlwZT90LnBhcmFtcy5kdHlwZS52YWx1ZTp2b2lkIDB9fSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwib3V0cHV0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0cHV0cy5tYXAoZnVuY3Rpb24odCl7cmV0dXJue25hbWU6dC5uYW1lLHNoYXBlOnQucGFyYW1zLnNoYXBlP3QucGFyYW1zLnNoYXBlLnZhbHVlOnZvaWQgMCxkdHlwZTp0LnBhcmFtcy5kdHlwZT90LnBhcmFtcy5kdHlwZS52YWx1ZTp2b2lkIDB9fSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaW5wdXROb2Rlc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wbGFjZWhvbGRlcnMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWV9KX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJvdXRwdXROb2Rlc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vdXRwdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaXNDb250cm9sRmxvd01vZGVsXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdyYXBoLndpdGhDb250cm9sRmxvd30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJpc0R5bmFtaWNTaGFwZU1vZGVsXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdyYXBoLndpdGhEeW5hbWljU2hhcGV9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdC5wcm90b3R5cGUuY29tcGlsZT1mdW5jdGlvbih0KXtpZighdGhpcy5ncmFwaC53aXRoQ29udHJvbEZsb3cmJiF0aGlzLmdyYXBoLndpdGhEeW5hbWljU2hhcGUpe3ZhciBlPVtdLG49dHx8dGhpcy5ncmFwaC5wbGFjZWhvbGRlcnMscj1uLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSkuc29ydCgpLmpvaW4odGhpcy5TRVBFUkFUT1IpO2lmKCF0aGlzLmNvbXBpbGVkTWFwLmdldChyKSl7Zm9yKHZhciBpPW4uY29uY2F0KHRoaXMuZ3JhcGgud2VpZ2h0cyksYT17fTtpLmxlbmd0aD4wOyl7dmFyIG89aS5wb3AoKTthW28ubmFtZV09ITAsZS5wdXNoKG8pLG8uY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbih0KXshYVt0Lm5hbWVdJiZ0LmlucHV0TmFtZXMuZXZlcnkoZnVuY3Rpb24odCl7dmFyIGU9Z2V0Tm9kZU5hbWVBbmRJbmRleCh0KVswXTtyZXR1cm4gYVtlXX0pJiZpLnB1c2godCl9KX10aGlzLmNvbXBpbGVkTWFwLnNldChyLGUpfX19LHQucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXM7dm9pZCAwPT09ZSYmKGU9ITApO3ZhciBpPU9iamVjdC5rZXlzKHQpLnNvcnQoKTt0aGlzLmNoZWNrSW5wdXQodCxlKSx0aGlzLmNoZWNrSW5wdXRTaGFwZUFuZFR5cGUodCxlKSx0aGlzLmNvbXBpbGUoaS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHIuZ3JhcGgubm9kZXNbdF19KSk7dmFyIGE9dGhpcy5jYWxjdWxhdGVPdXRwdXRzKG4pO3RoaXMuY2hlY2tPdXRwdXQodGhpcy5jb21waWxlZE1hcC5nZXQoaS5qb2luKHRoaXMuU0VQRVJBVE9SKSksYSk7dmFyIG89e307cmV0dXJuIE9iamVjdChfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5nZSkoZnVuY3Rpb24oKXtmb3IodmFyIGU9bmV3IEV4ZWN1dGlvbkNvbnRleHQoci5fd2VpZ2h0TWFwLG8pLG49X19hc3NpZ24oe30sci53ZWlnaHRNYXAsdCkscz1yLmdldEZyb3plblRlbnNvcklkcyhuKSx1PXt9LGM9ci5jb21waWxlZE1hcC5nZXQoaS5qb2luKHIuU0VQRVJBVE9SKSksbD0wO2w8Yy5sZW5ndGg7bCsrKXt2YXIgZj1jW2xdO2lmKG5bZi5uYW1lXXx8KG5bZi5uYW1lXT1leGVjdXRlT3AkMTYoZixuLGUpLHIuY2hlY2tUZW5zb3JGb3JEaXNwb3NhbChmLm5hbWUsZixuLGUscyxhLHUpKSxhLmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiEhblt0XX0pKWJyZWFrfXJldHVybiByLmZpbmRPdXRwdXRzKG4sZSxhKX0pfSx0LnByb3RvdHlwZS5nZXRGcm96ZW5UZW5zb3JJZHM9ZnVuY3Rpb24odCl7dmFyIGU9W10uY29uY2F0LmFwcGx5KFtdLE9iamVjdC5rZXlzKHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdFtlXX0pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWR9KX0pKTtyZXR1cm4gbmV3IFNldChlKX0sdC5wcm90b3R5cGUuY2hlY2tUZW5zb3JGb3JEaXNwb3NhbD1mdW5jdGlvbih0LGUsbixyLGksYSxvKXtcImNvbnRyb2xcIiE9PWUuY2F0ZWdvcnkmJi0xPT09YS5pbmRleE9mKHQpJiYoblt0XS5mb3JFYWNoKGZ1bmN0aW9uKHQpe251bGwhPXQmJihvW3QuaWRdPShvW3QuaWRdfHwwKStlLmNoaWxkcmVuLmxlbmd0aCl9KSxlLmlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKFwiY29udHJvbFwiIT09dC5jYXRlZ29yeSl7dmFyIGU9Z2V0VGVuc29yc0ZvckN1cnJlbnRDb250ZW54dCh0Lm5hbWUsbixyKTtudWxsIT1lJiZlLmZvckVhY2goZnVuY3Rpb24odCl7aWYodCYmIWkuaGFzKHQuaWQpKXt2YXIgZT1vW3QuaWRdOzE9PT1lPyh0LmRpc3Bvc2UoKSxkZWxldGUgb1t0LmlkXSk6bnVsbCE9ZSYmb1t0LmlkXS0tfX0pfX0pKX0sdC5wcm90b3R5cGUuZXhlY3V0ZUFzeW5jPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIF9fYXdhaXRlcih0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixyLGksYSxvLHMsdSxjLGw9dGhpcztyZXR1cm4gX19nZW5lcmF0b3IodGhpcyxmdW5jdGlvbihmKXtzd2l0Y2goZi5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLmNoZWNrSW5wdXQodCwhMSksdGhpcy5jaGVja0lucHV0U2hhcGVBbmRUeXBlKHQsITEpLG49e30scj1uZXcgRXhlY3V0aW9uQ29udGV4dCh0aGlzLl93ZWlnaHRNYXAsbiksaT10aGlzLmNhbGN1bGF0ZU91dHB1dHMoZSksWzQsdGhpcy5leGVjdXRlV2l0aENvbnRyb2xGbG93KHQscixpKV07Y2FzZSAxOnJldHVybiBhPWYuc2VudCgpLG89dGhpcy5maW5kT3V0cHV0cyhhLHIsZSkscz1PYmplY3Qua2V5cyhvKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG9bdF0uaWR9KSx1PU9iamVjdC5rZXlzKHQpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdFtlXS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWR9KX0pLGM9W10uY29uY2F0LmFwcGx5KFtdLHUpLE9iamVjdC5rZXlzKGEpLmZvckVhY2goZnVuY3Rpb24odCl7YVt0XS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QmJi0xPT09cy5pbmRleE9mKHQuaWQpJiYtMT09PWMuaW5kZXhPZih0LmlkKSYmLTE9PT1sLndlaWdodElkcy5pbmRleE9mKHQuaWQpJiZ0LmRpc3Bvc2UoKX0pfSksWzIsb119fSl9KX0sdC5wcm90b3R5cGUuZXhlY3V0ZVdpdGhDb250cm9sRmxvdz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIF9fYXdhaXRlcih0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcixpLGEsbyxzLHUsYyxsLGY9dGhpcztyZXR1cm4gX19nZW5lcmF0b3IodGhpcyxmdW5jdGlvbihoKXtzd2l0Y2goaC5sYWJlbCl7Y2FzZSAwOnI9T2JqZWN0LmtleXModCksaT1yLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZi5ncmFwaC5ub2Rlc1t0XX0pLGE9aS5jb25jYXQodGhpcy5ncmFwaC53ZWlnaHRzKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue25vZGU6dCxjb250ZXh0czplLmN1cnJlbnRDb250ZXh0fX0pLG89X19hc3NpZ24oe30sdGhpcy53ZWlnaHRNYXAsdCkscz17fSx1PXRoaXMuZ2V0RnJvemVuVGVuc29ySWRzKG8pLGM9e30saC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gYS5sZW5ndGg+MD8obD10aGlzLnByb2Nlc3NTdGFjayhpLGEsZSxvLGMsdSxuLHMpLFs0LFByb21pc2UuYWxsKGwpXSk6WzMsM107Y2FzZSAyOnJldHVybiBoLnNlbnQoKSxbMywxXTtjYXNlIDM6cmV0dXJuWzIsb119fSl9KX0sdC5wcm90b3R5cGUucHJvY2Vzc1N0YWNrPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyl7Zm9yKHZhciB1PXRoaXMsYz1bXSxsPWZ1bmN0aW9uKCl7dmFyIGw9ZS5wb3AoKTtuLmN1cnJlbnRDb250ZXh0PWwuY29udGV4dHM7dmFyIGg9XCJcIjtpZihcImVudGVyXCI9PT1sLm5vZGUub3AmJmdldFBhcmFtVmFsdWUoXCJpc0NvbnN0YW50XCIsbC5ub2RlLHIsbikmJihoPWdldE5vZGVOYW1lQW5kSW5kZXgobC5ub2RlLm5hbWUsbilbMF0pLC0xPT09dC5pbmRleE9mKGwubm9kZSkpe3ZhciBwPWV4ZWN1dGVPcCQxNihsLm5vZGUscixuKTtofHwoaD1nZXROb2RlTmFtZUFuZEluZGV4KGwubm9kZS5uYW1lLG4pWzBdKTt2YXIgZD1uLmN1cnJlbnRDb250ZXh0O3AgaW5zdGFuY2VvZiBQcm9taXNlP2MucHVzaChwLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHJbaF09dCxuLmN1cnJlbnRDb250ZXh0PWQsdS5jaGVja1RlbnNvckZvckRpc3Bvc2FsKGgsbC5ub2RlLHIsbixhLG8scyksdS5wcm9jZXNzQ2hpbGROb2RlcyhsLm5vZGUsZSxuLHIsaSksdH0pKToocltoXT1wLGYuY2hlY2tUZW5zb3JGb3JEaXNwb3NhbChoLGwubm9kZSxyLG4sYSxvLHMpLGYucHJvY2Vzc0NoaWxkTm9kZXMobC5ub2RlLGUsbixyLGkpKX1lbHNlIGYucHJvY2Vzc0NoaWxkTm9kZXMobC5ub2RlLGUsbixyLGkpfSxmPXRoaXM7ZS5sZW5ndGg+MDspbCgpO3JldHVybiBjfSx0LnByb3RvdHlwZS5wcm9jZXNzQ2hpbGROb2Rlcz1mdW5jdGlvbih0LGUsbixyLGkpe3QuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgYT1nZXROb2RlTmFtZUFuZEluZGV4KHQubmFtZSxuKVswXTtpW2FdfHwoXCJtZXJnZVwiPT09dC5vcD90LmlucHV0TmFtZXMuc29tZShmdW5jdGlvbih0KXtyZXR1cm4hIWdldFRlbnNvcih0LHIsbil9KSYmKGlbYV09ITAsZS5wdXNoKHtjb250ZXh0czpuLmN1cnJlbnRDb250ZXh0LG5vZGU6dH0pKTp0LmlucHV0TmFtZXMuZXZlcnkoZnVuY3Rpb24odCl7cmV0dXJuISFnZXRUZW5zb3IodCxyLG4pfSkmJihpW2FdPSEwLGUucHVzaCh7Y29udGV4dHM6bi5jdXJyZW50Q29udGV4dCxub2RlOnR9KSkpfSl9LHQucHJvdG90eXBlLmNhbGN1bGF0ZU91dHB1dHM9ZnVuY3Rpb24odCl7cmV0dXJuIXR8fHQgaW5zdGFuY2VvZiBBcnJheXx8KHQ9W3RdKSx0fHx0aGlzLmdyYXBoLm91dHB1dHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWV9KX0sdC5wcm90b3R5cGUuZmluZE91dHB1dHM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLmNhbGN1bGF0ZU91dHB1dHMobikucmVkdWNlKGZ1bmN0aW9uKG4scil7cmV0dXJuIG5bcl09Z2V0VGVuc29yKHIsdCxlKSxufSx7fSl9LHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO09iamVjdC5rZXlzKHRoaXMud2VpZ2h0TWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0LndlaWdodE1hcFtlXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmRpc3Bvc2UoKX0pfSl9LHQucHJvdG90eXBlLmNoZWNrSW5wdXRTaGFwZUFuZFR5cGU9ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT0hMCksdGhpcy5wbGFjZWhvbGRlcnMuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgcj10W24ubmFtZV07aWYoZXx8cil7dmFyIGk9clswXTtpZihuLnBhcmFtcy5zaGFwZSYmbi5wYXJhbXMuc2hhcGUudmFsdWUpe3ZhciBhPW4ucGFyYW1zLnNoYXBlLnZhbHVlLG89YS5sZW5ndGg9PT1pLnNoYXBlLmxlbmd0aCYmaS5zaGFwZS5ldmVyeShmdW5jdGlvbih0LGUpe3JldHVybi0xPT09YVtlXXx8YVtlXT09PXR9KTtfdGVuc29yZmxvd190ZmpzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5xZS5hc3NlcnQobyxcIlRoZSBzaGFwZSBvZiBkaWN0WydcIituLm5hbWUrXCInXSBwcm92aWRlZCBpbiBtb2RlbC5leGVjdXRlKGRpY3QpIG11c3QgYmUgW1wiK2ErXCJdLCBidXQgd2FzIFtcIitpLnNoYXBlK1wiXVwiKX1uLnBhcmFtcy5kdHlwZSYmbi5wYXJhbXMuZHR5cGUudmFsdWUmJl90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnFlLmFzc2VydChpLmR0eXBlPT09bi5wYXJhbXMuZHR5cGUudmFsdWUsXCJUaGUgZHR5cGUgb2YgZGljdFsnXCIrbi5uYW1lK1wiJ10gcHJvdmlkZWQgaW4gbW9kZWwuZXhlY3V0ZShkaWN0KSBtdXN0IGJlIFwiK24ucGFyYW1zLmR0eXBlLnZhbHVlK1wiLCBidXQgd2FzIFwiK2kuZHR5cGUpfX0pfSx0LnByb3RvdHlwZS5jaGVja0lucHV0PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpczt2b2lkIDA9PT1lJiYoZT0hMCk7dmFyIHI9T2JqZWN0LmtleXModCksaT1bXSxhPVtdO3RoaXMuaW5wdXROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpey0xPT09ci5pbmRleE9mKHQpJiZpLnB1c2godCl9KSxyLmZvckVhY2goZnVuY3Rpb24odCl7LTE9PT1uLmlucHV0Tm9kZXMuaW5kZXhPZih0KSYmYS5wdXNoKHQpfSk7dmFyIG89YS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIW4uZ3JhcGgubm9kZXNbdF19KTtpZihpLmxlbmd0aD4wJiZlKXRocm93IG5ldyBFcnJvcihcIlRoZSBkaWN0IHByb3ZpZGVkIGluIG1vZGVsLmV4ZWN1dGUoZGljdCkgaGFzIHRoZSBrZXlzIFtcIityK1wiXSwgYnV0IGlzIG1pc3NpbmcgdGhlIHJlcXVpcmVkIGtleXM6IFtcIitpK1wiXS5cIik7aWYoYS5sZW5ndGg+MCYmZSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZGljdCBwcm92aWRlZCBpbiBtb2RlbC5leGVjdXRlKGRpY3QpIGhhcyB1bnVzZWQga2V5czogW1wiK2ErXCJdLiBQbGVhc2UgcHJvdmlkZSBvbmx5IHRoZSBmb2xsb3dpbmcga2V5czogW1wiK3RoaXMuaW5wdXROb2RlcytcIl0uXCIpO2lmKG8ubGVuZ3RoPjApdGhyb3cgbmV3IEVycm9yKFwiVGhlIGRpY3QgcHJvdmlkZWQgaW4gbW9kZWwuZXhlY3V0ZShkaWN0KSBoYXMga2V5czogW1wiK28rXCJdIG5vdCBwYXJ0IG9mIG1vZGVsIGdyYXBoLlwiKX0sdC5wcm90b3R5cGUuY2hlY2tPdXRwdXQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSkscj1bXTtpZihlLmZvckVhY2goZnVuY3Rpb24odCl7LTE9PT1uLmluZGV4T2YodCkmJnIucHVzaCh0KX0pLHIubGVuZ3RoPjApdGhyb3cgbmV3IEVycm9yKFwiVGhlIGZvbGxvd2luZyBvdXRwdXRzIGFyZSBub3QgZ2VuZXJhdGVkIGJ5IHRoZSBleGVjdXRpb246IFtcIityK1wiXS5cIil9LHR9KCksVEZIVUJfU0VBUkNIX1BBUkFNPVwiP3RmanMtZm9ybWF0PWZpbGVcIixERUZBVUxUX01PREVMX05BTUU9XCJ0ZW5zb3JmbG93anNfbW9kZWwucGJcIixERUZBVUxUX01BTklGRVNUX05BTUU9XCJ3ZWlnaHRzX21hbmlmZXN0Lmpzb25cIixGcm96ZW5Nb2RlbD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlLG4scil7dGhpcy5tb2RlbFVybD10LHRoaXMud2VpZ2h0TWFuaWZlc3RVcmw9ZSx0aGlzLnJlcXVlc3RPcHRpb249bix0aGlzLndlaWdodFByZWZpeD1yLHRoaXMudmVyc2lvbj1cIm4vYVwifXJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJtb2RlbFZlcnNpb25cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmVyc2lvbn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJpbnB1dE5vZGVzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmV4ZWN1dG9yLmlucHV0Tm9kZXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwib3V0cHV0Tm9kZXNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXhlY3V0b3Iub3V0cHV0Tm9kZXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiaW5wdXRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmV4ZWN1dG9yLmlucHV0c30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJvdXRwdXRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmV4ZWN1dG9yLm91dHB1dHN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwid2VpZ2h0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5leGVjdXRvci53ZWlnaHRNYXB9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksdC5wcm90b3R5cGUuZmluZElPSGFuZGxlcj1mdW5jdGlvbigpe3ZhciB0PVt0aGlzLm1vZGVsVXJsLHRoaXMud2VpZ2h0TWFuaWZlc3RVcmxdO2lmKHRoaXMucmVxdWVzdE9wdGlvbil0aGlzLmhhbmRsZXI9X3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uUGIuYnJvd3NlckhUVFBSZXF1ZXN0KHQsdGhpcy5yZXF1ZXN0T3B0aW9uLHRoaXMud2VpZ2h0UHJlZml4KTtlbHNle3ZhciBlPV90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlBiLmdldExvYWRIYW5kbGVycyh0KTtpZigwPT09ZS5sZW5ndGgpZS5wdXNoKF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlBiLmJyb3dzZXJIVFRQUmVxdWVzdCh0LHRoaXMucmVxdWVzdE9wdGlvbikpO2Vsc2UgaWYoZS5sZW5ndGg+MSl0aHJvdyBuZXcgRXJyb3IoXCJGb3VuZCBtb3JlIHRoYW4gb25lIChcIitlLmxlbmd0aCtcIikgbG9hZCBoYW5kbGVycyBmb3IgVVJMICdcIitbdF0rXCInXCIpO3RoaXMuaGFuZGxlcj1lWzBdfX0sdC5wcm90b3R5cGUubG9hZD1mdW5jdGlvbigpe3JldHVybiBfX2F3YWl0ZXIodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQsZSxuO3JldHVybiBfX2dlbmVyYXRvcih0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6aWYodGhpcy5maW5kSU9IYW5kbGVyKCksbnVsbD09dGhpcy5oYW5kbGVyLmxvYWQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHByb2NlZWQgd2l0aCBtb2RlbCBsb2FkaW5nIGJlY2F1c2UgdGhlIElPSGFuZGxlciBwcm92aWRlZCBkb2VzIG5vdCBoYXZlIHRoZSBgbG9hZGAgbWV0aG9kIGltcGxlbWVudGVkLlwiKTtyZXR1cm5bNCx0aGlzLmhhbmRsZXIubG9hZCgpXTtjYXNlIDE6cmV0dXJuIHQ9ci5zZW50KCksZT1jb21waWxlZF9hcGlfMS5HcmFwaERlZi5kZWNvZGUobmV3IFVpbnQ4QXJyYXkodC5tb2RlbFRvcG9sb2d5KSksdGhpcy52ZXJzaW9uPWUudmVyc2lvbnMucHJvZHVjZXIrXCIuXCIrZS52ZXJzaW9ucy5taW5Db25zdW1lcixuPV90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLlBiLmRlY29kZVdlaWdodHModC53ZWlnaHREYXRhLHQud2VpZ2h0U3BlY3MpLHRoaXMuZXhlY3V0b3I9bmV3IEdyYXBoRXhlY3V0b3IoT3BlcmF0aW9uTWFwcGVyLkluc3RhbmNlLnRyYW5zZm9ybUdyYXBoKGUpKSx0aGlzLmV4ZWN1dG9yLndlaWdodE1hcD10aGlzLmNvbnZlcnRUZW5zb3JNYXBUb1RlbnNvcnNNYXAobiksWzIsITBdfX0pfSl9LHQucHJvdG90eXBlLnByZWRpY3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5leGVjdXRlXyh0LCEwLHRoaXMub3V0cHV0Tm9kZXMpfSx0LnByb3RvdHlwZS5jb25zdHJ1Y3RUZW5zb3JNYXA9ZnVuY3Rpb24odCl7dmFyIGU9dCBpbnN0YW5jZW9mIF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm8/W3RdOnQ7aWYoZS5sZW5ndGghPT10aGlzLmlucHV0Tm9kZXMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIklucHV0IHRlbnNvciBjb3VudCBtaXNtYXRjaCx0aGUgZnJvemVuIG1vZGVsIGhhcyBcIit0aGlzLmlucHV0Tm9kZXMubGVuZ3RoK1wiIHBsYWNlaG9sZGVycywgd2hpbGUgdGhlcmUgYXJlIFwiK2UubGVuZ3RoK1wiIGlucHV0IHRlbnNvcnMuXCIpO3JldHVybiB0aGlzLmlucHV0Tm9kZXMucmVkdWNlKGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gdFtuXT1lW3JdLHR9LHt9KX0sdC5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmV4ZWN1dGVfKHQsITEsZSl9LHQucHJvdG90eXBlLmV4ZWN1dGVfPWZ1bmN0aW9uKHQsZSxuKXtpZih2b2lkIDA9PT1lJiYoZT0hMCksbj1ufHx0aGlzLm91dHB1dE5vZGVzLCh0IGluc3RhbmNlb2YgX3RlbnNvcmZsb3dfdGZqc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ub3x8QXJyYXkuaXNBcnJheSh0KSkmJih0PXRoaXMuY29uc3RydWN0VGVuc29yTWFwKHQpKSx0aGlzLmV4ZWN1dG9yLmlzQ29udHJvbEZsb3dNb2RlbHx8dGhpcy5leGVjdXRvci5pc0R5bmFtaWNTaGFwZU1vZGVsKXRocm93IG5ldyBFcnJvcihcIlRoZSBtb2RlbCBjb250YWlucyBjb250cm9sIGZsb3cgb3IgZHluYW1pYyBzaGFwZSBvcHMsIHBsZWFzZSB1c2UgZXhlY3V0ZUFzeW5jIG1ldGhvZFwiKTt2YXIgcj10aGlzLmV4ZWN1dG9yLmV4ZWN1dGUodGhpcy5jb252ZXJ0VGVuc29yTWFwVG9UZW5zb3JzTWFwKHQpLGUsbiksaT1PYmplY3Qua2V5cyhyKTtyZXR1cm4gQXJyYXkuaXNBcnJheShuKSYmbi5sZW5ndGg+MT9uLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gclt0XX0pOnJbaVswXV19LHQucHJvdG90eXBlLmV4ZWN1dGVBc3luYz1mdW5jdGlvbih0LGUpe3JldHVybiBfX2F3YWl0ZXIodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4scjtyZXR1cm4gX19nZW5lcmF0b3IodGhpcyxmdW5jdGlvbihpKXtzd2l0Y2goaS5sYWJlbCl7Y2FzZSAwOmlmKCF0aGlzLmV4ZWN1dG9yLmlzQ29udHJvbEZsb3dNb2RlbCYmIXRoaXMuZXhlY3V0b3IuaXNEeW5hbWljU2hhcGVNb2RlbCl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgbW9kZWwgZG9lcyBub3QgY29udGFpbiBjb250cm9sIGZsb3cgb3IgZHluYW1pYyBzaGFwZSBvcHMsIHBsZWFzZSB1c2UgZXhlY3V0ZSBtZXRob2QgZm9yIGJldHRlciBwZXJmb3JtYW5jZS5cIik7cmV0dXJuIGU9ZXx8dGhpcy5vdXRwdXROb2RlcywodCBpbnN0YW5jZW9mIF90ZW5zb3JmbG93X3RmanNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm98fEFycmF5LmlzQXJyYXkodCkpJiYodD10aGlzLmNvbnN0cnVjdFRlbnNvck1hcCh0KSksWzQsdGhpcy5leGVjdXRvci5leGVjdXRlQXN5bmModGhpcy5jb252ZXJ0VGVuc29yTWFwVG9UZW5zb3JzTWFwKHQpLGUpXTtjYXNlIDE6cmV0dXJuIG49aS5zZW50KCkscj1PYmplY3Qua2V5cyhuKSxbMixBcnJheS5pc0FycmF5KGUpJiZlLmxlbmd0aD4xP2UubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuW3RdfSk6bltyWzBdXV19fSl9KX0sdC5wcm90b3R5cGUuY29udmVydFRlbnNvck1hcFRvVGVuc29yc01hcD1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmtleXModCkucmVkdWNlKGZ1bmN0aW9uKGUsbil7cmV0dXJuIGVbbl09W3Rbbl1dLGV9LHt9KX0sdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMuZXhlY3V0b3IuZGlzcG9zZSgpfSx0fSgpO2Z1bmN0aW9uIGxvYWRGcm96ZW5Nb2RlbCh0LGUsbil7cmV0dXJuIF9fYXdhaXRlcih0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcjtyZXR1cm4gX19nZW5lcmF0b3IodGhpcyxmdW5jdGlvbihpKXtzd2l0Y2goaS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LChyPW5ldyBGcm96ZW5Nb2RlbCh0LGUsbikpLmxvYWQoKV07Y2FzZSAxOnJldHVybiBpLnNlbnQoKSxbMixyXX19KX0pfWZ1bmN0aW9uIGxvYWRUZkh1Yk1vZHVsZSh0LGUpe3JldHVybiBfX2F3YWl0ZXIodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuIHQuZW5kc1dpdGgoXCIvXCIpfHwodCs9XCIvXCIpLFsyLGxvYWRGcm96ZW5Nb2RlbChcIlwiK3QrREVGQVVMVF9NT0RFTF9OQU1FK1RGSFVCX1NFQVJDSF9QQVJBTSxcIlwiK3QrREVGQVVMVF9NQU5JRkVTVF9OQU1FK1RGSFVCX1NFQVJDSF9QQVJBTSxlKV19KX0pfXZhciB2ZXJzaW9uPVwiMC43LjJcIn0pLmNhbGwodGhpcyxfX3dlYnBhY2tfcmVxdWlyZV9fKDExKSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSksZnVuY3Rpb24odCxyLGkpe24uZChlLFwiYXJyYXlcIixmdW5jdGlvbigpe3JldHVybiBvdH0pLG4uZChlLFwiRGF0YXNldFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGl0fSksbi5kKGUsXCJ6aXBcIixmdW5jdGlvbigpe3JldHVybiBzdH0pLG4uZChlLFwiQ1NWRGF0YXNldFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGd0fSksbi5kKGUsXCJUZXh0TGluZURhdGFzZXRcIixmdW5jdGlvbigpe3JldHVybiBsdH0pLG4uZChlLFwiY3N2XCIsZnVuY3Rpb24oKXtyZXR1cm4gT3R9KSxuLmQoZSxcImdlbmVyYXRvclwiLGZ1bmN0aW9uKCl7cmV0dXJuIGt0fSksbi5kKGUsXCJGaWxlRGF0YVNvdXJjZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEF0fSksbi5kKGUsXCJVUkxEYXRhU291cmNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gSXR9KSxuLmQoZSxcInZlcnNpb25fZGF0YVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEN0fSk7dmFyIGE9bigwKSxvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuKG89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09ZVtuXSl9KSh0LGUpfTtcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9mdW5jdGlvbiBzKHQsZSl7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1vKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfWZ1bmN0aW9uIHUodCxlLG4scil7cmV0dXJuIG5ldyhufHwobj1Qcm9taXNlKSkoZnVuY3Rpb24oaSxhKXtmdW5jdGlvbiBvKHQpe3RyeXt1KHIubmV4dCh0KSl9Y2F0Y2godCl7YSh0KX19ZnVuY3Rpb24gcyh0KXt0cnl7dShyLnRocm93KHQpKX1jYXRjaCh0KXthKHQpfX1mdW5jdGlvbiB1KHQpe3QuZG9uZT9pKHQudmFsdWUpOm5ldyBuKGZ1bmN0aW9uKGUpe2UodC52YWx1ZSl9KS50aGVuKG8scyl9dSgocj1yLmFwcGx5KHQsZXx8W10pKS5uZXh0KCkpfSl9ZnVuY3Rpb24gYyh0LGUpe3ZhciBuLHIsaSxhLG89e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmaVswXSl0aHJvdyBpWzFdO3JldHVybiBpWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIGE9e25leHQ6cygwKSx0aHJvdzpzKDEpLHJldHVybjpzKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihhW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGE7ZnVuY3Rpb24gcyhhKXtyZXR1cm4gZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe2lmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtvOyl0cnl7aWYobj0xLHImJihpPTImYVswXT9yLnJldHVybjphWzBdP3IudGhyb3d8fCgoaT1yLnJldHVybikmJmkuY2FsbChyKSwwKTpyLm5leHQpJiYhKGk9aS5jYWxsKHIsYVsxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKHI9MCxpJiYoYT1bMiZhWzBdLGkudmFsdWVdKSxhWzBdKXtjYXNlIDA6Y2FzZSAxOmk9YTticmVhaztjYXNlIDQ6cmV0dXJuIG8ubGFiZWwrKyx7dmFsdWU6YVsxXSxkb25lOiExfTtjYXNlIDU6by5sYWJlbCsrLHI9YVsxXSxhPVswXTtjb250aW51ZTtjYXNlIDc6YT1vLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKGk9KGk9by50cnlzKS5sZW5ndGg+MCYmaVtpLmxlbmd0aC0xXSkmJig2PT09YVswXXx8Mj09PWFbMF0pKXtvPTA7Y29udGludWV9aWYoMz09PWFbMF0mJighaXx8YVsxXT5pWzBdJiZhWzFdPGlbM10pKXtvLmxhYmVsPWFbMV07YnJlYWt9aWYoNj09PWFbMF0mJm8ubGFiZWw8aVsxXSl7by5sYWJlbD1pWzFdLGk9YTticmVha31pZihpJiZvLmxhYmVsPGlbMl0pe28ubGFiZWw9aVsyXSxvLm9wcy5wdXNoKGEpO2JyZWFrfWlbMl0mJm8ub3BzLnBvcCgpLG8udHJ5cy5wb3AoKTtjb250aW51ZX1hPWUuY2FsbCh0LG8pfWNhdGNoKHQpe2E9WzYsdF0scj0wfWZpbmFsbHl7bj1pPTB9aWYoNSZhWzBdKXRocm93IGFbMV07cmV0dXJue3ZhbHVlOmFbMF0/YVsxXTp2b2lkIDAsZG9uZTohMH19KFthLHNdKX19fXZhciBsPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OnZvaWQgMCE9PXQ/dDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnt9O2Z1bmN0aW9uIGYodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsXCJkZWZhdWx0XCIpP3QuZGVmYXVsdDp0fWZ1bmN0aW9uIGgodCxlKXtyZXR1cm4gdChlPXtleHBvcnRzOnt9fSxlLmV4cG9ydHMpLGUuZXhwb3J0c312YXIgcD1oKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLmM9dC5jLGUuczA9dC5zMCxlLnMxPXQuczEsZS5zMj10LnMyLGV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPW5ldyBmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMscj0oZT00MDIyODcxMTk3LGZ1bmN0aW9uKHQpe3Q9dC50b1N0cmluZygpO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj0uMDI1MTk2MDMyODI0MTY5MzgqKGUrPXQuY2hhckNvZGVBdChuKSk7ci09ZT1yPj4+MCxlPShyKj1lKT4+PjAsZSs9NDI5NDk2NzI5Niooci09ZSl9cmV0dXJuIDIuMzI4MzA2NDM2NTM4Njk2M2UtMTAqKGU+Pj4wKX0pO24ubmV4dD1mdW5jdGlvbigpe3ZhciB0PTIwOTE2Mzkqbi5zMCsyLjMyODMwNjQzNjUzODY5NjNlLTEwKm4uYztyZXR1cm4gbi5zMD1uLnMxLG4uczE9bi5zMixuLnMyPXQtKG4uYz0wfHQpfSxuLmM9MSxuLnMwPXIoXCIgXCIpLG4uczE9cihcIiBcIiksbi5zMj1yKFwiIFwiKSxuLnMwLT1yKHQpLG4uczA8MCYmKG4uczArPTEpLG4uczEtPXIodCksbi5zMTwwJiYobi5zMSs9MSksbi5zMi09cih0KSxuLnMyPDAmJihuLnMyKz0xKSxyPW51bGx9KHQpLGk9ZSYmZS5zdGF0ZSxhPW4ubmV4dDtyZXR1cm4gYS5pbnQzMj1mdW5jdGlvbigpe3JldHVybiA0Mjk0OTY3Mjk2Km4ubmV4dCgpfDB9LGEuZG91YmxlPWZ1bmN0aW9uKCl7cmV0dXJuIGEoKSsxLjExMDIyMzAyNDYyNTE1NjVlLTE2KigyMDk3MTUyKmEoKXwwKX0sYS5xdWljaz1hLGkmJihcIm9iamVjdFwiPT10eXBlb2YgaSYmcihpLG4pLGEuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gcihuLHt9KX0pLGF9ZSYmZS5leHBvcnRzP2UuZXhwb3J0cz1pOnRoaXMuYWxlYT1pfSgwLHQpfSksZD1oKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLng9dC54LGUueT10LnksZS56PXQueixlLnc9dC53LGV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPW5ldyBmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49XCJcIjtlLng9MCxlLnk9MCxlLno9MCxlLnc9MCxlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD1lLnheZS54PDwxMTtyZXR1cm4gZS54PWUueSxlLnk9ZS56LGUuej1lLncsZS53Xj1lLnc+Pj4xOV50XnQ+Pj44fSx0PT09KDB8dCk/ZS54PXQ6bis9dDtmb3IodmFyIHI9MDtyPG4ubGVuZ3RoKzY0O3IrKyllLnhePTB8bi5jaGFyQ29kZUF0KHIpLGUubmV4dCgpfSh0KSxpPWUmJmUuc3RhdGUsYT1mdW5jdGlvbigpe3JldHVybihuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTZ9O3JldHVybiBhLmRvdWJsZT1mdW5jdGlvbigpe2Rve3ZhciB0PSgobi5uZXh0KCk+Pj4xMSkrKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5NikvKDE8PDIxKX13aGlsZSgwPT09dCk7cmV0dXJuIHR9LGEuaW50MzI9bi5uZXh0LGEucXVpY2s9YSxpJiYoXCJvYmplY3RcIj09dHlwZW9mIGkmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLnhvcjEyOD1pfSgwLHQpfSksbT1oKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLng9dC54LGUueT10LnksZS56PXQueixlLnc9dC53LGUudj10LnYsZS5kPXQuZCxlfWZ1bmN0aW9uIGkodCxlKXt2YXIgbj1uZXcgZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVwiXCI7ZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQ9ZS54XmUueD4+PjI7cmV0dXJuIGUueD1lLnksZS55PWUueixlLno9ZS53LGUudz1lLnYsKGUuZD1lLmQrMzYyNDM3fDApKyhlLnY9ZS52XmUudjw8NF50XnQ8PDEpfDB9LGUueD0wLGUueT0wLGUuej0wLGUudz0wLGUudj0wLHQ9PT0oMHx0KT9lLng9dDpuKz10O2Zvcih2YXIgcj0wO3I8bi5sZW5ndGgrNjQ7cisrKWUueF49MHxuLmNoYXJDb2RlQXQocikscj09bi5sZW5ndGgmJihlLmQ9ZS54PDwxMF5lLng+Pj40KSxlLm5leHQoKX0odCksaT1lJiZlLnN0YXRlLGE9ZnVuY3Rpb24oKXtyZXR1cm4obi5uZXh0KCk+Pj4wKS80Mjk0OTY3Mjk2fTtyZXR1cm4gYS5kb3VibGU9ZnVuY3Rpb24oKXtkb3t2YXIgdD0oKG4ubmV4dCgpPj4+MTEpKyhuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTYpLygxPDwyMSl9d2hpbGUoMD09PXQpO3JldHVybiB0fSxhLmludDMyPW4ubmV4dCxhLnF1aWNrPWEsaSYmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiZyKGksbiksYS5zdGF0ZT1mdW5jdGlvbigpe3JldHVybiByKG4se30pfSksYX1lJiZlLmV4cG9ydHM/ZS5leHBvcnRzPWk6dGhpcy54b3J3b3c9aX0oMCx0KX0pLGc9aChmdW5jdGlvbih0KXshZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlKXtyZXR1cm4gZS54PXQueC5zbGljZSgpLGUuaT10LmksZX1mdW5jdGlvbiBpKHQsZSl7bnVsbD09dCYmKHQ9K25ldyBEYXRlKTt2YXIgbj1uZXcgZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdCxuLHI9ZS54LGk9ZS5pO3JldHVybiB0PXJbaV0sbj0odF49dD4+PjcpXnQ8PDI0LG5ePSh0PXJbaSsxJjddKV50Pj4+MTAsbl49KHQ9cltpKzMmN10pXnQ+Pj4zLG5ePSh0PXJbaSs0JjddKV50PDw3LHQ9cltpKzcmN10sbl49KHRePXQ8PDEzKV50PDw5LHJbaV09bixlLmk9aSsxJjcsbn0sZnVuY3Rpb24odCxlKXt2YXIgbixyPVtdO2lmKGU9PT0oMHxlKSlyWzBdPWU7ZWxzZSBmb3IoZT1cIlwiK2Usbj0wO248ZS5sZW5ndGg7KytuKXJbNyZuXT1yWzcmbl08PDE1XmUuY2hhckNvZGVBdChuKStyW24rMSY3XTw8MTM7Zm9yKDtyLmxlbmd0aDw4OylyLnB1c2goMCk7Zm9yKG49MDtuPDgmJjA9PT1yW25dOysrbik7Zm9yKDg9PW4/cls3XT0tMTpyW25dLHQueD1yLHQuaT0wLG49MjU2O24+MDstLW4pdC5uZXh0KCl9KGUsdCl9KHQpLGk9ZSYmZS5zdGF0ZSxhPWZ1bmN0aW9uKCl7cmV0dXJuKG4ubmV4dCgpPj4+MCkvNDI5NDk2NzI5Nn07cmV0dXJuIGEuZG91YmxlPWZ1bmN0aW9uKCl7ZG97dmFyIHQ9KChuLm5leHQoKT4+PjExKSsobi5uZXh0KCk+Pj4wKS80Mjk0OTY3Mjk2KS8oMTw8MjEpfXdoaWxlKDA9PT10KTtyZXR1cm4gdH0sYS5pbnQzMj1uLm5leHQsYS5xdWljaz1hLGkmJihpLngmJnIoaSxuKSxhLnN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHIobix7fSl9KSxhfWUmJmUuZXhwb3J0cz9lLmV4cG9ydHM9aTp0aGlzLnhvcnNoaWZ0Nz1pfSgwLHQpfSkseT1oKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLmk9dC5pLGUudz10LncsZS5YPXQuWC5zbGljZSgpLGV9ZnVuY3Rpb24gaSh0LGUpe251bGw9PXQmJih0PStuZXcgRGF0ZSk7dmFyIG49bmV3IGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQsbixyPWUudyxpPWUuWCxhPWUuaTtyZXR1cm4gZS53PXI9cisxNjQwNTMxNTI3fDAsbj1pW2ErMzQmMTI3XSx0PWlbYT1hKzEmMTI3XSxuXj1uPDwxMyx0Xj10PDwxNyxuXj1uPj4+MTUsdF49dD4+PjEyLG49aVthXT1uXnQsZS5pPWEsbisocl5yPj4+MTYpfDB9LGZ1bmN0aW9uKHQsZSl7dmFyIG4scixpLGEsbyxzPVtdLHU9MTI4O2ZvcihlPT09KDB8ZSk/KHI9ZSxlPW51bGwpOihlKz1cIlxcMFwiLHI9MCx1PU1hdGgubWF4KHUsZS5sZW5ndGgpKSxpPTAsYT0tMzI7YTx1OysrYSllJiYocl49ZS5jaGFyQ29kZUF0KChhKzMyKSVlLmxlbmd0aCkpLDA9PT1hJiYobz1yKSxyXj1yPDwxMCxyXj1yPj4+MTUscl49cjw8NCxyXj1yPj4+MTMsYT49MCYmKG89bysxNjQwNTMxNTI3fDAsaT0wPT0obj1zWzEyNyZhXV49citvKT9pKzE6MCk7Zm9yKGk+PTEyOCYmKHNbMTI3JihlJiZlLmxlbmd0aHx8MCldPS0xKSxpPTEyNyxhPTUxMjthPjA7LS1hKXI9c1tpKzM0JjEyN10sbj1zW2k9aSsxJjEyN10scl49cjw8MTMsbl49bjw8MTcscl49cj4+PjE1LG5ePW4+Pj4xMixzW2ldPXJebjt0Lnc9byx0Llg9cyx0Lmk9aX0oZSx0KX0odCksaT1lJiZlLnN0YXRlLGE9ZnVuY3Rpb24oKXtyZXR1cm4obi5uZXh0KCk+Pj4wKS80Mjk0OTY3Mjk2fTtyZXR1cm4gYS5kb3VibGU9ZnVuY3Rpb24oKXtkb3t2YXIgdD0oKG4ubmV4dCgpPj4+MTEpKyhuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTYpLygxPDwyMSl9d2hpbGUoMD09PXQpO3JldHVybiB0fSxhLmludDMyPW4ubmV4dCxhLnF1aWNrPWEsaSYmKGkuWCYmcihpLG4pLGEuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gcihuLHt9KX0pLGF9ZSYmZS5leHBvcnRzP2UuZXhwb3J0cz1pOnRoaXMueG9yNDA5Nj1pfSgwLHQpfSksdj1oKGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUpe3JldHVybiBlLmE9dC5hLGUuYj10LmIsZS5jPXQuYyxlLmQ9dC5kLGV9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuPW5ldyBmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49XCJcIjtlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD1lLmIsbj1lLmMscj1lLmQsaT1lLmE7cmV0dXJuIHQ9dDw8MjVedD4+PjdebixuPW4tcnwwLHI9cjw8MjRecj4+PjheaSxpPWktdHwwLGUuYj10PXQ8PDIwXnQ+Pj4xMl5uLGUuYz1uPW4tcnwwLGUuZD1yPDwxNl5uPj4+MTZeaSxlLmE9aS10fDB9LGUuYT0wLGUuYj0wLGUuYz0tMTY0MDUzMTUyNyxlLmQ9MTM2NzEzMDU1MSx0PT09TWF0aC5mbG9vcih0KT8oZS5hPXQvNDI5NDk2NzI5NnwwLGUuYj0wfHQpOm4rPXQ7Zm9yKHZhciByPTA7cjxuLmxlbmd0aCsyMDtyKyspZS5iXj0wfG4uY2hhckNvZGVBdChyKSxlLm5leHQoKX0odCksaT1lJiZlLnN0YXRlLGE9ZnVuY3Rpb24oKXtyZXR1cm4obi5uZXh0KCk+Pj4wKS80Mjk0OTY3Mjk2fTtyZXR1cm4gYS5kb3VibGU9ZnVuY3Rpb24oKXtkb3t2YXIgdD0oKG4ubmV4dCgpPj4+MTEpKyhuLm5leHQoKT4+PjApLzQyOTQ5NjcyOTYpLygxPDwyMSl9d2hpbGUoMD09PXQpO3JldHVybiB0fSxhLmludDMyPW4ubmV4dCxhLnF1aWNrPWEsaSYmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiZyKGksbiksYS5zdGF0ZT1mdW5jdGlvbigpe3JldHVybiByKG4se30pfSksYX1lJiZlLmV4cG9ydHM/ZS5leHBvcnRzPWk6dGhpcy50eWNoZWk9aX0oMCx0KX0pLGI9aChmdW5jdGlvbih0KXshZnVuY3Rpb24oZSxyKXt2YXIgaSxhPSgwLGV2YWwpKFwidGhpc1wiKSxvPTI1NixzPTYsdT1cInJhbmRvbVwiLGM9ci5wb3cobyxzKSxsPXIucG93KDIsNTIpLGY9MipsLGg9by0xO2Z1bmN0aW9uIHAodCxuLHApe3ZhciB5PVtdLHY9bShmdW5jdGlvbiB0KGUsbil7dmFyIHIsaT1bXSxhPXR5cGVvZiBlO2lmKG4mJlwib2JqZWN0XCI9PWEpZm9yKHIgaW4gZSl0cnl7aS5wdXNoKHQoZVtyXSxuLTEpKX1jYXRjaCh0KXt9cmV0dXJuIGkubGVuZ3RoP2k6XCJzdHJpbmdcIj09YT9lOmUrXCJcXDBcIn0oKG49MT09bj97ZW50cm9weTohMH06bnx8e30pLmVudHJvcHk/W3QsZyhlKV06bnVsbD09dD9mdW5jdGlvbigpe3RyeXt2YXIgdDtyZXR1cm4gaSYmKHQ9aS5yYW5kb21CeXRlcyk/dD10KG8pOih0PW5ldyBVaW50OEFycmF5KG8pLChhLmNyeXB0b3x8YS5tc0NyeXB0bykuZ2V0UmFuZG9tVmFsdWVzKHQpKSxnKHQpfWNhdGNoKHQpe3ZhciBuPWEubmF2aWdhdG9yLHI9biYmbi5wbHVnaW5zO3JldHVyblsrbmV3IERhdGUsYSxyLGEuc2NyZWVuLGcoZSldfX0oKTp0LDMpLHkpLGI9bmV3IGZ1bmN0aW9uKHQpe3ZhciBlLG49dC5sZW5ndGgscj10aGlzLGk9MCxhPXIuaT1yLmo9MCxzPXIuUz1bXTtmb3Iobnx8KHQ9W24rK10pO2k8bzspc1tpXT1pKys7Zm9yKGk9MDtpPG87aSsrKXNbaV09c1thPWgmYSt0W2klbl0rKGU9c1tpXSldLHNbYV09ZTsoci5nPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPTAsaT1yLmksYT1yLmoscz1yLlM7dC0tOyllPXNbaT1oJmkrMV0sbj1uKm8rc1toJihzW2ldPXNbYT1oJmErZV0pKyhzW2FdPWUpXTtyZXR1cm4gci5pPWksci5qPWEsbn0pKG8pfSh5KSx3PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWIuZyhzKSxlPWMsbj0wO3Q8bDspdD0odCtuKSpvLGUqPW8sbj1iLmcoMSk7Zm9yKDt0Pj1mOyl0Lz0yLGUvPTIsbj4+Pj0xO3JldHVybih0K24pL2V9O3JldHVybiB3LmludDMyPWZ1bmN0aW9uKCl7cmV0dXJuIDB8Yi5nKDQpfSx3LnF1aWNrPWZ1bmN0aW9uKCl7cmV0dXJuIGIuZyg0KS80Mjk0OTY3Mjk2fSx3LmRvdWJsZT13LG0oZyhiLlMpLGUpLChuLnBhc3N8fHB8fGZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiBpJiYoaS5TJiZkKGksYiksdC5zdGF0ZT1mdW5jdGlvbigpe3JldHVybiBkKGIse30pfSksbj8oclt1XT10LGUpOnR9KSh3LHYsXCJnbG9iYWxcImluIG4/bi5nbG9iYWw6dGhpcz09cixuLnN0YXRlKX1mdW5jdGlvbiBkKHQsZSl7cmV0dXJuIGUuaT10LmksZS5qPXQuaixlLlM9dC5TLnNsaWNlKCksZX1mdW5jdGlvbiBtKHQsZSl7Zm9yKHZhciBuLHI9dCtcIlwiLGk9MDtpPHIubGVuZ3RoOyllW2gmaV09aCYobl49MTkqZVtoJmldKStyLmNoYXJDb2RlQXQoaSsrKTtyZXR1cm4gZyhlKX1mdW5jdGlvbiBnKHQpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KDAsdCl9aWYocltcInNlZWRcIit1XT1wLG0oci5yYW5kb20oKSxlKSx0LmV4cG9ydHMpe3QuZXhwb3J0cz1wO3RyeXtpPW4oODUpfWNhdGNoKHQpe319fShbXSxNYXRoKX0pO2IuYWxlYT1wLGIueG9yMTI4PWQsYi54b3J3b3c9bSxiLnhvcnNoaWZ0Nz1nLGIueG9yNDA5Nj15LGIudHljaGVpPXY7dmFyIHc9Yi5hbGVhLF89aChmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49MCxyPTA7ZT4wOylyPU1hdGgucmFuZG9tKCkqZXwwLG49dFstLWVdLHRbZV09dFtyXSx0W3JdPW59ZnVuY3Rpb24gaSh0LGUpe2lmKCF0KXRocm93IG5ldyBFcnJvcihcInN0cmluZ1wiPT10eXBlb2YgZT9lOmUoKSl9ZnVuY3Rpb24gYSh0LGUpe2lmKHZvaWQgMD09PWUmJihlPVtdKSxBcnJheS5pc0FycmF5KHQpfHxsKHQpKWZvcih2YXIgbj0wO248dC5sZW5ndGg7KytuKWEodFtuXSxlKTtlbHNlIGUucHVzaCh0KTtyZXR1cm4gZX1mdW5jdGlvbiBvKHQsZSl7aWYodD09PWUpcmV0dXJuITA7aWYobnVsbD09dHx8bnVsbD09ZSlyZXR1cm4hMTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWlmKHRbbl0hPT1lW25dKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIHModCl7cmV0dXJuIHQlMT09MH1mdW5jdGlvbiB1KHQsZSl7dmFyIG49ZS5sZW5ndGg7cmV0dXJuIGkoKHQ9bnVsbD09dD9lLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiBlfSk6W10uY29uY2F0KHQpKS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gdD49LW4mJnQ8bn0pLFwiQWxsIHZhbHVlcyBpbiBheGlzIHBhcmFtIG11c3QgYmUgaW4gcmFuZ2UgWy1cIituK1wiLCBcIituK1wiKSBidXQgZ290IGF4aXMgXCIrdCksaSh0LmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiBzKHQpfSksXCJBbGwgdmFsdWVzIGluIGF4aXMgcGFyYW0gbXVzdCBiZSBpbnRlZ2VycyBidXQgZ290IGF4aXMgXCIrdCksdC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQ8MD9uK3Q6dH0pfWZ1bmN0aW9uIGModCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtpZihpc05hTihyKXx8IWlzRmluaXRlKHIpKXRocm93IEVycm9yKFwiQSB0ZW5zb3Igb2YgdHlwZSBcIitlK1wiIGJlaW5nIHVwbG9hZGVkIGNvbnRhaW5zIFwiK3IrXCIuXCIpfX1mdW5jdGlvbiBsKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHx0IGluc3RhbmNlb2YgSW50MzJBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXl9ZnVuY3Rpb24gZih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdHx8dCBpbnN0YW5jZW9mIFN0cmluZ31mdW5jdGlvbiBoKHQpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgdH1mdW5jdGlvbiBwKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0fWZ1bmN0aW9uIGQodCxlKXtpZihudWxsPT1lfHxcImZsb2F0MzJcIj09PWV8fFwiY29tcGxleDY0XCI9PT1lKXJldHVybiBuZXcgRmxvYXQzMkFycmF5KHQpO2lmKFwiaW50MzJcIj09PWUpcmV0dXJuIG5ldyBJbnQzMkFycmF5KHQpO2lmKFwiYm9vbFwiPT09ZSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkodCk7dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBkYXRhIHR5cGUgXCIrZSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZS5zaHVmZmxlPW4sZS5jbGFtcD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIE1hdGgubWF4KHQsTWF0aC5taW4oZSxuKSl9LGUubmVhcmVzdExhcmdlckV2ZW49ZnVuY3Rpb24odCl7cmV0dXJuIHQlMj09MD90OnQrMX0sZS5zdW09ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj0wO248dC5sZW5ndGg7bisrKWUrPXRbbl07cmV0dXJuIGV9LGUucmFuZFVuaWZvcm09ZnVuY3Rpb24odCxlKXt2YXIgbj1NYXRoLnJhbmRvbSgpO3JldHVybiBlKm4rKDEtbikqdH0sZS5kaXN0U3F1YXJlZD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9TnVtYmVyKHRbcl0pLU51bWJlcihlW3JdKTtuKz1pKml9cmV0dXJuIG59LGUuYXNzZXJ0PWksZS5hc3NlcnRTaGFwZXNNYXRjaD1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49XCJcIiksaShvKHQsZSksbitcIiBTaGFwZXMgXCIrdCtcIiBhbmQgXCIrZStcIiBtdXN0IG1hdGNoXCIpfSxlLmFzc2VydE5vbk51bGw9ZnVuY3Rpb24odCl7aShudWxsIT10LFwiVGhlIGlucHV0IHRvIHRoZSB0ZW5zb3IgY29uc3RydWN0b3IgbXVzdCBiZSBhIG5vbi1udWxsIHZhbHVlLlwiKX0sZS5mbGF0dGVuPWEsZS5zaXplRnJvbVNoYXBlPWZ1bmN0aW9uKHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4gMTtmb3IodmFyIGU9dFswXSxuPTE7bjx0Lmxlbmd0aDtuKyspZSo9dFtuXTtyZXR1cm4gZX0sZS5pc1NjYWxhclNoYXBlPWZ1bmN0aW9uKHQpe3JldHVybiAwPT09dC5sZW5ndGh9LGUuYXJyYXlzRXF1YWw9byxlLmlzSW50PXMsZS50YW5oPWZ1bmN0aW9uKHQpe2lmKG51bGwhPU1hdGgudGFuaClyZXR1cm4gTWF0aC50YW5oKHQpO2lmKHQ9PT0xLzApcmV0dXJuIDE7aWYodD09PS0xLzApcmV0dXJuLTE7dmFyIGU9TWF0aC5leHAoMip0KTtyZXR1cm4oZS0xKS8oZSsxKX0sZS5zaXplVG9TcXVhcmlzaFNoYXBlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1NYXRoLmZsb29yKE1hdGguc3FydCh0KSk7ZT4xOy0tZSlpZih0JWU9PTApcmV0dXJuW2UsdC9lXTtyZXR1cm5bMSx0XX0sZS5jcmVhdGVTaHVmZmxlZEluZGljZXM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBVaW50MzJBcnJheSh0KSxyPTA7cjx0OysrcillW3JdPXI7cmV0dXJuIG4oZSksZX0sZS5yaWdodFBhZD1mdW5jdGlvbih0LGUpe3JldHVybiBlPD10Lmxlbmd0aD90OnQrXCIgXCIucmVwZWF0KGUtdC5sZW5ndGgpfSxlLnJlcGVhdGVkVHJ5PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ZnVuY3Rpb24odCl7cmV0dXJuIDB9KSxuZXcgUHJvbWlzZShmdW5jdGlvbihyLGkpe3ZhciBhPTAsbz1mdW5jdGlvbigpe2lmKHQoKSlyKCk7ZWxzZXt2YXIgcz1lKCsrYSk7bnVsbCE9biYmYT49bj9pKCk6c2V0VGltZW91dChvLHMpfX07bygpfSl9LGUuaW5mZXJGcm9tSW1wbGljaXRTaGFwZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0xLHI9LTEsaT0wO2k8dC5sZW5ndGg7KytpKWlmKHRbaV0+PTApbio9dFtpXTtlbHNlIGlmKC0xPT09dFtpXSl7aWYoLTEhPT1yKXRocm93IEVycm9yKFwiU2hhcGVzIGNhbiBvbmx5IGhhdmUgMSBpbXBsaWNpdCBzaXplLiBGb3VuZCAtMSBhdCBkaW0gXCIrcitcIiBhbmQgZGltIFwiK2kpO3I9aX1lbHNlIGlmKHRbaV08MCl0aHJvdyBFcnJvcihcIlNoYXBlcyBjYW4gbm90IGJlIDwgMC4gRm91bmQgXCIrdFtpXStcIiBhdCBkaW0gXCIraSk7aWYoLTE9PT1yKXtpZihlPjAmJmUhPT1uKXRocm93IEVycm9yKFwiU2l6ZShcIitlK1wiKSBtdXN0IG1hdGNoIHRoZSBwcm9kdWN0IG9mIHNoYXBlIFwiK3QpO3JldHVybiB0fWlmKDA9PT1uKXRocm93IEVycm9yKFwiQ2Fubm90IGluZmVyIHRoZSBtaXNzaW5nIHNpemUgaW4gW1wiK3QrXCJdIHdoZW4gdGhlcmUgYXJlIDAgZWxlbWVudHNcIik7aWYoZSVuIT0wKXRocm93IEVycm9yKFwiVGhlIGltcGxpY2l0IHNoYXBlIGNhbid0IGJlIGEgZnJhY3Rpb25hbCBudW1iZXIuIEdvdCBcIitlK1wiIC8gXCIrbik7dmFyIGE9dC5zbGljZSgpO3JldHVybiBhW3JdPWUvbixhfSxlLnBhcnNlQXhpc1BhcmFtPXUsZS5zcXVlZXplU2hhcGU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10scj1bXSxpPW51bGw9PWU/bnVsbDp1KGUsdCkuc29ydCgpLGE9MCxvPTA7bzx0Lmxlbmd0aDsrK28pe2lmKG51bGwhPWkpe2lmKGlbYV09PT1vJiYxIT09dFtvXSl0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBzcXVlZXplIGF4aXMgXCIrbytcIiBzaW5jZSBpdHMgZGltICdcIit0W29dK1wiJyBpcyBub3QgMVwiKTsobnVsbD09aVthXXx8aVthXT5vKSYmMT09PXRbb10mJihuLnB1c2godFtvXSksci5wdXNoKG8pKSxpW2FdPD1vJiZhKyt9MSE9PXRbb10mJihuLnB1c2godFtvXSksci5wdXNoKG8pKX1yZXR1cm57bmV3U2hhcGU6bixrZXB0RGltczpyfX0sZS5nZXRUeXBlZEFycmF5RnJvbURUeXBlPWZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbDtpZihudWxsPT10fHxcImZsb2F0MzJcIj09PXQpbj1uZXcgRmxvYXQzMkFycmF5KGUpO2Vsc2UgaWYoXCJpbnQzMlwiPT09dCluPW5ldyBJbnQzMkFycmF5KGUpO2Vsc2V7aWYoXCJib29sXCIhPT10KXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YSB0eXBlIFwiK3QpO249bmV3IFVpbnQ4QXJyYXkoZSl9cmV0dXJuIG59LGUuZ2V0QXJyYXlGcm9tRFR5cGU9ZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsO2lmKG51bGw9PXR8fFwiZmxvYXQzMlwiPT09dCluPW5ldyBGbG9hdDMyQXJyYXkoZSk7ZWxzZSBpZihcImludDMyXCI9PT10KW49bmV3IEludDMyQXJyYXkoZSk7ZWxzZSBpZihcImJvb2xcIj09PXQpbj1uZXcgVWludDhBcnJheShlKTtlbHNle2lmKFwic3RyaW5nXCIhPT10KXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZGF0YSB0eXBlIFwiK3QpO249bmV3IEFycmF5KGUpfXJldHVybiBufSxlLmNoZWNrQ29tcHV0YXRpb25Gb3JFcnJvcnM9ZnVuY3Rpb24odCxlLG4pe2lmKFwiZmxvYXQzMlwiPT09ZSlmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9dFtyXTtpZihpc05hTihpKXx8IWlzRmluaXRlKGkpKXRocm93IEVycm9yKFwiVGhlIHJlc3VsdCBvZiB0aGUgJ1wiK24rXCInIGlzIFwiK2krXCIuXCIpfX0sZS5jaGVja0NvbnZlcnNpb25Gb3JFcnJvcnM9YyxlLmhhc0VuY29kaW5nTG9zcz1mdW5jdGlvbih0LGUpe3JldHVybiEoXCJjb21wbGV4NjRcIj09PWV8fFwiZmxvYXQzMlwiPT09ZSYmXCJjb21wbGV4NjRcIiE9PXR8fFwiaW50MzJcIj09PWUmJlwiZmxvYXQzMlwiIT09dCYmXCJjb21wbGV4NjRcIiE9PXR8fFwiYm9vbFwiPT09ZSYmXCJib29sXCI9PT10KX0sZS5pc1R5cGVkQXJyYXk9bCxlLmJ5dGVzUGVyRWxlbWVudD1mdW5jdGlvbih0KXtpZihcImZsb2F0MzJcIj09PXR8fFwiaW50MzJcIj09PXQpcmV0dXJuIDQ7aWYoXCJjb21wbGV4NjRcIj09PXQpcmV0dXJuIDg7aWYoXCJib29sXCI9PT10KXJldHVybiAxO3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gZHR5cGUgXCIrdCl9LGUuYnl0ZXNGcm9tU3RyaW5nQXJyYXk9ZnVuY3Rpb24odCl7aWYobnVsbD09dClyZXR1cm4gMDt2YXIgZT0wO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGUrPTIqdC5sZW5ndGh9KSxlfSxlLmlzU3RyaW5nPWYsZS5pc0Jvb2xlYW49aCxlLmlzTnVtYmVyPXAsZS5pbmZlckR0eXBlPWZ1bmN0aW9uIHQoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBBcnJheT90KGVbMF0pOmUgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/XCJmbG9hdDMyXCI6ZSBpbnN0YW5jZW9mIEludDMyQXJyYXl8fGUgaW5zdGFuY2VvZiBVaW50OEFycmF5P1wiaW50MzJcIjpwKGUpP1wiZmxvYXQzMlwiOmYoZSk/XCJzdHJpbmdcIjpoKGUpP1wiYm9vbFwiOlwiZmxvYXQzMlwifSxlLmlzRnVuY3Rpb249ZnVuY3Rpb24odCl7cmV0dXJuISEodCYmdC5jb25zdHJ1Y3RvciYmdC5jYWxsJiZ0LmFwcGx5KX0sZS5uZWFyZXN0RGl2aXNvcj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1lO248dDsrK24paWYodCVuPT0wKXJldHVybiBuO3JldHVybiB0fSxlLmNvbXB1dGVTdHJpZGVzPWZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8MilyZXR1cm5bXTt2YXIgbj1uZXcgQXJyYXkoZS0xKTtuW2UtMl09dFtlLTFdO2Zvcih2YXIgcj1lLTM7cj49MDstLXIpbltyXT1uW3IrMV0qdFtyKzFdO3JldHVybiBufSxlLnRvVHlwZWRBcnJheT1mdW5jdGlvbih0LGUsbil7aWYoXCJzdHJpbmdcIj09PWUpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNvbnZlcnQgYSBzdHJpbmdbXSB0byBhIFR5cGVkQXJyYXlcIik7aWYoQXJyYXkuaXNBcnJheSh0KSYmKHQ9YSh0KSksbiYmYyh0LGUpLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkmJlwiZmxvYXQzMlwiPT09ZXx8dCBpbnN0YW5jZW9mIEludDMyQXJyYXkmJlwiaW50MzJcIj09PWV8fHQgaW5zdGFuY2VvZiBVaW50OEFycmF5JiZcImJvb2xcIj09PWV9KHQsZSkpcmV0dXJuIHQ7aWYobnVsbD09ZXx8XCJmbG9hdDMyXCI9PT1lfHxcImNvbXBsZXg2NFwiPT09ZSlyZXR1cm4gbmV3IEZsb2F0MzJBcnJheSh0KTtpZihcImludDMyXCI9PT1lKXJldHVybiBuZXcgSW50MzJBcnJheSh0KTtpZihcImJvb2xcIj09PWUpe2Zvcih2YXIgcj1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCksaT0wO2k8ci5sZW5ndGg7KytpKTAhPT1NYXRoLnJvdW5kKHRbaV0pJiYocltpXT0xKTtyZXR1cm4gcn10aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGRhdGEgdHlwZSBcIitlKX0sZS5tYWtlT25lc1R5cGVkQXJyYXk9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ZCh0LGUpLHI9MDtyPG4ubGVuZ3RoO3IrKyluW3JdPTE7cmV0dXJuIG59LGUubWFrZVplcm9zVHlwZWRBcnJheT1kLGUubm93PWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHBlcmZvcm1hbmNlKXJldHVybiBwZXJmb3JtYW5jZS5ub3coKTtpZih2b2lkIDAhPT1yKXt2YXIgdD1yLmhydGltZSgpO3JldHVybiAxZTMqdFswXSt0WzFdLzFlNn10aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgbWVhc3VyZSB0aW1lIGluIHRoaXMgZW52aXJvbm1lbnQuIFlvdSBzaG91bGQgcnVuIHRmLmpzIGluIHRoZSBicm93c2VyIG9yIGluIE5vZGUuanNcIil9fSk7ZihfKTtfLnNodWZmbGUsXy5jbGFtcCxfLm5lYXJlc3RMYXJnZXJFdmVuLF8uc3VtLF8ucmFuZFVuaWZvcm0sXy5kaXN0U3F1YXJlZCxfLmFzc2VydCxfLmFzc2VydFNoYXBlc01hdGNoLF8uYXNzZXJ0Tm9uTnVsbCxfLmZsYXR0ZW4sXy5zaXplRnJvbVNoYXBlLF8uaXNTY2FsYXJTaGFwZSxfLmFycmF5c0VxdWFsLF8uaXNJbnQsXy50YW5oLF8uc2l6ZVRvU3F1YXJpc2hTaGFwZSxfLmNyZWF0ZVNodWZmbGVkSW5kaWNlcyxfLnJpZ2h0UGFkLF8ucmVwZWF0ZWRUcnksXy5pbmZlckZyb21JbXBsaWNpdFNoYXBlLF8ucGFyc2VBeGlzUGFyYW0sXy5zcXVlZXplU2hhcGUsXy5nZXRUeXBlZEFycmF5RnJvbURUeXBlLF8uZ2V0QXJyYXlGcm9tRFR5cGUsXy5jaGVja0NvbXB1dGF0aW9uRm9yRXJyb3JzLF8uY2hlY2tDb252ZXJzaW9uRm9yRXJyb3JzLF8uaGFzRW5jb2RpbmdMb3NzLF8uaXNUeXBlZEFycmF5LF8uYnl0ZXNQZXJFbGVtZW50LF8uYnl0ZXNGcm9tU3RyaW5nQXJyYXksXy5pc1N0cmluZyxfLmlzQm9vbGVhbixfLmlzTnVtYmVyLF8uaW5mZXJEdHlwZSxfLmlzRnVuY3Rpb24sXy5uZWFyZXN0RGl2aXNvcixfLmNvbXB1dGVTdHJpZGVzLF8udG9UeXBlZEFycmF5LF8ubWFrZU9uZXNUeXBlZEFycmF5LF8ubWFrZVplcm9zVHlwZWRBcnJheSxfLm5vdzt2YXIgeD1oKGZ1bmN0aW9uKHQsZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49NztmdW5jdGlvbiByKHQsZSl7dmFyIHI7cmV0dXJuIHI9QXJyYXkuaXNBcnJheSh0KT9wYXJzZUZsb2F0KHRbMF0udG9GaXhlZChuKSkrXCIgKyBcIitwYXJzZUZsb2F0KHRbMV0udG9GaXhlZChuKSkrXCJqXCI6Xy5pc1N0cmluZyh0KT9cIidcIit0K1wiJ1wiOnBhcnNlRmxvYXQodC50b0ZpeGVkKG4pKS50b1N0cmluZygpLF8ucmlnaHRQYWQocixlKX1mdW5jdGlvbiBpKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDtuKz0yKWUucHVzaChbdFtuXSx0W24rMV1dKTtyZXR1cm4gZX1lLnRlbnNvclRvU3RyaW5nPWZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBvPV8uY29tcHV0ZVN0cmlkZXMoZSkscz1mdW5jdGlvbih0LGUsbixhKXt2YXIgbz1fLnNpemVGcm9tU2hhcGUoZSkscz1hW2EubGVuZ3RoLTFdLHU9bmV3IEFycmF5KHMpLmZpbGwoMCksYz1lLmxlbmd0aCxsPVwiY29tcGxleDY0XCI9PT1uP2kodCk6dDtpZihjPjEpZm9yKHZhciBmPTA7ZjxvL3M7ZisrKWZvcih2YXIgaD1mKnMscD0wO3A8cztwKyspdVtwXT1NYXRoLm1heCh1W3BdLHIobFtoK3BdLDApLmxlbmd0aCk7cmV0dXJuIHV9KHQsZSxuLG8pLHU9ZS5sZW5ndGgsYz1mdW5jdGlvbiB0KGUsbixhLG8scyx1KXt2b2lkIDA9PT11JiYodT0hMCk7dmFyIGM9XCJjb21wbGV4NjRcIj09PWE/MjoxLGw9blswXSxmPW4ubGVuZ3RoO2lmKDA9PT1mKXJldHVyblwiY29tcGxleDY0XCI9PT1hP1tyKGkoZSlbMF0sMCldOltlWzBdLnRvU3RyaW5nKCldO2lmKDE9PT1mKXtpZihsPjIwKXt2YXIgaD0zKmMscD1BcnJheS5mcm9tKGUuc2xpY2UoMCxoKSksZD1BcnJheS5mcm9tKGUuc2xpY2UobC0zKmMsbCkpO3JldHVyblwiY29tcGxleDY0XCI9PT1hJiYocD1pKHApLGQ9aShkKSksW1wiW1wiK3AubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxzW2VdKX0pLmpvaW4oXCIsIFwiKStcIiwgLi4uLCBcIitkLm1hcChmdW5jdGlvbih0LGUpe3JldHVybiByKHQsc1tsLTMrZV0pfSkuam9pbihcIiwgXCIpK1wiXVwiXX1yZXR1cm5bXCJbXCIrKFwiY29tcGxleDY0XCI9PT1hP2koZSk6QXJyYXkuZnJvbShlKSkubWFwKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIodCxzW2VdKX0pLmpvaW4oXCIsIFwiKStcIl1cIl19dmFyIG09bi5zbGljZSgxKSxnPW8uc2xpY2UoMSkseT1vWzBdKmMsdj1bXTtpZihsPjIwKXtmb3IodmFyIGI9MDtiPDM7YisrKXt2YXIgdz0oXz1iKnkpK3k7di5wdXNoLmFwcGx5KHYsdChlLnNsaWNlKF8sdyksbSxhLGcscywhMSkpfXYucHVzaChcIi4uLlwiKTtmb3IoYj1sLTM7YjxsO2IrKyl7dz0oXz1iKnkpK3k7di5wdXNoLmFwcGx5KHYsdChlLnNsaWNlKF8sdyksbSxhLGcscyxiPT09bC0xKSl9fWVsc2UgZm9yKGI9MDtiPGw7YisrKXt2YXIgXzt3PShfPWIqeSkreTt2LnB1c2guYXBwbHkodix0KGUuc2xpY2UoXyx3KSxtLGEsZyxzLGI9PT1sLTEpKX12YXIgeD0yPT09Zj9cIixcIjpcIlwiO3ZbMF09XCJbXCIrdlswXSt4O2ZvcihiPTE7Yjx2Lmxlbmd0aC0xO2IrKyl2W2JdPVwiIFwiK3ZbYl0reDt2YXIgRT1cIixcXG5cIjtmb3IoYj0yO2I8ZjtiKyspRSs9XCJcXG5cIjtyZXR1cm4gdlt2Lmxlbmd0aC0xXT1cIiBcIit2W3YubGVuZ3RoLTFdK1wiXVwiKyh1P1wiXCI6RSksdn0odCxlLG4sbyxzKSxsPVtcIlRlbnNvclwiXTtyZXR1cm4gYSYmKGwucHVzaChcIiAgZHR5cGU6IFwiK24pLGwucHVzaChcIiAgcmFuazogXCIrdSksbC5wdXNoKFwiICBzaGFwZTogW1wiK2UrXCJdXCIpLGwucHVzaChcIiAgdmFsdWVzOlwiKSksbC5wdXNoKGMubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwiICAgIFwiK3R9KS5qb2luKFwiXFxuXCIpKSxsLmpvaW4oXCJcXG5cIil9fSk7Zih4KTt4LnRlbnNvclRvU3RyaW5nO3ZhciBFPWgoZnVuY3Rpb24odCxlKXt2YXIgbixyPWwmJmwuX19leHRlbmRzfHwobj1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSllLmhhc093blByb3BlcnR5KG4pJiYodFtuXT1lW25dKX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fW4odCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihyLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgcil9KSxpPWwmJmwuX19hd2FpdGVyfHxmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gbmV3KG58fChuPVByb21pc2UpKShmdW5jdGlvbihpLGEpe2Z1bmN0aW9uIG8odCl7dHJ5e3Uoci5uZXh0KHQpKX1jYXRjaCh0KXthKHQpfX1mdW5jdGlvbiBzKHQpe3RyeXt1KHIudGhyb3codCkpfWNhdGNoKHQpe2EodCl9fWZ1bmN0aW9uIHUodCl7dC5kb25lP2kodC52YWx1ZSk6bmV3IG4oZnVuY3Rpb24oZSl7ZSh0LnZhbHVlKX0pLnRoZW4obyxzKX11KChyPXIuYXBwbHkodCxlfHxbXSkpLm5leHQoKSl9KX0sYT1sJiZsLl9fZ2VuZXJhdG9yfHxmdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxhLG89e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmaVswXSl0aHJvdyBpWzFdO3JldHVybiBpWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIGE9e25leHQ6cygwKSx0aHJvdzpzKDEpLHJldHVybjpzKDIpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihhW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGE7ZnVuY3Rpb24gcyhhKXtyZXR1cm4gZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKGEpe2lmKG4pdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7Zm9yKDtvOyl0cnl7aWYobj0xLHImJihpPTImYVswXT9yLnJldHVybjphWzBdP3IudGhyb3d8fCgoaT1yLnJldHVybikmJmkuY2FsbChyKSwwKTpyLm5leHQpJiYhKGk9aS5jYWxsKHIsYVsxXSkpLmRvbmUpcmV0dXJuIGk7c3dpdGNoKHI9MCxpJiYoYT1bMiZhWzBdLGkudmFsdWVdKSxhWzBdKXtjYXNlIDA6Y2FzZSAxOmk9YTticmVhaztjYXNlIDQ6cmV0dXJuIG8ubGFiZWwrKyx7dmFsdWU6YVsxXSxkb25lOiExfTtjYXNlIDU6by5sYWJlbCsrLHI9YVsxXSxhPVswXTtjb250aW51ZTtjYXNlIDc6YT1vLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKGk9KGk9by50cnlzKS5sZW5ndGg+MCYmaVtpLmxlbmd0aC0xXSkmJig2PT09YVswXXx8Mj09PWFbMF0pKXtvPTA7Y29udGludWV9aWYoMz09PWFbMF0mJighaXx8YVsxXT5pWzBdJiZhWzFdPGlbM10pKXtvLmxhYmVsPWFbMV07YnJlYWt9aWYoNj09PWFbMF0mJm8ubGFiZWw8aVsxXSl7by5sYWJlbD1pWzFdLGk9YTticmVha31pZihpJiZvLmxhYmVsPGlbMl0pe28ubGFiZWw9aVsyXSxvLm9wcy5wdXNoKGEpO2JyZWFrfWlbMl0mJm8ub3BzLnBvcCgpLG8udHJ5cy5wb3AoKTtjb250aW51ZX1hPWUuY2FsbCh0LG8pfWNhdGNoKHQpe2E9WzYsdF0scj0wfWZpbmFsbHl7bj1pPTB9aWYoNSZhWzBdKXRocm93IGFbMV07cmV0dXJue3ZhbHVlOmFbMF0/YVsxXTp2b2lkIDAsZG9uZTohMH19KFthLHNdKX19fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbz1fLHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuKXtpZih0aGlzLmR0eXBlPWUsdGhpcy5zaGFwZT10LnNsaWNlKCksdGhpcy5zaXplPV8uc2l6ZUZyb21TaGFwZSh0KSxudWxsIT1uKXt2YXIgcj1uLmxlbmd0aDtfLmFzc2VydChyPT09dGhpcy5zaXplLFwiTGVuZ3RoIG9mIHZhbHVlcyAnXCIrcitcIicgZG9lcyBub3QgbWF0Y2ggdGhlIHNpemUgaW5mZXJyZWQgYnkgdGhlIHNoYXBlICdcIit0aGlzLnNpemUrXCInLlwiKX1pZihcImNvbXBsZXg2NFwiPT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJjb21wbGV4NjQgZHR5cGUgVGVuc29yQnVmZmVycyBhcmUgbm90IHN1cHBvcnRlZC4gUGxlYXNlIGNyZWF0ZSBhIFRlbnNvckJ1ZmZlciBmb3IgdGhlIHJlYWwgYW5kIGltYWdpbmFyeSBwYXJ0cyBzZXBhcmF0ZWx5IGFuZCBjYWxsIHRmLmNvbXBsZXgocmVhbCwgaW1hZykuXCIpO3RoaXMudmFsdWVzPW58fF8uZ2V0QXJyYXlGcm9tRFR5cGUoZSxfLnNpemVGcm9tU2hhcGUodGhpcy5zaGFwZSkpLHRoaXMuc3RyaWRlcz1vLmNvbXB1dGVTdHJpZGVzKHQpfXJldHVybiB0LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MTtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbi0xXT1hcmd1bWVudHNbbl07MD09PWUubGVuZ3RoJiYoZT1bMF0pLF8uYXNzZXJ0KGUubGVuZ3RoPT09dGhpcy5yYW5rLFwiVGhlIG51bWJlciBvZiBwcm92aWRlZCBjb29yZGluYXRlcyAoXCIrZS5sZW5ndGgrXCIpIG11c3QgbWF0Y2ggdGhlIHJhbmsgKFwiK3RoaXMucmFuaytcIilcIik7dmFyIHI9dGhpcy5sb2NUb0luZGV4KGUpO3RoaXMudmFsdWVzW3JdPXR9LHQucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTswPT09dC5sZW5ndGgmJih0PVswXSk7Zm9yKHZhciBuPXRbdC5sZW5ndGgtMV0scj0wO3I8dC5sZW5ndGgtMTsrK3Ipbis9dGhpcy5zdHJpZGVzW3JdKnRbcl07cmV0dXJuIHRoaXMudmFsdWVzW25dfSx0LnByb3RvdHlwZS5sb2NUb0luZGV4PWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLnJhbmspcmV0dXJuIDA7aWYoMT09PXRoaXMucmFuaylyZXR1cm4gdFswXTtmb3IodmFyIGU9dFt0Lmxlbmd0aC0xXSxuPTA7bjx0Lmxlbmd0aC0xOysrbillKz10aGlzLnN0cmlkZXNbbl0qdFtuXTtyZXR1cm4gZX0sdC5wcm90b3R5cGUuaW5kZXhUb0xvYz1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5yYW5rKXJldHVybltdO2lmKDE9PT10aGlzLnJhbmspcmV0dXJuW3RdO2Zvcih2YXIgZT1uZXcgQXJyYXkodGhpcy5zaGFwZS5sZW5ndGgpLG49MDtuPGUubGVuZ3RoLTE7KytuKWVbbl09TWF0aC5mbG9vcih0L3RoaXMuc3RyaWRlc1tuXSksdC09ZVtuXSp0aGlzLnN0cmlkZXNbbl07cmV0dXJuIGVbZS5sZW5ndGgtMV09dCxlfSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCJyYW5rXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNoYXBlLmxlbmd0aH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSx0LnByb3RvdHlwZS50b1RlbnNvcj1mdW5jdGlvbigpe3JldHVybiBmLm1ha2UodGhpcy5zaGFwZSx7dmFsdWVzOnRoaXMudmFsdWVzfSx0aGlzLmR0eXBlKX0sdH0oKTtlLlRlbnNvckJ1ZmZlcj1zO3ZhciB1PW51bGwsYz1udWxsO2Uuc2V0VGVuc29yVHJhY2tlcj1mdW5jdGlvbih0KXt1PXR9LGUuc2V0T3BIYW5kbGVyPWZ1bmN0aW9uKHQpe2M9dH07dmFyIGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLHIpe3RoaXMuaXNEaXNwb3NlZEludGVybmFsPSExLHRoaXMuc2hhcGU9dC5zbGljZSgpLHRoaXMuZHR5cGU9ZXx8XCJmbG9hdDMyXCIsdGhpcy5zaXplPV8uc2l6ZUZyb21TaGFwZSh0KSx0aGlzLnN0cmlkZXM9by5jb21wdXRlU3RyaWRlcyh0KSx0aGlzLmRhdGFJZD1udWxsIT1yP3I6e30sdGhpcy5pZD11KCkubmV4dFRlbnNvcklkKCksdGhpcy5yYW5rVHlwZT10aGlzLnJhbms8NT90aGlzLnJhbmsudG9TdHJpbmcoKTpcImhpZ2hlclwiLHUoKS5yZWdpc3RlclRlbnNvcih0aGlzKSxudWxsIT1uJiZ1KCkud3JpdGUodGhpcy5kYXRhSWQsbil9cmV0dXJuIHQubWFrZT1mdW5jdGlvbihlLG4scil7cmV0dXJuIG5ldyB0KGUscixuLnZhbHVlcyxuLmRhdGFJZCl9LHQucHJvdG90eXBlLmZsYXR0ZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLmFzMUQoKX0sdC5wcm90b3R5cGUuYXNTY2FsYXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxfLmFzc2VydCgxPT09dGhpcy5zaXplLFwiVGhlIGFycmF5IG11c3QgaGF2ZSBvbmx5IDEgZWxlbWVudC5cIiksdGhpcy5yZXNoYXBlKFtdKX0sdC5wcm90b3R5cGUuYXMxRD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHRoaXMucmVzaGFwZShbdGhpcy5zaXplXSl9LHQucHJvdG90eXBlLmFzMkQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnJlc2hhcGUoW3QsZV0pfSx0LnByb3RvdHlwZS5hczNEPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnJlc2hhcGUoW3QsZSxuXSl9LHQucHJvdG90eXBlLmFzNEQ9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksdGhpcy5yZXNoYXBlKFt0LGUsbixyXSl9LHQucHJvdG90eXBlLmFzNUQ9ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnJlc2hhcGUoW3QsZSxuLHIsaV0pfSx0LnByb3RvdHlwZS5hc1R5cGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5jYXN0KHRoaXMsdCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcInJhbmtcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hhcGUubGVuZ3RofSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLHQucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtfLmFzc2VydCh0Lmxlbmd0aD09PXRoaXMucmFuayxcIk51bWJlciBvZiBjb29yZGluYXRlcyBpbiBnZXQoKSBtdXN0IG1hdGNoIHRoZSByYW5rIG9mIHRoZSB0ZW5zb3JcIiksXy5hc3NlcnQoXCJjb21wbGV4NjRcIiE9PXRoaXMuZHR5cGUsXCJUZW5zb3IuZ2V0KCkgaXMgbm90IHN1cHBvcnRlZCBmb3IgY29tcGxleDY0IHRlbnNvcnMgeWV0LlwiKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLDA9PT10Lmxlbmd0aCYmKHQ9WzBdKTtmb3IodmFyIG49dFt0Lmxlbmd0aC0xXSxyPTA7cjx0Lmxlbmd0aC0xOysrciluKz10aGlzLnN0cmlkZXNbcl0qdFtyXTtyZXR1cm4gdGhpcy5kYXRhU3luYygpW25dfSx0LnByb3RvdHlwZS5idWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYy5idWZmZXIodGhpcy5zaGFwZSx0aGlzLmR0eXBlLHRoaXMuZGF0YVN5bmMoKSl9LHQucHJvdG90eXBlLmRhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYSh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLFsyLHUoKS5yZWFkKHRoaXMuZGF0YUlkKV19KX0pfSx0LnByb3RvdHlwZS5kYXRhU3luYz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLHUoKS5yZWFkU3luYyh0aGlzLmRhdGFJZCl9LHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmlzRGlzcG9zZWR8fCh1KCkuZGlzcG9zZVRlbnNvcih0aGlzKSx0aGlzLmlzRGlzcG9zZWRJbnRlcm5hbD0hMCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LnByb3RvdHlwZSxcImlzRGlzcG9zZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNEaXNwb3NlZEludGVybmFsfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLHQucHJvdG90eXBlLnRocm93SWZEaXNwb3NlZD1mdW5jdGlvbigpe2lmKHRoaXMuaXNEaXNwb3NlZCl0aHJvdyBuZXcgRXJyb3IoXCJUZW5zb3IgaXMgZGlzcG9zZWQuXCIpfSx0LnByb3RvdHlwZS50b0Zsb2F0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXNUeXBlKFwiZmxvYXQzMlwiKX0sdC5wcm90b3R5cGUudG9JbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc1R5cGUoXCJpbnQzMlwiKX0sdC5wcm90b3R5cGUudG9Cb29sPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXNUeXBlKFwiYm9vbFwiKX0sdC5wcm90b3R5cGUucHJpbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PSExKSxjLnByaW50KHRoaXMsdCl9LHQucHJvdG90eXBlLnJlc2hhcGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5yZXNoYXBlKHRoaXMsdCl9LHQucHJvdG90eXBlLnJlc2hhcGVBcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSx0aGlzLnJlc2hhcGUodC5zaGFwZSl9LHQucHJvdG90eXBlLmV4cGFuZERpbXM9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PTApLGMuZXhwYW5kRGltcyh0aGlzLHQpfSx0LnByb3RvdHlwZS5jdW1zdW09ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSx2b2lkIDA9PT1lJiYoZT0hMSksdm9pZCAwPT09biYmKG49ITEpLGMuY3Vtc3VtKHRoaXMsdCxlLG4pfSx0LnByb3RvdHlwZS5zcXVlZXplPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3F1ZWV6ZSh0aGlzLHQpfSx0LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuY2xvbmUodGhpcyl9LHQucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSExKTt2YXIgZT10aGlzLmRhdGFTeW5jKCk7cmV0dXJuIHgudGVuc29yVG9TdHJpbmcoZSx0aGlzLnNoYXBlLHRoaXMuZHR5cGUsdCl9LHQucHJvdG90eXBlLnRpbGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy50aWxlKHRoaXMsdCl9LHQucHJvdG90eXBlLmdhdGhlcj1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZ2F0aGVyKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubWF0TXVsPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLHZvaWQgMD09PW4mJihuPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubWF0TXVsKHRoaXMsdCxlLG4pfSx0LnByb3RvdHlwZS5kb3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5kb3QodGhpcyx0KX0sdC5wcm90b3R5cGUubm9ybT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PXQmJih0PVwiZXVjbGlkZWFuXCIpLHZvaWQgMD09PWUmJihlPW51bGwpLHZvaWQgMD09PW4mJihuPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubm9ybSh0aGlzLHQsZSxuKX0sdC5wcm90b3R5cGUuc2xpY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNsaWNlKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUucmV2ZXJzZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnJldmVyc2UodGhpcyx0KX0sdC5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPTApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksZSBpbnN0YW5jZW9mIHQmJihlPVtlXSksYy5jb25jYXQoW3RoaXNdLmNvbmNhdChlKSxuKX0sdC5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNwbGl0KHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuc3RhY2s9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MCksYy5zdGFjayhbdGhpcyx0XSxlKX0sdC5wcm90b3R5cGUudW5zdGFjaz1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSxjLnVuc3RhY2sodGhpcyxlKX0sdC5wcm90b3R5cGUucGFkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLGMucGFkKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuYmF0Y2hOb3JtYWxpemF0aW9uPWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIHZvaWQgMD09PW4mJihuPS4wMDEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5iYXRjaE5vcm1hbGl6YXRpb24odGhpcyx0LGUsbixyLGkpfSx0LnByb3RvdHlwZS5hbGw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hbGwodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5hbnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hbnkodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5sb2dTdW1FeHA9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sb2dTdW1FeHAodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5zdW09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zdW0odGhpcyx0LGUpfSx0LnByb3RvdHlwZS5wcm9kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMucHJvZCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLm1lYW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tZWFuKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubWluPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubWluKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUubWF4PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PXQmJih0PW51bGwpLHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubWF4KHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuYXJnTWluPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1udWxsKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuYXJnTWluKHRoaXMsdCl9LHQucHJvdG90eXBlLmFyZ01heD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmFyZ01heCh0aGlzLHQpfSx0LnByb3RvdHlwZS5jYXN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuY2FzdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hZGQodGhpcyx0KX0sdC5wcm90b3R5cGUuYWRkU3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuYWRkU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLmF0YW4yPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuYXRhbjIodGhpcyx0KX0sdC5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3ViKHRoaXMsdCl9LHQucHJvdG90eXBlLnN1YlN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnN1YlN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5wb3codGhpcyx0KX0sdC5wcm90b3R5cGUucG93U3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMucG93U3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLm11bD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLm11bCh0aGlzLHQpfSx0LnByb3RvdHlwZS5tdWxTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tdWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZGl2KHRoaXMsdCl9LHQucHJvdG90eXBlLmZsb29yRGl2PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZmxvb3JEaXYodGhpcyx0KX0sdC5wcm90b3R5cGUuZGl2U3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZGl2U3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLm1pbmltdW09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5taW5pbXVtKHRoaXMsdCl9LHQucHJvdG90eXBlLm1pbmltdW1TdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5taW5pbXVtU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tYXhpbXVtKHRoaXMsdCl9LHQucHJvdG90eXBlLm1heGltdW1TdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tYXhpbXVtU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLm1vZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLm1vZCh0aGlzLHQpfSx0LnByb3RvdHlwZS5tb2RTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tb2RTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuc3F1YXJlZERpZmZlcmVuY2U9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zcXVhcmVkRGlmZmVyZW5jZSh0aGlzLHQpfSx0LnByb3RvdHlwZS5zcXVhcmVkRGlmZmVyZW5jZVN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNxdWFyZWREaWZmZXJlbmNlU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLnRyYW5zcG9zZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnRyYW5zcG9zZSh0aGlzLHQpfSx0LnByb3RvdHlwZS5ub3RFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLm5vdEVxdWFsKHRoaXMsdCl9LHQucHJvdG90eXBlLm5vdEVxdWFsU3RyaWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubm90RXF1YWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUubGVzcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmxlc3ModGhpcyx0KX0sdC5wcm90b3R5cGUubGVzc1N0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmxlc3NTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuZXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5lcXVhbCh0aGlzLHQpfSx0LnByb3RvdHlwZS5lcXVhbFN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmVxdWFsU3RyaWN0KHRoaXMsdCl9LHQucHJvdG90eXBlLmxlc3NFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmxlc3NFcXVhbCh0aGlzLHQpfSx0LnByb3RvdHlwZS5sZXNzRXF1YWxTdHJpY3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sZXNzRXF1YWxTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuZ3JlYXRlcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmdyZWF0ZXIodGhpcyx0KX0sdC5wcm90b3R5cGUuZ3JlYXRlclN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmdyZWF0ZXJTdHJpY3QodGhpcyx0KX0sdC5wcm90b3R5cGUuZ3JlYXRlckVxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZ3JlYXRlckVxdWFsKHRoaXMsdCl9LHQucHJvdG90eXBlLmdyZWF0ZXJFcXVhbFN0cmljdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmdyZWF0ZXJFcXVhbFN0cmljdCh0aGlzLHQpfSx0LnByb3RvdHlwZS5sb2dpY2FsQW5kPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubG9naWNhbEFuZCh0aGlzLHQpfSx0LnByb3RvdHlwZS5sb2dpY2FsT3I9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sb2dpY2FsT3IodGhpcyx0KX0sdC5wcm90b3R5cGUubG9naWNhbE5vdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubG9naWNhbE5vdCh0aGlzKX0sdC5wcm90b3R5cGUubG9naWNhbFhvcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmxvZ2ljYWxYb3IodGhpcyx0KX0sdC5wcm90b3R5cGUud2hlcmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLndoZXJlKHQsdGhpcyxlKX0sdC5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5uZWcodGhpcyl9LHQucHJvdG90eXBlLmNlaWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmNlaWwodGhpcyl9LHQucHJvdG90eXBlLmZsb29yPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5mbG9vcih0aGlzKX0sdC5wcm90b3R5cGUuc2lnbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc2lnbih0aGlzKX0sdC5wcm90b3R5cGUuZXhwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5leHAodGhpcyl9LHQucHJvdG90eXBlLmV4cG0xPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5leHBtMSh0aGlzKX0sdC5wcm90b3R5cGUubG9nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sb2codGhpcyl9LHQucHJvdG90eXBlLmxvZzFwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sb2cxcCh0aGlzKX0sdC5wcm90b3R5cGUuc3FydD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3FydCh0aGlzKX0sdC5wcm90b3R5cGUucnNxcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnJzcXJ0KHRoaXMpfSx0LnByb3RvdHlwZS5zcXVhcmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNxdWFyZSh0aGlzKX0sdC5wcm90b3R5cGUucmVjaXByb2NhbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMucmVjaXByb2NhbCh0aGlzKX0sdC5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hYnModGhpcyl9LHQucHJvdG90eXBlLmNsaXBCeVZhbHVlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5jbGlwQnlWYWx1ZSh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnJlbHU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnJlbHUodGhpcyl9LHQucHJvdG90eXBlLmVsdT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZWx1KHRoaXMpfSx0LnByb3RvdHlwZS5zZWx1PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zZWx1KHRoaXMpfSx0LnByb3RvdHlwZS5sZWFreVJlbHU9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PS4yKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubGVha3lSZWx1KHRoaXMsdCl9LHQucHJvdG90eXBlLnByZWx1PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMucHJlbHUodGhpcyx0KX0sdC5wcm90b3R5cGUuc2lnbW9pZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc2lnbW9pZCh0aGlzKX0sdC5wcm90b3R5cGUubG9nU2lnbW9pZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMubG9nU2lnbW9pZCh0aGlzKX0sdC5wcm90b3R5cGUuc29mdHBsdXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNvZnRwbHVzKHRoaXMpfSx0LnByb3RvdHlwZS56ZXJvc0xpa2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnplcm9zTGlrZSh0aGlzKX0sdC5wcm90b3R5cGUub25lc0xpa2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLm9uZXNMaWtlKHRoaXMpfSx0LnByb3RvdHlwZS5zaW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNpbih0aGlzKX0sdC5wcm90b3R5cGUuY29zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5jb3ModGhpcyl9LHQucHJvdG90eXBlLnRhbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMudGFuKHRoaXMpfSx0LnByb3RvdHlwZS5hc2luPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hc2luKHRoaXMpfSx0LnByb3RvdHlwZS5hY29zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hY29zKHRoaXMpfSx0LnByb3RvdHlwZS5hdGFuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hdGFuKHRoaXMpfSx0LnByb3RvdHlwZS5zaW5oPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zaW5oKHRoaXMpfSx0LnByb3RvdHlwZS5jb3NoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5jb3NoKHRoaXMpfSx0LnByb3RvdHlwZS50YW5oPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy50YW5oKHRoaXMpfSx0LnByb3RvdHlwZS5hc2luaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuYXNpbmgodGhpcyl9LHQucHJvdG90eXBlLmFjb3NoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hY29zaCh0aGlzKX0sdC5wcm90b3R5cGUuYXRhbmg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmF0YW5oKHRoaXMpfSx0LnByb3RvdHlwZS5lcmY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmVyZih0aGlzKX0sdC5wcm90b3R5cGUucm91bmQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnJvdW5kKHRoaXMpfSx0LnByb3RvdHlwZS5zdGVwPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3RlcCh0aGlzLHQpfSx0LnByb3RvdHlwZS5zb2Z0bWF4PWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0tMSksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnNvZnRtYXgodGhpcyx0KX0sdC5wcm90b3R5cGUubG9nU29mdG1heD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9LTEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5sb2dTb2Z0bWF4KHRoaXMsdCl9LHQucHJvdG90eXBlLnJlc2l6ZUJpbGluZWFyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSExKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuaW1hZ2UucmVzaXplQmlsaW5lYXIodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5yZXNpemVOZWFyZXN0TmVpZ2hib3I9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITEpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5pbWFnZS5yZXNpemVOZWFyZXN0TmVpZ2hib3IodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5jb252MWQ9ZnVuY3Rpb24odCxlLG4scixpLGEpe3JldHVybiB2b2lkIDA9PT1yJiYocj1cIk5XQ1wiKSx2b2lkIDA9PT1pJiYoaT0xKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuY29udjFkKHRoaXMsdCxlLG4scixpLGEpfSx0LnByb3RvdHlwZS5jb252MmQ9ZnVuY3Rpb24odCxlLG4scixpLGEpe3JldHVybiB2b2lkIDA9PT1yJiYocj1cIk5IV0NcIiksdm9pZCAwPT09aSYmKGk9WzEsMV0pLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5jb252MmQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLmNvbnYyZFRyYW5zcG9zZT1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuY29udjJkVHJhbnNwb3NlKHRoaXMsdCxlLG4scixpKX0sdC5wcm90b3R5cGUuZGVwdGh3aXNlQ29udjJEPWZ1bmN0aW9uKHQsZSxuLHIsaSxhKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9XCJOSFdDXCIpLHZvaWQgMD09PWkmJihpPVsxLDFdKSx0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuZGVwdGh3aXNlQ29udjJkKHRoaXMsdCxlLG4scixpLGEpfSx0LnByb3RvdHlwZS5zZXBhcmFibGVDb252MmQ9ZnVuY3Rpb24odCxlLG4scixpLGEpe3JldHVybiB2b2lkIDA9PT1pJiYoaT1bMSwxXSksdm9pZCAwPT09YSYmKGE9XCJOSFdDXCIpLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zZXBhcmFibGVDb252MmQodGhpcyx0LGUsbixyLGksYSl9LHQucHJvdG90eXBlLmF2Z1Bvb2w9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5hdmdQb29sKHRoaXMsdCxlLG4scil9LHQucHJvdG90eXBlLm1heFBvb2w9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5tYXhQb29sKHRoaXMsdCxlLG4scil9LHQucHJvdG90eXBlLmxvY2FsUmVzcG9uc2VOb3JtYWxpemF0aW9uPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB2b2lkIDA9PT10JiYodD01KSx2b2lkIDA9PT1lJiYoZT0xKSx2b2lkIDA9PT1uJiYobj0xKSx2b2lkIDA9PT1yJiYocj0uNSksYy5sb2NhbFJlc3BvbnNlTm9ybWFsaXphdGlvbih0aGlzLHQsZSxuLHIpfSx0LnByb3RvdHlwZS5wb29sPWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5wb29sKHRoaXMsdCxlLG4scixpKX0sdC5wcm90b3R5cGUudmFyaWFibGU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2b2lkIDA9PT10JiYodD0hMCksdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxoLnZhcmlhYmxlKHRoaXMsdCxlLG4pfSx0LnByb3RvdHlwZS51bnNvcnRlZFNlZ21lbnRTdW09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLnVuc29ydGVkU2VnbWVudFN1bSh0aGlzLHQsZSl9LHQucHJvdG90eXBlLmJhdGNoVG9TcGFjZU5EPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5iYXRjaFRvU3BhY2VORCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnNwYWNlVG9CYXRjaE5EPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zcGFjZVRvQmF0Y2hORCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnRvcGs9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9MSksdm9pZCAwPT09ZSYmKGU9ITApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy50b3BrKHRoaXMsdCxlKX0sdC5wcm90b3R5cGUuc3RyaWRlZFNsaWNlPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8scyl7cmV0dXJuIHZvaWQgMD09PXImJihyPTApLHZvaWQgMD09PWkmJihpPTApLHZvaWQgMD09PWEmJihhPTApLHZvaWQgMD09PW8mJihvPTApLHZvaWQgMD09PXMmJihzPTApLHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zdHJpZGVkU2xpY2UodGhpcyx0LGUsbixyLGksYSxvLHMpfSx0LnByb3RvdHlwZS5kZXB0aFRvU3BhY2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50aHJvd0lmRGlzcG9zZWQoKSxjLmRlcHRoVG9TcGFjZSh0aGlzLHQsZSl9LHQucHJvdG90eXBlLmZmdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3BlY3RyYWwuZmZ0KHRoaXMpfSx0LnByb3RvdHlwZS5pZmZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zcGVjdHJhbC5pZmZ0KHRoaXMpfSx0LnByb3RvdHlwZS5yZmZ0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhyb3dJZkRpc3Bvc2VkKCksYy5zcGVjdHJhbC5yZmZ0KHRoaXMpfSx0LnByb3RvdHlwZS5pcmZmdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRocm93SWZEaXNwb3NlZCgpLGMuc3BlY3RyYWwuaXJmZnQodGhpcyl9LHR9KCk7ZS5UZW5zb3I9ZixPYmplY3QuZGVmaW5lUHJvcGVydHkoZixTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiEhdCYmbnVsbCE9dC5kYXRhSWQmJm51bGwhPXQuc2hhcGUmJm51bGwhPXQuZHR5cGV9fSk7dmFyIGg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4scil7dm9pZCAwPT09biYmKG49ITApO3ZhciBpPXQuY2FsbCh0aGlzLGUuc2hhcGUsZS5kdHlwZSxudWxsLGUuZGF0YUlkKXx8dGhpcztpLnRyYWluYWJsZT1uLGkubmFtZT1yLG51bGw9PWkubmFtZSYmKGkubmFtZT11KCkubmV4dFZhcmlhYmxlSWQoKS50b1N0cmluZygpKTt0cnl7dSgpLnJlZ2lzdGVyVmFyaWFibGUoaSl9Y2F0Y2godCl7dGhyb3cgdSgpLmRpc3Bvc2VUZW5zb3IoaSksdH1yZXR1cm4gaX1yZXR1cm4gcihlLHQpLGUudmFyaWFibGU9ZnVuY3Rpb24odCxuLHIsaSl7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSxudWxsIT1pJiZpIT09dC5kdHlwZSYmKHQ9dC5hc1R5cGUoaSkpLG5ldyBlKHQsbixyKX0sZS5wcm90b3R5cGUuYXNzaWduPWZ1bmN0aW9uKHQpe2lmKHQuZHR5cGUhPT10aGlzLmR0eXBlKXRocm93IG5ldyBFcnJvcihcImR0eXBlIG9mIHRoZSBuZXcgdmFsdWUgKFwiK3QuZHR5cGUrXCIpIGFuZCBwcmV2aW91cyB2YWx1ZSAoXCIrdGhpcy5kdHlwZStcIikgbXVzdCBtYXRjaFwiKTtpZighXy5hcnJheXNFcXVhbCh0LnNoYXBlLHRoaXMuc2hhcGUpKXRocm93IG5ldyBFcnJvcihcInNoYXBlIG9mIHRoZSBuZXcgdmFsdWUgKFwiK3Quc2hhcGUrXCIpIGFuZCBwcmV2aW91cyB2YWx1ZSAoXCIrdGhpcy5zaGFwZStcIikgbXVzdCBtYXRjaFwiKTt1KCkuZGlzcG9zZVRlbnNvcih0aGlzKSx0aGlzLmRhdGFJZD10LmRhdGFJZCx1KCkucmVnaXN0ZXJUZW5zb3IodGhpcyl9LGV9KGYpO2UuVmFyaWFibGU9aCxPYmplY3QuZGVmaW5lUHJvcGVydHkoaCxTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgZiYmbnVsbCE9dC5hc3NpZ24mJnQuYXNzaWduIGluc3RhbmNlb2YgRnVuY3Rpb259fSk7dmFyIHA9aC52YXJpYWJsZTtlLnZhcmlhYmxlPXB9KTtmKEUpO0UuVGVuc29yQnVmZmVyLEUuc2V0VGVuc29yVHJhY2tlcixFLnNldE9wSGFuZGxlcixFLlRlbnNvcixFLlZhcmlhYmxlLEUudmFyaWFibGU7dmFyIFM9aChmdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxhO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGZ1bmN0aW9uKHQpe3QuUjA9XCJSMFwiLHQuUjE9XCJSMVwiLHQuUjI9XCJSMlwiLHQuUjM9XCJSM1wiLHQuUjQ9XCJSNFwiLHQuUjU9XCJSNVwiLHQuUjY9XCJSNlwifShlLlJhbmt8fChlLlJhbms9e30pKSxmdW5jdGlvbih0KXt0LmZsb2F0MzI9XCJmbG9hdDMyXCIsdC5pbnQzMj1cImludDMyXCIsdC5ib29sPVwiaW50MzJcIix0LmNvbXBsZXg2ND1cImNvbXBsZXg2NFwifShufHwobj17fSkpLGZ1bmN0aW9uKHQpe3QuZmxvYXQzMj1cImZsb2F0MzJcIix0LmludDMyPVwiaW50MzJcIix0LmJvb2w9XCJib29sXCIsdC5jb21wbGV4NjQ9XCJjb21wbGV4NjRcIn0ocnx8KHI9e30pKSxmdW5jdGlvbih0KXt0LmZsb2F0MzI9XCJmbG9hdDMyXCIsdC5pbnQzMj1cImZsb2F0MzJcIix0LmJvb2w9XCJmbG9hdDMyXCIsdC5jb21wbGV4NjQ9XCJjb21wbGV4NjRcIn0oaXx8KGk9e30pKSxmdW5jdGlvbih0KXt0LmZsb2F0MzI9XCJjb21wbGV4NjRcIix0LmludDMyPVwiY29tcGxleDY0XCIsdC5ib29sPVwiY29tcGxleDY0XCIsdC5jb21wbGV4NjQ9XCJjb21wbGV4NjRcIn0oYXx8KGE9e30pKTt2YXIgbz17ZmxvYXQzMjppLGludDMyOm4sYm9vbDpyLGNvbXBsZXg2NDphfTtmdW5jdGlvbiBzKHQsZSl7aWYoXCJzdHJpbmdcIj09PXR8fFwic3RyaW5nXCI9PT1lKXtpZihcInN0cmluZ1wiPT09dCYmXCJzdHJpbmdcIj09PWUpcmV0dXJuXCJzdHJpbmdcIjt0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IHVwY2FzdCBcIit0K1wiIHdpdGggXCIrZSl9cmV0dXJuIG9bdF1bZV19ZS51cGNhc3RUeXBlPXMsZS5zdW1PdXRUeXBlPWZ1bmN0aW9uKHQpe3JldHVybiBzKHQsXCJpbnQzMlwiKX19KTtmKFMpO1MuUmFuayxTLnVwY2FzdFR5cGUsUy5zdW1PdXRUeXBlO3ZhciBOPWgoZnVuY3Rpb24odCxlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxlLm1ha2VUeXBlc01hdGNoPWZ1bmN0aW9uKHQsZSl7aWYodC5kdHlwZT09PWUuZHR5cGUpcmV0dXJuW3QsZV07dmFyIG49Uy51cGNhc3RUeXBlKHQuZHR5cGUsZS5kdHlwZSk7cmV0dXJuW3QuY2FzdChuKSxlLmNhc3QobildfSxlLmFzc2VydFR5cGVzTWF0Y2g9ZnVuY3Rpb24odCxlKXtfLmFzc2VydCh0LmR0eXBlPT09ZS5kdHlwZSxcIlRoZSBkdHlwZXMgb2YgdGhlIGZpcnN0KFwiK3QuZHR5cGUrXCIpIGFuZCBzZWNvbmQoXCIrZS5kdHlwZStcIikgaW5wdXQgbXVzdCBtYXRjaFwiKX0sZS5pc1RlbnNvckluTGlzdD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKWlmKGVbbl0uaWQ9PT10LmlkKXJldHVybiEwO3JldHVybiExfSxlLmZsYXR0ZW5OYW1lQXJyYXlNYXA9ZnVuY3Rpb24odCxlKXt2YXIgbj1bXTtpZih0IGluc3RhbmNlb2YgRS5UZW5zb3Ipbi5wdXNoKHQpO2Vsc2UgZm9yKHZhciByPXQsaT0wO2k8ZS5sZW5ndGg7aSsrKW4ucHVzaChyW2VbaV1dKTtyZXR1cm4gbn0sZS51bmZsYXR0ZW5Ub05hbWVBcnJheU1hcD1mdW5jdGlvbih0LGUpe2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHVuZmxhdHRlbiBUZW5zb3JbXSwga2V5cyBhbmQgYXJyYXlzIGFyZSBub3Qgb2Ygc2FtZSBsZW5ndGguXCIpO2Zvcih2YXIgbj17fSxyPTA7cjx0Lmxlbmd0aDtyKyspblt0W3JdXT1lW3JdO3JldHVybiBufSxlLmdldFRlbnNvcnNJbkNvbnRhaW5lcj1mdW5jdGlvbih0KXt2YXIgZT1bXTtyZXR1cm4gZnVuY3Rpb24gdChlLG4scil7aWYobnVsbCE9ZSlpZihlIGluc3RhbmNlb2YgRS5UZW5zb3Ipbi5wdXNoKGUpO2Vsc2UgaWYoaT1lLEFycmF5LmlzQXJyYXkoaSl8fFwib2JqZWN0XCI9PXR5cGVvZiBpKXt2YXIgaSxhPWU7Zm9yKHZhciBvIGluIGEpe3ZhciBzPWFbb107ci5oYXMocyl8fChyLmFkZChzKSx0KHMsbixyKSl9fX0odCxlLG5ldyBTZXQpLGV9fSk7ZihOKTtOLm1ha2VUeXBlc01hdGNoLE4uYXNzZXJ0VHlwZXNNYXRjaDt2YXIgST1OLmlzVGVuc29ySW5MaXN0LE89KE4uZmxhdHRlbk5hbWVBcnJheU1hcCxOLnVuZmxhdHRlblRvTmFtZUFycmF5TWFwLE4uZ2V0VGVuc29yc0luQ29udGFpbmVyKTtmdW5jdGlvbiBrKHQsZSxuLHIpe2lmKHZvaWQgMD09PW4mJihuPW5ldyBNYXApLHZvaWQgMD09PXImJihyPW5ldyBTZXQpLG51bGw9PXQpcmV0dXJuIG51bGw7aWYoci5oYXModCkpdGhyb3cgbmV3IEVycm9yKFwiQ2lyY3VsYXIgcmVmZXJlbmNlcyBhcmUgbm90IHN1cHBvcnRlZC5cIik7aWYobi5oYXModCkpcmV0dXJuIG4uZ2V0KHQpO3ZhciBpPWUodCk7aWYoaS5yZWN1cnNlJiZudWxsIT09aS52YWx1ZSl0aHJvdyBuZXcgRXJyb3IoXCJBIGRlZXAgbWFwIGZ1bmN0aW9uIG1heSBub3QgcmV0dXJuIGJvdGggYSB2YWx1ZSBhbmQgcmVjdXJzZT10cnVlLlwiKTtpZihpLnJlY3Vyc2Upe2lmKFQodCkpe3ZhciBhPUFycmF5LmlzQXJyYXkodCk/W106e307Zm9yKHZhciBvIGluIHIuYWRkKHQpLHQpe3ZhciBzPWsodFtvXSxlLG4scik7YVtvXT1zfXJldHVybiByLmRlbGV0ZSh0KSxhfXRocm93IG5ldyBFcnJvcihcIkNhbid0IHJlY3Vyc2UgaW50byBub24taXRlcmFibGUgdHlwZTogXCIrdCl9cmV0dXJuIG4uc2V0KHQsaS52YWx1ZSksaS52YWx1ZX1mdW5jdGlvbiBBKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPUMpLGZ1bmN0aW9uIHQoZSxuLHIpe3ZvaWQgMD09PXImJihyPW5ldyBTZXQpO3ZhciBpPWVbMF07aWYoci5oYXMoaSkpdGhyb3cgbmV3IEVycm9yKFwiQ2lyY3VsYXIgcmVmZXJlbmNlcyBhcmUgbm90IHN1cHBvcnRlZC5cIik7dmFyIGE9bihlKTtpZihhLnJlY3Vyc2UmJm51bGwhPT1hLnZhbHVlKXRocm93IG5ldyBFcnJvcihcIkEgZGVlcCB6aXAgZnVuY3Rpb24gbWF5IG5vdCByZXR1cm4gYm90aCBhIHZhbHVlIGFuZCByZWN1cnNlPXRydWUuXCIpO2lmKGEucmVjdXJzZSl7aWYoVChpKSl7dmFyIG89QXJyYXkuaXNBcnJheShpKT9bXTp7fTtyLmFkZChpKTt2YXIgcz1mdW5jdGlvbihpKXt2YXIgYT10KGUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0W2ldfSksbixyKTtvW2ldPWF9O2Zvcih2YXIgdSBpbiBpKXModSk7cmV0dXJuIHIuZGVsZXRlKGkpLG99dGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgcmVjdXJzZSBpbnRvIG5vbi1pdGVyYWJsZSB0eXBlOiBcIitpKX1yZXR1cm4gYS52YWx1ZX0odCxlKX1mdW5jdGlvbiBDKHQpe3JldHVybiBudWxsPT09dD9udWxsOlQodFswXSk/e3ZhbHVlOm51bGwscmVjdXJzZTohMH06e3ZhbHVlOnQscmVjdXJzZTohMX19ZnVuY3Rpb24gUCh0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHIsaSxhLG8scztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHUpe3N3aXRjaCh1LmxhYmVsKXtjYXNlIDA6bj1uZXcgTWFwLGsodCxlLG4pLHI9MCxpPUFycmF5LmZyb20obi5rZXlzKCkpLHUubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHI8aS5sZW5ndGg/KGE9aVtyXSwobz1uLmdldChhKSlpbnN0YW5jZW9mIFByb21pc2U/WzQsb106WzMsM10pOlszLDRdO2Nhc2UgMjpzPXUuc2VudCgpLG4uc2V0KGEscyksdS5sYWJlbD0zO2Nhc2UgMzpyZXR1cm4gcisrLFszLDFdO2Nhc2UgNDpyZXR1cm5bMixrKHQsZSxuKV19fSl9KX1mdW5jdGlvbiBUKHQpe3JldHVybiBudWxsIT10JiYoQXJyYXkuaXNBcnJheSh0KXx8XCJvYmplY3RcIj09dHlwZW9mIHQmJiEodCBpbnN0YW5jZW9mIGEubykpfXZhciBSPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtpZih0aGlzLmNhcGFjaXR5PXQsdGhpcy5iZWdpbj0wLHRoaXMuZW5kPTAsdDwxKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQ2FuJ3QgY3JlYXRlIHJpbmcgYnVmZmVyIG9mIGNhcGFjaXR5IDwgMS5cIik7dGhpcy5kYXRhPW5ldyBBcnJheSh0KSx0aGlzLmRvdWJsZWRDYXBhY2l0eT0yKnR9cmV0dXJuIHQucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24odCl7Zm9yKDt0PDA7KXQrPXRoaXMuZG91YmxlZENhcGFjaXR5O3JldHVybiB0JXRoaXMuZG91YmxlZENhcGFjaXR5fSx0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7aWYodDwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwiQ2FuJ3QgZ2V0IGl0ZW0gYXQgYSBuZWdhdGl2ZSBpbmRleC5cIik7cmV0dXJuIHRoaXMuZGF0YVt0JXRoaXMuY2FwYWNpdHldfSx0LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlKXtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJDYW4ndCBzZXQgaXRlbSBhdCBhIG5lZ2F0aXZlIGluZGV4LlwiKTt0aGlzLmRhdGFbdCV0aGlzLmNhcGFjaXR5XT1lfSx0LnByb3RvdHlwZS5sZW5ndGg9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVuZC10aGlzLmJlZ2luO3JldHVybiB0PDAmJih0PXRoaXMuZG91YmxlZENhcGFjaXR5K3QpLHR9LHQucHJvdG90eXBlLmlzRnVsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aCgpPT09dGhpcy5jYXBhY2l0eX0sdC5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy5sZW5ndGgoKX0sdC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0KXtpZih0aGlzLmlzRnVsbCgpKXRocm93IG5ldyBSYW5nZUVycm9yKFwiUmluZyBidWZmZXIgaXMgZnVsbC5cIik7dGhpcy5zZXQodGhpcy5lbmQsdCksdGhpcy5lbmQ9dGhpcy53cmFwKHRoaXMuZW5kKzEpfSx0LnByb3RvdHlwZS5wdXNoQWxsPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dDtlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTt0aGlzLnB1c2gocil9fSx0LnByb3RvdHlwZS5wb3A9ZnVuY3Rpb24oKXtpZih0aGlzLmlzRW1wdHkoKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlJpbmcgYnVmZmVyIGlzIGVtcHR5LlwiKTt0aGlzLmVuZD10aGlzLndyYXAodGhpcy5lbmQtMSk7dmFyIHQ9dGhpcy5nZXQodGhpcy5lbmQpO3JldHVybiB0aGlzLnNldCh0aGlzLmVuZCx2b2lkIDApLHR9LHQucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7aWYodGhpcy5pc0Z1bGwoKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlJpbmcgYnVmZmVyIGlzIGZ1bGwuXCIpO3RoaXMuYmVnaW49dGhpcy53cmFwKHRoaXMuYmVnaW4tMSksdGhpcy5zZXQodGhpcy5iZWdpbix0KX0sdC5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24oKXtpZih0aGlzLmlzRW1wdHkoKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlJpbmcgYnVmZmVyIGlzIGVtcHR5LlwiKTt2YXIgdD10aGlzLmdldCh0aGlzLmJlZ2luKTtyZXR1cm4gdGhpcy5zZXQodGhpcy5iZWdpbix2b2lkIDApLHRoaXMuYmVnaW49dGhpcy53cmFwKHRoaXMuYmVnaW4rMSksdH0sdC5wcm90b3R5cGUuc2h1ZmZsZUV4Y2lzZT1mdW5jdGlvbih0KXtpZih0aGlzLmlzRW1wdHkoKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlJpbmcgYnVmZmVyIGlzIGVtcHR5LlwiKTt2YXIgZT10aGlzLndyYXAodGhpcy5iZWdpbit0KSxuPXRoaXMuZ2V0KGUpO3JldHVybiB0aGlzLnNldChlLHRoaXMucG9wKCkpLG59LHR9KCksRD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIHQuY2FsbCh0aGlzLGUuSU5JVElBTF9DQVBBQ0lUWSl8fHRoaXN9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5pc0Z1bGw9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihlKXt0LnByb3RvdHlwZS5pc0Z1bGwuY2FsbCh0aGlzKSYmdGhpcy5leHBhbmQoKSx0LnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcyxlKX0sZS5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbihlKXt0LnByb3RvdHlwZS5pc0Z1bGwuY2FsbCh0aGlzKSYmdGhpcy5leHBhbmQoKSx0LnByb3RvdHlwZS51bnNoaWZ0LmNhbGwodGhpcyxlKX0sZS5wcm90b3R5cGUuZXhwYW5kPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTIqdGhpcy5jYXBhY2l0eSxlPW5ldyBBcnJheSh0KSxuPXRoaXMubGVuZ3RoKCkscj0wO3I8bjtyKyspZVtyXT10aGlzLmdldCh0aGlzLndyYXAodGhpcy5iZWdpbityKSk7dGhpcy5kYXRhPWUsdGhpcy5jYXBhY2l0eT10LHRoaXMuZG91YmxlZENhcGFjaXR5PTIqdGhpcy5jYXBhY2l0eSx0aGlzLmJlZ2luPTAsdGhpcy5lbmQ9bn0sZS5JTklUSUFMX0NBUEFDSVRZPTMyLGV9KFIpO2Z1bmN0aW9uIE0odCl7cmV0dXJuIG5ldyBWKHQpfWZ1bmN0aW9uIGoodCl7cmV0dXJuIG5ldyBXKHQpfWZ1bmN0aW9uIEIodCxlKXtyZXR1cm4gbmV3IHR0KHQsZSl9ZnVuY3Rpb24gTCh0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT16LkZBSUwpLG5ldyBldCh0LGUpfXZhciB6LEYsVT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQucHJvdG90eXBlLmNvbGxlY3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9MWUzKSx2b2lkIDA9PT1lJiYoZT0xMDApLHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4scixpLGE7cmV0dXJuIGModGhpcyxmdW5jdGlvbihvKXtzd2l0Y2goby5sYWJlbCl7Y2FzZSAwOnJldHVybiBuPWU+MD90aGlzLnByZWZldGNoKGUpOnRoaXMscj1bXSxpPTAsWzQsbi5uZXh0KCldO2Nhc2UgMTphPW8uc2VudCgpLG8ubGFiZWw9MjtjYXNlIDI6cmV0dXJuIGEuZG9uZT9bMyw0XTooci5wdXNoKGEudmFsdWUpLCsraT49dD9bMixyXTpbNCxuLm5leHQoKV0pO2Nhc2UgMzpyZXR1cm4gYT1vLnNlbnQoKSxbMywyXTtjYXNlIDQ6cmV0dXJuWzIscl19fSl9KX0sdC5wcm90b3R5cGUucmVzb2x2ZUZ1bGx5PWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMubmV4dCgpXTtjYXNlIDE6dD1lLnNlbnQoKSxlLmxhYmVsPTI7Y2FzZSAyOnJldHVybiB0LmRvbmU/WzMsNF06WzQsdGhpcy5uZXh0KCldO2Nhc2UgMzpyZXR1cm4gdD1lLnNlbnQoKSxbMywyXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9LHQucHJvdG90eXBlLnJlc29sdmVXaGlsZT1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBjKHRoaXMsZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLm5leHQoKV07Y2FzZSAxOmU9ci5zZW50KCksbj10KGUudmFsdWUpLHIubGFiZWw9MjtjYXNlIDI6cmV0dXJuIGUuZG9uZXx8IW4/WzMsNF06WzQsdGhpcy5uZXh0KCldO2Nhc2UgMzpyZXR1cm4gZT1yLnNlbnQoKSxuPXQoZS52YWx1ZSksWzMsMl07Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5oYW5kbGVFcnJvcnM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBZKHRoaXMsdCl9LHQucHJvdG90eXBlLmZpbHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEcodGhpcyx0KX0sdC5wcm90b3R5cGUubWFwPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgWCh0aGlzLHQpfSx0LnByb3RvdHlwZS5tYXBBc3luYz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEoodGhpcyx0KX0sdC5wcm90b3R5cGUuc2VyaWFsTWFwQXN5bmM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBKKHRoaXMsdCkuc2VyaWFsKCl9LHQucHJvdG90eXBlLmZsYXRtYXA9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBRKHRoaXMsdCl9LHQucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24odCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm5bMix0aGlzLm1hcCh0KS5yZXNvbHZlRnVsbHkoKV19KX0pfSx0LnByb3RvdHlwZS5zZXJpYWxGb3JFYWNoPWZ1bmN0aW9uKHQpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuWzIsdGhpcy5zZXJpYWxNYXBBc3luYyh0KS5yZXNvbHZlV2hpbGUoZnVuY3Rpb24odCl7cmV0dXJuITA9PT10fSldfSl9KX0sdC5wcm90b3R5cGUucm93TWFqb3JCYXRjaD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMCksbmV3IEsodGhpcyx0LGUpfSx0LnByb3RvdHlwZS5jb2x1bW5NYWpvckJhdGNoPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITApLHZvaWQgMD09PW4mJihuPUMpLHRoaXMucm93TWFqb3JCYXRjaCh0LGUpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gQSh0LG4pfSl9LHQucHJvdG90eXBlLmNvbmNhdGVuYXRlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB0dChNKFt0aGlzLHRdKSxlKX0sdC5wcm90b3R5cGUudGFrZT1mdW5jdGlvbih0KXtyZXR1cm4gdDwwfHxudWxsPT10P3RoaXM6bmV3IEgodGhpcyx0KX0sdC5wcm90b3R5cGUuc2tpcD1mdW5jdGlvbih0KXtyZXR1cm4gdDwwfHxudWxsPT10P3RoaXM6bmV3ICQodGhpcyx0KX0sdC5wcm90b3R5cGUucHJlZmV0Y2g9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBudCh0aGlzLHQpfSx0LnByb3RvdHlwZS5zaHVmZmxlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBydCh0aGlzLHQsZSl9LHQucHJvdG90eXBlLnNlcmlhbD1mdW5jdGlvbigpe3JldHVybiBuZXcgcSh0aGlzKX0sdH0oKSxWPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLml0ZW1zPWUsbi50cmF2PTAsbn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXtyZXR1cm5cIkFycmF5IG9mIFwiK3RoaXMuaXRlbXMubGVuZ3RoK1wiIGl0ZW1zXCJ9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlO3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuIHRoaXMudHJhdj49dGhpcy5pdGVtcy5sZW5ndGg/WzIse3ZhbHVlOm51bGwsZG9uZTohMH1dOih0PXRoaXMuaXRlbXNbdGhpcy50cmF2XSxlPXQgaW5zdGFuY2VvZiBhLm8/T2JqZWN0KGEuUikodCk6dCx0aGlzLnRyYXYrKyxbMix7dmFsdWU6ZSxkb25lOiExfV0pfSl9KX0sZX0oVSksVz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5uZXh0Rm49ZSxufXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVyblwiRnVuY3Rpb24gY2FsbFwifSxlLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbih0KXt0cnl7cmV0dXJuWzIsdGhpcy5uZXh0Rm4oKV19Y2F0Y2godCl7dGhyb3cgdC5tZXNzYWdlPVwiRXJyb3IgdGhyb3duIHdoaWxlIGl0ZXJhdGluZyB0aHJvdWdoIGEgZGF0YXNldDogXCIrdC5tZXNzYWdlLHR9cmV0dXJuWzJdfSl9KX0sZX0oVSkscT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi51cHN0cmVhbT1lLG4ubGFzdFJlYWQ9UHJvbWlzZS5yZXNvbHZlKHt2YWx1ZTpudWxsLGRvbmU6ITF9KSxufXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnVwc3RyZWFtLnN1bW1hcnkoKStcIiAtPiBTZXJpYWxcIn0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sYXN0UmVhZD10aGlzLmxhc3RSZWFkLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJpYWxOZXh0KCl9KSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnNlcmlhbE5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLHRoaXMudXBzdHJlYW0ubmV4dCgpXX0pfSl9LGV9KFUpLCQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZhciByPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gci51cHN0cmVhbT1lLHIubWF4Q291bnQ9bixyLmNvdW50PTAsci5sYXN0UmVhZD1Qcm9taXNlLnJlc29sdmUoe3ZhbHVlOm51bGwsZG9uZTohMX0pLHJ9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXBzdHJlYW0uc3VtbWFyeSgpK1wiIC0+IFNraXBcIn0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sYXN0UmVhZD10aGlzLmxhc3RSZWFkLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJpYWxOZXh0KCl9KSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnNlcmlhbE5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuY291bnQrKzx0aGlzLm1heENvdW50P1s0LHRoaXMudXBzdHJlYW0ubmV4dCgpXTpbMywyXTtjYXNlIDE6cmV0dXJuKHQ9ZS5zZW50KCkpLmRvbmU/WzIsdF06KE9iamVjdChhLmpiKSh0LnZhbHVlKSxbMywwXSk7Y2FzZSAyOnJldHVyblsyLHRoaXMudXBzdHJlYW0ubmV4dCgpXX19KX0pfSxlfShVKSxIPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIudXBzdHJlYW09ZSxyLm1heENvdW50PW4sci5jb3VudD0wLHJ9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXBzdHJlYW0uc3VtbWFyeSgpK1wiIC0+IFRha2VcIn0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY291bnQrKz49dGhpcy5tYXhDb3VudD9bMix7dmFsdWU6bnVsbCxkb25lOiEwfV06WzIsdGhpcy51cHN0cmVhbS5uZXh0KCldfSl9KX0sZX0oVSksSz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbixyKXt2b2lkIDA9PT1yJiYocj0hMCk7dmFyIGk9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBpLnVwc3RyZWFtPWUsaS5iYXRjaFNpemU9bixpLmVuYWJsZVNtYWxsTGFzdEJhdGNoPXIsaS5sYXN0UmVhZD1Qcm9taXNlLnJlc29sdmUoe3ZhbHVlOm51bGwsZG9uZTohMX0pLGl9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXBzdHJlYW0uc3VtbWFyeSgpK1wiIC0+IFJvd01ham9yQmF0Y2hcIn0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sYXN0UmVhZD10aGlzLmxhc3RSZWFkLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJpYWxOZXh0KCl9KSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnNlcmlhbE5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlO3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDp0PVtdLG4ubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQubGVuZ3RoPHRoaXMuYmF0Y2hTaXplP1s0LHRoaXMudXBzdHJlYW0ubmV4dCgpXTpbMywzXTtjYXNlIDI6cmV0dXJuKGU9bi5zZW50KCkpLmRvbmU/dGhpcy5lbmFibGVTbWFsbExhc3RCYXRjaCYmdC5sZW5ndGg+MD9bMix7dmFsdWU6dCxkb25lOiExfV06WzIse3ZhbHVlOm51bGwsZG9uZTohMH1dOih0LnB1c2goZS52YWx1ZSksWzMsMV0pO2Nhc2UgMzpyZXR1cm5bMix7dmFsdWU6dCxkb25lOiExfV19fSl9KX0sZX0oVSksRz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLnVwc3RyZWFtPWUsci5wcmVkaWNhdGU9bixyLmxhc3RSZWFkPVByb21pc2UucmVzb2x2ZSh7dmFsdWU6bnVsbCxkb25lOiExfSkscn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51cHN0cmVhbS5zdW1tYXJ5KCkrXCIgLT4gRmlsdGVyXCJ9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubGFzdFJlYWQ9dGhpcy5sYXN0UmVhZC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2VyaWFsTmV4dCgpfSksWzIsdGhpcy5sYXN0UmVhZF19KX0pfSxlLnByb3RvdHlwZS5zZXJpYWxOZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMudXBzdHJlYW0ubmV4dCgpXTtjYXNlIDE6cmV0dXJuKHQ9ZS5zZW50KCkpLmRvbmV8fHRoaXMucHJlZGljYXRlKHQudmFsdWUpP1syLHRdOihPYmplY3QoYS5qYikodC52YWx1ZSksWzMsMF0pO2Nhc2UgMjpyZXR1cm5bMl19fSl9KX0sZX0oVSksWD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLnVwc3RyZWFtPWUsci50cmFuc2Zvcm09bixyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnVwc3RyZWFtLnN1bW1hcnkoKStcIiAtPiBNYXBcIn0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGUsbixyLGksYSxvO3JldHVybiBjKHRoaXMsZnVuY3Rpb24ocyl7c3dpdGNoKHMubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLnVwc3RyZWFtLm5leHQoKV07Y2FzZSAxOmlmKCh0PXMuc2VudCgpKS5kb25lKXJldHVyblsyLHt2YWx1ZTpudWxsLGRvbmU6ITB9XTtmb3IoZT1PKHQudmFsdWUpLG49dGhpcy50cmFuc2Zvcm0odC52YWx1ZSkscj1PKG4pLGk9MCxhPWU7aTxhLmxlbmd0aDtpKyspbz1hW2ldLEkobyxyKXx8by5kaXNwb3NlKCk7cmV0dXJuWzIse3ZhbHVlOm4sZG9uZTohMX1dfX0pfSl9LGV9KFUpLFk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZhciByPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gci51cHN0cmVhbT1lLHIuaGFuZGxlcj1uLHIuY291bnQ9MCxyLmxhc3RSZWFkPVByb21pc2UucmVzb2x2ZSh7dmFsdWU6bnVsbCxkb25lOiExfSkscn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51cHN0cmVhbS5zdW1tYXJ5KCkrXCIgLT4gaGFuZGxlRXJyb3JzXCJ9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubGFzdFJlYWQ9dGhpcy5sYXN0UmVhZC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2VyaWFsTmV4dCgpfSksWzIsdGhpcy5sYXN0UmVhZF19KX0pfSxlLnByb3RvdHlwZS5zZXJpYWxOZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOmUubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGUudHJ5cy5wdXNoKFsxLDMsLDRdKSxbNCx0aGlzLnVwc3RyZWFtLm5leHQoKV07Y2FzZSAyOnJldHVyblsyLGUuc2VudCgpXTtjYXNlIDM6cmV0dXJuIHQ9ZS5zZW50KCksdGhpcy5oYW5kbGVyKHQpP1szLDRdOlsyLHt2YWx1ZTpudWxsLGRvbmU6ITB9XTtjYXNlIDQ6cmV0dXJuWzMsMF07Y2FzZSA1OnJldHVyblsyXX19KX0pfSxlfShVKSxKPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIudXBzdHJlYW09ZSxyLnRyYW5zZm9ybT1uLHJ9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXBzdHJlYW0uc3VtbWFyeSgpK1wiIC0+IEFzeW5jTWFwXCJ9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpLGEsbztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHMpe3N3aXRjaChzLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy51cHN0cmVhbS5uZXh0KCldO2Nhc2UgMTpyZXR1cm4odD1zLnNlbnQoKSkuZG9uZT9bMix7dmFsdWU6bnVsbCxkb25lOiEwfV06KGU9Tyh0LnZhbHVlKSxbNCx0aGlzLnRyYW5zZm9ybSh0LnZhbHVlKV0pO2Nhc2UgMjpmb3Iobj1zLnNlbnQoKSxyPU8obiksaT0wLGE9ZTtpPGEubGVuZ3RoO2krKylvPWFbaV0sSShvLHIpfHxvLmRpc3Bvc2UoKTtyZXR1cm5bMix7dmFsdWU6bixkb25lOiExfV19fSl9KX0sZX0oVSksWj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIGU9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBlLm91dHB1dFF1ZXVlPW5ldyBELGUubGFzdFJlYWQ9UHJvbWlzZS5yZXNvbHZlKHt2YWx1ZTpudWxsLGRvbmU6ITF9KSxlfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sYXN0UmVhZD10aGlzLmxhc3RSZWFkLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJpYWxOZXh0KCl9KSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnNlcmlhbE5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIDAhPT10aGlzLm91dHB1dFF1ZXVlLmxlbmd0aCgpP1szLDJdOls0LHRoaXMucHVtcCgpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpP1szLDBdOlsyLHt2YWx1ZTpudWxsLGRvbmU6ITB9XTtjYXNlIDI6cmV0dXJuWzIse3ZhbHVlOnRoaXMub3V0cHV0UXVldWUuc2hpZnQoKSxkb25lOiExfV19fSl9KX0sZX0oVSksUT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLnVwc3RyZWFtPWUsci50cmFuc2Zvcm09bixyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnVwc3RyZWFtLnN1bW1hcnkoKStcIiAtPiBGbGF0bWFwXCJ9LGUucHJvdG90eXBlLnB1bXA9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpLGEsbztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHMpe3N3aXRjaChzLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy51cHN0cmVhbS5uZXh0KCldO2Nhc2UgMTppZigodD1zLnNlbnQoKSkuZG9uZSlyZXR1cm5bMiwhMV07Zm9yKGU9Tyh0LnZhbHVlKSxuPXRoaXMudHJhbnNmb3JtKHQudmFsdWUpLHI9TyhuKSx0aGlzLm91dHB1dFF1ZXVlLnB1c2hBbGwobiksaT0wLGE9ZTtpPGEubGVuZ3RoO2krKylvPWFbaV0sSShvLHIpfHxvLmRpc3Bvc2UoKTtyZXR1cm5bMiwhMF19fSl9KX0sZX0oWiksdHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZhciByPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gci5iYXNlRXJyb3JIYW5kbGVyPW4sci5sYXN0UmVhZD1udWxsLHIuaXRlcmF0b3I9bnVsbCxyLm1vcmVJdGVyYXRvcnM9ZSxyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVyblwiVE9ETzogZmlsbCBpbiB1cHN0cmVhbSBvZiBjaGFpbmVkIHN1bW1hcmllcyAtPiBDaGFpbmVkXCJ9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxhc3RSZWFkPXRoaXMucmVhZEZyb21DaGFpbih0aGlzLmxhc3RSZWFkKSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnJlYWRGcm9tQ2hhaW49ZnVuY3Rpb24odCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdF07Y2FzZSAxOnJldHVybiByLnNlbnQoKSxudWxsIT10aGlzLml0ZXJhdG9yP1szLDNdOls0LHRoaXMubW9yZUl0ZXJhdG9ycy5uZXh0KCldO2Nhc2UgMjppZigoZT1yLnNlbnQoKSkuZG9uZSlyZXR1cm5bMix7dmFsdWU6bnVsbCxkb25lOiEwfV07dGhpcy5pdGVyYXRvcj1lLnZhbHVlLG51bGwhPXRoaXMuYmFzZUVycm9ySGFuZGxlciYmKHRoaXMuaXRlcmF0b3I9dGhpcy5pdGVyYXRvci5oYW5kbGVFcnJvcnModGhpcy5iYXNlRXJyb3JIYW5kbGVyKSksci5sYWJlbD0zO2Nhc2UgMzpyZXR1cm5bNCx0aGlzLml0ZXJhdG9yLm5leHQoKV07Y2FzZSA0OnJldHVybihuPXIuc2VudCgpKS5kb25lPyh0aGlzLml0ZXJhdG9yPW51bGwsWzIsdGhpcy5yZWFkRnJvbUNoYWluKHQpXSk6WzIsbl19fSl9KX0sZX0oVSk7KEY9enx8KHo9e30pKVtGLkZBSUw9MF09XCJGQUlMXCIsRltGLlNIT1JURVNUPTFdPVwiU0hPUlRFU1RcIixGW0YuTE9OR0VTVD0yXT1cIkxPTkdFU1RcIjt2YXIgZXQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZvaWQgMD09PW4mJihuPXouRkFJTCk7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLml0ZXJhdG9ycz1lLHIubWlzbWF0Y2hNb2RlPW4sci5jb3VudD0wLHIuY3VycmVudFByb21pc2U9bnVsbCxyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVyblwie1RPRE86IGZpbGwgaW4gdXBzdHJlYW0gb2YgemlwIHN1bW1hcmllc30gLT4gWmlwXCJ9LGUucHJvdG90eXBlLm5leHRTdGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe3JldHVybiB0IGluc3RhbmNlb2YgVT97dmFsdWU6dC5uZXh0KCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbisrLHQuZG9uZSYmcisrLHQudmFsdWV9KSxyZWN1cnNlOiExfTp7dmFsdWU6bnVsbCxyZWN1cnNlOiEwfX12YXIgbixyLGk7cmV0dXJuIGModGhpcyxmdW5jdGlvbihhKXtzd2l0Y2goYS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRdO2Nhc2UgMTpyZXR1cm4gYS5zZW50KCksbj0wLHI9MCxbNCxQKHRoaXMuaXRlcmF0b3JzLGUpXTtjYXNlIDI6aWYoaT1hLnNlbnQoKSxuPT09cilyZXR1cm5bMix7dmFsdWU6bnVsbCxkb25lOiEwfV07aWYocj4wKXN3aXRjaCh0aGlzLm1pc21hdGNoTW9kZSl7Y2FzZSB6LkZBSUw6dGhyb3cgbmV3IEVycm9yKFwiWmlwcGVkIHN0cmVhbXMgc2hvdWxkIGhhdmUgdGhlIHNhbWUgbGVuZ3RoLiBNaXNtYXRjaGVkIGF0IGVsZW1lbnQgXCIrdGhpcy5jb3VudCtcIi5cIik7Y2FzZSB6LlNIT1JURVNUOnJldHVyblsyLHt2YWx1ZTpudWxsLGRvbmU6ITB9XTtjYXNlIHouTE9OR0VTVDp9cmV0dXJuIHRoaXMuY291bnQrKyxbMix7dmFsdWU6aSxkb25lOiExfV19fSl9KX0sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy5jdXJyZW50UHJvbWlzZT10aGlzLm5leHRTdGF0ZSh0aGlzLmN1cnJlbnRQcm9taXNlKSxbNCx0aGlzLmN1cnJlbnRQcm9taXNlXTtjYXNlIDE6cmV0dXJuWzIsdC5zZW50KCldfX0pfSl9LGV9KFUpLG50PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIudXBzdHJlYW09ZSxyLmJ1ZmZlclNpemU9bixyLmJ1ZmZlcj1uZXcgUihuKSxyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnVwc3RyZWFtLnN1bW1hcnkoKStcIiAtPiBQcmVmZXRjaFwifSxlLnByb3RvdHlwZS5yZWZpbGw9ZnVuY3Rpb24oKXtmb3IoOyF0aGlzLmJ1ZmZlci5pc0Z1bGwoKTspe3ZhciB0PXRoaXMudXBzdHJlYW0ubmV4dCgpO3RoaXMuYnVmZmVyLnB1c2godCl9fSxlLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVmaWxsKCksdGhpcy5idWZmZXIuc2hpZnQoKX0sZX0oVSkscnQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4scil7dmFyIGk9dC5jYWxsKHRoaXMsZSxuKXx8dGhpcztyZXR1cm4gaS51cHN0cmVhbT1lLGkud2luZG93U2l6ZT1uLGkudXBzdHJlYW1FeGhhdXN0ZWQ9ITEsaS5yYW5kb209dyhyfHxhLnFlLm5vdygpLnRvU3RyaW5nKCkpLGkubGFzdFJlYWQ9UHJvbWlzZS5yZXNvbHZlKHt2YWx1ZTpudWxsLGRvbmU6ITF9KSxpfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5sYXN0UmVhZD10aGlzLmxhc3RSZWFkLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJpYWxOZXh0KCl9KSxbMix0aGlzLmxhc3RSZWFkXX0pfSl9LGUucHJvdG90eXBlLnJhbmRvbUludD1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnJhbmRvbSgpKnQpfSxlLnByb3RvdHlwZS5jaG9vc2VJbmRleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJhbmRvbUludCh0aGlzLmJ1ZmZlci5sZW5ndGgoKSl9LGUucHJvdG90eXBlLnNlcmlhbE5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlO3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDp0aGlzLnVwc3RyZWFtRXhoYXVzdGVkfHx0aGlzLnJlZmlsbCgpLG4ubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHRoaXMuYnVmZmVyLmlzRW1wdHkoKT9bMywzXToodD10aGlzLmNob29zZUluZGV4KCksWzQsdGhpcy5idWZmZXIuc2h1ZmZsZUV4Y2lzZSh0KV0pO2Nhc2UgMjpyZXR1cm4oZT1uLnNlbnQoKSkuZG9uZT8odGhpcy51cHN0cmVhbUV4aGF1c3RlZD0hMCxbMywxXSk6KHRoaXMucmVmaWxsKCksWzIsZV0pO2Nhc2UgMzpyZXR1cm5bMix7dmFsdWU6bnVsbCxkb25lOiEwfV19fSl9KX0sZX0obnQpLGl0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gdC5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzO3JldHVybiBhdChmdW5jdGlvbigpe3JldHVybiB1KGUsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxuLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm5bMixlLnNlbnQoKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChhLmdlKShmdW5jdGlvbigpe3JldHVybiB0KGUpfSl9KV19fSl9KX0pfSx0LnByb3RvdHlwZS5tYXA9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXM7cmV0dXJuIGF0KGZ1bmN0aW9uKCl7cmV0dXJuIHUoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LG4uaXRlcmF0b3IoKV07Y2FzZSAxOnJldHVyblsyLGUuc2VudCgpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KGEuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIHQoZSl9KX0pXX19KX0pfSl9LHQucHJvdG90eXBlLm1hcEFzeW5jPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzO3JldHVybiBhdChmdW5jdGlvbigpe3JldHVybiB1KGUsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxuLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm5bMixlLnNlbnQoKS5tYXBBc3luYyh0KV19fSl9KX0pfSx0LnByb3RvdHlwZS5iYXRjaD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dm9pZCAwPT09ZSYmKGU9ITApO3ZhciByPXRoaXM7cmV0dXJuIGF0KGZ1bmN0aW9uKCl7cmV0dXJuIHUobix2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihuKXtzd2l0Y2gobi5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHIuaXRlcmF0b3IoKV07Y2FzZSAxOnJldHVyblsyLG4uc2VudCgpLmNvbHVtbk1ham9yQmF0Y2godCxlLHV0KV19fSl9KX0pfSx0LnByb3RvdHlwZS5jb25jYXRlbmF0ZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcztyZXR1cm4gYXQoZnVuY3Rpb24oKXtyZXR1cm4gdShlLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxyO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oaSl7c3dpdGNoKGkubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxuLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm4gcj0oZT1pLnNlbnQoKSkuY29uY2F0ZW5hdGUsWzQsdC5pdGVyYXRvcigpXTtjYXNlIDI6cmV0dXJuWzIsci5hcHBseShlLFtpLnNlbnQoKV0pXX19KX0pfSl9LHQucHJvdG90eXBlLnJlcGVhdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcztyZXR1cm4gYXQoZnVuY3Rpb24oKXtyZXR1cm4gdShlLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24ocil7cmV0dXJuWzIsQihqKGZ1bmN0aW9uKCl7cmV0dXJuIHUoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybiB0PXt9LFs0LG4uaXRlcmF0b3IoKV07Y2FzZSAxOnJldHVyblsyLCh0LnZhbHVlPWUuc2VudCgpLHQuZG9uZT0hMSx0KV19fSl9KX0pLnRha2UodCkpXX0pfSl9KX0sdC5wcm90b3R5cGUudGFrZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcztyZXR1cm4gYXQoZnVuY3Rpb24oKXtyZXR1cm4gdShlLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsbi5pdGVyYXRvcigpXTtjYXNlIDE6cmV0dXJuWzIsZS5zZW50KCkudGFrZSh0KV19fSl9KX0pfSx0LnByb3RvdHlwZS5za2lwPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzO3JldHVybiBhdChmdW5jdGlvbigpe3JldHVybiB1KGUsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxuLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm5bMixlLnNlbnQoKS5za2lwKHQpXX19KX0pfSl9LHQucHJvdG90eXBlLnNodWZmbGU9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXM7dm9pZCAwPT09biYmKG49ITApO3ZhciBpPXRoaXMsbz13KGV8fGEucWUubm93KCkudG9TdHJpbmcoKSk7cmV0dXJuIGF0KGZ1bmN0aW9uKCl7cmV0dXJuIHUocix2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGModGhpcyxmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPW8uaW50MzIoKSxuJiYoZSs9by5pbnQzMigpKSxbNCxpLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm5bMixyLnNlbnQoKS5zaHVmZmxlKHQsZS50b1N0cmluZygpKV19fSl9KX0pfSx0LnByb3RvdHlwZS5wcmVmZXRjaD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcztyZXR1cm4gYXQoZnVuY3Rpb24oKXtyZXR1cm4gdShlLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGUpe3N3aXRjaChlLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsbi5pdGVyYXRvcigpXTtjYXNlIDE6cmV0dXJuWzIsZS5zZW50KCkucHJlZmV0Y2godCldfX0pfSl9KX0sdC5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm5bMix0LnNlbnQoKS5jb2xsZWN0KCldfX0pfSl9LHQucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24odCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMuaXRlcmF0b3IoKV07Y2FzZSAxOnJldHVyblsyLGUuc2VudCgpLmZvckVhY2godCldfX0pfSl9LHR9KCk7ZnVuY3Rpb24gYXQodCl7cmV0dXJuIG5ldyhmdW5jdGlvbihlKXtmdW5jdGlvbiBuKCl7cmV0dXJuIG51bGwhPT1lJiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gcyhuLGUpLG4ucHJvdG90eXBlLml0ZXJhdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtyZXR1cm5bMix0KCldfSl9KX0sbn0oaXQpKX1mdW5jdGlvbiBvdCh0KXt2YXIgZT10aGlzO3JldHVybiBhdChmdW5jdGlvbigpe3JldHVybiB1KGUsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuWzIsTSh0KV19KX0pfSl9ZnVuY3Rpb24gc3QodCl7dmFyIGU9dGhpcztpZighVCh0KSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgYXJndW1lbnQgdG8gemlwKCkgbXVzdCBiZSBhbiBvYmplY3Qgb3IgYXJyYXkuXCIpO3JldHVybiBhdChmdW5jdGlvbigpe3JldHVybiB1KGUsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxQKHQsZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIGl0KXJldHVybnt2YWx1ZTp0Lml0ZXJhdG9yKCkscmVjdXJzZTohMX07aWYoVCh0KSlyZXR1cm57dmFsdWU6bnVsbCxyZWN1cnNlOiEwfTt0aHJvdyBuZXcgRXJyb3IoXCJMZWF2ZXMgb2YgdGhlIHN0cnVjdHVyZSBwYXNzZWQgdG8gemlwKCkgbXVzdCBiZSBEYXRhc2V0cywgbm90IHByaW1pdGl2ZXMuXCIpfSldO2Nhc2UgMTpyZXR1cm5bMixMKGUuc2VudCgpLHouU0hPUlRFU1QpXX19KX0pfSl9ZnVuY3Rpb24gdXQodCl7aWYobnVsbD09PXQpcmV0dXJuIG51bGw7dmFyIGU9dFswXTtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT97dmFsdWU6dCxyZWN1cnNlOiExfTpUKGUpP2Z1bmN0aW9uKHQpe2lmKG51bGw9PXQpcmV0dXJuITE7aWYoIUFycmF5LmlzQXJyYXkodCkpcmV0dXJuITE7Zm9yKHZhciBlIGluIHQpaWYoXCJudW1iZXJcIiE9dHlwZW9mIHRbZV0pcmV0dXJuITE7cmV0dXJuITB9KGUpP3t2YWx1ZTpjdCh0KSxyZWN1cnNlOiExfTp7dmFsdWU6bnVsbCxyZWN1cnNlOiEwfTp7dmFsdWU6Y3QodCkscmVjdXJzZTohMX19ZnVuY3Rpb24gY3QodCl7aWYoMD09PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbid0IG1ha2UgYSBiYXRjaCBvZiB6ZXJvIGVsZW1lbnRzLlwiKTtpZih0WzBdaW5zdGFuY2VvZiBhLm8pcmV0dXJuIE9iamVjdChhLlFkKSh0KTtpZihBcnJheS5pc0FycmF5KHRbMF0pKXJldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9dFswXS5sZW5ndGgsbj1bdC5sZW5ndGgsdFswXS5sZW5ndGhdLHI9bmV3IEZsb2F0MzJBcnJheSh0Lmxlbmd0aCplKSxpPTAsbz0wLHM9dDtvPHMubGVuZ3RoO28rKyl7dmFyIHU9c1tvXTtpZih1Lmxlbmd0aCE9PWUpdGhyb3cgbmV3IEVycm9yKFwiRWxlbWVudHMgbXVzdCBoYXZlIHRoZSBzYW1lIHNoYXBlIHRvIGJlIGJhdGNoZWRcIik7ci5zZXQodSxpKSxpKz1lfXJldHVybiBhLm8ubWFrZShuLHt2YWx1ZXM6cn0pfSh0KTt2YXIgZT10O3JldHVybiBhLm8ubWFrZShbZS5sZW5ndGhdLHt2YWx1ZXM6bmV3IEZsb2F0MzJBcnJheShlKX0pfXZhciBsdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5pbnB1dD1lLG59cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5pdGVyYXRvcj1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0O3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmlucHV0Lml0ZXJhdG9yKCldO2Nhc2UgMTpyZXR1cm4gdD1lLnNlbnQoKSxbMix0LmRlY29kZVVURjgoKS5zcGxpdChcIlxcblwiKV19fSl9KX0sZX0oaXQpLGZ0PVN5bWJvbChcIm91dFwiKSxodD1TeW1ib2woXCJmaWVsZFwiKSxwdD1TeW1ib2woXCJxdW90ZVwiKSxkdD1TeW1ib2woXCJxdW90ZWFmdGVycXVvdGVcIiksbXQ9U3ltYm9sKFwicXVvdGVpbnF1b3RlXCIpLGd0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIuaW5wdXQ9ZSxyLmhhc0hlYWRlcj0hMCxyLmZ1bGxDb2x1bW5OYW1lcz1udWxsLHIuY29sdW1uTmFtZXNWYWxpZGF0ZWQ9ITEsci5jb2x1bW5Db25maWdzPW51bGwsci5jb25maWd1cmVkQ29sdW1uc09ubHk9ITEsci5kZWxpbWl0ZXI9XCIsXCIsci5iYXNlPW5ldyBsdChlKSxufHwobj17fSksci5oYXNIZWFkZXI9ITEhPT1uLmhhc0hlYWRlcixyLmZ1bGxDb2x1bW5OYW1lcz1uLmNvbHVtbk5hbWVzLHIuY29sdW1uQ29uZmlncz1uLmNvbHVtbkNvbmZpZ3Msci5jb25maWd1cmVkQ29sdW1uc09ubHk9bi5jb25maWd1cmVkQ29sdW1uc09ubHksci5kZWxpbWl0ZXI9bi5kZWxpbWl0ZXI/bi5kZWxpbWl0ZXI6XCIsXCIscn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLmNvbHVtbk5hbWVzPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLmNvbHVtbk5hbWVzVmFsaWRhdGVkP1szLDJdOls0LHRoaXMuc2V0Q29sdW1uTmFtZXMoKV07Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzIsdGhpcy5jb25maWd1cmVkQ29sdW1uc09ubHk/T2JqZWN0LmtleXModGhpcy5jb2x1bW5Db25maWdzKTp0aGlzLmZ1bGxDb2x1bW5OYW1lc119fSl9KX0sZS5wcm90b3R5cGUuc2V0Q29sdW1uTmFtZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG4scixpLG87cmV0dXJuIGModGhpcyxmdW5jdGlvbihzKXtzd2l0Y2gocy5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMubWF5YmVSZWFkSGVhZGVyTGluZSgpXTtjYXNlIDE6aWYodD1zLnNlbnQoKSwhdGhpcy5mdWxsQ29sdW1uTmFtZXMmJiF0KXRocm93IG5ldyBFcnJvcihcIkNvbHVtbiBuYW1lcyBtdXN0IGJlIHByb3ZpZGVkIGlmIHRoZXJlIGlzIG5vIGhlYWRlciBsaW5lLlwiKTtpZih0aGlzLmZ1bGxDb2x1bW5OYW1lcyYmdCYmYS5xZS5hc3NlcnQodC5sZW5ndGg9PT10aGlzLmZ1bGxDb2x1bW5OYW1lcy5sZW5ndGgsXCJUaGUgbGVuZ3RoIG9mIHByb3ZpZGVkIGNvbHVtbk5hbWVzIChcIit0aGlzLmZ1bGxDb2x1bW5OYW1lcy5sZW5ndGgudG9TdHJpbmcoKStcIikgZG9lcyBub3QgbWF0Y2ggdGhlIGxlbmd0aCBvZiB0aGUgaGVhZGVyIGxpbmUgcmVhZCBmcm9tIGZpbGUgKFwiK3QubGVuZ3RoLnRvU3RyaW5nKCkrXCIpLlwiKSx0aGlzLmZ1bGxDb2x1bW5OYW1lc3x8KHRoaXMuZnVsbENvbHVtbk5hbWVzPXQpLGU9dGhpcy5mdWxsQ29sdW1uTmFtZXMucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbZV09dFtlXSsxfHwxLHR9LHt9KSxuPU9iamVjdC5rZXlzKGUpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gZVt0XT4xfSksYS5xZS5hc3NlcnQoMD09PW4ubGVuZ3RoLFwiRHVwbGljYXRlIGNvbHVtbiBuYW1lcyBmb3VuZDogXCIrbi50b1N0cmluZygpKSx0aGlzLmNvbHVtbkNvbmZpZ3MpZm9yKHI9MCxpPU9iamVjdC5rZXlzKHRoaXMuY29sdW1uQ29uZmlncyk7cjxpLmxlbmd0aDtyKyspaWYobz1pW3JdLC0xPT09dGhpcy5mdWxsQ29sdW1uTmFtZXMuaW5kZXhPZihvKSl0aHJvdyBuZXcgRXJyb3IoJ1RoZSBrZXkgXCInK28rJ1wiIHByb3ZpZGVkIGluIGNvbHVtbkNvbmZpZ3MgZG9lcyBub3QgbWF0Y2ggYW55IG9mIHRoZSBjb2x1bW4gbmFtZXMgKCcrdGhpcy5mdWxsQ29sdW1uTmFtZXMudG9TdHJpbmcoKStcIikuXCIpO3JldHVybiB0aGlzLmNvbHVtbk5hbWVzVmFsaWRhdGVkPSEwLFsyXX19KX0pfSxlLnByb3RvdHlwZS5tYXliZVJlYWRIZWFkZXJMaW5lPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLmhhc0hlYWRlcj9bNCx0aGlzLmJhc2UuaXRlcmF0b3IoKV06WzMsM107Y2FzZSAxOnJldHVybls0LGUuc2VudCgpLm5leHQoKV07Y2FzZSAyOmlmKCh0PWUuc2VudCgpKS5kb25lKXRocm93IG5ldyBFcnJvcihcIk5vIGRhdGEgd2FzIGZvdW5kIGZvciBDU1YgcGFyc2luZy5cIik7cmV0dXJuWzIsdC52YWx1ZS5zcGxpdCh0aGlzLmRlbGltaXRlcildO2Nhc2UgMzpyZXR1cm5bMixudWxsXX19KX0pfSxlLnByb3RvdHlwZS5pdGVyYXRvcj1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGU9dGhpcztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuY29sdW1uTmFtZXNWYWxpZGF0ZWQ/WzMsMl06WzQsdGhpcy5zZXRDb2x1bW5OYW1lcygpXTtjYXNlIDE6bi5zZW50KCksbi5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCx0aGlzLmJhc2UuaXRlcmF0b3IoKV07Y2FzZSAzOnJldHVybiB0PW4uc2VudCgpLHRoaXMuaGFzSGVhZGVyJiYodD10LnNraXAoMSkpLFsyLHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlLm1ha2VEYXRhRWxlbWVudCh0KX0pXX19KX0pfSxlLnByb3RvdHlwZS5tYWtlRGF0YUVsZW1lbnQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMucGFyc2VSb3codCksbj17fSxyPXt9LGk9MDtpPHRoaXMuZnVsbENvbHVtbk5hbWVzLmxlbmd0aDtpKyspe3ZhciBhPXRoaXMuZnVsbENvbHVtbk5hbWVzW2ldLG89dGhpcy5jb2x1bW5Db25maWdzP3RoaXMuY29sdW1uQ29uZmlnc1thXTpudWxsO2lmKCF0aGlzLmNvbmZpZ3VyZWRDb2x1bW5zT25seXx8byl7dmFyIHM9ZVtpXSx1PW51bGw7aWYoXCJcIj09PXMpaWYobyYmdm9pZCAwIT09by5kZWZhdWx0KXU9by5kZWZhdWx0O2Vsc2V7aWYobyYmKG8ucmVxdWlyZWR8fG8uaXNMYWJlbCkpdGhyb3cgbmV3IEVycm9yKFwiUmVxdWlyZWQgY29sdW1uIFwiK2ErXCIgaXMgZW1wdHkgaW4gdGhpcyBsaW5lOiBcIit0KTt1PXZvaWQgMH1lbHNle3ZhciBjPU51bWJlcihzKTtpZihpc05hTihjKSl1PW8mJlwiYm9vbFwiPT09by5kdHlwZT90aGlzLmdldEJvb2xlYW4ocyk6cztlbHNlIGlmKG8mJm8uZHR5cGUpc3dpdGNoKG8uZHR5cGUpe2Nhc2VcImZsb2F0MzJcIjp1PWM7YnJlYWs7Y2FzZVwiaW50MzJcIjp1PU1hdGguZmxvb3IoYyk7YnJlYWs7Y2FzZVwiYm9vbFwiOnU9dGhpcy5nZXRCb29sZWFuKHMpO2JyZWFrO2RlZmF1bHQ6dT1jfWVsc2UgdT1jfW8mJm8uaXNMYWJlbD9yW2FdPXU6blthXT11fX1yZXR1cm4gMD09PU9iamVjdC5rZXlzKHIpLmxlbmd0aD9uOltuLHJdfSxlLnByb3RvdHlwZS5nZXRCb29sZWFuPWZ1bmN0aW9uKHQpe3JldHVyblwiMVwiPT09dHx8XCJ0cnVlXCI9PT10LnRvTG93ZXJDYXNlKCk/MTowfSxlLnByb3RvdHlwZS5wYXJzZVJvdz1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0wLHI9dC5sZW5ndGgsaT1odCxhPTA7YTxyO2ErKylzd2l0Y2goaSl7Y2FzZSBmdDpzd2l0Y2godC5jaGFyQXQoYSkpe2Nhc2UnXCInOm49YSsxLGk9cHQ7YnJlYWs7Y2FzZSB0aGlzLmRlbGltaXRlcjplLnB1c2goXCJcIiksaT1mdCxuPWErMTticmVhaztkZWZhdWx0Omk9aHQsbj1hfWJyZWFrO2Nhc2UgaHQ6c3dpdGNoKHQuY2hhckF0KGEpKXtjYXNlIHRoaXMuZGVsaW1pdGVyOmUucHVzaCh0LnN1YnN0cmluZyhuLGEpKSxpPWZ0LG49YSsxfWJyZWFrO2Nhc2UgcHQ6c3dpdGNoKHQuY2hhckF0KGEpKXtjYXNlJ1wiJzppPWR0fWJyZWFrO2Nhc2UgZHQ6c3dpdGNoKHQuY2hhckF0KGEpKXtjYXNlIHRoaXMuZGVsaW1pdGVyOmUucHVzaCh0LnN1YnN0cmluZyhuLGEtMSkpLGk9ZnQsbj1hKzE7YnJlYWs7Y2FzZSdcIic6aT1wdDticmVhaztkZWZhdWx0Omk9bXR9YnJlYWs7Y2FzZSBtdDpzd2l0Y2godC5jaGFyQXQoYSkpe2Nhc2UnXCInOmk9cHR9fXJldHVybiBpPT09ZHQ/ZS5wdXNoKHQuc3Vic3RyaW5nKG4sci0xKSk6ZS5wdXNoKHQuc3Vic3RyaW5nKG4pKSxlfSxlfShpdCkseXQ9ZnVuY3Rpb24oKXt9LHZ0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBidCh0aGlzLHQpfSxlfShVKSxidD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLnVwc3RyZWFtPWUsci5pbXBsPW5ldyB3dChlLG4pLHJ9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW1wbC5zdW1tYXJ5KCl9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLHRoaXMuaW1wbC5uZXh0KCldfSl9KX0sZX0odnQpLHd0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIudXBzdHJlYW09ZSxyLnNlcGFyYXRvcj1uLHIuY2FycnlvdmVyPVwiXCIscn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51cHN0cmVhbS5zdW1tYXJ5KCkrXCIgLT4gU3BsaXQoJ1wiK3RoaXMuc2VwYXJhdG9yK1wiJylcIn0sZS5wcm90b3R5cGUucHVtcD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGUsbixyLGk7cmV0dXJuIGModGhpcyxmdW5jdGlvbihhKXtzd2l0Y2goYS5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHRoaXMudXBzdHJlYW0ubmV4dCgpXTtjYXNlIDE6aWYoKHQ9YS5zZW50KCkpLmRvbmUpcmV0dXJuXCJcIj09PXRoaXMuY2FycnlvdmVyP1syLCExXToodGhpcy5vdXRwdXRRdWV1ZS5wdXNoKHRoaXMuY2FycnlvdmVyKSx0aGlzLmNhcnJ5b3Zlcj1cIlwiLFsyLCEwXSk7Zm9yKChlPXQudmFsdWUuc3BsaXQodGhpcy5zZXBhcmF0b3IpKVswXT10aGlzLmNhcnJ5b3ZlcitlWzBdLG49MCxyPWUuc2xpY2UoMCwtMSk7bjxyLmxlbmd0aDtuKyspaT1yW25dLHRoaXMub3V0cHV0UXVldWUucHVzaChpKTtyZXR1cm4gdGhpcy5jYXJyeW92ZXI9ZVtlLmxlbmd0aC0xXSxbMiwhMF19fSl9KX0sZX0oWiksX3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5kZWNvZGVVVEY4PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB4dCh0aGlzKX0sZX0oVSkseHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4udXBzdHJlYW09ZSxuLmltcGw9bmV3IEV0KGUpLG59cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW1wbC5zdW1tYXJ5KCl9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLHRoaXMuaW1wbC5uZXh0KCldfSl9KX0sZX0odnQpLEV0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO2lmKHIudXBzdHJlYW09ZSxhLmYuZ2V0KFwiSVNfQlJPV1NFUlwiKSlyLmRlY29kZXI9bmV3IFRleHREZWNvZGVyKFwidXRmLThcIik7ZWxzZXt2YXIgaT1uKDQyKS5TdHJpbmdEZWNvZGVyO3IuZGVjb2Rlcj1uZXcgaShcInV0ZjhcIil9cmV0dXJuIHJ9cmV0dXJuIHMoZSx0KSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXBzdHJlYW0uc3VtbWFyeSgpK1wiIC0+IFV0ZjhcIn0sZS5wcm90b3R5cGUucHVtcD1mdW5jdGlvbigpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LGUsbjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy51cHN0cmVhbS5uZXh0KCldO2Nhc2UgMTpyZXR1cm4odD1yLnNlbnQoKSkuZG9uZT9bMiwhMV06KGU9dC52YWx1ZSxuPWEuZi5nZXQoXCJJU19CUk9XU0VSXCIpP3RoaXMuZGVjb2Rlci5kZWNvZGUoZSx7c3RyZWFtOiEwfSk6dGhpcy5kZWNvZGVyLndyaXRlKGkuZnJvbShlLmJ1ZmZlcikpLHRoaXMub3V0cHV0UXVldWUucHVzaChuKSxbMiwhMF0pfX0pfSl9LGV9KFopLFN0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2b2lkIDA9PT1uJiYobj17fSk7dmFyIHI9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiByLmZpbGU9ZSxyLm9wdGlvbnM9bixhLnFlLmFzc2VydChlIGluc3RhbmNlb2YgVWludDhBcnJheXx8ISFhLmYuZ2V0KFwiSVNfQlJPV1NFUlwiKSYmKGUgaW5zdGFuY2VvZiBGaWxlfHxlIGluc3RhbmNlb2YgQmxvYiksXCJGaWxlQ2h1bmtJdGVyYXRvciBvbmx5IHN1cHBvcnRzIEZpbGUsIEJsb2IgYW5kIFVpbnQ4QXJyYXkgcmlnaHQgbm93LlwiKSxyLm9mZnNldD1uLm9mZnNldHx8MCxyLmNodW5rU2l6ZT1uLmNodW5rU2l6ZXx8MTA0ODU3NixyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbigpe3JldHVyblwiRmlsZUNodW5rcyBcIit0aGlzLmZpbGV9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMub2Zmc2V0Pj0odGhpcy5maWxlIGluc3RhbmNlb2YgVWludDhBcnJheT90aGlzLmZpbGUuYnl0ZUxlbmd0aDp0aGlzLmZpbGUuc2l6ZSk/WzIse3ZhbHVlOm51bGwsZG9uZTohMH1dOih0PW5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsZSl7dmFyIHI9bi5vZmZzZXQrbi5jaHVua1NpemU7aWYobi5maWxlIGluc3RhbmNlb2YgVWludDhBcnJheSl0KG5ldyBVaW50OEFycmF5KG4uZmlsZS5zbGljZShuLm9mZnNldCxyKSkpO2Vsc2V7dmFyIGk9bmV3IEZpbGVSZWFkZXI7aS5vbmxvYWQ9ZnVuY3Rpb24obil7dmFyIHI9aS5yZXN1bHQ7aWYociBpbnN0YW5jZW9mIEFycmF5QnVmZmVyJiYocj1uZXcgVWludDhBcnJheShyKSksIShyIGluc3RhbmNlb2YgVWludDhBcnJheSkpcmV0dXJuIGUobmV3IFR5cGVFcnJvcihcIkZpbGVSZWFkZXIgcmV0dXJuZWQgdW5rbm93biB0eXBlLlwiKSk7dChyKX0saS5vbmFib3J0PWZ1bmN0aW9uKHQpe3JldHVybiBlKG5ldyBFcnJvcihcIkFib3J0ZWRcIikpfSxpLm9uZXJyb3I9ZnVuY3Rpb24odCl7cmV0dXJuIGUobmV3IEVycm9yKHQudHlwZSkpfTt2YXIgYT1uLmZpbGUuc2xpY2Uobi5vZmZzZXQscik7aS5yZWFkQXNBcnJheUJ1ZmZlcihhKX1uLm9mZnNldD1yfSksZT17fSxbNCx0XSk7Y2FzZSAxOnJldHVyblsyLChlLnZhbHVlPXIuc2VudCgpLGUuZG9uZT0hMSxlKV19fSl9KX0sZX0oX3QpO2Z1bmN0aW9uIE50KHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXt9KSx1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciByLGksbyxzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24odSl7c3dpdGNoKHUubGFiZWwpe2Nhc2UgMDpyZXR1cm4gYS5mLmdldChcIklTX0JST1dTRVJcIik/WzQsZmV0Y2godCldOlszLDVdO2Nhc2UgMTpyZXR1cm4ocj11LnNlbnQoKSkub2s/WzQsci5ibG9iKCldOlszLDNdO2Nhc2UgMjpyZXR1cm4gaT11LnNlbnQoKSxbMixuZXcgU3QoaSxlKV07Y2FzZSAzOnRocm93IG5ldyBFcnJvcihyLnN0YXR1c1RleHQpO2Nhc2UgNDpyZXR1cm5bMyw5XTtjYXNlIDU6aWYobz1uKDIyMSksXCJzdHJpbmdcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IEVycm9yKFwiVVJMIG11c3QgYmUgYSBzdHJpbmcuIFJlcXVlc3Qgb2JqZWN0cyBhcmUgbm90IHN1cHBvcnRlZCBpbiB0aGUgbm9kZS5qcyBlbnZpcm9ubWVudCB5ZXQuXCIpO3JldHVybls0LG8odCldO2Nhc2UgNjpyZXR1cm4ocj11LnNlbnQoKSkub2s/WzQsci5idWZmZXIoKV06WzMsOF07Y2FzZSA3OnJldHVybiBzPXUuc2VudCgpLFsyLG5ldyBTdChzLGUpXTtjYXNlIDg6dGhyb3cgbmV3IEVycm9yKHIuc3RhdHVzVGV4dCk7Y2FzZSA5OnJldHVyblsyXX19KX0pfXZhciBJdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dm9pZCAwPT09biYmKG49e30pO3ZhciByPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gci51cmw9ZSxyLmZpbGVPcHRpb25zPW4scn1yZXR1cm4gcyhlLHQpLGUucHJvdG90eXBlLml0ZXJhdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbih0KXtyZXR1cm5bMixOdCh0aGlzLnVybCx0aGlzLmZpbGVPcHRpb25zKV19KX0pfSxlfSh5dCk7ZnVuY3Rpb24gT3QodCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30pLG5ldyBndChuZXcgSXQodCksZSl9ZnVuY3Rpb24ga3QodCl7dmFyIGU9dGhpcyxuPWoodCk7cmV0dXJuIGF0KGZ1bmN0aW9uKCl7cmV0dXJuIHUoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbih0KXtyZXR1cm5bMixuXX0pfSl9KX12YXIgQXQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLG4pe3ZvaWQgMD09PW4mJihuPXt9KTt2YXIgcj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHIuaW5wdXQ9ZSxyLm9wdGlvbnM9bixyfXJldHVybiBzKGUsdCksZS5wcm90b3R5cGUuaXRlcmF0b3I9ZnVuY3Rpb24oKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLG5ldyBTdCh0aGlzLmlucHV0LHRoaXMub3B0aW9ucyldfSl9KX0sZX0oeXQpLEN0PVwiMC4xLjdcIn0uY2FsbCh0aGlzLG4oMTEpLG4oMTQpLG4oNCkuQnVmZmVyKX0sLCxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigyKSxpPW4oODYpLGE9bigzKS5CdWZmZXIsbz1uZXcgQXJyYXkoMTYpO2Z1bmN0aW9uIHMoKXtpLmNhbGwodGhpcyw2NCksdGhpcy5fYT0xNzMyNTg0MTkzLHRoaXMuX2I9NDAyMzIzMzQxNyx0aGlzLl9jPTI1NjIzODMxMDIsdGhpcy5fZD0yNzE3MzM4Nzh9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiB0PDxlfHQ+Pj4zMi1lfWZ1bmN0aW9uIGModCxlLG4scixpLGEsbyl7cmV0dXJuIHUodCsoZSZufH5lJnIpK2krYXwwLG8pK2V8MH1mdW5jdGlvbiBsKHQsZSxuLHIsaSxhLG8pe3JldHVybiB1KHQrKGUmcnxuJn5yKStpK2F8MCxvKStlfDB9ZnVuY3Rpb24gZih0LGUsbixyLGksYSxvKXtyZXR1cm4gdSh0KyhlXm5ecikraSthfDAsbykrZXwwfWZ1bmN0aW9uIGgodCxlLG4scixpLGEsbyl7cmV0dXJuIHUodCsobl4oZXx+cikpK2krYXwwLG8pK2V8MH1yKHMsaSkscy5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD1vLGU9MDtlPDE2OysrZSl0W2VdPXRoaXMuX2Jsb2NrLnJlYWRJbnQzMkxFKDQqZSk7dmFyIG49dGhpcy5fYSxyPXRoaXMuX2IsaT10aGlzLl9jLGE9dGhpcy5fZDtuPWMobixyLGksYSx0WzBdLDM2MTQwOTAzNjAsNyksYT1jKGEsbixyLGksdFsxXSwzOTA1NDAyNzEwLDEyKSxpPWMoaSxhLG4scix0WzJdLDYwNjEwNTgxOSwxNykscj1jKHIsaSxhLG4sdFszXSwzMjUwNDQxOTY2LDIyKSxuPWMobixyLGksYSx0WzRdLDQxMTg1NDgzOTksNyksYT1jKGEsbixyLGksdFs1XSwxMjAwMDgwNDI2LDEyKSxpPWMoaSxhLG4scix0WzZdLDI4MjE3MzU5NTUsMTcpLHI9YyhyLGksYSxuLHRbN10sNDI0OTI2MTMxMywyMiksbj1jKG4scixpLGEsdFs4XSwxNzcwMDM1NDE2LDcpLGE9YyhhLG4scixpLHRbOV0sMjMzNjU1Mjg3OSwxMiksaT1jKGksYSxuLHIsdFsxMF0sNDI5NDkyNTIzMywxNykscj1jKHIsaSxhLG4sdFsxMV0sMjMwNDU2MzEzNCwyMiksbj1jKG4scixpLGEsdFsxMl0sMTgwNDYwMzY4Miw3KSxhPWMoYSxuLHIsaSx0WzEzXSw0MjU0NjI2MTk1LDEyKSxpPWMoaSxhLG4scix0WzE0XSwyNzkyOTY1MDA2LDE3KSxuPWwobixyPWMocixpLGEsbix0WzE1XSwxMjM2NTM1MzI5LDIyKSxpLGEsdFsxXSw0MTI5MTcwNzg2LDUpLGE9bChhLG4scixpLHRbNl0sMzIyNTQ2NTY2NCw5KSxpPWwoaSxhLG4scix0WzExXSw2NDM3MTc3MTMsMTQpLHI9bChyLGksYSxuLHRbMF0sMzkyMTA2OTk5NCwyMCksbj1sKG4scixpLGEsdFs1XSwzNTkzNDA4NjA1LDUpLGE9bChhLG4scixpLHRbMTBdLDM4MDE2MDgzLDkpLGk9bChpLGEsbixyLHRbMTVdLDM2MzQ0ODg5NjEsMTQpLHI9bChyLGksYSxuLHRbNF0sMzg4OTQyOTQ0OCwyMCksbj1sKG4scixpLGEsdFs5XSw1Njg0NDY0MzgsNSksYT1sKGEsbixyLGksdFsxNF0sMzI3NTE2MzYwNiw5KSxpPWwoaSxhLG4scix0WzNdLDQxMDc2MDMzMzUsMTQpLHI9bChyLGksYSxuLHRbOF0sMTE2MzUzMTUwMSwyMCksbj1sKG4scixpLGEsdFsxM10sMjg1MDI4NTgyOSw1KSxhPWwoYSxuLHIsaSx0WzJdLDQyNDM1NjM1MTIsOSksaT1sKGksYSxuLHIsdFs3XSwxNzM1MzI4NDczLDE0KSxuPWYobixyPWwocixpLGEsbix0WzEyXSwyMzY4MzU5NTYyLDIwKSxpLGEsdFs1XSw0Mjk0NTg4NzM4LDQpLGE9ZihhLG4scixpLHRbOF0sMjI3MjM5MjgzMywxMSksaT1mKGksYSxuLHIsdFsxMV0sMTgzOTAzMDU2MiwxNikscj1mKHIsaSxhLG4sdFsxNF0sNDI1OTY1Nzc0MCwyMyksbj1mKG4scixpLGEsdFsxXSwyNzYzOTc1MjM2LDQpLGE9ZihhLG4scixpLHRbNF0sMTI3Mjg5MzM1MywxMSksaT1mKGksYSxuLHIsdFs3XSw0MTM5NDY5NjY0LDE2KSxyPWYocixpLGEsbix0WzEwXSwzMjAwMjM2NjU2LDIzKSxuPWYobixyLGksYSx0WzEzXSw2ODEyNzkxNzQsNCksYT1mKGEsbixyLGksdFswXSwzOTM2NDMwMDc0LDExKSxpPWYoaSxhLG4scix0WzNdLDM1NzI0NDUzMTcsMTYpLHI9ZihyLGksYSxuLHRbNl0sNzYwMjkxODksMjMpLG49ZihuLHIsaSxhLHRbOV0sMzY1NDYwMjgwOSw0KSxhPWYoYSxuLHIsaSx0WzEyXSwzODczMTUxNDYxLDExKSxpPWYoaSxhLG4scix0WzE1XSw1MzA3NDI1MjAsMTYpLG49aChuLHI9ZihyLGksYSxuLHRbMl0sMzI5OTYyODY0NSwyMyksaSxhLHRbMF0sNDA5NjMzNjQ1Miw2KSxhPWgoYSxuLHIsaSx0WzddLDExMjY4OTE0MTUsMTApLGk9aChpLGEsbixyLHRbMTRdLDI4Nzg2MTIzOTEsMTUpLHI9aChyLGksYSxuLHRbNV0sNDIzNzUzMzI0MSwyMSksbj1oKG4scixpLGEsdFsxMl0sMTcwMDQ4NTU3MSw2KSxhPWgoYSxuLHIsaSx0WzNdLDIzOTk5ODA2OTAsMTApLGk9aChpLGEsbixyLHRbMTBdLDQyOTM5MTU3NzMsMTUpLHI9aChyLGksYSxuLHRbMV0sMjI0MDA0NDQ5NywyMSksbj1oKG4scixpLGEsdFs4XSwxODczMzEzMzU5LDYpLGE9aChhLG4scixpLHRbMTVdLDQyNjQzNTU1NTIsMTApLGk9aChpLGEsbixyLHRbNl0sMjczNDc2ODkxNiwxNSkscj1oKHIsaSxhLG4sdFsxM10sMTMwOTE1MTY0OSwyMSksbj1oKG4scixpLGEsdFs0XSw0MTQ5NDQ0MjI2LDYpLGE9aChhLG4scixpLHRbMTFdLDMxNzQ3NTY5MTcsMTApLGk9aChpLGEsbixyLHRbMl0sNzE4Nzg3MjU5LDE1KSxyPWgocixpLGEsbix0WzldLDM5NTE0ODE3NDUsMjEpLHRoaXMuX2E9dGhpcy5fYStufDAsdGhpcy5fYj10aGlzLl9iK3J8MCx0aGlzLl9jPXRoaXMuX2MraXwwLHRoaXMuX2Q9dGhpcy5fZCthfDB9LHMucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24oKXt0aGlzLl9ibG9ja1t0aGlzLl9ibG9ja09mZnNldCsrXT0xMjgsdGhpcy5fYmxvY2tPZmZzZXQ+NTYmJih0aGlzLl9ibG9jay5maWxsKDAsdGhpcy5fYmxvY2tPZmZzZXQsNjQpLHRoaXMuX3VwZGF0ZSgpLHRoaXMuX2Jsb2NrT2Zmc2V0PTApLHRoaXMuX2Jsb2NrLmZpbGwoMCx0aGlzLl9ibG9ja09mZnNldCw1NiksdGhpcy5fYmxvY2sud3JpdGVVSW50MzJMRSh0aGlzLl9sZW5ndGhbMF0sNTYpLHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzFdLDYwKSx0aGlzLl91cGRhdGUoKTt2YXIgdD1hLmFsbG9jVW5zYWZlKDE2KTtyZXR1cm4gdC53cml0ZUludDMyTEUodGhpcy5fYSwwKSx0LndyaXRlSW50MzJMRSh0aGlzLl9iLDQpLHQud3JpdGVJbnQzMkxFKHRoaXMuX2MsOCksdC53cml0ZUludDMyTEUodGhpcy5fZCwxMiksdH0sdC5leHBvcnRzPXN9LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9aTt2YXIgcj1uKDU4KS5FdmVudEVtaXR0ZXI7ZnVuY3Rpb24gaSgpe3IuY2FsbCh0aGlzKX1uKDIpKGksciksaS5SZWFkYWJsZT1uKDU5KSxpLldyaXRhYmxlPW4oMTQ0KSxpLkR1cGxleD1uKDE0NSksaS5UcmFuc2Zvcm09bigxNDYpLGkuUGFzc1Rocm91Z2g9bigxNDcpLGkuU3RyZWFtPWksaS5wcm90b3R5cGUucGlwZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7ZnVuY3Rpb24gaShlKXt0LndyaXRhYmxlJiYhMT09PXQud3JpdGUoZSkmJm4ucGF1c2UmJm4ucGF1c2UoKX1mdW5jdGlvbiBhKCl7bi5yZWFkYWJsZSYmbi5yZXN1bWUmJm4ucmVzdW1lKCl9bi5vbihcImRhdGFcIixpKSx0Lm9uKFwiZHJhaW5cIixhKSx0Ll9pc1N0ZGlvfHxlJiYhMT09PWUuZW5kfHwobi5vbihcImVuZFwiLHMpLG4ub24oXCJjbG9zZVwiLHUpKTt2YXIgbz0hMTtmdW5jdGlvbiBzKCl7b3x8KG89ITAsdC5lbmQoKSl9ZnVuY3Rpb24gdSgpe298fChvPSEwLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZGVzdHJveSYmdC5kZXN0cm95KCkpfWZ1bmN0aW9uIGModCl7aWYobCgpLDA9PT1yLmxpc3RlbmVyQ291bnQodGhpcyxcImVycm9yXCIpKXRocm93IHR9ZnVuY3Rpb24gbCgpe24ucmVtb3ZlTGlzdGVuZXIoXCJkYXRhXCIsaSksdC5yZW1vdmVMaXN0ZW5lcihcImRyYWluXCIsYSksbi5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLHMpLG4ucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLHUpLG4ucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGMpLHQucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGMpLG4ucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixsKSxuLnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixsKSx0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixsKX1yZXR1cm4gbi5vbihcImVycm9yXCIsYyksdC5vbihcImVycm9yXCIsYyksbi5vbihcImVuZFwiLGwpLG4ub24oXCJjbG9zZVwiLGwpLHQub24oXCJjbG9zZVwiLGwpLHQuZW1pdChcInBpcGVcIixuKSx0fX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7dGhpcy5fZXZlbnRzPXRoaXMuX2V2ZW50c3x8e30sdGhpcy5fbWF4TGlzdGVuZXJzPXRoaXMuX21heExpc3RlbmVyc3x8dm9pZCAwfWZ1bmN0aW9uIHIodCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdH1mdW5jdGlvbiBpKHQpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT09dH1mdW5jdGlvbiBhKHQpe3JldHVybiB2b2lkIDA9PT10fXQuZXhwb3J0cz1uLG4uRXZlbnRFbWl0dGVyPW4sbi5wcm90b3R5cGUuX2V2ZW50cz12b2lkIDAsbi5wcm90b3R5cGUuX21heExpc3RlbmVycz12b2lkIDAsbi5kZWZhdWx0TWF4TGlzdGVuZXJzPTEwLG4ucHJvdG90eXBlLnNldE1heExpc3RlbmVycz1mdW5jdGlvbih0KXtpZihcIm51bWJlclwiIT10eXBlb2YgdHx8dDwwfHxpc05hTih0KSl0aHJvdyBUeXBlRXJyb3IoXCJuIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXJcIik7cmV0dXJuIHRoaXMuX21heExpc3RlbmVycz10LHRoaXN9LG4ucHJvdG90eXBlLmVtaXQ9ZnVuY3Rpb24odCl7dmFyIGUsbixvLHMsdSxjO2lmKHRoaXMuX2V2ZW50c3x8KHRoaXMuX2V2ZW50cz17fSksXCJlcnJvclwiPT09dCYmKCF0aGlzLl9ldmVudHMuZXJyb3J8fGkodGhpcy5fZXZlbnRzLmVycm9yKSYmIXRoaXMuX2V2ZW50cy5lcnJvci5sZW5ndGgpKXtpZigoZT1hcmd1bWVudHNbMV0paW5zdGFuY2VvZiBFcnJvcil0aHJvdyBlO3ZhciBsPW5ldyBFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkIFwiZXJyb3JcIiBldmVudC4gKCcrZStcIilcIik7dGhyb3cgbC5jb250ZXh0PWUsbH1pZihhKG49dGhpcy5fZXZlbnRzW3RdKSlyZXR1cm4hMTtpZihyKG4pKXN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDE6bi5jYWxsKHRoaXMpO2JyZWFrO2Nhc2UgMjpuLmNhbGwodGhpcyxhcmd1bWVudHNbMV0pO2JyZWFrO2Nhc2UgMzpuLmNhbGwodGhpcyxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdKTticmVhaztkZWZhdWx0OnM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLG4uYXBwbHkodGhpcyxzKX1lbHNlIGlmKGkobikpZm9yKHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLG89KGM9bi5zbGljZSgpKS5sZW5ndGgsdT0wO3U8bzt1KyspY1t1XS5hcHBseSh0aGlzLHMpO3JldHVybiEwfSxuLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3ZhciBvO2lmKCFyKGUpKXRocm93IFR5cGVFcnJvcihcImxpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvblwiKTtyZXR1cm4gdGhpcy5fZXZlbnRzfHwodGhpcy5fZXZlbnRzPXt9KSx0aGlzLl9ldmVudHMubmV3TGlzdGVuZXImJnRoaXMuZW1pdChcIm5ld0xpc3RlbmVyXCIsdCxyKGUubGlzdGVuZXIpP2UubGlzdGVuZXI6ZSksdGhpcy5fZXZlbnRzW3RdP2kodGhpcy5fZXZlbnRzW3RdKT90aGlzLl9ldmVudHNbdF0ucHVzaChlKTp0aGlzLl9ldmVudHNbdF09W3RoaXMuX2V2ZW50c1t0XSxlXTp0aGlzLl9ldmVudHNbdF09ZSxpKHRoaXMuX2V2ZW50c1t0XSkmJiF0aGlzLl9ldmVudHNbdF0ud2FybmVkJiYobz1hKHRoaXMuX21heExpc3RlbmVycyk/bi5kZWZhdWx0TWF4TGlzdGVuZXJzOnRoaXMuX21heExpc3RlbmVycykmJm8+MCYmdGhpcy5fZXZlbnRzW3RdLmxlbmd0aD5vJiYodGhpcy5fZXZlbnRzW3RdLndhcm5lZD0hMCxjb25zb2xlLmVycm9yKFwiKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gJWQgbGlzdGVuZXJzIGFkZGVkLiBVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdC5cIix0aGlzLl9ldmVudHNbdF0ubGVuZ3RoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBjb25zb2xlLnRyYWNlJiZjb25zb2xlLnRyYWNlKCkpLHRoaXN9LG4ucHJvdG90eXBlLm9uPW4ucHJvdG90eXBlLmFkZExpc3RlbmVyLG4ucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24odCxlKXtpZighcihlKSl0aHJvdyBUeXBlRXJyb3IoXCJsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7dmFyIG49ITE7ZnVuY3Rpb24gaSgpe3RoaXMucmVtb3ZlTGlzdGVuZXIodCxpKSxufHwobj0hMCxlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9cmV0dXJuIGkubGlzdGVuZXI9ZSx0aGlzLm9uKHQsaSksdGhpc30sbi5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXt2YXIgbixhLG8scztpZighcihlKSl0aHJvdyBUeXBlRXJyb3IoXCJsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIik7aWYoIXRoaXMuX2V2ZW50c3x8IXRoaXMuX2V2ZW50c1t0XSlyZXR1cm4gdGhpcztpZihvPShuPXRoaXMuX2V2ZW50c1t0XSkubGVuZ3RoLGE9LTEsbj09PWV8fHIobi5saXN0ZW5lcikmJm4ubGlzdGVuZXI9PT1lKWRlbGV0ZSB0aGlzLl9ldmVudHNbdF0sdGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0ZW5lclwiLHQsZSk7ZWxzZSBpZihpKG4pKXtmb3Iocz1vO3MtLSA+MDspaWYobltzXT09PWV8fG5bc10ubGlzdGVuZXImJm5bc10ubGlzdGVuZXI9PT1lKXthPXM7YnJlYWt9aWYoYTwwKXJldHVybiB0aGlzOzE9PT1uLmxlbmd0aD8obi5sZW5ndGg9MCxkZWxldGUgdGhpcy5fZXZlbnRzW3RdKTpuLnNwbGljZShhLDEpLHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIix0LGUpfXJldHVybiB0aGlzfSxuLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUsbjtpZighdGhpcy5fZXZlbnRzKXJldHVybiB0aGlzO2lmKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpcmV0dXJuIDA9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuX2V2ZW50cz17fTp0aGlzLl9ldmVudHNbdF0mJmRlbGV0ZSB0aGlzLl9ldmVudHNbdF0sdGhpcztpZigwPT09YXJndW1lbnRzLmxlbmd0aCl7Zm9yKGUgaW4gdGhpcy5fZXZlbnRzKVwicmVtb3ZlTGlzdGVuZXJcIiE9PWUmJnRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKGUpO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlbW92ZUxpc3RlbmVyXCIpLHRoaXMuX2V2ZW50cz17fSx0aGlzfWlmKHIobj10aGlzLl9ldmVudHNbdF0pKXRoaXMucmVtb3ZlTGlzdGVuZXIodCxuKTtlbHNlIGlmKG4pZm9yKDtuLmxlbmd0aDspdGhpcy5yZW1vdmVMaXN0ZW5lcih0LG5bbi5sZW5ndGgtMV0pO3JldHVybiBkZWxldGUgdGhpcy5fZXZlbnRzW3RdLHRoaXN9LG4ucHJvdG90eXBlLmxpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHNbdF0/cih0aGlzLl9ldmVudHNbdF0pP1t0aGlzLl9ldmVudHNbdF1dOnRoaXMuX2V2ZW50c1t0XS5zbGljZSgpOltdfSxuLnByb3RvdHlwZS5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKHQpe2lmKHRoaXMuX2V2ZW50cyl7dmFyIGU9dGhpcy5fZXZlbnRzW3RdO2lmKHIoZSkpcmV0dXJuIDE7aWYoZSlyZXR1cm4gZS5sZW5ndGh9cmV0dXJuIDB9LG4ubGlzdGVuZXJDb3VudD1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxpc3RlbmVyQ291bnQoZSl9fSxmdW5jdGlvbih0LGUsbil7KGU9dC5leHBvcnRzPW4oODcpKS5TdHJlYW09ZSxlLlJlYWRhYmxlPWUsZS5Xcml0YWJsZT1uKDYwKSxlLkR1cGxleD1uKDIxKSxlLlRyYW5zZm9ybT1uKDkwKSxlLlBhc3NUaHJvdWdoPW4oMTQzKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbihlLHIsaSl7dmFyIGE9big0MSk7ZnVuY3Rpb24gbyh0KXt2YXIgZT10aGlzO3RoaXMubmV4dD1udWxsLHRoaXMuZW50cnk9bnVsbCx0aGlzLmZpbmlzaD1mdW5jdGlvbigpeyFmdW5jdGlvbih0LGUsbil7dmFyIHI9dC5lbnRyeTt0LmVudHJ5PW51bGw7Zm9yKDtyOyl7dmFyIGk9ci5jYWxsYmFjaztlLnBlbmRpbmdjYi0tLGkobikscj1yLm5leHR9ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU/ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dD10OmUuY29ya2VkUmVxdWVzdHNGcmVlPXR9KGUsdCl9fXQuZXhwb3J0cz12O3ZhciBzLHU9IWUuYnJvd3NlciYmW1widjAuMTBcIixcInYwLjkuXCJdLmluZGV4T2YoZS52ZXJzaW9uLnNsaWNlKDAsNSkpPi0xP3I6YS5uZXh0VGljazt2LldyaXRhYmxlU3RhdGU9eTt2YXIgYz1uKDMxKTtjLmluaGVyaXRzPW4oMik7dmFyIGw9e2RlcHJlY2F0ZTpuKDE0Mil9LGY9big4OCksaD1uKDMpLkJ1ZmZlcixwPWkuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O3ZhciBkLG09big4OSk7ZnVuY3Rpb24gZygpe31mdW5jdGlvbiB5KHQsZSl7cz1zfHxuKDIxKSx0PXR8fHt9O3ZhciByPWUgaW5zdGFuY2VvZiBzO3RoaXMub2JqZWN0TW9kZT0hIXQub2JqZWN0TW9kZSxyJiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISF0LndyaXRhYmxlT2JqZWN0TW9kZSk7dmFyIGk9dC5oaWdoV2F0ZXJNYXJrLGM9dC53cml0YWJsZUhpZ2hXYXRlck1hcmssbD10aGlzLm9iamVjdE1vZGU/MTY6MTYzODQ7dGhpcy5oaWdoV2F0ZXJNYXJrPWl8fDA9PT1pP2k6ciYmKGN8fDA9PT1jKT9jOmwsdGhpcy5oaWdoV2F0ZXJNYXJrPU1hdGguZmxvb3IodGhpcy5oaWdoV2F0ZXJNYXJrKSx0aGlzLmZpbmFsQ2FsbGVkPSExLHRoaXMubmVlZERyYWluPSExLHRoaXMuZW5kaW5nPSExLHRoaXMuZW5kZWQ9ITEsdGhpcy5maW5pc2hlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMTt2YXIgZj0hMT09PXQuZGVjb2RlU3RyaW5nczt0aGlzLmRlY29kZVN0cmluZ3M9IWYsdGhpcy5kZWZhdWx0RW5jb2Rpbmc9dC5kZWZhdWx0RW5jb2Rpbmd8fFwidXRmOFwiLHRoaXMubGVuZ3RoPTAsdGhpcy53cml0aW5nPSExLHRoaXMuY29ya2VkPTAsdGhpcy5zeW5jPSEwLHRoaXMuYnVmZmVyUHJvY2Vzc2luZz0hMSx0aGlzLm9ud3JpdGU9ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fd3JpdGFibGVTdGF0ZSxyPW4uc3luYyxpPW4ud3JpdGVjYjtpZihmdW5jdGlvbih0KXt0LndyaXRpbmc9ITEsdC53cml0ZWNiPW51bGwsdC5sZW5ndGgtPXQud3JpdGVsZW4sdC53cml0ZWxlbj0wfShuKSxlKSFmdW5jdGlvbih0LGUsbixyLGkpey0tZS5wZW5kaW5nY2Isbj8oYS5uZXh0VGljayhpLHIpLGEubmV4dFRpY2soUyx0LGUpLHQuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSEwLHQuZW1pdChcImVycm9yXCIscikpOihpKHIpLHQuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSEwLHQuZW1pdChcImVycm9yXCIsciksUyh0LGUpKX0odCxuLHIsZSxpKTtlbHNle3ZhciBvPXgobik7b3x8bi5jb3JrZWR8fG4uYnVmZmVyUHJvY2Vzc2luZ3x8IW4uYnVmZmVyZWRSZXF1ZXN0fHxfKHQsbikscj91KHcsdCxuLG8saSk6dyh0LG4sbyxpKX19KGUsdCl9LHRoaXMud3JpdGVjYj1udWxsLHRoaXMud3JpdGVsZW49MCx0aGlzLmJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMucGVuZGluZ2NiPTAsdGhpcy5wcmVmaW5pc2hlZD0hMSx0aGlzLmVycm9yRW1pdHRlZD0hMSx0aGlzLmJ1ZmZlcmVkUmVxdWVzdENvdW50PTAsdGhpcy5jb3JrZWRSZXF1ZXN0c0ZyZWU9bmV3IG8odGhpcyl9ZnVuY3Rpb24gdih0KXtpZihzPXN8fG4oMjEpLCEoZC5jYWxsKHYsdGhpcyl8fHRoaXMgaW5zdGFuY2VvZiBzKSlyZXR1cm4gbmV3IHYodCk7dGhpcy5fd3JpdGFibGVTdGF0ZT1uZXcgeSh0LHRoaXMpLHRoaXMud3JpdGFibGU9ITAsdCYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQud3JpdGUmJih0aGlzLl93cml0ZT10LndyaXRlKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LndyaXRldiYmKHRoaXMuX3dyaXRldj10LndyaXRldiksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5kZXN0cm95JiYodGhpcy5fZGVzdHJveT10LmRlc3Ryb3kpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZmluYWwmJih0aGlzLl9maW5hbD10LmZpbmFsKSksZi5jYWxsKHRoaXMpfWZ1bmN0aW9uIGIodCxlLG4scixpLGEsbyl7ZS53cml0ZWxlbj1yLGUud3JpdGVjYj1vLGUud3JpdGluZz0hMCxlLnN5bmM9ITAsbj90Ll93cml0ZXYoaSxlLm9ud3JpdGUpOnQuX3dyaXRlKGksYSxlLm9ud3JpdGUpLGUuc3luYz0hMX1mdW5jdGlvbiB3KHQsZSxuLHIpe258fGZ1bmN0aW9uKHQsZSl7MD09PWUubGVuZ3RoJiZlLm5lZWREcmFpbiYmKGUubmVlZERyYWluPSExLHQuZW1pdChcImRyYWluXCIpKX0odCxlKSxlLnBlbmRpbmdjYi0tLHIoKSxTKHQsZSl9ZnVuY3Rpb24gXyh0LGUpe2UuYnVmZmVyUHJvY2Vzc2luZz0hMDt2YXIgbj1lLmJ1ZmZlcmVkUmVxdWVzdDtpZih0Ll93cml0ZXYmJm4mJm4ubmV4dCl7dmFyIHI9ZS5idWZmZXJlZFJlcXVlc3RDb3VudCxpPW5ldyBBcnJheShyKSxhPWUuY29ya2VkUmVxdWVzdHNGcmVlO2EuZW50cnk9bjtmb3IodmFyIHM9MCx1PSEwO247KWlbc109bixuLmlzQnVmfHwodT0hMSksbj1uLm5leHQscys9MTtpLmFsbEJ1ZmZlcnM9dSxiKHQsZSwhMCxlLmxlbmd0aCxpLFwiXCIsYS5maW5pc2gpLGUucGVuZGluZ2NiKyssZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwsYS5uZXh0PyhlLmNvcmtlZFJlcXVlc3RzRnJlZT1hLm5leHQsYS5uZXh0PW51bGwpOmUuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBvKGUpLGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MH1lbHNle2Zvcig7bjspe3ZhciBjPW4uY2h1bmssbD1uLmVuY29kaW5nLGY9bi5jYWxsYmFjaztpZihiKHQsZSwhMSxlLm9iamVjdE1vZGU/MTpjLmxlbmd0aCxjLGwsZiksbj1uLm5leHQsZS5idWZmZXJlZFJlcXVlc3RDb3VudC0tLGUud3JpdGluZylicmVha31udWxsPT09biYmKGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsKX1lLmJ1ZmZlcmVkUmVxdWVzdD1uLGUuYnVmZmVyUHJvY2Vzc2luZz0hMX1mdW5jdGlvbiB4KHQpe3JldHVybiB0LmVuZGluZyYmMD09PXQubGVuZ3RoJiZudWxsPT09dC5idWZmZXJlZFJlcXVlc3QmJiF0LmZpbmlzaGVkJiYhdC53cml0aW5nfWZ1bmN0aW9uIEUodCxlKXt0Ll9maW5hbChmdW5jdGlvbihuKXtlLnBlbmRpbmdjYi0tLG4mJnQuZW1pdChcImVycm9yXCIsbiksZS5wcmVmaW5pc2hlZD0hMCx0LmVtaXQoXCJwcmVmaW5pc2hcIiksUyh0LGUpfSl9ZnVuY3Rpb24gUyh0LGUpe3ZhciBuPXgoZSk7cmV0dXJuIG4mJighZnVuY3Rpb24odCxlKXtlLnByZWZpbmlzaGVkfHxlLmZpbmFsQ2FsbGVkfHwoXCJmdW5jdGlvblwiPT10eXBlb2YgdC5fZmluYWw/KGUucGVuZGluZ2NiKyssZS5maW5hbENhbGxlZD0hMCxhLm5leHRUaWNrKEUsdCxlKSk6KGUucHJlZmluaXNoZWQ9ITAsdC5lbWl0KFwicHJlZmluaXNoXCIpKSl9KHQsZSksMD09PWUucGVuZGluZ2NiJiYoZS5maW5pc2hlZD0hMCx0LmVtaXQoXCJmaW5pc2hcIikpKSxufWMuaW5oZXJpdHModixmKSx5LnByb3RvdHlwZS5nZXRCdWZmZXI9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5idWZmZXJlZFJlcXVlc3QsZT1bXTt0OyllLnB1c2godCksdD10Lm5leHQ7cmV0dXJuIGV9LGZ1bmN0aW9uKCl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh5LnByb3RvdHlwZSxcImJ1ZmZlclwiLHtnZXQ6bC5kZXByZWNhdGUoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRCdWZmZXIoKX0sXCJfd3JpdGFibGVTdGF0ZS5idWZmZXIgaXMgZGVwcmVjYXRlZC4gVXNlIF93cml0YWJsZVN0YXRlLmdldEJ1ZmZlciBpbnN0ZWFkLlwiLFwiREVQMDAwM1wiKX0pfWNhdGNoKHQpe319KCksXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaGFzSW5zdGFuY2UmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdPyhkPUZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2LFN5bWJvbC5oYXNJbnN0YW5jZSx7dmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuISFkLmNhbGwodGhpcyx0KXx8dGhpcz09PXYmJih0JiZ0Ll93cml0YWJsZVN0YXRlIGluc3RhbmNlb2YgeSl9fSkpOmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiB0aGlzfSx2LnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKCl7dGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJDYW5ub3QgcGlwZSwgbm90IHJlYWRhYmxlXCIpKX0sdi5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9dGhpcy5fd3JpdGFibGVTdGF0ZSxvPSExLHM9IWkub2JqZWN0TW9kZSYmKHI9dCxoLmlzQnVmZmVyKHIpfHxyIGluc3RhbmNlb2YgcCk7cmV0dXJuIHMmJiFoLmlzQnVmZmVyKHQpJiYodD1mdW5jdGlvbih0KXtyZXR1cm4gaC5mcm9tKHQpfSh0KSksXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKG49ZSxlPW51bGwpLHM/ZT1cImJ1ZmZlclwiOmV8fChlPWkuZGVmYXVsdEVuY29kaW5nKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBuJiYobj1nKSxpLmVuZGVkP2Z1bmN0aW9uKHQsZSl7dmFyIG49bmV3IEVycm9yKFwid3JpdGUgYWZ0ZXIgZW5kXCIpO3QuZW1pdChcImVycm9yXCIsbiksYS5uZXh0VGljayhlLG4pfSh0aGlzLG4pOihzfHxmdW5jdGlvbih0LGUsbixyKXt2YXIgaT0hMCxvPSExO3JldHVybiBudWxsPT09bj9vPW5ldyBUeXBlRXJyb3IoXCJNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbVwiKTpcInN0cmluZ1wiPT10eXBlb2Ygbnx8dm9pZCAwPT09bnx8ZS5vYmplY3RNb2RlfHwobz1uZXcgVHlwZUVycm9yKFwiSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVua1wiKSksbyYmKHQuZW1pdChcImVycm9yXCIsbyksYS5uZXh0VGljayhyLG8pLGk9ITEpLGl9KHRoaXMsaSx0LG4pKSYmKGkucGVuZGluZ2NiKyssbz1mdW5jdGlvbih0LGUsbixyLGksYSl7aWYoIW4pe3ZhciBvPWZ1bmN0aW9uKHQsZSxuKXt0Lm9iamVjdE1vZGV8fCExPT09dC5kZWNvZGVTdHJpbmdzfHxcInN0cmluZ1wiIT10eXBlb2YgZXx8KGU9aC5mcm9tKGUsbikpO3JldHVybiBlfShlLHIsaSk7ciE9PW8mJihuPSEwLGk9XCJidWZmZXJcIixyPW8pfXZhciBzPWUub2JqZWN0TW9kZT8xOnIubGVuZ3RoO2UubGVuZ3RoKz1zO3ZhciB1PWUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyazt1fHwoZS5uZWVkRHJhaW49ITApO2lmKGUud3JpdGluZ3x8ZS5jb3JrZWQpe3ZhciBjPWUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9e2NodW5rOnIsZW5jb2Rpbmc6aSxpc0J1ZjpuLGNhbGxiYWNrOmEsbmV4dDpudWxsfSxjP2MubmV4dD1lLmxhc3RCdWZmZXJlZFJlcXVlc3Q6ZS5idWZmZXJlZFJlcXVlc3Q9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0LGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQrPTF9ZWxzZSBiKHQsZSwhMSxzLHIsaSxhKTtyZXR1cm4gdX0odGhpcyxpLHMsdCxlLG4pKSxvfSx2LnByb3RvdHlwZS5jb3JrPWZ1bmN0aW9uKCl7dGhpcy5fd3JpdGFibGVTdGF0ZS5jb3JrZWQrK30sdi5wcm90b3R5cGUudW5jb3JrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fd3JpdGFibGVTdGF0ZTt0LmNvcmtlZCYmKHQuY29ya2VkLS0sdC53cml0aW5nfHx0LmNvcmtlZHx8dC5maW5pc2hlZHx8dC5idWZmZXJQcm9jZXNzaW5nfHwhdC5idWZmZXJlZFJlcXVlc3R8fF8odGhpcyx0KSl9LHYucHJvdG90eXBlLnNldERlZmF1bHRFbmNvZGluZz1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9dC50b0xvd2VyQ2FzZSgpKSwhKFtcImhleFwiLFwidXRmOFwiLFwidXRmLThcIixcImFzY2lpXCIsXCJiaW5hcnlcIixcImJhc2U2NFwiLFwidWNzMlwiLFwidWNzLTJcIixcInV0ZjE2bGVcIixcInV0Zi0xNmxlXCIsXCJyYXdcIl0uaW5kZXhPZigodCtcIlwiKS50b0xvd2VyQ2FzZSgpKT4tMSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK3QpO3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmRlZmF1bHRFbmNvZGluZz10LHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2LnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSksdi5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxuKXtuKG5ldyBFcnJvcihcIl93cml0ZSgpIGlzIG5vdCBpbXBsZW1lbnRlZFwiKSl9LHYucHJvdG90eXBlLl93cml0ZXY9bnVsbCx2LnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMuX3dyaXRhYmxlU3RhdGU7XCJmdW5jdGlvblwiPT10eXBlb2YgdD8obj10LHQ9bnVsbCxlPW51bGwpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJihuPWUsZT1udWxsKSxudWxsIT10JiZ0aGlzLndyaXRlKHQsZSksci5jb3JrZWQmJihyLmNvcmtlZD0xLHRoaXMudW5jb3JrKCkpLHIuZW5kaW5nfHxyLmZpbmlzaGVkfHxmdW5jdGlvbih0LGUsbil7ZS5lbmRpbmc9ITAsUyh0LGUpLG4mJihlLmZpbmlzaGVkP2EubmV4dFRpY2sobik6dC5vbmNlKFwiZmluaXNoXCIsbikpO2UuZW5kZWQ9ITAsdC53cml0YWJsZT0hMX0odGhpcyxyLG4pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkodi5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPXQpfX0pLHYucHJvdG90eXBlLmRlc3Ryb3k9bS5kZXN0cm95LHYucHJvdG90eXBlLl91bmRlc3Ryb3k9bS51bmRlc3Ryb3ksdi5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLmVuZCgpLGUodCl9fSkuY2FsbCh0aGlzLG4oMTQpLG4oODMpLnNldEltbWVkaWF0ZSxuKDExKSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQpLkJ1ZmZlcixpPW4oMiksYT1uKDg2KSxvPW5ldyBBcnJheSgxNikscz1bMCwxLDIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwxNSw3LDQsMTMsMSwxMCw2LDE1LDMsMTIsMCw5LDUsMiwxNCwxMSw4LDMsMTAsMTQsNCw5LDE1LDgsMSwyLDcsMCw2LDEzLDExLDUsMTIsMSw5LDExLDEwLDAsOCwxMiw0LDEzLDMsNywxNSwxNCw1LDYsMiw0LDAsNSw5LDcsMTIsMiwxMCwxNCwxLDMsOCwxMSw2LDE1LDEzXSx1PVs1LDE0LDcsMCw5LDIsMTEsNCwxMyw2LDE1LDgsMSwxMCwzLDEyLDYsMTEsMyw3LDAsMTMsNSwxMCwxNCwxNSw4LDEyLDQsOSwxLDIsMTUsNSwxLDMsNywxNCw2LDksMTEsOCwxMiwyLDEwLDAsNCwxMyw4LDYsNCwxLDMsMTEsMTUsMCw1LDEyLDIsMTMsOSw3LDEwLDE0LDEyLDE1LDEwLDQsMSw1LDgsNyw2LDIsMTMsMTQsMCwzLDksMTFdLGM9WzExLDE0LDE1LDEyLDUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdLGw9WzgsOSw5LDExLDEzLDE1LDE1LDUsNyw3LDgsMTEsMTQsMTQsMTIsNiw5LDEzLDE1LDcsMTIsOCw5LDExLDcsNywxMiw3LDYsMTUsMTMsMTEsOSw3LDE1LDExLDgsNiw2LDE0LDEyLDEzLDUsMTQsMTMsMTMsNyw1LDE1LDUsOCwxMSwxNCwxNCw2LDE0LDYsOSwxMiw5LDEyLDUsMTUsOCw4LDUsMTIsOSwxMiw1LDE0LDYsOCwxMyw2LDUsMTUsMTMsMTEsMTFdLGY9WzAsMTUxODUwMDI0OSwxODU5Nzc1MzkzLDI0MDA5NTk3MDgsMjg0MDg1MzgzOF0saD1bMTM1MjgyOTkyNiwxNTQ4NjAzNjg0LDE4MzYwNzI2OTEsMjA1Mzk5NDIxNywwXTtmdW5jdGlvbiBwKCl7YS5jYWxsKHRoaXMsNjQpLHRoaXMuX2E9MTczMjU4NDE5Myx0aGlzLl9iPTQwMjMyMzM0MTcsdGhpcy5fYz0yNTYyMzgzMTAyLHRoaXMuX2Q9MjcxNzMzODc4LHRoaXMuX2U9MzI4NTM3NzUyMH1mdW5jdGlvbiBkKHQsZSl7cmV0dXJuIHQ8PGV8dD4+PjMyLWV9ZnVuY3Rpb24gbSh0LGUsbixyLGksYSxvLHMpe3JldHVybiBkKHQrKGVebl5yKSthK298MCxzKStpfDB9ZnVuY3Rpb24gZyh0LGUsbixyLGksYSxvLHMpe3JldHVybiBkKHQrKGUmbnx+ZSZyKSthK298MCxzKStpfDB9ZnVuY3Rpb24geSh0LGUsbixyLGksYSxvLHMpe3JldHVybiBkKHQrKChlfH5uKV5yKSthK298MCxzKStpfDB9ZnVuY3Rpb24gdih0LGUsbixyLGksYSxvLHMpe3JldHVybiBkKHQrKGUmcnxuJn5yKSthK298MCxzKStpfDB9ZnVuY3Rpb24gYih0LGUsbixyLGksYSxvLHMpe3JldHVybiBkKHQrKGVeKG58fnIpKSthK298MCxzKStpfDB9aShwLGEpLHAucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9byxlPTA7ZTwxNjsrK2UpdFtlXT10aGlzLl9ibG9jay5yZWFkSW50MzJMRSg0KmUpO2Zvcih2YXIgbj0wfHRoaXMuX2Escj0wfHRoaXMuX2IsaT0wfHRoaXMuX2MsYT0wfHRoaXMuX2QscD0wfHRoaXMuX2Usdz0wfHRoaXMuX2EsXz0wfHRoaXMuX2IseD0wfHRoaXMuX2MsRT0wfHRoaXMuX2QsUz0wfHRoaXMuX2UsTj0wO048ODA7Tis9MSl7dmFyIEksTztOPDE2PyhJPW0obixyLGksYSxwLHRbc1tOXV0sZlswXSxjW05dKSxPPWIodyxfLHgsRSxTLHRbdVtOXV0saFswXSxsW05dKSk6TjwzMj8oST1nKG4scixpLGEscCx0W3NbTl1dLGZbMV0sY1tOXSksTz12KHcsXyx4LEUsUyx0W3VbTl1dLGhbMV0sbFtOXSkpOk48NDg/KEk9eShuLHIsaSxhLHAsdFtzW05dXSxmWzJdLGNbTl0pLE89eSh3LF8seCxFLFMsdFt1W05dXSxoWzJdLGxbTl0pKTpOPDY0PyhJPXYobixyLGksYSxwLHRbc1tOXV0sZlszXSxjW05dKSxPPWcodyxfLHgsRSxTLHRbdVtOXV0saFszXSxsW05dKSk6KEk9YihuLHIsaSxhLHAsdFtzW05dXSxmWzRdLGNbTl0pLE89bSh3LF8seCxFLFMsdFt1W05dXSxoWzRdLGxbTl0pKSxuPXAscD1hLGE9ZChpLDEwKSxpPXIscj1JLHc9UyxTPUUsRT1kKHgsMTApLHg9XyxfPU99dmFyIGs9dGhpcy5fYitpK0V8MDt0aGlzLl9iPXRoaXMuX2MrYStTfDAsdGhpcy5fYz10aGlzLl9kK3Ard3wwLHRoaXMuX2Q9dGhpcy5fZStuK198MCx0aGlzLl9lPXRoaXMuX2Ercit4fDAsdGhpcy5fYT1rfSxwLnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKCl7dGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK109MTI4LHRoaXMuX2Jsb2NrT2Zmc2V0PjU2JiYodGhpcy5fYmxvY2suZmlsbCgwLHRoaXMuX2Jsb2NrT2Zmc2V0LDY0KSx0aGlzLl91cGRhdGUoKSx0aGlzLl9ibG9ja09mZnNldD0wKSx0aGlzLl9ibG9jay5maWxsKDAsdGhpcy5fYmxvY2tPZmZzZXQsNTYpLHRoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzBdLDU2KSx0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFsxXSw2MCksdGhpcy5fdXBkYXRlKCk7dmFyIHQ9ci5hbGxvYz9yLmFsbG9jKDIwKTpuZXcgcigyMCk7cmV0dXJuIHQud3JpdGVJbnQzMkxFKHRoaXMuX2EsMCksdC53cml0ZUludDMyTEUodGhpcy5fYiw0KSx0LndyaXRlSW50MzJMRSh0aGlzLl9jLDgpLHQud3JpdGVJbnQzMkxFKHRoaXMuX2QsMTIpLHQud3JpdGVJbnQzMkxFKHRoaXMuX2UsMTYpLHR9LHQuZXhwb3J0cz1wfSxmdW5jdGlvbih0LGUsbil7KGU9dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3Q9dC50b0xvd2VyQ2FzZSgpO3ZhciBuPWVbdF07aWYoIW4pdGhyb3cgbmV3IEVycm9yKHQrXCIgaXMgbm90IHN1cHBvcnRlZCAod2UgYWNjZXB0IHB1bGwgcmVxdWVzdHMpXCIpO3JldHVybiBuZXcgbn0pLnNoYT1uKDE0OCksZS5zaGExPW4oMTQ5KSxlLnNoYTIyND1uKDE1MCksZS5zaGEyNTY9big5MSksZS5zaGEzODQ9bigxNTEpLGUuc2hhNTEyPW4oOTIpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS51dGlscz1uKDE1NyksZS5DaXBoZXI9bigxNTgpLGUuREVTPW4oMTU5KSxlLkNCQz1uKDE2MCksZS5FREU9bigxNjEpfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxNjIpLGk9bigxNzApLGE9bigxMDIpO2UuY3JlYXRlQ2lwaGVyPWUuQ2lwaGVyPXIuY3JlYXRlQ2lwaGVyLGUuY3JlYXRlQ2lwaGVyaXY9ZS5DaXBoZXJpdj1yLmNyZWF0ZUNpcGhlcml2LGUuY3JlYXRlRGVjaXBoZXI9ZS5EZWNpcGhlcj1pLmNyZWF0ZURlY2lwaGVyLGUuY3JlYXRlRGVjaXBoZXJpdj1lLkRlY2lwaGVyaXY9aS5jcmVhdGVEZWNpcGhlcml2LGUubGlzdENpcGhlcnM9ZS5nZXRDaXBoZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5rZXlzKGEpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPXtFQ0I6bigxNjMpLENCQzpuKDE2NCksQ0ZCOm4oMTY1KSxDRkI4Om4oMTY2KSxDRkIxOm4oMTY3KSxPRkI6bigxNjgpLENUUjpuKDEwMCksR0NNOm4oMTAwKX0saT1uKDEwMik7Zm9yKHZhciBhIGluIGkpaVthXS5tb2R1bGU9cltpW2FdLm1vZGVdO3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpe3ZhciByPW4oNSksaT1uKDIyKTtmdW5jdGlvbiBhKHQsbil7dmFyIGk9ZnVuY3Rpb24odCl7dmFyIGU9byh0KTtyZXR1cm57YmxpbmRlcjplLnRvUmVkKHIubW9udCh0Lm1vZHVsdXMpKS5yZWRQb3cobmV3IHIodC5wdWJsaWNFeHBvbmVudCkpLmZyb21SZWQoKSx1bmJsaW5kZXI6ZS5pbnZtKHQubW9kdWx1cyl9fShuKSxhPW4ubW9kdWx1cy5ieXRlTGVuZ3RoKCkscz0oci5tb250KG4ubW9kdWx1cyksbmV3IHIodCkubXVsKGkuYmxpbmRlcikudW1vZChuLm1vZHVsdXMpKSx1PXMudG9SZWQoci5tb250KG4ucHJpbWUxKSksYz1zLnRvUmVkKHIubW9udChuLnByaW1lMikpLGw9bi5jb2VmZmljaWVudCxmPW4ucHJpbWUxLGg9bi5wcmltZTIscD11LnJlZFBvdyhuLmV4cG9uZW50MSksZD1jLnJlZFBvdyhuLmV4cG9uZW50Mik7cD1wLmZyb21SZWQoKSxkPWQuZnJvbVJlZCgpO3ZhciBtPXAuaXN1YihkKS5pbXVsKGwpLnVtb2QoZik7cmV0dXJuIG0uaW11bChoKSxkLmlhZGQobSksbmV3IGUoZC5pbXVsKGkudW5ibGluZGVyKS51bW9kKG4ubW9kdWx1cykudG9BcnJheSghMSxhKSl9ZnVuY3Rpb24gbyh0KXtmb3IodmFyIGU9dC5tb2R1bHVzLmJ5dGVMZW5ndGgoKSxuPW5ldyByKGkoZSkpO24uY21wKHQubW9kdWx1cyk+PTB8fCFuLnVtb2QodC5wcmltZTEpfHwhbi51bW9kKHQucHJpbWUyKTspbj1uZXcgcihpKGUpKTtyZXR1cm4gbn10LmV4cG9ydHM9YSxhLmdldHI9b30pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lO3IudXRpbHM9bigxNSksci5jb21tb249bigzMyksci5zaGE9bigxODcpLHIucmlwZW1kPW4oMTkxKSxyLmhtYWM9bigxOTIpLHIuc2hhMT1yLnNoYS5zaGExLHIuc2hhMjU2PXIuc2hhLnNoYTI1NixyLnNoYTIyND1yLnNoYS5zaGEyMjQsci5zaGEzODQ9ci5zaGEuc2hhMzg0LHIuc2hhNTEyPXIuc2hhLnNoYTUxMixyLnJpcGVtZDE2MD1yLnJpcGVtZC5yaXBlbWQxNjB9LCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7dmFyIHI9dm9pZCAwIT09dCYmdHx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGZ8fHdpbmRvdyxpPUZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtmdW5jdGlvbiBhKHQsZSl7dGhpcy5faWQ9dCx0aGlzLl9jbGVhckZuPWV9ZS5zZXRUaW1lb3V0PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBhKGkuY2FsbChzZXRUaW1lb3V0LHIsYXJndW1lbnRzKSxjbGVhclRpbWVvdXQpfSxlLnNldEludGVydmFsPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBhKGkuY2FsbChzZXRJbnRlcnZhbCxyLGFyZ3VtZW50cyksY2xlYXJJbnRlcnZhbCl9LGUuY2xlYXJUaW1lb3V0PWUuY2xlYXJJbnRlcnZhbD1mdW5jdGlvbih0KXt0JiZ0LmNsb3NlKCl9LGEucHJvdG90eXBlLnVucmVmPWEucHJvdG90eXBlLnJlZj1mdW5jdGlvbigpe30sYS5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckZuLmNhbGwocix0aGlzLl9pZCl9LGUuZW5yb2xsPWZ1bmN0aW9uKHQsZSl7Y2xlYXJUaW1lb3V0KHQuX2lkbGVUaW1lb3V0SWQpLHQuX2lkbGVUaW1lb3V0PWV9LGUudW5lbnJvbGw9ZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KHQuX2lkbGVUaW1lb3V0SWQpLHQuX2lkbGVUaW1lb3V0PS0xfSxlLl91bnJlZkFjdGl2ZT1lLmFjdGl2ZT1mdW5jdGlvbih0KXtjbGVhclRpbWVvdXQodC5faWRsZVRpbWVvdXRJZCk7dmFyIGU9dC5faWRsZVRpbWVvdXQ7ZT49MCYmKHQuX2lkbGVUaW1lb3V0SWQ9c2V0VGltZW91dChmdW5jdGlvbigpe3QuX29uVGltZW91dCYmdC5fb25UaW1lb3V0KCl9LGUpKX0sbigxMzYpLGUuc2V0SW1tZWRpYXRlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmLnNldEltbWVkaWF0ZXx8dm9pZCAwIT09dCYmdC5zZXRJbW1lZGlhdGV8fHRoaXMmJnRoaXMuc2V0SW1tZWRpYXRlLGUuY2xlYXJJbW1lZGlhdGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuY2xlYXJJbW1lZGlhdGV8fHZvaWQgMCE9PXQmJnQuY2xlYXJJbW1lZGlhdGV8fHRoaXMmJnRoaXMuY2xlYXJJbW1lZGlhdGV9KS5jYWxsKHRoaXMsbigxMSkpfSxmdW5jdGlvbih0LGUpe3ZhciBuPXt9LnRvU3RyaW5nO3QuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PW4uY2FsbCh0KX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLnJhbmRvbUJ5dGVzPWUucm5nPWUucHNldWRvUmFuZG9tQnl0ZXM9ZS5wcm5nPW4oMjIpLGUuY3JlYXRlSGFzaD1lLkhhc2g9bigzMCksZS5jcmVhdGVIbWFjPWUuSG1hYz1uKDkzKTt2YXIgcj1uKDE1MyksaT1PYmplY3Qua2V5cyhyKSxhPVtcInNoYTFcIixcInNoYTIyNFwiLFwic2hhMjU2XCIsXCJzaGEzODRcIixcInNoYTUxMlwiLFwibWQ1XCIsXCJybWQxNjBcIl0uY29uY2F0KGkpO2UuZ2V0SGFzaGVzPWZ1bmN0aW9uKCl7cmV0dXJuIGF9O3ZhciBvPW4oOTYpO2UucGJrZGYyPW8ucGJrZGYyLGUucGJrZGYyU3luYz1vLnBia2RmMlN5bmM7dmFyIHM9bigxNTUpO2UuQ2lwaGVyPXMuQ2lwaGVyLGUuY3JlYXRlQ2lwaGVyPXMuY3JlYXRlQ2lwaGVyLGUuQ2lwaGVyaXY9cy5DaXBoZXJpdixlLmNyZWF0ZUNpcGhlcml2PXMuY3JlYXRlQ2lwaGVyaXYsZS5EZWNpcGhlcj1zLkRlY2lwaGVyLGUuY3JlYXRlRGVjaXBoZXI9cy5jcmVhdGVEZWNpcGhlcixlLkRlY2lwaGVyaXY9cy5EZWNpcGhlcml2LGUuY3JlYXRlRGVjaXBoZXJpdj1zLmNyZWF0ZURlY2lwaGVyaXYsZS5nZXRDaXBoZXJzPXMuZ2V0Q2lwaGVycyxlLmxpc3RDaXBoZXJzPXMubGlzdENpcGhlcnM7dmFyIHU9bigxNzIpO2UuRGlmZmllSGVsbG1hbkdyb3VwPXUuRGlmZmllSGVsbG1hbkdyb3VwLGUuY3JlYXRlRGlmZmllSGVsbG1hbkdyb3VwPXUuY3JlYXRlRGlmZmllSGVsbG1hbkdyb3VwLGUuZ2V0RGlmZmllSGVsbG1hbj11LmdldERpZmZpZUhlbGxtYW4sZS5jcmVhdGVEaWZmaWVIZWxsbWFuPXUuY3JlYXRlRGlmZmllSGVsbG1hbixlLkRpZmZpZUhlbGxtYW49dS5EaWZmaWVIZWxsbWFuO3ZhciBjPW4oMTc4KTtlLmNyZWF0ZVNpZ249Yy5jcmVhdGVTaWduLGUuU2lnbj1jLlNpZ24sZS5jcmVhdGVWZXJpZnk9Yy5jcmVhdGVWZXJpZnksZS5WZXJpZnk9Yy5WZXJpZnksZS5jcmVhdGVFQ0RIPW4oMjE2KTt2YXIgbD1uKDIxNyk7ZS5wdWJsaWNFbmNyeXB0PWwucHVibGljRW5jcnlwdCxlLnByaXZhdGVFbmNyeXB0PWwucHJpdmF0ZUVuY3J5cHQsZS5wdWJsaWNEZWNyeXB0PWwucHVibGljRGVjcnlwdCxlLnByaXZhdGVEZWNyeXB0PWwucHJpdmF0ZURlY3J5cHQ7dmFyIGY9bigyMjApO2UucmFuZG9tRmlsbD1mLnJhbmRvbUZpbGwsZS5yYW5kb21GaWxsU3luYz1mLnJhbmRvbUZpbGxTeW5jLGUuY3JlYXRlQ3JlZGVudGlhbHM9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoW1wic29ycnksIGNyZWF0ZUNyZWRlbnRpYWxzIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXRcIixcIndlIGFjY2VwdCBwdWxsIHJlcXVlc3RzXCIsXCJodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvLWJyb3dzZXJpZnkvY3J5cHRvLWJyb3dzZXJpZnlcIl0uam9pbihcIlxcblwiKSl9LGUuY29uc3RhbnRzPXtESF9DSEVDS19QX05PVF9TQUZFX1BSSU1FOjIsREhfQ0hFQ0tfUF9OT1RfUFJJTUU6MSxESF9VTkFCTEVfVE9fQ0hFQ0tfR0VORVJBVE9SOjQsREhfTk9UX1NVSVRBQkxFX0dFTkVSQVRPUjo4LE5QTl9FTkFCTEVEOjEsQUxQTl9FTkFCTEVEOjEsUlNBX1BLQ1MxX1BBRERJTkc6MSxSU0FfU1NMVjIzX1BBRERJTkc6MixSU0FfTk9fUEFERElORzozLFJTQV9QS0NTMV9PQUVQX1BBRERJTkc6NCxSU0FfWDkzMV9QQURESU5HOjUsUlNBX1BLQ1MxX1BTU19QQURESU5HOjYsUE9JTlRfQ09OVkVSU0lPTl9DT01QUkVTU0VEOjIsUE9JTlRfQ09OVkVSU0lPTl9VTkNPTVBSRVNTRUQ6NCxQT0lOVF9DT05WRVJTSU9OX0hZQlJJRDo2fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMykuQnVmZmVyLGk9big1NykuVHJhbnNmb3JtO2Z1bmN0aW9uIGEodCl7aS5jYWxsKHRoaXMpLHRoaXMuX2Jsb2NrPXIuYWxsb2NVbnNhZmUodCksdGhpcy5fYmxvY2tTaXplPXQsdGhpcy5fYmxvY2tPZmZzZXQ9MCx0aGlzLl9sZW5ndGg9WzAsMCwwLDBdLHRoaXMuX2ZpbmFsaXplZD0hMX1uKDIpKGEsaSksYS5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbih0LGUsbil7dmFyIHI9bnVsbDt0cnl7dGhpcy51cGRhdGUodCxlKX1jYXRjaCh0KXtyPXR9bihyKX0sYS5wcm90b3R5cGUuX2ZsdXNoPWZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7dHJ5e3RoaXMucHVzaCh0aGlzLmRpZ2VzdCgpKX1jYXRjaCh0KXtlPXR9dChlKX0sYS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSl7aWYoZnVuY3Rpb24odCxlKXtpZighci5pc0J1ZmZlcih0KSYmXCJzdHJpbmdcIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihlK1wiIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBidWZmZXJcIil9KHQsXCJEYXRhXCIpLHRoaXMuX2ZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3IoXCJEaWdlc3QgYWxyZWFkeSBjYWxsZWRcIik7ci5pc0J1ZmZlcih0KXx8KHQ9ci5mcm9tKHQsZSkpO2Zvcih2YXIgbj10aGlzLl9ibG9jayxpPTA7dGhpcy5fYmxvY2tPZmZzZXQrdC5sZW5ndGgtaT49dGhpcy5fYmxvY2tTaXplOyl7Zm9yKHZhciBhPXRoaXMuX2Jsb2NrT2Zmc2V0O2E8dGhpcy5fYmxvY2tTaXplOyluW2ErK109dFtpKytdO3RoaXMuX3VwZGF0ZSgpLHRoaXMuX2Jsb2NrT2Zmc2V0PTB9Zm9yKDtpPHQubGVuZ3RoOyluW3RoaXMuX2Jsb2NrT2Zmc2V0KytdPXRbaSsrXTtmb3IodmFyIG89MCxzPTgqdC5sZW5ndGg7cz4wOysrbyl0aGlzLl9sZW5ndGhbb10rPXMsKHM9dGhpcy5fbGVuZ3RoW29dLzQyOTQ5NjcyOTZ8MCk+MCYmKHRoaXMuX2xlbmd0aFtvXS09NDI5NDk2NzI5NipzKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIl91cGRhdGUgaXMgbm90IGltcGxlbWVudGVkXCIpfSxhLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24odCl7aWYodGhpcy5fZmluYWxpemVkKXRocm93IG5ldyBFcnJvcihcIkRpZ2VzdCBhbHJlYWR5IGNhbGxlZFwiKTt0aGlzLl9maW5hbGl6ZWQ9ITA7dmFyIGU9dGhpcy5fZGlnZXN0KCk7dm9pZCAwIT09dCYmKGU9ZS50b1N0cmluZyh0KSksdGhpcy5fYmxvY2suZmlsbCgwKSx0aGlzLl9ibG9ja09mZnNldD0wO2Zvcih2YXIgbj0wO248NDsrK24pdGhpcy5fbGVuZ3RoW25dPTA7cmV0dXJuIGV9LGEucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJfZGlnZXN0IGlzIG5vdCBpbXBsZW1lbnRlZFwiKX0sdC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24oZSxyKXt2YXIgaT1uKDQxKTt0LmV4cG9ydHM9Yjt2YXIgYSxvPW4oODQpO2IuUmVhZGFibGVTdGF0ZT12O24oNTgpLkV2ZW50RW1pdHRlcjt2YXIgcz1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxpc3RlbmVycyhlKS5sZW5ndGh9LHU9big4OCksYz1uKDMpLkJ1ZmZlcixsPWUuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O3ZhciBmPW4oMzEpO2YuaW5oZXJpdHM9bigyKTt2YXIgaD1uKDEzOSkscD12b2lkIDA7cD1oJiZoLmRlYnVnbG9nP2guZGVidWdsb2coXCJzdHJlYW1cIik6ZnVuY3Rpb24oKXt9O3ZhciBkLG09bigxNDApLGc9big4OSk7Zi5pbmhlcml0cyhiLHUpO3ZhciB5PVtcImVycm9yXCIsXCJjbG9zZVwiLFwiZGVzdHJveVwiLFwicGF1c2VcIixcInJlc3VtZVwiXTtmdW5jdGlvbiB2KHQsZSl7dD10fHx7fTt2YXIgcj1lIGluc3RhbmNlb2YoYT1hfHxuKDIxKSk7dGhpcy5vYmplY3RNb2RlPSEhdC5vYmplY3RNb2RlLHImJih0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIXQucmVhZGFibGVPYmplY3RNb2RlKTt2YXIgaT10LmhpZ2hXYXRlck1hcmssbz10LnJlYWRhYmxlSGlnaFdhdGVyTWFyayxzPXRoaXMub2JqZWN0TW9kZT8xNjoxNjM4NDt0aGlzLmhpZ2hXYXRlck1hcms9aXx8MD09PWk/aTpyJiYob3x8MD09PW8pP286cyx0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspLHRoaXMuYnVmZmVyPW5ldyBtLHRoaXMubGVuZ3RoPTAsdGhpcy5waXBlcz1udWxsLHRoaXMucGlwZXNDb3VudD0wLHRoaXMuZmxvd2luZz1udWxsLHRoaXMuZW5kZWQ9ITEsdGhpcy5lbmRFbWl0dGVkPSExLHRoaXMucmVhZGluZz0hMSx0aGlzLnN5bmM9ITAsdGhpcy5uZWVkUmVhZGFibGU9ITEsdGhpcy5lbWl0dGVkUmVhZGFibGU9ITEsdGhpcy5yZWFkYWJsZUxpc3RlbmluZz0hMSx0aGlzLnJlc3VtZVNjaGVkdWxlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMSx0aGlzLmRlZmF1bHRFbmNvZGluZz10LmRlZmF1bHRFbmNvZGluZ3x8XCJ1dGY4XCIsdGhpcy5hd2FpdERyYWluPTAsdGhpcy5yZWFkaW5nTW9yZT0hMSx0aGlzLmRlY29kZXI9bnVsbCx0aGlzLmVuY29kaW5nPW51bGwsdC5lbmNvZGluZyYmKGR8fChkPW4oNDIpLlN0cmluZ0RlY29kZXIpLHRoaXMuZGVjb2Rlcj1uZXcgZCh0LmVuY29kaW5nKSx0aGlzLmVuY29kaW5nPXQuZW5jb2RpbmcpfWZ1bmN0aW9uIGIodCl7aWYoYT1hfHxuKDIxKSwhKHRoaXMgaW5zdGFuY2VvZiBiKSlyZXR1cm4gbmV3IGIodCk7dGhpcy5fcmVhZGFibGVTdGF0ZT1uZXcgdih0LHRoaXMpLHRoaXMucmVhZGFibGU9ITAsdCYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQucmVhZCYmKHRoaXMuX3JlYWQ9dC5yZWFkKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmRlc3Ryb3kmJih0aGlzLl9kZXN0cm95PXQuZGVzdHJveSkpLHUuY2FsbCh0aGlzKX1mdW5jdGlvbiB3KHQsZSxuLHIsaSl7dmFyIGEsbz10Ll9yZWFkYWJsZVN0YXRlO251bGw9PT1lPyhvLnJlYWRpbmc9ITEsZnVuY3Rpb24odCxlKXtpZihlLmVuZGVkKXJldHVybjtpZihlLmRlY29kZXIpe3ZhciBuPWUuZGVjb2Rlci5lbmQoKTtuJiZuLmxlbmd0aCYmKGUuYnVmZmVyLnB1c2gobiksZS5sZW5ndGgrPWUub2JqZWN0TW9kZT8xOm4ubGVuZ3RoKX1lLmVuZGVkPSEwLFModCl9KHQsbykpOihpfHwoYT1mdW5jdGlvbih0LGUpe3ZhciBuO3I9ZSxjLmlzQnVmZmVyKHIpfHxyIGluc3RhbmNlb2YgbHx8XCJzdHJpbmdcIj09dHlwZW9mIGV8fHZvaWQgMD09PWV8fHQub2JqZWN0TW9kZXx8KG49bmV3IFR5cGVFcnJvcihcIkludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmtcIikpO3ZhciByO3JldHVybiBufShvLGUpKSxhP3QuZW1pdChcImVycm9yXCIsYSk6by5vYmplY3RNb2RlfHxlJiZlLmxlbmd0aD4wPyhcInN0cmluZ1wiPT10eXBlb2YgZXx8by5vYmplY3RNb2RlfHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk9PT1jLnByb3RvdHlwZXx8KGU9ZnVuY3Rpb24odCl7cmV0dXJuIGMuZnJvbSh0KX0oZSkpLHI/by5lbmRFbWl0dGVkP3QuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwic3RyZWFtLnVuc2hpZnQoKSBhZnRlciBlbmQgZXZlbnRcIikpOl8odCxvLGUsITApOm8uZW5kZWQ/dC5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRlwiKSk6KG8ucmVhZGluZz0hMSxvLmRlY29kZXImJiFuPyhlPW8uZGVjb2Rlci53cml0ZShlKSxvLm9iamVjdE1vZGV8fDAhPT1lLmxlbmd0aD9fKHQsbyxlLCExKTpJKHQsbykpOl8odCxvLGUsITEpKSk6cnx8KG8ucmVhZGluZz0hMSkpO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4hdC5lbmRlZCYmKHQubmVlZFJlYWRhYmxlfHx0Lmxlbmd0aDx0LmhpZ2hXYXRlck1hcmt8fDA9PT10Lmxlbmd0aCl9KG8pfWZ1bmN0aW9uIF8odCxlLG4scil7ZS5mbG93aW5nJiYwPT09ZS5sZW5ndGgmJiFlLnN5bmM/KHQuZW1pdChcImRhdGFcIixuKSx0LnJlYWQoMCkpOihlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6bi5sZW5ndGgscj9lLmJ1ZmZlci51bnNoaWZ0KG4pOmUuYnVmZmVyLnB1c2gobiksZS5uZWVkUmVhZGFibGUmJlModCkpLEkodCxlKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoYi5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX3JlYWRhYmxlU3RhdGUmJnRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPXQpfX0pLGIucHJvdG90eXBlLmRlc3Ryb3k9Zy5kZXN0cm95LGIucHJvdG90eXBlLl91bmRlc3Ryb3k9Zy51bmRlc3Ryb3ksYi5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksZSh0KX0sYi5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0LGUpe3ZhciBuLHI9dGhpcy5fcmVhZGFibGVTdGF0ZTtyZXR1cm4gci5vYmplY3RNb2RlP249ITA6XCJzdHJpbmdcIj09dHlwZW9mIHQmJigoZT1lfHxyLmRlZmF1bHRFbmNvZGluZykhPT1yLmVuY29kaW5nJiYodD1jLmZyb20odCxlKSxlPVwiXCIpLG49ITApLHcodGhpcyx0LGUsITEsbil9LGIucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHcodGhpcyx0LG51bGwsITAsITEpfSxiLnByb3RvdHlwZS5pc1BhdXNlZD1mdW5jdGlvbigpe3JldHVybiExPT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nfSxiLnByb3RvdHlwZS5zZXRFbmNvZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gZHx8KGQ9big0MikuU3RyaW5nRGVjb2RlciksdGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyPW5ldyBkKHQpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dCx0aGlzfTt2YXIgeD04Mzg4NjA4O2Z1bmN0aW9uIEUodCxlKXtyZXR1cm4gdDw9MHx8MD09PWUubGVuZ3RoJiZlLmVuZGVkPzA6ZS5vYmplY3RNb2RlPzE6dCE9dD9lLmZsb3dpbmcmJmUubGVuZ3RoP2UuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6ZS5sZW5ndGg6KHQ+ZS5oaWdoV2F0ZXJNYXJrJiYoZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKHQpe3JldHVybiB0Pj14P3Q9eDoodC0tLHR8PXQ+Pj4xLHR8PXQ+Pj4yLHR8PXQ+Pj40LHR8PXQ+Pj44LHR8PXQ+Pj4xNix0KyspLHR9KHQpKSx0PD1lLmxlbmd0aD90OmUuZW5kZWQ/ZS5sZW5ndGg6KGUubmVlZFJlYWRhYmxlPSEwLDApKX1mdW5jdGlvbiBTKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7ZS5uZWVkUmVhZGFibGU9ITEsZS5lbWl0dGVkUmVhZGFibGV8fChwKFwiZW1pdFJlYWRhYmxlXCIsZS5mbG93aW5nKSxlLmVtaXR0ZWRSZWFkYWJsZT0hMCxlLnN5bmM/aS5uZXh0VGljayhOLHQpOk4odCkpfWZ1bmN0aW9uIE4odCl7cChcImVtaXQgcmVhZGFibGVcIiksdC5lbWl0KFwicmVhZGFibGVcIiksQyh0KX1mdW5jdGlvbiBJKHQsZSl7ZS5yZWFkaW5nTW9yZXx8KGUucmVhZGluZ01vcmU9ITAsaS5uZXh0VGljayhPLHQsZSkpfWZ1bmN0aW9uIE8odCxlKXtmb3IodmFyIG49ZS5sZW5ndGg7IWUucmVhZGluZyYmIWUuZmxvd2luZyYmIWUuZW5kZWQmJmUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyayYmKHAoXCJtYXliZVJlYWRNb3JlIHJlYWQgMFwiKSx0LnJlYWQoMCksbiE9PWUubGVuZ3RoKTspbj1lLmxlbmd0aDtlLnJlYWRpbmdNb3JlPSExfWZ1bmN0aW9uIGsodCl7cChcInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMFwiKSx0LnJlYWQoMCl9ZnVuY3Rpb24gQSh0LGUpe2UucmVhZGluZ3x8KHAoXCJyZXN1bWUgcmVhZCAwXCIpLHQucmVhZCgwKSksZS5yZXN1bWVTY2hlZHVsZWQ9ITEsZS5hd2FpdERyYWluPTAsdC5lbWl0KFwicmVzdW1lXCIpLEModCksZS5mbG93aW5nJiYhZS5yZWFkaW5nJiZ0LnJlYWQoMCl9ZnVuY3Rpb24gQyh0KXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2ZvcihwKFwiZmxvd1wiLGUuZmxvd2luZyk7ZS5mbG93aW5nJiZudWxsIT09dC5yZWFkKCk7KTt9ZnVuY3Rpb24gUCh0LGUpe3JldHVybiAwPT09ZS5sZW5ndGg/bnVsbDooZS5vYmplY3RNb2RlP249ZS5idWZmZXIuc2hpZnQoKTohdHx8dD49ZS5sZW5ndGg/KG49ZS5kZWNvZGVyP2UuYnVmZmVyLmpvaW4oXCJcIik6MT09PWUuYnVmZmVyLmxlbmd0aD9lLmJ1ZmZlci5oZWFkLmRhdGE6ZS5idWZmZXIuY29uY2F0KGUubGVuZ3RoKSxlLmJ1ZmZlci5jbGVhcigpKTpuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcjt0PGUuaGVhZC5kYXRhLmxlbmd0aD8ocj1lLmhlYWQuZGF0YS5zbGljZSgwLHQpLGUuaGVhZC5kYXRhPWUuaGVhZC5kYXRhLnNsaWNlKHQpKTpyPXQ9PT1lLmhlYWQuZGF0YS5sZW5ndGg/ZS5zaGlmdCgpOm4/ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmhlYWQscj0xLGk9bi5kYXRhO3QtPWkubGVuZ3RoO2Zvcig7bj1uLm5leHQ7KXt2YXIgYT1uLmRhdGEsbz10PmEubGVuZ3RoP2EubGVuZ3RoOnQ7aWYobz09PWEubGVuZ3RoP2krPWE6aSs9YS5zbGljZSgwLHQpLDA9PT0odC09bykpe289PT1hLmxlbmd0aD8oKytyLG4ubmV4dD9lLmhlYWQ9bi5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1uLG4uZGF0YT1hLnNsaWNlKG8pKTticmVha30rK3J9cmV0dXJuIGUubGVuZ3RoLT1yLGl9KHQsZSk6ZnVuY3Rpb24odCxlKXt2YXIgbj1jLmFsbG9jVW5zYWZlKHQpLHI9ZS5oZWFkLGk9MTtyLmRhdGEuY29weShuKSx0LT1yLmRhdGEubGVuZ3RoO2Zvcig7cj1yLm5leHQ7KXt2YXIgYT1yLmRhdGEsbz10PmEubGVuZ3RoP2EubGVuZ3RoOnQ7aWYoYS5jb3B5KG4sbi5sZW5ndGgtdCwwLG8pLDA9PT0odC09bykpe289PT1hLmxlbmd0aD8oKytpLHIubmV4dD9lLmhlYWQ9ci5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1yLHIuZGF0YT1hLnNsaWNlKG8pKTticmVha30rK2l9cmV0dXJuIGUubGVuZ3RoLT1pLG59KHQsZSk7cmV0dXJuIHJ9KHQsZS5idWZmZXIsZS5kZWNvZGVyKSxuKTt2YXIgbn1mdW5jdGlvbiBUKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7aWYoZS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoJ1wiZW5kUmVhZGFibGUoKVwiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7ZS5lbmRFbWl0dGVkfHwoZS5lbmRlZD0hMCxpLm5leHRUaWNrKFIsZSx0KSl9ZnVuY3Rpb24gUih0LGUpe3QuZW5kRW1pdHRlZHx8MCE9PXQubGVuZ3RofHwodC5lbmRFbWl0dGVkPSEwLGUucmVhZGFibGU9ITEsZS5lbWl0KFwiZW5kXCIpKX1mdW5jdGlvbiBEKHQsZSl7Zm9yKHZhciBuPTAscj10Lmxlbmd0aDtuPHI7bisrKWlmKHRbbl09PT1lKXJldHVybiBuO3JldHVybi0xfWIucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCl7cChcInJlYWRcIix0KSx0PXBhcnNlSW50KHQsMTApO3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGUsbj10O2lmKDAhPT10JiYoZS5lbWl0dGVkUmVhZGFibGU9ITEpLDA9PT10JiZlLm5lZWRSZWFkYWJsZSYmKGUubGVuZ3RoPj1lLmhpZ2hXYXRlck1hcmt8fGUuZW5kZWQpKXJldHVybiBwKFwicmVhZDogZW1pdFJlYWRhYmxlXCIsZS5sZW5ndGgsZS5lbmRlZCksMD09PWUubGVuZ3RoJiZlLmVuZGVkP1QodGhpcyk6Uyh0aGlzKSxudWxsO2lmKDA9PT0odD1FKHQsZSkpJiZlLmVuZGVkKXJldHVybiAwPT09ZS5sZW5ndGgmJlQodGhpcyksbnVsbDt2YXIgcixpPWUubmVlZFJlYWRhYmxlO3JldHVybiBwKFwibmVlZCByZWFkYWJsZVwiLGkpLCgwPT09ZS5sZW5ndGh8fGUubGVuZ3RoLXQ8ZS5oaWdoV2F0ZXJNYXJrKSYmcChcImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrXCIsaT0hMCksZS5lbmRlZHx8ZS5yZWFkaW5nP3AoXCJyZWFkaW5nIG9yIGVuZGVkXCIsaT0hMSk6aSYmKHAoXCJkbyByZWFkXCIpLGUucmVhZGluZz0hMCxlLnN5bmM9ITAsMD09PWUubGVuZ3RoJiYoZS5uZWVkUmVhZGFibGU9ITApLHRoaXMuX3JlYWQoZS5oaWdoV2F0ZXJNYXJrKSxlLnN5bmM9ITEsZS5yZWFkaW5nfHwodD1FKG4sZSkpKSxudWxsPT09KHI9dD4wP1AodCxlKTpudWxsKT8oZS5uZWVkUmVhZGFibGU9ITAsdD0wKTplLmxlbmd0aC09dCwwPT09ZS5sZW5ndGgmJihlLmVuZGVkfHwoZS5uZWVkUmVhZGFibGU9ITApLG4hPT10JiZlLmVuZGVkJiZUKHRoaXMpKSxudWxsIT09ciYmdGhpcy5lbWl0KFwiZGF0YVwiLHIpLHJ9LGIucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiX3JlYWQoKSBpcyBub3QgaW1wbGVtZW50ZWRcIikpfSxiLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxhPXRoaXMuX3JlYWRhYmxlU3RhdGU7c3dpdGNoKGEucGlwZXNDb3VudCl7Y2FzZSAwOmEucGlwZXM9dDticmVhaztjYXNlIDE6YS5waXBlcz1bYS5waXBlcyx0XTticmVhaztkZWZhdWx0OmEucGlwZXMucHVzaCh0KX1hLnBpcGVzQ291bnQrPTEscChcInBpcGUgY291bnQ9JWQgb3B0cz0lalwiLGEucGlwZXNDb3VudCxlKTt2YXIgdT0oIWV8fCExIT09ZS5lbmQpJiZ0IT09ci5zdGRvdXQmJnQhPT1yLnN0ZGVycj9sOmI7ZnVuY3Rpb24gYyhlLHIpe3AoXCJvbnVucGlwZVwiKSxlPT09biYmciYmITE9PT1yLmhhc1VucGlwZWQmJihyLmhhc1VucGlwZWQ9ITAscChcImNsZWFudXBcIiksdC5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIseSksdC5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLHYpLHQucmVtb3ZlTGlzdGVuZXIoXCJkcmFpblwiLGYpLHQucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGcpLHQucmVtb3ZlTGlzdGVuZXIoXCJ1bnBpcGVcIixjKSxuLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsbCksbi5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLGIpLG4ucmVtb3ZlTGlzdGVuZXIoXCJkYXRhXCIsbSksaD0hMCwhYS5hd2FpdERyYWlufHx0Ll93cml0YWJsZVN0YXRlJiYhdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW58fGYoKSl9ZnVuY3Rpb24gbCgpe3AoXCJvbmVuZFwiKSx0LmVuZCgpfWEuZW5kRW1pdHRlZD9pLm5leHRUaWNrKHUpOm4ub25jZShcImVuZFwiLHUpLHQub24oXCJ1bnBpcGVcIixjKTt2YXIgZj1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO3AoXCJwaXBlT25EcmFpblwiLGUuYXdhaXREcmFpbiksZS5hd2FpdERyYWluJiZlLmF3YWl0RHJhaW4tLSwwPT09ZS5hd2FpdERyYWluJiZzKHQsXCJkYXRhXCIpJiYoZS5mbG93aW5nPSEwLEModCkpfX0obik7dC5vbihcImRyYWluXCIsZik7dmFyIGg9ITE7dmFyIGQ9ITE7ZnVuY3Rpb24gbShlKXtwKFwib25kYXRhXCIpLGQ9ITEsITEhPT10LndyaXRlKGUpfHxkfHwoKDE9PT1hLnBpcGVzQ291bnQmJmEucGlwZXM9PT10fHxhLnBpcGVzQ291bnQ+MSYmLTEhPT1EKGEucGlwZXMsdCkpJiYhaCYmKHAoXCJmYWxzZSB3cml0ZSByZXNwb25zZSwgcGF1c2VcIixuLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4pLG4uX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbisrLGQ9ITApLG4ucGF1c2UoKSl9ZnVuY3Rpb24gZyhlKXtwKFwib25lcnJvclwiLGUpLGIoKSx0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixnKSwwPT09cyh0LFwiZXJyb3JcIikmJnQuZW1pdChcImVycm9yXCIsZSl9ZnVuY3Rpb24geSgpe3QucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIix2KSxiKCl9ZnVuY3Rpb24gdigpe3AoXCJvbmZpbmlzaFwiKSx0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIix5KSxiKCl9ZnVuY3Rpb24gYigpe3AoXCJ1bnBpcGVcIiksbi51bnBpcGUodCl9cmV0dXJuIG4ub24oXCJkYXRhXCIsbSksZnVuY3Rpb24odCxlLG4pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQucHJlcGVuZExpc3RlbmVyKXJldHVybiB0LnByZXBlbmRMaXN0ZW5lcihlLG4pO3QuX2V2ZW50cyYmdC5fZXZlbnRzW2VdP28odC5fZXZlbnRzW2VdKT90Ll9ldmVudHNbZV0udW5zaGlmdChuKTp0Ll9ldmVudHNbZV09W24sdC5fZXZlbnRzW2VdXTp0Lm9uKGUsbil9KHQsXCJlcnJvclwiLGcpLHQub25jZShcImNsb3NlXCIseSksdC5vbmNlKFwiZmluaXNoXCIsdiksdC5lbWl0KFwicGlwZVwiLG4pLGEuZmxvd2luZ3x8KHAoXCJwaXBlIHJlc3VtZVwiKSxuLnJlc3VtZSgpKSx0fSxiLnByb3RvdHlwZS51bnBpcGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmVhZGFibGVTdGF0ZSxuPXtoYXNVbnBpcGVkOiExfTtpZigwPT09ZS5waXBlc0NvdW50KXJldHVybiB0aGlzO2lmKDE9PT1lLnBpcGVzQ291bnQpcmV0dXJuIHQmJnQhPT1lLnBpcGVzP3RoaXM6KHR8fCh0PWUucGlwZXMpLGUucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITEsdCYmdC5lbWl0KFwidW5waXBlXCIsdGhpcyxuKSx0aGlzKTtpZighdCl7dmFyIHI9ZS5waXBlcyxpPWUucGlwZXNDb3VudDtlLnBpcGVzPW51bGwsZS5waXBlc0NvdW50PTAsZS5mbG93aW5nPSExO2Zvcih2YXIgYT0wO2E8aTthKyspclthXS5lbWl0KFwidW5waXBlXCIsdGhpcyxuKTtyZXR1cm4gdGhpc312YXIgbz1EKGUucGlwZXMsdCk7cmV0dXJuLTE9PT1vP3RoaXM6KGUucGlwZXMuc3BsaWNlKG8sMSksZS5waXBlc0NvdW50LT0xLDE9PT1lLnBpcGVzQ291bnQmJihlLnBpcGVzPWUucGlwZXNbMF0pLHQuZW1pdChcInVucGlwZVwiLHRoaXMsbiksdGhpcyl9LGIucHJvdG90eXBlLm9uPWZ1bmN0aW9uKHQsZSl7dmFyIG49dS5wcm90b3R5cGUub24uY2FsbCh0aGlzLHQsZSk7aWYoXCJkYXRhXCI9PT10KSExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiZ0aGlzLnJlc3VtZSgpO2Vsc2UgaWYoXCJyZWFkYWJsZVwiPT09dCl7dmFyIHI9dGhpcy5fcmVhZGFibGVTdGF0ZTtyLmVuZEVtaXR0ZWR8fHIucmVhZGFibGVMaXN0ZW5pbmd8fChyLnJlYWRhYmxlTGlzdGVuaW5nPXIubmVlZFJlYWRhYmxlPSEwLHIuZW1pdHRlZFJlYWRhYmxlPSExLHIucmVhZGluZz9yLmxlbmd0aCYmUyh0aGlzKTppLm5leHRUaWNrKGssdGhpcykpfXJldHVybiBufSxiLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1iLnByb3RvdHlwZS5vbixiLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiB0LmZsb3dpbmd8fChwKFwicmVzdW1lXCIpLHQuZmxvd2luZz0hMCxmdW5jdGlvbih0LGUpe2UucmVzdW1lU2NoZWR1bGVkfHwoZS5yZXN1bWVTY2hlZHVsZWQ9ITAsaS5uZXh0VGljayhBLHQsZSkpfSh0aGlzLHQpKSx0aGlzfSxiLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBwKFwiY2FsbCBwYXVzZSBmbG93aW5nPSVqXCIsdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKSwhMSE9PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyYmKHAoXCJwYXVzZVwiKSx0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmc9ITEsdGhpcy5lbWl0KFwicGF1c2VcIikpLHRoaXN9LGIucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuX3JlYWRhYmxlU3RhdGUscj0hMTtmb3IodmFyIGkgaW4gdC5vbihcImVuZFwiLGZ1bmN0aW9uKCl7aWYocChcIndyYXBwZWQgZW5kXCIpLG4uZGVjb2RlciYmIW4uZW5kZWQpe3ZhciB0PW4uZGVjb2Rlci5lbmQoKTt0JiZ0Lmxlbmd0aCYmZS5wdXNoKHQpfWUucHVzaChudWxsKX0pLHQub24oXCJkYXRhXCIsZnVuY3Rpb24oaSl7KHAoXCJ3cmFwcGVkIGRhdGFcIiksbi5kZWNvZGVyJiYoaT1uLmRlY29kZXIud3JpdGUoaSkpLG4ub2JqZWN0TW9kZSYmbnVsbD09aSl8fChuLm9iamVjdE1vZGV8fGkmJmkubGVuZ3RoKSYmKGUucHVzaChpKXx8KHI9ITAsdC5wYXVzZSgpKSl9KSx0KXZvaWQgMD09PXRoaXNbaV0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbaV0mJih0aGlzW2ldPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0W2VdLmFwcGx5KHQsYXJndW1lbnRzKX19KGkpKTtmb3IodmFyIGE9MDthPHkubGVuZ3RoO2ErKyl0Lm9uKHlbYV0sdGhpcy5lbWl0LmJpbmQodGhpcyx5W2FdKSk7cmV0dXJuIHRoaXMuX3JlYWQ9ZnVuY3Rpb24oZSl7cChcIndyYXBwZWQgX3JlYWRcIixlKSxyJiYocj0hMSx0LnJlc3VtZSgpKX0sdGhpc30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicmVhZGFibGVIaWdoV2F0ZXJNYXJrXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxiLl9mcm9tTGlzdD1QfSkuY2FsbCh0aGlzLG4oMTEpLG4oMTQpKX0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKDU4KS5FdmVudEVtaXR0ZXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDQxKTtmdW5jdGlvbiBpKHQsZSl7dC5lbWl0KFwiZXJyb3JcIixlKX10LmV4cG9ydHM9e2Rlc3Ryb3k6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGE9dGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQsbz10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtyZXR1cm4gYXx8bz8oZT9lKHQpOiF0fHx0aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZHx8ci5uZXh0VGljayhpLHRoaXMsdCksdGhpcyk6KHRoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMCksdGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPSEwKSx0aGlzLl9kZXN0cm95KHR8fG51bGwsZnVuY3Rpb24odCl7IWUmJnQ/KHIubmV4dFRpY2soaSxuLHQpLG4uX3dyaXRhYmxlU3RhdGUmJihuLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCkpOmUmJmUodCl9KSx0aGlzKX0sdW5kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPSExLHRoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZz0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZD0hMSksdGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmc9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMSl9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3QuZXhwb3J0cz1vO3ZhciByPW4oMjEpLGk9bigzMSk7ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPXRoaXMuX3RyYW5zZm9ybVN0YXRlO24udHJhbnNmb3JtaW5nPSExO3ZhciByPW4ud3JpdGVjYjtpZighcilyZXR1cm4gdGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJ3cml0ZSBjYWxsYmFjayBjYWxsZWQgbXVsdGlwbGUgdGltZXNcIikpO24ud3JpdGVjaHVuaz1udWxsLG4ud3JpdGVjYj1udWxsLG51bGwhPWUmJnRoaXMucHVzaChlKSxyKHQpO3ZhciBpPXRoaXMuX3JlYWRhYmxlU3RhdGU7aS5yZWFkaW5nPSExLChpLm5lZWRSZWFkYWJsZXx8aS5sZW5ndGg8aS5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChpLmhpZ2hXYXRlck1hcmspfWZ1bmN0aW9uIG8odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbykpcmV0dXJuIG5ldyBvKHQpO3IuY2FsbCh0aGlzLHQpLHRoaXMuX3RyYW5zZm9ybVN0YXRlPXthZnRlclRyYW5zZm9ybTphLmJpbmQodGhpcyksbmVlZFRyYW5zZm9ybTohMSx0cmFuc2Zvcm1pbmc6ITEsd3JpdGVjYjpudWxsLHdyaXRlY2h1bms6bnVsbCx3cml0ZWVuY29kaW5nOm51bGx9LHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPSEwLHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz0hMSx0JiYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC50cmFuc2Zvcm0mJih0aGlzLl90cmFuc2Zvcm09dC50cmFuc2Zvcm0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuZmx1c2gmJih0aGlzLl9mbHVzaD10LmZsdXNoKSksdGhpcy5vbihcInByZWZpbmlzaFwiLHMpfWZ1bmN0aW9uIHMoKXt2YXIgdD10aGlzO1wiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX2ZsdXNoP3RoaXMuX2ZsdXNoKGZ1bmN0aW9uKGUsbil7dSh0LGUsbil9KTp1KHRoaXMsbnVsbCxudWxsKX1mdW5jdGlvbiB1KHQsZSxuKXtpZihlKXJldHVybiB0LmVtaXQoXCJlcnJvclwiLGUpO2lmKG51bGwhPW4mJnQucHVzaChuKSx0Ll93cml0YWJsZVN0YXRlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYWxsaW5nIHRyYW5zZm9ybSBkb25lIHdoZW4gd3MubGVuZ3RoICE9IDBcIik7aWYodC5fdHJhbnNmb3JtU3RhdGUudHJhbnNmb3JtaW5nKXRocm93IG5ldyBFcnJvcihcIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiBzdGlsbCB0cmFuc2Zvcm1pbmdcIik7cmV0dXJuIHQucHVzaChudWxsKX1pLmluaGVyaXRzPW4oMiksaS5pbmhlcml0cyhvLHIpLG8ucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fdHJhbnNmb3JtU3RhdGUubmVlZFRyYW5zZm9ybT0hMSxyLnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcyx0LGUpfSxvLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxuKXt0aHJvdyBuZXcgRXJyb3IoXCJfdHJhbnNmb3JtKCkgaXMgbm90IGltcGxlbWVudGVkXCIpfSxvLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMuX3RyYW5zZm9ybVN0YXRlO2lmKHIud3JpdGVjYj1uLHIud3JpdGVjaHVuaz10LHIud3JpdGVlbmNvZGluZz1lLCFyLnRyYW5zZm9ybWluZyl7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTsoci5uZWVkVHJhbnNmb3JtfHxpLm5lZWRSZWFkYWJsZXx8aS5sZW5ndGg8aS5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChpLmhpZ2hXYXRlck1hcmspfX0sby5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fdHJhbnNmb3JtU3RhdGU7bnVsbCE9PWUud3JpdGVjaHVuayYmZS53cml0ZWNiJiYhZS50cmFuc2Zvcm1pbmc/KGUudHJhbnNmb3JtaW5nPSEwLHRoaXMuX3RyYW5zZm9ybShlLndyaXRlY2h1bmssZS53cml0ZWVuY29kaW5nLGUuYWZ0ZXJUcmFuc2Zvcm0pKTplLm5lZWRUcmFuc2Zvcm09ITB9LG8ucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyLnByb3RvdHlwZS5fZGVzdHJveS5jYWxsKHRoaXMsdCxmdW5jdGlvbih0KXtlKHQpLG4uZW1pdChcImNsb3NlXCIpfSl9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKSxpPW4oMjMpLGE9bigzKS5CdWZmZXIsbz1bMTExNjM1MjQwOCwxODk5NDQ3NDQxLDMwNDkzMjM0NzEsMzkyMTAwOTU3Myw5NjE5ODcxNjMsMTUwODk3MDk5MywyNDUzNjM1NzQ4LDI4NzA3NjMyMjEsMzYyNDM4MTA4MCwzMTA1OTg0MDEsNjA3MjI1Mjc4LDE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LDYwNDgwNzYyOCw3NzAyNTU5ODMsMTI0OTE1MDEyMiwxNTU1MDgxNjkyLDE5OTYwNjQ5ODYsMjU1NDIyMDg4MiwyODIxODM0MzQ5LDI5NTI5OTY4MDgsMzIxMDMxMzY3MSwzMzM2NTcxODkxLDM1ODQ1Mjg3MTEsMTEzOTI2OTkzLDMzODI0MTg5NSw2NjYzMDcyMDUsNzczNTI5OTEyLDEyOTQ3NTczNzIsMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLDMzNDU3NjQ3NzEsMzUxNjA2NTgxNywzNjAwMzUyODA0LDQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XSxzPW5ldyBBcnJheSg2NCk7ZnVuY3Rpb24gdSgpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxpLmNhbGwodGhpcyw2NCw1Nil9ZnVuY3Rpb24gYyh0LGUsbil7cmV0dXJuIG5edCYoZV5uKX1mdW5jdGlvbiBsKHQsZSxuKXtyZXR1cm4gdCZlfG4mKHR8ZSl9ZnVuY3Rpb24gZih0KXtyZXR1cm4odD4+PjJ8dDw8MzApXih0Pj4+MTN8dDw8MTkpXih0Pj4+MjJ8dDw8MTApfWZ1bmN0aW9uIGgodCl7cmV0dXJuKHQ+Pj42fHQ8PDI2KV4odD4+PjExfHQ8PDIxKV4odD4+PjI1fHQ8PDcpfWZ1bmN0aW9uIHAodCl7cmV0dXJuKHQ+Pj43fHQ8PDI1KV4odD4+PjE4fHQ8PDE0KV50Pj4+M31yKHUsaSksdS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hPTE3NzkwMzM3MDMsdGhpcy5fYj0zMTQ0MTM0Mjc3LHRoaXMuX2M9MTAxMzkwNDI0Mix0aGlzLl9kPTI3NzM0ODA3NjIsdGhpcy5fZT0xMzU5ODkzMTE5LHRoaXMuX2Y9MjYwMDgyMjkyNCx0aGlzLl9nPTUyODczNDYzNSx0aGlzLl9oPTE1NDE0NTkyMjUsdGhpc30sdS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj10aGlzLl93LHI9MHx0aGlzLl9hLGk9MHx0aGlzLl9iLGE9MHx0aGlzLl9jLHM9MHx0aGlzLl9kLHU9MHx0aGlzLl9lLGQ9MHx0aGlzLl9mLG09MHx0aGlzLl9nLGc9MHx0aGlzLl9oLHk9MDt5PDE2OysreSluW3ldPXQucmVhZEludDMyQkUoNCp5KTtmb3IoO3k8NjQ7Kyt5KW5beV09MHwoKChlPW5beS0yXSk+Pj4xN3xlPDwxNSleKGU+Pj4xOXxlPDwxMyleZT4+PjEwKStuW3ktN10rcChuW3ktMTVdKStuW3ktMTZdO2Zvcih2YXIgdj0wO3Y8NjQ7Kyt2KXt2YXIgYj1nK2godSkrYyh1LGQsbSkrb1t2XStuW3ZdfDAsdz1mKHIpK2wocixpLGEpfDA7Zz1tLG09ZCxkPXUsdT1zK2J8MCxzPWEsYT1pLGk9cixyPWIrd3wwfXRoaXMuX2E9cit0aGlzLl9hfDAsdGhpcy5fYj1pK3RoaXMuX2J8MCx0aGlzLl9jPWErdGhpcy5fY3wwLHRoaXMuX2Q9cyt0aGlzLl9kfDAsdGhpcy5fZT11K3RoaXMuX2V8MCx0aGlzLl9mPWQrdGhpcy5fZnwwLHRoaXMuX2c9bSt0aGlzLl9nfDAsdGhpcy5faD1nK3RoaXMuX2h8MH0sdS5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgdD1hLmFsbG9jVW5zYWZlKDMyKTtyZXR1cm4gdC53cml0ZUludDMyQkUodGhpcy5fYSwwKSx0LndyaXRlSW50MzJCRSh0aGlzLl9iLDQpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2MsOCksdC53cml0ZUludDMyQkUodGhpcy5fZCwxMiksdC53cml0ZUludDMyQkUodGhpcy5fZSwxNiksdC53cml0ZUludDMyQkUodGhpcy5fZiwyMCksdC53cml0ZUludDMyQkUodGhpcy5fZywyNCksdC53cml0ZUludDMyQkUodGhpcy5faCwyOCksdH0sdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpLGk9bigyMyksYT1uKDMpLkJ1ZmZlcixvPVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV0scz1uZXcgQXJyYXkoMTYwKTtmdW5jdGlvbiB1KCl7dGhpcy5pbml0KCksdGhpcy5fdz1zLGkuY2FsbCh0aGlzLDEyOCwxMTIpfWZ1bmN0aW9uIGModCxlLG4pe3JldHVybiBuXnQmKGVebil9ZnVuY3Rpb24gbCh0LGUsbil7cmV0dXJuIHQmZXxuJih0fGUpfWZ1bmN0aW9uIGYodCxlKXtyZXR1cm4odD4+PjI4fGU8PDQpXihlPj4+Mnx0PDwzMCleKGU+Pj43fHQ8PDI1KX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuKHQ+Pj4xNHxlPDwxOCleKHQ+Pj4xOHxlPDwxNCleKGU+Pj45fHQ8PDIzKX1mdW5jdGlvbiBwKHQsZSl7cmV0dXJuKHQ+Pj4xfGU8PDMxKV4odD4+Pjh8ZTw8MjQpXnQ+Pj43fWZ1bmN0aW9uIGQodCxlKXtyZXR1cm4odD4+PjF8ZTw8MzEpXih0Pj4+OHxlPDwyNCleKHQ+Pj43fGU8PDI1KX1mdW5jdGlvbiBtKHQsZSl7cmV0dXJuKHQ+Pj4xOXxlPDwxMyleKGU+Pj4yOXx0PDwzKV50Pj4+Nn1mdW5jdGlvbiBnKHQsZSl7cmV0dXJuKHQ+Pj4xOXxlPDwxMyleKGU+Pj4yOXx0PDwzKV4odD4+PjZ8ZTw8MjYpfWZ1bmN0aW9uIHkodCxlKXtyZXR1cm4gdD4+PjA8ZT4+PjA/MTowfXIodSxpKSx1LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FoPTE3NzkwMzM3MDMsdGhpcy5fYmg9MzE0NDEzNDI3Nyx0aGlzLl9jaD0xMDEzOTA0MjQyLHRoaXMuX2RoPTI3NzM0ODA3NjIsdGhpcy5fZWg9MTM1OTg5MzExOSx0aGlzLl9maD0yNjAwODIyOTI0LHRoaXMuX2doPTUyODczNDYzNSx0aGlzLl9oaD0xNTQxNDU5MjI1LHRoaXMuX2FsPTQwODkyMzU3MjAsdGhpcy5fYmw9MjIyNzg3MzU5NSx0aGlzLl9jbD00MjcxMTc1NzIzLHRoaXMuX2RsPTE1OTU3NTAxMjksdGhpcy5fZWw9MjkxNzU2NTEzNyx0aGlzLl9mbD03MjU1MTExOTksdGhpcy5fZ2w9NDIxNTM4OTU0Nyx0aGlzLl9obD0zMjcwMzMyMDksdGhpc30sdS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5fdyxuPTB8dGhpcy5fYWgscj0wfHRoaXMuX2JoLGk9MHx0aGlzLl9jaCxhPTB8dGhpcy5fZGgscz0wfHRoaXMuX2VoLHU9MHx0aGlzLl9maCx2PTB8dGhpcy5fZ2gsYj0wfHRoaXMuX2hoLHc9MHx0aGlzLl9hbCxfPTB8dGhpcy5fYmwseD0wfHRoaXMuX2NsLEU9MHx0aGlzLl9kbCxTPTB8dGhpcy5fZWwsTj0wfHRoaXMuX2ZsLEk9MHx0aGlzLl9nbCxPPTB8dGhpcy5faGwsaz0wO2s8MzI7ays9MillW2tdPXQucmVhZEludDMyQkUoNCprKSxlW2srMV09dC5yZWFkSW50MzJCRSg0KmsrNCk7Zm9yKDtrPDE2MDtrKz0yKXt2YXIgQT1lW2stMzBdLEM9ZVtrLTMwKzFdLFA9cChBLEMpLFQ9ZChDLEEpLFI9bShBPWVbay00XSxDPWVbay00KzFdKSxEPWcoQyxBKSxNPWVbay0xNF0saj1lW2stMTQrMV0sQj1lW2stMzJdLEw9ZVtrLTMyKzFdLHo9VCtqfDAsRj1QK00reSh6LFQpfDA7Rj0oRj1GK1IreSh6PXorRHwwLEQpfDApK0IreSh6PXorTHwwLEwpfDAsZVtrXT1GLGVbaysxXT16fWZvcih2YXIgVT0wO1U8MTYwO1UrPTIpe0Y9ZVtVXSx6PWVbVSsxXTt2YXIgVj1sKG4scixpKSxXPWwodyxfLHgpLHE9ZihuLHcpLCQ9Zih3LG4pLEg9aChzLFMpLEs9aChTLHMpLEc9b1tVXSxYPW9bVSsxXSxZPWMocyx1LHYpLEo9YyhTLE4sSSksWj1PK0t8MCxRPWIrSCt5KFosTyl8MDtRPShRPShRPVErWSt5KFo9WitKfDAsSil8MCkrRyt5KFo9WitYfDAsWCl8MCkrRit5KFo9Wit6fDAseil8MDt2YXIgdHQ9JCtXfDAsZXQ9cStWK3kodHQsJCl8MDtiPXYsTz1JLHY9dSxJPU4sdT1zLE49UyxzPWErUSt5KFM9RStafDAsRSl8MCxhPWksRT14LGk9cix4PV8scj1uLF89dyxuPVErZXQreSh3PVordHR8MCxaKXwwfXRoaXMuX2FsPXRoaXMuX2FsK3d8MCx0aGlzLl9ibD10aGlzLl9ibCtffDAsdGhpcy5fY2w9dGhpcy5fY2wreHwwLHRoaXMuX2RsPXRoaXMuX2RsK0V8MCx0aGlzLl9lbD10aGlzLl9lbCtTfDAsdGhpcy5fZmw9dGhpcy5fZmwrTnwwLHRoaXMuX2dsPXRoaXMuX2dsK0l8MCx0aGlzLl9obD10aGlzLl9obCtPfDAsdGhpcy5fYWg9dGhpcy5fYWgrbit5KHRoaXMuX2FsLHcpfDAsdGhpcy5fYmg9dGhpcy5fYmgrcit5KHRoaXMuX2JsLF8pfDAsdGhpcy5fY2g9dGhpcy5fY2graSt5KHRoaXMuX2NsLHgpfDAsdGhpcy5fZGg9dGhpcy5fZGgrYSt5KHRoaXMuX2RsLEUpfDAsdGhpcy5fZWg9dGhpcy5fZWgrcyt5KHRoaXMuX2VsLFMpfDAsdGhpcy5fZmg9dGhpcy5fZmgrdSt5KHRoaXMuX2ZsLE4pfDAsdGhpcy5fZ2g9dGhpcy5fZ2grdit5KHRoaXMuX2dsLEkpfDAsdGhpcy5faGg9dGhpcy5faGgrYit5KHRoaXMuX2hsLE8pfDB9LHUucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9YS5hbGxvY1Vuc2FmZSg2NCk7ZnVuY3Rpb24gZShlLG4scil7dC53cml0ZUludDMyQkUoZSxyKSx0LndyaXRlSW50MzJCRShuLHIrNCl9cmV0dXJuIGUodGhpcy5fYWgsdGhpcy5fYWwsMCksZSh0aGlzLl9iaCx0aGlzLl9ibCw4KSxlKHRoaXMuX2NoLHRoaXMuX2NsLDE2KSxlKHRoaXMuX2RoLHRoaXMuX2RsLDI0KSxlKHRoaXMuX2VoLHRoaXMuX2VsLDMyKSxlKHRoaXMuX2ZoLHRoaXMuX2ZsLDQwKSxlKHRoaXMuX2doLHRoaXMuX2dsLDQ4KSxlKHRoaXMuX2hoLHRoaXMuX2hsLDU2KSx0fSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMiksaT1uKDE1MiksYT1uKDE4KSxvPW4oMykuQnVmZmVyLHM9big5NCksdT1uKDYxKSxjPW4oNjIpLGw9by5hbGxvYygxMjgpO2Z1bmN0aW9uIGYodCxlKXthLmNhbGwodGhpcyxcImRpZ2VzdFwiKSxcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9by5mcm9tKGUpKTt2YXIgbj1cInNoYTUxMlwiPT09dHx8XCJzaGEzODRcIj09PXQ/MTI4OjY0Oyh0aGlzLl9hbGc9dCx0aGlzLl9rZXk9ZSxlLmxlbmd0aD5uKT9lPShcInJtZDE2MFwiPT09dD9uZXcgdTpjKHQpKS51cGRhdGUoZSkuZGlnZXN0KCk6ZS5sZW5ndGg8biYmKGU9by5jb25jYXQoW2UsbF0sbikpO2Zvcih2YXIgcj10aGlzLl9pcGFkPW8uYWxsb2NVbnNhZmUobiksaT10aGlzLl9vcGFkPW8uYWxsb2NVbnNhZmUobikscz0wO3M8bjtzKyspcltzXT01NF5lW3NdLGlbc109OTJeZVtzXTt0aGlzLl9oYXNoPVwicm1kMTYwXCI9PT10P25ldyB1OmModCksdGhpcy5faGFzaC51cGRhdGUocil9cihmLGEpLGYucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7dGhpcy5faGFzaC51cGRhdGUodCl9LGYucHJvdG90eXBlLl9maW5hbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2hhc2guZGlnZXN0KCk7cmV0dXJuKFwicm1kMTYwXCI9PT10aGlzLl9hbGc/bmV3IHU6Yyh0aGlzLl9hbGcpKS51cGRhdGUodGhpcy5fb3BhZCkudXBkYXRlKHQpLmRpZ2VzdCgpfSx0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm5cInJtZDE2MFwiPT09KHQ9dC50b0xvd2VyQ2FzZSgpKXx8XCJyaXBlbWQxNjBcIj09PXQ/bmV3IGYoXCJybWQxNjBcIixlKTpcIm1kNVwiPT09dD9uZXcgaShzLGUpOm5ldyBmKHQsZSl9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big1Nik7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybihuZXcgcikudXBkYXRlKHQpLmRpZ2VzdCgpfX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPXtzaGEyMjRXaXRoUlNBRW5jcnlwdGlvbjp7c2lnbjpcInJzYVwiLGhhc2g6XCJzaGEyMjRcIixpZDpcIjMwMmQzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwNDA1MDAwNDFjXCJ9LFwiUlNBLVNIQTIyNFwiOntzaWduOlwiZWNkc2EvcnNhXCIsaGFzaDpcInNoYTIyNFwiLGlkOlwiMzAyZDMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjA0MDUwMDA0MWNcIn0sc2hhMjU2V2l0aFJTQUVuY3J5cHRpb246e3NpZ246XCJyc2FcIixoYXNoOlwic2hhMjU2XCIsaWQ6XCIzMDMxMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDEwNTAwMDQyMFwifSxcIlJTQS1TSEEyNTZcIjp7c2lnbjpcImVjZHNhL3JzYVwiLGhhc2g6XCJzaGEyNTZcIixpZDpcIjMwMzEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMTA1MDAwNDIwXCJ9LHNoYTM4NFdpdGhSU0FFbmNyeXB0aW9uOntzaWduOlwicnNhXCIsaGFzaDpcInNoYTM4NFwiLGlkOlwiMzA0MTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAyMDUwMDA0MzBcIn0sXCJSU0EtU0hBMzg0XCI6e3NpZ246XCJlY2RzYS9yc2FcIixoYXNoOlwic2hhMzg0XCIsaWQ6XCIzMDQxMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDIwNTAwMDQzMFwifSxzaGE1MTJXaXRoUlNBRW5jcnlwdGlvbjp7c2lnbjpcInJzYVwiLGhhc2g6XCJzaGE1MTJcIixpZDpcIjMwNTEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMzA1MDAwNDQwXCJ9LFwiUlNBLVNIQTUxMlwiOntzaWduOlwiZWNkc2EvcnNhXCIsaGFzaDpcInNoYTUxMlwiLGlkOlwiMzA1MTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAzMDUwMDA0NDBcIn0sXCJSU0EtU0hBMVwiOntzaWduOlwicnNhXCIsaGFzaDpcInNoYTFcIixpZDpcIjMwMjEzMDA5MDYwNTJiMGUwMzAyMWEwNTAwMDQxNFwifSxcImVjZHNhLXdpdGgtU0hBMVwiOntzaWduOlwiZWNkc2FcIixoYXNoOlwic2hhMVwiLGlkOlwiXCJ9LHNoYTI1Njp7c2lnbjpcImVjZHNhXCIsaGFzaDpcInNoYTI1NlwiLGlkOlwiXCJ9LHNoYTIyNDp7c2lnbjpcImVjZHNhXCIsaGFzaDpcInNoYTIyNFwiLGlkOlwiXCJ9LHNoYTM4NDp7c2lnbjpcImVjZHNhXCIsaGFzaDpcInNoYTM4NFwiLGlkOlwiXCJ9LHNoYTUxMjp7c2lnbjpcImVjZHNhXCIsaGFzaDpcInNoYTUxMlwiLGlkOlwiXCJ9LFwiRFNBLVNIQVwiOntzaWduOlwiZHNhXCIsaGFzaDpcInNoYTFcIixpZDpcIlwifSxcIkRTQS1TSEExXCI6e3NpZ246XCJkc2FcIixoYXNoOlwic2hhMVwiLGlkOlwiXCJ9LERTQTp7c2lnbjpcImRzYVwiLGhhc2g6XCJzaGExXCIsaWQ6XCJcIn0sXCJEU0EtV0lUSC1TSEEyMjRcIjp7c2lnbjpcImRzYVwiLGhhc2g6XCJzaGEyMjRcIixpZDpcIlwifSxcIkRTQS1TSEEyMjRcIjp7c2lnbjpcImRzYVwiLGhhc2g6XCJzaGEyMjRcIixpZDpcIlwifSxcIkRTQS1XSVRILVNIQTI1NlwiOntzaWduOlwiZHNhXCIsaGFzaDpcInNoYTI1NlwiLGlkOlwiXCJ9LFwiRFNBLVNIQTI1NlwiOntzaWduOlwiZHNhXCIsaGFzaDpcInNoYTI1NlwiLGlkOlwiXCJ9LFwiRFNBLVdJVEgtU0hBMzg0XCI6e3NpZ246XCJkc2FcIixoYXNoOlwic2hhMzg0XCIsaWQ6XCJcIn0sXCJEU0EtU0hBMzg0XCI6e3NpZ246XCJkc2FcIixoYXNoOlwic2hhMzg0XCIsaWQ6XCJcIn0sXCJEU0EtV0lUSC1TSEE1MTJcIjp7c2lnbjpcImRzYVwiLGhhc2g6XCJzaGE1MTJcIixpZDpcIlwifSxcIkRTQS1TSEE1MTJcIjp7c2lnbjpcImRzYVwiLGhhc2g6XCJzaGE1MTJcIixpZDpcIlwifSxcIkRTQS1SSVBFTUQxNjBcIjp7c2lnbjpcImRzYVwiLGhhc2g6XCJybWQxNjBcIixpZDpcIlwifSxyaXBlbWQxNjBXaXRoUlNBOntzaWduOlwicnNhXCIsaGFzaDpcInJtZDE2MFwiLGlkOlwiMzAyMTMwMDkwNjA1MmIyNDAzMDIwMTA1MDAwNDE0XCJ9LFwiUlNBLVJJUEVNRDE2MFwiOntzaWduOlwicnNhXCIsaGFzaDpcInJtZDE2MFwiLGlkOlwiMzAyMTMwMDkwNjA1MmIyNDAzMDIwMTA1MDAwNDE0XCJ9LG1kNVdpdGhSU0FFbmNyeXB0aW9uOntzaWduOlwicnNhXCIsaGFzaDpcIm1kNVwiLGlkOlwiMzAyMDMwMGMwNjA4MmE4NjQ4ODZmNzBkMDIwNTA1MDAwNDEwXCJ9LFwiUlNBLU1ENVwiOntzaWduOlwicnNhXCIsaGFzaDpcIm1kNVwiLGlkOlwiMzAyMDMwMGMwNjA4MmE4NjQ4ODZmNzBkMDIwNTA1MDAwNDEwXCJ9fX0sZnVuY3Rpb24odCxlLG4pe2UucGJrZGYyPW4oMTU0KSxlLnBia2RmMlN5bmM9big5OSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIG49TWF0aC5wb3coMiwzMCktMTtmdW5jdGlvbiByKHQsbil7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIHQmJiFlLmlzQnVmZmVyKHQpKXRocm93IG5ldyBUeXBlRXJyb3IobitcIiBtdXN0IGJlIGEgYnVmZmVyIG9yIHN0cmluZ1wiKX10LmV4cG9ydHM9ZnVuY3Rpb24odCxlLGksYSl7aWYocih0LFwiUGFzc3dvcmRcIikscihlLFwiU2FsdFwiKSxcIm51bWJlclwiIT10eXBlb2YgaSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiSXRlcmF0aW9ucyBub3QgYSBudW1iZXJcIik7aWYoaTwwKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCYWQgaXRlcmF0aW9uc1wiKTtpZihcIm51bWJlclwiIT10eXBlb2YgYSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiS2V5IGxlbmd0aCBub3QgYSBudW1iZXJcIik7aWYoYTwwfHxhPm58fGEhPWEpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkJhZCBrZXkgbGVuZ3RoXCIpfX0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIG47ZS5icm93c2VyP249XCJ1dGYtOFwiOm49cGFyc2VJbnQoZS52ZXJzaW9uLnNwbGl0KFwiLlwiKVswXS5zbGljZSgxKSwxMCk+PTY/XCJ1dGYtOFwiOlwiYmluYXJ5XCI7dC5leHBvcnRzPW59KS5jYWxsKHRoaXMsbigxNCkpfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big5NCksaT1uKDYxKSxhPW4oNjIpLG89big5Nykscz1uKDk4KSx1PW4oMykuQnVmZmVyLGM9dS5hbGxvYygxMjgpLGw9e21kNToxNixzaGExOjIwLHNoYTIyNDoyOCxzaGEyNTY6MzIsc2hhMzg0OjQ4LHNoYTUxMjo2NCxybWQxNjA6MjAscmlwZW1kMTYwOjIwfTtmdW5jdGlvbiBmKHQsZSxuKXt2YXIgbz1mdW5jdGlvbih0KXtyZXR1cm5cInJtZDE2MFwiPT09dHx8XCJyaXBlbWQxNjBcIj09PXQ/ZnVuY3Rpb24odCl7cmV0dXJuKG5ldyBpKS51cGRhdGUodCkuZGlnZXN0KCl9OlwibWQ1XCI9PT10P3I6ZnVuY3Rpb24oZSl7cmV0dXJuIGEodCkudXBkYXRlKGUpLmRpZ2VzdCgpfX0odCkscz1cInNoYTUxMlwiPT09dHx8XCJzaGEzODRcIj09PXQ/MTI4OjY0O2UubGVuZ3RoPnM/ZT1vKGUpOmUubGVuZ3RoPHMmJihlPXUuY29uY2F0KFtlLGNdLHMpKTtmb3IodmFyIGY9dS5hbGxvY1Vuc2FmZShzK2xbdF0pLGg9dS5hbGxvY1Vuc2FmZShzK2xbdF0pLHA9MDtwPHM7cCsrKWZbcF09NTReZVtwXSxoW3BdPTkyXmVbcF07dmFyIGQ9dS5hbGxvY1Vuc2FmZShzK24rNCk7Zi5jb3B5KGQsMCwwLHMpLHRoaXMuaXBhZDE9ZCx0aGlzLmlwYWQyPWYsdGhpcy5vcGFkPWgsdGhpcy5hbGc9dCx0aGlzLmJsb2Nrc2l6ZT1zLHRoaXMuaGFzaD1vLHRoaXMuc2l6ZT1sW3RdfWYucHJvdG90eXBlLnJ1bj1mdW5jdGlvbih0LGUpe3JldHVybiB0LmNvcHkoZSx0aGlzLmJsb2Nrc2l6ZSksdGhpcy5oYXNoKGUpLmNvcHkodGhpcy5vcGFkLHRoaXMuYmxvY2tzaXplKSx0aGlzLmhhc2godGhpcy5vcGFkKX0sdC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLHIsaSl7byh0LGUsbixyKSx1LmlzQnVmZmVyKHQpfHwodD11LmZyb20odCxzKSksdS5pc0J1ZmZlcihlKXx8KGU9dS5mcm9tKGUscykpO3ZhciBhPW5ldyBmKGk9aXx8XCJzaGExXCIsdCxlLmxlbmd0aCksYz11LmFsbG9jVW5zYWZlKHIpLGg9dS5hbGxvY1Vuc2FmZShlLmxlbmd0aCs0KTtlLmNvcHkoaCwwLDAsZS5sZW5ndGgpO2Zvcih2YXIgcD0wLGQ9bFtpXSxtPU1hdGguY2VpbChyL2QpLGc9MTtnPD1tO2crKyl7aC53cml0ZVVJbnQzMkJFKGcsZS5sZW5ndGgpO2Zvcih2YXIgeT1hLnJ1bihoLGEuaXBhZDEpLHY9eSxiPTE7YjxuO2IrKyl7dj1hLnJ1bih2LGEuaXBhZDIpO2Zvcih2YXIgdz0wO3c8ZDt3KyspeVt3XV49dlt3XX15LmNvcHkoYyxwKSxwKz1kfXJldHVybiBjfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMzIpLGk9bigzKS5CdWZmZXIsYT1uKDEwMSk7ZnVuY3Rpb24gbyh0KXt2YXIgZT10Ll9jaXBoZXIuZW5jcnlwdEJsb2NrUmF3KHQuX3ByZXYpO3JldHVybiBhKHQuX3ByZXYpLGV9ZS5lbmNyeXB0PWZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5jZWlsKGUubGVuZ3RoLzE2KSxhPXQuX2NhY2hlLmxlbmd0aDt0Ll9jYWNoZT1pLmNvbmNhdChbdC5fY2FjaGUsaS5hbGxvY1Vuc2FmZSgxNipuKV0pO2Zvcih2YXIgcz0wO3M8bjtzKyspe3ZhciB1PW8odCksYz1hKzE2KnM7dC5fY2FjaGUud3JpdGVVSW50MzJCRSh1WzBdLGMrMCksdC5fY2FjaGUud3JpdGVVSW50MzJCRSh1WzFdLGMrNCksdC5fY2FjaGUud3JpdGVVSW50MzJCRSh1WzJdLGMrOCksdC5fY2FjaGUud3JpdGVVSW50MzJCRSh1WzNdLGMrMTIpfXZhciBsPXQuX2NhY2hlLnNsaWNlKDAsZS5sZW5ndGgpO3JldHVybiB0Ll9jYWNoZT10Ll9jYWNoZS5zbGljZShlLmxlbmd0aCkscihlLGwpfX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dC5sZW5ndGg7bi0tOyl7aWYoMjU1IT09KGU9dC5yZWFkVUludDgobikpKXtlKyssdC53cml0ZVVJbnQ4KGUsbik7YnJlYWt9dC53cml0ZVVJbnQ4KDAsbil9fX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPXtcImFlcy0xMjgtZWNiXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MCxtb2RlOlwiRUNCXCIsdHlwZTpcImJsb2NrXCJ9LFwiYWVzLTE5Mi1lY2JcIjp7Y2lwaGVyOlwiQUVTXCIsa2V5OjE5MixpdjowLG1vZGU6XCJFQ0JcIix0eXBlOlwiYmxvY2tcIn0sXCJhZXMtMjU2LWVjYlwiOntjaXBoZXI6XCJBRVNcIixrZXk6MjU2LGl2OjAsbW9kZTpcIkVDQlwiLHR5cGU6XCJibG9ja1wifSxcImFlcy0xMjgtY2JjXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxcImFlcy0xOTItY2JjXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxOTIsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxcImFlcy0yNTYtY2JjXCI6e2NpcGhlcjpcIkFFU1wiLGtleToyNTYsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxhZXMxMjg6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxhZXMxOTI6e2NpcGhlcjpcIkFFU1wiLGtleToxOTIsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxhZXMyNTY6e2NpcGhlcjpcIkFFU1wiLGtleToyNTYsaXY6MTYsbW9kZTpcIkNCQ1wiLHR5cGU6XCJibG9ja1wifSxcImFlcy0xMjgtY2ZiXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTYsbW9kZTpcIkNGQlwiLHR5cGU6XCJzdHJlYW1cIn0sXCJhZXMtMTkyLWNmYlwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTkyLGl2OjE2LG1vZGU6XCJDRkJcIix0eXBlOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1jZmJcIjp7Y2lwaGVyOlwiQUVTXCIsa2V5OjI1NixpdjoxNixtb2RlOlwiQ0ZCXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xMjgtY2ZiOFwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTI4LGl2OjE2LG1vZGU6XCJDRkI4XCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xOTItY2ZiOFwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTkyLGl2OjE2LG1vZGU6XCJDRkI4XCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0yNTYtY2ZiOFwiOntjaXBoZXI6XCJBRVNcIixrZXk6MjU2LGl2OjE2LG1vZGU6XCJDRkI4XCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xMjgtY2ZiMVwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTI4LGl2OjE2LG1vZGU6XCJDRkIxXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xOTItY2ZiMVwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTkyLGl2OjE2LG1vZGU6XCJDRkIxXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0yNTYtY2ZiMVwiOntjaXBoZXI6XCJBRVNcIixrZXk6MjU2LGl2OjE2LG1vZGU6XCJDRkIxXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xMjgtb2ZiXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTYsbW9kZTpcIk9GQlwiLHR5cGU6XCJzdHJlYW1cIn0sXCJhZXMtMTkyLW9mYlwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTkyLGl2OjE2LG1vZGU6XCJPRkJcIix0eXBlOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1vZmJcIjp7Y2lwaGVyOlwiQUVTXCIsa2V5OjI1NixpdjoxNixtb2RlOlwiT0ZCXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xMjgtY3RyXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTYsbW9kZTpcIkNUUlwiLHR5cGU6XCJzdHJlYW1cIn0sXCJhZXMtMTkyLWN0clwiOntjaXBoZXI6XCJBRVNcIixrZXk6MTkyLGl2OjE2LG1vZGU6XCJDVFJcIix0eXBlOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1jdHJcIjp7Y2lwaGVyOlwiQUVTXCIsa2V5OjI1NixpdjoxNixtb2RlOlwiQ1RSXCIsdHlwZTpcInN0cmVhbVwifSxcImFlcy0xMjgtZ2NtXCI6e2NpcGhlcjpcIkFFU1wiLGtleToxMjgsaXY6MTIsbW9kZTpcIkdDTVwiLHR5cGU6XCJhdXRoXCJ9LFwiYWVzLTE5Mi1nY21cIjp7Y2lwaGVyOlwiQUVTXCIsa2V5OjE5MixpdjoxMixtb2RlOlwiR0NNXCIsdHlwZTpcImF1dGhcIn0sXCJhZXMtMjU2LWdjbVwiOntjaXBoZXI6XCJBRVNcIixrZXk6MjU2LGl2OjEyLG1vZGU6XCJHQ01cIix0eXBlOlwiYXV0aFwifX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDQzKSxpPW4oMykuQnVmZmVyLGE9bigxOCksbz1uKDIpLHM9bigxNjkpLHU9bigzMiksYz1uKDEwMSk7ZnVuY3Rpb24gbCh0LGUsbixvKXthLmNhbGwodGhpcyk7dmFyIHU9aS5hbGxvYyg0LDApO3RoaXMuX2NpcGhlcj1uZXcgci5BRVMoZSk7dmFyIGw9dGhpcy5fY2lwaGVyLmVuY3J5cHRCbG9jayh1KTt0aGlzLl9naGFzaD1uZXcgcyhsKSxuPWZ1bmN0aW9uKHQsZSxuKXtpZigxMj09PWUubGVuZ3RoKXJldHVybiB0Ll9maW5JRD1pLmNvbmNhdChbZSxpLmZyb20oWzAsMCwwLDFdKV0pLGkuY29uY2F0KFtlLGkuZnJvbShbMCwwLDAsMl0pXSk7dmFyIHI9bmV3IHMobiksYT1lLmxlbmd0aCxvPWElMTY7ci51cGRhdGUoZSksbyYmKG89MTYtbyxyLnVwZGF0ZShpLmFsbG9jKG8sMCkpKSxyLnVwZGF0ZShpLmFsbG9jKDgsMCkpO3ZhciB1PTgqYSxsPWkuYWxsb2MoOCk7bC53cml0ZVVJbnRCRSh1LDAsOCksci51cGRhdGUobCksdC5fZmluSUQ9ci5zdGF0ZTt2YXIgZj1pLmZyb20odC5fZmluSUQpO3JldHVybiBjKGYpLGZ9KHRoaXMsbixsKSx0aGlzLl9wcmV2PWkuZnJvbShuKSx0aGlzLl9jYWNoZT1pLmFsbG9jVW5zYWZlKDApLHRoaXMuX3NlY0NhY2hlPWkuYWxsb2NVbnNhZmUoMCksdGhpcy5fZGVjcnlwdD1vLHRoaXMuX2FsZW49MCx0aGlzLl9sZW49MCx0aGlzLl9tb2RlPXQsdGhpcy5fYXV0aFRhZz1udWxsLHRoaXMuX2NhbGxlZD0hMX1vKGwsYSksbC5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXtpZighdGhpcy5fY2FsbGVkJiZ0aGlzLl9hbGVuKXt2YXIgZT0xNi10aGlzLl9hbGVuJTE2O2U8MTYmJihlPWkuYWxsb2MoZSwwKSx0aGlzLl9naGFzaC51cGRhdGUoZSkpfXRoaXMuX2NhbGxlZD0hMDt2YXIgbj10aGlzLl9tb2RlLmVuY3J5cHQodGhpcyx0KTtyZXR1cm4gdGhpcy5fZGVjcnlwdD90aGlzLl9naGFzaC51cGRhdGUodCk6dGhpcy5fZ2hhc2gudXBkYXRlKG4pLHRoaXMuX2xlbis9dC5sZW5ndGgsbn0sbC5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7aWYodGhpcy5fZGVjcnlwdCYmIXRoaXMuX2F1dGhUYWcpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgc3RhdGUgb3IgdW5hYmxlIHRvIGF1dGhlbnRpY2F0ZSBkYXRhXCIpO3ZhciB0PXUodGhpcy5fZ2hhc2guZmluYWwoOCp0aGlzLl9hbGVuLDgqdGhpcy5fbGVuKSx0aGlzLl9jaXBoZXIuZW5jcnlwdEJsb2NrKHRoaXMuX2ZpbklEKSk7aWYodGhpcy5fZGVjcnlwdCYmZnVuY3Rpb24odCxlKXt2YXIgbj0wO3QubGVuZ3RoIT09ZS5sZW5ndGgmJm4rKztmb3IodmFyIHI9TWF0aC5taW4odC5sZW5ndGgsZS5sZW5ndGgpLGk9MDtpPHI7KytpKW4rPXRbaV1eZVtpXTtyZXR1cm4gbn0odCx0aGlzLl9hdXRoVGFnKSl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBzdGF0ZSBvciB1bmFibGUgdG8gYXV0aGVudGljYXRlIGRhdGFcIik7dGhpcy5fYXV0aFRhZz10LHRoaXMuX2NpcGhlci5zY3J1YigpfSxsLnByb3RvdHlwZS5nZXRBdXRoVGFnPWZ1bmN0aW9uKCl7aWYodGhpcy5fZGVjcnlwdHx8IWkuaXNCdWZmZXIodGhpcy5fYXV0aFRhZykpdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGluZyB0byBnZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIik7cmV0dXJuIHRoaXMuX2F1dGhUYWd9LGwucHJvdG90eXBlLnNldEF1dGhUYWc9ZnVuY3Rpb24odCl7aWYoIXRoaXMuX2RlY3J5cHQpdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGluZyB0byBzZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIik7dGhpcy5fYXV0aFRhZz10fSxsLnByb3RvdHlwZS5zZXRBQUQ9ZnVuY3Rpb24odCl7aWYodGhpcy5fY2FsbGVkKXRocm93IG5ldyBFcnJvcihcIkF0dGVtcHRpbmcgdG8gc2V0IEFBRCBpbiB1bnN1cHBvcnRlZCBzdGF0ZVwiKTt0aGlzLl9naGFzaC51cGRhdGUodCksdGhpcy5fYWxlbis9dC5sZW5ndGh9LHQuZXhwb3J0cz1sfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big0MyksaT1uKDMpLkJ1ZmZlcixhPW4oMTgpO2Z1bmN0aW9uIG8odCxlLG4sbyl7YS5jYWxsKHRoaXMpLHRoaXMuX2NpcGhlcj1uZXcgci5BRVMoZSksdGhpcy5fcHJldj1pLmZyb20obiksdGhpcy5fY2FjaGU9aS5hbGxvY1Vuc2FmZSgwKSx0aGlzLl9zZWNDYWNoZT1pLmFsbG9jVW5zYWZlKDApLHRoaXMuX2RlY3J5cHQ9byx0aGlzLl9tb2RlPXR9bigyKShvLGEpLG8ucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX21vZGUuZW5jcnlwdCh0aGlzLHQsdGhpcy5fZGVjcnlwdCl9LG8ucHJvdG90eXBlLl9maW5hbD1mdW5jdGlvbigpe3RoaXMuX2NpcGhlci5zY3J1YigpfSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMjIpO3QuZXhwb3J0cz12LHYuc2ltcGxlU2lldmU9Zyx2LmZlcm1hdFRlc3Q9eTt2YXIgaT1uKDUpLGE9bmV3IGkoMjQpLG89bmV3KG4oMTA2KSkscz1uZXcgaSgxKSx1PW5ldyBpKDIpLGM9bmV3IGkoNSksbD0obmV3IGkoMTYpLG5ldyBpKDgpLG5ldyBpKDEwKSksZj1uZXcgaSgzKSxoPShuZXcgaSg3KSxuZXcgaSgxMSkpLHA9bmV3IGkoNCksZD0obmV3IGkoMTIpLG51bGwpO2Z1bmN0aW9uIG0oKXtpZihudWxsIT09ZClyZXR1cm4gZDt2YXIgdD1bXTt0WzBdPTI7Zm9yKHZhciBlPTEsbj0zO248MTA0ODU3NjtuKz0yKXtmb3IodmFyIHI9TWF0aC5jZWlsKE1hdGguc3FydChuKSksaT0wO2k8ZSYmdFtpXTw9ciYmbiV0W2ldIT0wO2krKyk7ZSE9PWkmJnRbaV08PXJ8fCh0W2UrK109bil9cmV0dXJuIGQ9dCx0fWZ1bmN0aW9uIGcodCl7Zm9yKHZhciBlPW0oKSxuPTA7bjxlLmxlbmd0aDtuKyspaWYoMD09PXQubW9kbihlW25dKSlyZXR1cm4gMD09PXQuY21wbihlW25dKTtyZXR1cm4hMH1mdW5jdGlvbiB5KHQpe3ZhciBlPWkubW9udCh0KTtyZXR1cm4gMD09PXUudG9SZWQoZSkucmVkUG93KHQuc3VibigxKSkuZnJvbVJlZCgpLmNtcG4oMSl9ZnVuY3Rpb24gdih0LGUpe2lmKHQ8MTYpcmV0dXJuIG5ldyBpKDI9PT1lfHw1PT09ZT9bMTQwLDEyM106WzE0MCwzOV0pO3ZhciBuLGQ7Zm9yKGU9bmV3IGkoZSk7Oyl7Zm9yKG49bmV3IGkocihNYXRoLmNlaWwodC84KSkpO24uYml0TGVuZ3RoKCk+dDspbi5pc2hybigxKTtpZihuLmlzRXZlbigpJiZuLmlhZGQocyksbi50ZXN0bigxKXx8bi5pYWRkKHUpLGUuY21wKHUpKXtpZighZS5jbXAoYykpZm9yKDtuLm1vZChsKS5jbXAoZik7KW4uaWFkZChwKX1lbHNlIGZvcig7bi5tb2QoYSkuY21wKGgpOyluLmlhZGQocCk7aWYoZyhkPW4uc2hybigxKSkmJmcobikmJnkoZCkmJnkobikmJm8udGVzdChkKSYmby50ZXN0KG4pKXJldHVybiBufX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDUpLGk9bigxMDcpO2Z1bmN0aW9uIGEodCl7dGhpcy5yYW5kPXR8fG5ldyBpLlJhbmR9dC5leHBvcnRzPWEsYS5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBhKHQpfSxhLnByb3RvdHlwZS5fcmFuZGJlbG93PWZ1bmN0aW9uKHQpe3ZhciBlPXQuYml0TGVuZ3RoKCksbj1NYXRoLmNlaWwoZS84KTtkb3t2YXIgaT1uZXcgcih0aGlzLnJhbmQuZ2VuZXJhdGUobikpfXdoaWxlKGkuY21wKHQpPj0wKTtyZXR1cm4gaX0sYS5wcm90b3R5cGUuX3JhbmRyYW5nZT1mdW5jdGlvbih0LGUpe3ZhciBuPWUuc3ViKHQpO3JldHVybiB0LmFkZCh0aGlzLl9yYW5kYmVsb3cobikpfSxhLnByb3RvdHlwZS50ZXN0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10LmJpdExlbmd0aCgpLGE9ci5tb250KHQpLG89bmV3IHIoMSkudG9SZWQoYSk7ZXx8KGU9TWF0aC5tYXgoMSxpLzQ4fDApKTtmb3IodmFyIHM9dC5zdWJuKDEpLHU9MDshcy50ZXN0bih1KTt1KyspO2Zvcih2YXIgYz10LnNocm4odSksbD1zLnRvUmVkKGEpO2U+MDtlLS0pe3ZhciBmPXRoaXMuX3JhbmRyYW5nZShuZXcgcigyKSxzKTtuJiZuKGYpO3ZhciBoPWYudG9SZWQoYSkucmVkUG93KGMpO2lmKDAhPT1oLmNtcChvKSYmMCE9PWguY21wKGwpKXtmb3IodmFyIHA9MTtwPHU7cCsrKXtpZigwPT09KGg9aC5yZWRTcXIoKSkuY21wKG8pKXJldHVybiExO2lmKDA9PT1oLmNtcChsKSlicmVha31pZihwPT09dSlyZXR1cm4hMX19cmV0dXJuITB9LGEucHJvdG90eXBlLmdldERpdmlzb3I9ZnVuY3Rpb24odCxlKXt2YXIgbj10LmJpdExlbmd0aCgpLGk9ci5tb250KHQpLGE9bmV3IHIoMSkudG9SZWQoaSk7ZXx8KGU9TWF0aC5tYXgoMSxuLzQ4fDApKTtmb3IodmFyIG89dC5zdWJuKDEpLHM9MDshby50ZXN0bihzKTtzKyspO2Zvcih2YXIgdT10LnNocm4ocyksYz1vLnRvUmVkKGkpO2U+MDtlLS0pe3ZhciBsPXRoaXMuX3JhbmRyYW5nZShuZXcgcigyKSxvKSxmPXQuZ2NkKGwpO2lmKDAhPT1mLmNtcG4oMSkpcmV0dXJuIGY7dmFyIGg9bC50b1JlZChpKS5yZWRQb3codSk7aWYoMCE9PWguY21wKGEpJiYwIT09aC5jbXAoYykpe2Zvcih2YXIgcD0xO3A8cztwKyspe2lmKDA9PT0oaD1oLnJlZFNxcigpKS5jbXAoYSkpcmV0dXJuIGguZnJvbVJlZCgpLnN1Ym4oMSkuZ2NkKHQpO2lmKDA9PT1oLmNtcChjKSlicmVha31pZihwPT09cylyZXR1cm4oaD1oLnJlZFNxcigpKS5mcm9tUmVkKCkuc3VibigxKS5nY2QodCl9fXJldHVybiExfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByO2Z1bmN0aW9uIGkodCl7dGhpcy5yYW5kPXR9aWYodC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiByfHwocj1uZXcgaShudWxsKSksci5nZW5lcmF0ZSh0KX0sdC5leHBvcnRzLlJhbmQ9aSxpLnByb3RvdHlwZS5nZW5lcmF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmFuZCh0KX0saS5wcm90b3R5cGUuX3JhbmQ9ZnVuY3Rpb24odCl7aWYodGhpcy5yYW5kLmdldEJ5dGVzKXJldHVybiB0aGlzLnJhbmQuZ2V0Qnl0ZXModCk7Zm9yKHZhciBlPW5ldyBVaW50OEFycmF5KHQpLG49MDtuPGUubGVuZ3RoO24rKyllW25dPXRoaXMucmFuZC5nZXRCeXRlKCk7cmV0dXJuIGV9LFwib2JqZWN0XCI9PXR5cGVvZiBzZWxmKXNlbGYuY3J5cHRvJiZzZWxmLmNyeXB0by5nZXRSYW5kb21WYWx1ZXM/aS5wcm90b3R5cGUuX3JhbmQ9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IFVpbnQ4QXJyYXkodCk7cmV0dXJuIHNlbGYuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhlKSxlfTpzZWxmLm1zQ3J5cHRvJiZzZWxmLm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcz9pLnByb3RvdHlwZS5fcmFuZD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgVWludDhBcnJheSh0KTtyZXR1cm4gc2VsZi5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMoZSksZX06XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmKGkucHJvdG90eXBlLl9yYW5kPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0pO2Vsc2UgdHJ5e3ZhciBhPW4oMTc1KTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBhLnJhbmRvbUJ5dGVzKXRocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWRcIik7aS5wcm90b3R5cGUuX3JhbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIGEucmFuZG9tQnl0ZXModCl9fWNhdGNoKHQpe319LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1lO2Z1bmN0aW9uIGkodCl7cmV0dXJuIDE9PT10Lmxlbmd0aD9cIjBcIit0OnR9ZnVuY3Rpb24gYSh0KXtmb3IodmFyIGU9XCJcIixuPTA7bjx0Lmxlbmd0aDtuKyspZSs9aSh0W25dLnRvU3RyaW5nKDE2KSk7cmV0dXJuIGV9ci50b0FycmF5PWZ1bmN0aW9uKHQsZSl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdC5zbGljZSgpO2lmKCF0KXJldHVybltdO3ZhciBuPVtdO2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyluW3JdPTB8dFtyXTtyZXR1cm4gbn1pZihcImhleFwiPT09ZSlmb3IoKHQ9dC5yZXBsYWNlKC9bXmEtejAtOV0rL2dpLFwiXCIpKS5sZW5ndGglMiE9MCYmKHQ9XCIwXCIrdCkscj0wO3I8dC5sZW5ndGg7cis9MiluLnB1c2gocGFyc2VJbnQodFtyXSt0W3IrMV0sMTYpKTtlbHNlIGZvcihyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXQuY2hhckNvZGVBdChyKSxhPWk+Pjgsbz0yNTUmaTthP24ucHVzaChhLG8pOm4ucHVzaChvKX1yZXR1cm4gbn0sci56ZXJvMj1pLHIudG9IZXg9YSxyLmVuY29kZT1mdW5jdGlvbih0LGUpe3JldHVyblwiaGV4XCI9PT1lP2EodCk6dH19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE1KS5yb3RyMzI7ZnVuY3Rpb24gaSh0LGUsbil7cmV0dXJuIHQmZV5+dCZufWZ1bmN0aW9uIGEodCxlLG4pe3JldHVybiB0JmVedCZuXmUmbn1mdW5jdGlvbiBvKHQsZSxuKXtyZXR1cm4gdF5lXm59ZS5mdF8xPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiAwPT09dD9pKGUsbixyKToxPT09dHx8Mz09PXQ/byhlLG4scik6Mj09PXQ/YShlLG4scik6dm9pZCAwfSxlLmNoMzI9aSxlLm1hajMyPWEsZS5wMzI9byxlLnMwXzI1Nj1mdW5jdGlvbih0KXtyZXR1cm4gcih0LDIpXnIodCwxMylecih0LDIyKX0sZS5zMV8yNTY9ZnVuY3Rpb24odCl7cmV0dXJuIHIodCw2KV5yKHQsMTEpXnIodCwyNSl9LGUuZzBfMjU2PWZ1bmN0aW9uKHQpe3JldHVybiByKHQsNylecih0LDE4KV50Pj4+M30sZS5nMV8yNTY9ZnVuY3Rpb24odCl7cmV0dXJuIHIodCwxNylecih0LDE5KV50Pj4+MTB9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxNSksaT1uKDMzKSxhPW4oMTA5KSxvPW4oMTIpLHM9ci5zdW0zMix1PXIuc3VtMzJfNCxjPXIuc3VtMzJfNSxsPWEuY2gzMixmPWEubWFqMzIsaD1hLnMwXzI1NixwPWEuczFfMjU2LGQ9YS5nMF8yNTYsbT1hLmcxXzI1NixnPWkuQmxvY2tIYXNoLHk9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF07ZnVuY3Rpb24gdigpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHYpKXJldHVybiBuZXcgdjtnLmNhbGwodGhpcyksdGhpcy5oPVsxNzc5MDMzNzAzLDMxNDQxMzQyNzcsMTAxMzkwNDI0MiwyNzczNDgwNzYyLDEzNTk4OTMxMTksMjYwMDgyMjkyNCw1Mjg3MzQ2MzUsMTU0MTQ1OTIyNV0sdGhpcy5rPXksdGhpcy5XPW5ldyBBcnJheSg2NCl9ci5pbmhlcml0cyh2LGcpLHQuZXhwb3J0cz12LHYuYmxvY2tTaXplPTUxMix2Lm91dFNpemU9MjU2LHYuaG1hY1N0cmVuZ3RoPTE5Mix2LnBhZExlbmd0aD02NCx2LnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMuVyxyPTA7cjwxNjtyKyspbltyXT10W2Urcl07Zm9yKDtyPG4ubGVuZ3RoO3IrKyluW3JdPXUobShuW3ItMl0pLG5bci03XSxkKG5bci0xNV0pLG5bci0xNl0pO3ZhciBpPXRoaXMuaFswXSxhPXRoaXMuaFsxXSxnPXRoaXMuaFsyXSx5PXRoaXMuaFszXSx2PXRoaXMuaFs0XSxiPXRoaXMuaFs1XSx3PXRoaXMuaFs2XSxfPXRoaXMuaFs3XTtmb3Iobyh0aGlzLmsubGVuZ3RoPT09bi5sZW5ndGgpLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIHg9YyhfLHAodiksbCh2LGIsdyksdGhpcy5rW3JdLG5bcl0pLEU9cyhoKGkpLGYoaSxhLGcpKTtfPXcsdz1iLGI9dix2PXMoeSx4KSx5PWcsZz1hLGE9aSxpPXMoeCxFKX10aGlzLmhbMF09cyh0aGlzLmhbMF0saSksdGhpcy5oWzFdPXModGhpcy5oWzFdLGEpLHRoaXMuaFsyXT1zKHRoaXMuaFsyXSxnKSx0aGlzLmhbM109cyh0aGlzLmhbM10seSksdGhpcy5oWzRdPXModGhpcy5oWzRdLHYpLHRoaXMuaFs1XT1zKHRoaXMuaFs1XSxiKSx0aGlzLmhbNl09cyh0aGlzLmhbNl0sdyksdGhpcy5oWzddPXModGhpcy5oWzddLF8pfSx2LnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVyblwiaGV4XCI9PT10P3IudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6ci5zcGxpdDMyKHRoaXMuaCxcImJpZ1wiKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE1KSxpPW4oMzMpLGE9bigxMiksbz1yLnJvdHI2NF9oaSxzPXIucm90cjY0X2xvLHU9ci5zaHI2NF9oaSxjPXIuc2hyNjRfbG8sbD1yLnN1bTY0LGY9ci5zdW02NF9oaSxoPXIuc3VtNjRfbG8scD1yLnN1bTY0XzRfaGksZD1yLnN1bTY0XzRfbG8sbT1yLnN1bTY0XzVfaGksZz1yLnN1bTY0XzVfbG8seT1pLkJsb2NrSGFzaCx2PVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV07ZnVuY3Rpb24gYigpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGIpKXJldHVybiBuZXcgYjt5LmNhbGwodGhpcyksdGhpcy5oPVsxNzc5MDMzNzAzLDQwODkyMzU3MjAsMzE0NDEzNDI3NywyMjI3ODczNTk1LDEwMTM5MDQyNDIsNDI3MTE3NTcyMywyNzczNDgwNzYyLDE1OTU3NTAxMjksMTM1OTg5MzExOSwyOTE3NTY1MTM3LDI2MDA4MjI5MjQsNzI1NTExMTk5LDUyODczNDYzNSw0MjE1Mzg5NTQ3LDE1NDE0NTkyMjUsMzI3MDMzMjA5XSx0aGlzLms9dix0aGlzLlc9bmV3IEFycmF5KDE2MCl9ZnVuY3Rpb24gdyh0LGUsbixyLGkpe3ZhciBhPXQmbl5+dCZpO3JldHVybiBhPDAmJihhKz00Mjk0OTY3Mjk2KSxhfWZ1bmN0aW9uIF8odCxlLG4scixpLGEpe3ZhciBvPWUmcl5+ZSZhO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIHgodCxlLG4scixpKXt2YXIgYT10Jm5edCZpXm4maTtyZXR1cm4gYTwwJiYoYSs9NDI5NDk2NzI5NiksYX1mdW5jdGlvbiBFKHQsZSxuLHIsaSxhKXt2YXIgbz1lJnJeZSZhXnImYTtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBTKHQsZSl7dmFyIG49byh0LGUsMjgpXm8oZSx0LDIpXm8oZSx0LDcpO3JldHVybiBuPDAmJihuKz00Mjk0OTY3Mjk2KSxufWZ1bmN0aW9uIE4odCxlKXt2YXIgbj1zKHQsZSwyOClecyhlLHQsMilecyhlLHQsNyk7cmV0dXJuIG48MCYmKG4rPTQyOTQ5NjcyOTYpLG59ZnVuY3Rpb24gSSh0LGUpe3ZhciBuPW8odCxlLDE0KV5vKHQsZSwxOClebyhlLHQsOSk7cmV0dXJuIG48MCYmKG4rPTQyOTQ5NjcyOTYpLG59ZnVuY3Rpb24gTyh0LGUpe3ZhciBuPXModCxlLDE0KV5zKHQsZSwxOClecyhlLHQsOSk7cmV0dXJuIG48MCYmKG4rPTQyOTQ5NjcyOTYpLG59ZnVuY3Rpb24gayh0LGUpe3ZhciBuPW8odCxlLDEpXm8odCxlLDgpXnUodCxlLDcpO3JldHVybiBuPDAmJihuKz00Mjk0OTY3Mjk2KSxufWZ1bmN0aW9uIEEodCxlKXt2YXIgbj1zKHQsZSwxKV5zKHQsZSw4KV5jKHQsZSw3KTtyZXR1cm4gbjwwJiYobis9NDI5NDk2NzI5Niksbn1mdW5jdGlvbiBDKHQsZSl7dmFyIG49byh0LGUsMTkpXm8oZSx0LDI5KV51KHQsZSw2KTtyZXR1cm4gbjwwJiYobis9NDI5NDk2NzI5Niksbn1mdW5jdGlvbiBQKHQsZSl7dmFyIG49cyh0LGUsMTkpXnMoZSx0LDI5KV5jKHQsZSw2KTtyZXR1cm4gbjwwJiYobis9NDI5NDk2NzI5Niksbn1yLmluaGVyaXRzKGIseSksdC5leHBvcnRzPWIsYi5ibG9ja1NpemU9MTAyNCxiLm91dFNpemU9NTEyLGIuaG1hY1N0cmVuZ3RoPTE5MixiLnBhZExlbmd0aD0xMjgsYi5wcm90b3R5cGUuX3ByZXBhcmVCbG9jaz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10aGlzLlcscj0wO3I8MzI7cisrKW5bcl09dFtlK3JdO2Zvcig7cjxuLmxlbmd0aDtyKz0yKXt2YXIgaT1DKG5bci00XSxuW3ItM10pLGE9UChuW3ItNF0sbltyLTNdKSxvPW5bci0xNF0scz1uW3ItMTNdLHU9ayhuW3ItMzBdLG5bci0yOV0pLGM9QShuW3ItMzBdLG5bci0yOV0pLGw9bltyLTMyXSxmPW5bci0zMV07bltyXT1wKGksYSxvLHMsdSxjLGwsZiksbltyKzFdPWQoaSxhLG8scyx1LGMsbCxmKX19LGIucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxlKXt0aGlzLl9wcmVwYXJlQmxvY2sodCxlKTt2YXIgbj10aGlzLlcscj10aGlzLmhbMF0saT10aGlzLmhbMV0sbz10aGlzLmhbMl0scz10aGlzLmhbM10sdT10aGlzLmhbNF0sYz10aGlzLmhbNV0scD10aGlzLmhbNl0sZD10aGlzLmhbN10seT10aGlzLmhbOF0sdj10aGlzLmhbOV0sYj10aGlzLmhbMTBdLGs9dGhpcy5oWzExXSxBPXRoaXMuaFsxMl0sQz10aGlzLmhbMTNdLFA9dGhpcy5oWzE0XSxUPXRoaXMuaFsxNV07YSh0aGlzLmsubGVuZ3RoPT09bi5sZW5ndGgpO2Zvcih2YXIgUj0wO1I8bi5sZW5ndGg7Uis9Mil7dmFyIEQ9UCxNPVQsaj1JKHksdiksQj1PKHksdiksTD13KHksdixiLGssQSksej1fKHksdixiLGssQSxDKSxGPXRoaXMua1tSXSxVPXRoaXMua1tSKzFdLFY9bltSXSxXPW5bUisxXSxxPW0oRCxNLGosQixMLHosRixVLFYsVyksJD1nKEQsTSxqLEIsTCx6LEYsVSxWLFcpO0Q9UyhyLGkpLE09TihyLGkpLGo9eChyLGksbyxzLHUpLEI9RShyLGksbyxzLHUsYyk7dmFyIEg9ZihELE0saixCKSxLPWgoRCxNLGosQik7UD1BLFQ9QyxBPWIsQz1rLGI9eSxrPXYseT1mKHAsZCxxLCQpLHY9aChkLGQscSwkKSxwPXUsZD1jLHU9byxjPXMsbz1yLHM9aSxyPWYocSwkLEgsSyksaT1oKHEsJCxILEspfWwodGhpcy5oLDAscixpKSxsKHRoaXMuaCwyLG8scyksbCh0aGlzLmgsNCx1LGMpLGwodGhpcy5oLDYscCxkKSxsKHRoaXMuaCw4LHksdiksbCh0aGlzLmgsMTAsYixrKSxsKHRoaXMuaCwxMixBLEMpLGwodGhpcy5oLDE0LFAsVCl9LGIucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuXCJoZXhcIj09PXQ/ci50b0hleDMyKHRoaXMuaCxcImJpZ1wiKTpyLnNwbGl0MzIodGhpcy5oLFwiYmlnXCIpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMiksaT1uKDM1KS5SZXBvcnRlcixhPW4oNCkuQnVmZmVyO2Z1bmN0aW9uIG8odCxlKXtpLmNhbGwodGhpcyxlKSxhLmlzQnVmZmVyKHQpPyh0aGlzLmJhc2U9dCx0aGlzLm9mZnNldD0wLHRoaXMubGVuZ3RoPXQubGVuZ3RoKTp0aGlzLmVycm9yKFwiSW5wdXQgbm90IEJ1ZmZlclwiKX1mdW5jdGlvbiBzKHQsZSl7aWYoQXJyYXkuaXNBcnJheSh0KSl0aGlzLmxlbmd0aD0wLHRoaXMudmFsdWU9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBzfHwodD1uZXcgcyh0LGUpKSx0aGlzLmxlbmd0aCs9dC5sZW5ndGgsdH0sdGhpcyk7ZWxzZSBpZihcIm51bWJlclwiPT10eXBlb2YgdCl7aWYoISgwPD10JiZ0PD0yNTUpKXJldHVybiBlLmVycm9yKFwibm9uLWJ5dGUgRW5jb2RlckJ1ZmZlciB2YWx1ZVwiKTt0aGlzLnZhbHVlPXQsdGhpcy5sZW5ndGg9MX1lbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXRoaXMudmFsdWU9dCx0aGlzLmxlbmd0aD1hLmJ5dGVMZW5ndGgodCk7ZWxzZXtpZighYS5pc0J1ZmZlcih0KSlyZXR1cm4gZS5lcnJvcihcIlVuc3VwcG9ydGVkIHR5cGU6IFwiK3R5cGVvZiB0KTt0aGlzLnZhbHVlPXQsdGhpcy5sZW5ndGg9dC5sZW5ndGh9fXIobyxpKSxlLkRlY29kZXJCdWZmZXI9byxvLnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uKCl7cmV0dXJue29mZnNldDp0aGlzLm9mZnNldCxyZXBvcnRlcjppLnByb3RvdHlwZS5zYXZlLmNhbGwodGhpcyl9fSxvLnByb3RvdHlwZS5yZXN0b3JlPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBvKHRoaXMuYmFzZSk7cmV0dXJuIGUub2Zmc2V0PXQub2Zmc2V0LGUubGVuZ3RoPXRoaXMub2Zmc2V0LHRoaXMub2Zmc2V0PXQub2Zmc2V0LGkucHJvdG90eXBlLnJlc3RvcmUuY2FsbCh0aGlzLHQucmVwb3J0ZXIpLGV9LG8ucHJvdG90eXBlLmlzRW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vZmZzZXQ9PT10aGlzLmxlbmd0aH0sby5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9mZnNldCsxPD10aGlzLmxlbmd0aD90aGlzLmJhc2UucmVhZFVJbnQ4KHRoaXMub2Zmc2V0KyssITApOnRoaXMuZXJyb3IodHx8XCJEZWNvZGVyQnVmZmVyIG92ZXJydW5cIil9LG8ucHJvdG90eXBlLnNraXA9ZnVuY3Rpb24odCxlKXtpZighKHRoaXMub2Zmc2V0K3Q8PXRoaXMubGVuZ3RoKSlyZXR1cm4gdGhpcy5lcnJvcihlfHxcIkRlY29kZXJCdWZmZXIgb3ZlcnJ1blwiKTt2YXIgbj1uZXcgbyh0aGlzLmJhc2UpO3JldHVybiBuLl9yZXBvcnRlclN0YXRlPXRoaXMuX3JlcG9ydGVyU3RhdGUsbi5vZmZzZXQ9dGhpcy5vZmZzZXQsbi5sZW5ndGg9dGhpcy5vZmZzZXQrdCx0aGlzLm9mZnNldCs9dCxufSxvLnByb3RvdHlwZS5yYXc9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYmFzZS5zbGljZSh0P3Qub2Zmc2V0OnRoaXMub2Zmc2V0LHRoaXMubGVuZ3RoKX0sZS5FbmNvZGVyQnVmZmVyPXMscy5wcm90b3R5cGUuam9pbj1mdW5jdGlvbih0LGUpe3JldHVybiB0fHwodD1uZXcgYSh0aGlzLmxlbmd0aCkpLGV8fChlPTApLDA9PT10aGlzLmxlbmd0aD90OihBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpP3RoaXMudmFsdWUuZm9yRWFjaChmdW5jdGlvbihuKXtuLmpvaW4odCxlKSxlKz1uLmxlbmd0aH0pOihcIm51bWJlclwiPT10eXBlb2YgdGhpcy52YWx1ZT90W2VdPXRoaXMudmFsdWU6XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMudmFsdWU/dC53cml0ZSh0aGlzLnZhbHVlLGUpOmEuaXNCdWZmZXIodGhpcy52YWx1ZSkmJnRoaXMudmFsdWUuY29weSh0LGUpLGUrPXRoaXMubGVuZ3RoKSx0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lO3IuX3JldmVyc2U9ZnVuY3Rpb24odCl7dmFyIGU9e307cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24obil7KDB8bik9PW4mJihufD0wKTt2YXIgcj10W25dO2Vbcl09bn0pLGV9LHIuZGVyPW4oMjA3KX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMiksaT1uKDM0KSxhPWkuYmFzZSxvPWkuYmlnbnVtLHM9aS5jb25zdGFudHMuZGVyO2Z1bmN0aW9uIHUodCl7dGhpcy5lbmM9XCJkZXJcIix0aGlzLm5hbWU9dC5uYW1lLHRoaXMuZW50aXR5PXQsdGhpcy50cmVlPW5ldyBjLHRoaXMudHJlZS5faW5pdCh0LmJvZHkpfWZ1bmN0aW9uIGModCl7YS5Ob2RlLmNhbGwodGhpcyxcImRlclwiLHQpfWZ1bmN0aW9uIGwodCxlKXt2YXIgbj10LnJlYWRVSW50OChlKTtpZih0LmlzRXJyb3IobikpcmV0dXJuIG47dmFyIHI9cy50YWdDbGFzc1tuPj42XSxpPTA9PSgzMiZuKTtpZigzMT09KDMxJm4pKXt2YXIgYT1uO2ZvcihuPTA7MTI4PT0oMTI4JmEpOyl7aWYoYT10LnJlYWRVSW50OChlKSx0LmlzRXJyb3IoYSkpcmV0dXJuIGE7bjw8PTcsbnw9MTI3JmF9fWVsc2UgbiY9MzE7cmV0dXJue2NsczpyLHByaW1pdGl2ZTppLHRhZzpuLHRhZ1N0cjpzLnRhZ1tuXX19ZnVuY3Rpb24gZih0LGUsbil7dmFyIHI9dC5yZWFkVUludDgobik7aWYodC5pc0Vycm9yKHIpKXJldHVybiByO2lmKCFlJiYxMjg9PT1yKXJldHVybiBudWxsO2lmKDA9PSgxMjgmcikpcmV0dXJuIHI7dmFyIGk9MTI3JnI7aWYoaT40KXJldHVybiB0LmVycm9yKFwibGVuZ3RoIG9jdGVjdCBpcyB0b28gbG9uZ1wiKTtyPTA7Zm9yKHZhciBhPTA7YTxpO2ErKyl7cjw8PTg7dmFyIG89dC5yZWFkVUludDgobik7aWYodC5pc0Vycm9yKG8pKXJldHVybiBvO3J8PW99cmV0dXJuIHJ9dC5leHBvcnRzPXUsdS5wcm90b3R5cGUuZGVjb2RlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQgaW5zdGFuY2VvZiBhLkRlY29kZXJCdWZmZXJ8fCh0PW5ldyBhLkRlY29kZXJCdWZmZXIodCxlKSksdGhpcy50cmVlLl9kZWNvZGUodCxlKX0scihjLGEuTm9kZSksYy5wcm90b3R5cGUuX3BlZWtUYWc9ZnVuY3Rpb24odCxlLG4pe2lmKHQuaXNFbXB0eSgpKXJldHVybiExO3ZhciByPXQuc2F2ZSgpLGk9bCh0LCdGYWlsZWQgdG8gcGVlayB0YWc6IFwiJytlKydcIicpO3JldHVybiB0LmlzRXJyb3IoaSk/aToodC5yZXN0b3JlKHIpLGkudGFnPT09ZXx8aS50YWdTdHI9PT1lfHxpLnRhZ1N0citcIm9mXCI9PT1lfHxuKX0sYy5wcm90b3R5cGUuX2RlY29kZVRhZz1mdW5jdGlvbih0LGUsbil7dmFyIHI9bCh0LCdGYWlsZWQgdG8gZGVjb2RlIHRhZyBvZiBcIicrZSsnXCInKTtpZih0LmlzRXJyb3IocikpcmV0dXJuIHI7dmFyIGk9Zih0LHIucHJpbWl0aXZlLCdGYWlsZWQgdG8gZ2V0IGxlbmd0aCBvZiBcIicrZSsnXCInKTtpZih0LmlzRXJyb3IoaSkpcmV0dXJuIGk7aWYoIW4mJnIudGFnIT09ZSYmci50YWdTdHIhPT1lJiZyLnRhZ1N0citcIm9mXCIhPT1lKXJldHVybiB0LmVycm9yKCdGYWlsZWQgdG8gbWF0Y2ggdGFnOiBcIicrZSsnXCInKTtpZihyLnByaW1pdGl2ZXx8bnVsbCE9PWkpcmV0dXJuIHQuc2tpcChpLCdGYWlsZWQgdG8gbWF0Y2ggYm9keSBvZjogXCInK2UrJ1wiJyk7dmFyIGE9dC5zYXZlKCksbz10aGlzLl9za2lwVW50aWxFbmQodCwnRmFpbGVkIHRvIHNraXAgaW5kZWZpbml0ZSBsZW5ndGggYm9keTogXCInK3RoaXMudGFnKydcIicpO3JldHVybiB0LmlzRXJyb3Iobyk/bzooaT10Lm9mZnNldC1hLm9mZnNldCx0LnJlc3RvcmUoYSksdC5za2lwKGksJ0ZhaWxlZCB0byBtYXRjaCBib2R5IG9mOiBcIicrZSsnXCInKSl9LGMucHJvdG90eXBlLl9za2lwVW50aWxFbmQ9ZnVuY3Rpb24odCxlKXtmb3IoOzspe3ZhciBuPWwodCxlKTtpZih0LmlzRXJyb3IobikpcmV0dXJuIG47dmFyIHIsaT1mKHQsbi5wcmltaXRpdmUsZSk7aWYodC5pc0Vycm9yKGkpKXJldHVybiBpO2lmKHI9bi5wcmltaXRpdmV8fG51bGwhPT1pP3Quc2tpcChpKTp0aGlzLl9za2lwVW50aWxFbmQodCxlKSx0LmlzRXJyb3IocikpcmV0dXJuIHI7aWYoXCJlbmRcIj09PW4udGFnU3RyKWJyZWFrfX0sYy5wcm90b3R5cGUuX2RlY29kZUxpc3Q9ZnVuY3Rpb24odCxlLG4scil7Zm9yKHZhciBpPVtdOyF0LmlzRW1wdHkoKTspe3ZhciBhPXRoaXMuX3BlZWtUYWcodCxcImVuZFwiKTtpZih0LmlzRXJyb3IoYSkpcmV0dXJuIGE7dmFyIG89bi5kZWNvZGUodCxcImRlclwiLHIpO2lmKHQuaXNFcnJvcihvKSYmYSlicmVhaztpLnB1c2gobyl9cmV0dXJuIGl9LGMucHJvdG90eXBlLl9kZWNvZGVTdHI9ZnVuY3Rpb24odCxlKXtpZihcImJpdHN0clwiPT09ZSl7dmFyIG49dC5yZWFkVUludDgoKTtyZXR1cm4gdC5pc0Vycm9yKG4pP246e3VudXNlZDpuLGRhdGE6dC5yYXcoKX19aWYoXCJibXBzdHJcIj09PWUpe3ZhciByPXQucmF3KCk7aWYoci5sZW5ndGglMj09MSlyZXR1cm4gdC5lcnJvcihcIkRlY29kaW5nIG9mIHN0cmluZyB0eXBlOiBibXBzdHIgbGVuZ3RoIG1pc21hdGNoXCIpO2Zvcih2YXIgaT1cIlwiLGE9MDthPHIubGVuZ3RoLzI7YSsrKWkrPVN0cmluZy5mcm9tQ2hhckNvZGUoci5yZWFkVUludDE2QkUoMiphKSk7cmV0dXJuIGl9aWYoXCJudW1zdHJcIj09PWUpe3ZhciBvPXQucmF3KCkudG9TdHJpbmcoXCJhc2NpaVwiKTtyZXR1cm4gdGhpcy5faXNOdW1zdHIobyk/bzp0LmVycm9yKFwiRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IG51bXN0ciB1bnN1cHBvcnRlZCBjaGFyYWN0ZXJzXCIpfWlmKFwib2N0c3RyXCI9PT1lKXJldHVybiB0LnJhdygpO2lmKFwib2JqRGVzY1wiPT09ZSlyZXR1cm4gdC5yYXcoKTtpZihcInByaW50c3RyXCI9PT1lKXt2YXIgcz10LnJhdygpLnRvU3RyaW5nKFwiYXNjaWlcIik7cmV0dXJuIHRoaXMuX2lzUHJpbnRzdHIocyk/czp0LmVycm9yKFwiRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IHByaW50c3RyIHVuc3VwcG9ydGVkIGNoYXJhY3RlcnNcIil9cmV0dXJuL3N0ciQvLnRlc3QoZSk/dC5yYXcoKS50b1N0cmluZygpOnQuZXJyb3IoXCJEZWNvZGluZyBvZiBzdHJpbmcgdHlwZTogXCIrZStcIiB1bnN1cHBvcnRlZFwiKX0sYy5wcm90b3R5cGUuX2RlY29kZU9iamlkPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHIsaT1bXSxhPTA7IXQuaXNFbXB0eSgpOyl7dmFyIG89dC5yZWFkVUludDgoKTthPDw9NyxhfD0xMjcmbywwPT0oMTI4Jm8pJiYoaS5wdXNoKGEpLGE9MCl9MTI4Jm8mJmkucHVzaChhKTt2YXIgcz1pWzBdLzQwfDAsdT1pWzBdJTQwO2lmKHI9bj9pOltzLHVdLmNvbmNhdChpLnNsaWNlKDEpKSxlKXt2YXIgYz1lW3Iuam9pbihcIiBcIildO3ZvaWQgMD09PWMmJihjPWVbci5qb2luKFwiLlwiKV0pLHZvaWQgMCE9PWMmJihyPWMpfXJldHVybiByfSxjLnByb3RvdHlwZS5fZGVjb2RlVGltZT1mdW5jdGlvbih0LGUpe3ZhciBuPXQucmF3KCkudG9TdHJpbmcoKTtpZihcImdlbnRpbWVcIj09PWUpdmFyIHI9MHxuLnNsaWNlKDAsNCksaT0wfG4uc2xpY2UoNCw2KSxhPTB8bi5zbGljZSg2LDgpLG89MHxuLnNsaWNlKDgsMTApLHM9MHxuLnNsaWNlKDEwLDEyKSx1PTB8bi5zbGljZSgxMiwxNCk7ZWxzZXtpZihcInV0Y3RpbWVcIiE9PWUpcmV0dXJuIHQuZXJyb3IoXCJEZWNvZGluZyBcIitlK1wiIHRpbWUgaXMgbm90IHN1cHBvcnRlZCB5ZXRcIik7cj0wfG4uc2xpY2UoMCwyKSxpPTB8bi5zbGljZSgyLDQpLGE9MHxuLnNsaWNlKDQsNiksbz0wfG4uc2xpY2UoNiw4KSxzPTB8bi5zbGljZSg4LDEwKSx1PTB8bi5zbGljZSgxMCwxMik7cj1yPDcwPzJlMytyOjE5MDArcn1yZXR1cm4gRGF0ZS5VVEMocixpLTEsYSxvLHMsdSwwKX0sYy5wcm90b3R5cGUuX2RlY29kZU51bGw9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGx9LGMucHJvdG90eXBlLl9kZWNvZGVCb29sPWZ1bmN0aW9uKHQpe3ZhciBlPXQucmVhZFVJbnQ4KCk7cmV0dXJuIHQuaXNFcnJvcihlKT9lOjAhPT1lfSxjLnByb3RvdHlwZS5fZGVjb2RlSW50PWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5yYXcoKSxyPW5ldyBvKG4pO3JldHVybiBlJiYocj1lW3IudG9TdHJpbmcoMTApXXx8cikscn0sYy5wcm90b3R5cGUuX3VzZT1mdW5jdGlvbih0LGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJih0PXQoZSkpLHQuX2dldERlY29kZXIoXCJkZXJcIikudHJlZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpLGk9big0KS5CdWZmZXIsYT1uKDM0KSxvPWEuYmFzZSxzPWEuY29uc3RhbnRzLmRlcjtmdW5jdGlvbiB1KHQpe3RoaXMuZW5jPVwiZGVyXCIsdGhpcy5uYW1lPXQubmFtZSx0aGlzLmVudGl0eT10LHRoaXMudHJlZT1uZXcgYyx0aGlzLnRyZWUuX2luaXQodC5ib2R5KX1mdW5jdGlvbiBjKHQpe28uTm9kZS5jYWxsKHRoaXMsXCJkZXJcIix0KX1mdW5jdGlvbiBsKHQpe3JldHVybiB0PDEwP1wiMFwiK3Q6dH10LmV4cG9ydHM9dSx1LnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50cmVlLl9lbmNvZGUodCxlKS5qb2luKCl9LHIoYyxvLk5vZGUpLGMucHJvdG90eXBlLl9lbmNvZGVDb21wb3NpdGU9ZnVuY3Rpb24odCxlLG4scil7dmFyIGEsbz1mdW5jdGlvbih0LGUsbixyKXt2YXIgaTtcInNlcW9mXCI9PT10P3Q9XCJzZXFcIjpcInNldG9mXCI9PT10JiYodD1cInNldFwiKTtpZihzLnRhZ0J5TmFtZS5oYXNPd25Qcm9wZXJ0eSh0KSlpPXMudGFnQnlOYW1lW3RdO2Vsc2V7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fCgwfHQpIT09dClyZXR1cm4gci5lcnJvcihcIlVua25vd24gdGFnOiBcIit0KTtpPXR9aWYoaT49MzEpcmV0dXJuIHIuZXJyb3IoXCJNdWx0aS1vY3RldCB0YWcgZW5jb2RpbmcgdW5zdXBwb3J0ZWRcIik7ZXx8KGl8PTMyKTtyZXR1cm4gaXw9cy50YWdDbGFzc0J5TmFtZVtufHxcInVuaXZlcnNhbFwiXTw8Nn0odCxlLG4sdGhpcy5yZXBvcnRlcik7aWYoci5sZW5ndGg8MTI4KXJldHVybihhPW5ldyBpKDIpKVswXT1vLGFbMV09ci5sZW5ndGgsdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihbYSxyXSk7Zm9yKHZhciB1PTEsYz1yLmxlbmd0aDtjPj0yNTY7Yz4+PTgpdSsrOyhhPW5ldyBpKDIrdSkpWzBdPW8sYVsxXT0xMjh8dTtjPTErdTtmb3IodmFyIGw9ci5sZW5ndGg7bD4wO2MtLSxsPj49OClhW2NdPTI1NSZsO3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFthLHJdKX0sYy5wcm90b3R5cGUuX2VuY29kZVN0cj1mdW5jdGlvbih0LGUpe2lmKFwiYml0c3RyXCI9PT1lKXJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFswfHQudW51c2VkLHQuZGF0YV0pO2lmKFwiYm1wc3RyXCI9PT1lKXtmb3IodmFyIG49bmV3IGkoMip0Lmxlbmd0aCkscj0wO3I8dC5sZW5ndGg7cisrKW4ud3JpdGVVSW50MTZCRSh0LmNoYXJDb2RlQXQociksMipyKTtyZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihuKX1yZXR1cm5cIm51bXN0clwiPT09ZT90aGlzLl9pc051bXN0cih0KT90aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKHQpOnRoaXMucmVwb3J0ZXIuZXJyb3IoXCJFbmNvZGluZyBvZiBzdHJpbmcgdHlwZTogbnVtc3RyIHN1cHBvcnRzIG9ubHkgZGlnaXRzIGFuZCBzcGFjZVwiKTpcInByaW50c3RyXCI9PT1lP3RoaXMuX2lzUHJpbnRzdHIodCk/dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcih0KTp0aGlzLnJlcG9ydGVyLmVycm9yKFwiRW5jb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IHByaW50c3RyIHN1cHBvcnRzIG9ubHkgbGF0aW4gdXBwZXIgYW5kIGxvd2VyIGNhc2UgbGV0dGVycywgZGlnaXRzLCBzcGFjZSwgYXBvc3Ryb3BoZSwgbGVmdCBhbmQgcmlndGggcGFyZW50aGVzaXMsIHBsdXMgc2lnbiwgY29tbWEsIGh5cGhlbiwgZG90LCBzbGFzaCwgY29sb24sIGVxdWFsIHNpZ24sIHF1ZXN0aW9uIG1hcmtcIik6L3N0ciQvLnRlc3QoZSk/dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcih0KTpcIm9iakRlc2NcIj09PWU/dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcih0KTp0aGlzLnJlcG9ydGVyLmVycm9yKFwiRW5jb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IFwiK2UrXCIgdW5zdXBwb3J0ZWRcIil9LGMucHJvdG90eXBlLl9lbmNvZGVPYmppZD1mdW5jdGlvbih0LGUsbil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKCFlKXJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKFwic3RyaW5nIG9iamlkIGdpdmVuLCBidXQgbm8gdmFsdWVzIG1hcCBmb3VuZFwiKTtpZighZS5oYXNPd25Qcm9wZXJ0eSh0KSlyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIm9iamlkIG5vdCBmb3VuZCBpbiB2YWx1ZXMgbWFwXCIpO3Q9ZVt0XS5zcGxpdCgvW1xcc1xcLl0rL2cpO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXRbcl18PTB9ZWxzZSBpZihBcnJheS5pc0FycmF5KHQpKXt0PXQuc2xpY2UoKTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXRbcl18PTB9aWYoIUFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHRoaXMucmVwb3J0ZXIuZXJyb3IoXCJvYmppZCgpIHNob3VsZCBiZSBlaXRoZXIgYXJyYXkgb3Igc3RyaW5nLCBnb3Q6IFwiK0pTT04uc3RyaW5naWZ5KHQpKTtpZighbil7aWYodFsxXT49NDApcmV0dXJuIHRoaXMucmVwb3J0ZXIuZXJyb3IoXCJTZWNvbmQgb2JqaWQgaWRlbnRpZmllciBPT0JcIik7dC5zcGxpY2UoMCwyLDQwKnRbMF0rdFsxXSl9dmFyIGE9MDtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbz10W3JdO2ZvcihhKys7bz49MTI4O28+Pj03KWErK312YXIgcz1uZXcgaShhKSx1PXMubGVuZ3RoLTE7Zm9yKHI9dC5sZW5ndGgtMTtyPj0wO3ItLSl7bz10W3JdO2ZvcihzW3UtLV09MTI3Jm87KG8+Pj03KT4wOylzW3UtLV09MTI4fDEyNyZvfXJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKHMpfSxjLnByb3RvdHlwZS5fZW5jb2RlVGltZT1mdW5jdGlvbih0LGUpe3ZhciBuLHI9bmV3IERhdGUodCk7cmV0dXJuXCJnZW50aW1lXCI9PT1lP249W2woci5nZXRGdWxsWWVhcigpKSxsKHIuZ2V0VVRDTW9udGgoKSsxKSxsKHIuZ2V0VVRDRGF0ZSgpKSxsKHIuZ2V0VVRDSG91cnMoKSksbChyLmdldFVUQ01pbnV0ZXMoKSksbChyLmdldFVUQ1NlY29uZHMoKSksXCJaXCJdLmpvaW4oXCJcIik6XCJ1dGN0aW1lXCI9PT1lP249W2woci5nZXRGdWxsWWVhcigpJTEwMCksbChyLmdldFVUQ01vbnRoKCkrMSksbChyLmdldFVUQ0RhdGUoKSksbChyLmdldFVUQ0hvdXJzKCkpLGwoci5nZXRVVENNaW51dGVzKCkpLGwoci5nZXRVVENTZWNvbmRzKCkpLFwiWlwiXS5qb2luKFwiXCIpOnRoaXMucmVwb3J0ZXIuZXJyb3IoXCJFbmNvZGluZyBcIitlK1wiIHRpbWUgaXMgbm90IHN1cHBvcnRlZCB5ZXRcIiksdGhpcy5fZW5jb2RlU3RyKG4sXCJvY3RzdHJcIil9LGMucHJvdG90eXBlLl9lbmNvZGVOdWxsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoXCJcIil9LGMucHJvdG90eXBlLl9lbmNvZGVJbnQ9ZnVuY3Rpb24odCxlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7aWYoIWUpcmV0dXJuIHRoaXMucmVwb3J0ZXIuZXJyb3IoXCJTdHJpbmcgaW50IG9yIGVudW0gZ2l2ZW4sIGJ1dCBubyB2YWx1ZXMgbWFwXCIpO2lmKCFlLmhhc093blByb3BlcnR5KHQpKXJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKFwiVmFsdWVzIG1hcCBkb2Vzbid0IGNvbnRhaW46IFwiK0pTT04uc3RyaW5naWZ5KHQpKTt0PWVbdF19aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQmJiFpLmlzQnVmZmVyKHQpKXt2YXIgbj10LnRvQXJyYXkoKTshdC5zaWduJiYxMjgmblswXSYmbi51bnNoaWZ0KDApLHQ9bmV3IGkobil9aWYoaS5pc0J1ZmZlcih0KSl7dmFyIHI9dC5sZW5ndGg7MD09PXQubGVuZ3RoJiZyKys7dmFyIGE9bmV3IGkocik7cmV0dXJuIHQuY29weShhKSwwPT09dC5sZW5ndGgmJihhWzBdPTApLHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoYSl9aWYodDwxMjgpcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIodCk7aWYodDwyNTYpcmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoWzAsdF0pO3I9MTtmb3IodmFyIG89dDtvPj0yNTY7bz4+PTgpcisrO2ZvcihvPShhPW5ldyBBcnJheShyKSkubGVuZ3RoLTE7bz49MDtvLS0pYVtvXT0yNTUmdCx0Pj49ODtyZXR1cm4gMTI4JmFbMF0mJmEudW5zaGlmdCgwKSx0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKG5ldyBpKGEpKX0sYy5wcm90b3R5cGUuX2VuY29kZUJvb2w9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIodD8yNTU6MCl9LGMucHJvdG90eXBlLl91c2U9ZnVuY3Rpb24odCxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYodD10KGUpKSx0Ll9nZXRFbmNvZGVyKFwiZGVyXCIpLnRyZWV9LGMucHJvdG90eXBlLl9za2lwRGVmYXVsdD1mdW5jdGlvbih0LGUsbil7dmFyIHIsaT10aGlzLl9iYXNlU3RhdGU7aWYobnVsbD09PWkuZGVmYXVsdClyZXR1cm4hMTt2YXIgYT10LmpvaW4oKTtpZih2b2lkIDA9PT1pLmRlZmF1bHRCdWZmZXImJihpLmRlZmF1bHRCdWZmZXI9dGhpcy5fZW5jb2RlVmFsdWUoaS5kZWZhdWx0LGUsbikuam9pbigpKSxhLmxlbmd0aCE9PWkuZGVmYXVsdEJ1ZmZlci5sZW5ndGgpcmV0dXJuITE7Zm9yKHI9MDtyPGEubGVuZ3RoO3IrKylpZihhW3JdIT09aS5kZWZhdWx0QnVmZmVyW3JdKXJldHVybiExO3JldHVybiEwfX0sZnVuY3Rpb24odCl7dC5leHBvcnRzPXtcIjEuMy4xMzIuMC4xMFwiOlwic2VjcDI1NmsxXCIsXCIxLjMuMTMyLjAuMzNcIjpcInAyMjRcIixcIjEuMi44NDAuMTAwNDUuMy4xLjFcIjpcInAxOTJcIixcIjEuMi44NDAuMTAwNDUuMy4xLjdcIjpcInAyNTZcIixcIjEuMy4xMzIuMC4zNFwiOlwicDM4NFwiLFwiMS4zLjEzMi4wLjM1XCI6XCJwNTIxXCJ9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzMCksaT1uKDMpLkJ1ZmZlcjtmdW5jdGlvbiBhKHQpe3ZhciBlPWkuYWxsb2NVbnNhZmUoNCk7cmV0dXJuIGUud3JpdGVVSW50MzJCRSh0LDApLGV9dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuLG89aS5hbGxvYygwKSxzPTA7by5sZW5ndGg8ZTspbj1hKHMrKyksbz1pLmNvbmNhdChbbyxyKFwic2hhMVwiKS51cGRhdGUodCkudXBkYXRlKG4pLmRpZ2VzdCgpXSk7cmV0dXJuIG8uc2xpY2UoMCxlKX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoLHI9LTE7KytyPG47KXRbcl1ePWVbcl07cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big1KSxpPW4oMykuQnVmZmVyO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBpLmZyb20odC50b1JlZChyLm1vbnQoZS5tb2R1bHVzKSkucmVkUG93KG5ldyByKGUucHVibGljRXhwb25lbnQpKS5mcm9tUmVkKCkudG9BcnJheSgpKX19LCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE7aT1bZV0sdm9pZCAwPT09KGE9XCJmdW5jdGlvblwiPT10eXBlb2Yocj1mdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9dm9pZCAwLHQuZGVmYXVsdD1jbGFzc3tjb25zdHJ1Y3Rvcigpe3ZhciB0PW4oMjUyKTt0aGlzLlQ9dH1nZXQgQ29yZVRlbnNvcigpe3JldHVybiB0aGlzLlR9fX0pP3IuYXBwbHkoZSxpKTpyKXx8KHQuZXhwb3J0cz1hKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbih0LGUpeyFmdW5jdGlvbih0LG4pe1widXNlIHN0cmljdFwiO2lmKCF0LnNldEltbWVkaWF0ZSl7dmFyIHIsaSxhLG8scyx1PTEsYz17fSxsPSExLGY9dC5kb2N1bWVudCxoPU9iamVjdC5nZXRQcm90b3R5cGVPZiYmT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpO2g9aCYmaC5zZXRUaW1lb3V0P2g6dCxcIltvYmplY3QgcHJvY2Vzc11cIj09PXt9LnRvU3RyaW5nLmNhbGwodC5wcm9jZXNzKT9yPWZ1bmN0aW9uKHQpe2UubmV4dFRpY2soZnVuY3Rpb24oKXtkKHQpfSl9OiFmdW5jdGlvbigpe2lmKHQucG9zdE1lc3NhZ2UmJiF0LmltcG9ydFNjcmlwdHMpe3ZhciBlPSEwLG49dC5vbm1lc3NhZ2U7cmV0dXJuIHQub25tZXNzYWdlPWZ1bmN0aW9uKCl7ZT0hMX0sdC5wb3N0TWVzc2FnZShcIlwiLFwiKlwiKSx0Lm9ubWVzc2FnZT1uLGV9fSgpP3QuTWVzc2FnZUNoYW5uZWw/KChhPW5ldyBNZXNzYWdlQ2hhbm5lbCkucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKHQpe2QodC5kYXRhKX0scj1mdW5jdGlvbih0KXthLnBvcnQyLnBvc3RNZXNzYWdlKHQpfSk6ZiYmXCJvbnJlYWR5c3RhdGVjaGFuZ2VcImluIGYuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKT8oaT1mLmRvY3VtZW50RWxlbWVudCxyPWZ1bmN0aW9uKHQpe3ZhciBlPWYuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtlLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2QodCksZS5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxpLnJlbW92ZUNoaWxkKGUpLGU9bnVsbH0saS5hcHBlbmRDaGlsZChlKX0pOnI9ZnVuY3Rpb24odCl7c2V0VGltZW91dChkLDAsdCl9OihvPVwic2V0SW1tZWRpYXRlJFwiK01hdGgucmFuZG9tKCkrXCIkXCIscz1mdW5jdGlvbihlKXtlLnNvdXJjZT09PXQmJlwic3RyaW5nXCI9PXR5cGVvZiBlLmRhdGEmJjA9PT1lLmRhdGEuaW5kZXhPZihvKSYmZCgrZS5kYXRhLnNsaWNlKG8ubGVuZ3RoKSl9LHQuYWRkRXZlbnRMaXN0ZW5lcj90LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIscywhMSk6dC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLHMpLHI9ZnVuY3Rpb24oZSl7dC5wb3N0TWVzc2FnZShvK2UsXCIqXCIpfSksaC5zZXRJbW1lZGlhdGU9ZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9bmV3IEZ1bmN0aW9uKFwiXCIrdCkpO2Zvcih2YXIgZT1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKSxuPTA7bjxlLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbisxXTt2YXIgaT17Y2FsbGJhY2s6dCxhcmdzOmV9O3JldHVybiBjW3VdPWkscih1KSx1Kyt9LGguY2xlYXJJbW1lZGlhdGU9cH1mdW5jdGlvbiBwKHQpe2RlbGV0ZSBjW3RdfWZ1bmN0aW9uIGQodCl7aWYobClzZXRUaW1lb3V0KGQsMCx0KTtlbHNle3ZhciBlPWNbdF07aWYoZSl7bD0hMDt0cnl7IWZ1bmN0aW9uKHQpe3ZhciBlPXQuY2FsbGJhY2sscj10LmFyZ3M7c3dpdGNoKHIubGVuZ3RoKXtjYXNlIDA6ZSgpO2JyZWFrO2Nhc2UgMTplKHJbMF0pO2JyZWFrO2Nhc2UgMjplKHJbMF0sclsxXSk7YnJlYWs7Y2FzZSAzOmUoclswXSxyWzFdLHJbMl0pO2JyZWFrO2RlZmF1bHQ6ZS5hcHBseShuLHIpfX0oZSl9ZmluYWxseXtwKHQpLGw9ITF9fX19fShcInVuZGVmaW5lZFwiPT10eXBlb2Ygc2VsZj92b2lkIDA9PT10P3RoaXM6dDpzZWxmKX0pLmNhbGwodGhpcyxuKDExKSxuKDE0KSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmJ5dGVMZW5ndGg9ZnVuY3Rpb24odCl7dmFyIGU9Yyh0KSxuPWVbMF0scj1lWzFdO3JldHVybiAzKihuK3IpLzQtcn0sZS50b0J5dGVBcnJheT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj1jKHQpLHI9blswXSxvPW5bMV0scz1uZXcgYShmdW5jdGlvbih0LGUsbil7cmV0dXJuIDMqKGUrbikvNC1ufSgwLHIsbykpLHU9MCxsPW8+MD9yLTQ6cixmPTA7ZjxsO2YrPTQpZT1pW3QuY2hhckNvZGVBdChmKV08PDE4fGlbdC5jaGFyQ29kZUF0KGYrMSldPDwxMnxpW3QuY2hhckNvZGVBdChmKzIpXTw8NnxpW3QuY2hhckNvZGVBdChmKzMpXSxzW3UrK109ZT4+MTYmMjU1LHNbdSsrXT1lPj44JjI1NSxzW3UrK109MjU1JmU7Mj09PW8mJihlPWlbdC5jaGFyQ29kZUF0KGYpXTw8MnxpW3QuY2hhckNvZGVBdChmKzEpXT4+NCxzW3UrK109MjU1JmUpOzE9PT1vJiYoZT1pW3QuY2hhckNvZGVBdChmKV08PDEwfGlbdC5jaGFyQ29kZUF0KGYrMSldPDw0fGlbdC5jaGFyQ29kZUF0KGYrMildPj4yLHNbdSsrXT1lPj44JjI1NSxzW3UrK109MjU1JmUpO3JldHVybiBzfSxlLmZyb21CeXRlQXJyYXk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dC5sZW5ndGgsaT1uJTMsYT1bXSxvPTAscz1uLWk7bzxzO28rPTE2MzgzKWEucHVzaChsKHQsbyxvKzE2MzgzPnM/czpvKzE2MzgzKSk7MT09PWk/KGU9dFtuLTFdLGEucHVzaChyW2U+PjJdK3JbZTw8NCY2M10rXCI9PVwiKSk6Mj09PWkmJihlPSh0W24tMl08PDgpK3Rbbi0xXSxhLnB1c2gocltlPj4xMF0rcltlPj40JjYzXStyW2U8PDImNjNdK1wiPVwiKSk7cmV0dXJuIGEuam9pbihcIlwiKX07Zm9yKHZhciByPVtdLGk9W10sYT1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LG89XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIscz0wLHU9by5sZW5ndGg7czx1OysrcylyW3NdPW9bc10saVtvLmNoYXJDb2RlQXQocyldPXM7ZnVuY3Rpb24gYyh0KXt2YXIgZT10Lmxlbmd0aDtpZihlJTQ+MCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpO3ZhciBuPXQuaW5kZXhPZihcIj1cIik7cmV0dXJuLTE9PT1uJiYobj1lKSxbbixuPT09ZT8wOjQtbiU0XX1mdW5jdGlvbiBsKHQsZSxuKXtmb3IodmFyIGksYSxvPVtdLHM9ZTtzPG47cys9MylpPSh0W3NdPDwxNiYxNjcxMTY4MCkrKHRbcysxXTw8OCY2NTI4MCkrKDI1NSZ0W3MrMl0pLG8ucHVzaChyWyhhPWkpPj4xOCY2M10rclthPj4xMiY2M10rclthPj42JjYzXStyWzYzJmFdKTtyZXR1cm4gby5qb2luKFwiXCIpfWlbXCItXCIuY2hhckNvZGVBdCgwKV09NjIsaVtcIl9cIi5jaGFyQ29kZUF0KDApXT02M30sZnVuY3Rpb24odCxlKXtlLnJlYWQ9ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgYSxvLHM9OCppLXItMSx1PSgxPDxzKS0xLGM9dT4+MSxsPS03LGY9bj9pLTE6MCxoPW4/LTE6MSxwPXRbZStmXTtmb3IoZis9aCxhPXAmKDE8PC1sKS0xLHA+Pj0tbCxsKz1zO2w+MDthPTI1NiphK3RbZStmXSxmKz1oLGwtPTgpO2ZvcihvPWEmKDE8PC1sKS0xLGE+Pj0tbCxsKz1yO2w+MDtvPTI1NipvK3RbZStmXSxmKz1oLGwtPTgpO2lmKDA9PT1hKWE9MS1jO2Vsc2V7aWYoYT09PXUpcmV0dXJuIG8/TmFOOjEvMCoocD8tMToxKTtvKz1NYXRoLnBvdygyLHIpLGEtPWN9cmV0dXJuKHA/LTE6MSkqbypNYXRoLnBvdygyLGEtcil9LGUud3JpdGU9ZnVuY3Rpb24odCxlLG4scixpLGEpe3ZhciBvLHMsdSxjPTgqYS1pLTEsbD0oMTw8YyktMSxmPWw+PjEsaD0yMz09PWk/TWF0aC5wb3coMiwtMjQpLU1hdGgucG93KDIsLTc3KTowLHA9cj8wOmEtMSxkPXI/MTotMSxtPWU8MHx8MD09PWUmJjEvZTwwPzE6MDtmb3IoZT1NYXRoLmFicyhlKSxpc05hTihlKXx8ZT09PTEvMD8ocz1pc05hTihlKT8xOjAsbz1sKToobz1NYXRoLmZsb29yKE1hdGgubG9nKGUpL01hdGguTE4yKSxlKih1PU1hdGgucG93KDIsLW8pKTwxJiYoby0tLHUqPTIpLChlKz1vK2Y+PTE/aC91OmgqTWF0aC5wb3coMiwxLWYpKSp1Pj0yJiYobysrLHUvPTIpLG8rZj49bD8ocz0wLG89bCk6bytmPj0xPyhzPShlKnUtMSkqTWF0aC5wb3coMixpKSxvKz1mKToocz1lKk1hdGgucG93KDIsZi0xKSpNYXRoLnBvdygyLGkpLG89MCkpO2k+PTg7dFtuK3BdPTI1NSZzLHArPWQscy89MjU2LGktPTgpO2ZvcihvPW88PGl8cyxjKz1pO2M+MDt0W24rcF09MjU1Jm8scCs9ZCxvLz0yNTYsYy09OCk7dFtuK3AtZF18PTEyOCptfX0sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDMpLkJ1ZmZlcixpPW4oMTQxKTt0LmV4cG9ydHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmhlYWQ9bnVsbCx0aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aD0wfXJldHVybiB0LnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQpe3ZhciBlPXtkYXRhOnQsbmV4dDpudWxsfTt0aGlzLmxlbmd0aD4wP3RoaXMudGFpbC5uZXh0PWU6dGhpcy5oZWFkPWUsdGhpcy50YWlsPWUsKyt0aGlzLmxlbmd0aH0sdC5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbih0KXt2YXIgZT17ZGF0YTp0LG5leHQ6dGhpcy5oZWFkfTswPT09dGhpcy5sZW5ndGgmJih0aGlzLnRhaWw9ZSksdGhpcy5oZWFkPWUsKyt0aGlzLmxlbmd0aH0sdC5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24oKXtpZigwIT09dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuaGVhZC5kYXRhO3JldHVybiAxPT09dGhpcy5sZW5ndGg/dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsOnRoaXMuaGVhZD10aGlzLmhlYWQubmV4dCwtLXRoaXMubGVuZ3RoLHR9fSx0LnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aD0wfSx0LnByb3RvdHlwZS5qb2luPWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm5cIlwiO2Zvcih2YXIgZT10aGlzLmhlYWQsbj1cIlwiK2UuZGF0YTtlPWUubmV4dDspbis9dCtlLmRhdGE7cmV0dXJuIG59LHQucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIHIuYWxsb2MoMCk7aWYoMT09PXRoaXMubGVuZ3RoKXJldHVybiB0aGlzLmhlYWQuZGF0YTtmb3IodmFyIGUsbixpLGE9ci5hbGxvY1Vuc2FmZSh0Pj4+MCksbz10aGlzLmhlYWQscz0wO287KWU9by5kYXRhLG49YSxpPXMsZS5jb3B5KG4saSkscys9by5kYXRhLmxlbmd0aCxvPW8ubmV4dDtyZXR1cm4gYX0sdH0oKSxpJiZpLmluc3BlY3QmJmkuaW5zcGVjdC5jdXN0b20mJih0LmV4cG9ydHMucHJvdG90eXBlW2kuaW5zcGVjdC5jdXN0b21dPWZ1bmN0aW9uKCl7dmFyIHQ9aS5pbnNwZWN0KHtsZW5ndGg6dGhpcy5sZW5ndGh9KTtyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lK1wiIFwiK3R9KX0sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbih0KXt0cnl7aWYoIWUubG9jYWxTdG9yYWdlKXJldHVybiExfWNhdGNoKHQpe3JldHVybiExfXZhciBuPWUubG9jYWxTdG9yYWdlW3RdO3JldHVybiBudWxsIT1uJiZcInRydWVcIj09PVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpfXQuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKG4oXCJub0RlcHJlY2F0aW9uXCIpKXJldHVybiB0O3ZhciByPSExO3JldHVybiBmdW5jdGlvbigpe2lmKCFyKXtpZihuKFwidGhyb3dEZXByZWNhdGlvblwiKSl0aHJvdyBuZXcgRXJyb3IoZSk7bihcInRyYWNlRGVwcmVjYXRpb25cIik/Y29uc29sZS50cmFjZShlKTpjb25zb2xlLndhcm4oZSkscj0hMH1yZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX0pLmNhbGwodGhpcyxuKDExKSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9YTt2YXIgcj1uKDkwKSxpPW4oMzEpO2Z1bmN0aW9uIGEodCl7aWYoISh0aGlzIGluc3RhbmNlb2YgYSkpcmV0dXJuIG5ldyBhKHQpO3IuY2FsbCh0aGlzLHQpfWkuaW5oZXJpdHM9bigyKSxpLmluaGVyaXRzKGEsciksYS5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbih0LGUsbil7bihudWxsLHQpfX0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKDYwKX0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKDIxKX0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKDU5KS5UcmFuc2Zvcm19LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9big1OSkuUGFzc1Rocm91Z2h9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpLGk9bigyMyksYT1uKDMpLkJ1ZmZlcixvPVsxNTE4NTAwMjQ5LDE4NTk3NzUzOTMsLTE4OTQwMDc1ODgsLTg5OTQ5NzUxNF0scz1uZXcgQXJyYXkoODApO2Z1bmN0aW9uIHUoKXt0aGlzLmluaXQoKSx0aGlzLl93PXMsaS5jYWxsKHRoaXMsNjQsNTYpfWZ1bmN0aW9uIGModCl7cmV0dXJuIHQ8PDMwfHQ+Pj4yfWZ1bmN0aW9uIGwodCxlLG4scil7cmV0dXJuIDA9PT10P2Umbnx+ZSZyOjI9PT10P2UmbnxlJnJ8biZyOmVebl5yfXIodSxpKSx1LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2E9MTczMjU4NDE5Myx0aGlzLl9iPTQwMjMyMzM0MTcsdGhpcy5fYz0yNTYyMzgzMTAyLHRoaXMuX2Q9MjcxNzMzODc4LHRoaXMuX2U9MzI4NTM3NzUyMCx0aGlzfSx1LnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPXRoaXMuX3cscj0wfHRoaXMuX2EsaT0wfHRoaXMuX2IsYT0wfHRoaXMuX2Mscz0wfHRoaXMuX2QsdT0wfHRoaXMuX2UsZj0wO2Y8MTY7KytmKW5bZl09dC5yZWFkSW50MzJCRSg0KmYpO2Zvcig7Zjw4MDsrK2YpbltmXT1uW2YtM11ebltmLThdXm5bZi0xNF1ebltmLTE2XTtmb3IodmFyIGg9MDtoPDgwOysraCl7dmFyIHA9fn4oaC8yMCksZD0wfCgoZT1yKTw8NXxlPj4+MjcpK2wocCxpLGEscykrdStuW2hdK29bcF07dT1zLHM9YSxhPWMoaSksaT1yLHI9ZH10aGlzLl9hPXIrdGhpcy5fYXwwLHRoaXMuX2I9aSt0aGlzLl9ifDAsdGhpcy5fYz1hK3RoaXMuX2N8MCx0aGlzLl9kPXMrdGhpcy5fZHwwLHRoaXMuX2U9dSt0aGlzLl9lfDB9LHUucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9YS5hbGxvY1Vuc2FmZSgyMCk7cmV0dXJuIHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fYSwwKSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2IsNCksdC53cml0ZUludDMyQkUoMHx0aGlzLl9jLDgpLHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fZCwxMiksdC53cml0ZUludDMyQkUoMHx0aGlzLl9lLDE2KSx0fSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMiksaT1uKDIzKSxhPW4oMykuQnVmZmVyLG89WzE1MTg1MDAyNDksMTg1OTc3NTM5MywtMTg5NDAwNzU4OCwtODk5NDk3NTE0XSxzPW5ldyBBcnJheSg4MCk7ZnVuY3Rpb24gdSgpe3RoaXMuaW5pdCgpLHRoaXMuX3c9cyxpLmNhbGwodGhpcyw2NCw1Nil9ZnVuY3Rpb24gYyh0KXtyZXR1cm4gdDw8NXx0Pj4+Mjd9ZnVuY3Rpb24gbCh0KXtyZXR1cm4gdDw8MzB8dD4+PjJ9ZnVuY3Rpb24gZih0LGUsbixyKXtyZXR1cm4gMD09PXQ/ZSZufH5lJnI6Mj09PXQ/ZSZufGUmcnxuJnI6ZV5uXnJ9cih1LGkpLHUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYT0xNzMyNTg0MTkzLHRoaXMuX2I9NDAyMzIzMzQxNyx0aGlzLl9jPTI1NjIzODMxMDIsdGhpcy5fZD0yNzE3MzM4NzgsdGhpcy5fZT0zMjg1Mzc3NTIwLHRoaXN9LHUucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49dGhpcy5fdyxyPTB8dGhpcy5fYSxpPTB8dGhpcy5fYixhPTB8dGhpcy5fYyxzPTB8dGhpcy5fZCx1PTB8dGhpcy5fZSxoPTA7aDwxNjsrK2gpbltoXT10LnJlYWRJbnQzMkJFKDQqaCk7Zm9yKDtoPDgwOysraCluW2hdPShlPW5baC0zXV5uW2gtOF1ebltoLTE0XV5uW2gtMTZdKTw8MXxlPj4+MzE7Zm9yKHZhciBwPTA7cDw4MDsrK3Ape3ZhciBkPX5+KHAvMjApLG09YyhyKStmKGQsaSxhLHMpK3UrbltwXStvW2RdfDA7dT1zLHM9YSxhPWwoaSksaT1yLHI9bX10aGlzLl9hPXIrdGhpcy5fYXwwLHRoaXMuX2I9aSt0aGlzLl9ifDAsdGhpcy5fYz1hK3RoaXMuX2N8MCx0aGlzLl9kPXMrdGhpcy5fZHwwLHRoaXMuX2U9dSt0aGlzLl9lfDB9LHUucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9YS5hbGxvY1Vuc2FmZSgyMCk7cmV0dXJuIHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fYSwwKSx0LndyaXRlSW50MzJCRSgwfHRoaXMuX2IsNCksdC53cml0ZUludDMyQkUoMHx0aGlzLl9jLDgpLHQud3JpdGVJbnQzMkJFKDB8dGhpcy5fZCwxMiksdC53cml0ZUludDMyQkUoMHx0aGlzLl9lLDE2KSx0fSx0LmV4cG9ydHM9dX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMiksaT1uKDkxKSxhPW4oMjMpLG89bigzKS5CdWZmZXIscz1uZXcgQXJyYXkoNjQpO2Z1bmN0aW9uIHUoKXt0aGlzLmluaXQoKSx0aGlzLl93PXMsYS5jYWxsKHRoaXMsNjQsNTYpfXIodSxpKSx1LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2E9MzIzODM3MTAzMix0aGlzLl9iPTkxNDE1MDY2Myx0aGlzLl9jPTgxMjcwMjk5OSx0aGlzLl9kPTQxNDQ5MTI2OTcsdGhpcy5fZT00MjkwNzc1ODU3LHRoaXMuX2Y9MTc1MDYwMzAyNSx0aGlzLl9nPTE2OTQwNzY4MzksdGhpcy5faD0zMjA0MDc1NDI4LHRoaXN9LHUucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIHQ9by5hbGxvY1Vuc2FmZSgyOCk7cmV0dXJuIHQud3JpdGVJbnQzMkJFKHRoaXMuX2EsMCksdC53cml0ZUludDMyQkUodGhpcy5fYiw0KSx0LndyaXRlSW50MzJCRSh0aGlzLl9jLDgpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2QsMTIpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2UsMTYpLHQud3JpdGVJbnQzMkJFKHRoaXMuX2YsMjApLHQud3JpdGVJbnQzMkJFKHRoaXMuX2csMjQpLHR9LHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKSxpPW4oOTIpLGE9bigyMyksbz1uKDMpLkJ1ZmZlcixzPW5ldyBBcnJheSgxNjApO2Z1bmN0aW9uIHUoKXt0aGlzLmluaXQoKSx0aGlzLl93PXMsYS5jYWxsKHRoaXMsMTI4LDExMil9cih1LGkpLHUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWg9MzQxODA3MDM2NSx0aGlzLl9iaD0xNjU0MjcwMjUwLHRoaXMuX2NoPTI0Mzg1MjkzNzAsdGhpcy5fZGg9MzU1NDYyMzYwLHRoaXMuX2VoPTE3MzE0MDU0MTUsdGhpcy5fZmg9MjM5NDE4MDIzMSx0aGlzLl9naD0zNjc1MDA4NTI1LHRoaXMuX2hoPTEyMDMwNjI4MTMsdGhpcy5fYWw9MzIzODM3MTAzMix0aGlzLl9ibD05MTQxNTA2NjMsdGhpcy5fY2w9ODEyNzAyOTk5LHRoaXMuX2RsPTQxNDQ5MTI2OTcsdGhpcy5fZWw9NDI5MDc3NTg1Nyx0aGlzLl9mbD0xNzUwNjAzMDI1LHRoaXMuX2dsPTE2OTQwNzY4MzksdGhpcy5faGw9MzIwNDA3NTQyOCx0aGlzfSx1LnByb3RvdHlwZS5faGFzaD1mdW5jdGlvbigpe3ZhciB0PW8uYWxsb2NVbnNhZmUoNDgpO2Z1bmN0aW9uIGUoZSxuLHIpe3Qud3JpdGVJbnQzMkJFKGUsciksdC53cml0ZUludDMyQkUobixyKzQpfXJldHVybiBlKHRoaXMuX2FoLHRoaXMuX2FsLDApLGUodGhpcy5fYmgsdGhpcy5fYmwsOCksZSh0aGlzLl9jaCx0aGlzLl9jbCwxNiksZSh0aGlzLl9kaCx0aGlzLl9kbCwyNCksZSh0aGlzLl9laCx0aGlzLl9lbCwzMiksZSh0aGlzLl9maCx0aGlzLl9mbCw0MCksdH0sdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDIpLGk9bigzKS5CdWZmZXIsYT1uKDE4KSxvPWkuYWxsb2MoMTI4KSxzPTY0O2Z1bmN0aW9uIHUodCxlKXthLmNhbGwodGhpcyxcImRpZ2VzdFwiKSxcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9aS5mcm9tKGUpKSx0aGlzLl9hbGc9dCx0aGlzLl9rZXk9ZSxlLmxlbmd0aD5zP2U9dChlKTplLmxlbmd0aDxzJiYoZT1pLmNvbmNhdChbZSxvXSxzKSk7Zm9yKHZhciBuPXRoaXMuX2lwYWQ9aS5hbGxvY1Vuc2FmZShzKSxyPXRoaXMuX29wYWQ9aS5hbGxvY1Vuc2FmZShzKSx1PTA7dTxzO3UrKyluW3VdPTU0XmVbdV0sclt1XT05Ml5lW3VdO3RoaXMuX2hhc2g9W25dfXIodSxhKSx1LnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQpe3RoaXMuX2hhc2gucHVzaCh0KX0sdS5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fYWxnKGkuY29uY2F0KHRoaXMuX2hhc2gpKTtyZXR1cm4gdGhpcy5fYWxnKGkuY29uY2F0KFt0aGlzLl9vcGFkLHRdKSl9LHQuZXhwb3J0cz11fSxmdW5jdGlvbih0LGUsbil7dC5leHBvcnRzPW4oOTUpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUscil7dmFyIGksYT1uKDk3KSxvPW4oOTgpLHM9big5OSksdT1uKDMpLkJ1ZmZlcixjPWUuY3J5cHRvJiZlLmNyeXB0by5zdWJ0bGUsbD17c2hhOlwiU0hBLTFcIixcInNoYS0xXCI6XCJTSEEtMVwiLHNoYTE6XCJTSEEtMVwiLHNoYTI1NjpcIlNIQS0yNTZcIixcInNoYS0yNTZcIjpcIlNIQS0yNTZcIixzaGEzODQ6XCJTSEEtMzg0XCIsXCJzaGEtMzg0XCI6XCJTSEEtMzg0XCIsXCJzaGEtNTEyXCI6XCJTSEEtNTEyXCIsc2hhNTEyOlwiU0hBLTUxMlwifSxmPVtdO2Z1bmN0aW9uIGgodCxlLG4scixpKXtyZXR1cm4gYy5pbXBvcnRLZXkoXCJyYXdcIix0LHtuYW1lOlwiUEJLREYyXCJ9LCExLFtcImRlcml2ZUJpdHNcIl0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGMuZGVyaXZlQml0cyh7bmFtZTpcIlBCS0RGMlwiLHNhbHQ6ZSxpdGVyYXRpb25zOm4saGFzaDp7bmFtZTppfX0sdCxyPDwzKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHUuZnJvbSh0KX0pfXQuZXhwb3J0cz1mdW5jdGlvbih0LG4scCxkLG0sZyl7XCJmdW5jdGlvblwiPT10eXBlb2YgbSYmKGc9bSxtPXZvaWQgMCk7dmFyIHk9bFsobT1tfHxcInNoYTFcIikudG9Mb3dlckNhc2UoKV07aWYoIXl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUuUHJvbWlzZSlyZXR1cm4gci5uZXh0VGljayhmdW5jdGlvbigpe3ZhciBlO3RyeXtlPXModCxuLHAsZCxtKX1jYXRjaCh0KXtyZXR1cm4gZyh0KX1nKG51bGwsZSl9KTtpZihhKHQsbixwLGQpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGcpdGhyb3cgbmV3IEVycm9yKFwiTm8gY2FsbGJhY2sgcHJvdmlkZWQgdG8gcGJrZGYyXCIpO3UuaXNCdWZmZXIodCl8fCh0PXUuZnJvbSh0LG8pKSx1LmlzQnVmZmVyKG4pfHwobj11LmZyb20obixvKSksZnVuY3Rpb24odCxlKXt0LnRoZW4oZnVuY3Rpb24odCl7ci5uZXh0VGljayhmdW5jdGlvbigpe2UobnVsbCx0KX0pfSxmdW5jdGlvbih0KXtyLm5leHRUaWNrKGZ1bmN0aW9uKCl7ZSh0KX0pfSl9KGZ1bmN0aW9uKHQpe2lmKGUucHJvY2VzcyYmIWUucHJvY2Vzcy5icm93c2VyKXJldHVybiBQcm9taXNlLnJlc29sdmUoITEpO2lmKCFjfHwhYy5pbXBvcnRLZXl8fCFjLmRlcml2ZUJpdHMpcmV0dXJuIFByb21pc2UucmVzb2x2ZSghMSk7aWYodm9pZCAwIT09Zlt0XSlyZXR1cm4gZlt0XTt2YXIgbj1oKGk9aXx8dS5hbGxvYyg4KSxpLDEwLDEyOCx0KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuITB9KS5jYXRjaChmdW5jdGlvbigpe3JldHVybiExfSk7cmV0dXJuIGZbdF09bixufSh5KS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlP2godCxuLHAsZCx5KTpzKHQsbixwLGQsbSl9KSxnKX19KS5jYWxsKHRoaXMsbigxMSksbigxNCkpfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxNTYpLGk9big2NCksYT1uKDY1KSxvPW4oMTcxKSxzPW4oNDQpO2Z1bmN0aW9uIHUodCxlLG4pe2lmKHQ9dC50b0xvd2VyQ2FzZSgpLGFbdF0pcmV0dXJuIGkuY3JlYXRlQ2lwaGVyaXYodCxlLG4pO2lmKG9bdF0pcmV0dXJuIG5ldyByKHtrZXk6ZSxpdjpuLG1vZGU6dH0pO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIil9ZnVuY3Rpb24gYyh0LGUsbil7aWYodD10LnRvTG93ZXJDYXNlKCksYVt0XSlyZXR1cm4gaS5jcmVhdGVEZWNpcGhlcml2KHQsZSxuKTtpZihvW3RdKXJldHVybiBuZXcgcih7a2V5OmUsaXY6bixtb2RlOnQsZGVjcnlwdDohMH0pO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIil9ZS5jcmVhdGVDaXBoZXI9ZS5DaXBoZXI9ZnVuY3Rpb24odCxlKXt2YXIgbixyO2lmKHQ9dC50b0xvd2VyQ2FzZSgpLGFbdF0pbj1hW3RdLmtleSxyPWFbdF0uaXY7ZWxzZXtpZighb1t0XSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBzdWl0ZSB0eXBlXCIpO249OCpvW3RdLmtleSxyPW9bdF0uaXZ9dmFyIGk9cyhlLCExLG4scik7cmV0dXJuIHUodCxpLmtleSxpLml2KX0sZS5jcmVhdGVDaXBoZXJpdj1lLkNpcGhlcml2PXUsZS5jcmVhdGVEZWNpcGhlcj1lLkRlY2lwaGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG4scjtpZih0PXQudG9Mb3dlckNhc2UoKSxhW3RdKW49YVt0XS5rZXkscj1hW3RdLml2O2Vsc2V7aWYoIW9bdF0pdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgc3VpdGUgdHlwZVwiKTtuPTgqb1t0XS5rZXkscj1vW3RdLml2fXZhciBpPXMoZSwhMSxuLHIpO3JldHVybiBjKHQsaS5rZXksaS5pdil9LGUuY3JlYXRlRGVjaXBoZXJpdj1lLkRlY2lwaGVyaXY9YyxlLmxpc3RDaXBoZXJzPWUuZ2V0Q2lwaGVycz1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhvKS5jb25jYXQoaS5nZXRDaXBoZXJzKCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMTgpLGk9big2MyksYT1uKDIpLG89bigzKS5CdWZmZXIscz17XCJkZXMtZWRlMy1jYmNcIjppLkNCQy5pbnN0YW50aWF0ZShpLkVERSksXCJkZXMtZWRlM1wiOmkuRURFLFwiZGVzLWVkZS1jYmNcIjppLkNCQy5pbnN0YW50aWF0ZShpLkVERSksXCJkZXMtZWRlXCI6aS5FREUsXCJkZXMtY2JjXCI6aS5DQkMuaW5zdGFudGlhdGUoaS5ERVMpLFwiZGVzLWVjYlwiOmkuREVTfTtmdW5jdGlvbiB1KHQpe3IuY2FsbCh0aGlzKTt2YXIgZSxuPXQubW9kZS50b0xvd2VyQ2FzZSgpLGk9c1tuXTtlPXQuZGVjcnlwdD9cImRlY3J5cHRcIjpcImVuY3J5cHRcIjt2YXIgYT10LmtleTtvLmlzQnVmZmVyKGEpfHwoYT1vLmZyb20oYSkpLFwiZGVzLWVkZVwiIT09biYmXCJkZXMtZWRlLWNiY1wiIT09bnx8KGE9by5jb25jYXQoW2EsYS5zbGljZSgwLDgpXSkpO3ZhciB1PXQuaXY7by5pc0J1ZmZlcih1KXx8KHU9by5mcm9tKHUpKSx0aGlzLl9kZXM9aS5jcmVhdGUoe2tleTphLGl2OnUsdHlwZTplfSl9cy5kZXM9c1tcImRlcy1jYmNcIl0scy5kZXMzPXNbXCJkZXMtZWRlMy1jYmNcIl0sdC5leHBvcnRzPXUsYSh1LHIpLHUucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG8uZnJvbSh0aGlzLl9kZXMudXBkYXRlKHQpKX0sdS5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7cmV0dXJuIG8uZnJvbSh0aGlzLl9kZXMuZmluYWwoKSl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5yZWFkVUludDMyQkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4odFswK2VdPDwyNHx0WzErZV08PDE2fHRbMitlXTw8OHx0WzMrZV0pPj4+MH0sZS53cml0ZVVJbnQzMkJFPWZ1bmN0aW9uKHQsZSxuKXt0WzArbl09ZT4+PjI0LHRbMStuXT1lPj4+MTYmMjU1LHRbMituXT1lPj4+OCYyNTUsdFszK25dPTI1NSZlfSxlLmlwPWZ1bmN0aW9uKHQsZSxuLHIpe2Zvcih2YXIgaT0wLGE9MCxvPTY7bz49MDtvLT0yKXtmb3IodmFyIHM9MDtzPD0yNDtzKz04KWk8PD0xLGl8PWU+Pj5zK28mMTtmb3Iocz0wO3M8PTI0O3MrPTgpaTw8PTEsaXw9dD4+PnMrbyYxfWZvcihvPTY7bz49MDtvLT0yKXtmb3Iocz0xO3M8PTI1O3MrPTgpYTw8PTEsYXw9ZT4+PnMrbyYxO2ZvcihzPTE7czw9MjU7cys9OClhPDw9MSxhfD10Pj4+cytvJjF9bltyKzBdPWk+Pj4wLG5bcisxXT1hPj4+MH0sZS5yaXA9ZnVuY3Rpb24odCxlLG4scil7Zm9yKHZhciBpPTAsYT0wLG89MDtvPDQ7bysrKWZvcih2YXIgcz0yNDtzPj0wO3MtPTgpaTw8PTEsaXw9ZT4+PnMrbyYxLGk8PD0xLGl8PXQ+Pj5zK28mMTtmb3Iobz00O288ODtvKyspZm9yKHM9MjQ7cz49MDtzLT04KWE8PD0xLGF8PWU+Pj5zK28mMSxhPDw9MSxhfD10Pj4+cytvJjE7bltyKzBdPWk+Pj4wLG5bcisxXT1hPj4+MH0sZS5wYzE9ZnVuY3Rpb24odCxlLG4scil7Zm9yKHZhciBpPTAsYT0wLG89NztvPj01O28tLSl7Zm9yKHZhciBzPTA7czw9MjQ7cys9OClpPDw9MSxpfD1lPj5zK28mMTtmb3Iocz0wO3M8PTI0O3MrPTgpaTw8PTEsaXw9dD4+cytvJjF9Zm9yKHM9MDtzPD0yNDtzKz04KWk8PD0xLGl8PWU+PnMrbyYxO2ZvcihvPTE7bzw9MztvKyspe2ZvcihzPTA7czw9MjQ7cys9OClhPDw9MSxhfD1lPj5zK28mMTtmb3Iocz0wO3M8PTI0O3MrPTgpYTw8PTEsYXw9dD4+cytvJjF9Zm9yKHM9MDtzPD0yNDtzKz04KWE8PD0xLGF8PXQ+PnMrbyYxO25bciswXT1pPj4+MCxuW3IrMV09YT4+PjB9LGUucjI4c2hsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8PGUmMjY4NDM1NDU1fHQ+Pj4yOC1lfTt2YXIgcj1bMTQsMTEsMTcsNCwyNywyMywyNSwwLDEzLDIyLDcsMTgsNSw5LDE2LDI0LDIsMjAsMTIsMjEsMSw4LDE1LDI2LDE1LDQsMjUsMTksOSwxLDI2LDE2LDUsMTEsMjMsOCwxMiw3LDE3LDAsMjIsMywxMCwxNCw2LDIwLDI3LDI0XTtlLnBjMj1mdW5jdGlvbih0LGUsbixpKXtmb3IodmFyIGE9MCxvPTAscz1yLmxlbmd0aD4+PjEsdT0wO3U8czt1KyspYTw8PTEsYXw9dD4+PnJbdV0mMTtmb3IodT1zO3U8ci5sZW5ndGg7dSsrKW88PD0xLG98PWU+Pj5yW3VdJjE7bltpKzBdPWE+Pj4wLG5baSsxXT1vPj4+MH0sZS5leHBhbmQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPTAsaT0wO3I9KDEmdCk8PDV8dD4+PjI3O2Zvcih2YXIgYT0yMzthPj0xNTthLT00KXI8PD02LHJ8PXQ+Pj5hJjYzO2ZvcihhPTExO2E+PTM7YS09NClpfD10Pj4+YSY2MyxpPDw9NjtpfD0oMzEmdCk8PDF8dD4+PjMxLGVbbiswXT1yPj4+MCxlW24rMV09aT4+PjB9O3ZhciBpPVsxNCwwLDQsMTUsMTMsNywxLDQsMiwxNCwxNSwyLDExLDEzLDgsMSwzLDEwLDEwLDYsNiwxMiwxMiwxMSw1LDksOSw1LDAsMyw3LDgsNCwxNSwxLDEyLDE0LDgsOCwyLDEzLDQsNiw5LDIsMSwxMSw3LDE1LDUsMTIsMTEsOSwzLDcsMTQsMywxMCwxMCwwLDUsNiwwLDEzLDE1LDMsMSwxMyw4LDQsMTQsNyw2LDE1LDExLDIsMyw4LDQsMTQsOSwxMiw3LDAsMiwxLDEzLDEwLDEyLDYsMCw5LDUsMTEsMTAsNSwwLDEzLDE0LDgsNywxMCwxMSwxLDEwLDMsNCwxNSwxMyw0LDEsMiw1LDExLDgsNiwxMiw3LDYsMTIsOSwwLDMsNSwyLDE0LDE1LDksMTAsMTMsMCw3LDksMCwxNCw5LDYsMywzLDQsMTUsNiw1LDEwLDEsMiwxMyw4LDEyLDUsNywxNCwxMSwxMiw0LDExLDIsMTUsOCwxLDEzLDEsNiwxMCw0LDEzLDksMCw4LDYsMTUsOSwzLDgsMCw3LDExLDQsMSwxNSwyLDE0LDEyLDMsNSwxMSwxMCw1LDE0LDIsNywxMiw3LDEzLDEzLDgsMTQsMTEsMyw1LDAsNiw2LDE1LDksMCwxMCwzLDEsNCwyLDcsOCwyLDUsMTIsMTEsMSwxMiwxMCw0LDE0LDE1LDksMTAsMyw2LDE1LDksMCwwLDYsMTIsMTAsMTEsMSw3LDEzLDEzLDgsMTUsOSwxLDQsMyw1LDE0LDExLDUsMTIsMiw3LDgsMiw0LDE0LDIsMTQsMTIsMTEsNCwyLDEsMTIsNyw0LDEwLDcsMTEsMTMsNiwxLDgsNSw1LDAsMywxNSwxNSwxMCwxMywzLDAsOSwxNCw4LDksNiw0LDExLDIsOCwxLDEyLDExLDcsMTAsMSwxMywxNCw3LDIsOCwxMywxNSw2LDksMTUsMTIsMCw1LDksNiwxMCwzLDQsMCw1LDE0LDMsMTIsMTAsMSwxNSwxMCw0LDE1LDIsOSw3LDIsMTIsNiw5LDgsNSwwLDYsMTMsMSwzLDEzLDQsMTQsMTQsMCw3LDExLDUsMywxMSw4LDksNCwxNCwzLDE1LDIsNSwxMiwyLDksOCw1LDEyLDE1LDMsMTAsNywxMSwwLDE0LDQsMSwxMCw3LDEsNiwxMywwLDExLDgsNiwxMyw0LDEzLDExLDAsMiwxMSwxNCw3LDE1LDQsMCw5LDgsMSwxMywxMCwzLDE0LDEyLDMsOSw1LDcsMTIsNSwyLDEwLDE1LDYsOCwxLDYsMSw2LDQsMTEsMTEsMTMsMTMsOCwxMiwxLDMsNCw3LDEwLDE0LDcsMTAsOSwxNSw1LDYsMCw4LDE1LDAsMTQsNSwyLDksMywyLDEyLDEzLDEsMiwxNSw4LDEzLDQsOCw2LDEwLDE1LDMsMTEsNywxLDQsMTAsMTIsOSw1LDMsNiwxNCwxMSw1LDAsMCwxNCwxMiw5LDcsMiw3LDIsMTEsMSw0LDE0LDEsNyw5LDQsMTIsMTAsMTQsOCwyLDEzLDAsMTUsNiwxMiwxMCw5LDEzLDAsMTUsMywzLDUsNSw2LDgsMTFdO2Uuc3Vic3RpdHV0ZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9MDtyPDQ7cisrKXtuPDw9NCxufD1pWzY0KnIrKHQ+Pj4xOC02KnImNjMpXX1mb3Iocj0wO3I8NDtyKyspe248PD00LG58PWlbMjU2KzY0KnIrKGU+Pj4xOC02KnImNjMpXX1yZXR1cm4gbj4+PjB9O3ZhciBhPVsxNiwyNSwxMiwxMSwzLDIwLDQsMTUsMzEsMTcsOSw2LDI3LDE0LDEsMjIsMzAsMjQsOCwxOCwwLDUsMjksMjMsMTMsMTksMiwyNiwxMCwyMSwyOCw3XTtlLnBlcm11dGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj0wO248YS5sZW5ndGg7bisrKWU8PD0xLGV8PXQ+Pj5hW25dJjE7cmV0dXJuIGU+Pj4wfSxlLnBhZFNwbGl0PWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9dC50b1N0cmluZygyKTtyLmxlbmd0aDxlOylyPVwiMFwiK3I7Zm9yKHZhciBpPVtdLGE9MDthPGU7YSs9bilpLnB1c2goci5zbGljZShhLGErbikpO3JldHVybiBpLmpvaW4oXCIgXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTIpO2Z1bmN0aW9uIGkodCl7dGhpcy5vcHRpb25zPXQsdGhpcy50eXBlPXRoaXMub3B0aW9ucy50eXBlLHRoaXMuYmxvY2tTaXplPTgsdGhpcy5faW5pdCgpLHRoaXMuYnVmZmVyPW5ldyBBcnJheSh0aGlzLmJsb2NrU2l6ZSksdGhpcy5idWZmZXJPZmY9MH10LmV4cG9ydHM9aSxpLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbigpe30saS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQpe3JldHVybiAwPT09dC5sZW5ndGg/W106XCJkZWNyeXB0XCI9PT10aGlzLnR5cGU/dGhpcy5fdXBkYXRlRGVjcnlwdCh0KTp0aGlzLl91cGRhdGVFbmNyeXB0KHQpfSxpLnByb3RvdHlwZS5fYnVmZmVyPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPU1hdGgubWluKHRoaXMuYnVmZmVyLmxlbmd0aC10aGlzLmJ1ZmZlck9mZix0Lmxlbmd0aC1lKSxyPTA7cjxuO3IrKyl0aGlzLmJ1ZmZlclt0aGlzLmJ1ZmZlck9mZityXT10W2Urcl07cmV0dXJuIHRoaXMuYnVmZmVyT2ZmKz1uLG59LGkucHJvdG90eXBlLl9mbHVzaEJ1ZmZlcj1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl91cGRhdGUodGhpcy5idWZmZXIsMCx0LGUpLHRoaXMuYnVmZmVyT2ZmPTAsdGhpcy5ibG9ja1NpemV9LGkucHJvdG90eXBlLl91cGRhdGVFbmNyeXB0PWZ1bmN0aW9uKHQpe3ZhciBlPTAsbj0wLHI9KHRoaXMuYnVmZmVyT2ZmK3QubGVuZ3RoKS90aGlzLmJsb2NrU2l6ZXwwLGk9bmV3IEFycmF5KHIqdGhpcy5ibG9ja1NpemUpOzAhPT10aGlzLmJ1ZmZlck9mZiYmKGUrPXRoaXMuX2J1ZmZlcih0LGUpLHRoaXMuYnVmZmVyT2ZmPT09dGhpcy5idWZmZXIubGVuZ3RoJiYobis9dGhpcy5fZmx1c2hCdWZmZXIoaSxuKSkpO2Zvcih2YXIgYT10Lmxlbmd0aC0odC5sZW5ndGgtZSkldGhpcy5ibG9ja1NpemU7ZTxhO2UrPXRoaXMuYmxvY2tTaXplKXRoaXMuX3VwZGF0ZSh0LGUsaSxuKSxuKz10aGlzLmJsb2NrU2l6ZTtmb3IoO2U8dC5sZW5ndGg7ZSsrLHRoaXMuYnVmZmVyT2ZmKyspdGhpcy5idWZmZXJbdGhpcy5idWZmZXJPZmZdPXRbZV07cmV0dXJuIGl9LGkucHJvdG90eXBlLl91cGRhdGVEZWNyeXB0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49MCxyPU1hdGguY2VpbCgodGhpcy5idWZmZXJPZmYrdC5sZW5ndGgpL3RoaXMuYmxvY2tTaXplKS0xLGk9bmV3IEFycmF5KHIqdGhpcy5ibG9ja1NpemUpO3I+MDtyLS0pZSs9dGhpcy5fYnVmZmVyKHQsZSksbis9dGhpcy5fZmx1c2hCdWZmZXIoaSxuKTtyZXR1cm4gZSs9dGhpcy5fYnVmZmVyKHQsZSksaX0saS5wcm90b3R5cGUuZmluYWw9ZnVuY3Rpb24odCl7dmFyIGUsbjtyZXR1cm4gdCYmKGU9dGhpcy51cGRhdGUodCkpLG49XCJlbmNyeXB0XCI9PT10aGlzLnR5cGU/dGhpcy5fZmluYWxFbmNyeXB0KCk6dGhpcy5fZmluYWxEZWNyeXB0KCksZT9lLmNvbmNhdChuKTpufSxpLnByb3RvdHlwZS5fcGFkPWZ1bmN0aW9uKHQsZSl7aWYoMD09PWUpcmV0dXJuITE7Zm9yKDtlPHQubGVuZ3RoOyl0W2UrK109MDtyZXR1cm4hMH0saS5wcm90b3R5cGUuX2ZpbmFsRW5jcnlwdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9wYWQodGhpcy5idWZmZXIsdGhpcy5idWZmZXJPZmYpKXJldHVybltdO3ZhciB0PW5ldyBBcnJheSh0aGlzLmJsb2NrU2l6ZSk7cmV0dXJuIHRoaXMuX3VwZGF0ZSh0aGlzLmJ1ZmZlciwwLHQsMCksdH0saS5wcm90b3R5cGUuX3VucGFkPWZ1bmN0aW9uKHQpe3JldHVybiB0fSxpLnByb3RvdHlwZS5fZmluYWxEZWNyeXB0PWZ1bmN0aW9uKCl7ci5lcXVhbCh0aGlzLmJ1ZmZlck9mZix0aGlzLmJsb2NrU2l6ZSxcIk5vdCBlbm91Z2ggZGF0YSB0byBkZWNyeXB0XCIpO3ZhciB0PW5ldyBBcnJheSh0aGlzLmJsb2NrU2l6ZSk7cmV0dXJuIHRoaXMuX2ZsdXNoQnVmZmVyKHQsMCksdGhpcy5fdW5wYWQodCl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMiksaT1uKDIpLGE9big2Myksbz1hLnV0aWxzLHM9YS5DaXBoZXI7ZnVuY3Rpb24gdSgpe3RoaXMudG1wPW5ldyBBcnJheSgyKSx0aGlzLmtleXM9bnVsbH1mdW5jdGlvbiBjKHQpe3MuY2FsbCh0aGlzLHQpO3ZhciBlPW5ldyB1O3RoaXMuX2Rlc1N0YXRlPWUsdGhpcy5kZXJpdmVLZXlzKGUsdC5rZXkpfWkoYyxzKSx0LmV4cG9ydHM9YyxjLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGModCl9O3ZhciBsPVsxLDEsMiwyLDIsMiwyLDIsMSwyLDIsMiwyLDIsMiwxXTtjLnByb3RvdHlwZS5kZXJpdmVLZXlzPWZ1bmN0aW9uKHQsZSl7dC5rZXlzPW5ldyBBcnJheSgzMiksci5lcXVhbChlLmxlbmd0aCx0aGlzLmJsb2NrU2l6ZSxcIkludmFsaWQga2V5IGxlbmd0aFwiKTt2YXIgbj1vLnJlYWRVSW50MzJCRShlLDApLGk9by5yZWFkVUludDMyQkUoZSw0KTtvLnBjMShuLGksdC50bXAsMCksbj10LnRtcFswXSxpPXQudG1wWzFdO2Zvcih2YXIgYT0wO2E8dC5rZXlzLmxlbmd0aDthKz0yKXt2YXIgcz1sW2E+Pj4xXTtuPW8ucjI4c2hsKG4scyksaT1vLnIyOHNobChpLHMpLG8ucGMyKG4saSx0LmtleXMsYSl9fSxjLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMuX2Rlc1N0YXRlLGE9by5yZWFkVUludDMyQkUodCxlKSxzPW8ucmVhZFVJbnQzMkJFKHQsZSs0KTtvLmlwKGEscyxpLnRtcCwwKSxhPWkudG1wWzBdLHM9aS50bXBbMV0sXCJlbmNyeXB0XCI9PT10aGlzLnR5cGU/dGhpcy5fZW5jcnlwdChpLGEscyxpLnRtcCwwKTp0aGlzLl9kZWNyeXB0KGksYSxzLGkudG1wLDApLGE9aS50bXBbMF0scz1pLnRtcFsxXSxvLndyaXRlVUludDMyQkUobixhLHIpLG8ud3JpdGVVSW50MzJCRShuLHMscis0KX0sYy5wcm90b3R5cGUuX3BhZD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10Lmxlbmd0aC1lLHI9ZTtyPHQubGVuZ3RoO3IrKyl0W3JdPW47cmV0dXJuITB9LGMucHJvdG90eXBlLl91bnBhZD1mdW5jdGlvbih0KXtmb3IodmFyIGU9dFt0Lmxlbmd0aC0xXSxuPXQubGVuZ3RoLWU7bjx0Lmxlbmd0aDtuKyspci5lcXVhbCh0W25dLGUpO3JldHVybiB0LnNsaWNlKDAsdC5sZW5ndGgtZSl9LGMucHJvdG90eXBlLl9lbmNyeXB0PWZ1bmN0aW9uKHQsZSxuLHIsaSl7Zm9yKHZhciBhPWUscz1uLHU9MDt1PHQua2V5cy5sZW5ndGg7dSs9Mil7dmFyIGM9dC5rZXlzW3VdLGw9dC5rZXlzW3UrMV07by5leHBhbmQocyx0LnRtcCwwKSxjXj10LnRtcFswXSxsXj10LnRtcFsxXTt2YXIgZj1vLnN1YnN0aXR1dGUoYyxsKSxoPXM7cz0oYV5vLnBlcm11dGUoZikpPj4+MCxhPWh9by5yaXAocyxhLHIsaSl9LGMucHJvdG90eXBlLl9kZWNyeXB0PWZ1bmN0aW9uKHQsZSxuLHIsaSl7Zm9yKHZhciBhPW4scz1lLHU9dC5rZXlzLmxlbmd0aC0yO3U+PTA7dS09Mil7dmFyIGM9dC5rZXlzW3VdLGw9dC5rZXlzW3UrMV07by5leHBhbmQoYSx0LnRtcCwwKSxjXj10LnRtcFswXSxsXj10LnRtcFsxXTt2YXIgZj1vLnN1YnN0aXR1dGUoYyxsKSxoPWE7YT0oc15vLnBlcm11dGUoZikpPj4+MCxzPWh9by5yaXAoYSxzLHIsaSl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxMiksaT1uKDIpLGE9e307ZnVuY3Rpb24gbyh0KXtyLmVxdWFsKHQubGVuZ3RoLDgsXCJJbnZhbGlkIElWIGxlbmd0aFwiKSx0aGlzLml2PW5ldyBBcnJheSg4KTtmb3IodmFyIGU9MDtlPHRoaXMuaXYubGVuZ3RoO2UrKyl0aGlzLml2W2VdPXRbZV19ZS5pbnN0YW50aWF0ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3QuY2FsbCh0aGlzLGUpLHRoaXMuX2NiY0luaXQoKX1pKGUsdCk7Zm9yKHZhciBuPU9iamVjdC5rZXlzKGEpLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIG89bltyXTtlLnByb3RvdHlwZVtvXT1hW29dfXJldHVybiBlLmNyZWF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGUodCl9LGV9LGEuX2NiY0luaXQ9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgbyh0aGlzLm9wdGlvbnMuaXYpO3RoaXMuX2NiY1N0YXRlPXR9LGEuX3VwZGF0ZT1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzLl9jYmNTdGF0ZSxhPXRoaXMuY29uc3RydWN0b3Iuc3VwZXJfLnByb3RvdHlwZSxvPWkuaXY7aWYoXCJlbmNyeXB0XCI9PT10aGlzLnR5cGUpe2Zvcih2YXIgcz0wO3M8dGhpcy5ibG9ja1NpemU7cysrKW9bc11ePXRbZStzXTthLl91cGRhdGUuY2FsbCh0aGlzLG8sMCxuLHIpO2ZvcihzPTA7czx0aGlzLmJsb2NrU2l6ZTtzKyspb1tzXT1uW3Irc119ZWxzZXthLl91cGRhdGUuY2FsbCh0aGlzLHQsZSxuLHIpO2ZvcihzPTA7czx0aGlzLmJsb2NrU2l6ZTtzKyspbltyK3NdXj1vW3NdO2ZvcihzPTA7czx0aGlzLmJsb2NrU2l6ZTtzKyspb1tzXT10W2Urc119fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTIpLGk9bigyKSxhPW4oNjMpLG89YS5DaXBoZXIscz1hLkRFUztmdW5jdGlvbiB1KHQsZSl7ci5lcXVhbChlLmxlbmd0aCwyNCxcIkludmFsaWQga2V5IGxlbmd0aFwiKTt2YXIgbj1lLnNsaWNlKDAsOCksaT1lLnNsaWNlKDgsMTYpLGE9ZS5zbGljZSgxNiwyNCk7dGhpcy5jaXBoZXJzPVwiZW5jcnlwdFwiPT09dD9bcy5jcmVhdGUoe3R5cGU6XCJlbmNyeXB0XCIsa2V5Om59KSxzLmNyZWF0ZSh7dHlwZTpcImRlY3J5cHRcIixrZXk6aX0pLHMuY3JlYXRlKHt0eXBlOlwiZW5jcnlwdFwiLGtleTphfSldOltzLmNyZWF0ZSh7dHlwZTpcImRlY3J5cHRcIixrZXk6YX0pLHMuY3JlYXRlKHt0eXBlOlwiZW5jcnlwdFwiLGtleTppfSkscy5jcmVhdGUoe3R5cGU6XCJkZWNyeXB0XCIsa2V5Om59KV19ZnVuY3Rpb24gYyh0KXtvLmNhbGwodGhpcyx0KTt2YXIgZT1uZXcgdSh0aGlzLnR5cGUsdGhpcy5vcHRpb25zLmtleSk7dGhpcy5fZWRlU3RhdGU9ZX1pKGMsbyksdC5leHBvcnRzPWMsYy5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBjKHQpfSxjLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBpPXRoaXMuX2VkZVN0YXRlO2kuY2lwaGVyc1swXS5fdXBkYXRlKHQsZSxuLHIpLGkuY2lwaGVyc1sxXS5fdXBkYXRlKG4scixuLHIpLGkuY2lwaGVyc1syXS5fdXBkYXRlKG4scixuLHIpfSxjLnByb3RvdHlwZS5fcGFkPXMucHJvdG90eXBlLl9wYWQsYy5wcm90b3R5cGUuX3VucGFkPXMucHJvdG90eXBlLl91bnBhZH0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oNjUpLGk9bigxMDMpLGE9bigzKS5CdWZmZXIsbz1uKDEwNCkscz1uKDE4KSx1PW4oNDMpLGM9big0NCk7ZnVuY3Rpb24gbCh0LGUsbil7cy5jYWxsKHRoaXMpLHRoaXMuX2NhY2hlPW5ldyBoLHRoaXMuX2NpcGhlcj1uZXcgdS5BRVMoZSksdGhpcy5fcHJldj1hLmZyb20obiksdGhpcy5fbW9kZT10LHRoaXMuX2F1dG9wYWRkaW5nPSEwfW4oMikobCxzKSxsLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQpe3ZhciBlLG47dGhpcy5fY2FjaGUuYWRkKHQpO2Zvcih2YXIgcj1bXTtlPXRoaXMuX2NhY2hlLmdldCgpOyluPXRoaXMuX21vZGUuZW5jcnlwdCh0aGlzLGUpLHIucHVzaChuKTtyZXR1cm4gYS5jb25jYXQocil9O3ZhciBmPWEuYWxsb2MoMTYsMTYpO2Z1bmN0aW9uIGgoKXt0aGlzLmNhY2hlPWEuYWxsb2NVbnNhZmUoMCl9ZnVuY3Rpb24gcCh0LGUsbil7dmFyIHM9clt0LnRvTG93ZXJDYXNlKCldO2lmKCFzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIik7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWEuZnJvbShlKSksZS5sZW5ndGghPT1zLmtleS84KXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIGtleSBsZW5ndGggXCIrZS5sZW5ndGgpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuJiYobj1hLmZyb20obikpLFwiR0NNXCIhPT1zLm1vZGUmJm4ubGVuZ3RoIT09cy5pdil0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBpdiBsZW5ndGggXCIrbi5sZW5ndGgpO3JldHVyblwic3RyZWFtXCI9PT1zLnR5cGU/bmV3IG8ocy5tb2R1bGUsZSxuKTpcImF1dGhcIj09PXMudHlwZT9uZXcgaShzLm1vZHVsZSxlLG4pOm5ldyBsKHMubW9kdWxlLGUsbil9bC5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fY2FjaGUuZmx1c2goKTtpZih0aGlzLl9hdXRvcGFkZGluZylyZXR1cm4gdD10aGlzLl9tb2RlLmVuY3J5cHQodGhpcyx0KSx0aGlzLl9jaXBoZXIuc2NydWIoKSx0O2lmKCF0LmVxdWFscyhmKSl0aHJvdyB0aGlzLl9jaXBoZXIuc2NydWIoKSxuZXcgRXJyb3IoXCJkYXRhIG5vdCBtdWx0aXBsZSBvZiBibG9jayBsZW5ndGhcIil9LGwucHJvdG90eXBlLnNldEF1dG9QYWRkaW5nPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9hdXRvcGFkZGluZz0hIXQsdGhpc30saC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3RoaXMuY2FjaGU9YS5jb25jYXQoW3RoaXMuY2FjaGUsdF0pfSxoLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtpZih0aGlzLmNhY2hlLmxlbmd0aD4xNSl7dmFyIHQ9dGhpcy5jYWNoZS5zbGljZSgwLDE2KTtyZXR1cm4gdGhpcy5jYWNoZT10aGlzLmNhY2hlLnNsaWNlKDE2KSx0fXJldHVybiBudWxsfSxoLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbigpe2Zvcih2YXIgdD0xNi10aGlzLmNhY2hlLmxlbmd0aCxlPWEuYWxsb2NVbnNhZmUodCksbj0tMTsrK248dDspZS53cml0ZVVJbnQ4KHQsbik7cmV0dXJuIGEuY29uY2F0KFt0aGlzLmNhY2hlLGVdKX0sZS5jcmVhdGVDaXBoZXJpdj1wLGUuY3JlYXRlQ2lwaGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49clt0LnRvTG93ZXJDYXNlKCldO2lmKCFuKXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIik7dmFyIGk9YyhlLCExLG4ua2V5LG4uaXYpO3JldHVybiBwKHQsaS5rZXksaS5pdil9fSxmdW5jdGlvbih0LGUpe2UuZW5jcnlwdD1mdW5jdGlvbih0LGUpe3JldHVybiB0Ll9jaXBoZXIuZW5jcnlwdEJsb2NrKGUpfSxlLmRlY3J5cHQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fY2lwaGVyLmRlY3J5cHRCbG9jayhlKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDMyKTtlLmVuY3J5cHQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1yKGUsdC5fcHJldik7cmV0dXJuIHQuX3ByZXY9dC5fY2lwaGVyLmVuY3J5cHRCbG9jayhuKSx0Ll9wcmV2fSxlLmRlY3J5cHQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll9wcmV2O3QuX3ByZXY9ZTt2YXIgaT10Ll9jaXBoZXIuZGVjcnlwdEJsb2NrKGUpO3JldHVybiByKGksbil9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzKS5CdWZmZXIsaT1uKDMyKTtmdW5jdGlvbiBhKHQsZSxuKXt2YXIgYT1lLmxlbmd0aCxvPWkoZSx0Ll9jYWNoZSk7cmV0dXJuIHQuX2NhY2hlPXQuX2NhY2hlLnNsaWNlKGEpLHQuX3ByZXY9ci5jb25jYXQoW3QuX3ByZXYsbj9lOm9dKSxvfWUuZW5jcnlwdD1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciBpLG89ci5hbGxvY1Vuc2FmZSgwKTtlLmxlbmd0aDspe2lmKDA9PT10Ll9jYWNoZS5sZW5ndGgmJih0Ll9jYWNoZT10Ll9jaXBoZXIuZW5jcnlwdEJsb2NrKHQuX3ByZXYpLHQuX3ByZXY9ci5hbGxvY1Vuc2FmZSgwKSksISh0Ll9jYWNoZS5sZW5ndGg8PWUubGVuZ3RoKSl7bz1yLmNvbmNhdChbbyxhKHQsZSxuKV0pO2JyZWFrfWk9dC5fY2FjaGUubGVuZ3RoLG89ci5jb25jYXQoW28sYSh0LGUuc2xpY2UoMCxpKSxuKV0pLGU9ZS5zbGljZShpKX1yZXR1cm4gb319LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDMpLkJ1ZmZlcjtmdW5jdGlvbiBpKHQsZSxuKXt2YXIgaT10Ll9jaXBoZXIuZW5jcnlwdEJsb2NrKHQuX3ByZXYpWzBdXmU7cmV0dXJuIHQuX3ByZXY9ci5jb25jYXQoW3QuX3ByZXYuc2xpY2UoMSksci5mcm9tKFtuP2U6aV0pXSksaX1lLmVuY3J5cHQ9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgYT1lLmxlbmd0aCxvPXIuYWxsb2NVbnNhZmUoYSkscz0tMTsrK3M8YTspb1tzXT1pKHQsZVtzXSxuKTtyZXR1cm4gb319LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDMpLkJ1ZmZlcjtmdW5jdGlvbiBpKHQsZSxuKXtmb3IodmFyIHIsaSxvPS0xLHM9MDsrK288ODspcj1lJjE8PDctbz8xMjg6MCxzKz0oMTI4JihpPXQuX2NpcGhlci5lbmNyeXB0QmxvY2sodC5fcHJldilbMF1ecikpPj5vJTgsdC5fcHJldj1hKHQuX3ByZXYsbj9yOmkpO3JldHVybiBzfWZ1bmN0aW9uIGEodCxlKXt2YXIgbj10Lmxlbmd0aCxpPS0xLGE9ci5hbGxvY1Vuc2FmZSh0Lmxlbmd0aCk7Zm9yKHQ9ci5jb25jYXQoW3Qsci5mcm9tKFtlXSldKTsrK2k8bjspYVtpXT10W2ldPDwxfHRbaSsxXT4+NztyZXR1cm4gYX1lLmVuY3J5cHQ9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgYT1lLmxlbmd0aCxvPXIuYWxsb2NVbnNhZmUoYSkscz0tMTsrK3M8YTspb1tzXT1pKHQsZVtzXSxuKTtyZXR1cm4gb319LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7dmFyIHI9bigzMik7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdC5fcHJldj10Ll9jaXBoZXIuZW5jcnlwdEJsb2NrKHQuX3ByZXYpLHQuX3ByZXZ9ZS5lbmNyeXB0PWZ1bmN0aW9uKGUsbil7Zm9yKDtlLl9jYWNoZS5sZW5ndGg8bi5sZW5ndGg7KWUuX2NhY2hlPXQuY29uY2F0KFtlLl9jYWNoZSxpKGUpXSk7dmFyIGE9ZS5fY2FjaGUuc2xpY2UoMCxuLmxlbmd0aCk7cmV0dXJuIGUuX2NhY2hlPWUuX2NhY2hlLnNsaWNlKG4ubGVuZ3RoKSxyKG4sYSl9fSkuY2FsbCh0aGlzLG4oNCkuQnVmZmVyKX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMykuQnVmZmVyLGk9ci5hbGxvYygxNiwwKTtmdW5jdGlvbiBhKHQpe3ZhciBlPXIuYWxsb2NVbnNhZmUoMTYpO3JldHVybiBlLndyaXRlVUludDMyQkUodFswXT4+PjAsMCksZS53cml0ZVVJbnQzMkJFKHRbMV0+Pj4wLDQpLGUud3JpdGVVSW50MzJCRSh0WzJdPj4+MCw4KSxlLndyaXRlVUludDMyQkUodFszXT4+PjAsMTIpLGV9ZnVuY3Rpb24gbyh0KXt0aGlzLmg9dCx0aGlzLnN0YXRlPXIuYWxsb2MoMTYsMCksdGhpcy5jYWNoZT1yLmFsbG9jVW5zYWZlKDApfW8ucHJvdG90eXBlLmdoYXNoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0tMTsrK2U8dC5sZW5ndGg7KXRoaXMuc3RhdGVbZV1ePXRbZV07dGhpcy5fbXVsdGlwbHkoKX0sby5wcm90b3R5cGUuX211bHRpcGx5PWZ1bmN0aW9uKCl7Zm9yKHZhciB0LGUsbixyPVsodD10aGlzLmgpLnJlYWRVSW50MzJCRSgwKSx0LnJlYWRVSW50MzJCRSg0KSx0LnJlYWRVSW50MzJCRSg4KSx0LnJlYWRVSW50MzJCRSgxMildLGk9WzAsMCwwLDBdLG89LTE7KytvPDEyODspe2ZvcigwIT0odGhpcy5zdGF0ZVt+fihvLzgpXSYxPDw3LW8lOCkmJihpWzBdXj1yWzBdLGlbMV1ePXJbMV0saVsyXV49clsyXSxpWzNdXj1yWzNdKSxuPTAhPSgxJnJbM10pLGU9MztlPjA7ZS0tKXJbZV09cltlXT4+PjF8KDEmcltlLTFdKTw8MzE7clswXT1yWzBdPj4+MSxuJiYoclswXT1yWzBdXjIyNTw8MjQpfXRoaXMuc3RhdGU9YShpKX0sby5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQpe3ZhciBlO2Zvcih0aGlzLmNhY2hlPXIuY29uY2F0KFt0aGlzLmNhY2hlLHRdKTt0aGlzLmNhY2hlLmxlbmd0aD49MTY7KWU9dGhpcy5jYWNoZS5zbGljZSgwLDE2KSx0aGlzLmNhY2hlPXRoaXMuY2FjaGUuc2xpY2UoMTYpLHRoaXMuZ2hhc2goZSl9LG8ucHJvdG90eXBlLmZpbmFsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY2FjaGUubGVuZ3RoJiZ0aGlzLmdoYXNoKHIuY29uY2F0KFt0aGlzLmNhY2hlLGldLDE2KSksdGhpcy5naGFzaChhKFswLHQsMCxlXSkpLHRoaXMuc3RhdGV9LHQuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigxMDMpLGk9bigzKS5CdWZmZXIsYT1uKDY1KSxvPW4oMTA0KSxzPW4oMTgpLHU9big0MyksYz1uKDQ0KTtmdW5jdGlvbiBsKHQsZSxuKXtzLmNhbGwodGhpcyksdGhpcy5fY2FjaGU9bmV3IGYsdGhpcy5fbGFzdD12b2lkIDAsdGhpcy5fY2lwaGVyPW5ldyB1LkFFUyhlKSx0aGlzLl9wcmV2PWkuZnJvbShuKSx0aGlzLl9tb2RlPXQsdGhpcy5fYXV0b3BhZGRpbmc9ITB9ZnVuY3Rpb24gZigpe3RoaXMuY2FjaGU9aS5hbGxvY1Vuc2FmZSgwKX1mdW5jdGlvbiBoKHQsZSxuKXt2YXIgcz1hW3QudG9Mb3dlckNhc2UoKV07aWYoIXMpdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgc3VpdGUgdHlwZVwiKTtpZihcInN0cmluZ1wiPT10eXBlb2YgbiYmKG49aS5mcm9tKG4pKSxcIkdDTVwiIT09cy5tb2RlJiZuLmxlbmd0aCE9PXMuaXYpdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgaXYgbGVuZ3RoIFwiK24ubGVuZ3RoKTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9aS5mcm9tKGUpKSxlLmxlbmd0aCE9PXMua2V5LzgpdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQga2V5IGxlbmd0aCBcIitlLmxlbmd0aCk7cmV0dXJuXCJzdHJlYW1cIj09PXMudHlwZT9uZXcgbyhzLm1vZHVsZSxlLG4sITApOlwiYXV0aFwiPT09cy50eXBlP25ldyByKHMubW9kdWxlLGUsbiwhMCk6bmV3IGwocy5tb2R1bGUsZSxuKX1uKDIpKGwscyksbC5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXt2YXIgZSxuO3RoaXMuX2NhY2hlLmFkZCh0KTtmb3IodmFyIHI9W107ZT10aGlzLl9jYWNoZS5nZXQodGhpcy5fYXV0b3BhZGRpbmcpOyluPXRoaXMuX21vZGUuZGVjcnlwdCh0aGlzLGUpLHIucHVzaChuKTtyZXR1cm4gaS5jb25jYXQocil9LGwucHJvdG90eXBlLl9maW5hbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2NhY2hlLmZsdXNoKCk7aWYodGhpcy5fYXV0b3BhZGRpbmcpcmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXRbMTVdO2lmKGU8MXx8ZT4xNil0aHJvdyBuZXcgRXJyb3IoXCJ1bmFibGUgdG8gZGVjcnlwdCBkYXRhXCIpO3ZhciBuPS0xO2Zvcig7KytuPGU7KWlmKHRbbisoMTYtZSldIT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJ1bmFibGUgdG8gZGVjcnlwdCBkYXRhXCIpO2lmKDE2PT09ZSlyZXR1cm47cmV0dXJuIHQuc2xpY2UoMCwxNi1lKX0odGhpcy5fbW9kZS5kZWNyeXB0KHRoaXMsdCkpO2lmKHQpdGhyb3cgbmV3IEVycm9yKFwiZGF0YSBub3QgbXVsdGlwbGUgb2YgYmxvY2sgbGVuZ3RoXCIpfSxsLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXV0b3BhZGRpbmc9ISF0LHRoaXN9LGYucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0KXt0aGlzLmNhY2hlPWkuY29uY2F0KFt0aGlzLmNhY2hlLHRdKX0sZi5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciBlO2lmKHQpe2lmKHRoaXMuY2FjaGUubGVuZ3RoPjE2KXJldHVybiBlPXRoaXMuY2FjaGUuc2xpY2UoMCwxNiksdGhpcy5jYWNoZT10aGlzLmNhY2hlLnNsaWNlKDE2KSxlfWVsc2UgaWYodGhpcy5jYWNoZS5sZW5ndGg+PTE2KXJldHVybiBlPXRoaXMuY2FjaGUuc2xpY2UoMCwxNiksdGhpcy5jYWNoZT10aGlzLmNhY2hlLnNsaWNlKDE2KSxlO3JldHVybiBudWxsfSxmLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbigpe2lmKHRoaXMuY2FjaGUubGVuZ3RoKXJldHVybiB0aGlzLmNhY2hlfSxlLmNyZWF0ZURlY2lwaGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49YVt0LnRvTG93ZXJDYXNlKCldO2lmKCFuKXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIik7dmFyIHI9YyhlLCExLG4ua2V5LG4uaXYpO3JldHVybiBoKHQsci5rZXksci5pdil9LGUuY3JlYXRlRGVjaXBoZXJpdj1ofSxmdW5jdGlvbih0LGUpe2VbXCJkZXMtZWNiXCJdPXtrZXk6OCxpdjowfSxlW1wiZGVzLWNiY1wiXT1lLmRlcz17a2V5OjgsaXY6OH0sZVtcImRlcy1lZGUzLWNiY1wiXT1lLmRlczM9e2tleToyNCxpdjo4fSxlW1wiZGVzLWVkZTNcIl09e2tleToyNCxpdjowfSxlW1wiZGVzLWVkZS1jYmNcIl09e2tleToxNixpdjo4fSxlW1wiZGVzLWVkZVwiXT17a2V5OjE2LGl2OjB9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe3ZhciByPW4oMTA1KSxpPW4oMTc2KSxhPW4oMTc3KTt2YXIgbz17YmluYXJ5OiEwLGhleDohMCxiYXNlNjQ6ITB9O2UuRGlmZmllSGVsbG1hbkdyb3VwPWUuY3JlYXRlRGlmZmllSGVsbG1hbkdyb3VwPWUuZ2V0RGlmZmllSGVsbG1hbj1mdW5jdGlvbihlKXt2YXIgbj1uZXcgdChpW2VdLnByaW1lLFwiaGV4XCIpLHI9bmV3IHQoaVtlXS5nZW4sXCJoZXhcIik7cmV0dXJuIG5ldyBhKG4scil9LGUuY3JlYXRlRGlmZmllSGVsbG1hbj1lLkRpZmZpZUhlbGxtYW49ZnVuY3Rpb24gZShuLGkscyx1KXtyZXR1cm4gdC5pc0J1ZmZlcihpKXx8dm9pZCAwPT09b1tpXT9lKG4sXCJiaW5hcnlcIixpLHMpOihpPWl8fFwiYmluYXJ5XCIsdT11fHxcImJpbmFyeVwiLHM9c3x8bmV3IHQoWzJdKSx0LmlzQnVmZmVyKHMpfHwocz1uZXcgdChzLHUpKSxcIm51bWJlclwiPT10eXBlb2Ygbj9uZXcgYShyKG4scykscywhMCk6KHQuaXNCdWZmZXIobil8fChuPW5ldyB0KG4saSkpLG5ldyBhKG4scywhMCkpKX19KS5jYWxsKHRoaXMsbig0KS5CdWZmZXIpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gdC53ZWJwYWNrUG9seWZpbGx8fCh0LmRlcHJlY2F0ZT1mdW5jdGlvbigpe30sdC5wYXRocz1bXSx0LmNoaWxkcmVufHwodC5jaGlsZHJlbj1bXSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJsb2FkZWRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5sfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiaWRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdC5pfX0pLHQud2VicGFja1BvbHlmaWxsPTEpLHR9fSxmdW5jdGlvbih0LGUpe30sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz17bW9kcDE6e2dlbjpcIjAyXCIscHJpbWU6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjNhMzYyMGZmZmZmZmZmZmZmZmZmZmZcIn0sbW9kcDI6e2dlbjpcIjAyXCIscHJpbWU6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNjUzODFmZmZmZmZmZmZmZmZmZmZmXCJ9LG1vZHA1OntnZW46XCIwMlwiLHByaW1lOlwiZmZmZmZmZmZmZmZmZmZmZmM5MGZkYWEyMjE2OGMyMzRjNGM2NjI4YjgwZGMxY2QxMjkwMjRlMDg4YTY3Y2M3NDAyMGJiZWE2M2IxMzliMjI1MTRhMDg3OThlMzQwNGRkZWY5NTE5YjNjZDNhNDMxYjMwMmIwYTZkZjI1ZjE0Mzc0ZmUxMzU2ZDZkNTFjMjQ1ZTQ4NWI1NzY2MjVlN2VjNmY0NGM0MmU5YTYzN2VkNmIwYmZmNWNiNmY0MDZiN2VkZWUzODZiZmI1YTg5OWZhNWFlOWYyNDExN2M0YjFmZTY0OTI4NjY1MWVjZTQ1YjNkYzIwMDdjYjhhMTYzYmYwNTk4ZGE0ODM2MWM1NWQzOWE2OTE2M2ZhOGZkMjRjZjVmODM2NTVkMjNkY2EzYWQ5NjFjNjJmMzU2MjA4NTUyYmI5ZWQ1MjkwNzcwOTY5NjZkNjcwYzM1NGU0YWJjOTgwNGYxNzQ2YzA4Y2EyMzczMjdmZmZmZmZmZmZmZmZmZmZmXCJ9LG1vZHAxNDp7Z2VuOlwiMDJcIixwcmltZTpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhY2FhNjhmZmZmZmZmZmZmZmZmZmZmXCJ9LG1vZHAxNTp7Z2VuOlwiMDJcIixwcmltZTpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5M2FkMmNhZmZmZmZmZmZmZmZmZmZmZlwifSxtb2RwMTY6e2dlbjpcIjAyXCIscHJpbWU6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTE4MjE3YzMyOTA1ZTQ2MmUzNmNlM2JlMzllNzcyYzE4MGU4NjAzOWIyNzgzYTJlYzA3YTI4ZmI1YzU1ZGYwNmY0YzUyYzlkZTJiY2JmNjk1NTgxNzE4Mzk5NTQ5N2NlYTk1NmFlNTE1ZDIyNjE4OThmYTA1MTAxNTcyOGU1YThhYWFjNDJkYWQzMzE3MGQwNDUwN2EzM2E4NTUyMWFiZGYxY2JhNjRlY2ZiODUwNDU4ZGJlZjBhOGFlYTcxNTc1ZDA2MGM3ZGIzOTcwZjg1YTZlMWU0YzdhYmY1YWU4Y2RiMDkzM2Q3MWU4Yzk0ZTA0YTI1NjE5ZGNlZTNkMjI2MWFkMmVlNmJmMTJmZmEwNmQ5OGEwODY0ZDg3NjAyNzMzZWM4NmE2NDUyMWYyYjE4MTc3YjIwMGNiYmUxMTc1NzdhNjE1ZDZjNzcwOTg4YzBiYWQ5NDZlMjA4ZTI0ZmEwNzRlNWFiMzE0M2RiNWJmY2UwZmQxMDhlNGI4MmQxMjBhOTIxMDgwMTFhNzIzYzEyYTc4N2U2ZDc4ODcxOWExMGJkYmE1YjI2OTljMzI3MTg2YWY0ZTIzYzFhOTQ2ODM0YjYxNTBiZGEyNTgzZTljYTJhZDQ0Y2U4ZGJiYmMyZGIwNGRlOGVmOTJlOGVmYzE0MWZiZWNhYTYyODdjNTk0NzRlNmJjMDVkOTliMjk2NGZhMDkwYzNhMjIzM2JhMTg2NTE1YmU3ZWQxZjYxMjk3MGNlZTJkN2FmYjgxYmRkNzYyMTcwNDgxY2QwMDY5MTI3ZDViMDVhYTk5M2I0ZWE5ODhkOGZkZGMxODZmZmI3ZGM5MGE2YzA4ZjRkZjQzNWM5MzQwNjMxOTlmZmZmZmZmZmZmZmZmZmZmXCJ9LG1vZHAxNzp7Z2VuOlwiMDJcIixwcmltZTpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5MjEwODAxMWE3MjNjMTJhNzg3ZTZkNzg4NzE5YTEwYmRiYTViMjY5OWMzMjcxODZhZjRlMjNjMWE5NDY4MzRiNjE1MGJkYTI1ODNlOWNhMmFkNDRjZThkYmJiYzJkYjA0ZGU4ZWY5MmU4ZWZjMTQxZmJlY2FhNjI4N2M1OTQ3NGU2YmMwNWQ5OWIyOTY0ZmEwOTBjM2EyMjMzYmExODY1MTViZTdlZDFmNjEyOTcwY2VlMmQ3YWZiODFiZGQ3NjIxNzA0ODFjZDAwNjkxMjdkNWIwNWFhOTkzYjRlYTk4OGQ4ZmRkYzE4NmZmYjdkYzkwYTZjMDhmNGRmNDM1YzkzNDAyODQ5MjM2YzNmYWI0ZDI3YzcwMjZjMWQ0ZGNiMjYwMjY0NmRlYzk3NTFlNzYzZGJhMzdiZGY4ZmY5NDA2YWQ5ZTUzMGVlNWRiMzgyZjQxMzAwMWFlYjA2YTUzZWQ5MDI3ZDgzMTE3OTcyN2IwODY1YTg5MThkYTNlZGJlYmNmOWIxNGVkNDRjZTZjYmFjZWQ0YmIxYmRiN2YxNDQ3ZTZjYzI1NGIzMzIwNTE1MTJiZDdhZjQyNmZiOGY0MDEzNzhjZDJiZjU5ODNjYTAxYzY0YjkyZWNmMDMyZWExNWQxNzIxZDAzZjQ4MmQ3Y2U2ZTc0ZmVmNmQ1NWU3MDJmNDY5ODBjODJiNWE4NDAzMTkwMGIxYzllNTllN2M5N2ZiZWM3ZThmMzIzYTk3YTdlMzZjYzg4YmUwZjFkNDViN2ZmNTg1YWM1NGJkNDA3YjIyYjQxNTRhYWNjOGY2ZDdlYmY0OGUxZDgxNGNjNWVkMjBmODAzN2UwYTc5NzE1ZWVmMjliZTMyODA2YTFkNThiYjdjNWRhNzZmNTUwYWEzZDhhMWZiZmYwZWIxOWNjYjFhMzEzZDU1Y2RhNTZjOWVjMmVmMjk2MzIzODdmZThkNzZlM2MwNDY4MDQzZThmNjYzZjQ4NjBlZTEyYmYyZDViMGI3NDc0ZDZlNjk0ZjkxZTZkY2M0MDI0ZmZmZmZmZmZmZmZmZmZmZlwifSxtb2RwMTg6e2dlbjpcIjAyXCIscHJpbWU6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTE4MjE3YzMyOTA1ZTQ2MmUzNmNlM2JlMzllNzcyYzE4MGU4NjAzOWIyNzgzYTJlYzA3YTI4ZmI1YzU1ZGYwNmY0YzUyYzlkZTJiY2JmNjk1NTgxNzE4Mzk5NTQ5N2NlYTk1NmFlNTE1ZDIyNjE4OThmYTA1MTAxNTcyOGU1YThhYWFjNDJkYWQzMzE3MGQwNDUwN2EzM2E4NTUyMWFiZGYxY2JhNjRlY2ZiODUwNDU4ZGJlZjBhOGFlYTcxNTc1ZDA2MGM3ZGIzOTcwZjg1YTZlMWU0YzdhYmY1YWU4Y2RiMDkzM2Q3MWU4Yzk0ZTA0YTI1NjE5ZGNlZTNkMjI2MWFkMmVlNmJmMTJmZmEwNmQ5OGEwODY0ZDg3NjAyNzMzZWM4NmE2NDUyMWYyYjE4MTc3YjIwMGNiYmUxMTc1NzdhNjE1ZDZjNzcwOTg4YzBiYWQ5NDZlMjA4ZTI0ZmEwNzRlNWFiMzE0M2RiNWJmY2UwZmQxMDhlNGI4MmQxMjBhOTIxMDgwMTFhNzIzYzEyYTc4N2U2ZDc4ODcxOWExMGJkYmE1YjI2OTljMzI3MTg2YWY0ZTIzYzFhOTQ2ODM0YjYxNTBiZGEyNTgzZTljYTJhZDQ0Y2U4ZGJiYmMyZGIwNGRlOGVmOTJlOGVmYzE0MWZiZWNhYTYyODdjNTk0NzRlNmJjMDVkOTliMjk2NGZhMDkwYzNhMjIzM2JhMTg2NTE1YmU3ZWQxZjYxMjk3MGNlZTJkN2FmYjgxYmRkNzYyMTcwNDgxY2QwMDY5MTI3ZDViMDVhYTk5M2I0ZWE5ODhkOGZkZGMxODZmZmI3ZGM5MGE2YzA4ZjRkZjQzNWM5MzQwMjg0OTIzNmMzZmFiNGQyN2M3MDI2YzFkNGRjYjI2MDI2NDZkZWM5NzUxZTc2M2RiYTM3YmRmOGZmOTQwNmFkOWU1MzBlZTVkYjM4MmY0MTMwMDFhZWIwNmE1M2VkOTAyN2Q4MzExNzk3MjdiMDg2NWE4OTE4ZGEzZWRiZWJjZjliMTRlZDQ0Y2U2Y2JhY2VkNGJiMWJkYjdmMTQ0N2U2Y2MyNTRiMzMyMDUxNTEyYmQ3YWY0MjZmYjhmNDAxMzc4Y2QyYmY1OTgzY2EwMWM2NGI5MmVjZjAzMmVhMTVkMTcyMWQwM2Y0ODJkN2NlNmU3NGZlZjZkNTVlNzAyZjQ2OTgwYzgyYjVhODQwMzE5MDBiMWM5ZTU5ZTdjOTdmYmVjN2U4ZjMyM2E5N2E3ZTM2Y2M4OGJlMGYxZDQ1YjdmZjU4NWFjNTRiZDQwN2IyMmI0MTU0YWFjYzhmNmQ3ZWJmNDhlMWQ4MTRjYzVlZDIwZjgwMzdlMGE3OTcxNWVlZjI5YmUzMjgwNmExZDU4YmI3YzVkYTc2ZjU1MGFhM2Q4YTFmYmZmMGViMTljY2IxYTMxM2Q1NWNkYTU2YzllYzJlZjI5NjMyMzg3ZmU4ZDc2ZTNjMDQ2ODA0M2U4ZjY2M2Y0ODYwZWUxMmJmMmQ1YjBiNzQ3NGQ2ZTY5NGY5MWU2ZGJlMTE1OTc0YTM5MjZmMTJmZWU1ZTQzODc3N2NiNmE5MzJkZjhjZDhiZWM0ZDA3M2I5MzFiYTNiYzgzMmI2OGQ5ZGQzMDA3NDFmYTdiZjhhZmM0N2VkMjU3NmY2OTM2YmE0MjQ2NjNhYWI2MzljNWFlNGY1NjgzNDIzYjQ3NDJiZjFjOTc4MjM4ZjE2Y2JlMzlkNjUyZGUzZmRiOGJlZmM4NDhhZDkyMjIyMmUwNGE0MDM3YzA3MTNlYjU3YTgxYTIzZjBjNzM0NzNmYzY0NmNlYTMwNmI0YmNiYzg4NjJmODM4NWRkZmE5ZDRiN2ZhMmMwODdlODc5NjgzMzAzZWQ1YmRkM2EwNjJiM2NmNWIzYTI3OGE2NmQyYTEzZjgzZjQ0ZjgyZGRmMzEwZWUwNzRhYjZhMzY0NTk3ZTg5OWEwMjU1ZGMxNjRmMzFjYzUwODQ2ODUxZGY5YWI0ODE5NWRlZDdlYTFiMWQ1MTBiZDdlZTc0ZDczZmFmMzZiYzMxZWNmYTI2ODM1OTA0NmY0ZWI4NzlmOTI0MDA5NDM4YjQ4MWM2Y2Q3ODg5YTAwMmVkNWVlMzgyYmM5MTkwZGE2ZmMwMjZlNDc5NTU4ZTQ0NzU2NzdlOWFhOWUzMDUwZTI3NjU2OTRkZmM4MWY1NmU4ODBiOTZlNzE2MGM5ODBkZDk4ZWRkM2RmZmZmZmZmZmZmZmZmZmZmZlwifX19LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIHI9big1KSxpPW5ldyhuKDEwNikpLGE9bmV3IHIoMjQpLG89bmV3IHIoMTEpLHM9bmV3IHIoMTApLHU9bmV3IHIoMyksYz1uZXcgcig3KSxsPW4oMTA1KSxmPW4oMjIpO2Z1bmN0aW9uIGgodCxuKXtyZXR1cm4gbj1ufHxcInV0ZjhcIixlLmlzQnVmZmVyKHQpfHwodD1uZXcgZSh0LG4pKSx0aGlzLl9wdWI9bmV3IHIodCksdGhpc31mdW5jdGlvbiBwKHQsbil7cmV0dXJuIG49bnx8XCJ1dGY4XCIsZS5pc0J1ZmZlcih0KXx8KHQ9bmV3IGUodCxuKSksdGhpcy5fcHJpdj1uZXcgcih0KSx0aGlzfXQuZXhwb3J0cz1tO3ZhciBkPXt9O2Z1bmN0aW9uIG0odCxlLG4pe3RoaXMuc2V0R2VuZXJhdG9yKGUpLHRoaXMuX19wcmltZT1uZXcgcih0KSx0aGlzLl9wcmltZT1yLm1vbnQodGhpcy5fX3ByaW1lKSx0aGlzLl9wcmltZUxlbj10Lmxlbmd0aCx0aGlzLl9wdWI9dm9pZCAwLHRoaXMuX3ByaXY9dm9pZCAwLHRoaXMuX3ByaW1lQ29kZT12b2lkIDAsbj8odGhpcy5zZXRQdWJsaWNLZXk9aCx0aGlzLnNldFByaXZhdGVLZXk9cCk6dGhpcy5fcHJpbWVDb2RlPTh9ZnVuY3Rpb24gZyh0LG4pe3ZhciByPW5ldyBlKHQudG9BcnJheSgpKTtyZXR1cm4gbj9yLnRvU3RyaW5nKG4pOnJ9T2JqZWN0LmRlZmluZVByb3BlcnR5KG0ucHJvdG90eXBlLFwidmVyaWZ5RXJyb3JcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgdGhpcy5fcHJpbWVDb2RlJiYodGhpcy5fcHJpbWVDb2RlPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS50b1N0cmluZyhcImhleFwiKSxyPVtuLHQudG9TdHJpbmcoMTYpXS5qb2luKFwiX1wiKTtpZihyIGluIGQpcmV0dXJuIGRbcl07dmFyIGYsaD0wO2lmKHQuaXNFdmVuKCl8fCFsLnNpbXBsZVNpZXZlfHwhbC5mZXJtYXRUZXN0KHQpfHwhaS50ZXN0KHQpKXJldHVybiBoKz0xLGgrPVwiMDJcIj09PW58fFwiMDVcIj09PW4/ODo0LGRbcl09aCxoO3N3aXRjaChpLnRlc3QodC5zaHJuKDEpKXx8KGgrPTIpLG4pe2Nhc2VcIjAyXCI6dC5tb2QoYSkuY21wKG8pJiYoaCs9OCk7YnJlYWs7Y2FzZVwiMDVcIjooZj10Lm1vZChzKSkuY21wKHUpJiZmLmNtcChjKSYmKGgrPTgpO2JyZWFrO2RlZmF1bHQ6aCs9NH1yZXR1cm4gZFtyXT1oLGh9KHRoaXMuX19wcmltZSx0aGlzLl9fZ2VuKSksdGhpcy5fcHJpbWVDb2RlfX0pLG0ucHJvdG90eXBlLmdlbmVyYXRlS2V5cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcml2fHwodGhpcy5fcHJpdj1uZXcgcihmKHRoaXMuX3ByaW1lTGVuKSkpLHRoaXMuX3B1Yj10aGlzLl9nZW4udG9SZWQodGhpcy5fcHJpbWUpLnJlZFBvdyh0aGlzLl9wcml2KS5mcm9tUmVkKCksdGhpcy5nZXRQdWJsaWNLZXkoKX0sbS5wcm90b3R5cGUuY29tcHV0ZVNlY3JldD1mdW5jdGlvbih0KXt2YXIgbj0odD0odD1uZXcgcih0KSkudG9SZWQodGhpcy5fcHJpbWUpKS5yZWRQb3codGhpcy5fcHJpdikuZnJvbVJlZCgpLGk9bmV3IGUobi50b0FycmF5KCkpLGE9dGhpcy5nZXRQcmltZSgpO2lmKGkubGVuZ3RoPGEubGVuZ3RoKXt2YXIgbz1uZXcgZShhLmxlbmd0aC1pLmxlbmd0aCk7by5maWxsKDApLGk9ZS5jb25jYXQoW28saV0pfXJldHVybiBpfSxtLnByb3RvdHlwZS5nZXRQdWJsaWNLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIGcodGhpcy5fcHViLHQpfSxtLnByb3RvdHlwZS5nZXRQcml2YXRlS2V5PWZ1bmN0aW9uKHQpe3JldHVybiBnKHRoaXMuX3ByaXYsdCl9LG0ucHJvdG90eXBlLmdldFByaW1lPWZ1bmN0aW9uKHQpe3JldHVybiBnKHRoaXMuX19wcmltZSx0KX0sbS5wcm90b3R5cGUuZ2V0R2VuZXJhdG9yPWZ1bmN0aW9uKHQpe3JldHVybiBnKHRoaXMuX2dlbix0KX0sbS5wcm90b3R5cGUuc2V0R2VuZXJhdG9yPWZ1bmN0aW9uKHQsbil7cmV0dXJuIG49bnx8XCJ1dGY4XCIsZS5pc0J1ZmZlcih0KXx8KHQ9bmV3IGUodCxuKSksdGhpcy5fX2dlbj10LHRoaXMuX2dlbj1uZXcgcih0KSx0aGlzfX0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIHI9bigzMCksaT1uKDU3KSxhPW4oMiksbz1uKDE3OSkscz1uKDIxNSksdT1uKDk1KTtmdW5jdGlvbiBjKHQpe2kuV3JpdGFibGUuY2FsbCh0aGlzKTt2YXIgZT11W3RdO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gbWVzc2FnZSBkaWdlc3RcIik7dGhpcy5faGFzaFR5cGU9ZS5oYXNoLHRoaXMuX2hhc2g9cihlLmhhc2gpLHRoaXMuX3RhZz1lLmlkLHRoaXMuX3NpZ25UeXBlPWUuc2lnbn1mdW5jdGlvbiBsKHQpe2kuV3JpdGFibGUuY2FsbCh0aGlzKTt2YXIgZT11W3RdO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gbWVzc2FnZSBkaWdlc3RcIik7dGhpcy5faGFzaD1yKGUuaGFzaCksdGhpcy5fdGFnPWUuaWQsdGhpcy5fc2lnblR5cGU9ZS5zaWdufWZ1bmN0aW9uIGYodCl7cmV0dXJuIG5ldyBjKHQpfWZ1bmN0aW9uIGgodCl7cmV0dXJuIG5ldyBsKHQpfU9iamVjdC5rZXlzKHUpLmZvckVhY2goZnVuY3Rpb24odCl7dVt0XS5pZD1uZXcgZSh1W3RdLmlkLFwiaGV4XCIpLHVbdC50b0xvd2VyQ2FzZSgpXT11W3RdfSksYShjLGkuV3JpdGFibGUpLGMucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbih0LGUsbil7dGhpcy5faGFzaC51cGRhdGUodCksbigpfSxjLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxuKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9bmV3IGUodCxuKSksdGhpcy5faGFzaC51cGRhdGUodCksdGhpc30sYy5wcm90b3R5cGUuc2lnbj1mdW5jdGlvbih0LGUpe3RoaXMuZW5kKCk7dmFyIG49dGhpcy5faGFzaC5kaWdlc3QoKSxyPW8obix0LHRoaXMuX2hhc2hUeXBlLHRoaXMuX3NpZ25UeXBlLHRoaXMuX3RhZyk7cmV0dXJuIGU/ci50b1N0cmluZyhlKTpyfSxhKGwsaS5Xcml0YWJsZSksbC5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLl9oYXNoLnVwZGF0ZSh0KSxuKCl9LGwucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LG4pe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1uZXcgZSh0LG4pKSx0aGlzLl9oYXNoLnVwZGF0ZSh0KSx0aGlzfSxsLnByb3RvdHlwZS52ZXJpZnk9ZnVuY3Rpb24odCxuLHIpe1wic3RyaW5nXCI9PXR5cGVvZiBuJiYobj1uZXcgZShuLHIpKSx0aGlzLmVuZCgpO3ZhciBpPXRoaXMuX2hhc2guZGlnZXN0KCk7cmV0dXJuIHMobixpLHQsdGhpcy5fc2lnblR5cGUsdGhpcy5fdGFnKX0sdC5leHBvcnRzPXtTaWduOmYsVmVyaWZ5OmgsY3JlYXRlU2lnbjpmLGNyZWF0ZVZlcmlmeTpofX0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7dmFyIHI9big5MyksaT1uKDY2KSxhPW4oOCkuZWMsbz1uKDUpLHM9big0NiksdT1uKDExNik7ZnVuY3Rpb24gYyh0LG4saSxhKXtpZigodD1uZXcgZSh0LnRvQXJyYXkoKSkpLmxlbmd0aDxuLmJ5dGVMZW5ndGgoKSl7dmFyIG89bmV3IGUobi5ieXRlTGVuZ3RoKCktdC5sZW5ndGgpO28uZmlsbCgwKSx0PWUuY29uY2F0KFtvLHRdKX12YXIgcz1pLmxlbmd0aCx1PWZ1bmN0aW9uKHQsbil7dD0odD1sKHQsbikpLm1vZChuKTt2YXIgcj1uZXcgZSh0LnRvQXJyYXkoKSk7aWYoci5sZW5ndGg8bi5ieXRlTGVuZ3RoKCkpe3ZhciBpPW5ldyBlKG4uYnl0ZUxlbmd0aCgpLXIubGVuZ3RoKTtpLmZpbGwoMCkscj1lLmNvbmNhdChbaSxyXSl9cmV0dXJuIHJ9KGksbiksYz1uZXcgZShzKTtjLmZpbGwoMSk7dmFyIGY9bmV3IGUocyk7cmV0dXJuIGYuZmlsbCgwKSxmPXIoYSxmKS51cGRhdGUoYykudXBkYXRlKG5ldyBlKFswXSkpLnVwZGF0ZSh0KS51cGRhdGUodSkuZGlnZXN0KCksYz1yKGEsZikudXBkYXRlKGMpLmRpZ2VzdCgpLHtrOmY9cihhLGYpLnVwZGF0ZShjKS51cGRhdGUobmV3IGUoWzFdKSkudXBkYXRlKHQpLnVwZGF0ZSh1KS5kaWdlc3QoKSx2OmM9cihhLGYpLnVwZGF0ZShjKS5kaWdlc3QoKX19ZnVuY3Rpb24gbCh0LGUpe3ZhciBuPW5ldyBvKHQpLHI9KHQubGVuZ3RoPDwzKS1lLmJpdExlbmd0aCgpO3JldHVybiByPjAmJm4uaXNocm4ociksbn1mdW5jdGlvbiBmKHQsbixpKXt2YXIgYSxvO2Rve2ZvcihhPW5ldyBlKDApOzgqYS5sZW5ndGg8dC5iaXRMZW5ndGgoKTspbi52PXIoaSxuLmspLnVwZGF0ZShuLnYpLmRpZ2VzdCgpLGE9ZS5jb25jYXQoW2Esbi52XSk7bz1sKGEsdCksbi5rPXIoaSxuLmspLnVwZGF0ZShuLnYpLnVwZGF0ZShuZXcgZShbMF0pKS5kaWdlc3QoKSxuLnY9cihpLG4uaykudXBkYXRlKG4udikuZGlnZXN0KCl9d2hpbGUoLTEhPT1vLmNtcCh0KSk7cmV0dXJuIG99ZnVuY3Rpb24gaCh0LGUsbixyKXtyZXR1cm4gdC50b1JlZChvLm1vbnQobikpLnJlZFBvdyhlKS5mcm9tUmVkKCkubW9kKHIpfXQuZXhwb3J0cz1mdW5jdGlvbih0LG4scixwLGQpe3ZhciBtPXMobik7aWYobS5jdXJ2ZSl7aWYoXCJlY2RzYVwiIT09cCYmXCJlY2RzYS9yc2FcIiE9PXApdGhyb3cgbmV3IEVycm9yKFwid3JvbmcgcHJpdmF0ZSBrZXkgdHlwZVwiKTtyZXR1cm4gZnVuY3Rpb24odCxuKXt2YXIgcj11W24uY3VydmUuam9pbihcIi5cIildO2lmKCFyKXRocm93IG5ldyBFcnJvcihcInVua25vd24gY3VydmUgXCIrbi5jdXJ2ZS5qb2luKFwiLlwiKSk7dmFyIGk9bmV3IGEocikua2V5RnJvbVByaXZhdGUobi5wcml2YXRlS2V5KS5zaWduKHQpO3JldHVybiBuZXcgZShpLnRvREVSKCkpfSh0LG0pfWlmKFwiZHNhXCI9PT1tLnR5cGUpe2lmKFwiZHNhXCIhPT1wKXRocm93IG5ldyBFcnJvcihcIndyb25nIHByaXZhdGUga2V5IHR5cGVcIik7cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtmb3IodmFyIGksYT1uLnBhcmFtcy5wcml2X2tleSxzPW4ucGFyYW1zLnAsdT1uLnBhcmFtcy5xLHA9bi5wYXJhbXMuZyxkPW5ldyBvKDApLG09bCh0LHUpLm1vZCh1KSxnPSExLHk9YyhhLHUsdCxyKTshMT09PWc7KWk9Zih1LHksciksZD1oKHAsaSxzLHUpLDA9PT0oZz1pLmludm0odSkuaW11bChtLmFkZChhLm11bChkKSkpLm1vZCh1KSkuY21wbigwKSYmKGc9ITEsZD1uZXcgbygwKSk7cmV0dXJuIGZ1bmN0aW9uKHQsbil7dD10LnRvQXJyYXkoKSxuPW4udG9BcnJheSgpLDEyOCZ0WzBdJiYodD1bMF0uY29uY2F0KHQpKSwxMjgmblswXSYmKG49WzBdLmNvbmNhdChuKSk7dmFyIHI9WzQ4LHQubGVuZ3RoK24ubGVuZ3RoKzQsMix0Lmxlbmd0aF07cmV0dXJuIHI9ci5jb25jYXQodCxbMixuLmxlbmd0aF0sbiksbmV3IGUocil9KGQsZyl9KHQsbSxyKX1pZihcInJzYVwiIT09cCYmXCJlY2RzYS9yc2FcIiE9PXApdGhyb3cgbmV3IEVycm9yKFwid3JvbmcgcHJpdmF0ZSBrZXkgdHlwZVwiKTt0PWUuY29uY2F0KFtkLHRdKTtmb3IodmFyIGc9bS5tb2R1bHVzLmJ5dGVMZW5ndGgoKSx5PVswLDFdO3QubGVuZ3RoK3kubGVuZ3RoKzE8ZzspeS5wdXNoKDI1NSk7eS5wdXNoKDApO2Zvcih2YXIgdj0tMTsrK3Y8dC5sZW5ndGg7KXkucHVzaCh0W3ZdKTtyZXR1cm4gaSh5LG0pfSx0LmV4cG9ydHMuZ2V0S2V5PWMsdC5leHBvcnRzLm1ha2VLZXk9Zn0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQpe3QuZXhwb3J0cz17bmFtZTpcImVsbGlwdGljXCIsdmVyc2lvbjpcIjYuNC4xXCIsZGVzY3JpcHRpb246XCJFQyBjcnlwdG9ncmFwaHlcIixtYWluOlwibGliL2VsbGlwdGljLmpzXCIsZmlsZXM6W1wibGliXCJdLHNjcmlwdHM6e2pzY3M6XCJqc2NzIGJlbmNobWFya3MvKi5qcyBsaWIvKi5qcyBsaWIvKiovKi5qcyBsaWIvKiovKiovKi5qcyB0ZXN0L2luZGV4LmpzXCIsanNoaW50OlwianNjcyBiZW5jaG1hcmtzLyouanMgbGliLyouanMgbGliLyoqLyouanMgbGliLyoqLyoqLyouanMgdGVzdC9pbmRleC5qc1wiLGxpbnQ6XCJucG0gcnVuIGpzY3MgJiYgbnBtIHJ1biBqc2hpbnRcIix1bml0OlwiaXN0YW5idWwgdGVzdCBfbW9jaGEgLS1yZXBvcnRlcj1zcGVjIHRlc3QvaW5kZXguanNcIix0ZXN0OlwibnBtIHJ1biBsaW50ICYmIG5wbSBydW4gdW5pdFwiLHZlcnNpb246XCJncnVudCBkaXN0ICYmIGdpdCBhZGQgZGlzdC9cIn0scmVwb3NpdG9yeTp7dHlwZTpcImdpdFwiLHVybDpcImdpdEBnaXRodWIuY29tOmluZHV0bnkvZWxsaXB0aWNcIn0sa2V5d29yZHM6W1wiRUNcIixcIkVsbGlwdGljXCIsXCJjdXJ2ZVwiLFwiQ3J5cHRvZ3JhcGh5XCJdLGF1dGhvcjpcIkZlZG9yIEluZHV0bnkgPGZlZG9yQGluZHV0bnkuY29tPlwiLGxpY2Vuc2U6XCJNSVRcIixidWdzOnt1cmw6XCJodHRwczovL2dpdGh1Yi5jb20vaW5kdXRueS9lbGxpcHRpYy9pc3N1ZXNcIn0saG9tZXBhZ2U6XCJodHRwczovL2dpdGh1Yi5jb20vaW5kdXRueS9lbGxpcHRpY1wiLGRldkRlcGVuZGVuY2llczp7YnJmczpcIl4xLjQuM1wiLGNvdmVyYWxsczpcIl4yLjExLjNcIixncnVudDpcIl4wLjQuNVwiLFwiZ3J1bnQtYnJvd3NlcmlmeVwiOlwiXjUuMC4wXCIsXCJncnVudC1jbGlcIjpcIl4xLjIuMFwiLFwiZ3J1bnQtY29udHJpYi1jb25uZWN0XCI6XCJeMS4wLjBcIixcImdydW50LWNvbnRyaWItY29weVwiOlwiXjEuMC4wXCIsXCJncnVudC1jb250cmliLXVnbGlmeVwiOlwiXjEuMC4xXCIsXCJncnVudC1tb2NoYS1pc3RhbmJ1bFwiOlwiXjMuMC4xXCIsXCJncnVudC1zYXVjZWxhYnNcIjpcIl44LjYuMlwiLGlzdGFuYnVsOlwiXjAuNC4yXCIsanNjczpcIl4yLjkuMFwiLGpzaGludDpcIl4yLjYuMFwiLG1vY2hhOlwiXjIuMS4wXCJ9LGRlcGVuZGVuY2llczp7XCJibi5qc1wiOlwiXjQuNC4wXCIsYnJvcmFuZDpcIl4xLjAuMVwiLFwiaGFzaC5qc1wiOlwiXjEuMC4wXCIsXCJobWFjLWRyYmdcIjpcIl4xLjAuMFwiLGluaGVyaXRzOlwiXjIuMC4xXCIsXCJtaW5pbWFsaXN0aWMtYXNzZXJ0XCI6XCJeMS4wLjBcIixcIm1pbmltYWxpc3RpYy1jcnlwdG8tdXRpbHNcIjpcIl4xLjAuMFwifX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1lLGk9big1KSxhPW4oMTIpLG89bigxMDgpO3IuYXNzZXJ0PWEsci50b0FycmF5PW8udG9BcnJheSxyLnplcm8yPW8uemVybzIsci50b0hleD1vLnRvSGV4LHIuZW5jb2RlPW8uZW5jb2RlLHIuZ2V0TkFGPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MTw8ZSsxLGk9dC5jbG9uZSgpO2kuY21wbigxKT49MDspe3ZhciBhO2lmKGkuaXNPZGQoKSl7dmFyIG89aS5hbmRsbihyLTEpO2E9bz4ocj4+MSktMT8ocj4+MSktbzpvLGkuaXN1Ym4oYSl9ZWxzZSBhPTA7bi5wdXNoKGEpO2Zvcih2YXIgcz0wIT09aS5jbXBuKDApJiYwPT09aS5hbmRsbihyLTEpP2UrMToxLHU9MTt1PHM7dSsrKW4ucHVzaCgwKTtpLml1c2hybihzKX1yZXR1cm4gbn0sci5nZXRKU0Y9ZnVuY3Rpb24odCxlKXt2YXIgbj1bW10sW11dO3Q9dC5jbG9uZSgpLGU9ZS5jbG9uZSgpO2Zvcih2YXIgcj0wLGk9MDt0LmNtcG4oLXIpPjB8fGUuY21wbigtaSk+MDspe3ZhciBhLG8scyx1PXQuYW5kbG4oMykrciYzLGM9ZS5hbmRsbigzKStpJjM7Mz09PXUmJih1PS0xKSwzPT09YyYmKGM9LTEpLGE9MD09KDEmdSk/MDozIT0ocz10LmFuZGxuKDcpK3ImNykmJjUhPT1zfHwyIT09Yz91Oi11LG5bMF0ucHVzaChhKSxvPTA9PSgxJmMpPzA6MyE9KHM9ZS5hbmRsbig3KStpJjcpJiY1IT09c3x8MiE9PXU/YzotYyxuWzFdLnB1c2gobyksMipyPT09YSsxJiYocj0xLXIpLDIqaT09PW8rMSYmKGk9MS1pKSx0Lml1c2hybigxKSxlLml1c2hybigxKX1yZXR1cm4gbn0sci5jYWNoZWRQcm9wZXJ0eT1mdW5jdGlvbih0LGUsbil7dmFyIHI9XCJfXCIrZTt0LnByb3RvdHlwZVtlXT1mdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzW3JdP3RoaXNbcl06dGhpc1tyXT1uLmNhbGwodGhpcyl9fSxyLnBhcnNlQnl0ZXM9ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/ci50b0FycmF5KHQsXCJoZXhcIik6dH0sci5pbnRGcm9tTEU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpKHQsXCJoZXhcIixcImxlXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksaT1uKDgpLnV0aWxzLGE9aS5nZXROQUYsbz1pLmdldEpTRixzPWkuYXNzZXJ0O2Z1bmN0aW9uIHUodCxlKXt0aGlzLnR5cGU9dCx0aGlzLnA9bmV3IHIoZS5wLDE2KSx0aGlzLnJlZD1lLnByaW1lP3IucmVkKGUucHJpbWUpOnIubW9udCh0aGlzLnApLHRoaXMuemVybz1uZXcgcigwKS50b1JlZCh0aGlzLnJlZCksdGhpcy5vbmU9bmV3IHIoMSkudG9SZWQodGhpcy5yZWQpLHRoaXMudHdvPW5ldyByKDIpLnRvUmVkKHRoaXMucmVkKSx0aGlzLm49ZS5uJiZuZXcgcihlLm4sMTYpLHRoaXMuZz1lLmcmJnRoaXMucG9pbnRGcm9tSlNPTihlLmcsZS5nUmVkKSx0aGlzLl93bmFmVDE9bmV3IEFycmF5KDQpLHRoaXMuX3duYWZUMj1uZXcgQXJyYXkoNCksdGhpcy5fd25hZlQzPW5ldyBBcnJheSg0KSx0aGlzLl93bmFmVDQ9bmV3IEFycmF5KDQpO3ZhciBuPXRoaXMubiYmdGhpcy5wLmRpdih0aGlzLm4pOyFufHxuLmNtcG4oMTAwKT4wP3RoaXMucmVkTj1udWxsOih0aGlzLl9tYXh3ZWxsVHJpY2s9ITAsdGhpcy5yZWROPXRoaXMubi50b1JlZCh0aGlzLnJlZCkpfWZ1bmN0aW9uIGModCxlKXt0aGlzLmN1cnZlPXQsdGhpcy50eXBlPWUsdGhpcy5wcmVjb21wdXRlZD1udWxsfXQuZXhwb3J0cz11LHUucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfSx1LnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKX0sdS5wcm90b3R5cGUuX2ZpeGVkTmFmTXVsPWZ1bmN0aW9uKHQsZSl7cyh0LnByZWNvbXB1dGVkKTt2YXIgbj10Ll9nZXREb3VibGVzKCkscj1hKGUsMSksaT0oMTw8bi5zdGVwKzEpLShuLnN0ZXAlMj09MD8yOjEpO2kvPTM7Zm9yKHZhciBvPVtdLHU9MDt1PHIubGVuZ3RoO3UrPW4uc3RlcCl7dmFyIGM9MDtmb3IoZT11K24uc3RlcC0xO2U+PXU7ZS0tKWM9KGM8PDEpK3JbZV07by5wdXNoKGMpfWZvcih2YXIgbD10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCksZj10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCksaD1pO2g+MDtoLS0pe2Zvcih1PTA7dTxvLmxlbmd0aDt1KyspeyhjPW9bdV0pPT09aD9mPWYubWl4ZWRBZGQobi5wb2ludHNbdV0pOmM9PT0taCYmKGY9Zi5taXhlZEFkZChuLnBvaW50c1t1XS5uZWcoKSkpfWw9bC5hZGQoZil9cmV0dXJuIGwudG9QKCl9LHUucHJvdG90eXBlLl93bmFmTXVsPWZ1bmN0aW9uKHQsZSl7dmFyIG49NCxyPXQuX2dldE5BRlBvaW50cyhuKTtuPXIud25kO2Zvcih2YXIgaT1yLnBvaW50cyxvPWEoZSxuKSx1PXRoaXMuanBvaW50KG51bGwsbnVsbCxudWxsKSxjPW8ubGVuZ3RoLTE7Yz49MDtjLS0pe2ZvcihlPTA7Yz49MCYmMD09PW9bY107Yy0tKWUrKztpZihjPj0wJiZlKyssdT11LmRibHAoZSksYzwwKWJyZWFrO3ZhciBsPW9bY107cygwIT09bCksdT1cImFmZmluZVwiPT09dC50eXBlP2w+MD91Lm1peGVkQWRkKGlbbC0xPj4xXSk6dS5taXhlZEFkZChpWy1sLTE+PjFdLm5lZygpKTpsPjA/dS5hZGQoaVtsLTE+PjFdKTp1LmFkZChpWy1sLTE+PjFdLm5lZygpKX1yZXR1cm5cImFmZmluZVwiPT09dC50eXBlP3UudG9QKCk6dX0sdS5wcm90b3R5cGUuX3duYWZNdWxBZGQ9ZnVuY3Rpb24odCxlLG4scixpKXtmb3IodmFyIHM9dGhpcy5fd25hZlQxLHU9dGhpcy5fd25hZlQyLGM9dGhpcy5fd25hZlQzLGw9MCxmPTA7ZjxyO2YrKyl7dmFyIGg9KE49ZVtmXSkuX2dldE5BRlBvaW50cyh0KTtzW2ZdPWgud25kLHVbZl09aC5wb2ludHN9Zm9yKGY9ci0xO2Y+PTE7Zi09Mil7dmFyIHA9Zi0xLGQ9ZjtpZigxPT09c1twXSYmMT09PXNbZF0pe3ZhciBtPVtlW3BdLG51bGwsbnVsbCxlW2RdXTswPT09ZVtwXS55LmNtcChlW2RdLnkpPyhtWzFdPWVbcF0uYWRkKGVbZF0pLG1bMl09ZVtwXS50b0ooKS5taXhlZEFkZChlW2RdLm5lZygpKSk6MD09PWVbcF0ueS5jbXAoZVtkXS55LnJlZE5lZygpKT8obVsxXT1lW3BdLnRvSigpLm1peGVkQWRkKGVbZF0pLG1bMl09ZVtwXS5hZGQoZVtkXS5uZWcoKSkpOihtWzFdPWVbcF0udG9KKCkubWl4ZWRBZGQoZVtkXSksbVsyXT1lW3BdLnRvSigpLm1peGVkQWRkKGVbZF0ubmVnKCkpKTt2YXIgZz1bLTMsLTEsLTUsLTcsMCw3LDUsMSwzXSx5PW8obltwXSxuW2RdKTtsPU1hdGgubWF4KHlbMF0ubGVuZ3RoLGwpLGNbcF09bmV3IEFycmF5KGwpLGNbZF09bmV3IEFycmF5KGwpO2Zvcih2YXIgdj0wO3Y8bDt2Kyspe3ZhciBiPTB8eVswXVt2XSx3PTB8eVsxXVt2XTtjW3BdW3ZdPWdbMyooYisxKSsodysxKV0sY1tkXVt2XT0wLHVbcF09bX19ZWxzZSBjW3BdPWEobltwXSxzW3BdKSxjW2RdPWEobltkXSxzW2RdKSxsPU1hdGgubWF4KGNbcF0ubGVuZ3RoLGwpLGw9TWF0aC5tYXgoY1tkXS5sZW5ndGgsbCl9dmFyIF89dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpLHg9dGhpcy5fd25hZlQ0O2ZvcihmPWw7Zj49MDtmLS0pe2Zvcih2YXIgRT0wO2Y+PTA7KXt2YXIgUz0hMDtmb3Iodj0wO3Y8cjt2KyspeFt2XT0wfGNbdl1bZl0sMCE9PXhbdl0mJihTPSExKTtpZighUylicmVhaztFKyssZi0tfWlmKGY+PTAmJkUrKyxfPV8uZGJscChFKSxmPDApYnJlYWs7Zm9yKHY9MDt2PHI7disrKXt2YXIgTixJPXhbdl07MCE9PUkmJihJPjA/Tj11W3ZdW0ktMT4+MV06STwwJiYoTj11W3ZdWy1JLTE+PjFdLm5lZygpKSxfPVwiYWZmaW5lXCI9PT1OLnR5cGU/Xy5taXhlZEFkZChOKTpfLmFkZChOKSl9fWZvcihmPTA7ZjxyO2YrKyl1W2ZdPW51bGw7cmV0dXJuIGk/XzpfLnRvUCgpfSx1LkJhc2VQb2ludD1jLGMucHJvdG90eXBlLmVxPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfSxjLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN1cnZlLnZhbGlkYXRlKHRoaXMpfSx1LnByb3RvdHlwZS5kZWNvZGVQb2ludD1mdW5jdGlvbih0LGUpe3Q9aS50b0FycmF5KHQsZSk7dmFyIG49dGhpcy5wLmJ5dGVMZW5ndGgoKTtpZigoND09PXRbMF18fDY9PT10WzBdfHw3PT09dFswXSkmJnQubGVuZ3RoLTE9PTIqbilyZXR1cm4gNj09PXRbMF0/cyh0W3QubGVuZ3RoLTFdJTI9PTApOjc9PT10WzBdJiZzKHRbdC5sZW5ndGgtMV0lMj09MSksdGhpcy5wb2ludCh0LnNsaWNlKDEsMStuKSx0LnNsaWNlKDErbiwxKzIqbikpO2lmKCgyPT09dFswXXx8Mz09PXRbMF0pJiZ0Lmxlbmd0aC0xPT09bilyZXR1cm4gdGhpcy5wb2ludEZyb21YKHQuc2xpY2UoMSwxK24pLDM9PT10WzBdKTt0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIHBvaW50IGZvcm1hdFwiKX0sYy5wcm90b3R5cGUuZW5jb2RlQ29tcHJlc3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lbmNvZGUodCwhMCl9LGMucHJvdG90eXBlLl9lbmNvZGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jdXJ2ZS5wLmJ5dGVMZW5ndGgoKSxuPXRoaXMuZ2V0WCgpLnRvQXJyYXkoXCJiZVwiLGUpO3JldHVybiB0P1t0aGlzLmdldFkoKS5pc0V2ZW4oKT8yOjNdLmNvbmNhdChuKTpbNF0uY29uY2F0KG4sdGhpcy5nZXRZKCkudG9BcnJheShcImJlXCIsZSkpfSxjLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaS5lbmNvZGUodGhpcy5fZW5jb2RlKGUpLHQpfSxjLnByb3RvdHlwZS5wcmVjb21wdXRlPWZ1bmN0aW9uKHQpe2lmKHRoaXMucHJlY29tcHV0ZWQpcmV0dXJuIHRoaXM7dmFyIGU9e2RvdWJsZXM6bnVsbCxuYWY6bnVsbCxiZXRhOm51bGx9O3JldHVybiBlLm5hZj10aGlzLl9nZXROQUZQb2ludHMoOCksZS5kb3VibGVzPXRoaXMuX2dldERvdWJsZXMoNCx0KSxlLmJldGE9dGhpcy5fZ2V0QmV0YSgpLHRoaXMucHJlY29tcHV0ZWQ9ZSx0aGlzfSxjLnByb3RvdHlwZS5faGFzRG91Ymxlcz1mdW5jdGlvbih0KXtpZighdGhpcy5wcmVjb21wdXRlZClyZXR1cm4hMTt2YXIgZT10aGlzLnByZWNvbXB1dGVkLmRvdWJsZXM7cmV0dXJuISFlJiZlLnBvaW50cy5sZW5ndGg+PU1hdGguY2VpbCgodC5iaXRMZW5ndGgoKSsxKS9lLnN0ZXApfSxjLnByb3RvdHlwZS5fZ2V0RG91Ymxlcz1mdW5jdGlvbih0LGUpe2lmKHRoaXMucHJlY29tcHV0ZWQmJnRoaXMucHJlY29tcHV0ZWQuZG91YmxlcylyZXR1cm4gdGhpcy5wcmVjb21wdXRlZC5kb3VibGVzO2Zvcih2YXIgbj1bdGhpc10scj10aGlzLGk9MDtpPGU7aSs9dCl7Zm9yKHZhciBhPTA7YTx0O2ErKylyPXIuZGJsKCk7bi5wdXNoKHIpfXJldHVybntzdGVwOnQscG9pbnRzOm59fSxjLnByb3RvdHlwZS5fZ2V0TkFGUG9pbnRzPWZ1bmN0aW9uKHQpe2lmKHRoaXMucHJlY29tcHV0ZWQmJnRoaXMucHJlY29tcHV0ZWQubmFmKXJldHVybiB0aGlzLnByZWNvbXB1dGVkLm5hZjtmb3IodmFyIGU9W3RoaXNdLG49KDE8PHQpLTEscj0xPT09bj9udWxsOnRoaXMuZGJsKCksaT0xO2k8bjtpKyspZVtpXT1lW2ktMV0uYWRkKHIpO3JldHVybnt3bmQ6dCxwb2ludHM6ZX19LGMucHJvdG90eXBlLl9nZXRCZXRhPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGMucHJvdG90eXBlLmRibHA9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMsbj0wO248dDtuKyspZT1lLmRibCgpO3JldHVybiBlfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDUpLGk9big4KSxhPW4oNSksbz1uKDIpLHM9ci5iYXNlLHU9aS51dGlscy5hc3NlcnQ7ZnVuY3Rpb24gYyh0KXtzLmNhbGwodGhpcyxcInNob3J0XCIsdCksdGhpcy5hPW5ldyBhKHQuYSwxNikudG9SZWQodGhpcy5yZWQpLHRoaXMuYj1uZXcgYSh0LmIsMTYpLnRvUmVkKHRoaXMucmVkKSx0aGlzLnRpbnY9dGhpcy50d28ucmVkSW52bSgpLHRoaXMuemVyb0E9MD09PXRoaXMuYS5mcm9tUmVkKCkuY21wbigwKSx0aGlzLnRocmVlQT0wPT09dGhpcy5hLmZyb21SZWQoKS5zdWIodGhpcy5wKS5jbXBuKC0zKSx0aGlzLmVuZG89dGhpcy5fZ2V0RW5kb21vcnBoaXNtKHQpLHRoaXMuX2VuZG9XbmFmVDE9bmV3IEFycmF5KDQpLHRoaXMuX2VuZG9XbmFmVDI9bmV3IEFycmF5KDQpfWZ1bmN0aW9uIGwodCxlLG4scil7cy5CYXNlUG9pbnQuY2FsbCh0aGlzLHQsXCJhZmZpbmVcIiksbnVsbD09PWUmJm51bGw9PT1uPyh0aGlzLng9bnVsbCx0aGlzLnk9bnVsbCx0aGlzLmluZj0hMCk6KHRoaXMueD1uZXcgYShlLDE2KSx0aGlzLnk9bmV3IGEobiwxNiksciYmKHRoaXMueC5mb3JjZVJlZCh0aGlzLmN1cnZlLnJlZCksdGhpcy55LmZvcmNlUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy54LnJlZHx8KHRoaXMueD10aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnkucmVkfHwodGhpcy55PXRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuaW5mPSExKX1mdW5jdGlvbiBmKHQsZSxuLHIpe3MuQmFzZVBvaW50LmNhbGwodGhpcyx0LFwiamFjb2JpYW5cIiksbnVsbD09PWUmJm51bGw9PT1uJiZudWxsPT09cj8odGhpcy54PXRoaXMuY3VydmUub25lLHRoaXMueT10aGlzLmN1cnZlLm9uZSx0aGlzLno9bmV3IGEoMCkpOih0aGlzLng9bmV3IGEoZSwxNiksdGhpcy55PW5ldyBhKG4sMTYpLHRoaXMuej1uZXcgYShyLDE2KSksdGhpcy54LnJlZHx8KHRoaXMueD10aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnkucmVkfHwodGhpcy55PXRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuei5yZWR8fCh0aGlzLno9dGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy56T25lPXRoaXMuej09PXRoaXMuY3VydmUub25lfW8oYyxzKSx0LmV4cG9ydHM9YyxjLnByb3RvdHlwZS5fZ2V0RW5kb21vcnBoaXNtPWZ1bmN0aW9uKHQpe2lmKHRoaXMuemVyb0EmJnRoaXMuZyYmdGhpcy5uJiYxPT09dGhpcy5wLm1vZG4oMykpe3ZhciBlLG47aWYodC5iZXRhKWU9bmV3IGEodC5iZXRhLDE2KS50b1JlZCh0aGlzLnJlZCk7ZWxzZXt2YXIgcj10aGlzLl9nZXRFbmRvUm9vdHModGhpcy5wKTtlPShlPXJbMF0uY21wKHJbMV0pPDA/clswXTpyWzFdKS50b1JlZCh0aGlzLnJlZCl9aWYodC5sYW1iZGEpbj1uZXcgYSh0LmxhbWJkYSwxNik7ZWxzZXt2YXIgaT10aGlzLl9nZXRFbmRvUm9vdHModGhpcy5uKTswPT09dGhpcy5nLm11bChpWzBdKS54LmNtcCh0aGlzLmcueC5yZWRNdWwoZSkpP249aVswXToobj1pWzFdLHUoMD09PXRoaXMuZy5tdWwobikueC5jbXAodGhpcy5nLngucmVkTXVsKGUpKSkpfXJldHVybntiZXRhOmUsbGFtYmRhOm4sYmFzaXM6dC5iYXNpcz90LmJhc2lzLm1hcChmdW5jdGlvbih0KXtyZXR1cm57YTpuZXcgYSh0LmEsMTYpLGI6bmV3IGEodC5iLDE2KX19KTp0aGlzLl9nZXRFbmRvQmFzaXMobil9fX0sYy5wcm90b3R5cGUuX2dldEVuZG9Sb290cz1mdW5jdGlvbih0KXt2YXIgZT10PT09dGhpcy5wP3RoaXMucmVkOmEubW9udCh0KSxuPW5ldyBhKDIpLnRvUmVkKGUpLnJlZEludm0oKSxyPW4ucmVkTmVnKCksaT1uZXcgYSgzKS50b1JlZChlKS5yZWROZWcoKS5yZWRTcXJ0KCkucmVkTXVsKG4pO3JldHVybltyLnJlZEFkZChpKS5mcm9tUmVkKCksci5yZWRTdWIoaSkuZnJvbVJlZCgpXX0sYy5wcm90b3R5cGUuX2dldEVuZG9CYXNpcz1mdW5jdGlvbih0KXtmb3IodmFyIGUsbixyLGksbyxzLHUsYyxsLGY9dGhpcy5uLnVzaHJuKE1hdGguZmxvb3IodGhpcy5uLmJpdExlbmd0aCgpLzIpKSxoPXQscD10aGlzLm4uY2xvbmUoKSxkPW5ldyBhKDEpLG09bmV3IGEoMCksZz1uZXcgYSgwKSx5PW5ldyBhKDEpLHY9MDswIT09aC5jbXBuKDApOyl7dmFyIGI9cC5kaXYoaCk7Yz1wLnN1YihiLm11bChoKSksbD1nLnN1YihiLm11bChkKSk7dmFyIHc9eS5zdWIoYi5tdWwobSkpO2lmKCFyJiZjLmNtcChmKTwwKWU9dS5uZWcoKSxuPWQscj1jLm5lZygpLGk9bDtlbHNlIGlmKHImJjI9PSsrdilicmVhazt1PWMscD1oLGg9YyxnPWQsZD1sLHk9bSxtPXd9bz1jLm5lZygpLHM9bDt2YXIgXz1yLnNxcigpLmFkZChpLnNxcigpKTtyZXR1cm4gby5zcXIoKS5hZGQocy5zcXIoKSkuY21wKF8pPj0wJiYobz1lLHM9biksci5uZWdhdGl2ZSYmKHI9ci5uZWcoKSxpPWkubmVnKCkpLG8ubmVnYXRpdmUmJihvPW8ubmVnKCkscz1zLm5lZygpKSxbe2E6cixiOml9LHthOm8sYjpzfV19LGMucHJvdG90eXBlLl9lbmRvU3BsaXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbmRvLmJhc2lzLG49ZVswXSxyPWVbMV0saT1yLmIubXVsKHQpLmRpdlJvdW5kKHRoaXMubiksYT1uLmIubmVnKCkubXVsKHQpLmRpdlJvdW5kKHRoaXMubiksbz1pLm11bChuLmEpLHM9YS5tdWwoci5hKSx1PWkubXVsKG4uYiksYz1hLm11bChyLmIpO3JldHVybntrMTp0LnN1YihvKS5zdWIocyksazI6dS5hZGQoYykubmVnKCl9fSxjLnByb3RvdHlwZS5wb2ludEZyb21YPWZ1bmN0aW9uKHQsZSl7KHQ9bmV3IGEodCwxNikpLnJlZHx8KHQ9dC50b1JlZCh0aGlzLnJlZCkpO3ZhciBuPXQucmVkU3FyKCkucmVkTXVsKHQpLnJlZElBZGQodC5yZWRNdWwodGhpcy5hKSkucmVkSUFkZCh0aGlzLmIpLHI9bi5yZWRTcXJ0KCk7aWYoMCE9PXIucmVkU3FyKCkucmVkU3ViKG4pLmNtcCh0aGlzLnplcm8pKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgcG9pbnRcIik7dmFyIGk9ci5mcm9tUmVkKCkuaXNPZGQoKTtyZXR1cm4oZSYmIWl8fCFlJiZpKSYmKHI9ci5yZWROZWcoKSksdGhpcy5wb2ludCh0LHIpfSxjLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbih0KXtpZih0LmluZilyZXR1cm4hMDt2YXIgZT10Lngsbj10Lnkscj10aGlzLmEucmVkTXVsKGUpLGk9ZS5yZWRTcXIoKS5yZWRNdWwoZSkucmVkSUFkZChyKS5yZWRJQWRkKHRoaXMuYik7cmV0dXJuIDA9PT1uLnJlZFNxcigpLnJlZElTdWIoaSkuY21wbigwKX0sYy5wcm90b3R5cGUuX2VuZG9XbmFmTXVsQWRkPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9dGhpcy5fZW5kb1duYWZUMSxpPXRoaXMuX2VuZG9XbmFmVDIsYT0wO2E8dC5sZW5ndGg7YSsrKXt2YXIgbz10aGlzLl9lbmRvU3BsaXQoZVthXSkscz10W2FdLHU9cy5fZ2V0QmV0YSgpO28uazEubmVnYXRpdmUmJihvLmsxLmluZWcoKSxzPXMubmVnKCEwKSksby5rMi5uZWdhdGl2ZSYmKG8uazIuaW5lZygpLHU9dS5uZWcoITApKSxyWzIqYV09cyxyWzIqYSsxXT11LGlbMiphXT1vLmsxLGlbMiphKzFdPW8uazJ9Zm9yKHZhciBjPXRoaXMuX3duYWZNdWxBZGQoMSxyLGksMiphLG4pLGw9MDtsPDIqYTtsKyspcltsXT1udWxsLGlbbF09bnVsbDtyZXR1cm4gY30sbyhsLHMuQmFzZVBvaW50KSxjLnByb3RvdHlwZS5wb2ludD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBsKHRoaXMsdCxlLG4pfSxjLnByb3RvdHlwZS5wb2ludEZyb21KU09OPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGwuZnJvbUpTT04odGhpcyx0LGUpfSxsLnByb3RvdHlwZS5fZ2V0QmV0YT1mdW5jdGlvbigpe2lmKHRoaXMuY3VydmUuZW5kbyl7dmFyIHQ9dGhpcy5wcmVjb21wdXRlZDtpZih0JiZ0LmJldGEpcmV0dXJuIHQuYmV0YTt2YXIgZT10aGlzLmN1cnZlLnBvaW50KHRoaXMueC5yZWRNdWwodGhpcy5jdXJ2ZS5lbmRvLmJldGEpLHRoaXMueSk7aWYodCl7dmFyIG49dGhpcy5jdXJ2ZSxyPWZ1bmN0aW9uKHQpe3JldHVybiBuLnBvaW50KHQueC5yZWRNdWwobi5lbmRvLmJldGEpLHQueSl9O3QuYmV0YT1lLGUucHJlY29tcHV0ZWQ9e2JldGE6bnVsbCxuYWY6dC5uYWYmJnt3bmQ6dC5uYWYud25kLHBvaW50czp0Lm5hZi5wb2ludHMubWFwKHIpfSxkb3VibGVzOnQuZG91YmxlcyYme3N0ZXA6dC5kb3VibGVzLnN0ZXAscG9pbnRzOnQuZG91Ymxlcy5wb2ludHMubWFwKHIpfX19cmV0dXJuIGV9fSxsLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcmVjb21wdXRlZD9bdGhpcy54LHRoaXMueSx0aGlzLnByZWNvbXB1dGVkJiZ7ZG91Ymxlczp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMmJntzdGVwOnRoaXMucHJlY29tcHV0ZWQuZG91Ymxlcy5zdGVwLHBvaW50czp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMucG9pbnRzLnNsaWNlKDEpfSxuYWY6dGhpcy5wcmVjb21wdXRlZC5uYWYmJnt3bmQ6dGhpcy5wcmVjb21wdXRlZC5uYWYud25kLHBvaW50czp0aGlzLnByZWNvbXB1dGVkLm5hZi5wb2ludHMuc2xpY2UoMSl9fV06W3RoaXMueCx0aGlzLnldfSxsLmZyb21KU09OPWZ1bmN0aW9uKHQsZSxuKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9SlNPTi5wYXJzZShlKSk7dmFyIHI9dC5wb2ludChlWzBdLGVbMV0sbik7aWYoIWVbMl0pcmV0dXJuIHI7ZnVuY3Rpb24gaShlKXtyZXR1cm4gdC5wb2ludChlWzBdLGVbMV0sbil9dmFyIGE9ZVsyXTtyZXR1cm4gci5wcmVjb21wdXRlZD17YmV0YTpudWxsLGRvdWJsZXM6YS5kb3VibGVzJiZ7c3RlcDphLmRvdWJsZXMuc3RlcCxwb2ludHM6W3JdLmNvbmNhdChhLmRvdWJsZXMucG9pbnRzLm1hcChpKSl9LG5hZjphLm5hZiYme3duZDphLm5hZi53bmQscG9pbnRzOltyXS5jb25jYXQoYS5uYWYucG9pbnRzLm1hcChpKSl9fSxyfSxsLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP1wiPEVDIFBvaW50IEluZmluaXR5PlwiOlwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIj5cIn0sbC5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmluZn0sbC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaW5mKXJldHVybiB0O2lmKHQuaW5mKXJldHVybiB0aGlzO2lmKHRoaXMuZXEodCkpcmV0dXJuIHRoaXMuZGJsKCk7aWYodGhpcy5uZWcoKS5lcSh0KSlyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO2lmKDA9PT10aGlzLnguY21wKHQueCkpcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobnVsbCxudWxsKTt2YXIgZT10aGlzLnkucmVkU3ViKHQueSk7MCE9PWUuY21wbigwKSYmKGU9ZS5yZWRNdWwodGhpcy54LnJlZFN1Yih0LngpLnJlZEludm0oKSkpO3ZhciBuPWUucmVkU3FyKCkucmVkSVN1Yih0aGlzLngpLnJlZElTdWIodC54KSxyPWUucmVkTXVsKHRoaXMueC5yZWRTdWIobikpLnJlZElTdWIodGhpcy55KTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChuLHIpfSxsLnByb3RvdHlwZS5kYmw9ZnVuY3Rpb24oKXtpZih0aGlzLmluZilyZXR1cm4gdGhpczt2YXIgdD10aGlzLnkucmVkQWRkKHRoaXMueSk7aWYoMD09PXQuY21wbigwKSlyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciBlPXRoaXMuY3VydmUuYSxuPXRoaXMueC5yZWRTcXIoKSxyPXQucmVkSW52bSgpLGk9bi5yZWRBZGQobikucmVkSUFkZChuKS5yZWRJQWRkKGUpLnJlZE11bChyKSxhPWkucmVkU3FyKCkucmVkSVN1Yih0aGlzLngucmVkQWRkKHRoaXMueCkpLG89aS5yZWRNdWwodGhpcy54LnJlZFN1YihhKSkucmVkSVN1Yih0aGlzLnkpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGEsbyl9LGwucHJvdG90eXBlLmdldFg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54LmZyb21SZWQoKX0sbC5wcm90b3R5cGUuZ2V0WT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnkuZnJvbVJlZCgpfSxsLnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bmV3IGEodCwxNiksdGhpcy5faGFzRG91Ymxlcyh0KT90aGlzLmN1cnZlLl9maXhlZE5hZk11bCh0aGlzLHQpOnRoaXMuY3VydmUuZW5kbz90aGlzLmN1cnZlLl9lbmRvV25hZk11bEFkZChbdGhpc10sW3RdKTp0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsdCl9LGwucHJvdG90eXBlLm11bEFkZD1mdW5jdGlvbih0LGUsbil7dmFyIHI9W3RoaXMsZV0saT1bdCxuXTtyZXR1cm4gdGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKHIsaSk6dGhpcy5jdXJ2ZS5fd25hZk11bEFkZCgxLHIsaSwyKX0sbC5wcm90b3R5cGUuam11bEFkZD1mdW5jdGlvbih0LGUsbil7dmFyIHI9W3RoaXMsZV0saT1bdCxuXTtyZXR1cm4gdGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKHIsaSwhMCk6dGhpcy5jdXJ2ZS5fd25hZk11bEFkZCgxLHIsaSwyLCEwKX0sbC5wcm90b3R5cGUuZXE9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXM9PT10fHx0aGlzLmluZj09PXQuaW5mJiYodGhpcy5pbmZ8fDA9PT10aGlzLnguY21wKHQueCkmJjA9PT10aGlzLnkuY21wKHQueSkpfSxsLnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24odCl7aWYodGhpcy5pbmYpcmV0dXJuIHRoaXM7dmFyIGU9dGhpcy5jdXJ2ZS5wb2ludCh0aGlzLngsdGhpcy55LnJlZE5lZygpKTtpZih0JiZ0aGlzLnByZWNvbXB1dGVkKXt2YXIgbj10aGlzLnByZWNvbXB1dGVkLHI9ZnVuY3Rpb24odCl7cmV0dXJuIHQubmVnKCl9O2UucHJlY29tcHV0ZWQ9e25hZjpuLm5hZiYme3duZDpuLm5hZi53bmQscG9pbnRzOm4ubmFmLnBvaW50cy5tYXAocil9LGRvdWJsZXM6bi5kb3VibGVzJiZ7c3RlcDpuLmRvdWJsZXMuc3RlcCxwb2ludHM6bi5kb3VibGVzLnBvaW50cy5tYXAocil9fX1yZXR1cm4gZX0sbC5wcm90b3R5cGUudG9KPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5mP3RoaXMuY3VydmUuanBvaW50KG51bGwsbnVsbCxudWxsKTp0aGlzLmN1cnZlLmpwb2ludCh0aGlzLngsdGhpcy55LHRoaXMuY3VydmUub25lKX0sbyhmLHMuQmFzZVBvaW50KSxjLnByb3RvdHlwZS5qcG9pbnQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuZXcgZih0aGlzLHQsZSxuKX0sZi5wcm90b3R5cGUudG9QPWZ1bmN0aW9uKCl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobnVsbCxudWxsKTt2YXIgdD10aGlzLnoucmVkSW52bSgpLGU9dC5yZWRTcXIoKSxuPXRoaXMueC5yZWRNdWwoZSkscj10aGlzLnkucmVkTXVsKGUpLnJlZE11bCh0KTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChuLHIpfSxmLnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueS5yZWROZWcoKSx0aGlzLnopfSxmLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuIHQ7aWYodC5pc0luZmluaXR5KCkpcmV0dXJuIHRoaXM7dmFyIGU9dC56LnJlZFNxcigpLG49dGhpcy56LnJlZFNxcigpLHI9dGhpcy54LnJlZE11bChlKSxpPXQueC5yZWRNdWwobiksYT10aGlzLnkucmVkTXVsKGUucmVkTXVsKHQueikpLG89dC55LnJlZE11bChuLnJlZE11bCh0aGlzLnopKSxzPXIucmVkU3ViKGkpLHU9YS5yZWRTdWIobyk7aWYoMD09PXMuY21wbigwKSlyZXR1cm4gMCE9PXUuY21wbigwKT90aGlzLmN1cnZlLmpwb2ludChudWxsLG51bGwsbnVsbCk6dGhpcy5kYmwoKTt2YXIgYz1zLnJlZFNxcigpLGw9Yy5yZWRNdWwocyksZj1yLnJlZE11bChjKSxoPXUucmVkU3FyKCkucmVkSUFkZChsKS5yZWRJU3ViKGYpLnJlZElTdWIoZikscD11LnJlZE11bChmLnJlZElTdWIoaCkpLnJlZElTdWIoYS5yZWRNdWwobCkpLGQ9dGhpcy56LnJlZE11bCh0LnopLnJlZE11bChzKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoaCxwLGQpfSxmLnByb3RvdHlwZS5taXhlZEFkZD1mdW5jdGlvbih0KXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdC50b0ooKTtpZih0LmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpczt2YXIgZT10aGlzLnoucmVkU3FyKCksbj10aGlzLngscj10LngucmVkTXVsKGUpLGk9dGhpcy55LGE9dC55LnJlZE11bChlKS5yZWRNdWwodGhpcy56KSxvPW4ucmVkU3ViKHIpLHM9aS5yZWRTdWIoYSk7aWYoMD09PW8uY21wbigwKSlyZXR1cm4gMCE9PXMuY21wbigwKT90aGlzLmN1cnZlLmpwb2ludChudWxsLG51bGwsbnVsbCk6dGhpcy5kYmwoKTt2YXIgdT1vLnJlZFNxcigpLGM9dS5yZWRNdWwobyksbD1uLnJlZE11bCh1KSxmPXMucmVkU3FyKCkucmVkSUFkZChjKS5yZWRJU3ViKGwpLnJlZElTdWIobCksaD1zLnJlZE11bChsLnJlZElTdWIoZikpLnJlZElTdWIoaS5yZWRNdWwoYykpLHA9dGhpcy56LnJlZE11bChvKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoZixoLHApfSxmLnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uKHQpe2lmKDA9PT10KXJldHVybiB0aGlzO2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO2lmKCF0KXJldHVybiB0aGlzLmRibCgpO2lmKHRoaXMuY3VydmUuemVyb0F8fHRoaXMuY3VydmUudGhyZWVBKXtmb3IodmFyIGU9dGhpcyxuPTA7bjx0O24rKyllPWUuZGJsKCk7cmV0dXJuIGV9dmFyIHI9dGhpcy5jdXJ2ZS5hLGk9dGhpcy5jdXJ2ZS50aW52LGE9dGhpcy54LG89dGhpcy55LHM9dGhpcy56LHU9cy5yZWRTcXIoKS5yZWRTcXIoKSxjPW8ucmVkQWRkKG8pO2ZvcihuPTA7bjx0O24rKyl7dmFyIGw9YS5yZWRTcXIoKSxmPWMucmVkU3FyKCksaD1mLnJlZFNxcigpLHA9bC5yZWRBZGQobCkucmVkSUFkZChsKS5yZWRJQWRkKHIucmVkTXVsKHUpKSxkPWEucmVkTXVsKGYpLG09cC5yZWRTcXIoKS5yZWRJU3ViKGQucmVkQWRkKGQpKSxnPWQucmVkSVN1YihtKSx5PXAucmVkTXVsKGcpO3k9eS5yZWRJQWRkKHkpLnJlZElTdWIoaCk7dmFyIHY9Yy5yZWRNdWwocyk7bisxPHQmJih1PXUucmVkTXVsKGgpKSxhPW0scz12LGM9eX1yZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoYSxjLnJlZE11bChpKSxzKX0sZi5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP3RoaXM6dGhpcy5jdXJ2ZS56ZXJvQT90aGlzLl96ZXJvRGJsKCk6dGhpcy5jdXJ2ZS50aHJlZUE/dGhpcy5fdGhyZWVEYmwoKTp0aGlzLl9kYmwoKX0sZi5wcm90b3R5cGUuX3plcm9EYmw9ZnVuY3Rpb24oKXt2YXIgdCxlLG47aWYodGhpcy56T25lKXt2YXIgcj10aGlzLngucmVkU3FyKCksaT10aGlzLnkucmVkU3FyKCksYT1pLnJlZFNxcigpLG89dGhpcy54LnJlZEFkZChpKS5yZWRTcXIoKS5yZWRJU3ViKHIpLnJlZElTdWIoYSk7bz1vLnJlZElBZGQobyk7dmFyIHM9ci5yZWRBZGQocikucmVkSUFkZChyKSx1PXMucmVkU3FyKCkucmVkSVN1YihvKS5yZWRJU3ViKG8pLGM9YS5yZWRJQWRkKGEpO2M9KGM9Yy5yZWRJQWRkKGMpKS5yZWRJQWRkKGMpLHQ9dSxlPXMucmVkTXVsKG8ucmVkSVN1Yih1KSkucmVkSVN1YihjKSxuPXRoaXMueS5yZWRBZGQodGhpcy55KX1lbHNle3ZhciBsPXRoaXMueC5yZWRTcXIoKSxmPXRoaXMueS5yZWRTcXIoKSxoPWYucmVkU3FyKCkscD10aGlzLngucmVkQWRkKGYpLnJlZFNxcigpLnJlZElTdWIobCkucmVkSVN1YihoKTtwPXAucmVkSUFkZChwKTt2YXIgZD1sLnJlZEFkZChsKS5yZWRJQWRkKGwpLG09ZC5yZWRTcXIoKSxnPWgucmVkSUFkZChoKTtnPShnPWcucmVkSUFkZChnKSkucmVkSUFkZChnKSx0PW0ucmVkSVN1YihwKS5yZWRJU3ViKHApLGU9ZC5yZWRNdWwocC5yZWRJU3ViKHQpKS5yZWRJU3ViKGcpLG49KG49dGhpcy55LnJlZE11bCh0aGlzLnopKS5yZWRJQWRkKG4pfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludCh0LGUsbil9LGYucHJvdG90eXBlLl90aHJlZURibD1mdW5jdGlvbigpe3ZhciB0LGUsbjtpZih0aGlzLnpPbmUpe3ZhciByPXRoaXMueC5yZWRTcXIoKSxpPXRoaXMueS5yZWRTcXIoKSxhPWkucmVkU3FyKCksbz10aGlzLngucmVkQWRkKGkpLnJlZFNxcigpLnJlZElTdWIocikucmVkSVN1YihhKTtvPW8ucmVkSUFkZChvKTt2YXIgcz1yLnJlZEFkZChyKS5yZWRJQWRkKHIpLnJlZElBZGQodGhpcy5jdXJ2ZS5hKSx1PXMucmVkU3FyKCkucmVkSVN1YihvKS5yZWRJU3ViKG8pO3Q9dTt2YXIgYz1hLnJlZElBZGQoYSk7Yz0oYz1jLnJlZElBZGQoYykpLnJlZElBZGQoYyksZT1zLnJlZE11bChvLnJlZElTdWIodSkpLnJlZElTdWIoYyksbj10aGlzLnkucmVkQWRkKHRoaXMueSl9ZWxzZXt2YXIgbD10aGlzLnoucmVkU3FyKCksZj10aGlzLnkucmVkU3FyKCksaD10aGlzLngucmVkTXVsKGYpLHA9dGhpcy54LnJlZFN1YihsKS5yZWRNdWwodGhpcy54LnJlZEFkZChsKSk7cD1wLnJlZEFkZChwKS5yZWRJQWRkKHApO3ZhciBkPWgucmVkSUFkZChoKSxtPShkPWQucmVkSUFkZChkKSkucmVkQWRkKGQpO3Q9cC5yZWRTcXIoKS5yZWRJU3ViKG0pLG49dGhpcy55LnJlZEFkZCh0aGlzLnopLnJlZFNxcigpLnJlZElTdWIoZikucmVkSVN1YihsKTt2YXIgZz1mLnJlZFNxcigpO2c9KGc9KGc9Zy5yZWRJQWRkKGcpKS5yZWRJQWRkKGcpKS5yZWRJQWRkKGcpLGU9cC5yZWRNdWwoZC5yZWRJU3ViKHQpKS5yZWRJU3ViKGcpfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludCh0LGUsbil9LGYucHJvdG90eXBlLl9kYmw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmN1cnZlLmEsZT10aGlzLngsbj10aGlzLnkscj10aGlzLnosaT1yLnJlZFNxcigpLnJlZFNxcigpLGE9ZS5yZWRTcXIoKSxvPW4ucmVkU3FyKCkscz1hLnJlZEFkZChhKS5yZWRJQWRkKGEpLnJlZElBZGQodC5yZWRNdWwoaSkpLHU9ZS5yZWRBZGQoZSksYz0odT11LnJlZElBZGQodSkpLnJlZE11bChvKSxsPXMucmVkU3FyKCkucmVkSVN1YihjLnJlZEFkZChjKSksZj1jLnJlZElTdWIobCksaD1vLnJlZFNxcigpO2g9KGg9KGg9aC5yZWRJQWRkKGgpKS5yZWRJQWRkKGgpKS5yZWRJQWRkKGgpO3ZhciBwPXMucmVkTXVsKGYpLnJlZElTdWIoaCksZD1uLnJlZEFkZChuKS5yZWRNdWwocik7cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KGwscCxkKX0sZi5wcm90b3R5cGUudHJwbD1mdW5jdGlvbigpe2lmKCF0aGlzLmN1cnZlLnplcm9BKXJldHVybiB0aGlzLmRibCgpLmFkZCh0aGlzKTt2YXIgdD10aGlzLngucmVkU3FyKCksZT10aGlzLnkucmVkU3FyKCksbj10aGlzLnoucmVkU3FyKCkscj1lLnJlZFNxcigpLGk9dC5yZWRBZGQodCkucmVkSUFkZCh0KSxhPWkucmVkU3FyKCksbz10aGlzLngucmVkQWRkKGUpLnJlZFNxcigpLnJlZElTdWIodCkucmVkSVN1YihyKSxzPShvPShvPShvPW8ucmVkSUFkZChvKSkucmVkQWRkKG8pLnJlZElBZGQobykpLnJlZElTdWIoYSkpLnJlZFNxcigpLHU9ci5yZWRJQWRkKHIpO3U9KHU9KHU9dS5yZWRJQWRkKHUpKS5yZWRJQWRkKHUpKS5yZWRJQWRkKHUpO3ZhciBjPWkucmVkSUFkZChvKS5yZWRTcXIoKS5yZWRJU3ViKGEpLnJlZElTdWIocykucmVkSVN1Yih1KSxsPWUucmVkTXVsKGMpO2w9KGw9bC5yZWRJQWRkKGwpKS5yZWRJQWRkKGwpO3ZhciBmPXRoaXMueC5yZWRNdWwocykucmVkSVN1YihsKTtmPShmPWYucmVkSUFkZChmKSkucmVkSUFkZChmKTt2YXIgaD10aGlzLnkucmVkTXVsKGMucmVkTXVsKHUucmVkSVN1YihjKSkucmVkSVN1YihvLnJlZE11bChzKSkpO2g9KGg9KGg9aC5yZWRJQWRkKGgpKS5yZWRJQWRkKGgpKS5yZWRJQWRkKGgpO3ZhciBwPXRoaXMuei5yZWRBZGQobykucmVkU3FyKCkucmVkSVN1YihuKS5yZWRJU3ViKHMpO3JldHVybiB0aGlzLmN1cnZlLmpwb2ludChmLGgscCl9LGYucHJvdG90eXBlLm11bD1mdW5jdGlvbih0LGUpe3JldHVybiB0PW5ldyBhKHQsZSksdGhpcy5jdXJ2ZS5fd25hZk11bCh0aGlzLHQpfSxmLnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtpZihcImFmZmluZVwiPT09dC50eXBlKXJldHVybiB0aGlzLmVxKHQudG9KKCkpO2lmKHRoaXM9PT10KXJldHVybiEwO3ZhciBlPXRoaXMuei5yZWRTcXIoKSxuPXQuei5yZWRTcXIoKTtpZigwIT09dGhpcy54LnJlZE11bChuKS5yZWRJU3ViKHQueC5yZWRNdWwoZSkpLmNtcG4oMCkpcmV0dXJuITE7dmFyIHI9ZS5yZWRNdWwodGhpcy56KSxpPW4ucmVkTXVsKHQueik7cmV0dXJuIDA9PT10aGlzLnkucmVkTXVsKGkpLnJlZElTdWIodC55LnJlZE11bChyKSkuY21wbigwKX0sZi5wcm90b3R5cGUuZXFYVG9QPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuei5yZWRTcXIoKSxuPXQudG9SZWQodGhpcy5jdXJ2ZS5yZWQpLnJlZE11bChlKTtpZigwPT09dGhpcy54LmNtcChuKSlyZXR1cm4hMDtmb3IodmFyIHI9dC5jbG9uZSgpLGk9dGhpcy5jdXJ2ZS5yZWROLnJlZE11bChlKTs7KXtpZihyLmlhZGQodGhpcy5jdXJ2ZS5uKSxyLmNtcCh0aGlzLmN1cnZlLnApPj0wKXJldHVybiExO2lmKG4ucmVkSUFkZChpKSwwPT09dGhpcy54LmNtcChuKSlyZXR1cm4hMH19LGYucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc0luZmluaXR5KCk/XCI8RUMgSlBvaW50IEluZmluaXR5PlwiOlwiPEVDIEpQb2ludCB4OiBcIit0aGlzLngudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LnRvU3RyaW5nKDE2LDIpK1wiIHo6IFwiK3RoaXMuei50b1N0cmluZygxNiwyKStcIj5cIn0sZi5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy56LmNtcG4oMCl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big0NSksaT1uKDUpLGE9bigyKSxvPXIuYmFzZSxzPW4oOCkudXRpbHM7ZnVuY3Rpb24gdSh0KXtvLmNhbGwodGhpcyxcIm1vbnRcIix0KSx0aGlzLmE9bmV3IGkodC5hLDE2KS50b1JlZCh0aGlzLnJlZCksdGhpcy5iPW5ldyBpKHQuYiwxNikudG9SZWQodGhpcy5yZWQpLHRoaXMuaTQ9bmV3IGkoNCkudG9SZWQodGhpcy5yZWQpLnJlZEludm0oKSx0aGlzLnR3bz1uZXcgaSgyKS50b1JlZCh0aGlzLnJlZCksdGhpcy5hMjQ9dGhpcy5pNC5yZWRNdWwodGhpcy5hLnJlZEFkZCh0aGlzLnR3bykpfWZ1bmN0aW9uIGModCxlLG4pe28uQmFzZVBvaW50LmNhbGwodGhpcyx0LFwicHJvamVjdGl2ZVwiKSxudWxsPT09ZSYmbnVsbD09PW4/KHRoaXMueD10aGlzLmN1cnZlLm9uZSx0aGlzLno9dGhpcy5jdXJ2ZS56ZXJvKToodGhpcy54PW5ldyBpKGUsMTYpLHRoaXMuej1uZXcgaShuLDE2KSx0aGlzLngucmVkfHwodGhpcy54PXRoaXMueC50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuei5yZWR8fCh0aGlzLno9dGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKSkpfWEodSxvKSx0LmV4cG9ydHM9dSx1LnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbih0KXt2YXIgZT10Lm5vcm1hbGl6ZSgpLngsbj1lLnJlZFNxcigpLHI9bi5yZWRNdWwoZSkucmVkQWRkKG4ucmVkTXVsKHRoaXMuYSkpLnJlZEFkZChlKTtyZXR1cm4gMD09PXIucmVkU3FydCgpLnJlZFNxcigpLmNtcChyKX0sYShjLG8uQmFzZVBvaW50KSx1LnByb3RvdHlwZS5kZWNvZGVQb2ludD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnBvaW50KHMudG9BcnJheSh0LGUpLDEpfSx1LnByb3RvdHlwZS5wb2ludD1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgYyh0aGlzLHQsZSl9LHUucHJvdG90eXBlLnBvaW50RnJvbUpTT049ZnVuY3Rpb24odCl7cmV0dXJuIGMuZnJvbUpTT04odGhpcyx0KX0sYy5wcm90b3R5cGUucHJlY29tcHV0ZT1mdW5jdGlvbigpe30sYy5wcm90b3R5cGUuX2VuY29kZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFgoKS50b0FycmF5KFwiYmVcIix0aGlzLmN1cnZlLnAuYnl0ZUxlbmd0aCgpKX0sYy5mcm9tSlNPTj1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgYyh0LGVbMF0sZVsxXXx8dC5vbmUpfSxjLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP1wiPEVDIFBvaW50IEluZmluaXR5PlwiOlwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgejogXCIrdGhpcy56LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIj5cIn0sYy5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy56LmNtcG4oMCl9LGMucHJvdG90eXBlLmRibD1mdW5jdGlvbigpe3ZhciB0PXRoaXMueC5yZWRBZGQodGhpcy56KS5yZWRTcXIoKSxlPXRoaXMueC5yZWRTdWIodGhpcy56KS5yZWRTcXIoKSxuPXQucmVkU3ViKGUpLHI9dC5yZWRNdWwoZSksaT1uLnJlZE11bChlLnJlZEFkZCh0aGlzLmN1cnZlLmEyNC5yZWRNdWwobikpKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChyLGkpfSxjLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3Qgc3VwcG9ydGVkIG9uIE1vbnRnb21lcnkgY3VydmVcIil9LGMucHJvdG90eXBlLmRpZmZBZGQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLngucmVkQWRkKHRoaXMueikscj10aGlzLngucmVkU3ViKHRoaXMueiksaT10LngucmVkQWRkKHQueiksYT10LngucmVkU3ViKHQueikucmVkTXVsKG4pLG89aS5yZWRNdWwocikscz1lLnoucmVkTXVsKGEucmVkQWRkKG8pLnJlZFNxcigpKSx1PWUueC5yZWRNdWwoYS5yZWRJU3ViKG8pLnJlZFNxcigpKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChzLHUpfSxjLnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQuY2xvbmUoKSxuPXRoaXMscj10aGlzLmN1cnZlLnBvaW50KG51bGwsbnVsbCksaT1bXTswIT09ZS5jbXBuKDApO2UuaXVzaHJuKDEpKWkucHVzaChlLmFuZGxuKDEpKTtmb3IodmFyIGE9aS5sZW5ndGgtMTthPj0wO2EtLSkwPT09aVthXT8obj1uLmRpZmZBZGQocix0aGlzKSxyPXIuZGJsKCkpOihyPW4uZGlmZkFkZChyLHRoaXMpLG49bi5kYmwoKSk7cmV0dXJuIHJ9LGMucHJvdG90eXBlLm11bEFkZD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWQgb24gTW9udGdvbWVyeSBjdXJ2ZVwiKX0sYy5wcm90b3R5cGUuanVtbEFkZD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWQgb24gTW9udGdvbWVyeSBjdXJ2ZVwiKX0sYy5wcm90b3R5cGUuZXE9ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10aGlzLmdldFgoKS5jbXAodC5nZXRYKCkpfSxjLnByb3RvdHlwZS5ub3JtYWxpemU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54PXRoaXMueC5yZWRNdWwodGhpcy56LnJlZEludm0oKSksdGhpcy56PXRoaXMuY3VydmUub25lLHRoaXN9LGMucHJvdG90eXBlLmdldFg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub3JtYWxpemUoKSx0aGlzLnguZnJvbVJlZCgpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNDUpLGk9big4KSxhPW4oNSksbz1uKDIpLHM9ci5iYXNlLHU9aS51dGlscy5hc3NlcnQ7ZnVuY3Rpb24gYyh0KXt0aGlzLnR3aXN0ZWQ9MSE9KDB8dC5hKSx0aGlzLm1PbmVBPXRoaXMudHdpc3RlZCYmLTE9PSgwfHQuYSksdGhpcy5leHRlbmRlZD10aGlzLm1PbmVBLHMuY2FsbCh0aGlzLFwiZWR3YXJkc1wiLHQpLHRoaXMuYT1uZXcgYSh0LmEsMTYpLnVtb2QodGhpcy5yZWQubSksdGhpcy5hPXRoaXMuYS50b1JlZCh0aGlzLnJlZCksdGhpcy5jPW5ldyBhKHQuYywxNikudG9SZWQodGhpcy5yZWQpLHRoaXMuYzI9dGhpcy5jLnJlZFNxcigpLHRoaXMuZD1uZXcgYSh0LmQsMTYpLnRvUmVkKHRoaXMucmVkKSx0aGlzLmRkPXRoaXMuZC5yZWRBZGQodGhpcy5kKSx1KCF0aGlzLnR3aXN0ZWR8fDA9PT10aGlzLmMuZnJvbVJlZCgpLmNtcG4oMSkpLHRoaXMub25lQz0xPT0oMHx0LmMpfWZ1bmN0aW9uIGwodCxlLG4scixpKXtzLkJhc2VQb2ludC5jYWxsKHRoaXMsdCxcInByb2plY3RpdmVcIiksbnVsbD09PWUmJm51bGw9PT1uJiZudWxsPT09cj8odGhpcy54PXRoaXMuY3VydmUuemVybyx0aGlzLnk9dGhpcy5jdXJ2ZS5vbmUsdGhpcy56PXRoaXMuY3VydmUub25lLHRoaXMudD10aGlzLmN1cnZlLnplcm8sdGhpcy56T25lPSEwKToodGhpcy54PW5ldyBhKGUsMTYpLHRoaXMueT1uZXcgYShuLDE2KSx0aGlzLno9cj9uZXcgYShyLDE2KTp0aGlzLmN1cnZlLm9uZSx0aGlzLnQ9aSYmbmV3IGEoaSwxNiksdGhpcy54LnJlZHx8KHRoaXMueD10aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnkucmVkfHwodGhpcy55PXRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuei5yZWR8fCh0aGlzLno9dGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy50JiYhdGhpcy50LnJlZCYmKHRoaXMudD10aGlzLnQudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnpPbmU9dGhpcy56PT09dGhpcy5jdXJ2ZS5vbmUsdGhpcy5jdXJ2ZS5leHRlbmRlZCYmIXRoaXMudCYmKHRoaXMudD10aGlzLngucmVkTXVsKHRoaXMueSksdGhpcy56T25lfHwodGhpcy50PXRoaXMudC5yZWRNdWwodGhpcy56LnJlZEludm0oKSkpKSl9byhjLHMpLHQuZXhwb3J0cz1jLGMucHJvdG90eXBlLl9tdWxBPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1PbmVBP3QucmVkTmVnKCk6dGhpcy5hLnJlZE11bCh0KX0sYy5wcm90b3R5cGUuX211bEM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub25lQz90OnRoaXMuYy5yZWRNdWwodCl9LGMucHJvdG90eXBlLmpwb2ludD1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy5wb2ludCh0LGUsbixyKX0sYy5wcm90b3R5cGUucG9pbnRGcm9tWD1mdW5jdGlvbih0LGUpeyh0PW5ldyBhKHQsMTYpKS5yZWR8fCh0PXQudG9SZWQodGhpcy5yZWQpKTt2YXIgbj10LnJlZFNxcigpLHI9dGhpcy5jMi5yZWRTdWIodGhpcy5hLnJlZE11bChuKSksaT10aGlzLm9uZS5yZWRTdWIodGhpcy5jMi5yZWRNdWwodGhpcy5kKS5yZWRNdWwobikpLG89ci5yZWRNdWwoaS5yZWRJbnZtKCkpLHM9by5yZWRTcXJ0KCk7aWYoMCE9PXMucmVkU3FyKCkucmVkU3ViKG8pLmNtcCh0aGlzLnplcm8pKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgcG9pbnRcIik7dmFyIHU9cy5mcm9tUmVkKCkuaXNPZGQoKTtyZXR1cm4oZSYmIXV8fCFlJiZ1KSYmKHM9cy5yZWROZWcoKSksdGhpcy5wb2ludCh0LHMpfSxjLnByb3RvdHlwZS5wb2ludEZyb21ZPWZ1bmN0aW9uKHQsZSl7KHQ9bmV3IGEodCwxNikpLnJlZHx8KHQ9dC50b1JlZCh0aGlzLnJlZCkpO3ZhciBuPXQucmVkU3FyKCkscj1uLnJlZFN1Yih0aGlzLmMyKSxpPW4ucmVkTXVsKHRoaXMuZCkucmVkTXVsKHRoaXMuYzIpLnJlZFN1Yih0aGlzLmEpLG89ci5yZWRNdWwoaS5yZWRJbnZtKCkpO2lmKDA9PT1vLmNtcCh0aGlzLnplcm8pKXtpZihlKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgcG9pbnRcIik7cmV0dXJuIHRoaXMucG9pbnQodGhpcy56ZXJvLHQpfXZhciBzPW8ucmVkU3FydCgpO2lmKDAhPT1zLnJlZFNxcigpLnJlZFN1YihvKS5jbXAodGhpcy56ZXJvKSl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHBvaW50XCIpO3JldHVybiBzLmZyb21SZWQoKS5pc09kZCgpIT09ZSYmKHM9cy5yZWROZWcoKSksdGhpcy5wb2ludChzLHQpfSxjLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbih0KXtpZih0LmlzSW5maW5pdHkoKSlyZXR1cm4hMDt0Lm5vcm1hbGl6ZSgpO3ZhciBlPXQueC5yZWRTcXIoKSxuPXQueS5yZWRTcXIoKSxyPWUucmVkTXVsKHRoaXMuYSkucmVkQWRkKG4pLGk9dGhpcy5jMi5yZWRNdWwodGhpcy5vbmUucmVkQWRkKHRoaXMuZC5yZWRNdWwoZSkucmVkTXVsKG4pKSk7cmV0dXJuIDA9PT1yLmNtcChpKX0sbyhsLHMuQmFzZVBvaW50KSxjLnByb3RvdHlwZS5wb2ludEZyb21KU09OPWZ1bmN0aW9uKHQpe3JldHVybiBsLmZyb21KU09OKHRoaXMsdCl9LGMucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBuZXcgbCh0aGlzLHQsZSxuLHIpfSxsLmZyb21KU09OPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBsKHQsZVswXSxlWzFdLGVbMl0pfSxsLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP1wiPEVDIFBvaW50IEluZmluaXR5PlwiOlwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIiB6OiBcIit0aGlzLnouZnJvbVJlZCgpLnRvU3RyaW5nKDE2LDIpK1wiPlwifSxsLnByb3RvdHlwZS5pc0luZmluaXR5PWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLnguY21wbigwKSYmKDA9PT10aGlzLnkuY21wKHRoaXMueil8fHRoaXMuek9uZSYmMD09PXRoaXMueS5jbXAodGhpcy5jdXJ2ZS5jKSl9LGwucHJvdG90eXBlLl9leHREYmw9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLngucmVkU3FyKCksZT10aGlzLnkucmVkU3FyKCksbj10aGlzLnoucmVkU3FyKCk7bj1uLnJlZElBZGQobik7dmFyIHI9dGhpcy5jdXJ2ZS5fbXVsQSh0KSxpPXRoaXMueC5yZWRBZGQodGhpcy55KS5yZWRTcXIoKS5yZWRJU3ViKHQpLnJlZElTdWIoZSksYT1yLnJlZEFkZChlKSxvPWEucmVkU3ViKG4pLHM9ci5yZWRTdWIoZSksdT1pLnJlZE11bChvKSxjPWEucmVkTXVsKHMpLGw9aS5yZWRNdWwocyksZj1vLnJlZE11bChhKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludCh1LGMsZixsKX0sbC5wcm90b3R5cGUuX3Byb2pEYmw9ZnVuY3Rpb24oKXt2YXIgdCxlLG4scj10aGlzLngucmVkQWRkKHRoaXMueSkucmVkU3FyKCksaT10aGlzLngucmVkU3FyKCksYT10aGlzLnkucmVkU3FyKCk7aWYodGhpcy5jdXJ2ZS50d2lzdGVkKXt2YXIgbz0oYz10aGlzLmN1cnZlLl9tdWxBKGkpKS5yZWRBZGQoYSk7aWYodGhpcy56T25lKXQ9ci5yZWRTdWIoaSkucmVkU3ViKGEpLnJlZE11bChvLnJlZFN1Yih0aGlzLmN1cnZlLnR3bykpLGU9by5yZWRNdWwoYy5yZWRTdWIoYSkpLG49by5yZWRTcXIoKS5yZWRTdWIobykucmVkU3ViKG8pO2Vsc2V7dmFyIHM9dGhpcy56LnJlZFNxcigpLHU9by5yZWRTdWIocykucmVkSVN1YihzKTt0PXIucmVkU3ViKGkpLnJlZElTdWIoYSkucmVkTXVsKHUpLGU9by5yZWRNdWwoYy5yZWRTdWIoYSkpLG49by5yZWRNdWwodSl9fWVsc2V7dmFyIGM9aS5yZWRBZGQoYSk7cz10aGlzLmN1cnZlLl9tdWxDKHRoaXMueikucmVkU3FyKCksdT1jLnJlZFN1YihzKS5yZWRTdWIocyk7dD10aGlzLmN1cnZlLl9tdWxDKHIucmVkSVN1YihjKSkucmVkTXVsKHUpLGU9dGhpcy5jdXJ2ZS5fbXVsQyhjKS5yZWRNdWwoaS5yZWRJU3ViKGEpKSxuPWMucmVkTXVsKHUpfXJldHVybiB0aGlzLmN1cnZlLnBvaW50KHQsZSxuKX0sbC5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP3RoaXM6dGhpcy5jdXJ2ZS5leHRlbmRlZD90aGlzLl9leHREYmwoKTp0aGlzLl9wcm9qRGJsKCl9LGwucHJvdG90eXBlLl9leHRBZGQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy55LnJlZFN1Yih0aGlzLngpLnJlZE11bCh0LnkucmVkU3ViKHQueCkpLG49dGhpcy55LnJlZEFkZCh0aGlzLngpLnJlZE11bCh0LnkucmVkQWRkKHQueCkpLHI9dGhpcy50LnJlZE11bCh0aGlzLmN1cnZlLmRkKS5yZWRNdWwodC50KSxpPXRoaXMuei5yZWRNdWwodC56LnJlZEFkZCh0LnopKSxhPW4ucmVkU3ViKGUpLG89aS5yZWRTdWIocikscz1pLnJlZEFkZChyKSx1PW4ucmVkQWRkKGUpLGM9YS5yZWRNdWwobyksbD1zLnJlZE11bCh1KSxmPWEucmVkTXVsKHUpLGg9by5yZWRNdWwocyk7cmV0dXJuIHRoaXMuY3VydmUucG9pbnQoYyxsLGgsZil9LGwucHJvdG90eXBlLl9wcm9qQWRkPWZ1bmN0aW9uKHQpe3ZhciBlLG4scj10aGlzLnoucmVkTXVsKHQueiksaT1yLnJlZFNxcigpLGE9dGhpcy54LnJlZE11bCh0LngpLG89dGhpcy55LnJlZE11bCh0LnkpLHM9dGhpcy5jdXJ2ZS5kLnJlZE11bChhKS5yZWRNdWwobyksdT1pLnJlZFN1YihzKSxjPWkucmVkQWRkKHMpLGw9dGhpcy54LnJlZEFkZCh0aGlzLnkpLnJlZE11bCh0LngucmVkQWRkKHQueSkpLnJlZElTdWIoYSkucmVkSVN1YihvKSxmPXIucmVkTXVsKHUpLnJlZE11bChsKTtyZXR1cm4gdGhpcy5jdXJ2ZS50d2lzdGVkPyhlPXIucmVkTXVsKGMpLnJlZE11bChvLnJlZFN1Yih0aGlzLmN1cnZlLl9tdWxBKGEpKSksbj11LnJlZE11bChjKSk6KGU9ci5yZWRNdWwoYykucmVkTXVsKG8ucmVkU3ViKGEpKSxuPXRoaXMuY3VydmUuX211bEModSkucmVkTXVsKGMpKSx0aGlzLmN1cnZlLnBvaW50KGYsZSxuKX0sbC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmlzSW5maW5pdHkoKT90OnQuaXNJbmZpbml0eSgpP3RoaXM6dGhpcy5jdXJ2ZS5leHRlbmRlZD90aGlzLl9leHRBZGQodCk6dGhpcy5fcHJvakFkZCh0KX0sbC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9oYXNEb3VibGVzKHQpP3RoaXMuY3VydmUuX2ZpeGVkTmFmTXVsKHRoaXMsdCk6dGhpcy5jdXJ2ZS5fd25hZk11bCh0aGlzLHQpfSxsLnByb3RvdHlwZS5tdWxBZGQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsQWRkKDEsW3RoaXMsZV0sW3Qsbl0sMiwhMSl9LGwucHJvdG90eXBlLmptdWxBZGQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsQWRkKDEsW3RoaXMsZV0sW3Qsbl0sMiwhMCl9LGwucHJvdG90eXBlLm5vcm1hbGl6ZT1mdW5jdGlvbigpe2lmKHRoaXMuek9uZSlyZXR1cm4gdGhpczt2YXIgdD10aGlzLnoucmVkSW52bSgpO3JldHVybiB0aGlzLng9dGhpcy54LnJlZE11bCh0KSx0aGlzLnk9dGhpcy55LnJlZE11bCh0KSx0aGlzLnQmJih0aGlzLnQ9dGhpcy50LnJlZE11bCh0KSksdGhpcy56PXRoaXMuY3VydmUub25lLHRoaXMuek9uZT0hMCx0aGlzfSxsLnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludCh0aGlzLngucmVkTmVnKCksdGhpcy55LHRoaXMueix0aGlzLnQmJnRoaXMudC5yZWROZWcoKSl9LGwucHJvdG90eXBlLmdldFg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub3JtYWxpemUoKSx0aGlzLnguZnJvbVJlZCgpfSxsLnByb3RvdHlwZS5nZXRZPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9ybWFsaXplKCksdGhpcy55LmZyb21SZWQoKX0sbC5wcm90b3R5cGUuZXE9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXM9PT10fHwwPT09dGhpcy5nZXRYKCkuY21wKHQuZ2V0WCgpKSYmMD09PXRoaXMuZ2V0WSgpLmNtcCh0LmdldFkoKSl9LGwucHJvdG90eXBlLmVxWFRvUD1mdW5jdGlvbih0KXt2YXIgZT10LnRvUmVkKHRoaXMuY3VydmUucmVkKS5yZWRNdWwodGhpcy56KTtpZigwPT09dGhpcy54LmNtcChlKSlyZXR1cm4hMDtmb3IodmFyIG49dC5jbG9uZSgpLHI9dGhpcy5jdXJ2ZS5yZWROLnJlZE11bCh0aGlzLnopOzspe2lmKG4uaWFkZCh0aGlzLmN1cnZlLm4pLG4uY21wKHRoaXMuY3VydmUucCk+PTApcmV0dXJuITE7aWYoZS5yZWRJQWRkKHIpLDA9PT10aGlzLnguY21wKGUpKXJldHVybiEwfX0sbC5wcm90b3R5cGUudG9QPWwucHJvdG90eXBlLm5vcm1hbGl6ZSxsLnByb3RvdHlwZS5taXhlZEFkZD1sLnByb3RvdHlwZS5hZGR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcixpPWUsYT1uKDY3KSxvPW4oOCkscz1vLnV0aWxzLmFzc2VydDtmdW5jdGlvbiB1KHQpe1wic2hvcnRcIj09PXQudHlwZT90aGlzLmN1cnZlPW5ldyBvLmN1cnZlLnNob3J0KHQpOlwiZWR3YXJkc1wiPT09dC50eXBlP3RoaXMuY3VydmU9bmV3IG8uY3VydmUuZWR3YXJkcyh0KTp0aGlzLmN1cnZlPW5ldyBvLmN1cnZlLm1vbnQodCksdGhpcy5nPXRoaXMuY3VydmUuZyx0aGlzLm49dGhpcy5jdXJ2ZS5uLHRoaXMuaGFzaD10Lmhhc2gscyh0aGlzLmcudmFsaWRhdGUoKSxcIkludmFsaWQgY3VydmVcIikscyh0aGlzLmcubXVsKHRoaXMubikuaXNJbmZpbml0eSgpLFwiSW52YWxpZCBjdXJ2ZSwgRypOICE9IE9cIil9ZnVuY3Rpb24gYyh0LGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLHQse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3ZhciBuPW5ldyB1KGUpO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoaSx0LHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx2YWx1ZTpufSksbn19KX1pLlByZXNldEN1cnZlPXUsYyhcInAxOTJcIix7dHlwZTpcInNob3J0XCIscHJpbWU6XCJwMTkyXCIscDpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmXCIsYTpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZjXCIsYjpcIjY0MjEwNTE5IGU1OWM4MGU3IDBmYTdlOWFiIDcyMjQzMDQ5IGZlYjhkZWVjIGMxNDZiOWIxXCIsbjpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIDk5ZGVmODM2IDE0NmJjOWIxIGI0ZDIyODMxXCIsaGFzaDphLnNoYTI1NixnUmVkOiExLGc6W1wiMTg4ZGE4MGUgYjAzMDkwZjYgN2NiZjIwZWIgNDNhMTg4MDAgZjRmZjBhZmQgODJmZjEwMTJcIixcIjA3MTkyYjk1IGZmYzhkYTc4IDYzMTAxMWVkIDZiMjRjZGQ1IDczZjk3N2ExIDFlNzk0ODExXCJdfSksYyhcInAyMjRcIix7dHlwZTpcInNob3J0XCIscHJpbWU6XCJwMjI0XCIscDpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAxXCIsYTpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlXCIsYjpcImI0MDUwYTg1IDBjMDRiM2FiIGY1NDEzMjU2IDUwNDRiMGI3IGQ3YmZkOGJhIDI3MGIzOTQzIDIzNTVmZmI0XCIsbjpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmYxNmEyIGUwYjhmMDNlIDEzZGQyOTQ1IDVjNWMyYTNkXCIsaGFzaDphLnNoYTI1NixnUmVkOiExLGc6W1wiYjcwZTBjYmQgNmJiNGJmN2YgMzIxMzkwYjkgNGEwM2MxZDMgNTZjMjExMjIgMzQzMjgwZDYgMTE1YzFkMjFcIixcImJkMzc2Mzg4IGI1ZjcyM2ZiIDRjMjJkZmU2IGNkNDM3NWEwIDVhMDc0NzY0IDQ0ZDU4MTk5IDg1MDA3ZTM0XCJdfSksYyhcInAyNTZcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiNWFjNjM1ZDggYWEzYTkzZTcgYjNlYmJkNTUgNzY5ODg2YmMgNjUxZDA2YjAgY2M1M2IwZjYgM2JjZTNjM2UgMjdkMjYwNGJcIixuOlwiZmZmZmZmZmYgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgYmNlNmZhYWQgYTcxNzllODQgZjNiOWNhYzIgZmM2MzI1NTFcIixoYXNoOmEuc2hhMjU2LGdSZWQ6ITEsZzpbXCI2YjE3ZDFmMiBlMTJjNDI0NyBmOGJjZTZlNSA2M2E0NDBmMiA3NzAzN2Q4MSAyZGViMzNhMCBmNGExMzk0NSBkODk4YzI5NlwiLFwiNGZlMzQyZTIgZmUxYTdmOWIgOGVlN2ViNGEgN2MwZjllMTYgMmJjZTMzNTcgNmIzMTVlY2UgY2JiNjQwNjggMzdiZjUxZjVcIl19KSxjKFwicDM4NFwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpudWxsLHA6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiAwMDAwMDAwMCAwMDAwMDAwMCBmZmZmZmZmZlwiLGE6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiAwMDAwMDAwMCAwMDAwMDAwMCBmZmZmZmZmY1wiLGI6XCJiMzMxMmZhNyBlMjNlZTdlNCA5ODhlMDU2YiBlM2Y4MmQxOSAxODFkOWM2ZSBmZTgxNDExMiAwMzE0MDg4ZiA1MDEzODc1YSBjNjU2Mzk4ZCA4YTJlZDE5ZCAyYTg1YzhlZCBkM2VjMmFlZlwiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBjNzYzNGQ4MSBmNDM3MmRkZiA1ODFhMGRiMiA0OGIwYTc3YSBlY2VjMTk2YSBjY2M1Mjk3M1wiLGhhc2g6YS5zaGEzODQsZ1JlZDohMSxnOltcImFhODdjYTIyIGJlOGIwNTM3IDhlYjFjNzFlIGYzMjBhZDc0IDZlMWQzYjYyIDhiYTc5Yjk4IDU5Zjc0MWUwIDgyNTQyYTM4IDU1MDJmMjVkIGJmNTUyOTZjIDNhNTQ1ZTM4IDcyNzYwYWI3XCIsXCIzNjE3ZGU0YSA5NjI2MmM2ZiA1ZDllOThiZiA5MjkyZGMyOSBmOGY0MWRiZCAyODlhMTQ3YyBlOWRhMzExMyBiNWYwYjhjMCAwYTYwYjFjZSAxZDdlODE5ZCA3YTQzMWQ3YyA5MGVhMGU1ZlwiXX0pLGMoXCJwNTIxXCIse3R5cGU6XCJzaG9ydFwiLHByaW1lOm51bGwscDpcIjAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmXCIsYTpcIjAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZjXCIsYjpcIjAwMDAwMDUxIDk1M2ViOTYxIDhlMWM5YTFmIDkyOWEyMWEwIGI2ODU0MGVlIGEyZGE3MjViIDk5YjMxNWYzIGI4YjQ4OTkxIDhlZjEwOWUxIDU2MTkzOTUxIGVjN2U5MzdiIDE2NTJjMGJkIDNiYjFiZjA3IDM1NzNkZjg4IDNkMmMzNGYxIGVmNDUxZmQ0IDZiNTAzZjAwXCIsbjpcIjAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZhIDUxODY4NzgzIGJmMmY5NjZiIDdmY2MwMTQ4IGY3MDlhNWQwIDNiYjVjOWI4IDg5OWM0N2FlIGJiNmZiNzFlIDkxMzg2NDA5XCIsaGFzaDphLnNoYTUxMixnUmVkOiExLGc6W1wiMDAwMDAwYzYgODU4ZTA2YjcgMDQwNGU5Y2QgOWUzZWNiNjYgMjM5NWI0NDIgOWM2NDgxMzkgMDUzZmI1MjEgZjgyOGFmNjAgNmI0ZDNkYmEgYTE0YjVlNzcgZWZlNzU5MjggZmUxZGMxMjcgYTJmZmE4ZGUgMzM0OGIzYzEgODU2YTQyOWIgZjk3ZTdlMzEgYzJlNWJkNjZcIixcIjAwMDAwMTE4IDM5Mjk2YTc4IDlhM2JjMDA0IDVjOGE1ZmI0IDJjN2QxYmQ5IDk4ZjU0NDQ5IDU3OWI0NDY4IDE3YWZiZDE3IDI3M2U2NjJjIDk3ZWU3Mjk5IDVlZjQyNjQwIGM1NTBiOTAxIDNmYWQwNzYxIDM1M2M3MDg2IGEyNzJjMjQwIDg4YmU5NDc2IDlmZDE2NjUwXCJdfSksYyhcImN1cnZlMjU1MTlcIix7dHlwZTpcIm1vbnRcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIjc2ZDA2XCIsYjpcIjFcIixuOlwiMTAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwIDE0ZGVmOWRlYTJmNzljZDYgNTgxMjYzMWE1Y2Y1ZDNlZFwiLGhhc2g6YS5zaGEyNTYsZ1JlZDohMSxnOltcIjlcIl19KSxjKFwiZWQyNTUxOVwiLHt0eXBlOlwiZWR3YXJkc1wiLHByaW1lOlwicDI1NTE5XCIscDpcIjdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWRcIixhOlwiLTFcIixjOlwiMVwiLGQ6XCI1MjAzNmNlZTJiNmZmZTczIDhjYzc0MDc5Nzc3OWU4OTggMDA3MDBhNGQ0MTQxZDhhYiA3NWViNGRjYTEzNTk3OGEzXCIsbjpcIjEwMDAwMDAwMDAwMDAwMDAgMDAwMDAwMDAwMDAwMDAwMCAxNGRlZjlkZWEyZjc5Y2Q2IDU4MTI2MzFhNWNmNWQzZWRcIixoYXNoOmEuc2hhMjU2LGdSZWQ6ITEsZzpbXCIyMTY5MzZkM2NkNmU1M2ZlYzBhNGUyMzFmZGQ2ZGM1YzY5MmNjNzYwOTUyNWE3YjJjOTU2MmQ2MDhmMjVkNTFhXCIsXCI2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjU4XCJdfSk7dHJ5e3I9bigxOTMpfWNhdGNoKHQpe3I9dm9pZCAwfWMoXCJzZWNwMjU2azFcIix7dHlwZTpcInNob3J0XCIscHJpbWU6XCJrMjU2XCIscDpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmYzJmXCIsYTpcIjBcIixiOlwiN1wiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBiYWFlZGNlNiBhZjQ4YTAzYiBiZmQyNWU4YyBkMDM2NDE0MVwiLGg6XCIxXCIsaGFzaDphLnNoYTI1NixiZXRhOlwiN2FlOTZhMmI2NTdjMDcxMDZlNjQ0NzllYWMzNDM0ZTk5Y2YwNDk3NTEyZjU4OTk1YzEzOTZjMjg3MTk1MDFlZVwiLGxhbWJkYTpcIjUzNjNhZDRjYzA1YzMwZTBhNTI2MWMwMjg4MTI2NDVhMTIyZTIyZWEyMDgxNjY3OGRmMDI5NjdjMWIyM2JkNzJcIixiYXNpczpbe2E6XCIzMDg2ZDIyMWE3ZDQ2YmNkZTg2YzkwZTQ5Mjg0ZWIxNVwiLGI6XCItZTQ0MzdlZDYwMTBlODgyODZmNTQ3ZmE5MGFiZmU0YzNcIn0se2E6XCIxMTRjYTUwZjdhOGUyZjNmNjU3YzExMDhkOWQ0NGNmZDhcIixiOlwiMzA4NmQyMjFhN2Q0NmJjZGU4NmM5MGU0OTI4NGViMTVcIn1dLGdSZWQ6ITEsZzpbXCI3OWJlNjY3ZWY5ZGNiYmFjNTVhMDYyOTVjZTg3MGIwNzAyOWJmY2RiMmRjZTI4ZDk1OWYyODE1YjE2ZjgxNzk4XCIsXCI0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4XCIscl19KX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Uuc2hhMT1uKDE4OCksZS5zaGEyMjQ9bigxODkpLGUuc2hhMjU2PW4oMTEwKSxlLnNoYTM4ND1uKDE5MCksZS5zaGE1MTI9bigxMTEpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigxNSksaT1uKDMzKSxhPW4oMTA5KSxvPXIucm90bDMyLHM9ci5zdW0zMix1PXIuc3VtMzJfNSxjPWEuZnRfMSxsPWkuQmxvY2tIYXNoLGY9WzE1MTg1MDAyNDksMTg1OTc3NTM5MywyNDAwOTU5NzA4LDMzOTU0Njk3ODJdO2Z1bmN0aW9uIGgoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBoKSlyZXR1cm4gbmV3IGg7bC5jYWxsKHRoaXMpLHRoaXMuaD1bMTczMjU4NDE5Myw0MDIzMjMzNDE3LDI1NjIzODMxMDIsMjcxNzMzODc4LDMyODUzNzc1MjBdLHRoaXMuVz1uZXcgQXJyYXkoODApfXIuaW5oZXJpdHMoaCxsKSx0LmV4cG9ydHM9aCxoLmJsb2NrU2l6ZT01MTIsaC5vdXRTaXplPTE2MCxoLmhtYWNTdHJlbmd0aD04MCxoLnBhZExlbmd0aD02NCxoLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMuVyxyPTA7cjwxNjtyKyspbltyXT10W2Urcl07Zm9yKDtyPG4ubGVuZ3RoO3IrKyluW3JdPW8obltyLTNdXm5bci04XV5uW3ItMTRdXm5bci0xNl0sMSk7dmFyIGk9dGhpcy5oWzBdLGE9dGhpcy5oWzFdLGw9dGhpcy5oWzJdLGg9dGhpcy5oWzNdLHA9dGhpcy5oWzRdO2ZvcihyPTA7cjxuLmxlbmd0aDtyKyspe3ZhciBkPX5+KHIvMjApLG09dShvKGksNSksYyhkLGEsbCxoKSxwLG5bcl0sZltkXSk7cD1oLGg9bCxsPW8oYSwzMCksYT1pLGk9bX10aGlzLmhbMF09cyh0aGlzLmhbMF0saSksdGhpcy5oWzFdPXModGhpcy5oWzFdLGEpLHRoaXMuaFsyXT1zKHRoaXMuaFsyXSxsKSx0aGlzLmhbM109cyh0aGlzLmhbM10saCksdGhpcy5oWzRdPXModGhpcy5oWzRdLHApfSxoLnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVyblwiaGV4XCI9PT10P3IudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6ci5zcGxpdDMyKHRoaXMuaCxcImJpZ1wiKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDE1KSxpPW4oMTEwKTtmdW5jdGlvbiBhKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgYSkpcmV0dXJuIG5ldyBhO2kuY2FsbCh0aGlzKSx0aGlzLmg9WzMyMzgzNzEwMzIsOTE0MTUwNjYzLDgxMjcwMjk5OSw0MTQ0OTEyNjk3LDQyOTA3NzU4NTcsMTc1MDYwMzAyNSwxNjk0MDc2ODM5LDMyMDQwNzU0MjhdfXIuaW5oZXJpdHMoYSxpKSx0LmV4cG9ydHM9YSxhLmJsb2NrU2l6ZT01MTIsYS5vdXRTaXplPTIyNCxhLmhtYWNTdHJlbmd0aD0xOTIsYS5wYWRMZW5ndGg9NjQsYS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm5cImhleFwiPT09dD9yLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsNyksXCJiaWdcIik6ci5zcGxpdDMyKHRoaXMuaC5zbGljZSgwLDcpLFwiYmlnXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTUpLGk9bigxMTEpO2Z1bmN0aW9uIGEoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBhKSlyZXR1cm4gbmV3IGE7aS5jYWxsKHRoaXMpLHRoaXMuaD1bMzQxODA3MDM2NSwzMjM4MzcxMDMyLDE2NTQyNzAyNTAsOTE0MTUwNjYzLDI0Mzg1MjkzNzAsODEyNzAyOTk5LDM1NTQ2MjM2MCw0MTQ0OTEyNjk3LDE3MzE0MDU0MTUsNDI5MDc3NTg1NywyMzk0MTgwMjMxLDE3NTA2MDMwMjUsMzY3NTAwODUyNSwxNjk0MDc2ODM5LDEyMDMwNjI4MTMsMzIwNDA3NTQyOF19ci5pbmhlcml0cyhhLGkpLHQuZXhwb3J0cz1hLGEuYmxvY2tTaXplPTEwMjQsYS5vdXRTaXplPTM4NCxhLmhtYWNTdHJlbmd0aD0xOTIsYS5wYWRMZW5ndGg9MTI4LGEucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuXCJoZXhcIj09PXQ/ci50b0hleDMyKHRoaXMuaC5zbGljZSgwLDEyKSxcImJpZ1wiKTpyLnNwbGl0MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTUpLGk9bigzMyksYT1yLnJvdGwzMixvPXIuc3VtMzIscz1yLnN1bTMyXzMsdT1yLnN1bTMyXzQsYz1pLkJsb2NrSGFzaDtmdW5jdGlvbiBsKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbCkpcmV0dXJuIG5ldyBsO2MuY2FsbCh0aGlzKSx0aGlzLmg9WzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXSx0aGlzLmVuZGlhbj1cImxpdHRsZVwifWZ1bmN0aW9uIGYodCxlLG4scil7cmV0dXJuIHQ8PTE1P2Vebl5yOnQ8PTMxP2Umbnx+ZSZyOnQ8PTQ3PyhlfH5uKV5yOnQ8PTYzP2UmcnxuJn5yOmVeKG58fnIpfWZ1bmN0aW9uIGgodCl7cmV0dXJuIHQ8PTE1PzA6dDw9MzE/MTUxODUwMDI0OTp0PD00Nz8xODU5Nzc1MzkzOnQ8PTYzPzI0MDA5NTk3MDg6Mjg0MDg1MzgzOH1mdW5jdGlvbiBwKHQpe3JldHVybiB0PD0xNT8xMzUyODI5OTI2OnQ8PTMxPzE1NDg2MDM2ODQ6dDw9NDc/MTgzNjA3MjY5MTp0PD02Mz8yMDUzOTk0MjE3OjB9ci5pbmhlcml0cyhsLGMpLGUucmlwZW1kMTYwPWwsbC5ibG9ja1NpemU9NTEyLGwub3V0U2l6ZT0xNjAsbC5obWFjU3RyZW5ndGg9MTkyLGwucGFkTGVuZ3RoPTY0LGwucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5oWzBdLHI9dGhpcy5oWzFdLGk9dGhpcy5oWzJdLGM9dGhpcy5oWzNdLGw9dGhpcy5oWzRdLHY9bixiPXIsdz1pLF89Yyx4PWwsRT0wO0U8ODA7RSsrKXt2YXIgUz1vKGEodShuLGYoRSxyLGksYyksdFtkW0VdK2VdLGgoRSkpLGdbRV0pLGwpO249bCxsPWMsYz1hKGksMTApLGk9cixyPVMsUz1vKGEodSh2LGYoNzktRSxiLHcsXyksdFttW0VdK2VdLHAoRSkpLHlbRV0pLHgpLHY9eCx4PV8sXz1hKHcsMTApLHc9YixiPVN9Uz1zKHRoaXMuaFsxXSxpLF8pLHRoaXMuaFsxXT1zKHRoaXMuaFsyXSxjLHgpLHRoaXMuaFsyXT1zKHRoaXMuaFszXSxsLHYpLHRoaXMuaFszXT1zKHRoaXMuaFs0XSxuLGIpLHRoaXMuaFs0XT1zKHRoaXMuaFswXSxyLHcpLHRoaXMuaFswXT1TfSxsLnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVyblwiaGV4XCI9PT10P3IudG9IZXgzMih0aGlzLmgsXCJsaXR0bGVcIik6ci5zcGxpdDMyKHRoaXMuaCxcImxpdHRsZVwiKX07dmFyIGQ9WzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM10sbT1bNSwxNCw3LDAsOSwyLDExLDQsMTMsNiwxNSw4LDEsMTAsMywxMiw2LDExLDMsNywwLDEzLDUsMTAsMTQsMTUsOCwxMiw0LDksMSwyLDE1LDUsMSwzLDcsMTQsNiw5LDExLDgsMTIsMiwxMCwwLDQsMTMsOCw2LDQsMSwzLDExLDE1LDAsNSwxMiwyLDEzLDksNywxMCwxNCwxMiwxNSwxMCw0LDEsNSw4LDcsNiwyLDEzLDE0LDAsMyw5LDExXSxnPVsxMSwxNCwxNSwxMiw1LDgsNyw5LDExLDEzLDE0LDE1LDYsNyw5LDgsNyw2LDgsMTMsMTEsOSw3LDE1LDcsMTIsMTUsOSwxMSw3LDEzLDEyLDExLDEzLDYsNywxNCw5LDEzLDE1LDE0LDgsMTMsNiw1LDEyLDcsNSwxMSwxMiwxNCwxNSwxNCwxNSw5LDgsOSwxNCw1LDYsOCw2LDUsMTIsOSwxNSw1LDExLDYsOCwxMywxMiw1LDEyLDEzLDE0LDExLDgsNSw2XSx5PVs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMTUpLGk9bigxMik7ZnVuY3Rpb24gYSh0LGUsbil7aWYoISh0aGlzIGluc3RhbmNlb2YgYSkpcmV0dXJuIG5ldyBhKHQsZSxuKTt0aGlzLkhhc2g9dCx0aGlzLmJsb2NrU2l6ZT10LmJsb2NrU2l6ZS84LHRoaXMub3V0U2l6ZT10Lm91dFNpemUvOCx0aGlzLmlubmVyPW51bGwsdGhpcy5vdXRlcj1udWxsLHRoaXMuX2luaXQoci50b0FycmF5KGUsbikpfXQuZXhwb3J0cz1hLGEucHJvdG90eXBlLl9pbml0PWZ1bmN0aW9uKHQpe3QubGVuZ3RoPnRoaXMuYmxvY2tTaXplJiYodD0obmV3IHRoaXMuSGFzaCkudXBkYXRlKHQpLmRpZ2VzdCgpKSxpKHQubGVuZ3RoPD10aGlzLmJsb2NrU2l6ZSk7Zm9yKHZhciBlPXQubGVuZ3RoO2U8dGhpcy5ibG9ja1NpemU7ZSsrKXQucHVzaCgwKTtmb3IoZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV1ePTU0O2Zvcih0aGlzLmlubmVyPShuZXcgdGhpcy5IYXNoKS51cGRhdGUodCksZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV1ePTEwNjt0aGlzLm91dGVyPShuZXcgdGhpcy5IYXNoKS51cGRhdGUodCl9LGEucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmlubmVyLnVwZGF0ZSh0LGUpLHRoaXN9LGEucHJvdG90eXBlLmRpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5vdXRlci51cGRhdGUodGhpcy5pbm5lci5kaWdlc3QoKSksdGhpcy5vdXRlci5kaWdlc3QodCl9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz17ZG91Ymxlczp7c3RlcDo0LHBvaW50czpbW1wiZTYwZmNlOTNiNTllOWVjNTMwMTFhYWJjMjFjMjNlOTdiMmEzMTM2OWI4N2E1YWU5YzQ0ZWU4OWUyYTZkZWMwYVwiLFwiZjdlMzUwNzM5OWU1OTU5MjlkYjk5ZjM0ZjU3OTM3MTAxMjk2ODkxZTQ0ZDIzZjBiZTFmMzJjY2U2OTYxNjgyMVwiXSxbXCI4MjgyMjYzMjEyYzYwOWQ5ZWEyYTZlM2UxNzJkZTIzOGQ4YzM5Y2FiZDVhYzFjYTEwNjQ2ZTIzZmQ1ZjUxNTA4XCIsXCIxMWY4YTgwOTg1NTdkZmU0NWU4MjU2ZTgzMGI2MGFjZTYyZDYxM2FjMmY3YjE3YmVkMzFiNmVhZmY2ZTI2Y2FmXCJdLFtcIjE3NWUxNTlmNzI4Yjg2NWE3MmY5OWNjNmM2ZmM4NDZkZTBiOTM4MzNmZDIyMjJlZDczZmNlNWI1NTFlNWI3MzlcIixcImQzNTA2ZTBkOWUzYzc5ZWJhNGVmOTdhNTFmZjcxZjVlYWNiNTk1NWFkZDI0MzQ1YzZlZmE2ZmZlZTlmZWQ2OTVcIl0sW1wiMzYzZDkwZDQ0N2IwMGM5Yzk5Y2VhYzA1YjYyNjJlZTA1MzQ0MWM3ZTU1NTUyZmZlNTI2YmFkOGY4M2ZmNDY0MFwiLFwiNGUyNzNhZGZjNzMyMjIxOTUzYjQ0NTM5N2YzMzYzMTQ1YjlhODkwMDgxOTllY2I2MjAwM2M3ZjNiZWU5ZGU5XCJdLFtcIjhiNGI1ZjE2NWRmM2MyYmU4YzYyNDRiNWI3NDU2Mzg4NDNlNGE3ODFhMTViY2QxYjY5Zjc5YTU1ZGZmZGY4MGNcIixcIjRhYWQwYTZmNjhkMzA4YjRiM2ZiZDc4MTNhYjBkYTA0ZjllMzM2NTQ2MTYyZWU1NmIzZWZmMGM2NWZkNGZkMzZcIl0sW1wiNzIzY2JhYTZlNWRiOTk2ZDZiZjc3MWMwMGJkNTQ4YzdiNzAwZGJmZmE2YzBlNzdiY2I2MTE1OTI1MjMyZmNkYVwiLFwiOTZlODY3YjU1OTVjYzQ5OGE5MjExMzc0ODg4MjRkNmUyNjYwYTA2NTM3Nzk0OTQ4MDFkYzA2OWQ5ZWIzOWY1ZlwiXSxbXCJlZWJmYTRkNDkzYmViZjk4YmE1ZmVlYzgxMmMyZDNiNTA5NDc5NjEyMzdhOTE5ODM5YTUzM2VjYTBlN2RkN2ZhXCIsXCI1ZDlhOGNhMzk3MGVmMGYyNjllZTdlZGFmMTc4MDg5ZDlhZTRjZGMzYTcxMWY3MTJkZGZkNGZkYWUxZGU4OTk5XCJdLFtcIjEwMGY0NGRhNjk2ZTcxNjcyNzkxZDBhMDliN2JkZTQ1OWYxMjE1YTI5YjNjMDNiZmVmZDc4MzViMzlhNDhkYjBcIixcImNkZDllMTMxOTJhMDBiNzcyZWM4ZjMzMDBjMDkwNjY2YjdmZjRhMThmZjUxOTVhYzBmYmQ1Y2Q2MmJjNjVhMDlcIl0sW1wiZTEwMzFiZTI2MmM3ZWQxYjFkYzkyMjdhNGEwNGMwMTdhNzdmOGQ0NDY0ZjNiMzg1MmM4YWNkZTZlNTM0ZmQyZFwiLFwiOWQ3MDYxOTI4OTQwNDA1ZTZiYjZhNDE3NjU5NzUzNWFmMjkyZGQ0MTllMWNlZDc5YTQ0ZjE4ZjI5NDU2YTAwZFwiXSxbXCJmZWVhNmNhZTQ2ZDU1YjUzMGFjMjgzOWYxNDNiZDdlYzVjZjhiMjY2YTQxZDZhZjUyZDVlNjg4ZDkwOTQ2OTZkXCIsXCJlNTdjNmI2Yzk3ZGNlMWJhYjA2ZTRlMTJiZjNlY2Q1Yzk4MWM4OTU3Y2M0MTQ0MmQzMTU1ZGViZjE4MDkwMDg4XCJdLFtcImRhNjdhOTFkOTEwNDljZGNiMzY3YmU0YmU2ZmZjYTNjZmVlZDY1N2Q4MDg1ODNkZTMzZmE5NzhiYzFlYzZjYjFcIixcIjliYWNhYTM1NDgxNjQyYmM0MWY0NjNmN2VjOTc4MGU1ZGVjN2FkYzUwOGY3NDBhMTdlOWVhOGUyN2E2OGJlMWRcIl0sW1wiNTM5MDRmYWEwYjMzNGNkZGE2ZTAwMDkzNWVmMjIxNTFlYzA4ZDBmN2JiMTEwNjlmNTc1NDVjY2MxYTM3YjdjMFwiLFwiNWJjMDg3ZDBiYzgwMTA2ZDg4YzllY2NhYzIwZDNjMWMxMzk5OTk4MWUxNDQzNDY5OWRjYjA5NmIwMjI3NzFjOFwiXSxbXCI4ZTdiY2QwYmQzNTk4M2E3NzE5Y2NhNzc2NGNhOTA2Nzc5YjUzYTA0M2E5YjhiY2FlZmY5NTlmNDNhZDg2MDQ3XCIsXCIxMGI3NzcwYjJhM2RhNGIzOTQwMzEwNDIwY2E5NTE0NTc5ZTg4ZTJlNDdmZDY4YjNlYTEwMDQ3ZTg0NjAzNzJhXCJdLFtcIjM4NWVlZDM0YzFjZGZmMjFlNmQwODE4Njg5YjgxYmRlNzFhN2Y0ZjE4Mzk3ZTY2OTBhODQxZTE1OTljNDM4NjJcIixcIjI4M2JlYmMzZThlYTIzZjU2NzAxZGUxOWU5ZWJmNDU3NmIzMDRlZWMyMDg2ZGM4Y2MwNDU4ZmU1NTQyZTU0NTNcIl0sW1wiNmY5ZDliODAzZWNmMTkxNjM3YzczYTQ0MTNkZmExODBmZGRmODRhNTk0N2ZiYzljNjA2ZWQ4NmMzZmFjM2E3XCIsXCI3YzgwYzY4ZTYwMzA1OWJhNjliOGUyYTMwZTQ1YzRkNDdlYTRkZDJmNWMyODEwMDJkODY4OTA2MDNhODQyMTYwXCJdLFtcIjMzMjJkNDAxMjQzYzRlMjU4MmEyMTQ3YzEwNGQ2ZWNiZjc3NGQxNjNkYjBmNWU1MzEzYjdlMGU3NDJkMGU2YmRcIixcIjU2ZTcwNzk3ZTk2NjRlZjViZmIwMTliYzRkZGFmOWI3MjgwNWY2M2VhMjg3M2FmNjI0ZjNhMmU5NmMyOGIyYTBcIl0sW1wiODU2NzJjN2QyZGUwYjdkYTJiZDE3NzBkODk2NjU4Njg3NDFiM2Y5YWY3NjQzMzk3NzIxZDc0ZDI4MTM0YWI4M1wiLFwiN2M0ODFiOWI1YjQzYjJlYjYzNzQwNDliZmE2MmMyZTVlNzdmMTdmY2M1Mjk4ZjQ0YzhlMzA5NGY3OTAzMTNhNlwiXSxbXCI5NDhiZjgwOWIxOTg4YTQ2YjA2YzlmMTkxOTQxM2IxMGY5MjI2YzYwZjY2ODgzMmZmZDk1OWFmNjBjODJhMGFcIixcIjUzYTU2Mjg1NmRjYjY2NDZkYzZiNzRjNWQxYzM0MThjNmQ0ZGZmMDhjOTdjZDJiZWQ0Y2I3Zjg4ZDhjOGU1ODlcIl0sW1wiNjI2MGNlN2Y0NjE4MDFjMzRmMDY3Y2UwZjAyODczYThmMWIwZTQ0ZGZjNjk3NTJhY2NlY2Q4MTlmMzhmZDhlOFwiLFwiYmMyZGE4MmI2ZmE1YjU3MWE3ZjA5MDQ5Nzc2YTFlZjdlY2QyOTIyMzgwNTFjMTk4YzFhODRlOTViMmI0YWUxN1wiXSxbXCJlNTAzN2RlMGFmYzFkOGQ0M2Q4MzQ4NDE0YmJmNDEwMzA0M2VjOGY1NzViZmRjNDMyOTUzY2M4ZDIwMzdmYTJkXCIsXCI0NTcxNTM0YmFhOTRkM2I1ZjlmOThkMDlmYjk5MGJkZGJkNWY1YjAzZWM0ODFmMTBlMGU1ZGM4NDFkNzU1YmRhXCJdLFtcImUwNjM3MmIwZjRhMjA3YWRmNWVhOTA1ZThmMTc3MWI0ZTdlOGRiZDFjNmE2YzViNzI1ODY2YTBhZTRmY2U3MjVcIixcIjdhOTA4OTc0YmNlMThjZmUxMmEyN2JiMmFkNWE0ODhjZDc0ODRhNzc4NzEwNDg3MGIyNzAzNGY5NGVlZTMxZGRcIl0sW1wiMjEzYzdhNzE1Y2Q1ZDQ1MzU4ZDBiYmY5ZGMwY2UwMjIwNGIxMGJkZGUyYTNmNTg1NDBhZDY5MDhkMDU1OTc1NFwiLFwiNGI2ZGFkMGI1YWU0NjI1MDcwMTNhZDA2MjQ1YmExOTBiYjQ4NTBmNWYzNmE3ZWVkZGZmMmMyNzUzNGI0NThmMlwiXSxbXCI0ZTdjMjcyYTdhZjRiMzRlOGRiYjkzNTJhNTQxOWE4N2UyODM4YzcwYWRjNjJjZGRmMGNjM2EzYjA4ZmJkNTNjXCIsXCIxNzc0OWM3NjZjOWQwYjE4ZTE2ZmQwOWY2ZGVmNjgxYjUzMGI5NjE0YmZmN2RkMzNlMGIzOTQxODE3ZGNhYWU2XCJdLFtcImZlYTc0ZTNkYmU3NzhiMWIxMGYyMzhhZDYxNjg2YWE1Yzc2ZTNkYjJiZTQzMDU3NjMyNDI3ZTI4NDBmYjI3YjZcIixcIjZlMDU2OGRiOWIwYjEzMjk3Y2Y2NzRkZWNjYjZhZjkzMTI2YjU5NmI5NzNmN2I3NzcwMWQzZGI3ZjIzY2I5NmZcIl0sW1wiNzZlNjQxMTNmNjc3Y2YwZTEwYTI1NzBkNTk5OTY4ZDMxNTQ0ZTE3OWI3NjA0MzI5NTJjMDJhNDQxN2JkZGUzOVwiLFwiYzkwZGRmOGRlZTRlOTVjZjU3NzA2NmQ3MDY4MWYwZDM1ZTJhMzNkMmI1NmQyMDMyYjRiMTc1MmQxOTAxYWMwMVwiXSxbXCJjNzM4YzU2YjAzYjJhYmUxZTgyODFiYWE3NDNmOGY5YThmN2NjNjQzZGYyNmNiZWUzYWIxNTAyNDJiY2JiODkxXCIsXCI4OTNmYjU3ODk1MWFkMjUzN2Y3MThmMmVhY2JmYmJiYjgyMzE0ZWVmNzg4MGNmZTkxN2U3MzVkOTY5OWE4NGMzXCJdLFtcImQ4OTU2MjY1NDhiNjViODFlMjY0Yzc2MzdjOTcyODc3ZDFkNzJlNWYzYTkyNTAxNDM3MmU5ZjY1ODhmNmMxNGJcIixcImZlYmZhYTM4ZjJiYzdlYWU3MjhlYzYwODE4YzM0MGViMDM0MjhkNjMyYmIwNjdlMTc5MzYzZWQ3NWQ3ZDk5MWZcIl0sW1wiYjhkYTk0MDMyYTk1NzUxOGViMGY2NDMzNTcxZTg3NjFjZWZmYzczNjkzZTg0ZWRkNDkxNTBhNTY0ZjY3NmUwM1wiLFwiMjgwNGRmYTQ0ODA1YTFlNGQ3Yzk5Y2M5NzYyODA4YjA5MmNjNTg0ZDk1ZmYzYjUxMTQ4OGU0ZTc0ZWZkZjZlN1wiXSxbXCJlODBmZWExNDQ0MWZiMzNhN2Q4YWRhYjk0NzVkN2ZhYjIwMTllZmZiNTE1NmE3OTJmMWExMTc3OGUzYzBkZjVkXCIsXCJlZWQxZGU3ZjYzOGUwMDc3MWU4OTc2OGNhM2NhOTQ0NzJkMTU1ZTgwYWYzMjJlYTlmY2I0MjkxYjZhYzllYzc4XCJdLFtcImEzMDE2OTdiZGZjZDcwNDMxM2JhNDhlNTFkNTY3NTQzZjJhMTgyMDMxZWZkNjkxNWRkYzA3YmJjYzRlMTYwNzBcIixcIjczNzBmOTFjZmI2N2U0ZjUwODE4MDlmYTI1ZDQwZjliMTczNWRiZjdjMGExMWExMzBjMGQxYTA0MWUxNzdlYTFcIl0sW1wiOTBhZDg1YjM4OWQ2YjkzNjQ2M2Y5ZDA1MTI2NzhkZTIwOGNjMzMwYjExMzA3ZmZmYWI3YWM2M2UzZmIwNGVkNFwiLFwiZTUwN2EzNjIwYTM4MjYxYWZmZGNiZDk0MjcyMjJiODM5YWVmYWJlMTU4Mjg5NGQ5OTFkNGQ0OGNiNmVmMTUwXCJdLFtcIjhmNjhiOWQyZjYzYjVmMzM5MjM5YzFhZDk4MWYxNjJlZTg4YzU2Nzg3MjNlYTMzNTFiN2I0NDRjOWVjNGMwZGFcIixcIjY2MmE5ZjJkYmEwNjM5ODZkZTFkOTBjMmI2YmUyMTVkYmJlYTJjZmU5NTUxMGJmZGYyM2NiZjc5NTAxZmZmODJcIl0sW1wiZTRmM2ZiMDE3NmFmODVkNjVmZjk5ZmY5MTk4YzM2MDkxZjQ4ZTg2NTAzNjgxZTNlNjY4NmZkNTA1MzIzMWUxMVwiLFwiMWU2MzYzM2FkMGVmNGYxYzE2NjFhNmQwZWEwMmI3Mjg2Y2M3ZTc0ZWM5NTFkMWM5ODIyYzM4NTc2ZmViNzNiY1wiXSxbXCI4YzAwZmE5YjE4ZWJmMzMxZWI5NjE1MzdhNDVhNDI2NmM3MDM0ZjJmMGQ0ZTFkMDcxNmZiNmVhZTIwZWFlMjllXCIsXCJlZmE0NzI2N2ZlYTUyMWExYTlkYzM0M2EzNzM2Yzk3NGMyZmFkYWZhODFlMzZjNTRlN2QyYTRjNjY3MDI0MTRiXCJdLFtcImU3YTI2Y2U2OWRkNDgyOWYzZTEwY2VjMGE5ZTk4ZWQzMTQzZDA4NGYzMDhiOTJjMDk5N2ZkZGZjNjBjYjNlNDFcIixcIjJhNzU4ZTMwMGZhNzk4NGI0NzFiMDA2YTFhYWZiYjE4ZDBhNmIyYzA0MjBlODNlMjBlOGE5NDIxY2YyY2ZkNTFcIl0sW1wiYjY0NTllMGVlMzY2MmVjOGQyMzU0MGMyMjNiY2JkYzU3MWNiY2I5NjdkNzk0MjRmM2NmMjllYjNkZTZiODBlZlwiLFwiNjdjODc2ZDA2ZjNlMDZkZTFkYWRmMTZlNTY2MWRiM2M0YjNhZTZkNDhlMzViMmZmMzBiZjBiNjFhNzFiYTQ1XCJdLFtcImQ2OGE4MGM4MjgwYmI4NDA3OTMyMzRhYTExOGYwNjIzMWQ2ZjFmYzY3ZTczYzVhNWRlZGEwZjViNDk2OTQzZThcIixcImRiOGJhOWZmZjRiNTg2ZDAwYzRiMWY5MTc3YjBlMjhiNWIwZTdiOGY3ODQ1Mjk1YTI5NGM4NDI2NmIxMzMxMjBcIl0sW1wiMzI0YWVkN2RmNjVjODA0MjUyZGMwMjcwOTA3YTMwYjA5NjEyYWViOTczNDQ5Y2VhNDA5NTk4MGZjMjhkM2Q1ZFwiLFwiNjQ4YTM2NTc3NGI2MWYyZmYxMzBjMGMzNWFlYzFmNGYxOTIxM2IwYzdlMzMyODQzOTY3MjI0YWY5NmFiN2M4NFwiXSxbXCI0ZGY5YzE0OTE5Y2RlNjFmNmQ1MWRmZGJlNWZlZTVkY2VlYzQxNDNiYThkMWNhODg4ZThiZDM3M2ZkMDU0Yzk2XCIsXCIzNWVjNTEwOTJkODcyODA1MDk3NGMyM2ExZDg1ZDRiNWQ1MDZjZGMyODg0OTAxOTJlYmFjMDZjYWQxMGQ1ZFwiXSxbXCI5YzM5MTlhODRhNDc0ODcwZmFlZDhhOWMxY2M2NjAyMTUyMzQ4OTA1NGQ3ZjAzMDhjYmZjOTljOGFjMWY5OGNkXCIsXCJkZGI4NGYwZjRhNGRkZDU3NTg0ZjA0NGJmMjYwZTY0MTkwNTMyNmY3NmM2NGM4ZTZiZTdlNWUwM2Q0ZmM1OTlkXCJdLFtcIjYwNTcxNzBiMWRkMTJmZGY4ZGUwNWYyODFkOGUwNmJiOTFlMTQ5M2E4YjkxZDRjYzVhMjEzODIxMjBhOTU5ZTVcIixcIjlhMWFmMGIyNmE2YTQ4MDdhZGQ5YTJkYWY3MWRmMjYyNDY1MTUyYmMzZWUyNGM2NWU4OTliZTkzMjM4NWEyYThcIl0sW1wiYTU3NmRmOGUyM2EwODQxMTQyMTQzOWE0NTE4ZGEzMTg4MGNlZjBmYmE3ZDRkZjEyYjFhNjk3M2VlY2I5NDI2NlwiLFwiNDBhNmJmMjBlNzY2NDBiMmM5MmI5N2FmZTU4Y2Q4MmM0MzJlMTBhN2Y1MTRkOWYzZWU4YmUxMWFlMWIyOGVjOFwiXSxbXCI3Nzc4YTc4YzI4ZGVjM2UzMGEwNWZlOTYyOWRlOGMzOGJiMzBkMWY1Y2Y5YTNhMjA4Zjc2Mzg4OWJlNThhZDcxXCIsXCIzNDYyNmQ5YWI1YTViMjJmZjcwOThlMTJmMmZmNTgwMDg3YjM4NDExZmYyNGFjNTYzYjUxM2ZjMWZkOWY0M2FjXCJdLFtcIjkyODk1NWVlNjM3YTg0NDYzNzI5ZmQzMGU3YWZkMmVkNWY5NjI3NGU1YWQ3ZTVjYjA5ZWRhOWMwNmQ5MDNhY1wiLFwiYzI1NjIxMDAzZDNmNDJhODI3Yjc4YTEzMDkzYTk1ZWVhYzNkMjZlZmE4YThkODNmYzUxODBlOTM1YmNkMDkxZlwiXSxbXCI4NWQwZmVmM2VjNmRiMTA5Mzk5MDY0ZjNhMGUzYjI4NTU2NDViNGE5MDdhZDM1NDUyN2FhZTc1MTYzZDgyNzUxXCIsXCIxZjAzNjQ4NDEzYTM4YzBiZTI5ZDQ5NmU1ODJjZjU2NjNlODc1MWU5Njg3NzMzMTU4MmMyMzdhMjRlYjFmOTYyXCJdLFtcImZmMmIwZGNlOTdlZWNlOTdjMWM5YjYwNDE3OThiODVkZmRmYjZkODg4MmRhMjAzMDhmNTQwNDgyNDUyNjA4N2VcIixcIjQ5M2QxM2ZlZjUyNGJhMTg4YWY0YzRkYzU0ZDA3OTM2YzdiN2VkNmZiOTBlMmNlYjJjOTUxZTAxZjBjMjk5MDdcIl0sW1wiODI3ZmJiZTRiMWU4ODBlYTllZDJiMmU2MzAxYjIxMmI1N2YxZWUxNDhjZDZkZDI4NzgwZTVlMmNmODU2ZTI0MVwiLFwiYzYwZjljOTIzYzcyN2IwYjcxYmVmMmM2N2QxZDEyNjg3ZmY3YTYzMTg2OTAzMTY2ZDYwNWI2OGJhZWMyOTNlY1wiXSxbXCJlYWE2NDlmMjFmNTFiZGJhZTdiZTRhZTM0Y2U2ZTUyMTdhNThmZGNlN2Y0N2Y5YWE3ZjNiNThmYTIxMjBlMmIzXCIsXCJiZTMyNzllZDViYmJiMDNhYzY5YTgwZjg5ODc5YWE1YTAxYTZiOTY1ZjEzZjdlNTlkNDdhNTMwNWJhNWFkOTNkXCJdLFtcImU0YTQyZDQzYzVjZjE2OWQ5MzkxZGY2ZGVjZjQyZWU1NDFiNmQ4ZjBjOWExMzc0MDFlMjM2MzJkZGEzNGQyNGZcIixcIjRkOWY5MmU3MTZkMWM3MzUyNmZjOTljY2ZiOGFkMzRjZTg4NmVlZGZhOGQ4ZTRmMTNhN2Y3MTMxZGViYTk0MTRcIl0sW1wiMWVjODBmZWYzNjBjYmRkOTU0MTYwZmFkYWIzNTJiNmI5MmI1MzU3NmE4OGZlYTQ5NDcxNzNiOWQ0MzAwYmYxOVwiLFwiYWVlZmU5Mzc1NmI1MzQwZDJmM2E0OTU4YTdhYmJmNWUwMTQ2ZTc3ZjYyOTVhMDdiNjcxY2RjMWNjMTA3Y2VmZFwiXSxbXCIxNDZhNzc4YzA0NjcwYzJmOTFiMDBhZjQ2ODBkZmE4YmNlMzQ5MDcxN2Q1OGJhODg5ZGRiNTkyODM2NjY0MmJlXCIsXCJiMzE4ZTBlYzMzNTQwMjhhZGQ2Njk4MjdmOWQ0YjI4NzBhYWE5NzFkMmY3ZTVlZDFkMGIyOTc0ODNkODNlZmQwXCJdLFtcImZhNTBjMGY2MWQyMmU1ZjA3ZTNhY2ViYjFhYTA3YjEyOGQwMDEyMjA5YTI4Yjk3NzZkNzZhODc5MzE4MGVlZjlcIixcIjZiODRjNjkyMjM5N2ViYTliNzJjZDI4NzIyODFhNjhhNWU2ODMyOTNhNTdhMjEzYjM4Y2Q4ZDdkM2Y0ZjI4MTFcIl0sW1wiZGExZDYxZDBjYTcyMWExMWIxYTViZjZiN2Q4OGU4NDIxYTI4OGFiNWQ1YmJhNTIyMGU1M2QzMmI1ZjA2N2VjMlwiLFwiODE1N2Y1NWE3Yzk5MzA2Yzc5YzA3NjYxNjFjOTFlMjk2NmE3Mzg5OWQyNzliNDhhNjU1ZmJhMGYxYWQ4MzZmMVwiXSxbXCJhOGUyODJmZjBjOTcwNjkwNzIxNWZmOThlOGZkNDE2NjE1MzExZGUwNDQ2ZjFlMDYyYTczYjA2MTBkMDY0ZTEzXCIsXCI3Zjk3MzU1YjhkYjgxYzA5YWJmYjdmM2M1YjI1MTU4ODhiNjc5YTNlNTBkZDZiZDZjZWY3YzczMTExZjRjYzBjXCJdLFtcIjE3NGE1M2I5YzlhMjg1ODcyZDM5ZTU2ZTY5MTNjYWIxNWQ1OWIxZmE1MTI1MDhjMDIyZjM4MmRlODMxOTQ5N2NcIixcImNjYzlkYzM3YWJmYzljMTY1N2I0MTU1ZjJjNDdmOWU2NjQ2YjNhMWQ4Y2I5ODU0MzgzZGExM2FjMDc5YWZhNzNcIl0sW1wiOTU5Mzk2OTgxOTQzNzg1YzNkM2U1N2VkZjUwMThjZGJlMDM5ZTczMGU0OTE4YjNkODg0ZmRmZjA5NDc1YjdiYVwiLFwiMmU3ZTU1Mjg4OGMzMzFkZDhiYTAzODZhNGI5Y2Q2ODQ5YzY1M2Y2NGM4NzA5Mzg1ZTliOGFiZjg3NTI0ZjJmZFwiXSxbXCJkMmE2M2E1MGFlNDAxZTU2ZDY0NWExMTUzYjEwOWE4ZmNjYTBhNDNkNTYxZmJhMmRiYjUxMzQwYzlkODJiMTUxXCIsXCJlODJkODZmYjY0NDNmY2I3NTY1YWVlNThiMjk0ODIyMGE3MGY3NTBhZjQ4NGNhNTJkNDE0MjE3NGRjZjg5NDA1XCJdLFtcIjY0NTg3ZTIzMzU0NzFlYjg5MGVlNzg5NmQ3Y2ZkYzg2NmJhY2JkYmQzODM5MzE3YjM0MzZmOWI0NTYxN2UwNzNcIixcImQ5OWZjZGQ1YmY2OTAyZTJhZTk2ZGQ2NDQ3YzI5OWExODViOTBhMzkxMzNhZWFiMzU4Mjk5ZTVlOWZhZjY1ODlcIl0sW1wiODQ4MWJkZTBlNGU0ZDg4NWIzYTU0NmQzZTU0OWRlMDQyZjBhYTZjZWEyNTBlN2ZkMzU4ZDZjODZkZDQ1ZTQ1OFwiLFwiMzhlZTdiOGNiYTU0MDRkZDg0YTI1YmYzOWNlY2IyY2E5MDBhNzljNDJiMjYyZTU1NmQ2NGIxYjU5Nzc5MDU3ZVwiXSxbXCIxMzQ2NGE1N2E3ODEwMmFhNjJiNjk3OWFlODE3ZjQ2MzdmZmNmZWQzYzRiMWNlMzBiY2Q2MzAzZjZjYWY2NjZiXCIsXCI2OWJlMTU5MDA0NjE0NTgwZWY3ZTQzMzQ1M2NjYjBjYTQ4ZjMwMGE4MWQwOTQyZTEzZjQ5NWE5MDdmNmVjYzI3XCJdLFtcImJjNGE5ZGY1YjcxM2ZlMmU5YWVmNDMwYmNjMWRjOTdhMGNkOWNjZWRlMmYyODU4OGNhZGEzYTBkMmQ4M2YzNjZcIixcImQzYTgxY2E2ZTc4NWMwNjM4MzkzN2FkZjRiNzk4Y2FhNmU4YTlmYmZhNTQ3YjE2ZDc1OGQ2NjY1ODFmMzNjMVwiXSxbXCI4YzI4YTk3YmY4Mjk4YmMwZDIzZDhjNzQ5NDUyYTMyZTY5NGI2NWUzMGE5NDcyYTM5NTRhYjMwZmU1MzI0Y2FhXCIsXCI0MGEzMDQ2M2EzMzA1MTkzMzc4ZmVkZjMxZjdjYzBlYjdhZTc4NGYwNDUxY2I5NDU5ZTcxZGM3M2NiZWY5NDgyXCJdLFtcIjhlYTk2NjYxMzk1MjdhOGMxZGQ5NGNlNGYwNzFmZDIzYzhiMzUwYzVhNGJiMzM3NDhjNGJhMTExZmFjY2FlMFwiLFwiNjIwZWZhYmJjOGVlMjc4MmUyNGU3YzBjZmI5NWM1ZDczNWI3ODNiZTljZjBmOGU5NTVhZjM0YTMwZTYyYjk0NVwiXSxbXCJkZDM2MjVmYWVmNWJhMDYwNzQ2Njk3MTZiYmQzNzg4ZDg5YmRkZTgxNTk1OTk2ODA5MmY3NmNjNGViOWE5Nzg3XCIsXCI3YTE4OGZhMzUyMGUzMGQ0NjFkYTI1MDEwNDU3MzFjYTk0MTQ2MTk4Mjg4MzM5NTkzN2Y2OGQwMGM2NDRhNTczXCJdLFtcImY3MTBkNzlkOWViOTYyMjk3ZTRmNjIzMmI0MGU4ZjdmZWIyYmM2MzgxNDYxNGQ2OTJjMTJkZTc1MjQwODIyMWVcIixcImVhOThlNjcyMzJkM2IzMjk1ZDNiNTM1NTMyMTE1Y2NhYzg2MTJjNzIxODUxNjE3NTI2YWU0N2E5Yzc3YmZjODJcIl1dfSxuYWY6e3duZDo3LHBvaW50czpbW1wiZjkzMDhhMDE5MjU4YzMxMDQ5MzQ0Zjg1Zjg5ZDUyMjliNTMxYzg0NTgzNmY5OWIwODYwMWYxMTNiY2UwMzZmOVwiLFwiMzg4ZjdiMGY2MzJkZTgxNDBmZTMzN2U2MmEzN2YzNTY2NTAwYTk5OTM0YzIyMzFiNmNiOWZkNzU4NGI4ZTY3MlwiXSxbXCIyZjhiZGU0ZDFhMDcyMDkzNTViNGE3MjUwYTVjNTEyOGU4OGI4NGJkZGM2MTlhYjdjYmE4ZDU2OWIyNDBlZmU0XCIsXCJkOGFjMjIyNjM2ZTVlM2Q2ZDRkYmE5ZGRhNmM5YzQyNmY3ODgyNzFiYWIwZDY4NDBkY2E4N2QzYWE2YWM2MmQ2XCJdLFtcIjVjYmRmMDY0NmU1ZGI0ZWFhMzk4ZjM2NWYyZWE3YTBlM2Q0MTliN2UwMzMwZTM5Y2U5MmJkZGVkY2FjNGY5YmNcIixcIjZhZWJjYTQwYmEyNTU5NjBhMzE3OGQ2ZDg2MWE1NGRiYTgxM2QwYjgxM2ZkZTdiNWE1MDgyNjI4MDg3MjY0ZGFcIl0sW1wiYWNkNDg0ZTJmMGM3ZjY1MzA5YWQxNzhhOWY1NTlhYmRlMDk3OTY5NzRjNTdlNzE0YzM1ZjExMGRmYzI3Y2NiZVwiLFwiY2MzMzg5MjFiMGE3ZDlmZDY0MzgwOTcxNzYzYjYxZTlhZGQ4ODhhNDM3NWY4ZTBmMDVjYzI2MmFjNjRmOWMzN1wiXSxbXCI3NzRhZTdmODU4YTk0MTFlNWVmNDI0NmI3MGM2NWFhYzU2NDk5ODBiZTVjMTc4OTFiYmVjMTc4OTVkYTAwOGNiXCIsXCJkOTg0YTAzMmViNmI1ZTE5MDI0M2RkNTZkN2I3YjM2NTM3MmRiMWUyZGZmOWQ2YTgzMDFkNzRjOWM5NTNjNjFiXCJdLFtcImYyODc3M2MyZDk3NTI4OGJjN2QxZDIwNWMzNzQ4NjUxYjA3NWZiYzY2MTBlNThjZGRlZWRkZjhmMTk0MDVhYThcIixcImFiMDkwMmU4ZDg4MGE4OTc1ODIxMmViNjVjZGFmNDczYTFhMDZkYTUyMWZhOTFmMjliNWNiNTJkYjAzZWQ4MVwiXSxbXCJkNzkyNGQ0ZjdkNDNlYTk2NWE0NjVhZTMwOTVmZjQxMTMxZTU5NDZmM2M4NWY3OWU0NGFkYmNmOGUyN2UwODBlXCIsXCI1ODFlMjg3MmE4NmM3MmE2ODM4NDJlYzIyOGNjNmRlZmVhNDBhZjJiZDg5NmQzYTVjNTA0ZGM5ZmY2YTI2YjU4XCJdLFtcImRlZmRlYTRjZGI2Nzc3NTBhNDIwZmVlODA3ZWFjZjIxZWI5ODk4YWU3OWI5NzY4NzY2ZTRmYWEwNGEyZDRhMzRcIixcIjQyMTFhYjA2OTQ2MzUxNjhlOTk3YjBlYWQyYTkzZGFlY2VkMWY0YTA0YTk1YzBmNmNmYjE5OWY2OWU1NmViNzdcIl0sW1wiMmI0ZWEwYTc5N2E0NDNkMjkzZWY1Y2ZmNDQ0ZjQ5NzlmMDZhY2ZlYmQ3ZTg2ZDI3NzQ3NTY1NjEzODM4NWI2Y1wiLFwiODVlODliYzAzNzk0NWQ5M2IzNDMwODNiNWExYzg2MTMxYTAxZjYwYzUwMjY5NzYzYjU3MGM4NTRlNWMwOWI3YVwiXSxbXCIzNTJiYmY0YTRjZGQxMjU2NGY5M2ZhMzMyY2UzMzMzMDFkOWFkNDAyNzFmODEwNzE4MTM0MGFlZjI1YmU1OWQ1XCIsXCIzMjFlYjQwNzUzNDhmNTM0ZDU5YzE4MjU5ZGRhM2UxZjRhMWIzYjJlNzFiMTAzOWM2N2JkM2Q4YmNmODE5OThjXCJdLFtcIjJmYTIxMDRkNmIzOGQxMWIwMjMwMDEwNTU5ODc5MTI0ZTQyYWI4ZGZlZmY1ZmYyOWRjOWNkYWRkNGVjYWNjM2ZcIixcIjJkZTEwNjgyOTVkZDg2NWI2NDU2OTMzNWJkNWRkODAxODFkNzBlY2ZjODgyNjQ4NDIzYmE3NmI1MzJiN2Q2N1wiXSxbXCI5MjQ4Mjc5YjA5YjRkNjhkYWIyMWE5YjA2NmVkZGE4MzI2M2MzZDg0ZTA5NTcyZTI2OWNhMGNkN2Y1NDUzNzE0XCIsXCI3MzAxNmY3YmYyMzRhYWRlNWQxYWE3MWJkZWEyYjFmZjNmYzBkZTJhODg3OTEyZmZlNTRhMzJjZTk3Y2IzNDAyXCJdLFtcImRhZWQ0ZjJiZTNhOGJmMjc4ZTcwMTMyZmIwYmViNzUyMmY1NzBlMTQ0YmY2MTVjMDdlOTk2ZDQ0M2RlZTg3MjlcIixcImE2OWRjZTRhN2Q2Yzk4ZThkNGExYWNhODdlZjhkNzAwM2Y4M2MyMzBmM2FmYTcyNmFiNDBlNTIyOTBiZTFjNTVcIl0sW1wiYzQ0ZDEyYzcwNjVkODEyZThhY2YyOGQ3Y2JiMTlmOTAxMWVjZDllOWZkZjI4MWIwZTZhM2I1ZTg3ZDIyZTdkYlwiLFwiMjExOWE0NjBjZTMyNmNkYzc2YzQ1OTI2Yzk4MmZkYWMwZTEwNmU4NjFlZGY2MWM1YTAzOTA2M2YwZTBlNjQ4MlwiXSxbXCI2YTI0NWJmNmRjNjk4NTA0Yzg5YTIwY2ZkZWQ2MDg1MzE1MmI2OTUzMzZjMjgwNjNiNjFjNjVjYmQyNjllNmI0XCIsXCJlMDIyY2Y0MmMyYmQ0YTcwOGIzZjUxMjZmMTZhMjRhZDhiMzNiYTQ4ZDA0MjNiNmVmZDVlNjM0ODEwMGQ4YTgyXCJdLFtcIjE2OTdmZmE2ZmQ5ZGU2MjdjMDc3ZTNkMmZlNTQxMDg0Y2UxMzMwMGIwYmVjMTE0NmY5NWFlNTdmMGQwYmQ2YTVcIixcImI5YzM5OGYxODY4MDZmNWQyNzU2MTUwNmU0NTU3NDMzYTJjZjE1MDA5ZTQ5OGFlN2FkZWU5ZDYzZDAxYjIzOTZcIl0sW1wiNjA1YmRiMDE5OTgxNzE4Yjk4NmQwZjA3ZTgzNGNiMGQ5ZGViODM2MGZmYjdmNjFkZjk4MjM0NWVmMjdhNzQ3OVwiLFwiMjk3MmQyZGU0ZjhkMjA2ODFhNzhkOTNlYzk2ZmUyM2MyNmJmYWU4NGZiMTRkYjQzYjAxZTFlOTA1NmI4YzQ5XCJdLFtcIjYyZDE0ZGFiNDE1MGJmNDk3NDAyZmRjNDVhMjE1ZTEwZGNiMDFjMzU0OTU5YjEwY2ZlMzFjN2U5ZDg3ZmYzM2RcIixcIjgwZmMwNmJkOGNjNWIwMTA5ODA4OGExOTUwZWVkMGRiMDFhYTEzMjk2N2FiNDcyMjM1ZjU2NDI0ODNiMjVlYWZcIl0sW1wiODBjNjBhZDAwNDBmMjdkYWRlNWI0YjA2YzQwOGU1NmIyYzUwZTlmNTZiOWI4YjQyNWU1NTVjMmY4NjMwOGI2ZlwiLFwiMWMzODMwM2YxY2M1YzMwZjI2ZTY2YmFkN2ZlNzJmNzBhNjVlZWQ0Y2JlNzAyNGViMWFhMDFmNTY0MzBiZDU3YVwiXSxbXCI3YTkzNzVhZDYxNjdhZDU0YWE3NGM2MzQ4Y2M1NGQzNDRjYzVkYzk0ODdkODQ3MDQ5ZDVlYWJiMGZhMDNjOGZiXCIsXCJkMGUzZmE5ZWNhODcyNjkwOTU1OWUwZDc5MjY5MDQ2YmRjNTllYTEwYzcwY2UyYjAyZDQ5OWVjMjI0ZGM3ZjdcIl0sW1wiZDUyOGVjZDliNjk2YjU0YzkwN2E5ZWQwNDU0NDdhNzliYjQwOGVjMzliNjhkZjUwNGJiNTFmNDU5YmMzZmZjOVwiLFwiZWVjZjQxMjUzMTM2ZTVmOTk5NjZmMjE4ODFmZDY1NmViYzQzNDU0MDVjNTIwZGJjMDYzNDY1YjUyMTQwOTkzM1wiXSxbXCI0OTM3MGE0YjVmNDM0MTJlYTI1ZjUxNGU4ZWNkYWQwNTI2NjExNWU0YTdlY2IxMzg3MjMxODA4ZjhiNDU5NjNcIixcIjc1OGYzZjQxYWZkNmVkNDI4YjMwODFiMDUxMmZkNjJhNTRjM2YzYWZiYjViNjc2NGI2NTMwNTJhMTI5NDljOWFcIl0sW1wiNzdmMjMwOTM2ZWU4OGNiYmQ3M2RmOTMwZDY0NzAyZWY4ODFkODExZTBlMTQ5OGUyZjFjMTNlYjFmYzM0NWQ3NFwiLFwiOTU4ZWY0MmE3ODg2YjY0MDBhMDgyNjZlOWJhMWIzNzg5NmM5NTMzMGQ5NzA3N2NiYmU4ZWIzYzc2NzFjNjBkNlwiXSxbXCJmMmRhYzk5MWNjNGNlNGI5ZWE0NDg4N2U1YzdjMGJjZTU4YzgwMDc0YWI5ZDRkYmFlYjI4NTMxYjc3MzlmNTMwXCIsXCJlMGRlZGM5YjNiMmY4ZGFkNGRhMWYzMmRlYzI1MzFkZjllYjVmYmViMDU5OGU0ZmQxYTExN2RiYTcwM2EzYzM3XCJdLFtcIjQ2M2IzZDlmNjYyNjIxZmIxYjRiZThmYmJlMjUyMDEyNWEyMTZjZGZjOWRhZTNkZWJjYmE0ODUwYzY5MGQ0NWJcIixcIjVlZDQzMGQ3OGMyOTZjMzU0MzExNDMwNmRkODYyMmQ3YzYyMmUyN2M5NzBhMWRlMzFjYjM3N2IwMWFmNzMwN2VcIl0sW1wiZjE2ZjgwNDI0NGU0NmUyYTA5MjMyZDRhZmYzYjU5OTc2Yjk4ZmFjMTQzMjhhMmQxYTMyNDk2YjQ5OTk4ZjI0N1wiLFwiY2VkYWJkOWI4MjIwM2Y3ZTEzZDIwNmZjZGY0ZTMzZDkyYTZjNTNjMjZlNWNjZTI2ZDY1Nzk5NjJjNGUzMWRmNlwiXSxbXCJjYWY3NTQyNzJkYzg0NTYzYjAzNTJiN2ExNDMxMWFmNTVkMjQ1MzE1YWNlMjdjNjUzNjllMTVmNzE1MWQ0MWQxXCIsXCJjYjQ3NDY2MGVmMzVmNWYyYTQxYjY0M2ZhNWU0NjA1NzVmNGZhOWI3OTYyMjMyYTVjMzJmOTA4MzE4YTA0NDc2XCJdLFtcIjI2MDBjYTRiMjgyY2I5ODZmODVkMGYxNzA5OTc5ZDhiNDRhMDljMDdjYjg2ZDdjMTI0NDk3YmM4NmYwODIxMjBcIixcIjQxMTliODg3NTNjMTViZDZhNjkzYjAzZmNkZGJiNDVkNWFjNmJlNzRhYjVmMGVmNDRiMGJlOTQ3NWE3ZTRiNDBcIl0sW1wiNzYzNWNhNzJkN2U4NDMyYzMzOGVjNTNjZDEyMjIwYmMwMWM0ODY4NWUyNGY3ZGM4YzYwMmE3NzQ2OTk4ZTQzNVwiLFwiOTFiNjQ5NjA5NDg5ZDYxM2QxZDVlNTkwZjc4ZTZkNzRlY2ZjMDYxZDU3MDQ4YmFkOWU3NmYzMDJjNWI5YzYxXCJdLFtcIjc1NGUzMjM5ZjMyNTU3MGNkYmJmNGE4N2RlZWU4YTY2YjdmMmIzMzQ3OWQ0NjhmYmMxYTUwNzQzYmY1NmNjMThcIixcIjY3M2ZiODZlNWJkYTMwZmIzY2QwZWQzMDRlYTQ5YTAyM2VlMzNkMDE5N2E2OTVkMGM1ZDk4MDkzYzUzNjY4M1wiXSxbXCJlM2U2YmQxMDcxYTFlOTZhZmY1Nzg1OWM4MmQ1NzBmMDMzMDgwMDY2MWQxYzk1MmY5ZmUyNjk0NjkxZDliOWU4XCIsXCI1OWM5ZTBiYmEzOTRlNzZmNDBjMGFhNTgzNzlhM2NiNmE1YTIyODM5OTNlOTBjNDE2NzAwMmFmNDkyMGUzN2Y1XCJdLFtcIjE4NmI0ODNkMDU2YTAzMzgyNmFlNzNkODhmNzMyOTg1YzRjY2IxZjMyYmEzNWY0YjRjYzQ3ZmRjZjA0YWE2ZWJcIixcIjNiOTUyZDMyYzY3Y2Y3N2UyZTE3NDQ2ZTIwNDE4MGFiMjFmYjgwOTA4OTUxMzhiNGE0YTc5N2Y4NmU4MDg4OGJcIl0sW1wiZGY5ZDcwYTZiOTg3NmNlNTQ0Yzk4NTYxZjRiZTRmNzI1NDQyZTZkMmI3MzdkOWM5MWE4MzIxNzI0Y2UwOTYzZlwiLFwiNTVlYjJkYWZkODRkNmNjZDVmODYyYjc4NWRjMzlkNGFiMTU3MjIyNzIwZWY5ZGEyMTdiOGM0NWNmMmJhMjQxN1wiXSxbXCI1ZWRkNWNjMjNjNTFlODdhNDk3Y2E4MTVkNWRjZTBmOGFiNTI1NTRmODQ5ZWQ4OTk1ZGU2NGM1ZjM0Y2U3MTQzXCIsXCJlZmFlOWM4ZGJjMTQxMzA2NjFlOGNlYzAzMGM4OWFkMGMxM2M2NmMwZDE3YTI5MDVjZGM3MDZhYjczOTlhODY4XCJdLFtcIjI5MDc5OGMyYjY0NzY4MzBkYTEyZmUwMjI4N2U5ZTc3N2FhM2ZiYTFjMzU1YjE3YTcyMmQzNjJmODQ2MTRmYmFcIixcImUzOGRhNzZkY2Q0NDA2MjE5ODhkMDBiY2Y3OWFmMjVkNWIyOWMwOTRkYjJhMjMxNDZkMDAzYWZkNDE5NDNlN2FcIl0sW1wiYWYzYzQyM2E5NWQ5ZjViMzA1NDc1NGVmYTE1MGFjMzljZDI5NTUyZmUzNjAyNTczNjJkZmRlY2VmNDA1M2I0NVwiLFwiZjk4YTNmZDgzMWViMmI3NDlhOTNiMGU2ZjM1Y2ZiNDBjOGNkNWFhNjY3YTE1NTgxYmMyZmVkZWQ0OThmZDljNlwiXSxbXCI3NjZkYmIyNGQxMzRlNzQ1Y2NjYWEyOGM5OWJmMjc0OTA2YmI2NmIyNmRjZjk4ZGY4ZDJmZWQ1MGQ4ODQyNDlhXCIsXCI3NDRiMTE1MmVhY2JlNWUzOGRjYzg4Nzk4MGRhMzhiODk3NTg0YTY1ZmEwNmNlZGQyYzkyNGY5N2NiYWM1OTk2XCJdLFtcIjU5ZGJmNDZmOGM5NDc1OWJhMjEyNzdjMzM3ODRmNDE2NDVmN2I0NGY2YzU5NmE1OGNlOTJlNjY2MTkxYWJlM2VcIixcImM1MzRhZDQ0MTc1ZmJjMzAwZjRlYTZjZTY0ODMwOWEwNDJjZTczOWE3OTE5Nzk4Y2Q4NWUyMTZjNGEzMDdmNmVcIl0sW1wiZjEzYWRhOTUxMDNjNDUzNzMwNWU2OTFlNzRlOWE0YThkZDY0N2U3MTFhOTVlNzNjYjYyZGM2MDE4Y2ZkODdiOFwiLFwiZTEzODE3YjQ0ZWUxNGRlNjYzYmY0YmM4MDgzNDFmMzI2OTQ5ZTIxYTZhNzVjMjU3MDc3ODQxOWJkYWY1NzMzZFwiXSxbXCI3NzU0YjRmYTBlOGFjZWQwNmQ0MTY3YTJjNTljY2E0Y2RhMTg2OWMwNmViYWRmYjY0ODg1NTAwMTVhODg1MjJjXCIsXCIzMGU5M2U4NjRlNjY5ZDgyMjI0Yjk2N2MzMDIwYjhmYThkMWU0ZTM1MGI2Y2JjYzUzN2E0OGI1Nzg0MTE2M2EyXCJdLFtcIjk0OGRjYWRmNTk5MGUwNDhhYTM4NzRkNDZhYmVmOWQ3MDE4NThmOTVkZTgwNDFkMmE2ODI4Yzk5ZTIyNjI1MTlcIixcImU0OTFhNDI1MzdmNmU1OTdkNWQyOGEzMjI0YjFiYzI1ZGY5MTU0ZWZiZDJlZjFkMmNiYmEyY2FlNTM0N2Q1N2VcIl0sW1wiNzk2MjQxNDQ1MGM3NmMxNjg5YzdiNDhmODIwMmVjMzdmYjIyNGNmNWFjMGJmYTE1NzAzMjhhOGEzZDdjNzdhYlwiLFwiMTAwYjYxMGVjNGZmYjQ3NjBkNWMxZmMxMzNlZjZmNmIxMjUwN2EwNTFmMDRhYzU3NjBhZmE1YjI5ZGI4MzQzN1wiXSxbXCIzNTE0MDg3ODM0OTY0YjU0YjE1YjE2MDY0NGQ5MTU0ODVhMTY5NzcyMjViODg0N2JiMGRkMDg1MTM3ZWM0N2NhXCIsXCJlZjBhZmJiMjA1NjIwNTQ0OGUxNjUyYzQ4ZTgxMjdmYzYwMzllNzdjMTVjMjM3OGI3ZTdkMTVhMGRlMjkzMzExXCJdLFtcImQzY2MzMGFkNmI0ODNlNGJjNzljZTJjOWRkOGJjNTQ5OTNlOTQ3ZWI4ZGY3ODdiNDQyOTQzZDNmN2I1MjdlYWZcIixcIjhiMzc4YTIyZDgyNzI3OGQ4OWM1ZTliZThmOTUwOGFlM2MyYWQ0NjI5MDM1ODYzMGFmYjM0ZGIwNGVlZGUwYTRcIl0sW1wiMTYyNGQ4NDc4MDczMjg2MGNlMWM3OGZjYmZlZmUwOGIyYjI5ODIzZGI5MTNmNjQ5Mzk3NWJhMGZmNDg0NzYxMFwiLFwiNjg2NTFjZjliNmRhOTAzZTA5MTQ0NDhjNmNkOWQ0Y2E4OTY4NzhmNTI4MmJlNGM4Y2MwNmUyYTQwNDA3ODU3NVwiXSxbXCI3MzNjZTgwZGE5NTVhOGEyNjkwMmM5NTYzM2U2MmE5ODUxOTI0NzRiNWFmMjA3ZGE2ZGY3YjRmZDVmYzYxY2Q0XCIsXCJmNTQzNWEyYmQyYmFkZjdkNDg1YTRkOGI4ZGI5ZmNjZTNlMWVmOGUwMjAxZTQ1NzhjNTQ2NzNiYzFkYzVlYTFkXCJdLFtcIjE1ZDk0NDEyNTQ5NDUwNjRjZjFhMWMzM2JiZDNiNDlmODk2NmM1MDkyMTcxZTY5OWVmMjU4ZGZhYjgxYzA0NWNcIixcImQ1NmViMzBiNjk0NjNlNzIzNGY1MTM3YjczYjg0MTc3NDM0ODAwYmFjZWJmYzY4NWZjMzdiYmU5ZWZlNDA3MGRcIl0sW1wiYTFkMGZjZjJlYzlkZTY3NWI2MTIxMzZlNWNlNzBkMjcxYzIxNDE3YzlkMmI4YWFhYWMxMzg1OTlkMDcxNzk0MFwiLFwiZWRkNzdmNTBiY2I1YTNjYWIyZTkwNzM3MzA5NjY3ZjI2NDE0NjJhNTQwNzBmM2Q1MTkyMTJkMzljMTk3YTYyOVwiXSxbXCJlMjJmYmUxNWMwYWY4Y2NjNTc4MGMwNzM1Zjg0ZGJlOWE3OTBiYWRlZTgyNDVjMDZjN2NhMzczMzFjYjM2OTgwXCIsXCJhODU1YmFiYWQ1Y2Q2MGM4OGI0MzBhNjlmNTNhMWE3YTM4Mjg5MTU0OTY0Nzk5YmU0M2QwNmQ3N2QzMWRhMDZcIl0sW1wiMzExMDkxZGQ5ODYwZThlMjBlZTEzNDczYzExNTVmNWY2OTYzNWUzOTQ3MDRlYWE3NDAwOTQ1MjI0NmNmYTliM1wiLFwiNjZkYjY1NmY4N2QxZjA0ZmZmZDFmMDQ3ODhjMDY4MzA4NzFlYzVhNjRmZWVlNjg1YmQ4MGYwYjEyODZkODM3NFwiXSxbXCIzNGMxZmQwNGQzMDFiZTg5YjMxYzA0NDJkM2U2YWMyNDg4MzkyOGI0NWE5MzQwNzgxODY3ZDQyMzJlYzJkYmRmXCIsXCI5NDE0Njg1ZTk3YjFiNTk1NGJkNDZmNzMwMTc0MTM2ZDU3ZjFjZWViNDg3NDQzZGM1MzIxODU3YmE3M2FiZWVcIl0sW1wiZjIxOWVhNWQ2YjU0NzAxYzFjMTRkZTViNTU3ZWI0MmE4ZDEzZjNhYmJjZDA4YWZmY2MyYTVlNmIwNDliOGQ2M1wiLFwiNGNiOTU5NTdlODNkNDBiMGY3M2FmNDU0NGNjY2Y2YjFmNGIwOGQzYzA3YjI3ZmI4ZDhjMjk2MmE0MDA3NjZkMVwiXSxbXCJkN2I4NzQwZjc0YThmYmFhYjFmNjgzZGI4ZjQ1ZGUyNjU0M2E1NDkwYmNhNjI3MDg3MjM2OTEyNDY5YTBiNDQ4XCIsXCJmYTc3OTY4MTI4ZDljOTJlZTEwMTBmMzM3YWQ0NzE3ZWZmMTVkYjVlZDNjMDQ5YjM0MTFlMDMxNWVhYTQ1OTNiXCJdLFtcIjMyZDMxYzIyMmY4ZjZmMGVmODZmN2M5OGQzYTMzMzVlYWQ1YmNkMzJhYmRkOTQyODlmZTRkMzA5MWFhODI0YmZcIixcIjVmMzAzMmY1ODkyMTU2ZTM5Y2NkM2Q3OTE1YjllMWRhMmU2ZGFjOWU2ZjI2ZTk2MTExOGQxNGI4NDYyZTE2NjFcIl0sW1wiNzQ2MWYzNzE5MTRhYjMyNjcxMDQ1YTE1NWQ5ODMxZWE4NzkzZDc3Y2Q1OTU5MmM0MzQwZjg2Y2JjMTgzNDdiNVwiLFwiOGVjMGJhMjM4Yjk2YmVjMGNiZGRkY2FlMGFhNDQyNTQyZWVlMWZmNTBjOTg2ZWE2YjM5ODQ3YjNjYzA5MmZmNlwiXSxbXCJlZTA3OWFkYjFkZjE4NjAwNzQzNTZhMjVhYTM4MjA2YTZkNzE2YjJjM2U2NzQ1M2QyODc2OThiYWQ3YjJiMmQ2XCIsXCI4ZGMyNDEyYWFmZTNiZTVjNGM1ZjM3ZTBlY2M1ZjlmNmE0NDY5ODlhZjA0YzRlMjVlYmFhYzQ3OWVjMWM4YzFlXCJdLFtcIjE2ZWM5M2U0NDdlYzgzZjA0NjdiMTgzMDJlZTYyMGY3ZTY1ZGUzMzE4NzRjOWRjNzJiZmQ4NjE2YmE5ZGE2YjVcIixcIjVlNDYzMTE1MGU2MmZiNDBkMGU4YzJhN2NhNTgwNGEzOWQ1ODE4NmE1MGU0OTcxMzk2MjY3NzhlMjViMDY3NGRcIl0sW1wiZWFhNWY5ODBjMjQ1ZjZmMDM4OTc4MjkwYWZhNzBiNmJkODg1NTg5N2Y5OGI2YWE0ODViOTYwNjVkNTM3YmQ5OVwiLFwiZjY1ZjVkM2UyOTJjMmUwODE5YTUyODM5MWM5OTQ2MjRkNzg0ODY5ZDdlNmVhNjdmYjE4MDQxMDI0ZWRjMDdkY1wiXSxbXCI3OGM5NDA3NTQ0YWMxMzI2OTJlZTE5MTBhMDI0Mzk5NThhZTA0ODc3MTUxMzQyZWE5NmM0YjZiMzVhNDlmNTFcIixcImYzZTAzMTkxNjllYjliODVkNTQwNDc5NTUzOWE1ZTY4ZmExZmJkNTgzYzA2NGQyNDYyYjY3NWYxOTRhM2RkYjRcIl0sW1wiNDk0ZjRiZTIxOWExYTc3MDE2ZGNkODM4NDMxYWVhMDAwMWNkYzhhZTdhNmZjNjg4NzI2NTc4ZDk3MDI4NTdhNVwiLFwiNDIyNDJhOTY5MjgzYTVmMzM5YmE3ZjA3NWUzNmJhMmFmOTI1Y2UzMGQ3NjdlZDZlNTVmNGIwMzE4ODBkNTYyY1wiXSxbXCJhNTk4YTgwMzBkYTZkODZjNmJjN2YyZjUxNDRlYTU0OWQyODIxMWVhNThmYWE3MGViZjRjMWU2NjVjMWZlOWI1XCIsXCIyMDRiNWQ2Zjg0ODIyYzMwN2U0YjRhNzE0MDczN2FlYzIzZmM2M2I2NWIzNWY4NmExMDAyNmRiZDJkODY0ZTZiXCJdLFtcImM0MTkxNjM2NWFiYjJiNWQwOTE5MmY1ZjJkYmVhZmVjMjA4ZjAyMGYxMjU3MGExODRkYmFkYzNlNTg1OTU5OTdcIixcIjRmMTQzNTFkMDA4N2VmYTQ5ZDI0NWIzMjg5ODQ5ODlkNWNhZjk0NTBmMzRiZmMwZWQxNmU5NmI1OGZhOTkxM1wiXSxbXCI4NDFkNjA2M2E1ODZmYTQ3NWE3MjQ2MDRkYTAzYmM1YjkyYTJlMGQyZTBhMzZhY2ZlNGM3M2E1NTE0NzQyODgxXCIsXCI3Mzg2N2Y1OWMwNjU5ZTgxOTA0ZjlhMWM3NTQzNjk4ZTYyNTYyZDY3NDRjMTY5Y2U3YTM2ZGUwMWE4ZDYxNTRcIl0sW1wiNWU5NWJiMzk5YTY5NzFkMzc2MDI2OTQ3Zjg5YmRlMmYyODJiMzM4MTA5MjhiZTRkZWQxMTJhYzRkNzBlMjBkNVwiLFwiMzlmMjNmMzY2ODA5MDg1YmVlYmZjNzExODEzMTM3NzVhOTljOWFlZDdkOGJhMzhiMTYxMzg0Yzc0NjAxMjg2NVwiXSxbXCIzNmU0NjQxYTUzOTQ4ZmQ0NzZjMzlmOGE5OWZkOTc0ZTVlYzA3NTY0YjUzMTVkOGJmOTk0NzFiY2EwZWYyZjY2XCIsXCJkMjQyNGIxYjFhYmU0ZWI4MTY0MjI3YjA4NWM5YWE5NDU2ZWExMzQ5M2ZkNTYzZTA2ZmQ1MWNmNTY5NGM3OGZjXCJdLFtcIjMzNjU4MWVhN2JmYmJiMjkwYzE5MWEyZjUwN2E0MWNmNTY0Mzg0MjE3MGU5MTRmYWVhYjI3YzJjNTc5ZjcyNlwiLFwiZWFkMTIxNjg1OTVmZTFiZTk5MjUyMTI5YjZlNTZiMzM5MWY3YWIxNDEwY2QxZTBlZjNkY2RjYWJkMmZkYTIyNFwiXSxbXCI4YWI4OTgxNmRhZGZkNmI2YTFmMjYzNGZjZjAwZWM4NDAzNzgxMDI1ZWQ2ODkwYzQ4NDk3NDI3MDZiZDQzZWRlXCIsXCI2ZmRjZWYwOWYyZjZkMGEwNDRlNjU0YWVmNjI0MTM2ZjUwM2Q0NTljM2U4OTg0NTg1OGE0N2E5MTI5Y2RkMjRlXCJdLFtcIjFlMzNmMWE3NDZjOWM1Nzc4MTMzMzQ0ZDkyOTlmY2FhMjBiMDkzOGU4YWNmZjI1NDRiYjQwMjg0YjhjNWZiOTRcIixcIjYwNjYwMjU3ZGQxMWIzYWE5YzhlZDYxOGQyNGVkZmYyMzA2ZDMyMGYxZDAzMDEwZTMzYTdkMjA1N2YzYjNiNlwiXSxbXCI4NWI3YzFkY2IzY2VjMWI3ZWU3ZjMwZGVkNzlkZDIwYTBlZDFmNGNjMThjYmNmY2ZhNDEwMzYxZmQ4ZjA4ZjMxXCIsXCIzZDk4YTljZGQwMjZkZDQzZjM5MDQ4ZjI1YTg4NDdmNGZjYWZhZDE4OTVkN2E2MzNjNmZlZDNjMzVlOTk5NTExXCJdLFtcIjI5ZGY5ZmJkOGQ5ZTQ2NTA5Mjc1ZjRiMTI1ZDZkNDVkN2ZiZTlhM2I4NzhhN2FmODcyYTI4MDA2NjFhYzVmNTFcIixcImI0YzRmZTk5Yzc3NWE2MDZlMmQ4ODYyMTc5MTM5ZmZkYTYxZGM4NjFjMDE5ZTU1Y2QyODc2ZWIyYTI3ZDg0YlwiXSxbXCJhMGIxY2FlMDZiMGE4NDdhM2ZlYTZlNjcxYWFmOGFkZmRmZTU4Y2EyZjc2ODEwNWM4MDgyYjJlNDQ5ZmNlMjUyXCIsXCJhZTQzNDEwMmVkZGUwOTU4ZWM0YjE5ZDkxN2E2YTI4ZTZiNzJkYTE4MzRhZmYwZTY1MGYwNDk1MDNhMjk2Y2YyXCJdLFtcIjRlOGNlYWZiOWIzZTlhMTM2ZGM3ZmY2N2U4NDAyOTViNDk5ZGZiM2IyMTMzZTRiYTExM2YyZTRjMGUxMjFlNVwiLFwiY2YyMTc0MTE4YzhiNmQ3YTRiNDhmNmQ1MzRjZTVjNzk0MjJjMDg2YTYzNDYwNTAyYjgyN2NlNjJhMzI2NjgzY1wiXSxbXCJkMjRhNDRlMDQ3ZTE5YjZmNWFmYjgxYzdjYTJmNjkwODBhNTA3NjY4OWEwMTA5MTlmNDI3MjVjMmI3ODlhMzNiXCIsXCI2ZmI4ZDU1OTFiNDY2ZjhmYzYzZGI1MGYxYzBmMWM2OTAxM2Y5OTY4ODdiODI0NGQyY2RlYzQxN2FmZWE4ZmEzXCJdLFtcImVhMDE2MDZhN2E2YzljZGQyNDlmZGZjZmFjYjk5NTg0MDAxZWRkMjhhYmJhYjc3YjUxMDRlOThlOGUzYjM1ZDRcIixcIjMyMmFmNDkwOGM3MzEyYjBjZmJmZTM2OWY3YTdiM2NkYjdkNDQ5NGJjMjgyMzcwMGNmZDY1MjE4OGEzZWE5OGRcIl0sW1wiYWY4YWRkYmYyYjY2MWM4YTZjNjMyODY1NWViOTY2NTEyNTIwMDdkOGM1ZWEzMWJlNGFkMTk2ZGU4Y2UyMTMxZlwiLFwiNjc0OWU2N2MwMjliODVmNTJhMDM0ZWFmZDA5NjgzNmIyNTIwODE4NjgwZTI2YWM4ZjNkZmJjZGI3MTc0OTcwMFwiXSxbXCJlM2FlMTk3NDU2NmNhMDZjYzUxNmQ0N2UwZmIxNjVhNjc0YTNkYWJjZmNhMTVlNzIyZjBlMzQ1MGY0NTg4OVwiLFwiMmFlYWJlN2U0NTMxNTEwMTE2MjE3ZjA3YmY0ZDA3MzAwZGU5N2U0ODc0ZjgxZjUzMzQyMGE3MmVlYjBiZDZhNFwiXSxbXCI1OTFlZTM1NTMxM2Q5OTcyMWNmNjk5M2ZmZWQxZTNlMzAxOTkzZmYzZWQyNTg4MDIwNzVlYThjZWQzOTdlMjQ2XCIsXCJiMGVhNTU4YTExM2MzMGJlYTYwZmM0Nzc1NDYwYzc5MDFmZjBiMDUzZDI1Y2EyYmRlZWU5OGYxYTRiZTVkMTk2XCJdLFtcIjExMzk2ZDU1ZmRhNTRjNDlmMTlhYTk3MzE4ZDhkYTYxZmE4NTg0ZTQ3YjA4NDk0NTA3N2NmMDMyNTViNTI5ODRcIixcIjk5OGM3NGE4Y2Q0NWFjMDEyODlkNTgzM2E3YmViNDc0NGZmNTM2YjAxYjI1N2JlNGM1NzY3YmVhOTNlYTU3YTRcIl0sW1wiM2M1ZDJhMWJhMzljNWExNzkwMDAwNzM4YzllMGM0MGI4ZGNkZmQ1NDY4NzU0YjY0MDU1NDAxNTdlMDE3YWE3YVwiLFwiYjIyODQyNzk5OTVhMzRlMmY5ZDRkZTczOTZmYzE4YjgwZjliOGI5ZmRkMjcwZjY2NjFmNzljYTRjODFiZDI1N1wiXSxbXCJjYzg3MDRiOGE2MGEwZGVmYTNhOTlhNzI5OWYyZTljM2ZiYzM5NWFmYjA0YWMwNzg0MjVlZjhhMTc5M2NjMDMwXCIsXCJiZGQ0NjAzOWZlZWQxNzg4MWQxZTA4NjJkYjM0N2Y4Y2YzOTViNzRmYzRiY2RjNGU5NDBiNzRlM2FjMWYxYjEzXCJdLFtcImM1MzNlNGY3ZWE4NTU1YWFjZDk3NzdhYzVjYWQyOWI5N2RkNGRlZmNjYzUzZWU3ZWEyMDQxMTliMjg4OWIxOTdcIixcIjZmMGEyNTZiYzVlZmRmNDI5YTJmYjYyNDJmMWE0M2EyZDliOTI1YmI0YTRiM2EyNmJiOGUwZjQ1ZWI1OTYwOTZcIl0sW1wiYzE0ZjhmMmNjYjI3ZDZmMTA5ZjZkMDhkMDNjYzk2YTY5YmE4YzM0ZWVjMDdiYmNmNTY2ZDQ4ZTMzZGE2NTkzXCIsXCJjMzU5ZDY5MjNiYjM5OGY3ZmQ0NDczZTE2ZmUxYzI4NDc1Yjc0MGRkMDk4MDc1ZTZjMGU4NjQ5MTEzZGMzYTM4XCJdLFtcImE2Y2JjMzA0NmJjNmE0NTBiYWMyNDc4OWZhMTcxMTVhNGM5NzM5ZWQ3NWY4ZjIxY2U0NDFmNzJlMGI5MGU2ZWZcIixcIjIxYWU3ZjQ2ODBlODg5YmIxMzA2MTllMmMwZjk1YTM2MGNlYjU3M2M3MDYwMzEzOTg2MmFmZDYxN2ZhOWI5ZlwiXSxbXCIzNDdkNmQ5YTAyYzQ4OTI3ZWJmYjg2YzEzNTliMWNhZjEzMGEzYzAyNjdkMTFjZTYzNDRiMzlmOTlkNDNjYzM4XCIsXCI2MGVhN2Y2MWEzNTM1MjRkMWM5ODdmNmVjZWM5MmYwODZkNTY1YWI2ODc4NzBjYjEyNjg5ZmYxZTMxYzc0NDQ4XCJdLFtcImRhNjU0NWQyMTgxZGI4ZDk4M2Y3ZGNiMzc1ZWY1ODY2ZDQ3YzY3YjFiZjMxYzhjZjg1NWVmNzQzN2I3MjY1NmFcIixcIjQ5Yjk2NzE1YWI2ODc4YTc5ZTc4ZjA3Y2U1NjgwYzVkNjY3MzA1MWI0OTM1YmQ4OTdmZWE4MjRiNzdkYzIwOGFcIl0sW1wiYzQwNzQ3Y2M5ZDAxMmNiMWExM2I4MTQ4MzA5YzZkZTdlYzI1ZDY5NDVkNjU3MTQ2YjlkNTk5NGI4ZmViMTExMVwiLFwiNWNhNTYwNzUzYmUyYTEyZmM2ZGU2Y2FmMmNiNDg5NTY1ZGI5MzYxNTZiOTUxNGUxYmI1ZTgzMDM3ZTBmYTJkNFwiXSxbXCI0ZTQyYzhlYzgyYzk5Nzk4Y2NmM2E2MTBiZTg3MGU3ODMzOGM3ZjcxMzM0OGJkMzRjODIwM2VmNDAzN2YzNTAyXCIsXCI3NTcxZDc0ZWU1ZTBmYjkyYTdhOGIzM2EwNzc4MzM0MWE1NDkyMTQ0Y2M1NGJjYzQwYTk0NDczNjkzNjA2NDM3XCJdLFtcIjM3NzVhYjcwODliYzZhZjgyM2FiYTJlMWFmNzBiMjM2ZDI1MWNhZGIwYzg2NzQzMjg3NTIyYTFiM2IwZGVkZWFcIixcImJlNTJkMTA3YmNmYTA5ZDhiY2I5NzM2YTgyOGNmYTdmYWM4ZGIxN2JmN2E3NmEyYzQyYWQ5NjE0MDkwMThjZjdcIl0sW1wiY2VlMzFjYmY3ZTM0ZWMzNzlkOTRmYjgxNGQzZDc3NWFkOTU0NTk1ZDEzMTRiYTg4NDY5NTllM2U4MmY3NGUyNlwiLFwiOGZkNjRhMTRjMDZiNTg5YzI2Yjk0N2FlMmJjZjZiZmEwMTQ5ZWYwYmUxNGVkNGQ4MGY0NDhhMDFjNDNiMWM2ZFwiXSxbXCJiNGY5ZWFlYTA5YjY5MTc2MTlmNmVhNmE0ZWI1NDY0ZWZkZGI1OGZkNDViMWViZWZjZGMxYTAxZDA4YjQ3OTg2XCIsXCIzOWU1Yzk5MjViNWE1NGIwNzQzM2E0ZjE4YzYxNzI2ZjhiYjEzMWMwMTJjYTU0MmViMjRhOGFjMDcyMDA2ODJhXCJdLFtcImQ0MjYzZGZjM2QyZGY5MjNhMDE3OWE0ODk2NmQzMGNlODRlMjUxNWFmYzNkY2NjMWI3NzkwNzc5MmViY2M2MGVcIixcIjYyZGZhZjA3YTBmNzhmZWIzMGUzMGQ2Mjk1ODUzY2UxODllMTI3NzYwYWQ2Y2Y3ZmFlMTY0ZTEyMmEyMDhkNTRcIl0sW1wiNDg0NTc1MjQ4MjBmYTY1YTRmOGQzNWViNjkzMDg1N2MwMDMyYWNjMGE0YTJkZTQyMjIzM2VlZGE4OTc2MTJjNFwiLFwiMjVhNzQ4YWIzNjc5NzlkOTg3MzNjMzhhMWZhMWMyZTdkYzZjYzA3ZGIyZDYwYTlhZTdhNzZhYWE0OWJkMGY3N1wiXSxbXCJkZmVlZWYxODgxMTAxZjJjYjExNjQ0ZjNhMmFmZGZjMjA0NWUxOTkxOTE1MjkyM2YzNjdhMTc2N2MxMWNjZWRhXCIsXCJlY2ZiNzA1NmNmMWRlMDQyZjk0MjBiYWIzOTY3OTNjMGMzOTBiZGU3NGI0YmJkZmYxNmE4M2FlMDlhOWE3NTE3XCJdLFtcIjZkN2VmNmIxNzU0M2Y4MzczYzU3M2Y0NGUxZjM4OTgzNWQ4OWJjYmM2MDYyY2VkMzZjODJkZjgzYjhmYWU4NTlcIixcImNkNDUwZWMzMzU0Mzg5ODZkZmVmYTEwYzU3ZmVhOWJjYzUyMWEwOTU5YjJkODBiYmY3NGIxOTBkY2E3MTJkMTBcIl0sW1wiZTc1NjA1ZDU5MTAyYTVhMjY4NDUwMGQzYjk5MWYyZTNmM2M4OGI5MzIyNTU0NzAzNWFmMjVhZjY2ZTA0NTQxZlwiLFwiZjVjNTQ3NTRhOGY3MWVlNTQwYjliNDg3Mjg0NzNlMzE0ZjcyOWFjNTMwOGIwNjkzODM2MDk5MGUyYmZhZDEyNVwiXSxbXCJlYjk4NjYwZjRjNGRmYWEwNmEyYmU0NTNkNTAyMGJjOTlhMGMyZTYwYWJlMzg4NDU3ZGQ0M2ZlZmIxZWQ2MjBjXCIsXCI2Y2I5YTg4NzZkOWNiODUyMDYwOWFmM2FkZDI2Y2QyMGEwYTdjZDhhOTQxMTEzMWNlODVmNDQxMDAwOTkyMjNlXCJdLFtcIjEzZTg3YjAyN2Q4NTE0ZDM1OTM5ZjJlNjg5MmIxOTkyMjE1NDU5Njk0MTg4ODMzNmRjMzU2M2UzYjhkYmE5NDJcIixcImZlZjVhM2M2ODA1OWE2ZGVjNWQ2MjQxMTRiZjFlOTFhYWMyYjlkYTU2OGQ2YWJlYjI1NzBkNTU2NDZiOGFkZjFcIl0sW1wiZWUxNjMwMjZlOWZkNmZlMDE3YzM4ZjA2YTViZTZmYzEyNTQyNGIzNzFjZTI3MDhlN2JmNDQ5MTY5MWU1NzY0YVwiLFwiMWFjYjI1MGYyNTVkZDYxYzQzZDk0Y2NjNjcwZDBmNThmNDlhZTNmYTE1Yjk2NjIzZTU0MzBkYTBhZDZjNjJiMlwiXSxbXCJiMjY4ZjVlZjlhZDUxZTRkNzhkZTNhNzUwYzJkYzg5YjFlNjI2ZDQzNTA1ODY3OTk5OTMyZTVkYjMzYWYzZDgwXCIsXCI1ZjMxMGQ0YjNjOTliOWViYjE5Zjc3ZDQxYzFkZWUwMThjZjBkMzRmZDQxOTE2MTQwMDNlOTQ1YTEyMTZlNDIzXCJdLFtcImZmMDdmMzExOGE5ZGYwMzVlOWZhZDg1ZWI2YzdiZmU0MmIwMmYwMWNhOTljZWVhM2JmN2ZmZGJhOTNjNDc1MGRcIixcIjQzODEzNmQ2MDNlODU4YTNhNWM0NDBjMzhlY2NiYWRkYzFkMjk0MjExNGUyZWRkZDQ3NDBkMDk4Y2VkMWYwZDhcIl0sW1wiOGQ4Yjk4NTVjN2MwNTJhMzQxNDZmZDIwZmZiNjU4YmVhNGI5ZjY5ZTBkODI1ZWJlYzE2ZThjM2NlMmI1MjZhMVwiLFwiY2RiNTU5ZWVkYzJkNzlmOTI2YmFmNDRmYjg0ZWE0ZDQ0YmNmNTBmZWU1MWQ3Y2ViMzBlMmU3ZjQ2MzAzNjc1OFwiXSxbXCI1MmRiMGI1Mzg0ZGZiZjA1YmZhOWQ0NzJkN2FlMjZkZmU0Yjg1MWNlY2E5MWIxZWJhNTQyNjMxODBkYTMyYjYzXCIsXCJjM2I5OTdkMDUwZWU1ZDQyM2ViYWY2NmE2ZGI5ZjU3YjMxODBjOTAyODc1Njc5ZGU5MjRiNjlkODRhN2IzNzVcIl0sW1wiZTYyZjk0OTBkM2Q1MWRhNjM5NWVmZDI0ZTgwOTE5Y2M3ZDBmMjljM2YzZmE0OGM2ZmZmNTQzYmVjYmQ0MzM1MlwiLFwiNmQ4OWFkN2JhNDg3NmIwYjIyYzJjYTI4MGM2ODI4NjJmMzQyYzg1OTFmMWRhZjUxNzBlMDdiZmQ5Y2NhZmE3ZFwiXSxbXCI3ZjMwZWEyNDc2YjM5OWI0OTU3NTA5Yzg4Zjc3ZDAxOTFhZmEyZmY1Y2I3YjE0ZmQ2ZDhlN2Q2NWFhYWIxMTkzXCIsXCJjYTVlZjdkNGIyMzFjOTRjM2IxNTM4OWE1ZjYzMTFlOWRhZmY3YmI2N2IxMDNlOTg4MGVmNGJmZjYzN2FjYWVjXCJdLFtcIjUwOThmZjFlMWQ5ZjE0ZmI0NmEyMTBmYWRhNmM5MDNmZWYwZmI3YjRhMWRkMWQ5YWM2MGEwMzYxODAwYjdhMDBcIixcIjk3MzExNDFkODFmYzhmODA4NGQzN2M2ZTc1NDIwMDZiM2VlMWI0MGQ2MGRmZTUzNjJhNWIxMzJmZDE3ZGRjMFwiXSxbXCIzMmI3OGM3ZGU5ZWU1MTJhNzI4OTViZTZiOWNiZWZhNmUyZjNjNGNjY2U0NDVjOTZiOWYyYzgxZTI3NzhhZDU4XCIsXCJlZTE4NDlmNTEzZGY3MWUzMmVmYzM4OTZlZTI4MjYwYzczYmI4MDU0N2FlMjI3NWJhNDk3MjM3Nzk0Yzg3NTNjXCJdLFtcImUyY2I3NGZkZGM4ZTlmYmNkMDc2ZWVmMmE3YzcyYjBjZTM3ZDUwZjA4MjY5ZGZjMDc0YjU4MTU1MDU0N2E0ZjdcIixcImQzYWEyZWQ3MWM5ZGQyMjQ3YTYyZGYwNjI3MzZlYjBiYWRkZWE5ZTM2MTIyZDJiZTg2NDFhYmNiMDA1Y2M0YTRcIl0sW1wiODQzODQ0NzU2NmQ0ZDdiZWRhZGMyOTk0OTZhYjM1NzQyNjAwOWEzNWYyMzVjYjE0MWJlMGQ5OWNkMTBhZTNhOFwiLFwiYzRlMTAyMDkxNjk4MGE0ZGE1ZDAxYWM1ZTZhZDMzMDczNGVmMGQ3OTA2NjMxYzRmMjM5MDQyNmIyZWRkNzkxZlwiXSxbXCI0MTYyZDQ4OGI4OTQwMjAzOWI1ODRjNmZjNmMzMDg4NzA1ODdkOWM0NmY2NjBiODc4YWI2NWM4MmM3MTFkNjdlXCIsXCI2NzE2M2U5MDMyMzYyODlmNzc2ZjIyYzI1ZmI4YTNhZmMxNzMyZjJiODRiNGU5NWRiZGE0N2FlNWEwODUyNjQ5XCJdLFtcIjNmYWQzZmE4NGNhZjBmMzRmMGY4OWJmZDJkY2Y1NGZjMTc1ZDc2N2FlYzNlNTA2ODRmM2JhNGE0YmY1ZjY4M2RcIixcImNkMWJjN2NiNmNjNDA3YmIyZjBjYTY0N2M3MThhNzMwY2Y3MTg3MmU3ZDBkMmE1M2ZhMjBlZmNkZmU2MTgyNlwiXSxbXCI2NzRmMjYwMGEzMDA3YTAwNTY4YzFhN2NlMDVkMDgxNmMxZmI4NGJmMTM3MDc5OGYxYzY5NTMyZmFlYjFhODZiXCIsXCIyOTlkMjFmOTQxM2YzM2IzZWRmNDNiMjU3MDA0NTgwYjcwZGI1N2RhMGIxODIyNTllMDllZWNjNjllMGQzOGE1XCJdLFtcImQzMmY0ZGE1NGFkZTc0YWJiODFiODE1YWQxZmIzYjI2M2Q4MmQ2YzY5MjcxNGJjZmY4N2QyOWJkNWVlOWYwOGZcIixcImY5NDI5ZTczOGI4ZTUzYjk2OGU5OTAxNmMwNTk3MDc3ODJlMTRmNDUzNTM1OWQ1ODJmYzQxNjkxMGIzZWVhODdcIl0sW1wiMzBlNGU2NzA0MzUzODU1NTZlNTkzNjU3MTM1ODQ1ZDM2ZmJiNjkzMWY3MmIwOGNiMWVkOTU0ZjFlM2NlM2ZmNlwiLFwiNDYyZjliY2U2MTk4OTg2Mzg0OTkzNTAxMTNiYmM5YjEwYTg3OGQzNWRhNzA3NDBkYzY5NWE1NTllYjg4ZGI3YlwiXSxbXCJiZTIwNjIwMDNjNTFjYzMwMDQ2ODI5MDQzMzBlNGRlZTdmM2RjZDEwYjAxZTU4MGJmMTk3MWIwNGQ0Y2FkMjk3XCIsXCI2MjE4OGJjNDlkNjFlNTQyODU3M2Q0OGE3NGUxYzY1NWIxYzYxMDkwOTA1NjgyYTBkNTU1OGVkNzJkY2NiOWJjXCJdLFtcIjkzMTQ0NDIzYWNlMzQ1MWVkMjllMGZiOWFjMmFmMjExY2I2ZTg0YTYwMWRmNTk5M2M0MTk4NTlmZmY1ZGYwNGFcIixcIjdjMTBkZmIxNjRjMzQyNWY1YzcxYTNmOWQ3OTkyMDM4ZjEwNjUyMjRmNzJiYjlkMWQ5MDJhNmQxMzAzN2I0N2NcIl0sW1wiYjAxNWY4MDQ0ZjVmY2JkY2YyMWNhMjZkNmMzNGZiODE5NzgyOTIwNWM3YjdkMmE3Y2I2NjQxOGMxNTdiMTEyY1wiLFwiYWI4YzFlMDg2ZDA0ZTgxMzc0NGE2NTViMmRmOGQ1ZjgzYjNjZGM2ZmFhMzA4OGMxZDNhZWExNDU0ZTNhMWQ1ZlwiXSxbXCJkNWU5ZTFkYTY0OWQ5N2Q4OWU0ODY4MTE3YTQ2NWEzYTRmOGExOGRlNTdhMTQwZDM2YjNmMmFmMzQxYTIxYjUyXCIsXCI0Y2IwNDQzN2YzOTFlZDczMTExYTEzY2MxZDRkZDBkYjE2OTM0NjVjMjI0MDQ4MGQ4OTU1ZTg1OTJmMjc0NDdhXCJdLFtcImQzYWU0MTA0N2RkN2NhMDY1ZGJmOGVkNzdiOTkyNDM5OTgzMDA1Y2Q3MmUxNmQ2Zjk5NmE1MzE2ZDM2OTY2YmJcIixcImJkMWFlYjIxYWQyMmViYjIyYTEwZjAzMDM0MTdjNmQ5NjRmOGNkZDdkZjBhY2E2MTRiMTBkYzE0ZDEyNWFjNDZcIl0sW1wiNDYzZTI3NjNkODg1Zjk1OGZjNjZjZGQyMjgwMGYwYTQ4NzE5N2QwYTgyZTM3N2I0OWY4MGFmODdjODk3YjA2NVwiLFwiYmZlZmFjZGIwZTVkMGZkN2RmM2EzMTFhOTRkZTA2MmIyNmI4MGM2MWZiYzk3NTA4Yjc5OTkyNjcxZWY3Y2E3ZlwiXSxbXCI3OTg1ZmRmZDEyN2MwNTY3YzZmNTNlYzFiYjYzZWMzMTU4ZTU5N2M0MGJmZTc0N2M4M2NkZGZjOTEwNjQxOTE3XCIsXCI2MDNjMTJkYWYzZDk4NjJlZjJiMjVmZTFkZTI4OWFlZDI0ZWQyOTFlMGVjNjcwODcwM2E1YmQ1NjdmMzJlZDAzXCJdLFtcIjc0YTFhZDZiNWY3NmUzOWRiMmRkMjQ5NDEwZWFjN2Y5OWU3NGM1OWNiODNkMmQwZWQ1ZmYxNTQzZGE3NzAzZTlcIixcImNjNjE1N2VmMThjOWM2M2NkNjE5M2Q4MzYzMWJiZWEwMDkzZTA5Njg5NDJlOGMzM2Q1NzM3ZmQ3OTBlMGRiMDhcIl0sW1wiMzA2ODJhNTA3MDMzNzVmNjAyZDQxNjY2NGJhMTliN2ZjOWJhYjQyYzcyNzQ3NDYzYTcxZDA4OTZiMjJmNmRhM1wiLFwiNTUzZTA0ZjZiMDE4YjRmYTZjOGYzOWU3ZjMxMWQzMTc2MjkwZDBlMGYxOWNhNzNmMTc3MTRkOTk3N2EyMmZmOFwiXSxbXCI5ZTIxNThmMGQ3YzBkNWYyNmMzNzkxZWZlZmE3OTU5NzY1NGU3YTJiMjQ2NGY1MmIxZWU2YzEzNDc3NjllZjU3XCIsXCI3MTJmY2RkMWI5MDUzZjA5MDAzYTM0ODFmYTc3NjJlOWZmZDdjOGVmMzVhMzg1MDllMmZiZjI2MjkwMDgzNzNcIl0sW1wiMTc2ZTI2OTg5YTQzYzljZmViYTQwMjljMjAyNTM4YzI4MTcyZTU2NmUzYzRmY2U3MzIyODU3ZjNiZTMyN2Q2NlwiLFwiZWQ4Y2M5ZDA0YjI5ZWI4NzdkMjcwYjQ4NzhkYzQzYzE5YWVmZDMxZjRlZWUwOWVlN2I0NzgzNGMxZmE0YjFjM1wiXSxbXCI3NWQ0NmVmZWEzNzcxZTZlNjhhYmI4OWExM2FkNzQ3ZWNmMTg5MjM5M2RmYzRmMWI3MDA0Nzg4YzUwMzc0ZGE4XCIsXCI5ODUyMzkwYTk5NTA3Njc5ZmQwYjg2ZmQyYjM5YTg2OGQ3ZWZjMjIxNTEzNDZlMWEzY2E0NzI2NTg2YTZiZWQ4XCJdLFtcIjgwOWEyMGM2N2Q2NDkwMGZmYjY5OGM0YzgyNWY2ZDVmMjMxMGZiMDQ1MWM4NjkzNDViNzMxOWY2NDU2MDU3MjFcIixcIjllOTk0OTgwZDk5MTdlMjJiNzZiMDYxOTI3ZmEwNDE0M2QwOTZjY2M1NDk2M2U2YTVlYmZhNWYzZjhlMjg2YzFcIl0sW1wiMWIzODkwM2E0M2Y3ZjExNGVkNDUwMGI0ZWFjNzA4M2ZkZWZlY2UxY2YyOWM2MzUyOGQ1NjM0NDZmOTcyYzE4MFwiLFwiNDAzNmVkYzkzMWE2MGFlODg5MzUzZjc3ZmQ1M2RlNGEyNzA4YjI2YjZmNWRhNzJhZDMzOTQxMTlkYWY0MDhmOVwiXV19fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksaT1uKDE5NSksYT1uKDgpLG89YS51dGlscy5hc3NlcnQscz1uKDE5NiksdT1uKDE5Nyk7ZnVuY3Rpb24gYyh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBjKSlyZXR1cm4gbmV3IGModCk7XCJzdHJpbmdcIj09dHlwZW9mIHQmJihvKGEuY3VydmVzLmhhc093blByb3BlcnR5KHQpLFwiVW5rbm93biBjdXJ2ZSBcIit0KSx0PWEuY3VydmVzW3RdKSx0IGluc3RhbmNlb2YgYS5jdXJ2ZXMuUHJlc2V0Q3VydmUmJih0PXtjdXJ2ZTp0fSksdGhpcy5jdXJ2ZT10LmN1cnZlLmN1cnZlLHRoaXMubj10aGlzLmN1cnZlLm4sdGhpcy5uaD10aGlzLm4udXNocm4oMSksdGhpcy5nPXRoaXMuY3VydmUuZyx0aGlzLmc9dC5jdXJ2ZS5nLHRoaXMuZy5wcmVjb21wdXRlKHQuY3VydmUubi5iaXRMZW5ndGgoKSsxKSx0aGlzLmhhc2g9dC5oYXNofHx0LmN1cnZlLmhhc2h9dC5leHBvcnRzPWMsYy5wcm90b3R5cGUua2V5UGFpcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHModGhpcyx0KX0sYy5wcm90b3R5cGUua2V5RnJvbVByaXZhdGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcy5mcm9tUHJpdmF0ZSh0aGlzLHQsZSl9LGMucHJvdG90eXBlLmtleUZyb21QdWJsaWM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcy5mcm9tUHVibGljKHRoaXMsdCxlKX0sYy5wcm90b3R5cGUuZ2VuS2V5UGFpcj1mdW5jdGlvbih0KXt0fHwodD17fSk7Zm9yKHZhciBlPW5ldyBpKHtoYXNoOnRoaXMuaGFzaCxwZXJzOnQucGVycyxwZXJzRW5jOnQucGVyc0VuY3x8XCJ1dGY4XCIsZW50cm9weTp0LmVudHJvcHl8fGEucmFuZCh0aGlzLmhhc2guaG1hY1N0cmVuZ3RoKSxlbnRyb3B5RW5jOnQuZW50cm9weSYmdC5lbnRyb3B5RW5jfHxcInV0ZjhcIixub25jZTp0aGlzLm4udG9BcnJheSgpfSksbj10aGlzLm4uYnl0ZUxlbmd0aCgpLG89dGhpcy5uLnN1YihuZXcgcigyKSk7Oyl7dmFyIHM9bmV3IHIoZS5nZW5lcmF0ZShuKSk7aWYoIShzLmNtcChvKT4wKSlyZXR1cm4gcy5pYWRkbigxKSx0aGlzLmtleUZyb21Qcml2YXRlKHMpfX0sYy5wcm90b3R5cGUuX3RydW5jYXRlVG9OPWZ1bmN0aW9uKHQsZSl7dmFyIG49OCp0LmJ5dGVMZW5ndGgoKS10aGlzLm4uYml0TGVuZ3RoKCk7cmV0dXJuIG4+MCYmKHQ9dC51c2hybihuKSksIWUmJnQuY21wKHRoaXMubik+PTA/dC5zdWIodGhpcy5uKTp0fSxjLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQsZSxuLGEpe1wib2JqZWN0XCI9PXR5cGVvZiBuJiYoYT1uLG49bnVsbCksYXx8KGE9e30pLGU9dGhpcy5rZXlGcm9tUHJpdmF0ZShlLG4pLHQ9dGhpcy5fdHJ1bmNhdGVUb04obmV3IHIodCwxNikpO2Zvcih2YXIgbz10aGlzLm4uYnl0ZUxlbmd0aCgpLHM9ZS5nZXRQcml2YXRlKCkudG9BcnJheShcImJlXCIsbyksYz10LnRvQXJyYXkoXCJiZVwiLG8pLGw9bmV3IGkoe2hhc2g6dGhpcy5oYXNoLGVudHJvcHk6cyxub25jZTpjLHBlcnM6YS5wZXJzLHBlcnNFbmM6YS5wZXJzRW5jfHxcInV0ZjhcIn0pLGY9dGhpcy5uLnN1YihuZXcgcigxKSksaD0wOztoKyspe3ZhciBwPWEuaz9hLmsoaCk6bmV3IHIobC5nZW5lcmF0ZSh0aGlzLm4uYnl0ZUxlbmd0aCgpKSk7aWYoISgocD10aGlzLl90cnVuY2F0ZVRvTihwLCEwKSkuY21wbigxKTw9MHx8cC5jbXAoZik+PTApKXt2YXIgZD10aGlzLmcubXVsKHApO2lmKCFkLmlzSW5maW5pdHkoKSl7dmFyIG09ZC5nZXRYKCksZz1tLnVtb2QodGhpcy5uKTtpZigwIT09Zy5jbXBuKDApKXt2YXIgeT1wLmludm0odGhpcy5uKS5tdWwoZy5tdWwoZS5nZXRQcml2YXRlKCkpLmlhZGQodCkpO2lmKDAhPT0oeT15LnVtb2QodGhpcy5uKSkuY21wbigwKSl7dmFyIHY9KGQuZ2V0WSgpLmlzT2RkKCk/MTowKXwoMCE9PW0uY21wKGcpPzI6MCk7cmV0dXJuIGEuY2Fub25pY2FsJiZ5LmNtcCh0aGlzLm5oKT4wJiYoeT10aGlzLm4uc3ViKHkpLHZePTEpLG5ldyB1KHtyOmcsczp5LHJlY292ZXJ5UGFyYW06dn0pfX19fX19LGMucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LGUsbixpKXt0PXRoaXMuX3RydW5jYXRlVG9OKG5ldyByKHQsMTYpKSxuPXRoaXMua2V5RnJvbVB1YmxpYyhuLGkpO3ZhciBhPShlPW5ldyB1KGUsXCJoZXhcIikpLnIsbz1lLnM7aWYoYS5jbXBuKDEpPDB8fGEuY21wKHRoaXMubik+PTApcmV0dXJuITE7aWYoby5jbXBuKDEpPDB8fG8uY21wKHRoaXMubik+PTApcmV0dXJuITE7dmFyIHMsYz1vLmludm0odGhpcy5uKSxsPWMubXVsKHQpLnVtb2QodGhpcy5uKSxmPWMubXVsKGEpLnVtb2QodGhpcy5uKTtyZXR1cm4gdGhpcy5jdXJ2ZS5fbWF4d2VsbFRyaWNrPyEocz10aGlzLmcuam11bEFkZChsLG4uZ2V0UHVibGljKCksZikpLmlzSW5maW5pdHkoKSYmcy5lcVhUb1AoYSk6IShzPXRoaXMuZy5tdWxBZGQobCxuLmdldFB1YmxpYygpLGYpKS5pc0luZmluaXR5KCkmJjA9PT1zLmdldFgoKS51bW9kKHRoaXMubikuY21wKGEpfSxjLnByb3RvdHlwZS5yZWNvdmVyUHViS2V5PWZ1bmN0aW9uKHQsZSxuLGkpe28oKDMmbik9PT1uLFwiVGhlIHJlY292ZXJ5IHBhcmFtIGlzIG1vcmUgdGhhbiB0d28gYml0c1wiKSxlPW5ldyB1KGUsaSk7dmFyIGE9dGhpcy5uLHM9bmV3IHIodCksYz1lLnIsbD1lLnMsZj0xJm4saD1uPj4xO2lmKGMuY21wKHRoaXMuY3VydmUucC51bW9kKHRoaXMuY3VydmUubikpPj0wJiZoKXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBmaW5kIHNlbmNvbmQga2V5IGNhbmRpbmF0ZVwiKTtjPWg/dGhpcy5jdXJ2ZS5wb2ludEZyb21YKGMuYWRkKHRoaXMuY3VydmUubiksZik6dGhpcy5jdXJ2ZS5wb2ludEZyb21YKGMsZik7dmFyIHA9ZS5yLmludm0oYSksZD1hLnN1YihzKS5tdWwocCkudW1vZChhKSxtPWwubXVsKHApLnVtb2QoYSk7cmV0dXJuIHRoaXMuZy5tdWxBZGQoZCxjLG0pfSxjLnByb3RvdHlwZS5nZXRLZXlSZWNvdmVyeVBhcmFtPWZ1bmN0aW9uKHQsZSxuLHIpe2lmKG51bGwhPT0oZT1uZXcgdShlLHIpKS5yZWNvdmVyeVBhcmFtKXJldHVybiBlLnJlY292ZXJ5UGFyYW07Zm9yKHZhciBpPTA7aTw0O2krKyl7dmFyIGE7dHJ5e2E9dGhpcy5yZWNvdmVyUHViS2V5KHQsZSxpKX1jYXRjaCh0KXtjb250aW51ZX1pZihhLmVxKG4pKXJldHVybiBpfXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBmaW5kIHZhbGlkIHJlY292ZXJ5IGZhY3RvclwiKX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDY3KSxpPW4oMTA4KSxhPW4oMTIpO2Z1bmN0aW9uIG8odCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbykpcmV0dXJuIG5ldyBvKHQpO3RoaXMuaGFzaD10Lmhhc2gsdGhpcy5wcmVkUmVzaXN0PSEhdC5wcmVkUmVzaXN0LHRoaXMub3V0TGVuPXRoaXMuaGFzaC5vdXRTaXplLHRoaXMubWluRW50cm9weT10Lm1pbkVudHJvcHl8fHRoaXMuaGFzaC5obWFjU3RyZW5ndGgsdGhpcy5fcmVzZWVkPW51bGwsdGhpcy5yZXNlZWRJbnRlcnZhbD1udWxsLHRoaXMuSz1udWxsLHRoaXMuVj1udWxsO3ZhciBlPWkudG9BcnJheSh0LmVudHJvcHksdC5lbnRyb3B5RW5jfHxcImhleFwiKSxuPWkudG9BcnJheSh0Lm5vbmNlLHQubm9uY2VFbmN8fFwiaGV4XCIpLHI9aS50b0FycmF5KHQucGVycyx0LnBlcnNFbmN8fFwiaGV4XCIpO2EoZS5sZW5ndGg+PXRoaXMubWluRW50cm9weS84LFwiTm90IGVub3VnaCBlbnRyb3B5LiBNaW5pbXVtIGlzOiBcIit0aGlzLm1pbkVudHJvcHkrXCIgYml0c1wiKSx0aGlzLl9pbml0KGUsbixyKX10LmV4cG9ydHM9byxvLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbih0LGUsbil7dmFyIHI9dC5jb25jYXQoZSkuY29uY2F0KG4pO3RoaXMuSz1uZXcgQXJyYXkodGhpcy5vdXRMZW4vOCksdGhpcy5WPW5ldyBBcnJheSh0aGlzLm91dExlbi84KTtmb3IodmFyIGk9MDtpPHRoaXMuVi5sZW5ndGg7aSsrKXRoaXMuS1tpXT0wLHRoaXMuVltpXT0xO3RoaXMuX3VwZGF0ZShyKSx0aGlzLl9yZXNlZWQ9MSx0aGlzLnJlc2VlZEludGVydmFsPTI4MTQ3NDk3NjcxMDY1Nn0sby5wcm90b3R5cGUuX2htYWM9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIuaG1hYyh0aGlzLmhhc2gsdGhpcy5LKX0sby5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFswXSk7dCYmKGU9ZS51cGRhdGUodCkpLHRoaXMuSz1lLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksdCYmKHRoaXMuSz10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFsxXSkudXBkYXRlKHQpLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCkpfSxvLnByb3RvdHlwZS5yZXNlZWQ9ZnVuY3Rpb24odCxlLG4scil7XCJzdHJpbmdcIiE9dHlwZW9mIGUmJihyPW4sbj1lLGU9bnVsbCksdD1pLnRvQXJyYXkodCxlKSxuPWkudG9BcnJheShuLHIpLGEodC5sZW5ndGg+PXRoaXMubWluRW50cm9weS84LFwiTm90IGVub3VnaCBlbnRyb3B5LiBNaW5pbXVtIGlzOiBcIit0aGlzLm1pbkVudHJvcHkrXCIgYml0c1wiKSx0aGlzLl91cGRhdGUodC5jb25jYXQobnx8W10pKSx0aGlzLl9yZXNlZWQ9MX0sby5wcm90b3R5cGUuZ2VuZXJhdGU9ZnVuY3Rpb24odCxlLG4scil7aWYodGhpcy5fcmVzZWVkPnRoaXMucmVzZWVkSW50ZXJ2YWwpdGhyb3cgbmV3IEVycm9yKFwiUmVzZWVkIGlzIHJlcXVpcmVkXCIpO1wic3RyaW5nXCIhPXR5cGVvZiBlJiYocj1uLG49ZSxlPW51bGwpLG4mJihuPWkudG9BcnJheShuLHJ8fFwiaGV4XCIpLHRoaXMuX3VwZGF0ZShuKSk7Zm9yKHZhciBhPVtdO2EubGVuZ3RoPHQ7KXRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksYT1hLmNvbmNhdCh0aGlzLlYpO3ZhciBvPWEuc2xpY2UoMCx0KTtyZXR1cm4gdGhpcy5fdXBkYXRlKG4pLHRoaXMuX3Jlc2VlZCsrLGkuZW5jb2RlKG8sZSl9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9big1KSxpPW4oOCkudXRpbHMuYXNzZXJ0O2Z1bmN0aW9uIGEodCxlKXt0aGlzLmVjPXQsdGhpcy5wcml2PW51bGwsdGhpcy5wdWI9bnVsbCxlLnByaXYmJnRoaXMuX2ltcG9ydFByaXZhdGUoZS5wcml2LGUucHJpdkVuYyksZS5wdWImJnRoaXMuX2ltcG9ydFB1YmxpYyhlLnB1YixlLnB1YkVuYyl9dC5leHBvcnRzPWEsYS5mcm9tUHVibGljPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGE/ZTpuZXcgYSh0LHtwdWI6ZSxwdWJFbmM6bn0pfSxhLmZyb21Qcml2YXRlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGE/ZTpuZXcgYSh0LHtwcml2OmUscHJpdkVuYzpufSl9LGEucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRQdWJsaWMoKTtyZXR1cm4gdC5pc0luZmluaXR5KCk/e3Jlc3VsdDohMSxyZWFzb246XCJJbnZhbGlkIHB1YmxpYyBrZXlcIn06dC52YWxpZGF0ZSgpP3QubXVsKHRoaXMuZWMuY3VydmUubikuaXNJbmZpbml0eSgpP3tyZXN1bHQ6ITAscmVhc29uOm51bGx9OntyZXN1bHQ6ITEscmVhc29uOlwiUHVibGljIGtleSAqIE4gIT0gT1wifTp7cmVzdWx0OiExLHJlYXNvbjpcIlB1YmxpYyBrZXkgaXMgbm90IGEgcG9pbnRcIn19LGEucHJvdG90eXBlLmdldFB1YmxpYz1mdW5jdGlvbih0LGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiYoZT10LHQ9bnVsbCksdGhpcy5wdWJ8fCh0aGlzLnB1Yj10aGlzLmVjLmcubXVsKHRoaXMucHJpdikpLGU/dGhpcy5wdWIuZW5jb2RlKGUsdCk6dGhpcy5wdWJ9LGEucHJvdG90eXBlLmdldFByaXZhdGU9ZnVuY3Rpb24odCl7cmV0dXJuXCJoZXhcIj09PXQ/dGhpcy5wcml2LnRvU3RyaW5nKDE2LDIpOnRoaXMucHJpdn0sYS5wcm90b3R5cGUuX2ltcG9ydFByaXZhdGU9ZnVuY3Rpb24odCxlKXt0aGlzLnByaXY9bmV3IHIodCxlfHwxNiksdGhpcy5wcml2PXRoaXMucHJpdi51bW9kKHRoaXMuZWMuY3VydmUubil9LGEucHJvdG90eXBlLl9pbXBvcnRQdWJsaWM9ZnVuY3Rpb24odCxlKXtpZih0Lnh8fHQueSlyZXR1cm5cIm1vbnRcIj09PXRoaXMuZWMuY3VydmUudHlwZT9pKHQueCxcIk5lZWQgeCBjb29yZGluYXRlXCIpOlwic2hvcnRcIiE9PXRoaXMuZWMuY3VydmUudHlwZSYmXCJlZHdhcmRzXCIhPT10aGlzLmVjLmN1cnZlLnR5cGV8fGkodC54JiZ0LnksXCJOZWVkIGJvdGggeCBhbmQgeSBjb29yZGluYXRlXCIpLHZvaWQodGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5wb2ludCh0LngsdC55KSk7dGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5kZWNvZGVQb2ludCh0LGUpfSxhLnByb3RvdHlwZS5kZXJpdmU9ZnVuY3Rpb24odCl7cmV0dXJuIHQubXVsKHRoaXMucHJpdikuZ2V0WCgpfSxhLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5lYy5zaWduKHQsdGhpcyxlLG4pfSxhLnByb3RvdHlwZS52ZXJpZnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5lYy52ZXJpZnkodCxlLHRoaXMpfSxhLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuXCI8S2V5IHByaXY6IFwiKyh0aGlzLnByaXYmJnRoaXMucHJpdi50b1N0cmluZygxNiwyKSkrXCIgcHViOiBcIisodGhpcy5wdWImJnRoaXMucHViLmluc3BlY3QoKSkrXCIgPlwifX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksaT1uKDgpLnV0aWxzLGE9aS5hc3NlcnQ7ZnVuY3Rpb24gbyh0LGUpe2lmKHQgaW5zdGFuY2VvZiBvKXJldHVybiB0O3RoaXMuX2ltcG9ydERFUih0LGUpfHwoYSh0LnImJnQucyxcIlNpZ25hdHVyZSB3aXRob3V0IHIgb3Igc1wiKSx0aGlzLnI9bmV3IHIodC5yLDE2KSx0aGlzLnM9bmV3IHIodC5zLDE2KSx2b2lkIDA9PT10LnJlY292ZXJ5UGFyYW0/dGhpcy5yZWNvdmVyeVBhcmFtPW51bGw6dGhpcy5yZWNvdmVyeVBhcmFtPXQucmVjb3ZlcnlQYXJhbSl9ZnVuY3Rpb24gcygpe3RoaXMucGxhY2U9MH1mdW5jdGlvbiB1KHQsZSl7dmFyIG49dFtlLnBsYWNlKytdO2lmKCEoMTI4Jm4pKXJldHVybiBuO2Zvcih2YXIgcj0xNSZuLGk9MCxhPTAsbz1lLnBsYWNlO2E8cjthKyssbysrKWk8PD04LGl8PXRbb107cmV0dXJuIGUucGxhY2U9byxpfWZ1bmN0aW9uIGModCl7Zm9yKHZhciBlPTAsbj10Lmxlbmd0aC0xOyF0W2VdJiYhKDEyOCZ0W2UrMV0pJiZlPG47KWUrKztyZXR1cm4gMD09PWU/dDp0LnNsaWNlKGUpfWZ1bmN0aW9uIGwodCxlKXtpZihlPDEyOCl0LnB1c2goZSk7ZWxzZXt2YXIgbj0xKyhNYXRoLmxvZyhlKS9NYXRoLkxOMj4+PjMpO2Zvcih0LnB1c2goMTI4fG4pOy0tbjspdC5wdXNoKGU+Pj4objw8MykmMjU1KTt0LnB1c2goZSl9fXQuZXhwb3J0cz1vLG8ucHJvdG90eXBlLl9pbXBvcnRERVI9ZnVuY3Rpb24odCxlKXt0PWkudG9BcnJheSh0LGUpO3ZhciBuPW5ldyBzO2lmKDQ4IT09dFtuLnBsYWNlKytdKXJldHVybiExO2lmKHUodCxuKStuLnBsYWNlIT09dC5sZW5ndGgpcmV0dXJuITE7aWYoMiE9PXRbbi5wbGFjZSsrXSlyZXR1cm4hMTt2YXIgYT11KHQsbiksbz10LnNsaWNlKG4ucGxhY2UsYStuLnBsYWNlKTtpZihuLnBsYWNlKz1hLDIhPT10W24ucGxhY2UrK10pcmV0dXJuITE7dmFyIGM9dSh0LG4pO2lmKHQubGVuZ3RoIT09YytuLnBsYWNlKXJldHVybiExO3ZhciBsPXQuc2xpY2Uobi5wbGFjZSxjK24ucGxhY2UpO3JldHVybiAwPT09b1swXSYmMTI4Jm9bMV0mJihvPW8uc2xpY2UoMSkpLDA9PT1sWzBdJiYxMjgmbFsxXSYmKGw9bC5zbGljZSgxKSksdGhpcy5yPW5ldyByKG8pLHRoaXMucz1uZXcgcihsKSx0aGlzLnJlY292ZXJ5UGFyYW09bnVsbCwhMH0sby5wcm90b3R5cGUudG9ERVI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5yLnRvQXJyYXkoKSxuPXRoaXMucy50b0FycmF5KCk7Zm9yKDEyOCZlWzBdJiYoZT1bMF0uY29uY2F0KGUpKSwxMjgmblswXSYmKG49WzBdLmNvbmNhdChuKSksZT1jKGUpLG49YyhuKTshKG5bMF18fDEyOCZuWzFdKTspbj1uLnNsaWNlKDEpO3ZhciByPVsyXTtsKHIsZS5sZW5ndGgpLChyPXIuY29uY2F0KGUpKS5wdXNoKDIpLGwocixuLmxlbmd0aCk7dmFyIGE9ci5jb25jYXQobiksbz1bNDhdO3JldHVybiBsKG8sYS5sZW5ndGgpLG89by5jb25jYXQoYSksaS5lbmNvZGUobyx0KX19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDY3KSxpPW4oOCksYT1pLnV0aWxzLG89YS5hc3NlcnQscz1hLnBhcnNlQnl0ZXMsdT1uKDE5OSksYz1uKDIwMCk7ZnVuY3Rpb24gbCh0KXtpZihvKFwiZWQyNTUxOVwiPT09dCxcIm9ubHkgdGVzdGVkIHdpdGggZWQyNTUxOSBzbyBmYXJcIiksISh0aGlzIGluc3RhbmNlb2YgbCkpcmV0dXJuIG5ldyBsKHQpO3Q9aS5jdXJ2ZXNbdF0uY3VydmU7dGhpcy5jdXJ2ZT10LHRoaXMuZz10LmcsdGhpcy5nLnByZWNvbXB1dGUodC5uLmJpdExlbmd0aCgpKzEpLHRoaXMucG9pbnRDbGFzcz10LnBvaW50KCkuY29uc3RydWN0b3IsdGhpcy5lbmNvZGluZ0xlbmd0aD1NYXRoLmNlaWwodC5uLmJpdExlbmd0aCgpLzgpLHRoaXMuaGFzaD1yLnNoYTUxMn10LmV4cG9ydHM9bCxsLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQsZSl7dD1zKHQpO3ZhciBuPXRoaXMua2V5RnJvbVNlY3JldChlKSxyPXRoaXMuaGFzaEludChuLm1lc3NhZ2VQcmVmaXgoKSx0KSxpPXRoaXMuZy5tdWwociksYT10aGlzLmVuY29kZVBvaW50KGkpLG89dGhpcy5oYXNoSW50KGEsbi5wdWJCeXRlcygpLHQpLm11bChuLnByaXYoKSksdT1yLmFkZChvKS51bW9kKHRoaXMuY3VydmUubik7cmV0dXJuIHRoaXMubWFrZVNpZ25hdHVyZSh7UjppLFM6dSxSZW5jb2RlZDphfSl9LGwucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LGUsbil7dD1zKHQpLGU9dGhpcy5tYWtlU2lnbmF0dXJlKGUpO3ZhciByPXRoaXMua2V5RnJvbVB1YmxpYyhuKSxpPXRoaXMuaGFzaEludChlLlJlbmNvZGVkKCksci5wdWJCeXRlcygpLHQpLGE9dGhpcy5nLm11bChlLlMoKSk7cmV0dXJuIGUuUigpLmFkZChyLnB1YigpLm11bChpKSkuZXEoYSl9LGwucHJvdG90eXBlLmhhc2hJbnQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5oYXNoKCksZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdC51cGRhdGUoYXJndW1lbnRzW2VdKTtyZXR1cm4gYS5pbnRGcm9tTEUodC5kaWdlc3QoKSkudW1vZCh0aGlzLmN1cnZlLm4pfSxsLnByb3RvdHlwZS5rZXlGcm9tUHVibGljPWZ1bmN0aW9uKHQpe3JldHVybiB1LmZyb21QdWJsaWModGhpcyx0KX0sbC5wcm90b3R5cGUua2V5RnJvbVNlY3JldD1mdW5jdGlvbih0KXtyZXR1cm4gdS5mcm9tU2VjcmV0KHRoaXMsdCl9LGwucHJvdG90eXBlLm1ha2VTaWduYXR1cmU9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBjP3Q6bmV3IGModGhpcyx0KX0sbC5wcm90b3R5cGUuZW5jb2RlUG9pbnQ9ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRZKCkudG9BcnJheShcImxlXCIsdGhpcy5lbmNvZGluZ0xlbmd0aCk7cmV0dXJuIGVbdGhpcy5lbmNvZGluZ0xlbmd0aC0xXXw9dC5nZXRYKCkuaXNPZGQoKT8xMjg6MCxlfSxsLnByb3RvdHlwZS5kZWNvZGVQb2ludD1mdW5jdGlvbih0KXt2YXIgZT0odD1hLnBhcnNlQnl0ZXModCkpLmxlbmd0aC0xLG49dC5zbGljZSgwLGUpLmNvbmNhdCgtMTI5JnRbZV0pLHI9MCE9KDEyOCZ0W2VdKSxpPWEuaW50RnJvbUxFKG4pO3JldHVybiB0aGlzLmN1cnZlLnBvaW50RnJvbVkoaSxyKX0sbC5wcm90b3R5cGUuZW5jb2RlSW50PWZ1bmN0aW9uKHQpe3JldHVybiB0LnRvQXJyYXkoXCJsZVwiLHRoaXMuZW5jb2RpbmdMZW5ndGgpfSxsLnByb3RvdHlwZS5kZWNvZGVJbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIGEuaW50RnJvbUxFKHQpfSxsLnByb3RvdHlwZS5pc1BvaW50PWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgdGhpcy5wb2ludENsYXNzfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oOCkudXRpbHMsaT1yLmFzc2VydCxhPXIucGFyc2VCeXRlcyxvPXIuY2FjaGVkUHJvcGVydHk7ZnVuY3Rpb24gcyh0LGUpe3RoaXMuZWRkc2E9dCx0aGlzLl9zZWNyZXQ9YShlLnNlY3JldCksdC5pc1BvaW50KGUucHViKT90aGlzLl9wdWI9ZS5wdWI6dGhpcy5fcHViQnl0ZXM9YShlLnB1Yil9cy5mcm9tUHVibGljPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBzP2U6bmV3IHModCx7cHViOmV9KX0scy5mcm9tU2VjcmV0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBzP2U6bmV3IHModCx7c2VjcmV0OmV9KX0scy5wcm90b3R5cGUuc2VjcmV0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlY3JldH0sbyhzLFwicHViQnl0ZXNcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZHNhLmVuY29kZVBvaW50KHRoaXMucHViKCkpfSksbyhzLFwicHViXCIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHViQnl0ZXM/dGhpcy5lZGRzYS5kZWNvZGVQb2ludCh0aGlzLl9wdWJCeXRlcyk6dGhpcy5lZGRzYS5nLm11bCh0aGlzLnByaXYoKSl9KSxvKHMsXCJwcml2Qnl0ZXNcIixmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWRkc2EsZT10aGlzLmhhc2goKSxuPXQuZW5jb2RpbmdMZW5ndGgtMSxyPWUuc2xpY2UoMCx0LmVuY29kaW5nTGVuZ3RoKTtyZXR1cm4gclswXSY9MjQ4LHJbbl0mPTEyNyxyW25dfD02NCxyfSksbyhzLFwicHJpdlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRkc2EuZGVjb2RlSW50KHRoaXMucHJpdkJ5dGVzKCkpfSksbyhzLFwiaGFzaFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRkc2EuaGFzaCgpLnVwZGF0ZSh0aGlzLnNlY3JldCgpKS5kaWdlc3QoKX0pLG8ocyxcIm1lc3NhZ2VQcmVmaXhcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLmhhc2goKS5zbGljZSh0aGlzLmVkZHNhLmVuY29kaW5nTGVuZ3RoKX0pLHMucHJvdG90eXBlLnNpZ249ZnVuY3Rpb24odCl7cmV0dXJuIGkodGhpcy5fc2VjcmV0LFwiS2V5UGFpciBjYW4gb25seSB2ZXJpZnlcIiksdGhpcy5lZGRzYS5zaWduKHQsdGhpcyl9LHMucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmVkZHNhLnZlcmlmeSh0LGUsdGhpcyl9LHMucHJvdG90eXBlLmdldFNlY3JldD1mdW5jdGlvbih0KXtyZXR1cm4gaSh0aGlzLl9zZWNyZXQsXCJLZXlQYWlyIGlzIHB1YmxpYyBvbmx5XCIpLHIuZW5jb2RlKHRoaXMuc2VjcmV0KCksdCl9LHMucHJvdG90eXBlLmdldFB1YmxpYz1mdW5jdGlvbih0KXtyZXR1cm4gci5lbmNvZGUodGhpcy5wdWJCeXRlcygpLHQpfSx0LmV4cG9ydHM9c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNSksaT1uKDgpLnV0aWxzLGE9aS5hc3NlcnQsbz1pLmNhY2hlZFByb3BlcnR5LHM9aS5wYXJzZUJ5dGVzO2Z1bmN0aW9uIHUodCxlKXt0aGlzLmVkZHNhPXQsXCJvYmplY3RcIiE9dHlwZW9mIGUmJihlPXMoZSkpLEFycmF5LmlzQXJyYXkoZSkmJihlPXtSOmUuc2xpY2UoMCx0LmVuY29kaW5nTGVuZ3RoKSxTOmUuc2xpY2UodC5lbmNvZGluZ0xlbmd0aCl9KSxhKGUuUiYmZS5TLFwiU2lnbmF0dXJlIHdpdGhvdXQgUiBvciBTXCIpLHQuaXNQb2ludChlLlIpJiYodGhpcy5fUj1lLlIpLGUuUyBpbnN0YW5jZW9mIHImJih0aGlzLl9TPWUuUyksdGhpcy5fUmVuY29kZWQ9QXJyYXkuaXNBcnJheShlLlIpP2UuUjplLlJlbmNvZGVkLHRoaXMuX1NlbmNvZGVkPUFycmF5LmlzQXJyYXkoZS5TKT9lLlM6ZS5TZW5jb2RlZH1vKHUsXCJTXCIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lZGRzYS5kZWNvZGVJbnQodGhpcy5TZW5jb2RlZCgpKX0pLG8odSxcIlJcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZHNhLmRlY29kZVBvaW50KHRoaXMuUmVuY29kZWQoKSl9KSxvKHUsXCJSZW5jb2RlZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRkc2EuZW5jb2RlUG9pbnQodGhpcy5SKCkpfSksbyh1LFwiU2VuY29kZWRcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLmVkZHNhLmVuY29kZUludCh0aGlzLlMoKSl9KSx1LnByb3RvdHlwZS50b0J5dGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuUmVuY29kZWQoKS5jb25jYXQodGhpcy5TZW5jb2RlZCgpKX0sdS5wcm90b3R5cGUudG9IZXg9ZnVuY3Rpb24oKXtyZXR1cm4gaS5lbmNvZGUodGhpcy50b0J5dGVzKCksXCJoZXhcIikudG9VcHBlckNhc2UoKX0sdC5leHBvcnRzPXV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj1uKDM0KTtlLmNlcnRpZmljYXRlPW4oMjEyKTt2YXIgaT1yLmRlZmluZShcIlJTQVByaXZhdGVLZXlcIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwidmVyc2lvblwiKS5pbnQoKSx0aGlzLmtleShcIm1vZHVsdXNcIikuaW50KCksdGhpcy5rZXkoXCJwdWJsaWNFeHBvbmVudFwiKS5pbnQoKSx0aGlzLmtleShcInByaXZhdGVFeHBvbmVudFwiKS5pbnQoKSx0aGlzLmtleShcInByaW1lMVwiKS5pbnQoKSx0aGlzLmtleShcInByaW1lMlwiKS5pbnQoKSx0aGlzLmtleShcImV4cG9uZW50MVwiKS5pbnQoKSx0aGlzLmtleShcImV4cG9uZW50MlwiKS5pbnQoKSx0aGlzLmtleShcImNvZWZmaWNpZW50XCIpLmludCgpKX0pO2UuUlNBUHJpdmF0ZUtleT1pO3ZhciBhPXIuZGVmaW5lKFwiUlNBUHVibGljS2V5XCIsZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcIm1vZHVsdXNcIikuaW50KCksdGhpcy5rZXkoXCJwdWJsaWNFeHBvbmVudFwiKS5pbnQoKSl9KTtlLlJTQVB1YmxpY0tleT1hO3ZhciBvPXIuZGVmaW5lKFwiU3ViamVjdFB1YmxpY0tleUluZm9cIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb3JpdGhtXCIpLnVzZShzKSx0aGlzLmtleShcInN1YmplY3RQdWJsaWNLZXlcIikuYml0c3RyKCkpfSk7ZS5QdWJsaWNLZXk9bzt2YXIgcz1yLmRlZmluZShcIkFsZ29yaXRobUlkZW50aWZpZXJcIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb3JpdGhtXCIpLm9iamlkKCksdGhpcy5rZXkoXCJub25lXCIpLm51bGxfKCkub3B0aW9uYWwoKSx0aGlzLmtleShcImN1cnZlXCIpLm9iamlkKCkub3B0aW9uYWwoKSx0aGlzLmtleShcInBhcmFtc1wiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJwXCIpLmludCgpLHRoaXMua2V5KFwicVwiKS5pbnQoKSx0aGlzLmtleShcImdcIikuaW50KCkpLm9wdGlvbmFsKCkpfSksdT1yLmRlZmluZShcIlByaXZhdGVLZXlJbmZvXCIsZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuaW50KCksdGhpcy5rZXkoXCJhbGdvcml0aG1cIikudXNlKHMpLHRoaXMua2V5KFwic3ViamVjdFByaXZhdGVLZXlcIikub2N0c3RyKCkpfSk7ZS5Qcml2YXRlS2V5PXU7dmFyIGM9ci5kZWZpbmUoXCJFbmNyeXB0ZWRQcml2YXRlS2V5SW5mb1wiLGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJhbGdvcml0aG1cIikuc2VxKCkub2JqKHRoaXMua2V5KFwiaWRcIikub2JqaWQoKSx0aGlzLmtleShcImRlY3J5cHRcIikuc2VxKCkub2JqKHRoaXMua2V5KFwia2RlXCIpLnNlcSgpLm9iaih0aGlzLmtleShcImlkXCIpLm9iamlkKCksdGhpcy5rZXkoXCJrZGVwYXJhbXNcIikuc2VxKCkub2JqKHRoaXMua2V5KFwic2FsdFwiKS5vY3RzdHIoKSx0aGlzLmtleShcIml0ZXJzXCIpLmludCgpKSksdGhpcy5rZXkoXCJjaXBoZXJcIikuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb1wiKS5vYmppZCgpLHRoaXMua2V5KFwiaXZcIikub2N0c3RyKCkpKSksdGhpcy5rZXkoXCJzdWJqZWN0UHJpdmF0ZUtleVwiKS5vY3RzdHIoKSl9KTtlLkVuY3J5cHRlZFByaXZhdGVLZXk9Yzt2YXIgbD1yLmRlZmluZShcIkRTQVByaXZhdGVLZXlcIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwidmVyc2lvblwiKS5pbnQoKSx0aGlzLmtleShcInBcIikuaW50KCksdGhpcy5rZXkoXCJxXCIpLmludCgpLHRoaXMua2V5KFwiZ1wiKS5pbnQoKSx0aGlzLmtleShcInB1Yl9rZXlcIikuaW50KCksdGhpcy5rZXkoXCJwcml2X2tleVwiKS5pbnQoKSl9KTtlLkRTQVByaXZhdGVLZXk9bCxlLkRTQXBhcmFtPXIuZGVmaW5lKFwiRFNBcGFyYW1cIixmdW5jdGlvbigpe3RoaXMuaW50KCl9KTt2YXIgZj1yLmRlZmluZShcIkVDUHJpdmF0ZUtleVwiLGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJ2ZXJzaW9uXCIpLmludCgpLHRoaXMua2V5KFwicHJpdmF0ZUtleVwiKS5vY3RzdHIoKSx0aGlzLmtleShcInBhcmFtZXRlcnNcIikub3B0aW9uYWwoKS5leHBsaWNpdCgwKS51c2UoaCksdGhpcy5rZXkoXCJwdWJsaWNLZXlcIikub3B0aW9uYWwoKS5leHBsaWNpdCgxKS5iaXRzdHIoKSl9KTtlLkVDUHJpdmF0ZUtleT1mO3ZhciBoPXIuZGVmaW5lKFwiRUNQYXJhbWV0ZXJzXCIsZnVuY3Rpb24oKXt0aGlzLmNob2ljZSh7bmFtZWRDdXJ2ZTp0aGlzLm9iamlkKCl9KX0pO2Uuc2lnbmF0dXJlPXIuZGVmaW5lKFwic2lnbmF0dXJlXCIsZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInJcIikuaW50KCksdGhpcy5rZXkoXCJzXCIpLmludCgpKX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigzNCksaT1uKDIpO2Z1bmN0aW9uIGEodCxlKXt0aGlzLm5hbWU9dCx0aGlzLmJvZHk9ZSx0aGlzLmRlY29kZXJzPXt9LHRoaXMuZW5jb2RlcnM9e319ZS5kZWZpbmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IGEodCxlKX0sYS5wcm90b3R5cGUuX2NyZWF0ZU5hbWVkPWZ1bmN0aW9uKHQpe3ZhciBlO3RyeXtlPW4oMjAzKS5ydW5JblRoaXNDb250ZXh0KFwiKGZ1bmN0aW9uIFwiK3RoaXMubmFtZStcIihlbnRpdHkpIHtcXG4gIHRoaXMuX2luaXROYW1lZChlbnRpdHkpO1xcbn0pXCIpfWNhdGNoKHQpe2U9ZnVuY3Rpb24odCl7dGhpcy5faW5pdE5hbWVkKHQpfX1yZXR1cm4gaShlLHQpLGUucHJvdG90eXBlLl9pbml0TmFtZWQ9ZnVuY3Rpb24oZSl7dC5jYWxsKHRoaXMsZSl9LG5ldyBlKHRoaXMpfSxhLnByb3RvdHlwZS5fZ2V0RGVjb2Rlcj1mdW5jdGlvbih0KXtyZXR1cm4gdD10fHxcImRlclwiLHRoaXMuZGVjb2RlcnMuaGFzT3duUHJvcGVydHkodCl8fCh0aGlzLmRlY29kZXJzW3RdPXRoaXMuX2NyZWF0ZU5hbWVkKHIuZGVjb2RlcnNbdF0pKSx0aGlzLmRlY29kZXJzW3RdfSxhLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLl9nZXREZWNvZGVyKGUpLmRlY29kZSh0LG4pfSxhLnByb3RvdHlwZS5fZ2V0RW5jb2Rlcj1mdW5jdGlvbih0KXtyZXR1cm4gdD10fHxcImRlclwiLHRoaXMuZW5jb2RlcnMuaGFzT3duUHJvcGVydHkodCl8fCh0aGlzLmVuY29kZXJzW3RdPXRoaXMuX2NyZWF0ZU5hbWVkKHIuZW5jb2RlcnNbdF0pKSx0aGlzLmVuY29kZXJzW3RdfSxhLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLl9nZXRFbmNvZGVyKGUpLmVuY29kZSh0LG4pfX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7dmFyIGluZGV4T2Y9X193ZWJwYWNrX3JlcXVpcmVfXygyMDQpLE9iamVjdF9rZXlzPWZ1bmN0aW9uKHQpe2lmKE9iamVjdC5rZXlzKXJldHVybiBPYmplY3Qua2V5cyh0KTt2YXIgZT1bXTtmb3IodmFyIG4gaW4gdCllLnB1c2gobik7cmV0dXJuIGV9LGZvckVhY2g9ZnVuY3Rpb24odCxlKXtpZih0LmZvckVhY2gpcmV0dXJuIHQuZm9yRWFjaChlKTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyllKHRbbl0sbix0KX0sZGVmaW5lUHJvcD1mdW5jdGlvbigpe3RyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LFwiX1wiLHt9KSxmdW5jdGlvbih0LGUsbil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7d3JpdGFibGU6ITAsZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsdmFsdWU6bn0pfX1jYXRjaCh0KXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3RbZV09bn19fSgpLGdsb2JhbHM9W1wiQXJyYXlcIixcIkJvb2xlYW5cIixcIkRhdGVcIixcIkVycm9yXCIsXCJFdmFsRXJyb3JcIixcIkZ1bmN0aW9uXCIsXCJJbmZpbml0eVwiLFwiSlNPTlwiLFwiTWF0aFwiLFwiTmFOXCIsXCJOdW1iZXJcIixcIk9iamVjdFwiLFwiUmFuZ2VFcnJvclwiLFwiUmVmZXJlbmNlRXJyb3JcIixcIlJlZ0V4cFwiLFwiU3RyaW5nXCIsXCJTeW50YXhFcnJvclwiLFwiVHlwZUVycm9yXCIsXCJVUklFcnJvclwiLFwiZGVjb2RlVVJJXCIsXCJkZWNvZGVVUklDb21wb25lbnRcIixcImVuY29kZVVSSVwiLFwiZW5jb2RlVVJJQ29tcG9uZW50XCIsXCJlc2NhcGVcIixcImV2YWxcIixcImlzRmluaXRlXCIsXCJpc05hTlwiLFwicGFyc2VGbG9hdFwiLFwicGFyc2VJbnRcIixcInVuZGVmaW5lZFwiLFwidW5lc2NhcGVcIl07ZnVuY3Rpb24gQ29udGV4dCgpe31Db250ZXh0LnByb3RvdHlwZT17fTt2YXIgU2NyaXB0PWV4cG9ydHMuU2NyaXB0PWZ1bmN0aW9uKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFNjcmlwdCkpcmV0dXJuIG5ldyBTY3JpcHQodCk7dGhpcy5jb2RlPXR9O1NjcmlwdC5wcm90b3R5cGUucnVuSW5Db250ZXh0PWZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIENvbnRleHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJuZWVkcyBhICdjb250ZXh0JyBhcmd1bWVudC5cIik7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtlLnN0eWxlfHwoZS5zdHlsZT17fSksZS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSk7dmFyIG49ZS5jb250ZW50V2luZG93LHI9bi5ldmFsLGk9bi5leGVjU2NyaXB0OyFyJiZpJiYoaS5jYWxsKG4sXCJudWxsXCIpLHI9bi5ldmFsKSxmb3JFYWNoKE9iamVjdF9rZXlzKHQpLGZ1bmN0aW9uKGUpe25bZV09dFtlXX0pLGZvckVhY2goZ2xvYmFscyxmdW5jdGlvbihlKXt0W2VdJiYobltlXT10W2VdKX0pO3ZhciBhPU9iamVjdF9rZXlzKG4pLG89ci5jYWxsKG4sdGhpcy5jb2RlKTtyZXR1cm4gZm9yRWFjaChPYmplY3Rfa2V5cyhuKSxmdW5jdGlvbihlKXsoZSBpbiB0fHwtMT09PWluZGV4T2YoYSxlKSkmJih0W2VdPW5bZV0pfSksZm9yRWFjaChnbG9iYWxzLGZ1bmN0aW9uKGUpe2UgaW4gdHx8ZGVmaW5lUHJvcCh0LGUsbltlXSl9KSxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGUpLG99LFNjcmlwdC5wcm90b3R5cGUucnVuSW5UaGlzQ29udGV4dD1mdW5jdGlvbigpe3JldHVybiBldmFsKHRoaXMuY29kZSl9LFNjcmlwdC5wcm90b3R5cGUucnVuSW5OZXdDb250ZXh0PWZ1bmN0aW9uKHQpe3ZhciBlPVNjcmlwdC5jcmVhdGVDb250ZXh0KHQpLG49dGhpcy5ydW5JbkNvbnRleHQoZSk7cmV0dXJuIGZvckVhY2goT2JqZWN0X2tleXMoZSksZnVuY3Rpb24obil7dFtuXT1lW25dfSksbn0sZm9yRWFjaChPYmplY3Rfa2V5cyhTY3JpcHQucHJvdG90eXBlKSxmdW5jdGlvbih0KXtleHBvcnRzW3RdPVNjcmlwdFt0XT1mdW5jdGlvbihlKXt2YXIgbj1TY3JpcHQoZSk7cmV0dXJuIG5bdF0uYXBwbHkobixbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSl9fSksZXhwb3J0cy5jcmVhdGVTY3JpcHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGV4cG9ydHMuU2NyaXB0KHQpfSxleHBvcnRzLmNyZWF0ZUNvbnRleHQ9U2NyaXB0LmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IENvbnRleHQ7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHQmJmZvckVhY2goT2JqZWN0X2tleXModCksZnVuY3Rpb24obil7ZVtuXT10W25dfSksZX19LGZ1bmN0aW9uKHQsZSl7dmFyIG49W10uaW5kZXhPZjt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihuKXJldHVybiB0LmluZGV4T2YoZSk7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDsrK3IpaWYodFtyXT09PWUpcmV0dXJuIHI7cmV0dXJuLTF9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9bigyKTtmdW5jdGlvbiBpKHQpe3RoaXMuX3JlcG9ydGVyU3RhdGU9e29iajpudWxsLHBhdGg6W10sb3B0aW9uczp0fHx7fSxlcnJvcnM6W119fWZ1bmN0aW9uIGEodCxlKXt0aGlzLnBhdGg9dCx0aGlzLnJldGhyb3coZSl9ZS5SZXBvcnRlcj1pLGkucHJvdG90eXBlLmlzRXJyb3I9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBhfSxpLnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcmVwb3J0ZXJTdGF0ZTtyZXR1cm57b2JqOnQub2JqLHBhdGhMZW46dC5wYXRoLmxlbmd0aH19LGkucHJvdG90eXBlLnJlc3RvcmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmVwb3J0ZXJTdGF0ZTtlLm9iaj10Lm9iaixlLnBhdGg9ZS5wYXRoLnNsaWNlKDAsdC5wYXRoTGVuKX0saS5wcm90b3R5cGUuZW50ZXJLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3JlcG9ydGVyU3RhdGUucGF0aC5wdXNoKHQpfSxpLnByb3RvdHlwZS5leGl0S2V5PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3JlcG9ydGVyU3RhdGU7ZS5wYXRoPWUucGF0aC5zbGljZSgwLHQtMSl9LGkucHJvdG90eXBlLmxlYXZlS2V5PWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLl9yZXBvcnRlclN0YXRlO3RoaXMuZXhpdEtleSh0KSxudWxsIT09ci5vYmomJihyLm9ialtlXT1uKX0saS5wcm90b3R5cGUucGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZXBvcnRlclN0YXRlLnBhdGguam9pbihcIi9cIil9LGkucHJvdG90eXBlLmVudGVyT2JqZWN0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fcmVwb3J0ZXJTdGF0ZSxlPXQub2JqO3JldHVybiB0Lm9iaj17fSxlfSxpLnByb3RvdHlwZS5sZWF2ZU9iamVjdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9yZXBvcnRlclN0YXRlLG49ZS5vYmo7cmV0dXJuIGUub2JqPXQsbn0saS5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLl9yZXBvcnRlclN0YXRlLHI9dCBpbnN0YW5jZW9mIGE7aWYoZT1yP3Q6bmV3IGEobi5wYXRoLm1hcChmdW5jdGlvbih0KXtyZXR1cm5cIltcIitKU09OLnN0cmluZ2lmeSh0KStcIl1cIn0pLmpvaW4oXCJcIiksdC5tZXNzYWdlfHx0LHQuc3RhY2spLCFuLm9wdGlvbnMucGFydGlhbCl0aHJvdyBlO3JldHVybiByfHxuLmVycm9ycy5wdXNoKGUpLGV9LGkucHJvdG90eXBlLndyYXBSZXN1bHQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcmVwb3J0ZXJTdGF0ZTtyZXR1cm4gZS5vcHRpb25zLnBhcnRpYWw/e3Jlc3VsdDp0aGlzLmlzRXJyb3IodCk/bnVsbDp0LGVycm9yczplLmVycm9yc306dH0scihhLEVycm9yKSxhLnByb3RvdHlwZS5yZXRocm93PWZ1bmN0aW9uKHQpe2lmKHRoaXMubWVzc2FnZT10K1wiIGF0OiBcIisodGhpcy5wYXRofHxcIihzaGFsbG93KVwiKSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSYmRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcyxhKSwhdGhpcy5zdGFjayl0cnl7dGhyb3cgbmV3IEVycm9yKHRoaXMubWVzc2FnZSl9Y2F0Y2godCl7dGhpcy5zdGFjaz10LnN0YWNrfXJldHVybiB0aGlzfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMzUpLlJlcG9ydGVyLGk9bigzNSkuRW5jb2RlckJ1ZmZlcixhPW4oMzUpLkRlY29kZXJCdWZmZXIsbz1uKDEyKSxzPVtcInNlcVwiLFwic2Vxb2ZcIixcInNldFwiLFwic2V0b2ZcIixcIm9iamlkXCIsXCJib29sXCIsXCJnZW50aW1lXCIsXCJ1dGN0aW1lXCIsXCJudWxsX1wiLFwiZW51bVwiLFwiaW50XCIsXCJvYmpEZXNjXCIsXCJiaXRzdHJcIixcImJtcHN0clwiLFwiY2hhcnN0clwiLFwiZ2Vuc3RyXCIsXCJncmFwaHN0clwiLFwiaWE1c3RyXCIsXCJpc282NDZzdHJcIixcIm51bXN0clwiLFwib2N0c3RyXCIsXCJwcmludHN0clwiLFwidDYxc3RyXCIsXCJ1bmlzdHJcIixcInV0ZjhzdHJcIixcInZpZGVvc3RyXCJdLHU9W1wia2V5XCIsXCJvYmpcIixcInVzZVwiLFwib3B0aW9uYWxcIixcImV4cGxpY2l0XCIsXCJpbXBsaWNpdFwiLFwiZGVmXCIsXCJjaG9pY2VcIixcImFueVwiLFwiY29udGFpbnNcIl0uY29uY2F0KHMpO2Z1bmN0aW9uIGModCxlKXt2YXIgbj17fTt0aGlzLl9iYXNlU3RhdGU9bixuLmVuYz10LG4ucGFyZW50PWV8fG51bGwsbi5jaGlsZHJlbj1udWxsLG4udGFnPW51bGwsbi5hcmdzPW51bGwsbi5yZXZlcnNlQXJncz1udWxsLG4uY2hvaWNlPW51bGwsbi5vcHRpb25hbD0hMSxuLmFueT0hMSxuLm9iaj0hMSxuLnVzZT1udWxsLG4udXNlRGVjb2Rlcj1udWxsLG4ua2V5PW51bGwsbi5kZWZhdWx0PW51bGwsbi5leHBsaWNpdD1udWxsLG4uaW1wbGljaXQ9bnVsbCxuLmNvbnRhaW5zPW51bGwsbi5wYXJlbnR8fChuLmNoaWxkcmVuPVtdLHRoaXMuX3dyYXAoKSl9dC5leHBvcnRzPWM7dmFyIGw9W1wiZW5jXCIsXCJwYXJlbnRcIixcImNoaWxkcmVuXCIsXCJ0YWdcIixcImFyZ3NcIixcInJldmVyc2VBcmdzXCIsXCJjaG9pY2VcIixcIm9wdGlvbmFsXCIsXCJhbnlcIixcIm9ialwiLFwidXNlXCIsXCJhbHRlcmVkVXNlXCIsXCJrZXlcIixcImRlZmF1bHRcIixcImV4cGxpY2l0XCIsXCJpbXBsaWNpdFwiLFwiY29udGFpbnNcIl07Yy5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9iYXNlU3RhdGUsZT17fTtsLmZvckVhY2goZnVuY3Rpb24obil7ZVtuXT10W25dfSk7dmFyIG49bmV3IHRoaXMuY29uc3RydWN0b3IoZS5wYXJlbnQpO3JldHVybiBuLl9iYXNlU3RhdGU9ZSxufSxjLnByb3RvdHlwZS5fd3JhcD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2Jhc2VTdGF0ZTt1LmZvckVhY2goZnVuY3Rpb24oZSl7dGhpc1tlXT1mdW5jdGlvbigpe3ZhciBuPW5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMpO3JldHVybiB0LmNoaWxkcmVuLnB1c2gobiksbltlXS5hcHBseShuLGFyZ3VtZW50cyl9fSx0aGlzKX0sYy5wcm90b3R5cGUuX2luaXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fYmFzZVN0YXRlO28obnVsbD09PWUucGFyZW50KSx0LmNhbGwodGhpcyksZS5jaGlsZHJlbj1lLmNoaWxkcmVuLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC5fYmFzZVN0YXRlLnBhcmVudD09PXRoaXN9LHRoaXMpLG8uZXF1YWwoZS5jaGlsZHJlbi5sZW5ndGgsMSxcIlJvb3Qgbm9kZSBjYW4gaGF2ZSBvbmx5IG9uZSBjaGlsZFwiKX0sYy5wcm90b3R5cGUuX3VzZUFyZ3M9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fYmFzZVN0YXRlLG49dC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yfSx0aGlzKTt0PXQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiEodCBpbnN0YW5jZW9mIHRoaXMuY29uc3RydWN0b3IpfSx0aGlzKSwwIT09bi5sZW5ndGgmJihvKG51bGw9PT1lLmNoaWxkcmVuKSxlLmNoaWxkcmVuPW4sbi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QuX2Jhc2VTdGF0ZS5wYXJlbnQ9dGhpc30sdGhpcykpLDAhPT10Lmxlbmd0aCYmKG8obnVsbD09PWUuYXJncyksZS5hcmdzPXQsZS5yZXZlcnNlQXJncz10Lm1hcChmdW5jdGlvbih0KXtpZihcIm9iamVjdFwiIT10eXBlb2YgdHx8dC5jb25zdHJ1Y3RvciE9PU9iamVjdClyZXR1cm4gdDt2YXIgZT17fTtyZXR1cm4gT2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihuKXtuPT0oMHxuKSYmKG58PTApO3ZhciByPXRbbl07ZVtyXT1ufSksZX0pKX0sW1wiX3BlZWtUYWdcIixcIl9kZWNvZGVUYWdcIixcIl91c2VcIixcIl9kZWNvZGVTdHJcIixcIl9kZWNvZGVPYmppZFwiLFwiX2RlY29kZVRpbWVcIixcIl9kZWNvZGVOdWxsXCIsXCJfZGVjb2RlSW50XCIsXCJfZGVjb2RlQm9vbFwiLFwiX2RlY29kZUxpc3RcIixcIl9lbmNvZGVDb21wb3NpdGVcIixcIl9lbmNvZGVTdHJcIixcIl9lbmNvZGVPYmppZFwiLFwiX2VuY29kZVRpbWVcIixcIl9lbmNvZGVOdWxsXCIsXCJfZW5jb2RlSW50XCIsXCJfZW5jb2RlQm9vbFwiXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2MucHJvdG90eXBlW3RdPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fYmFzZVN0YXRlO3Rocm93IG5ldyBFcnJvcih0K1wiIG5vdCBpbXBsZW1lbnRlZCBmb3IgZW5jb2Rpbmc6IFwiK2UuZW5jKX19KSxzLmZvckVhY2goZnVuY3Rpb24odCl7Yy5wcm90b3R5cGVbdF09ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9iYXNlU3RhdGUsbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO3JldHVybiBvKG51bGw9PT1lLnRhZyksZS50YWc9dCx0aGlzLl91c2VBcmdzKG4pLHRoaXN9fSksYy5wcm90b3R5cGUudXNlPWZ1bmN0aW9uKHQpe28odCk7dmFyIGU9dGhpcy5fYmFzZVN0YXRlO3JldHVybiBvKG51bGw9PT1lLnVzZSksZS51c2U9dCx0aGlzfSxjLnByb3RvdHlwZS5vcHRpb25hbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9iYXNlU3RhdGUub3B0aW9uYWw9ITAsdGhpc30sYy5wcm90b3R5cGUuZGVmPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2Jhc2VTdGF0ZTtyZXR1cm4gbyhudWxsPT09ZS5kZWZhdWx0KSxlLmRlZmF1bHQ9dCxlLm9wdGlvbmFsPSEwLHRoaXN9LGMucHJvdG90eXBlLmV4cGxpY2l0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2Jhc2VTdGF0ZTtyZXR1cm4gbyhudWxsPT09ZS5leHBsaWNpdCYmbnVsbD09PWUuaW1wbGljaXQpLGUuZXhwbGljaXQ9dCx0aGlzfSxjLnByb3RvdHlwZS5pbXBsaWNpdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9iYXNlU3RhdGU7cmV0dXJuIG8obnVsbD09PWUuZXhwbGljaXQmJm51bGw9PT1lLmltcGxpY2l0KSxlLmltcGxpY2l0PXQsdGhpc30sYy5wcm90b3R5cGUub2JqPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlLGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm4gdC5vYmo9ITAsMCE9PWUubGVuZ3RoJiZ0aGlzLl91c2VBcmdzKGUpLHRoaXN9LGMucHJvdG90eXBlLmtleT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9iYXNlU3RhdGU7cmV0dXJuIG8obnVsbD09PWUua2V5KSxlLmtleT10LHRoaXN9LGMucHJvdG90eXBlLmFueT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9iYXNlU3RhdGUuYW55PSEwLHRoaXN9LGMucHJvdG90eXBlLmNob2ljZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9iYXNlU3RhdGU7cmV0dXJuIG8obnVsbD09PWUuY2hvaWNlKSxlLmNob2ljZT10LHRoaXMuX3VzZUFyZ3MoT2JqZWN0LmtleXModCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSkpLHRoaXN9LGMucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2Jhc2VTdGF0ZTtyZXR1cm4gbyhudWxsPT09ZS51c2UpLGUuY29udGFpbnM9dCx0aGlzfSxjLnByb3RvdHlwZS5fZGVjb2RlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fYmFzZVN0YXRlO2lmKG51bGw9PT1uLnBhcmVudClyZXR1cm4gdC53cmFwUmVzdWx0KG4uY2hpbGRyZW5bMF0uX2RlY29kZSh0LGUpKTt2YXIgcixpPW4uZGVmYXVsdCxvPSEwLHM9bnVsbDtpZihudWxsIT09bi5rZXkmJihzPXQuZW50ZXJLZXkobi5rZXkpKSxuLm9wdGlvbmFsKXt2YXIgdT1udWxsO2lmKG51bGwhPT1uLmV4cGxpY2l0P3U9bi5leHBsaWNpdDpudWxsIT09bi5pbXBsaWNpdD91PW4uaW1wbGljaXQ6bnVsbCE9PW4udGFnJiYodT1uLnRhZyksbnVsbCE9PXV8fG4uYW55KXtpZihvPXRoaXMuX3BlZWtUYWcodCx1LG4uYW55KSx0LmlzRXJyb3IobykpcmV0dXJuIG99ZWxzZXt2YXIgYz10LnNhdmUoKTt0cnl7bnVsbD09PW4uY2hvaWNlP3RoaXMuX2RlY29kZUdlbmVyaWMobi50YWcsdCxlKTp0aGlzLl9kZWNvZGVDaG9pY2UodCxlKSxvPSEwfWNhdGNoKHQpe289ITF9dC5yZXN0b3JlKGMpfX1pZihuLm9iaiYmbyYmKHI9dC5lbnRlck9iamVjdCgpKSxvKXtpZihudWxsIT09bi5leHBsaWNpdCl7dmFyIGw9dGhpcy5fZGVjb2RlVGFnKHQsbi5leHBsaWNpdCk7aWYodC5pc0Vycm9yKGwpKXJldHVybiBsO3Q9bH12YXIgZj10Lm9mZnNldDtpZihudWxsPT09bi51c2UmJm51bGw9PT1uLmNob2ljZSl7aWYobi5hbnkpYz10LnNhdmUoKTt2YXIgaD10aGlzLl9kZWNvZGVUYWcodCxudWxsIT09bi5pbXBsaWNpdD9uLmltcGxpY2l0Om4udGFnLG4uYW55KTtpZih0LmlzRXJyb3IoaCkpcmV0dXJuIGg7bi5hbnk/aT10LnJhdyhjKTp0PWh9aWYoZSYmZS50cmFjayYmbnVsbCE9PW4udGFnJiZlLnRyYWNrKHQucGF0aCgpLGYsdC5sZW5ndGgsXCJ0YWdnZWRcIiksZSYmZS50cmFjayYmbnVsbCE9PW4udGFnJiZlLnRyYWNrKHQucGF0aCgpLHQub2Zmc2V0LHQubGVuZ3RoLFwiY29udGVudFwiKSxpPW4uYW55P2k6bnVsbD09PW4uY2hvaWNlP3RoaXMuX2RlY29kZUdlbmVyaWMobi50YWcsdCxlKTp0aGlzLl9kZWNvZGVDaG9pY2UodCxlKSx0LmlzRXJyb3IoaSkpcmV0dXJuIGk7aWYobi5hbnl8fG51bGwhPT1uLmNob2ljZXx8bnVsbD09PW4uY2hpbGRyZW58fG4uY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihuKXtuLl9kZWNvZGUodCxlKX0pLG4uY29udGFpbnMmJihcIm9jdHN0clwiPT09bi50YWd8fFwiYml0c3RyXCI9PT1uLnRhZykpe3ZhciBwPW5ldyBhKGkpO2k9dGhpcy5fZ2V0VXNlKG4uY29udGFpbnMsdC5fcmVwb3J0ZXJTdGF0ZS5vYmopLl9kZWNvZGUocCxlKX19cmV0dXJuIG4ub2JqJiZvJiYoaT10LmxlYXZlT2JqZWN0KHIpKSxudWxsPT09bi5rZXl8fG51bGw9PT1pJiYhMCE9PW8/bnVsbCE9PXMmJnQuZXhpdEtleShzKTp0LmxlYXZlS2V5KHMsbi5rZXksaSksaX0sYy5wcm90b3R5cGUuX2RlY29kZUdlbmVyaWM9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXRoaXMuX2Jhc2VTdGF0ZTtyZXR1cm5cInNlcVwiPT09dHx8XCJzZXRcIj09PXQ/bnVsbDpcInNlcW9mXCI9PT10fHxcInNldG9mXCI9PT10P3RoaXMuX2RlY29kZUxpc3QoZSx0LHIuYXJnc1swXSxuKTovc3RyJC8udGVzdCh0KT90aGlzLl9kZWNvZGVTdHIoZSx0LG4pOlwib2JqaWRcIj09PXQmJnIuYXJncz90aGlzLl9kZWNvZGVPYmppZChlLHIuYXJnc1swXSxyLmFyZ3NbMV0sbik6XCJvYmppZFwiPT09dD90aGlzLl9kZWNvZGVPYmppZChlLG51bGwsbnVsbCxuKTpcImdlbnRpbWVcIj09PXR8fFwidXRjdGltZVwiPT09dD90aGlzLl9kZWNvZGVUaW1lKGUsdCxuKTpcIm51bGxfXCI9PT10P3RoaXMuX2RlY29kZU51bGwoZSxuKTpcImJvb2xcIj09PXQ/dGhpcy5fZGVjb2RlQm9vbChlLG4pOlwib2JqRGVzY1wiPT09dD90aGlzLl9kZWNvZGVTdHIoZSx0LG4pOlwiaW50XCI9PT10fHxcImVudW1cIj09PXQ/dGhpcy5fZGVjb2RlSW50KGUsci5hcmdzJiZyLmFyZ3NbMF0sbik6bnVsbCE9PXIudXNlP3RoaXMuX2dldFVzZShyLnVzZSxlLl9yZXBvcnRlclN0YXRlLm9iaikuX2RlY29kZShlLG4pOmUuZXJyb3IoXCJ1bmtub3duIHRhZzogXCIrdCl9LGMucHJvdG90eXBlLl9nZXRVc2U9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9iYXNlU3RhdGU7cmV0dXJuIG4udXNlRGVjb2Rlcj10aGlzLl91c2UodCxlKSxvKG51bGw9PT1uLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5wYXJlbnQpLG4udXNlRGVjb2Rlcj1uLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5jaGlsZHJlblswXSxuLmltcGxpY2l0IT09bi51c2VEZWNvZGVyLl9iYXNlU3RhdGUuaW1wbGljaXQmJihuLnVzZURlY29kZXI9bi51c2VEZWNvZGVyLmNsb25lKCksbi51c2VEZWNvZGVyLl9iYXNlU3RhdGUuaW1wbGljaXQ9bi5pbXBsaWNpdCksbi51c2VEZWNvZGVyfSxjLnByb3RvdHlwZS5fZGVjb2RlQ2hvaWNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fYmFzZVN0YXRlLHI9bnVsbCxpPSExO3JldHVybiBPYmplY3Qua2V5cyhuLmNob2ljZSkuc29tZShmdW5jdGlvbihhKXt2YXIgbz10LnNhdmUoKSxzPW4uY2hvaWNlW2FdO3RyeXt2YXIgdT1zLl9kZWNvZGUodCxlKTtpZih0LmlzRXJyb3IodSkpcmV0dXJuITE7cj17dHlwZTphLHZhbHVlOnV9LGk9ITB9Y2F0Y2goZSl7cmV0dXJuIHQucmVzdG9yZShvKSwhMX1yZXR1cm4hMH0sdGhpcyksaT9yOnQuZXJyb3IoXCJDaG9pY2Ugbm90IG1hdGNoZWRcIil9LGMucHJvdG90eXBlLl9jcmVhdGVFbmNvZGVyQnVmZmVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgaSh0LHRoaXMucmVwb3J0ZXIpfSxjLnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLl9iYXNlU3RhdGU7aWYobnVsbD09PXIuZGVmYXVsdHx8ci5kZWZhdWx0IT09dCl7dmFyIGk9dGhpcy5fZW5jb2RlVmFsdWUodCxlLG4pO2lmKHZvaWQgMCE9PWkmJiF0aGlzLl9za2lwRGVmYXVsdChpLGUsbikpcmV0dXJuIGl9fSxjLnByb3RvdHlwZS5fZW5jb2RlVmFsdWU9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMuX2Jhc2VTdGF0ZTtpZihudWxsPT09aS5wYXJlbnQpcmV0dXJuIGkuY2hpbGRyZW5bMF0uX2VuY29kZSh0LGV8fG5ldyByKTt2YXIgYT1udWxsO2lmKHRoaXMucmVwb3J0ZXI9ZSxpLm9wdGlvbmFsJiZ2b2lkIDA9PT10KXtpZihudWxsPT09aS5kZWZhdWx0KXJldHVybjt0PWkuZGVmYXVsdH12YXIgbz1udWxsLHM9ITE7aWYoaS5hbnkpYT10aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKHQpO2Vsc2UgaWYoaS5jaG9pY2UpYT10aGlzLl9lbmNvZGVDaG9pY2UodCxlKTtlbHNlIGlmKGkuY29udGFpbnMpbz10aGlzLl9nZXRVc2UoaS5jb250YWlucyxuKS5fZW5jb2RlKHQsZSkscz0hMDtlbHNlIGlmKGkuY2hpbGRyZW4pbz1pLmNoaWxkcmVuLm1hcChmdW5jdGlvbihuKXtpZihcIm51bGxfXCI9PT1uLl9iYXNlU3RhdGUudGFnKXJldHVybiBuLl9lbmNvZGUobnVsbCxlLHQpO2lmKG51bGw9PT1uLl9iYXNlU3RhdGUua2V5KXJldHVybiBlLmVycm9yKFwiQ2hpbGQgc2hvdWxkIGhhdmUgYSBrZXlcIik7dmFyIHI9ZS5lbnRlcktleShuLl9iYXNlU3RhdGUua2V5KTtpZihcIm9iamVjdFwiIT10eXBlb2YgdClyZXR1cm4gZS5lcnJvcihcIkNoaWxkIGV4cGVjdGVkLCBidXQgaW5wdXQgaXMgbm90IG9iamVjdFwiKTt2YXIgaT1uLl9lbmNvZGUodFtuLl9iYXNlU3RhdGUua2V5XSxlLHQpO3JldHVybiBlLmxlYXZlS2V5KHIpLGl9LHRoaXMpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdH0pLG89dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihvKTtlbHNlIGlmKFwic2Vxb2ZcIj09PWkudGFnfHxcInNldG9mXCI9PT1pLnRhZyl7aWYoIWkuYXJnc3x8MSE9PWkuYXJncy5sZW5ndGgpcmV0dXJuIGUuZXJyb3IoXCJUb28gbWFueSBhcmdzIGZvciA6IFwiK2kudGFnKTtpZighQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gZS5lcnJvcihcInNlcW9mL3NldG9mLCBidXQgZGF0YSBpcyBub3QgQXJyYXlcIik7dmFyIHU9dGhpcy5jbG9uZSgpO3UuX2Jhc2VTdGF0ZS5pbXBsaWNpdD1udWxsLG89dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcih0Lm1hcChmdW5jdGlvbihuKXt2YXIgcj10aGlzLl9iYXNlU3RhdGU7cmV0dXJuIHRoaXMuX2dldFVzZShyLmFyZ3NbMF0sdCkuX2VuY29kZShuLGUpfSx1KSl9ZWxzZSBudWxsIT09aS51c2U/YT10aGlzLl9nZXRVc2UoaS51c2UsbikuX2VuY29kZSh0LGUpOihvPXRoaXMuX2VuY29kZVByaW1pdGl2ZShpLnRhZyx0KSxzPSEwKTtpZighaS5hbnkmJm51bGw9PT1pLmNob2ljZSl7dmFyIGM9bnVsbCE9PWkuaW1wbGljaXQ/aS5pbXBsaWNpdDppLnRhZyxsPW51bGw9PT1pLmltcGxpY2l0P1widW5pdmVyc2FsXCI6XCJjb250ZXh0XCI7bnVsbD09PWM/bnVsbD09PWkudXNlJiZlLmVycm9yKFwiVGFnIGNvdWxkIGJlIG9taXR0ZWQgb25seSBmb3IgLnVzZSgpXCIpOm51bGw9PT1pLnVzZSYmKGE9dGhpcy5fZW5jb2RlQ29tcG9zaXRlKGMscyxsLG8pKX1yZXR1cm4gbnVsbCE9PWkuZXhwbGljaXQmJihhPXRoaXMuX2VuY29kZUNvbXBvc2l0ZShpLmV4cGxpY2l0LCExLFwiY29udGV4dFwiLGEpKSxhfSxjLnByb3RvdHlwZS5fZW5jb2RlQ2hvaWNlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fYmFzZVN0YXRlLHI9bi5jaG9pY2VbdC50eXBlXTtyZXR1cm4gcnx8byghMSx0LnR5cGUrXCIgbm90IGZvdW5kIGluIFwiK0pTT04uc3RyaW5naWZ5KE9iamVjdC5rZXlzKG4uY2hvaWNlKSkpLHIuX2VuY29kZSh0LnZhbHVlLGUpfSxjLnByb3RvdHlwZS5fZW5jb2RlUHJpbWl0aXZlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fYmFzZVN0YXRlO2lmKC9zdHIkLy50ZXN0KHQpKXJldHVybiB0aGlzLl9lbmNvZGVTdHIoZSx0KTtpZihcIm9iamlkXCI9PT10JiZuLmFyZ3MpcmV0dXJuIHRoaXMuX2VuY29kZU9iamlkKGUsbi5yZXZlcnNlQXJnc1swXSxuLmFyZ3NbMV0pO2lmKFwib2JqaWRcIj09PXQpcmV0dXJuIHRoaXMuX2VuY29kZU9iamlkKGUsbnVsbCxudWxsKTtpZihcImdlbnRpbWVcIj09PXR8fFwidXRjdGltZVwiPT09dClyZXR1cm4gdGhpcy5fZW5jb2RlVGltZShlLHQpO2lmKFwibnVsbF9cIj09PXQpcmV0dXJuIHRoaXMuX2VuY29kZU51bGwoKTtpZihcImludFwiPT09dHx8XCJlbnVtXCI9PT10KXJldHVybiB0aGlzLl9lbmNvZGVJbnQoZSxuLmFyZ3MmJm4ucmV2ZXJzZUFyZ3NbMF0pO2lmKFwiYm9vbFwiPT09dClyZXR1cm4gdGhpcy5fZW5jb2RlQm9vbChlKTtpZihcIm9iakRlc2NcIj09PXQpcmV0dXJuIHRoaXMuX2VuY29kZVN0cihlLHQpO3Rocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHRhZzogXCIrdCl9LGMucHJvdG90eXBlLl9pc051bXN0cj1mdW5jdGlvbih0KXtyZXR1cm4vXlswLTkgXSokLy50ZXN0KHQpfSxjLnByb3RvdHlwZS5faXNQcmludHN0cj1mdW5jdGlvbih0KXtyZXR1cm4vXltBLVphLXowLTkgJ1xcKFxcKVxcKyxcXC1cXC5cXC86PVxcP10qJC8udGVzdCh0KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDExMyk7ZS50YWdDbGFzcz17MDpcInVuaXZlcnNhbFwiLDE6XCJhcHBsaWNhdGlvblwiLDI6XCJjb250ZXh0XCIsMzpcInByaXZhdGVcIn0sZS50YWdDbGFzc0J5TmFtZT1yLl9yZXZlcnNlKGUudGFnQ2xhc3MpLGUudGFnPXswOlwiZW5kXCIsMTpcImJvb2xcIiwyOlwiaW50XCIsMzpcImJpdHN0clwiLDQ6XCJvY3RzdHJcIiw1OlwibnVsbF9cIiw2Olwib2JqaWRcIiw3Olwib2JqRGVzY1wiLDg6XCJleHRlcm5hbFwiLDk6XCJyZWFsXCIsMTA6XCJlbnVtXCIsMTE6XCJlbWJlZFwiLDEyOlwidXRmOHN0clwiLDEzOlwicmVsYXRpdmVPaWRcIiwxNjpcInNlcVwiLDE3Olwic2V0XCIsMTg6XCJudW1zdHJcIiwxOTpcInByaW50c3RyXCIsMjA6XCJ0NjFzdHJcIiwyMTpcInZpZGVvc3RyXCIsMjI6XCJpYTVzdHJcIiwyMzpcInV0Y3RpbWVcIiwyNDpcImdlbnRpbWVcIiwyNTpcImdyYXBoc3RyXCIsMjY6XCJpc282NDZzdHJcIiwyNzpcImdlbnN0clwiLDI4OlwidW5pc3RyXCIsMjk6XCJjaGFyc3RyXCIsMzA6XCJibXBzdHJcIn0sZS50YWdCeU5hbWU9ci5fcmV2ZXJzZShlLnRhZyl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lO3IuZGVyPW4oMTE0KSxyLnBlbT1uKDIwOSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDIpLGk9big0KS5CdWZmZXIsYT1uKDExNCk7ZnVuY3Rpb24gbyh0KXthLmNhbGwodGhpcyx0KSx0aGlzLmVuYz1cInBlbVwifXIobyxhKSx0LmV4cG9ydHM9byxvLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC50b1N0cmluZygpLnNwbGl0KC9bXFxyXFxuXSsvZykscj1lLmxhYmVsLnRvVXBwZXJDYXNlKCksbz0vXi0tLS0tKEJFR0lOfEVORCkgKFteLV0rKS0tLS0tJC8scz0tMSx1PS0xLGM9MDtjPG4ubGVuZ3RoO2MrKyl7dmFyIGw9bltjXS5tYXRjaChvKTtpZihudWxsIT09bCYmbFsyXT09PXIpe2lmKC0xIT09cyl7aWYoXCJFTkRcIiE9PWxbMV0pYnJlYWs7dT1jO2JyZWFrfWlmKFwiQkVHSU5cIiE9PWxbMV0pYnJlYWs7cz1jfX1pZigtMT09PXN8fC0xPT09dSl0aHJvdyBuZXcgRXJyb3IoXCJQRU0gc2VjdGlvbiBub3QgZm91bmQgZm9yOiBcIityKTt2YXIgZj1uLnNsaWNlKHMrMSx1KS5qb2luKFwiXCIpO2YucmVwbGFjZSgvW15hLXowLTlcXCtcXC89XSsvZ2ksXCJcIik7dmFyIGg9bmV3IGkoZixcImJhc2U2NFwiKTtyZXR1cm4gYS5wcm90b3R5cGUuZGVjb2RlLmNhbGwodGhpcyxoLGUpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPWU7ci5kZXI9bigxMTUpLHIucGVtPW4oMjExKX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPW4oMiksaT1uKDExNSk7ZnVuY3Rpb24gYSh0KXtpLmNhbGwodGhpcyx0KSx0aGlzLmVuYz1cInBlbVwifXIoYSxpKSx0LmV4cG9ydHM9YSxhLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49aS5wcm90b3R5cGUuZW5jb2RlLmNhbGwodGhpcyx0KS50b1N0cmluZyhcImJhc2U2NFwiKSxyPVtcIi0tLS0tQkVHSU4gXCIrZS5sYWJlbCtcIi0tLS0tXCJdLGE9MDthPG4ubGVuZ3RoO2ErPTY0KXIucHVzaChuLnNsaWNlKGEsYSs2NCkpO3JldHVybiByLnB1c2goXCItLS0tLUVORCBcIitlLmxhYmVsK1wiLS0tLS1cIiksci5qb2luKFwiXFxuXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oMzQpLGk9ci5kZWZpbmUoXCJUaW1lXCIsZnVuY3Rpb24oKXt0aGlzLmNob2ljZSh7dXRjVGltZTp0aGlzLnV0Y3RpbWUoKSxnZW5lcmFsVGltZTp0aGlzLmdlbnRpbWUoKX0pfSksYT1yLmRlZmluZShcIkF0dHJpYnV0ZVR5cGVWYWx1ZVwiLGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJ0eXBlXCIpLm9iamlkKCksdGhpcy5rZXkoXCJ2YWx1ZVwiKS5hbnkoKSl9KSxvPXIuZGVmaW5lKFwiQWxnb3JpdGhtSWRlbnRpZmllclwiLGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJhbGdvcml0aG1cIikub2JqaWQoKSx0aGlzLmtleShcInBhcmFtZXRlcnNcIikub3B0aW9uYWwoKSl9KSxzPXIuZGVmaW5lKFwiU3ViamVjdFB1YmxpY0tleUluZm9cIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb3JpdGhtXCIpLnVzZShvKSx0aGlzLmtleShcInN1YmplY3RQdWJsaWNLZXlcIikuYml0c3RyKCkpfSksdT1yLmRlZmluZShcIlJlbGF0aXZlRGlzdGluZ3Vpc2hlZE5hbWVcIixmdW5jdGlvbigpe3RoaXMuc2V0b2YoYSl9KSxjPXIuZGVmaW5lKFwiUkROU2VxdWVuY2VcIixmdW5jdGlvbigpe3RoaXMuc2Vxb2YodSl9KSxsPXIuZGVmaW5lKFwiTmFtZVwiLGZ1bmN0aW9uKCl7dGhpcy5jaG9pY2Uoe3JkblNlcXVlbmNlOnRoaXMudXNlKGMpfSl9KSxmPXIuZGVmaW5lKFwiVmFsaWRpdHlcIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwibm90QmVmb3JlXCIpLnVzZShpKSx0aGlzLmtleShcIm5vdEFmdGVyXCIpLnVzZShpKSl9KSxoPXIuZGVmaW5lKFwiRXh0ZW5zaW9uXCIsZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcImV4dG5JRFwiKS5vYmppZCgpLHRoaXMua2V5KFwiY3JpdGljYWxcIikuYm9vbCgpLmRlZighMSksdGhpcy5rZXkoXCJleHRuVmFsdWVcIikub2N0c3RyKCkpfSkscD1yLmRlZmluZShcIlRCU0NlcnRpZmljYXRlXCIsZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuZXhwbGljaXQoMCkuaW50KCksdGhpcy5rZXkoXCJzZXJpYWxOdW1iZXJcIikuaW50KCksdGhpcy5rZXkoXCJzaWduYXR1cmVcIikudXNlKG8pLHRoaXMua2V5KFwiaXNzdWVyXCIpLnVzZShsKSx0aGlzLmtleShcInZhbGlkaXR5XCIpLnVzZShmKSx0aGlzLmtleShcInN1YmplY3RcIikudXNlKGwpLHRoaXMua2V5KFwic3ViamVjdFB1YmxpY0tleUluZm9cIikudXNlKHMpLHRoaXMua2V5KFwiaXNzdWVyVW5pcXVlSURcIikuaW1wbGljaXQoMSkuYml0c3RyKCkub3B0aW9uYWwoKSx0aGlzLmtleShcInN1YmplY3RVbmlxdWVJRFwiKS5pbXBsaWNpdCgyKS5iaXRzdHIoKS5vcHRpb25hbCgpLHRoaXMua2V5KFwiZXh0ZW5zaW9uc1wiKS5leHBsaWNpdCgzKS5zZXFvZihoKS5vcHRpb25hbCgpKX0pLGQ9ci5kZWZpbmUoXCJYNTA5Q2VydGlmaWNhdGVcIixmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwidGJzQ2VydGlmaWNhdGVcIikudXNlKHApLHRoaXMua2V5KFwic2lnbmF0dXJlQWxnb3JpdGhtXCIpLnVzZShvKSx0aGlzLmtleShcInNpZ25hdHVyZVZhbHVlXCIpLmJpdHN0cigpKX0pO3QuZXhwb3J0cz1kfSxmdW5jdGlvbih0KXt0LmV4cG9ydHM9e1wiMi4xNi44NDAuMS4xMDEuMy40LjEuMVwiOlwiYWVzLTEyOC1lY2JcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjJcIjpcImFlcy0xMjgtY2JjXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4zXCI6XCJhZXMtMTI4LW9mYlwiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuNFwiOlwiYWVzLTEyOC1jZmJcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjIxXCI6XCJhZXMtMTkyLWVjYlwiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuMjJcIjpcImFlcy0xOTItY2JjXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yM1wiOlwiYWVzLTE5Mi1vZmJcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjI0XCI6XCJhZXMtMTkyLWNmYlwiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuNDFcIjpcImFlcy0yNTYtZWNiXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS40MlwiOlwiYWVzLTI1Ni1jYmNcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjQzXCI6XCJhZXMtMjU2LW9mYlwiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuNDRcIjpcImFlcy0yNTYtY2ZiXCJ9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpe3ZhciByPS9Qcm9jLVR5cGU6IDQsRU5DUllQVEVEW1xcblxccl0rREVLLUluZm86IEFFUy0oKD86MTI4KXwoPzoxOTIpfCg/OjI1NikpLUNCQywoWzAtOUEtSF0rKVtcXG5cXHJdKyhbMC05QS16XFxuXFxyXFwrXFwvXFw9XSspW1xcblxccl0rL20saT0vXi0tLS0tQkVHSU4gKCg/Oi4qIEtFWSl8Q0VSVElGSUNBVEUpLS0tLS0vbSxhPS9eLS0tLS1CRUdJTiAoKD86LiogS0VZKXxDRVJUSUZJQ0FURSktLS0tLShbMC05QS16XFxuXFxyXFwrXFwvXFw9XSspLS0tLS1FTkQgXFwxLS0tLS0kL20sbz1uKDQ0KSxzPW4oNjQpO3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3ZhciB1LGM9dC50b1N0cmluZygpLGw9Yy5tYXRjaChyKTtpZihsKXt2YXIgZj1cImFlc1wiK2xbMV0saD1uZXcgZShsWzJdLFwiaGV4XCIpLHA9bmV3IGUobFszXS5yZXBsYWNlKC9bXFxyXFxuXS9nLFwiXCIpLFwiYmFzZTY0XCIpLGQ9byhuLGguc2xpY2UoMCw4KSxwYXJzZUludChsWzFdLDEwKSkua2V5LG09W10sZz1zLmNyZWF0ZURlY2lwaGVyaXYoZixkLGgpO20ucHVzaChnLnVwZGF0ZShwKSksbS5wdXNoKGcuZmluYWwoKSksdT1lLmNvbmNhdChtKX1lbHNle3ZhciB5PWMubWF0Y2goYSk7dT1uZXcgZSh5WzJdLnJlcGxhY2UoL1tcXHJcXG5dL2csXCJcIiksXCJiYXNlNjRcIil9cmV0dXJue3RhZzpjLm1hdGNoKGkpWzFdLGRhdGE6dX19fSkuY2FsbCh0aGlzLG4oNCkuQnVmZmVyKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXt2YXIgcj1uKDUpLGk9big4KS5lYyxhPW4oNDYpLG89bigxMTYpO2Z1bmN0aW9uIHModCxlKXtpZih0LmNtcG4oMCk8PTApdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWdcIik7aWYodC5jbXAoZSk+PWUpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWdcIil9dC5leHBvcnRzPWZ1bmN0aW9uKHQsbix1LGMsbCl7dmFyIGY9YSh1KTtpZihcImVjXCI9PT1mLnR5cGUpe2lmKFwiZWNkc2FcIiE9PWMmJlwiZWNkc2EvcnNhXCIhPT1jKXRocm93IG5ldyBFcnJvcihcIndyb25nIHB1YmxpYyBrZXkgdHlwZVwiKTtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3ZhciByPW9bbi5kYXRhLmFsZ29yaXRobS5jdXJ2ZS5qb2luKFwiLlwiKV07aWYoIXIpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBjdXJ2ZSBcIituLmRhdGEuYWxnb3JpdGhtLmN1cnZlLmpvaW4oXCIuXCIpKTt2YXIgYT1uZXcgaShyKSxzPW4uZGF0YS5zdWJqZWN0UHJpdmF0ZUtleS5kYXRhO3JldHVybiBhLnZlcmlmeShlLHQscyl9KHQsbixmKX1pZihcImRzYVwiPT09Zi50eXBlKXtpZihcImRzYVwiIT09Yyl0aHJvdyBuZXcgRXJyb3IoXCJ3cm9uZyBwdWJsaWMga2V5IHR5cGVcIik7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uLmRhdGEucCxvPW4uZGF0YS5xLHU9bi5kYXRhLmcsYz1uLmRhdGEucHViX2tleSxsPWEuc2lnbmF0dXJlLmRlY29kZSh0LFwiZGVyXCIpLGY9bC5zLGg9bC5yO3MoZixvKSxzKGgsbyk7dmFyIHA9ci5tb250KGkpLGQ9Zi5pbnZtKG8pO3JldHVybiAwPT09dS50b1JlZChwKS5yZWRQb3cobmV3IHIoZSkubXVsKGQpLm1vZChvKSkuZnJvbVJlZCgpLm11bChjLnRvUmVkKHApLnJlZFBvdyhoLm11bChkKS5tb2QobykpLmZyb21SZWQoKSkubW9kKGkpLm1vZChvKS5jbXAoaCl9KHQsbixmKX1pZihcInJzYVwiIT09YyYmXCJlY2RzYS9yc2FcIiE9PWMpdGhyb3cgbmV3IEVycm9yKFwid3JvbmcgcHVibGljIGtleSB0eXBlXCIpO249ZS5jb25jYXQoW2wsbl0pO2Zvcih2YXIgaD1mLm1vZHVsdXMuYnl0ZUxlbmd0aCgpLHA9WzFdLGQ9MDtuLmxlbmd0aCtwLmxlbmd0aCsyPGg7KXAucHVzaCgyNTUpLGQrKztwLnB1c2goMCk7Zm9yKHZhciBtPS0xOysrbTxuLmxlbmd0aDspcC5wdXNoKG5bbV0pO3A9bmV3IGUocCk7dmFyIGc9ci5tb250KGYubW9kdWx1cyk7dD0odD1uZXcgcih0KS50b1JlZChnKSkucmVkUG93KG5ldyByKGYucHVibGljRXhwb25lbnQpKSx0PW5ldyBlKHQuZnJvbVJlZCgpLnRvQXJyYXkoKSk7dmFyIHk9ZDw4PzE6MDtmb3IoaD1NYXRoLm1pbih0Lmxlbmd0aCxwLmxlbmd0aCksdC5sZW5ndGghPT1wLmxlbmd0aCYmKHk9MSksbT0tMTsrK208aDspeXw9dFttXV5wW21dO3JldHVybiAwPT09eX19KS5jYWxsKHRoaXMsbig0KS5CdWZmZXIpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpe3ZhciByPW4oOCksaT1uKDUpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG8odCl9O3ZhciBhPXtzZWNwMjU2azE6e25hbWU6XCJzZWNwMjU2azFcIixieXRlTGVuZ3RoOjMyfSxzZWNwMjI0cjE6e25hbWU6XCJwMjI0XCIsYnl0ZUxlbmd0aDoyOH0scHJpbWUyNTZ2MTp7bmFtZTpcInAyNTZcIixieXRlTGVuZ3RoOjMyfSxwcmltZTE5MnYxOntuYW1lOlwicDE5MlwiLGJ5dGVMZW5ndGg6MjR9LGVkMjU1MTk6e25hbWU6XCJlZDI1NTE5XCIsYnl0ZUxlbmd0aDozMn0sc2VjcDM4NHIxOntuYW1lOlwicDM4NFwiLGJ5dGVMZW5ndGg6NDh9LHNlY3A1MjFyMTp7bmFtZTpcInA1MjFcIixieXRlTGVuZ3RoOjY2fX07ZnVuY3Rpb24gbyh0KXt0aGlzLmN1cnZlVHlwZT1hW3RdLHRoaXMuY3VydmVUeXBlfHwodGhpcy5jdXJ2ZVR5cGU9e25hbWU6dH0pLHRoaXMuY3VydmU9bmV3IHIuZWModGhpcy5jdXJ2ZVR5cGUubmFtZSksdGhpcy5rZXlzPXZvaWQgMH1mdW5jdGlvbiBzKHQsbixyKXtBcnJheS5pc0FycmF5KHQpfHwodD10LnRvQXJyYXkoKSk7dmFyIGk9bmV3IGUodCk7aWYociYmaS5sZW5ndGg8cil7dmFyIGE9bmV3IGUoci1pLmxlbmd0aCk7YS5maWxsKDApLGk9ZS5jb25jYXQoW2EsaV0pfXJldHVybiBuP2kudG9TdHJpbmcobik6aX1hLnAyMjQ9YS5zZWNwMjI0cjEsYS5wMjU2PWEuc2VjcDI1NnIxPWEucHJpbWUyNTZ2MSxhLnAxOTI9YS5zZWNwMTkycjE9YS5wcmltZTE5MnYxLGEucDM4ND1hLnNlY3AzODRyMSxhLnA1MjE9YS5zZWNwNTIxcjEsby5wcm90b3R5cGUuZ2VuZXJhdGVLZXlzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMua2V5cz10aGlzLmN1cnZlLmdlbktleVBhaXIoKSx0aGlzLmdldFB1YmxpY0tleSh0LGUpfSxvLnByb3RvdHlwZS5jb21wdXRlU2VjcmV0PWZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gbj1ufHxcInV0ZjhcIixlLmlzQnVmZmVyKHQpfHwodD1uZXcgZSh0LG4pKSxzKHRoaXMuY3VydmUua2V5RnJvbVB1YmxpYyh0KS5nZXRQdWJsaWMoKS5tdWwodGhpcy5rZXlzLmdldFByaXZhdGUoKSkuZ2V0WCgpLHIsdGhpcy5jdXJ2ZVR5cGUuYnl0ZUxlbmd0aCl9LG8ucHJvdG90eXBlLmdldFB1YmxpY0tleT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMua2V5cy5nZXRQdWJsaWMoXCJjb21wcmVzc2VkXCI9PT1lLCEwKTtyZXR1cm5cImh5YnJpZFwiPT09ZSYmKG5bbi5sZW5ndGgtMV0lMj9uWzBdPTc6blswXT02KSxzKG4sdCl9LG8ucHJvdG90eXBlLmdldFByaXZhdGVLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIHModGhpcy5rZXlzLmdldFByaXZhdGUoKSx0KX0sby5wcm90b3R5cGUuc2V0UHVibGljS2V5PWZ1bmN0aW9uKHQsbil7cmV0dXJuIG49bnx8XCJ1dGY4XCIsZS5pc0J1ZmZlcih0KXx8KHQ9bmV3IGUodCxuKSksdGhpcy5rZXlzLl9pbXBvcnRQdWJsaWModCksdGhpc30sby5wcm90b3R5cGUuc2V0UHJpdmF0ZUtleT1mdW5jdGlvbih0LG4pe249bnx8XCJ1dGY4XCIsZS5pc0J1ZmZlcih0KXx8KHQ9bmV3IGUodCxuKSk7dmFyIHI9bmV3IGkodCk7cmV0dXJuIHI9ci50b1N0cmluZygxNiksdGhpcy5rZXlzPXRoaXMuY3VydmUuZ2VuS2V5UGFpcigpLHRoaXMua2V5cy5faW1wb3J0UHJpdmF0ZShyKSx0aGlzfX0pLmNhbGwodGhpcyxuKDQpLkJ1ZmZlcil9LGZ1bmN0aW9uKHQsZSxuKXtlLnB1YmxpY0VuY3J5cHQ9bigyMTgpLGUucHJpdmF0ZURlY3J5cHQ9bigyMTkpLGUucHJpdmF0ZUVuY3J5cHQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5wdWJsaWNFbmNyeXB0KHQsbiwhMCl9LGUucHVibGljRGVjcnlwdD1mdW5jdGlvbih0LG4pe3JldHVybiBlLnByaXZhdGVEZWNyeXB0KHQsbiwhMCl9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big0NiksaT1uKDIyKSxhPW4oMzApLG89bigxMTcpLHM9bigxMTgpLHU9big1KSxjPW4oMTE5KSxsPW4oNjYpLGY9bigzKS5CdWZmZXI7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaDtoPXQucGFkZGluZz90LnBhZGRpbmc6bj8xOjQ7dmFyIHAsZD1yKHQpO2lmKDQ9PT1oKXA9ZnVuY3Rpb24odCxlKXt2YXIgbj10Lm1vZHVsdXMuYnl0ZUxlbmd0aCgpLHI9ZS5sZW5ndGgsYz1hKFwic2hhMVwiKS51cGRhdGUoZi5hbGxvYygwKSkuZGlnZXN0KCksbD1jLmxlbmd0aCxoPTIqbDtpZihyPm4taC0yKXRocm93IG5ldyBFcnJvcihcIm1lc3NhZ2UgdG9vIGxvbmdcIik7dmFyIHA9Zi5hbGxvYyhuLXItaC0yKSxkPW4tbC0xLG09aShsKSxnPXMoZi5jb25jYXQoW2MscCxmLmFsbG9jKDEsMSksZV0sZCksbyhtLGQpKSx5PXMobSxvKGcsbCkpO3JldHVybiBuZXcgdShmLmNvbmNhdChbZi5hbGxvYygxKSx5LGddLG4pKX0oZCxlKTtlbHNlIGlmKDE9PT1oKXA9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGE9ZS5sZW5ndGgsbz10Lm1vZHVsdXMuYnl0ZUxlbmd0aCgpO2lmKGE+by0xMSl0aHJvdyBuZXcgRXJyb3IoXCJtZXNzYWdlIHRvbyBsb25nXCIpO3I9bj9mLmFsbG9jKG8tYS0zLDI1NSk6ZnVuY3Rpb24odCl7dmFyIGUsbj1mLmFsbG9jVW5zYWZlKHQpLHI9MCxhPWkoMip0KSxvPTA7Zm9yKDtyPHQ7KW89PT1hLmxlbmd0aCYmKGE9aSgyKnQpLG89MCksKGU9YVtvKytdKSYmKG5bcisrXT1lKTtyZXR1cm4gbn0oby1hLTMpO3JldHVybiBuZXcgdShmLmNvbmNhdChbZi5mcm9tKFswLG4/MToyXSkscixmLmFsbG9jKDEpLGVdLG8pKX0oZCxlLG4pO2Vsc2V7aWYoMyE9PWgpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBwYWRkaW5nXCIpO2lmKChwPW5ldyB1KGUpKS5jbXAoZC5tb2R1bHVzKT49MCl0aHJvdyBuZXcgRXJyb3IoXCJkYXRhIHRvbyBsb25nIGZvciBtb2R1bHVzXCIpfXJldHVybiBuP2wocCxkKTpjKHAsZCl9fSxmdW5jdGlvbih0LGUsbil7dmFyIHI9big0NiksaT1uKDExNyksYT1uKDExOCksbz1uKDUpLHM9big2NiksdT1uKDMwKSxjPW4oMTE5KSxsPW4oMykuQnVmZmVyO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7dmFyIGY7Zj10LnBhZGRpbmc/dC5wYWRkaW5nOm4/MTo0O3ZhciBoLHA9cih0KSxkPXAubW9kdWx1cy5ieXRlTGVuZ3RoKCk7aWYoZS5sZW5ndGg+ZHx8bmV3IG8oZSkuY21wKHAubW9kdWx1cyk+PTApdGhyb3cgbmV3IEVycm9yKFwiZGVjcnlwdGlvbiBlcnJvclwiKTtoPW4/YyhuZXcgbyhlKSxwKTpzKGUscCk7dmFyIG09bC5hbGxvYyhkLWgubGVuZ3RoKTtpZihoPWwuY29uY2F0KFttLGhdLGQpLDQ9PT1mKXJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXQubW9kdWx1cy5ieXRlTGVuZ3RoKCkscj11KFwic2hhMVwiKS51cGRhdGUobC5hbGxvYygwKSkuZGlnZXN0KCksbz1yLmxlbmd0aDtpZigwIT09ZVswXSl0aHJvdyBuZXcgRXJyb3IoXCJkZWNyeXB0aW9uIGVycm9yXCIpO3ZhciBzPWUuc2xpY2UoMSxvKzEpLGM9ZS5zbGljZShvKzEpLGY9YShzLGkoYyxvKSksaD1hKGMsaShmLG4tby0xKSk7aWYoZnVuY3Rpb24odCxlKXt0PWwuZnJvbSh0KSxlPWwuZnJvbShlKTt2YXIgbj0wLHI9dC5sZW5ndGg7dC5sZW5ndGghPT1lLmxlbmd0aCYmKG4rKyxyPU1hdGgubWluKHQubGVuZ3RoLGUubGVuZ3RoKSk7dmFyIGk9LTE7Zm9yKDsrK2k8cjspbis9dFtpXV5lW2ldO3JldHVybiBufShyLGguc2xpY2UoMCxvKSkpdGhyb3cgbmV3IEVycm9yKFwiZGVjcnlwdGlvbiBlcnJvclwiKTt2YXIgcD1vO2Zvcig7MD09PWhbcF07KXArKztpZigxIT09aFtwKytdKXRocm93IG5ldyBFcnJvcihcImRlY3J5cHRpb24gZXJyb3JcIik7cmV0dXJuIGguc2xpY2UocCl9KHAsaCk7aWYoMT09PWYpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLnNsaWNlKDAsMiksaT0yLGE9MDtmb3IoOzAhPT1lW2krK107KWlmKGk+PWUubGVuZ3RoKXthKys7YnJlYWt9dmFyIG89ZS5zbGljZSgyLGktMSk7KFwiMDAwMlwiIT09ci50b1N0cmluZyhcImhleFwiKSYmIW58fFwiMDAwMVwiIT09ci50b1N0cmluZyhcImhleFwiKSYmbikmJmErKztvLmxlbmd0aDw4JiZhKys7aWYoYSl0aHJvdyBuZXcgRXJyb3IoXCJkZWNyeXB0aW9uIGVycm9yXCIpO3JldHVybiBlLnNsaWNlKGkpfSgwLGgsbik7aWYoMz09PWYpcmV0dXJuIGg7dGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBwYWRkaW5nXCIpfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbih0LHIpe2Z1bmN0aW9uIGkoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0aW9uIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyXFxudXNlIGNocm9tZSwgRmlyZUZveCBvciBJbnRlcm5ldCBFeHBsb3JlciAxMVwiKX12YXIgYT1uKDMpLG89bigyMikscz1hLkJ1ZmZlcix1PWEua01heExlbmd0aCxjPXQuY3J5cHRvfHx0Lm1zQ3J5cHRvLGw9TWF0aC5wb3coMiwzMiktMTtmdW5jdGlvbiBmKHQsZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fHQhPXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIm9mZnNldCBtdXN0IGJlIGEgbnVtYmVyXCIpO2lmKHQ+bHx8dDwwKXRocm93IG5ldyBUeXBlRXJyb3IoXCJvZmZzZXQgbXVzdCBiZSBhIHVpbnQzMlwiKTtpZih0PnV8fHQ+ZSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm9mZnNldCBvdXQgb2YgcmFuZ2VcIil9ZnVuY3Rpb24gaCh0LGUsbil7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHR8fHQhPXQpdGhyb3cgbmV3IFR5cGVFcnJvcihcInNpemUgbXVzdCBiZSBhIG51bWJlclwiKTtpZih0Pmx8fHQ8MCl0aHJvdyBuZXcgVHlwZUVycm9yKFwic2l6ZSBtdXN0IGJlIGEgdWludDMyXCIpO2lmKHQrZT5ufHx0PnUpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJidWZmZXIgdG9vIHNtYWxsXCIpfWZ1bmN0aW9uIHAodCxlLG4saSl7aWYoci5icm93c2VyKXt2YXIgYT10LmJ1ZmZlcixzPW5ldyBVaW50OEFycmF5KGEsZSxuKTtyZXR1cm4gYy5nZXRSYW5kb21WYWx1ZXMocyksaT92b2lkIHIubmV4dFRpY2soZnVuY3Rpb24oKXtpKG51bGwsdCl9KTp0fWlmKCFpKXJldHVybiBvKG4pLmNvcHkodCxlKSx0O28obixmdW5jdGlvbihuLHIpe2lmKG4pcmV0dXJuIGkobik7ci5jb3B5KHQsZSksaShudWxsLHQpfSl9YyYmYy5nZXRSYW5kb21WYWx1ZXN8fCFyLmJyb3dzZXI/KGUucmFuZG9tRmlsbD1mdW5jdGlvbihlLG4scixpKXtpZighKHMuaXNCdWZmZXIoZSl8fGUgaW5zdGFuY2VvZiB0LlVpbnQ4QXJyYXkpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBvciBVaW50OEFycmF5Jyk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilpPW4sbj0wLHI9ZS5sZW5ndGg7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKWk9cixyPWUubGVuZ3RoLW47ZWxzZSBpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiY2JcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtyZXR1cm4gZihuLGUubGVuZ3RoKSxoKHIsbixlLmxlbmd0aCkscChlLG4scixpKX0sZS5yYW5kb21GaWxsU3luYz1mdW5jdGlvbihlLG4scil7dm9pZCAwPT09biYmKG49MCk7aWYoIShzLmlzQnVmZmVyKGUpfHxlIGluc3RhbmNlb2YgdC5VaW50OEFycmF5KSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJ1ZlwiIGFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXIgb3IgVWludDhBcnJheScpO2YobixlLmxlbmd0aCksdm9pZCAwPT09ciYmKHI9ZS5sZW5ndGgtbik7cmV0dXJuIGgocixuLGUubGVuZ3RoKSxwKGUsbixyKX0pOihlLnJhbmRvbUZpbGw9aSxlLnJhbmRvbUZpbGxTeW5jPWkpfSkuY2FsbCh0aGlzLG4oMTEpLG4oMTQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZT13aW5kb3cuZmV0Y2gsZS5kZWZhdWx0PXdpbmRvdy5mZXRjaC5iaW5kKHdpbmRvdyksZS5IZWFkZXJzPXdpbmRvdy5IZWFkZXJzLGUuUmVxdWVzdD13aW5kb3cuUmVxdWVzdCxlLlJlc3BvbnNlPXdpbmRvdy5SZXNwb25zZX0sZnVuY3Rpb24odCxlLG4pe3ZhciByLGksYTtpPVtlLG4oMjUxKV0sdm9pZCAwPT09KGE9XCJmdW5jdGlvblwiPT10eXBlb2Yocj1mdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO3ZhciByPW4oMjIzKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmRlZmF1bHQ9dm9pZCAwLGU9cihlKSx0LmRlZmF1bHQ9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLlI9ZX1nZXQgQ29yZUZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuUn1nZXRJbih0LG4scil7cmV0dXJuIGUucGF0aE9yKHIsdCxuKX1zZXRJbih0LG4scil7cmV0dXJuIGUuYXNzb2NQYXRoKHQsbixyKX12c3RhY2soLi4udCl7fWhzdGFjayguLi50KXt9dnNwbGl0KHQpe31oc3BsaXQodCl7cmV0dXJuIG51bGx9aHNwbGl0RXZlcnkodCxlKXtyZXR1cm4gY29uc29sZS5sb2coe3ZsZW46dC5sZW5ndGgsc3BsaXRTaXplOmV9KSx0aGlzLlIuc3BsaXRFdmVyeShlLHQpfXZzcGxpdEV2ZXJ5KHQsZSl7cmV0dXJuIG51bGx9emlwKHQsZSl7dGhpcy5SLnppcCh0LGUpfXVuemlwKCl7fX19KT9yLmFwcGx5KGUsaSk6cil8fCh0LmV4cG9ydHM9YSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKHQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgZT17fTtpZihudWxsIT10KWZvcih2YXIgbiBpbiB0KWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pKXt2YXIgcj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LG4pOnt9O3IuZ2V0fHxyLnNldD9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSxuLHIpOmVbbl09dFtuXX1yZXR1cm4gZS5kZWZhdWx0PXQsZX19LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtuLnIoZSk7dmFyIHI9ZnVuY3Rpb24oKXtyZXR1cm4hMX0saT1mdW5jdGlvbigpe3JldHVybiEwfSxhPXtcIkBAZnVuY3Rpb25hbC9wbGFjZWhvbGRlclwiOiEwfTtmdW5jdGlvbiBvKHQpe3JldHVybiBudWxsIT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmITA9PT10W1wiQEBmdW5jdGlvbmFsL3BsYWNlaG9sZGVyXCJdfWZ1bmN0aW9uIHModCl7cmV0dXJuIGZ1bmN0aW9uIGUobil7cmV0dXJuIDA9PT1hcmd1bWVudHMubGVuZ3RofHxvKG4pP2U6dC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIHUodCl7cmV0dXJuIGZ1bmN0aW9uIGUobixyKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBlO2Nhc2UgMTpyZXR1cm4gbyhuKT9lOnMoZnVuY3Rpb24oZSl7cmV0dXJuIHQobixlKX0pO2RlZmF1bHQ6cmV0dXJuIG8obikmJm8ocik/ZTpvKG4pP3MoZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSxyKX0pOm8ocik/cyhmdW5jdGlvbihlKXtyZXR1cm4gdChuLGUpfSk6dChuLHIpfX19dmFyIGM9dShmdW5jdGlvbih0LGUpe3JldHVybiBOdW1iZXIodCkrTnVtYmVyKGUpfSk7ZnVuY3Rpb24gbCh0LGUpe3ZhciBuO2U9ZXx8W107dmFyIHI9KHQ9dHx8W10pLmxlbmd0aCxpPWUubGVuZ3RoLGE9W107Zm9yKG49MDtuPHI7KWFbYS5sZW5ndGhdPXRbbl0sbis9MTtmb3Iobj0wO248aTspYVthLmxlbmd0aF09ZVtuXSxuKz0xO3JldHVybiBhfWZ1bmN0aW9uIGYodCxlKXtzd2l0Y2godCl7Y2FzZSAwOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAxOnJldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24odCxuLHIpe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSA0OnJldHVybiBmdW5jdGlvbih0LG4scixpKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgNTpyZXR1cm4gZnVuY3Rpb24odCxuLHIsaSxhKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgNjpyZXR1cm4gZnVuY3Rpb24odCxuLHIsaSxhLG8pe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSA3OnJldHVybiBmdW5jdGlvbih0LG4scixpLGEsbyxzKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgODpyZXR1cm4gZnVuY3Rpb24odCxuLHIsaSxhLG8scyx1KXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Nhc2UgOTpyZXR1cm4gZnVuY3Rpb24odCxuLHIsaSxhLG8scyx1LGMpe3JldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07Y2FzZSAxMDpyZXR1cm4gZnVuY3Rpb24odCxuLHIsaSxhLG8scyx1LGMsbCl7cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkZpcnN0IGFyZ3VtZW50IHRvIF9hcml0eSBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIGludGVnZXIgbm8gZ3JlYXRlciB0aGFuIHRlblwiKX19ZnVuY3Rpb24gaCh0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciByPVtdLGk9MCxhPXQscz0wO3M8ZS5sZW5ndGh8fGk8YXJndW1lbnRzLmxlbmd0aDspe3ZhciB1O3M8ZS5sZW5ndGgmJighbyhlW3NdKXx8aT49YXJndW1lbnRzLmxlbmd0aCk/dT1lW3NdOih1PWFyZ3VtZW50c1tpXSxpKz0xKSxyW3NdPXUsbyh1KXx8KGEtPTEpLHMrPTF9cmV0dXJuIGE8PTA/bi5hcHBseSh0aGlzLHIpOmYoYSxoKHQscixuKSl9fXZhciBwPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gMT09PXQ/cyhlKTpmKHQsaCh0LFtdLGUpKX0pLGQ9cyhmdW5jdGlvbih0KXtyZXR1cm4gcCh0Lmxlbmd0aCxmdW5jdGlvbigpe3ZhciBlPTAsbj1hcmd1bWVudHNbMF0scj1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSxpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtyZXR1cm4gaVswXT1mdW5jdGlvbigpe3ZhciB0PW4uYXBwbHkodGhpcyxsKGFyZ3VtZW50cyxbZSxyXSkpO3JldHVybiBlKz0xLHR9LHQuYXBwbHkodGhpcyxpKX0pfSk7ZnVuY3Rpb24gbSh0KXtyZXR1cm4gZnVuY3Rpb24gZShuLHIsaSl7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gZTtjYXNlIDE6cmV0dXJuIG8obik/ZTp1KGZ1bmN0aW9uKGUscil7cmV0dXJuIHQobixlLHIpfSk7Y2FzZSAyOnJldHVybiBvKG4pJiZvKHIpP2U6byhuKT91KGZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZSxyLG4pfSk6byhyKT91KGZ1bmN0aW9uKGUscil7cmV0dXJuIHQobixlLHIpfSk6cyhmdW5jdGlvbihlKXtyZXR1cm4gdChuLHIsZSl9KTtkZWZhdWx0OnJldHVybiBvKG4pJiZvKHIpJiZvKGkpP2U6byhuKSYmbyhyKT91KGZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZSxuLGkpfSk6byhuKSYmbyhpKT91KGZ1bmN0aW9uKGUsbil7cmV0dXJuIHQoZSxyLG4pfSk6byhyKSYmbyhpKT91KGZ1bmN0aW9uKGUscil7cmV0dXJuIHQobixlLHIpfSk6byhuKT9zKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUscixpKX0pOm8ocik/cyhmdW5jdGlvbihlKXtyZXR1cm4gdChuLGUsaSl9KTpvKGkpP3MoZnVuY3Rpb24oZSl7cmV0dXJuIHQobixyLGUpfSk6dChuLHIsaSl9fX12YXIgZz1tKGZ1bmN0aW9uKHQsZSxuKXtpZih0Pj1uLmxlbmd0aHx8dDwtbi5sZW5ndGgpcmV0dXJuIG47dmFyIHI9KHQ8MD9uLmxlbmd0aDowKSt0LGk9bChuKTtyZXR1cm4gaVtyXT1lKG5bcl0pLGl9KSx5PUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10JiZ0Lmxlbmd0aD49MCYmXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfTtmdW5jdGlvbiB2KHQpe3JldHVybiBudWxsIT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl19ZnVuY3Rpb24gYih0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIG4oKTt2YXIgcj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksaT1yLnBvcCgpO2lmKCF5KGkpKXtmb3IodmFyIGE9MDthPHQubGVuZ3RoOyl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgaVt0W2FdXSlyZXR1cm4gaVt0W2FdXS5hcHBseShpLHIpO2ErPTF9aWYodihpKSlyZXR1cm4gZS5hcHBseShudWxsLHIpKGkpfXJldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19ZnVuY3Rpb24gdyh0KXtyZXR1cm4gdCYmdFtcIkBAdHJhbnNkdWNlci9yZWR1Y2VkXCJdP3Q6e1wiQEB0cmFuc2R1Y2VyL3ZhbHVlXCI6dCxcIkBAdHJhbnNkdWNlci9yZWR1Y2VkXCI6ITB9fXZhciBfPXtpbml0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXSgpfSxyZXN1bHQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdKHQpfX0seD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5mPXQsdGhpcy5hbGw9ITB9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hbGwmJih0PXRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LCEwKSksdGhpcy54ZltcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl0odCl9LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5mKGUpfHwodGhpcy5hbGw9ITEsdD13KHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LCExKSkpLHR9LHR9KCksRT11KGIoW1wiYWxsXCJdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHgodCxlKX0pLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDspe2lmKCF0KGVbbl0pKXJldHVybiExO24rPTF9cmV0dXJuITB9KSksUz11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU+dD9lOnR9KTtmdW5jdGlvbiBOKHQsZSl7Zm9yKHZhciBuPTAscj1lLmxlbmd0aCxpPUFycmF5KHIpO248cjspaVtuXT10KGVbbl0pLG4rPTE7cmV0dXJuIGl9ZnVuY3Rpb24gSSh0KXtyZXR1cm5cIltvYmplY3QgU3RyaW5nXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfXZhciBPPXMoZnVuY3Rpb24odCl7cmV0dXJuISF5KHQpfHwhIXQmJihcIm9iamVjdFwiPT10eXBlb2YgdCYmKCFJKHQpJiYoMT09PXQubm9kZVR5cGU/ISF0Lmxlbmd0aDowPT09dC5sZW5ndGh8fHQubGVuZ3RoPjAmJih0Lmhhc093blByb3BlcnR5KDApJiZ0Lmhhc093blByb3BlcnR5KHQubGVuZ3RoLTEpKSkpKX0pLGs9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuZj10fXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiaW5pdCBub3QgaW1wbGVtZW50ZWQgb24gWFdyYXBcIil9LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmYodCxlKX0sdH0oKTtmdW5jdGlvbiBBKHQpe3JldHVybiBuZXcgayh0KX12YXIgQz11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGYodC5sZW5ndGgsZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9KX0pO2Z1bmN0aW9uIFAodCxlLG4pe2Zvcih2YXIgcj1uLm5leHQoKTshci5kb25lOyl7aWYoKGU9dFtcIkBAdHJhbnNkdWNlci9zdGVwXCJdKGUsci52YWx1ZSkpJiZlW1wiQEB0cmFuc2R1Y2VyL3JlZHVjZWRcIl0pe2U9ZVtcIkBAdHJhbnNkdWNlci92YWx1ZVwiXTticmVha31yPW4ubmV4dCgpfXJldHVybiB0W1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXShlKX1mdW5jdGlvbiBUKHQsZSxuLHIpe3JldHVybiB0W1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXShuW3JdKEModFtcIkBAdHJhbnNkdWNlci9zdGVwXCJdLHQpLGUpKX12YXIgUj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sP1N5bWJvbC5pdGVyYXRvcjpcIkBAaXRlcmF0b3JcIjtmdW5jdGlvbiBEKHQsZSxuKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiYodD1BKHQpKSxPKG4pKXJldHVybiBmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPTAsaT1uLmxlbmd0aDtyPGk7KXtpZigoZT10W1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0oZSxuW3JdKSkmJmVbXCJAQHRyYW5zZHVjZXIvcmVkdWNlZFwiXSl7ZT1lW1wiQEB0cmFuc2R1Y2VyL3ZhbHVlXCJdO2JyZWFrfXIrPTF9cmV0dXJuIHRbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdKGUpfSh0LGUsbik7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbltcImZhbnRhc3ktbGFuZC9yZWR1Y2VcIl0pcmV0dXJuIFQodCxlLG4sXCJmYW50YXN5LWxhbmQvcmVkdWNlXCIpO2lmKG51bGwhPW5bUl0pcmV0dXJuIFAodCxlLG5bUl0oKSk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbi5uZXh0KXJldHVybiBQKHQsZSxuKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLnJlZHVjZSlyZXR1cm4gVCh0LGUsbixcInJlZHVjZVwiKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwicmVkdWNlOiBsaXN0IG11c3QgYmUgYXJyYXkgb3IgaXRlcmFibGVcIil9dmFyIE09ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy54Zj1lLHRoaXMuZj10fXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09Xy5yZXN1bHQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCx0aGlzLmYoZSkpfSx0fSgpLGo9dShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgTSh0LGUpfSk7ZnVuY3Rpb24gQih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX12YXIgTD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLHo9ZnVuY3Rpb24oKXtyZXR1cm5cIltvYmplY3QgQXJndW1lbnRzXVwiPT09TC5jYWxsKGFyZ3VtZW50cyk/ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFyZ3VtZW50c11cIj09PUwuY2FsbCh0KX06ZnVuY3Rpb24odCl7cmV0dXJuIEIoXCJjYWxsZWVcIix0KX19KCksRj0he3RvU3RyaW5nOm51bGx9LnByb3BlcnR5SXNFbnVtZXJhYmxlKFwidG9TdHJpbmdcIiksVT1bXCJjb25zdHJ1Y3RvclwiLFwidmFsdWVPZlwiLFwiaXNQcm90b3R5cGVPZlwiLFwidG9TdHJpbmdcIixcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsXCJoYXNPd25Qcm9wZXJ0eVwiLFwidG9Mb2NhbGVTdHJpbmdcIl0sVj1mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHMucHJvcGVydHlJc0VudW1lcmFibGUoXCJsZW5ndGhcIil9KCksVz1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7KXtpZih0W25dPT09ZSlyZXR1cm4hMDtuKz0xfXJldHVybiExfSxxPVwiZnVuY3Rpb25cIiE9dHlwZW9mIE9iamVjdC5rZXlzfHxWP3MoZnVuY3Rpb24odCl7aWYoT2JqZWN0KHQpIT09dClyZXR1cm5bXTt2YXIgZSxuLHI9W10saT1WJiZ6KHQpO2ZvcihlIGluIHQpIUIoZSx0KXx8aSYmXCJsZW5ndGhcIj09PWV8fChyW3IubGVuZ3RoXT1lKTtpZihGKWZvcihuPVUubGVuZ3RoLTE7bj49MDspQihlPVVbbl0sdCkmJiFXKHIsZSkmJihyW3IubGVuZ3RoXT1lKSxuLT0xO3JldHVybiByfSk6cyhmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHQpIT09dD9bXTpPYmplY3Qua2V5cyh0KX0pLCQ9dShiKFtcImZhbnRhc3ktbGFuZC9tYXBcIixcIm1hcFwiXSxqLGZ1bmN0aW9uKHQsZSl7c3dpdGNoKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSl7Y2FzZVwiW29iamVjdCBGdW5jdGlvbl1cIjpyZXR1cm4gcChlLmxlbmd0aCxmdW5jdGlvbigpe3JldHVybiB0LmNhbGwodGhpcyxlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9KTtjYXNlXCJbb2JqZWN0IE9iamVjdF1cIjpyZXR1cm4gRChmdW5jdGlvbihuLHIpe3JldHVybiBuW3JdPXQoZVtyXSksbn0se30scShlKSk7ZGVmYXVsdDpyZXR1cm4gTih0LGUpfX0pKSxIPXUoZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ZSxyPTA7cjx0Lmxlbmd0aDspe2lmKG51bGw9PW4pcmV0dXJuO249blt0W3JdXSxyKz0xfXJldHVybiBufSksSz11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEgoW3RdLGUpfSksRz11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuICQoSyh0KSxlKX0pLFg9bShEKSxZPXMoZnVuY3Rpb24odCl7cmV0dXJuIHAoWChTLDAsRyhcImxlbmd0aFwiLHQpKSxmdW5jdGlvbigpe2Zvcih2YXIgZT0wLG49dC5sZW5ndGg7ZTxuOyl7aWYoIXRbZV0uYXBwbHkodGhpcyxhcmd1bWVudHMpKXJldHVybiExO2UrPTF9cmV0dXJuITB9KX0pLEo9cyhmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdH19KSxaPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmZX0pLFE9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy54Zj1lLHRoaXMuZj10LHRoaXMuYW55PSExfXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYW55fHwodD10aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCwhMSkpLHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdKHQpfSx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZihlKSYmKHRoaXMuYW55PSEwLHQ9dyh0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCwhMCkpKSx0fSx0fSgpLHR0PXUoYihbXCJhbnlcIl0sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgUSh0LGUpfSksZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoOyl7aWYodChlW25dKSlyZXR1cm4hMDtuKz0xfXJldHVybiExfSkpLGV0PXMoZnVuY3Rpb24odCl7cmV0dXJuIHAoWChTLDAsRyhcImxlbmd0aFwiLHQpKSxmdW5jdGlvbigpe2Zvcih2YXIgZT0wLG49dC5sZW5ndGg7ZTxuOyl7aWYodFtlXS5hcHBseSh0aGlzLGFyZ3VtZW50cykpcmV0dXJuITA7ZSs9MX1yZXR1cm4hMX0pfSksbnQ9dShmdW5jdGlvbih0LGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGVbXCJmYW50YXN5LWxhbmQvYXBcIl0/ZVtcImZhbnRhc3ktbGFuZC9hcFwiXSh0KTpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmFwP3QuYXAoZSk6XCJmdW5jdGlvblwiPT10eXBlb2YgdD9mdW5jdGlvbihuKXtyZXR1cm4gdChuKShlKG4pKX06RChmdW5jdGlvbih0LG4pe3JldHVybiBsKHQsJChuLGUpKX0sW10sdCl9KTtmdW5jdGlvbiBydCh0LGUpe2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGgtKHQtMSksaT1uZXcgQXJyYXkocj49MD9yOjApO248cjspaVtuXT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLG4sbit0KSxuKz0xO3JldHVybiBpfXZhciBpdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5wb3M9MCx0aGlzLmZ1bGw9ITEsdGhpcy5hY2M9bmV3IEFycmF5KHQpfXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYWNjPW51bGwsdGhpcy54ZltcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl0odCl9LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5zdG9yZShlKSx0aGlzLmZ1bGw/dGhpcy54ZltcIkBAdHJhbnNkdWNlci9zdGVwXCJdKHQsdGhpcy5nZXRDb3B5KCkpOnR9LHQucHJvdG90eXBlLnN0b3JlPWZ1bmN0aW9uKHQpe3RoaXMuYWNjW3RoaXMucG9zXT10LHRoaXMucG9zKz0xLHRoaXMucG9zPT09dGhpcy5hY2MubGVuZ3RoJiYodGhpcy5wb3M9MCx0aGlzLmZ1bGw9ITApfSx0LnByb3RvdHlwZS5nZXRDb3B5PWZ1bmN0aW9uKCl7cmV0dXJuIGwoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5hY2MsdGhpcy5wb3MpLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuYWNjLDAsdGhpcy5wb3MpKX0sdH0oKSxhdD11KGIoW10sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaXQodCxlKX0pLHJ0KSksb3Q9dShmdW5jdGlvbih0LGUpe3JldHVybiBsKGUsW3RdKX0pLHN0PXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5hcHBseSh0aGlzLGUpfSksdXQ9cyhmdW5jdGlvbih0KXtmb3IodmFyIGU9cSh0KSxuPWUubGVuZ3RoLHI9W10saT0wO2k8bjspcltpXT10W2VbaV1dLGkrPTE7cmV0dXJuIHJ9KTtmdW5jdGlvbiBjdCh0LGUpe3JldHVybiBxKGUpLnJlZHVjZShmdW5jdGlvbihuLHIpe3JldHVybiBuW3JdPXQoZVtyXSksbn0se30pfXZhciBsdD1zKGZ1bmN0aW9uIHQoZSl7cmV0dXJuIGU9Y3QoZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOnQoZSl9LGUpLHAoWChTLDAsRyhcImxlbmd0aFwiLHV0KGUpKSksZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHM7cmV0dXJuIGN0KGZ1bmN0aW9uKGUpe3JldHVybiBzdChlLHQpfSxlKX0pfSksZnQ9dShmdW5jdGlvbih0LGUpe3JldHVybiBlKHQpfSksaHQ9bShmdW5jdGlvbih0LGUsbil7dmFyIHI9dChlKSxpPXQobik7cmV0dXJuIHI8aT8tMTpyPmk/MTowfSkscHQ9bShmdW5jdGlvbih0LGUsbil7dmFyIHI9e307Zm9yKHZhciBpIGluIG4pcltpXT1uW2ldO3JldHVybiByW3RdPWUscn0pLGR0PU51bWJlci5pc0ludGVnZXJ8fGZ1bmN0aW9uKHQpe3JldHVybiB0PDwwPT09dH0sbXQ9cyhmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dH0pLGd0PW0oZnVuY3Rpb24gdChlLG4scil7aWYoMD09PWUubGVuZ3RoKXJldHVybiBuO3ZhciBpPWVbMF07aWYoZS5sZW5ndGg+MSl7dmFyIGE9IW10KHIpJiZCKGkscik/cltpXTpkdChlWzFdKT9bXTp7fTtuPXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSwxKSxuLGEpfWlmKGR0KGkpJiZ5KHIpKXt2YXIgbz1bXS5jb25jYXQocik7cmV0dXJuIG9baV09bixvfXJldHVybiBwdChpLG4scil9KSx5dD11KGZ1bmN0aW9uKHQsZSl7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfTtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlLmNhbGwodGhpcyx0KX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbih0LG4pe3JldHVybiBlLmNhbGwodGhpcyx0LG4pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHQsbixyKXtyZXR1cm4gZS5jYWxsKHRoaXMsdCxuLHIpfTtjYXNlIDQ6cmV0dXJuIGZ1bmN0aW9uKHQsbixyLGkpe3JldHVybiBlLmNhbGwodGhpcyx0LG4scixpKX07Y2FzZSA1OnJldHVybiBmdW5jdGlvbih0LG4scixpLGEpe3JldHVybiBlLmNhbGwodGhpcyx0LG4scixpLGEpfTtjYXNlIDY6cmV0dXJuIGZ1bmN0aW9uKHQsbixyLGksYSxvKXtyZXR1cm4gZS5jYWxsKHRoaXMsdCxuLHIsaSxhLG8pfTtjYXNlIDc6cmV0dXJuIGZ1bmN0aW9uKHQsbixyLGksYSxvLHMpe3JldHVybiBlLmNhbGwodGhpcyx0LG4scixpLGEsbyxzKX07Y2FzZSA4OnJldHVybiBmdW5jdGlvbih0LG4scixpLGEsbyxzLHUpe3JldHVybiBlLmNhbGwodGhpcyx0LG4scixpLGEsbyxzLHUpfTtjYXNlIDk6cmV0dXJuIGZ1bmN0aW9uKHQsbixyLGksYSxvLHMsdSxjKXtyZXR1cm4gZS5jYWxsKHRoaXMsdCxuLHIsaSxhLG8scyx1LGMpfTtjYXNlIDEwOnJldHVybiBmdW5jdGlvbih0LG4scixpLGEsbyxzLHUsYyxsKXtyZXR1cm4gZS5jYWxsKHRoaXMsdCxuLHIsaSxhLG8scyx1LGMsbCl9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiRmlyc3QgYXJndW1lbnQgdG8gbkFyeSBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIGludGVnZXIgbm8gZ3JlYXRlciB0aGFuIHRlblwiKX19KSx2dD1zKGZ1bmN0aW9uKHQpe3JldHVybiB5dCgyLHQpfSk7ZnVuY3Rpb24gYnQodCl7cmV0dXJuXCJbb2JqZWN0IEZ1bmN0aW9uXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfXZhciB3dD11KGZ1bmN0aW9uKHQsZSl7dmFyIG49cCh0LGUpO3JldHVybiBwKHQsZnVuY3Rpb24oKXtyZXR1cm4gRChudCwkKG4sYXJndW1lbnRzWzBdKSxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSkpfSl9KSxfdD1zKGZ1bmN0aW9uKHQpe3JldHVybiB3dCh0Lmxlbmd0aCx0KX0pLHh0PXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gYnQodCk/ZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cykmJmUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTpfdChaKSh0LGUpfSksRXQ9cyhmdW5jdGlvbih0KXtyZXR1cm4gcCh0Lmxlbmd0aCx0KX0pLFN0PUV0KGZ1bmN0aW9uKHQpe3JldHVybiB0LmFwcGx5KHRoaXMsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKX0pO2Z1bmN0aW9uIE50KHQpe3JldHVybiBmdW5jdGlvbiBlKG4pe2Zvcih2YXIgcixpLGEsbz1bXSxzPTAsdT1uLmxlbmd0aDtzPHU7KXtpZihPKG5bc10pKWZvcihhPTAsaT0ocj10P2UobltzXSk6bltzXSkubGVuZ3RoO2E8aTspb1tvLmxlbmd0aF09clthXSxhKz0xO2Vsc2Ugb1tvLmxlbmd0aF09bltzXTtzKz0xfXJldHVybiBvfX12YXIgSXQ9ZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24odCl7cmV0dXJue1wiQEB0cmFuc2R1Y2VyL2luaXRcIjpfLmluaXQsXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdKGUpfSxcIkBAdHJhbnNkdWNlci9zdGVwXCI6ZnVuY3Rpb24oZSxuKXt2YXIgcj10W1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0oZSxuKTtyZXR1cm4gcltcIkBAdHJhbnNkdWNlci9yZWR1Y2VkXCJdP3tcIkBAdHJhbnNkdWNlci92YWx1ZVwiOnIsXCJAQHRyYW5zZHVjZXIvcmVkdWNlZFwiOiEwfTpyfX19KHQpO3JldHVybntcIkBAdHJhbnNkdWNlci9pbml0XCI6Xy5pbml0LFwiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiOmZ1bmN0aW9uKHQpe3JldHVybiBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXSh0KX0sXCJAQHRyYW5zZHVjZXIvc3RlcFwiOmZ1bmN0aW9uKHQsbil7cmV0dXJuIE8obik/RChlLHQsbik6RChlLHQsW25dKX19fSxPdD11KGIoW1wiZmFudGFzeS1sYW5kL2NoYWluXCIsXCJjaGFpblwiXSx1KGZ1bmN0aW9uKHQsZSl7cmV0dXJuICQodCxJdChlKSl9KSxmdW5jdGlvbih0LGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZnVuY3Rpb24obil7cmV0dXJuIHQoZShuKSkobil9Ok50KCExKSgkKHQsZSkpfSkpLGt0PW0oZnVuY3Rpb24odCxlLG4pe2lmKHQ+ZSl0aHJvdyBuZXcgRXJyb3IoXCJtaW4gbXVzdCBub3QgYmUgZ3JlYXRlciB0aGFuIG1heCBpbiBjbGFtcChtaW4sIG1heCwgdmFsdWUpXCIpO3JldHVybiBuPHQ/dDpuPmU/ZTpufSk7ZnVuY3Rpb24gQXQodCl7cmV0dXJuIG5ldyBSZWdFeHAodC5zb3VyY2UsKHQuZ2xvYmFsP1wiZ1wiOlwiXCIpKyh0Lmlnbm9yZUNhc2U/XCJpXCI6XCJcIikrKHQubXVsdGlsaW5lP1wibVwiOlwiXCIpKyh0LnN0aWNreT9cInlcIjpcIlwiKSsodC51bmljb2RlP1widVwiOlwiXCIpKX12YXIgQ3Q9cyhmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXQ/XCJOdWxsXCI6dm9pZCAwPT09dD9cIlVuZGVmaW5lZFwiOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKX0pO2Z1bmN0aW9uIFB0KHQsZSxuLHIpe3ZhciBpPWZ1bmN0aW9uKGkpe2Zvcih2YXIgYT1lLmxlbmd0aCxvPTA7bzxhOyl7aWYodD09PWVbb10pcmV0dXJuIG5bb107bys9MX1mb3IodmFyIHMgaW4gZVtvKzFdPXQsbltvKzFdPWksdClpW3NdPXI/UHQodFtzXSxlLG4sITApOnRbc107cmV0dXJuIGl9O3N3aXRjaChDdCh0KSl7Y2FzZVwiT2JqZWN0XCI6cmV0dXJuIGkoe30pO2Nhc2VcIkFycmF5XCI6cmV0dXJuIGkoW10pO2Nhc2VcIkRhdGVcIjpyZXR1cm4gbmV3IERhdGUodC52YWx1ZU9mKCkpO2Nhc2VcIlJlZ0V4cFwiOnJldHVybiBBdCh0KTtkZWZhdWx0OnJldHVybiB0fX12YXIgVHQ9cyhmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jbG9uZT90LmNsb25lKCk6UHQodCxbXSxbXSwhMCl9KSxSdD1zKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLG4pe3JldHVybiB0KGUsbik/LTE6dChuLGUpPzE6MH19KSxEdD1zKGZ1bmN0aW9uKHQpe3JldHVybiF0fSksTXQ9X3QoRHQpO2Z1bmN0aW9uIGp0KHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpKX19ZnVuY3Rpb24gQnQodCxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoO2lmKDA9PT1uKXJldHVybiBlKCk7dmFyIHI9YXJndW1lbnRzW24tMV07cmV0dXJuIHkocil8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHJbdF0/ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6clt0XS5hcHBseShyLEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwLG4tMSkpfX12YXIgTHQ9bShCdChcInNsaWNlXCIsZnVuY3Rpb24odCxlLG4pe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChuLHQsZSl9KSksenQ9cyhCdChcInRhaWxcIixMdCgxLDEvMCkpKTtmdW5jdGlvbiBGdCgpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcInBpcGUgcmVxdWlyZXMgYXQgbGVhc3Qgb25lIGFyZ3VtZW50XCIpO3JldHVybiBmKGFyZ3VtZW50c1swXS5sZW5ndGgsWChqdCxhcmd1bWVudHNbMF0senQoYXJndW1lbnRzKSkpfXZhciBVdD1zKGZ1bmN0aW9uKHQpe3JldHVybiBJKHQpP3Quc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIik6QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCwwKS5yZXZlcnNlKCl9KTtmdW5jdGlvbiBWdCgpe2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImNvbXBvc2UgcmVxdWlyZXMgYXQgbGVhc3Qgb25lIGFyZ3VtZW50XCIpO3JldHVybiBGdC5hcHBseSh0aGlzLFV0KGFyZ3VtZW50cykpfWZ1bmN0aW9uIFd0KCl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiY29tcG9zZUsgcmVxdWlyZXMgYXQgbGVhc3Qgb25lIGFyZ3VtZW50XCIpO3ZhciB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyksZT10LnBvcCgpO3JldHVybiBWdChWdC5hcHBseSh0aGlzLCQoT3QsdCkpLGUpfWZ1bmN0aW9uIHF0KHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpcztyZXR1cm4gdC5hcHBseShuLGFyZ3VtZW50cykudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZS5jYWxsKG4sdCl9KX19ZnVuY3Rpb24gJHQoKXtpZigwPT09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJwaXBlUCByZXF1aXJlcyBhdCBsZWFzdCBvbmUgYXJndW1lbnRcIik7cmV0dXJuIGYoYXJndW1lbnRzWzBdLmxlbmd0aCxYKHF0LGFyZ3VtZW50c1swXSx6dChhcmd1bWVudHMpKSl9ZnVuY3Rpb24gSHQoKXtpZigwPT09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJjb21wb3NlUCByZXF1aXJlcyBhdCBsZWFzdCBvbmUgYXJndW1lbnRcIik7cmV0dXJuICR0LmFwcGx5KHRoaXMsVXQoYXJndW1lbnRzKSl9dmFyIEt0PXUoZnVuY3Rpb24odCxlKXt2YXIgbj10PDA/ZS5sZW5ndGgrdDp0O3JldHVybiBJKGUpP2UuY2hhckF0KG4pOmVbbl19KSxHdD1LdCgwKTtmdW5jdGlvbiBYdCh0KXtyZXR1cm4gdH12YXIgWXQ9cyhYdCksSnQ9dShmdW5jdGlvbih0LGUpe2lmKGUubGVuZ3RoPD0wKXJldHVybiBZdDt2YXIgbj1HdChlKSxyPXp0KGUpO3JldHVybiBmKG4ubGVuZ3RoLGZ1bmN0aW9uKCl7cmV0dXJuIEQoZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC5jYWxsKHRoaXMsbixlKX0sbi5hcHBseSh0aGlzLGFyZ3VtZW50cykscil9KX0pLFp0PXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gSnQuYXBwbHkodGhpcyxbdCxVdChlKV0pfSk7ZnVuY3Rpb24gUXQodCl7Zm9yKHZhciBlLG49W107IShlPXQubmV4dCgpKS5kb25lOyluLnB1c2goZS52YWx1ZSk7cmV0dXJuIG59ZnVuY3Rpb24gdGUodCxlLG4pe2Zvcih2YXIgcj0wLGk9bi5sZW5ndGg7cjxpOyl7aWYodChlLG5bcl0pKXJldHVybiEwO3IrPTF9cmV0dXJuITF9dmFyIGVlPVwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWU/MCE9PXR8fDEvdD09MS9lOnQhPXQmJmUhPWV9O2Z1bmN0aW9uIG5lKHQsZSxuLHIpe3ZhciBpPVF0KHQpO2Z1bmN0aW9uIGEodCxlKXtyZXR1cm4gcmUodCxlLG4uc2xpY2UoKSxyLnNsaWNlKCkpfXJldHVybiF0ZShmdW5jdGlvbih0LGUpe3JldHVybiF0ZShhLGUsdCl9LFF0KGUpLGkpfWZ1bmN0aW9uIHJlKHQsZSxuLHIpe2lmKGVlKHQsZSkpcmV0dXJuITA7dmFyIGksYSxvPUN0KHQpO2lmKG8hPT1DdChlKSlyZXR1cm4hMTtpZihudWxsPT10fHxudWxsPT1lKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHRbXCJmYW50YXN5LWxhbmQvZXF1YWxzXCJdfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlW1wiZmFudGFzeS1sYW5kL2VxdWFsc1wiXSlyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0W1wiZmFudGFzeS1sYW5kL2VxdWFsc1wiXSYmdFtcImZhbnRhc3ktbGFuZC9lcXVhbHNcIl0oZSkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGVbXCJmYW50YXN5LWxhbmQvZXF1YWxzXCJdJiZlW1wiZmFudGFzeS1sYW5kL2VxdWFsc1wiXSh0KTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmVxdWFsc3x8XCJmdW5jdGlvblwiPT10eXBlb2YgZS5lcXVhbHMpcmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdC5lcXVhbHMmJnQuZXF1YWxzKGUpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmVxdWFscyYmZS5lcXVhbHModCk7c3dpdGNoKG8pe2Nhc2VcIkFyZ3VtZW50c1wiOmNhc2VcIkFycmF5XCI6Y2FzZVwiT2JqZWN0XCI6aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jb25zdHJ1Y3RvciYmXCJQcm9taXNlXCI9PT0oaT10LmNvbnN0cnVjdG9yLG51bGw9PShhPVN0cmluZyhpKS5tYXRjaCgvXmZ1bmN0aW9uIChcXHcqKS8pKT9cIlwiOmFbMV0pKXJldHVybiB0PT09ZTticmVhaztjYXNlXCJCb29sZWFuXCI6Y2FzZVwiTnVtYmVyXCI6Y2FzZVwiU3RyaW5nXCI6aWYodHlwZW9mIHQhPXR5cGVvZiBlfHwhZWUodC52YWx1ZU9mKCksZS52YWx1ZU9mKCkpKXJldHVybiExO2JyZWFrO2Nhc2VcIkRhdGVcIjppZighZWUodC52YWx1ZU9mKCksZS52YWx1ZU9mKCkpKXJldHVybiExO2JyZWFrO2Nhc2VcIkVycm9yXCI6cmV0dXJuIHQubmFtZT09PWUubmFtZSYmdC5tZXNzYWdlPT09ZS5tZXNzYWdlO2Nhc2VcIlJlZ0V4cFwiOmlmKHQuc291cmNlIT09ZS5zb3VyY2V8fHQuZ2xvYmFsIT09ZS5nbG9iYWx8fHQuaWdub3JlQ2FzZSE9PWUuaWdub3JlQ2FzZXx8dC5tdWx0aWxpbmUhPT1lLm11bHRpbGluZXx8dC5zdGlja3khPT1lLnN0aWNreXx8dC51bmljb2RlIT09ZS51bmljb2RlKXJldHVybiExfWZvcih2YXIgcz1uLmxlbmd0aC0xO3M+PTA7KXtpZihuW3NdPT09dClyZXR1cm4gcltzXT09PWU7cy09MX1zd2l0Y2gobyl7Y2FzZVwiTWFwXCI6cmV0dXJuIHQuc2l6ZT09PWUuc2l6ZSYmbmUodC5lbnRyaWVzKCksZS5lbnRyaWVzKCksbi5jb25jYXQoW3RdKSxyLmNvbmNhdChbZV0pKTtjYXNlXCJTZXRcIjpyZXR1cm4gdC5zaXplPT09ZS5zaXplJiZuZSh0LnZhbHVlcygpLGUudmFsdWVzKCksbi5jb25jYXQoW3RdKSxyLmNvbmNhdChbZV0pKTtjYXNlXCJBcmd1bWVudHNcIjpjYXNlXCJBcnJheVwiOmNhc2VcIk9iamVjdFwiOmNhc2VcIkJvb2xlYW5cIjpjYXNlXCJOdW1iZXJcIjpjYXNlXCJTdHJpbmdcIjpjYXNlXCJEYXRlXCI6Y2FzZVwiRXJyb3JcIjpjYXNlXCJSZWdFeHBcIjpjYXNlXCJJbnQ4QXJyYXlcIjpjYXNlXCJVaW50OEFycmF5XCI6Y2FzZVwiVWludDhDbGFtcGVkQXJyYXlcIjpjYXNlXCJJbnQxNkFycmF5XCI6Y2FzZVwiVWludDE2QXJyYXlcIjpjYXNlXCJJbnQzMkFycmF5XCI6Y2FzZVwiVWludDMyQXJyYXlcIjpjYXNlXCJGbG9hdDMyQXJyYXlcIjpjYXNlXCJGbG9hdDY0QXJyYXlcIjpjYXNlXCJBcnJheUJ1ZmZlclwiOmJyZWFrO2RlZmF1bHQ6cmV0dXJuITF9dmFyIHU9cSh0KTtpZih1Lmxlbmd0aCE9PXEoZSkubGVuZ3RoKXJldHVybiExO3ZhciBjPW4uY29uY2F0KFt0XSksbD1yLmNvbmNhdChbZV0pO2ZvcihzPXUubGVuZ3RoLTE7cz49MDspe3ZhciBmPXVbc107aWYoIUIoZixlKXx8IXJlKGVbZl0sdFtmXSxjLGwpKXJldHVybiExO3MtPTF9cmV0dXJuITB9dmFyIGllPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gcmUodCxlLFtdLFtdKX0pO2Z1bmN0aW9uIGFlKHQsZSxuKXt2YXIgcixpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuaW5kZXhPZilzd2l0Y2godHlwZW9mIGUpe2Nhc2VcIm51bWJlclwiOmlmKDA9PT1lKXtmb3Iocj0xL2U7bjx0Lmxlbmd0aDspe2lmKDA9PT0oaT10W25dKSYmMS9pPT09cilyZXR1cm4gbjtuKz0xfXJldHVybi0xfWlmKGUhPWUpe2Zvcig7bjx0Lmxlbmd0aDspe2lmKFwibnVtYmVyXCI9PXR5cGVvZihpPXRbbl0pJiZpIT1pKXJldHVybiBuO24rPTF9cmV0dXJuLTF9cmV0dXJuIHQuaW5kZXhPZihlLG4pO2Nhc2VcInN0cmluZ1wiOmNhc2VcImJvb2xlYW5cIjpjYXNlXCJmdW5jdGlvblwiOmNhc2VcInVuZGVmaW5lZFwiOnJldHVybiB0LmluZGV4T2YoZSxuKTtjYXNlXCJvYmplY3RcIjppZihudWxsPT09ZSlyZXR1cm4gdC5pbmRleE9mKGUsbil9Zm9yKDtuPHQubGVuZ3RoOyl7aWYoaWUodFtuXSxlKSlyZXR1cm4gbjtuKz0xfXJldHVybi0xfWZ1bmN0aW9uIG9lKHQsZSl7cmV0dXJuIGFlKGUsdCwwKT49MH1mdW5jdGlvbiBzZSh0KXtyZXR1cm4nXCInK3QucmVwbGFjZSgvXFxcXC9nLFwiXFxcXFxcXFxcIikucmVwbGFjZSgvW1xcYl0vZyxcIlxcXFxiXCIpLnJlcGxhY2UoL1xcZi9nLFwiXFxcXGZcIikucmVwbGFjZSgvXFxuL2csXCJcXFxcblwiKS5yZXBsYWNlKC9cXHIvZyxcIlxcXFxyXCIpLnJlcGxhY2UoL1xcdC9nLFwiXFxcXHRcIikucmVwbGFjZSgvXFx2L2csXCJcXFxcdlwiKS5yZXBsYWNlKC9cXDAvZyxcIlxcXFwwXCIpLnJlcGxhY2UoL1wiL2csJ1xcXFxcIicpKydcIid9dmFyIHVlPWZ1bmN0aW9uKHQpe3JldHVybih0PDEwP1wiMFwiOlwiXCIpK3R9LGNlPVwiZnVuY3Rpb25cIj09dHlwZW9mIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nP2Z1bmN0aW9uKHQpe3JldHVybiB0LnRvSVNPU3RyaW5nKCl9OmZ1bmN0aW9uKHQpe3JldHVybiB0LmdldFVUQ0Z1bGxZZWFyKCkrXCItXCIrdWUodC5nZXRVVENNb250aCgpKzEpK1wiLVwiK3VlKHQuZ2V0VVRDRGF0ZSgpKStcIlRcIit1ZSh0LmdldFVUQ0hvdXJzKCkpK1wiOlwiK3VlKHQuZ2V0VVRDTWludXRlcygpKStcIjpcIit1ZSh0LmdldFVUQ1NlY29uZHMoKSkrXCIuXCIrKHQuZ2V0VVRDTWlsbGlzZWNvbmRzKCkvMWUzKS50b0ZpeGVkKDMpLnNsaWNlKDIsNSkrXCJaXCJ9O2Z1bmN0aW9uIGxlKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiF0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19ZnVuY3Rpb24gZmUodCxlKXtmb3IodmFyIG49MCxyPWUubGVuZ3RoLGk9W107bjxyOyl0KGVbbl0pJiYoaVtpLmxlbmd0aF09ZVtuXSksbis9MTtyZXR1cm4gaX1mdW5jdGlvbiBoZSh0KXtyZXR1cm5cIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfXZhciBwZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5mPXR9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1fLnJlc3VsdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZihlKT90aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCxlKTp0fSx0fSgpLGRlPXUoYihbXCJmaWx0ZXJcIl0sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgcGUodCxlKX0pLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGhlKGUpP0QoZnVuY3Rpb24obixyKXtyZXR1cm4gdChlW3JdKSYmKG5bcl09ZVtyXSksbn0se30scShlKSk6ZmUodCxlKX0pKSxtZT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGRlKGxlKHQpLGUpfSk7ZnVuY3Rpb24gZ2UodCxlKXt2YXIgbj1mdW5jdGlvbihuKXt2YXIgcj1lLmNvbmNhdChbdF0pO3JldHVybiBvZShuLHIpP1wiPENpcmN1bGFyPlwiOmdlKG4scil9LHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTihmdW5jdGlvbihlKXtyZXR1cm4gc2UoZSkrXCI6IFwiK24odFtlXSl9LGUuc2xpY2UoKS5zb3J0KCkpfTtzd2l0Y2goT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKXtjYXNlXCJbb2JqZWN0IEFyZ3VtZW50c11cIjpyZXR1cm5cIihmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfShcIitOKG4sdCkuam9pbihcIiwgXCIpK1wiKSlcIjtjYXNlXCJbb2JqZWN0IEFycmF5XVwiOnJldHVyblwiW1wiK04obix0KS5jb25jYXQocih0LG1lKGZ1bmN0aW9uKHQpe3JldHVybi9eXFxkKyQvLnRlc3QodCl9LHEodCkpKSkuam9pbihcIiwgXCIpK1wiXVwiO2Nhc2VcIltvYmplY3QgQm9vbGVhbl1cIjpyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdD9cIm5ldyBCb29sZWFuKFwiK24odC52YWx1ZU9mKCkpK1wiKVwiOnQudG9TdHJpbmcoKTtjYXNlXCJbb2JqZWN0IERhdGVdXCI6cmV0dXJuXCJuZXcgRGF0ZShcIisoaXNOYU4odC52YWx1ZU9mKCkpP24oTmFOKTpzZShjZSh0KSkpK1wiKVwiO2Nhc2VcIltvYmplY3QgTnVsbF1cIjpyZXR1cm5cIm51bGxcIjtjYXNlXCJbb2JqZWN0IE51bWJlcl1cIjpyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdD9cIm5ldyBOdW1iZXIoXCIrbih0LnZhbHVlT2YoKSkrXCIpXCI6MS90PT0tMS8wP1wiLTBcIjp0LnRvU3RyaW5nKDEwKTtjYXNlXCJbb2JqZWN0IFN0cmluZ11cIjpyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgdD9cIm5ldyBTdHJpbmcoXCIrbih0LnZhbHVlT2YoKSkrXCIpXCI6c2UodCk7Y2FzZVwiW29iamVjdCBVbmRlZmluZWRdXCI6cmV0dXJuXCJ1bmRlZmluZWRcIjtkZWZhdWx0OmlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHQudG9TdHJpbmcpe3ZhciBpPXQudG9TdHJpbmcoKTtpZihcIltvYmplY3QgT2JqZWN0XVwiIT09aSlyZXR1cm4gaX1yZXR1cm5cIntcIityKHQscSh0KSkuam9pbihcIiwgXCIpK1wifVwifX12YXIgeWU9cyhmdW5jdGlvbih0KXtyZXR1cm4gZ2UodCxbXSl9KSx2ZT11KGZ1bmN0aW9uKHQsZSl7aWYoeSh0KSl7aWYoeShlKSlyZXR1cm4gdC5jb25jYXQoZSk7dGhyb3cgbmV3IFR5cGVFcnJvcih5ZShlKStcIiBpcyBub3QgYW4gYXJyYXlcIil9aWYoSSh0KSl7aWYoSShlKSlyZXR1cm4gdCtlO3Rocm93IG5ldyBUeXBlRXJyb3IoeWUoZSkrXCIgaXMgbm90IGEgc3RyaW5nXCIpfWlmKG51bGwhPXQmJmJ0KHRbXCJmYW50YXN5LWxhbmQvY29uY2F0XCJdKSlyZXR1cm4gdFtcImZhbnRhc3ktbGFuZC9jb25jYXRcIl0oZSk7aWYobnVsbCE9dCYmYnQodC5jb25jYXQpKXJldHVybiB0LmNvbmNhdChlKTt0aHJvdyBuZXcgVHlwZUVycm9yKHllKHQpKycgZG9lcyBub3QgaGF2ZSBhIG1ldGhvZCBuYW1lZCBcImNvbmNhdFwiIG9yIFwiZmFudGFzeS1sYW5kL2NvbmNhdFwiJyl9KSxiZT1zKGZ1bmN0aW9uKHQpe3JldHVybiBmKFgoUywwLCQoZnVuY3Rpb24odCl7cmV0dXJuIHRbMF0ubGVuZ3RofSx0KSksZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoOyl7aWYodFtlXVswXS5hcHBseSh0aGlzLGFyZ3VtZW50cykpcmV0dXJuIHRbZV1bMV0uYXBwbHkodGhpcyxhcmd1bWVudHMpO2UrPTF9fSl9KSx3ZT11KGZ1bmN0aW9uKHQsZSl7aWYodD4xMCl0aHJvdyBuZXcgRXJyb3IoXCJDb25zdHJ1Y3RvciB3aXRoIGdyZWF0ZXIgdGhhbiB0ZW4gYXJndW1lbnRzXCIpO3JldHVybiAwPT09dD9mdW5jdGlvbigpe3JldHVybiBuZXcgZX06RXQoeXQodCxmdW5jdGlvbih0LG4scixpLGEsbyxzLHUsYyxsKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAxOnJldHVybiBuZXcgZSh0KTtjYXNlIDI6cmV0dXJuIG5ldyBlKHQsbik7Y2FzZSAzOnJldHVybiBuZXcgZSh0LG4scik7Y2FzZSA0OnJldHVybiBuZXcgZSh0LG4scixpKTtjYXNlIDU6cmV0dXJuIG5ldyBlKHQsbixyLGksYSk7Y2FzZSA2OnJldHVybiBuZXcgZSh0LG4scixpLGEsbyk7Y2FzZSA3OnJldHVybiBuZXcgZSh0LG4scixpLGEsbyxzKTtjYXNlIDg6cmV0dXJuIG5ldyBlKHQsbixyLGksYSxvLHMsdSk7Y2FzZSA5OnJldHVybiBuZXcgZSh0LG4scixpLGEsbyxzLHUsYyk7Y2FzZSAxMDpyZXR1cm4gbmV3IGUodCxuLHIsaSxhLG8scyx1LGMsbCl9fSkpfSksX2U9cyhmdW5jdGlvbih0KXtyZXR1cm4gd2UodC5sZW5ndGgsdCl9KSx4ZT11KG9lKSxFZT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHAoWChTLDAsRyhcImxlbmd0aFwiLGUpKSxmdW5jdGlvbigpe3ZhciBuPWFyZ3VtZW50cyxyPXRoaXM7cmV0dXJuIHQuYXBwbHkocixOKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFwcGx5KHIsbil9LGUpKX0pfSksU2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLHIpe3RoaXMudmFsdWVGbj10LHRoaXMudmFsdWVBY2M9ZSx0aGlzLmtleUZuPW4sdGhpcy54Zj1yLHRoaXMuaW5wdXRzPXt9fXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09ZnVuY3Rpb24odCl7dmFyIGU7Zm9yKGUgaW4gdGhpcy5pbnB1dHMpaWYoQihlLHRoaXMuaW5wdXRzKSYmKHQ9dGhpcy54ZltcIkBAdHJhbnNkdWNlci9zdGVwXCJdKHQsdGhpcy5pbnB1dHNbZV0pKVtcIkBAdHJhbnNkdWNlci9yZWR1Y2VkXCJdKXt0PXRbXCJAQHRyYW5zZHVjZXIvdmFsdWVcIl07YnJlYWt9cmV0dXJuIHRoaXMuaW5wdXRzPW51bGwsdGhpcy54ZltcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl0odCl9LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmtleUZuKGUpO3JldHVybiB0aGlzLmlucHV0c1tuXT10aGlzLmlucHV0c1tuXXx8W24sdGhpcy52YWx1ZUFjY10sdGhpcy5pbnB1dHNbbl1bMV09dGhpcy52YWx1ZUZuKHRoaXMuaW5wdXRzW25dWzFdLGUpLHR9LHR9KCksTmU9aCg0LFtdLGIoW10saCg0LFtdLGZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBuZXcgU2UodCxlLG4scil9KSxmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gRChmdW5jdGlvbihyLGkpe3ZhciBhPW4oaSk7cmV0dXJuIHJbYV09dChCKGEscik/clthXTplLGkpLHJ9LHt9LHIpfSkpLEllPU5lKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrMX0sMCksT2U9YygtMSksa2U9dShmdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT1lfHxlIT1lP3Q6ZX0pLEFlPW0oZnVuY3Rpb24odCxlLG4pe3ZhciByPXQoZSksaT10KG4pO3JldHVybiByPmk/LTE6cjxpPzE6MH0pO2Z1bmN0aW9uIENlKHQsZSxuKXt2YXIgcixpPXR5cGVvZiB0O3N3aXRjaChpKXtjYXNlXCJzdHJpbmdcIjpjYXNlXCJudW1iZXJcIjpyZXR1cm4gMD09PXQmJjEvdD09LTEvMD8hIW4uX2l0ZW1zW1wiLTBcIl18fChlJiYobi5faXRlbXNbXCItMFwiXT0hMCksITEpOm51bGwhPT1uLl9uYXRpdmVTZXQ/ZT8ocj1uLl9uYXRpdmVTZXQuc2l6ZSxuLl9uYXRpdmVTZXQuYWRkKHQpLG4uX25hdGl2ZVNldC5zaXplPT09cik6bi5fbmF0aXZlU2V0Lmhhcyh0KTppIGluIG4uX2l0ZW1zP3QgaW4gbi5faXRlbXNbaV18fChlJiYobi5faXRlbXNbaV1bdF09ITApLCExKTooZSYmKG4uX2l0ZW1zW2ldPXt9LG4uX2l0ZW1zW2ldW3RdPSEwKSwhMSk7Y2FzZVwiYm9vbGVhblwiOmlmKGkgaW4gbi5faXRlbXMpe3ZhciBhPXQ/MTowO3JldHVybiEhbi5faXRlbXNbaV1bYV18fChlJiYobi5faXRlbXNbaV1bYV09ITApLCExKX1yZXR1cm4gZSYmKG4uX2l0ZW1zW2ldPXQ/WyExLCEwXTpbITAsITFdKSwhMTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBudWxsIT09bi5fbmF0aXZlU2V0P2U/KHI9bi5fbmF0aXZlU2V0LnNpemUsbi5fbmF0aXZlU2V0LmFkZCh0KSxuLl9uYXRpdmVTZXQuc2l6ZT09PXIpOm4uX25hdGl2ZVNldC5oYXModCk6aSBpbiBuLl9pdGVtcz8hIW9lKHQsbi5faXRlbXNbaV0pfHwoZSYmbi5faXRlbXNbaV0ucHVzaCh0KSwhMSk6KGUmJihuLl9pdGVtc1tpXT1bdF0pLCExKTtjYXNlXCJ1bmRlZmluZWRcIjpyZXR1cm4hIW4uX2l0ZW1zW2ldfHwoZSYmKG4uX2l0ZW1zW2ldPSEwKSwhMSk7Y2FzZVwib2JqZWN0XCI6aWYobnVsbD09PXQpcmV0dXJuISFuLl9pdGVtcy5udWxsfHwoZSYmKG4uX2l0ZW1zLm51bGw9ITApLCExKTtkZWZhdWx0OnJldHVybihpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSlpbiBuLl9pdGVtcz8hIW9lKHQsbi5faXRlbXNbaV0pfHwoZSYmbi5faXRlbXNbaV0ucHVzaCh0KSwhMSk6KGUmJihuLl9pdGVtc1tpXT1bdF0pLCExKX19dmFyIFBlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMuX25hdGl2ZVNldD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTZXQ/bmV3IFNldDpudWxsLHRoaXMuX2l0ZW1zPXt9fXJldHVybiB0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7cmV0dXJuIUNlKHQsITAsdGhpcyl9LHQucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4gQ2UodCwhMSx0aGlzKX0sdH0oKSxUZT11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MCxpPXQubGVuZ3RoLGE9ZS5sZW5ndGgsbz1uZXcgUGUscz0wO3M8YTtzKz0xKW8uYWRkKGVbc10pO2Zvcig7cjxpOylvLmFkZCh0W3JdKSYmKG5bbi5sZW5ndGhdPXRbcl0pLHIrPTE7cmV0dXJuIG59KSxSZT1tKGZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9W10saT0wLGE9ZS5sZW5ndGg7aTxhOyl0ZSh0LGVbaV0sbil8fHRlKHQsZVtpXSxyKXx8ci5wdXNoKGVbaV0pLGkrPTE7cmV0dXJuIHJ9KSxEZT11KGZ1bmN0aW9uKHQsZSl7dmFyIG49e307Zm9yKHZhciByIGluIGUpbltyXT1lW3JdO3JldHVybiBkZWxldGUgblt0XSxufSksTWU9bShmdW5jdGlvbih0LGUsbil7dmFyIHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobiwwKTtyZXR1cm4gci5zcGxpY2UodCxlKSxyfSksamU9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIGcodCxKKGUpLG4pfSksQmU9dShmdW5jdGlvbiB0KGUsbil7c3dpdGNoKGUubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG47Y2FzZSAxOnJldHVybiBkdChlWzBdKSYmeShuKT9NZShlWzBdLDEsbik6RGUoZVswXSxuKTtkZWZhdWx0OnZhciByPWVbMF0saT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLDEpO3JldHVybiBudWxsPT1uW3JdP246ZHQocikmJnkobik/amUocix0KGksbltyXSksbik6cHQocix0KGksbltyXSksbil9fSksTGU9dShmdW5jdGlvbih0LGUpe3JldHVybiB0L2V9KSx6ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5uPXR9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1fLnJlc3VsdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMubj4wPyh0aGlzLm4tPTEsdCk6dGhpcy54ZltcIkBAdHJhbnNkdWNlci9zdGVwXCJdKHQsZSl9LHR9KCksRmU9dShiKFtcImRyb3BcIl0sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgemUodCxlKX0pLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEx0KE1hdGgubWF4KDAsdCksMS8wLGUpfSkpLFVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMueGY9ZSx0aGlzLm49dCx0aGlzLmk9MH1yZXR1cm4gdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXT1fLmluaXQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdPV8ucmVzdWx0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXt0aGlzLmkrPTE7dmFyIG49MD09PXRoaXMubj90OnRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LGUpO3JldHVybiB0aGlzLm4+PTAmJnRoaXMuaT49dGhpcy5uP3cobik6bn0sdH0oKSxWZT11KGIoW1widGFrZVwiXSx1KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBVZSh0LGUpfSksZnVuY3Rpb24odCxlKXtyZXR1cm4gTHQoMCx0PDA/MS8wOnQsZSl9KSk7ZnVuY3Rpb24gV2UodCxlKXtyZXR1cm4gVmUodDxlLmxlbmd0aD9lLmxlbmd0aC10OjAsZSl9dmFyIHFlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMueGY9ZSx0aGlzLnBvcz0wLHRoaXMuZnVsbD0hMSx0aGlzLmFjYz1uZXcgQXJyYXkodCl9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hY2M9bnVsbCx0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXSh0KX0sdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmZ1bGwmJih0PXRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LHRoaXMuYWNjW3RoaXMucG9zXSkpLHRoaXMuc3RvcmUoZSksdH0sdC5wcm90b3R5cGUuc3RvcmU9ZnVuY3Rpb24odCl7dGhpcy5hY2NbdGhpcy5wb3NdPXQsdGhpcy5wb3MrPTEsdGhpcy5wb3M9PT10aGlzLmFjYy5sZW5ndGgmJih0aGlzLnBvcz0wLHRoaXMuZnVsbD0hMCl9LHR9KCksJGU9dShiKFtdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHFlKHQsZSl9KSxXZSkpO2Z1bmN0aW9uIEhlKHQsZSl7Zm9yKHZhciBuPWUubGVuZ3RoLTE7bj49MCYmdChlW25dKTspbi09MTtyZXR1cm4gTHQoMCxuKzEsZSl9dmFyIEtlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMuZj10LHRoaXMucmV0YWluZWQ9W10sdGhpcy54Zj1lfXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucmV0YWluZWQ9bnVsbCx0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXSh0KX0sdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmYoZSk/dGhpcy5yZXRhaW4odCxlKTp0aGlzLmZsdXNoKHQsZSl9LHQucHJvdG90eXBlLmZsdXNoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9RCh0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0sdCx0aGlzLnJldGFpbmVkKSx0aGlzLnJldGFpbmVkPVtdLHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LGUpfSx0LnByb3RvdHlwZS5yZXRhaW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5yZXRhaW5lZC5wdXNoKGUpLHR9LHR9KCksR2U9dShiKFtdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IEtlKHQsZSl9KSxIZSkpLFhlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMueGY9ZSx0aGlzLnByZWQ9dCx0aGlzLmxhc3RWYWx1ZT12b2lkIDAsdGhpcy5zZWVuRmlyc3RWYWx1ZT0hMX1yZXR1cm4gdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXT1fLmluaXQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdPV8ucmVzdWx0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXt2YXIgbj0hMTtyZXR1cm4gdGhpcy5zZWVuRmlyc3RWYWx1ZT90aGlzLnByZWQodGhpcy5sYXN0VmFsdWUsZSkmJihuPSEwKTp0aGlzLnNlZW5GaXJzdFZhbHVlPSEwLHRoaXMubGFzdFZhbHVlPWUsbj90OnRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LGUpfSx0fSgpLFllPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IFhlKHQsZSl9KSxKZT1LdCgtMSksWmU9dShiKFtdLFllLGZ1bmN0aW9uKHQsZSl7dmFyIG49W10scj0xLGk9ZS5sZW5ndGg7aWYoMCE9PWkpZm9yKG5bMF09ZVswXTtyPGk7KXQoSmUobiksZVtyXSl8fChuW24ubGVuZ3RoXT1lW3JdKSxyKz0xO3JldHVybiBufSkpLFFlPXMoYihbXSxZZShpZSksWmUoaWUpKSksdG49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy54Zj1lLHRoaXMuZj10fXJldHVybiB0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9pbml0XCJdPV8uaW5pdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl09Xy5yZXN1bHQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe2lmKHRoaXMuZil7aWYodGhpcy5mKGUpKXJldHVybiB0O3RoaXMuZj1udWxsfXJldHVybiB0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCxlKX0sdH0oKSxlbj11KGIoW1wiZHJvcFdoaWxlXCJdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHRuKHQsZSl9KSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7bjxyJiZ0KGVbbl0pOyluKz0xO3JldHVybiBMdChuLDEvMCxlKX0pKSxubj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR8fGV9KSxybj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGJ0KHQpP2Z1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHxlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX06X3Qobm4pKHQsZSl9KSxhbj1zKGZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W1wiZmFudGFzeS1sYW5kL2VtcHR5XCJdP3RbXCJmYW50YXN5LWxhbmQvZW1wdHlcIl0oKTpudWxsIT10JiZudWxsIT10LmNvbnN0cnVjdG9yJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvbnN0cnVjdG9yW1wiZmFudGFzeS1sYW5kL2VtcHR5XCJdP3QuY29uc3RydWN0b3JbXCJmYW50YXN5LWxhbmQvZW1wdHlcIl0oKTpudWxsIT10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmVtcHR5P3QuZW1wdHkoKTpudWxsIT10JiZudWxsIT10LmNvbnN0cnVjdG9yJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNvbnN0cnVjdG9yLmVtcHR5P3QuY29uc3RydWN0b3IuZW1wdHkoKTp5KHQpP1tdOkkodCk/XCJcIjpoZSh0KT97fTp6KHQpP2Z1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKTp2b2lkIDB9KSxvbj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEZlKHQ+PTA/ZS5sZW5ndGgtdDowLGUpfSksc249dShmdW5jdGlvbih0LGUpe3JldHVybiBpZShvbih0Lmxlbmd0aCxlKSx0KX0pLHVuPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBpZSh0KGUpLHQobikpfSksY249bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIGllKGVbdF0sblt0XSl9KSxsbj11KGZ1bmN0aW9uIHQoZSxuKXt2YXIgcixpLGEsbz1uIGluc3RhbmNlb2YgQXJyYXk/W106e307Zm9yKGkgaW4gbilhPXR5cGVvZihyPWVbaV0pLG9baV09XCJmdW5jdGlvblwiPT09YT9yKG5baV0pOnImJlwib2JqZWN0XCI9PT1hP3QocixuW2ldKTpuW2ldO3JldHVybiBvfSksZm49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy54Zj1lLHRoaXMuZj10LHRoaXMuZm91bmQ9ITF9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5mb3VuZHx8KHQ9dGhpcy54ZltcIkBAdHJhbnNkdWNlci9zdGVwXCJdKHQsdm9pZCAwKSksdGhpcy54ZltcIkBAdHJhbnNkdWNlci9yZXN1bHRcIl0odCl9LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5mKGUpJiYodGhpcy5mb3VuZD0hMCx0PXcodGhpcy54ZltcIkBAdHJhbnNkdWNlci9zdGVwXCJdKHQsZSkpKSx0fSx0fSgpLGhuPXUoYihbXCJmaW5kXCJdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IGZuKHQsZSl9KSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7bjxyOyl7aWYodChlW25dKSlyZXR1cm4gZVtuXTtuKz0xfX0pKSxwbj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5mPXQsdGhpcy5pZHg9LTEsdGhpcy5mb3VuZD0hMX1yZXR1cm4gdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXT1fLmluaXQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmZvdW5kfHwodD10aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCwtMSkpLHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdKHQpfSx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuaWR4Kz0xLHRoaXMuZihlKSYmKHRoaXMuZm91bmQ9ITAsdD13KHRoaXMueGZbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXSh0LHRoaXMuaWR4KSkpLHR9LHR9KCksZG49dShiKFtdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHBuKHQsZSl9KSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7bjxyOyl7aWYodChlW25dKSlyZXR1cm4gbjtuKz0xfXJldHVybi0xfSkpLG1uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMueGY9ZSx0aGlzLmY9dH1yZXR1cm4gdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXT1fLmluaXQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXSh0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCx0aGlzLmxhc3QpKX0sdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmYoZSkmJih0aGlzLmxhc3Q9ZSksdH0sdH0oKSxnbj11KGIoW10sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgbW4odCxlKX0pLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPWUubGVuZ3RoLTE7bj49MDspe2lmKHQoZVtuXSkpcmV0dXJuIGVbbl07bi09MX19KSkseW49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy54Zj1lLHRoaXMuZj10LHRoaXMuaWR4PS0xLHRoaXMubGFzdElkeD0tMX1yZXR1cm4gdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvaW5pdFwiXT1fLmluaXQsdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCJdPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXSh0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCx0aGlzLmxhc3RJZHgpKX0sdC5wcm90b3R5cGVbXCJAQHRyYW5zZHVjZXIvc3RlcFwiXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmlkeCs9MSx0aGlzLmYoZSkmJih0aGlzLmxhc3RJZHg9dGhpcy5pZHgpLHR9LHR9KCksdm49dShiKFtdLHUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IHluKHQsZSl9KSxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1lLmxlbmd0aC0xO24+PTA7KXtpZih0KGVbbl0pKXJldHVybiBuO24tPTF9cmV0dXJuLTF9KSksYm49cyhOdCghMCkpLHduPXMoZnVuY3Rpb24odCl7cmV0dXJuIHAodC5sZW5ndGgsZnVuY3Rpb24oZSxuKXt2YXIgcj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7cmV0dXJuIHJbMF09bixyWzFdPWUsdC5hcHBseSh0aGlzLHIpfSl9KSxfbj11KEJ0KFwiZm9yRWFjaFwiLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPWUubGVuZ3RoLHI9MDtyPG47KXQoZVtyXSkscis9MTtyZXR1cm4gZX0pKSx4bj11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXEoZSkscj0wO3I8bi5sZW5ndGg7KXt2YXIgaT1uW3JdO3QoZVtpXSxpLGUpLHIrPTF9cmV0dXJuIGV9KSxFbj1zKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT17fSxuPTA7bjx0Lmxlbmd0aDspZVt0W25dWzBdXT10W25dWzFdLG4rPTE7cmV0dXJuIGV9KSxTbj11KEJ0KFwiZ3JvdXBCeVwiLE5lKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQmJih0PVtdKSx0LnB1c2goZSksdH0sbnVsbCkpKSxObj11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MCxpPWUubGVuZ3RoO3I8aTspe2Zvcih2YXIgYT1yKzE7YTxpJiZ0KGVbYS0xXSxlW2FdKTspYSs9MTtuLnB1c2goZS5zbGljZShyLGEpKSxyPWF9cmV0dXJuIG59KSxJbj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ+ZX0pLE9uPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gdD49ZX0pLGtuPXUoZnVuY3Rpb24odCxlKXtpZigwPT09dC5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBuPWUscj0wO3I8dC5sZW5ndGg7KXtpZighQih0W3JdLG4pKXJldHVybiExO249blt0W3JdXSxyKz0xfXJldHVybiEwfSksQW49dShmdW5jdGlvbih0LGUpe3JldHVybiBrbihbdF0sZSl9KSxDbj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQgaW4gZX0pLFBuPXUoZWUpLFRuPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBwKE1hdGgubWF4KHQubGVuZ3RoLGUubGVuZ3RoLG4ubGVuZ3RoKSxmdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSksUm49YygxKSxEbj11KG9lKSxNbj1OZShmdW5jdGlvbih0LGUpe3JldHVybiBlfSxudWxsKSxqbj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJmdW5jdGlvblwiIT10eXBlb2YgZS5pbmRleE9mfHx5KGUpP2FlKGUsdCwwKTplLmluZGV4T2YodCl9KSxCbj1MdCgwLC0xKSxMbj1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZmUoZnVuY3Rpb24oZSl7cmV0dXJuIHRlKHQsZSxuKX0sZSl9KSx6bj1tKGZ1bmN0aW9uKHQsZSxuKXt0PXQ8bi5sZW5ndGgmJnQ+PTA/dDpuLmxlbmd0aDt2YXIgcj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChuLDApO3JldHVybiByLnNwbGljZSh0LDAsZSkscn0pLEZuPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PXQ8bi5sZW5ndGgmJnQ+PTA/dDpuLmxlbmd0aCxbXS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobiwwLHQpLGUsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobix0KSl9KSxVbj11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuLHIsaT1uZXcgUGUsYT1bXSxvPTA7bzxlLmxlbmd0aDspbj10KHI9ZVtvXSksaS5hZGQobikmJmEucHVzaChyKSxvKz0xO3JldHVybiBhfSksVm49VW4oWXQpLFduPXUoZnVuY3Rpb24odCxlKXt2YXIgbixyO3JldHVybiB0Lmxlbmd0aD5lLmxlbmd0aD8obj10LHI9ZSk6KG49ZSxyPXQpLFZuKGZlKHduKG9lKShuKSxyKSl9KSxxbj11KEJ0KFwiaW50ZXJzcGVyc2VcIixmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1bXSxyPTAsaT1lLmxlbmd0aDtyPGk7KXI9PT1pLTE/bi5wdXNoKGVbcl0pOm4ucHVzaChlW3JdLHQpLHIrPTE7cmV0dXJuIG59KSk7dmFyICRuPVwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbjpmdW5jdGlvbih0KXtpZihudWxsPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY29udmVydCB1bmRlZmluZWQgb3IgbnVsbCB0byBvYmplY3RcIik7Zm9yKHZhciBlPU9iamVjdCh0KSxuPTEscj1hcmd1bWVudHMubGVuZ3RoO248cjspe3ZhciBpPWFyZ3VtZW50c1tuXTtpZihudWxsIT1pKWZvcih2YXIgYSBpbiBpKUIoYSxpKSYmKGVbYV09aVthXSk7bis9MX1yZXR1cm4gZX0sSG49dShmdW5jdGlvbih0LGUpe3ZhciBuPXt9O3JldHVybiBuW3RdPWUsbn0pLEtuPXtcIkBAdHJhbnNkdWNlci9pbml0XCI6QXJyYXksXCJAQHRyYW5zZHVjZXIvc3RlcFwiOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQucHVzaChlKSx0fSxcIkBAdHJhbnNkdWNlci9yZXN1bHRcIjpYdH0sR249e1wiQEB0cmFuc2R1Y2VyL2luaXRcIjpTdHJpbmcsXCJAQHRyYW5zZHVjZXIvc3RlcFwiOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0sXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCI6WHR9LFhuPXtcIkBAdHJhbnNkdWNlci9pbml0XCI6T2JqZWN0LFwiQEB0cmFuc2R1Y2VyL3N0ZXBcIjpmdW5jdGlvbih0LGUpe3JldHVybiAkbih0LE8oZSk/SG4oZVswXSxlWzFdKTplKX0sXCJAQHRyYW5zZHVjZXIvcmVzdWx0XCI6WHR9O3ZhciBZbj1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdih0KT9EKGUodCksdFtcIkBAdHJhbnNkdWNlci9pbml0XCJdKCksbik6RChlKGZ1bmN0aW9uKHQpe2lmKHYodCkpcmV0dXJuIHQ7aWYoTyh0KSlyZXR1cm4gS247aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIEduO2lmKFwib2JqZWN0XCI9PXR5cGVvZiB0KXJldHVybiBYbjt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY3JlYXRlIHRyYW5zZm9ybWVyIGZvciBcIit0KX0odCkpLFB0KHQsW10sW10sITEpLG4pfSksSm49cyhmdW5jdGlvbih0KXtmb3IodmFyIGU9cSh0KSxuPWUubGVuZ3RoLHI9MCxpPXt9O3I8bjspe3ZhciBhPWVbcl0sbz10W2FdLHM9QihvLGkpP2lbb106aVtvXT1bXTtzW3MubGVuZ3RoXT1hLHIrPTF9cmV0dXJuIGl9KSxabj1zKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1xKHQpLG49ZS5sZW5ndGgscj0wLGk9e307cjxuOyl7dmFyIGE9ZVtyXTtpW3RbYV1dPWEscis9MX1yZXR1cm4gaX0pLFFuPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gcCh0KzEsZnVuY3Rpb24oKXt2YXIgbj1hcmd1bWVudHNbdF07aWYobnVsbCE9biYmYnQobltlXSkpcmV0dXJuIG5bZV0uYXBwbHkobixBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCx0KSk7dGhyb3cgbmV3IFR5cGVFcnJvcih5ZShuKSsnIGRvZXMgbm90IGhhdmUgYSBtZXRob2QgbmFtZWQgXCInK2UrJ1wiJyl9KX0pLHRyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbCE9ZSYmZS5jb25zdHJ1Y3Rvcj09PXR8fGUgaW5zdGFuY2VvZiB0fSksZXI9cyhmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dCYmaWUodCxhbih0KSl9KSxucj1RbigxLFwiam9pblwiKSxycj1zKGZ1bmN0aW9uKHQpe3JldHVybiBFZShmdW5jdGlvbigpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCl9LHQpfSksaXI9cyhmdW5jdGlvbih0KXt2YXIgZSxuPVtdO2ZvcihlIGluIHQpbltuLmxlbmd0aF09ZTtyZXR1cm4gbn0pLGFyPXUoZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlLmxhc3RJbmRleE9mfHx5KGUpKXtmb3IodmFyIG49ZS5sZW5ndGgtMTtuPj0wOyl7aWYoaWUoZVtuXSx0KSlyZXR1cm4gbjtuLT0xfXJldHVybi0xfXJldHVybiBlLmxhc3RJbmRleE9mKHQpfSk7ZnVuY3Rpb24gb3IodCl7cmV0dXJuXCJbb2JqZWN0IE51bWJlcl1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX12YXIgc3I9cyhmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dCYmb3IodC5sZW5ndGgpP3QubGVuZ3RoOk5hTn0pLHVyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiAkKGZ1bmN0aW9uKHQpe3JldHVybiBlKHQscil9LG4odChyKSkpfX19KSxjcj1zKGZ1bmN0aW9uKHQpe3JldHVybiB1cihLdCh0KSxqZSh0KSl9KSxscj1zKGZ1bmN0aW9uKHQpe3JldHVybiB1cihIKHQpLGd0KHQpKX0pLGZyPXMoZnVuY3Rpb24odCl7cmV0dXJuIHVyKEsodCkscHQodCkpfSksaHI9dShmdW5jdGlvbih0LGUpe3JldHVybiB0PGV9KSxwcj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8PWV9KSxkcj1tKGZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9MCxpPW4ubGVuZ3RoLGE9W10sbz1bZV07cjxpOylvPXQob1swXSxuW3JdKSxhW3JdPW9bMV0scis9MTtyZXR1cm5bb1swXSxhXX0pLG1yPW0oZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1uLmxlbmd0aC0xLGk9W10sYT1bZV07cj49MDspYT10KGFbMF0sbltyXSksaVtyXT1hWzFdLHItPTE7cmV0dXJuW2FbMF0saV19KSxncj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEQoZnVuY3Rpb24obixyKXtyZXR1cm4gbltyXT10KGVbcl0scixlKSxufSx7fSxxKGUpKX0pLHlyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5tYXRjaCh0KXx8W119KSx2cj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGR0KHQpPyFkdChlKXx8ZTwxP05hTjoodCVlK2UpJWU6TmFOfSksYnI9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQobik+dChlKT9uOmV9KSx3cj1YKGMsMCksX3I9cyhmdW5jdGlvbih0KXtyZXR1cm4gd3IodCkvdC5sZW5ndGh9KSx4cj1zKGZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKDA9PT1lKXJldHVybiBOYU47dmFyIG49Mi1lJTIscj0oZS1uKS8yO3JldHVybiBfcihBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0LDApLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdDxlPy0xOnQ+ZT8xOjB9KS5zbGljZShyLHIrbikpfSksRXI9dShmdW5jdGlvbih0LGUpe3ZhciBuPXt9O3JldHVybiBmKGUubGVuZ3RoLGZ1bmN0aW9uKCl7dmFyIHI9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIEIocixuKXx8KG5bcl09ZS5hcHBseSh0aGlzLGFyZ3VtZW50cykpLG5bcl19KX0pLFNyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gJG4oe30sdCxlKX0pLE5yPXMoZnVuY3Rpb24odCl7cmV0dXJuICRuLmFwcGx5KG51bGwsW3t9XS5jb25jYXQodCkpfSksSXI9bShmdW5jdGlvbih0LGUsbil7dmFyIHIsaT17fTtmb3IociBpbiBlKUIocixlKSYmKGlbcl09QihyLG4pP3QocixlW3JdLG5bcl0pOmVbcl0pO2ZvcihyIGluIG4pQihyLG4pJiYhQihyLGkpJiYoaVtyXT1uW3JdKTtyZXR1cm4gaX0pLE9yPW0oZnVuY3Rpb24gdChlLG4scil7cmV0dXJuIElyKGZ1bmN0aW9uKG4scixpKXtyZXR1cm4gaGUocikmJmhlKGkpP3QoZSxyLGkpOmUobixyLGkpfSxuLHIpfSksa3I9dShmdW5jdGlvbih0LGUpe3JldHVybiBPcihmdW5jdGlvbih0LGUsbil7cmV0dXJuIGV9LHQsZSl9KSxBcj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9yKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbn0sdCxlKX0pLENyPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBPcihmdW5jdGlvbihlLG4scil7cmV0dXJuIHQobixyKX0sZSxuKX0pLFByPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gJG4oe30sZSx0KX0pLFRyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gJG4oe30sdCxlKX0pLFJyPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBJcihmdW5jdGlvbihlLG4scil7cmV0dXJuIHQobixyKX0sZSxuKX0pLERyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gZTx0P2U6dH0pLE1yPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiB0KG4pPHQoZSk/bjplfSksanI9dShmdW5jdGlvbih0LGUpe3JldHVybiB0JWV9KSxCcj1tKGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uLmxlbmd0aCxpPW4uc2xpY2UoKSxhPXQ8MD9yK3Q6dCxvPWU8MD9yK2U6ZSxzPWkuc3BsaWNlKGEsMSk7cmV0dXJuIGE8MHx8YT49bi5sZW5ndGh8fG88MHx8bz49bi5sZW5ndGg/bjpbXS5jb25jYXQoaS5zbGljZSgwLG8pKS5jb25jYXQocykuY29uY2F0KGkuc2xpY2UobyxuLmxlbmd0aCkpfSksTHI9dShmdW5jdGlvbih0LGUpe3JldHVybiB0KmV9KSx6cj1zKGZ1bmN0aW9uKHQpe3JldHVybi10fSksRnI9dShmdW5jdGlvbih0LGUpe3JldHVybiBFKGxlKHQpLGUpfSksVXI9cyhmdW5jdGlvbih0KXtyZXR1cm4gcCh0PDA/MTp0KzEsZnVuY3Rpb24oKXtyZXR1cm4gS3QodCxhcmd1bWVudHMpfSl9KSxWcj1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdChlKG4pKX0pO2Z1bmN0aW9uIFdyKHQpe3JldHVyblt0XX12YXIgcXI9cyhXciksJHI9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj17fSxyPXt9LGk9MCxhPXQubGVuZ3RoO2k8YTspclt0W2ldXT0xLGkrPTE7Zm9yKHZhciBvIGluIGUpci5oYXNPd25Qcm9wZXJ0eShvKXx8KG5bb109ZVtvXSk7cmV0dXJuIG59KSxIcj1zKGZ1bmN0aW9uKHQpe3ZhciBlLG49ITE7cmV0dXJuIGYodC5sZW5ndGgsZnVuY3Rpb24oKXtyZXR1cm4gbj9lOihuPSEwLGU9dC5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSl9KTtmdW5jdGlvbiBLcih0LGUpe2lmKG51bGw9PWV8fCFidChlLnRoZW4pKXRocm93IG5ldyBUeXBlRXJyb3IoXCJgXCIrdCtcImAgZXhwZWN0ZWQgYSBQcm9taXNlLCByZWNlaXZlZCBcIitnZShlLFtdKSl9dmFyIEdyPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gS3IoXCJvdGhlcndpc2VcIixlKSxlLnRoZW4obnVsbCx0KX0pLFhyPWZ1bmN0aW9uKHQpe3JldHVybnt2YWx1ZTp0LG1hcDpmdW5jdGlvbihlKXtyZXR1cm4gWHIoZSh0KSl9fX0sWXI9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQoZnVuY3Rpb24odCl7cmV0dXJuIFhyKGUodCkpfSkobikudmFsdWV9KSxKcj11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuW3QsZV19KTtmdW5jdGlvbiBacih0KXtyZXR1cm4gdShmdW5jdGlvbihlLG4pe3JldHVybiBmKE1hdGgubWF4KDAsZS5sZW5ndGgtbi5sZW5ndGgpLGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodGhpcyx0KG4sYXJndW1lbnRzKSl9KX0pfXZhciBRcj1acihsKSx0aT1acih3bihsKSksZWk9cnIoW2RlLG1lXSksbmk9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIGllKEgodCxuKSxlKX0pLHJpPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBrZSh0LEgoZSxuKSl9KSxpaT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZS5sZW5ndGg+MCYmdChIKGUsbikpfSksYWk9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj17fSxyPTA7cjx0Lmxlbmd0aDspdFtyXWluIGUmJihuW3Rbcl1dPWVbdFtyXV0pLHIrPTE7cmV0dXJuIG59KSxvaT11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXt9LHI9MCxpPXQubGVuZ3RoO3I8aTspe3ZhciBhPXRbcl07blthXT1lW2FdLHIrPTF9cmV0dXJuIG59KSxzaT11KGZ1bmN0aW9uKHQsZSl7dmFyIG49e307Zm9yKHZhciByIGluIGUpdChlW3JdLHIsZSkmJihuW3JdPWVbcl0pO3JldHVybiBufSk7ZnVuY3Rpb24gdWkoKXtpZigwPT09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJwaXBlSyByZXF1aXJlcyBhdCBsZWFzdCBvbmUgYXJndW1lbnRcIik7cmV0dXJuIFd0LmFwcGx5KHRoaXMsVXQoYXJndW1lbnRzKSl9dmFyIGNpPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbChbdF0sZSl9KSxsaT1YKExyLDEpLGZpPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gcChlLmxlbmd0aCxmdW5jdGlvbigpe2Zvcih2YXIgbj1bXSxyPTA7cjxlLmxlbmd0aDspbi5wdXNoKGVbcl0uY2FsbCh0aGlzLGFyZ3VtZW50c1tyXSkpLHIrPTE7cmV0dXJuIHQuYXBwbHkodGhpcyxuLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsZS5sZW5ndGgpKSl9KX0pLGhpPWZpKE4sW29pLFl0XSkscGk9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIGllKGUsblt0XSl9KSxkaT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdHIodCxuW2VdKX0pLG1pPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiByaSh0LFtlXSxuKX0pLGdpPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiB0KG5bZV0pfSkseWk9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10Lmxlbmd0aCxyPVtdLGk9MDtpPG47KXJbaV09ZVt0W2ldXSxpKz0xO3JldHVybiByfSksdmk9dShmdW5jdGlvbih0LGUpe2lmKCFvcih0KXx8IW9yKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb3RoIGFyZ3VtZW50cyB0byByYW5nZSBtdXN0IGJlIG51bWJlcnNcIik7Zm9yKHZhciBuPVtdLHI9dDtyPGU7KW4ucHVzaChyKSxyKz0xO3JldHVybiBufSksYmk9bShmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPW4ubGVuZ3RoLTE7cj49MDspZT10KG5bcl0sZSksci09MTtyZXR1cm4gZX0pLHdpPWgoNCxbXSxmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gRChmdW5jdGlvbihuLHIpe3JldHVybiB0KG4scik/ZShuLHIpOncobil9LG4scil9KSxfaT1zKHcpLHhpPXUoZnVuY3Rpb24odCxlKXt2YXIgbixyPU51bWJlcihlKSxpPTA7aWYocjwwfHxpc05hTihyKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm4gbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXJcIik7Zm9yKG49bmV3IEFycmF5KHIpO2k8cjspbltpXT10KGkpLGkrPTE7cmV0dXJuIG59KSxFaT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHhpKEoodCksZSl9KSxTaT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5yZXBsYWNlKHQsZSl9KSxOaT1tKGZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9MCxpPW4ubGVuZ3RoLGE9W2VdO3I8aTspZT10KGUsbltyXSksYVtyKzFdPWUscis9MTtyZXR1cm4gYX0pLElpPXUoZnVuY3Rpb24odCxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlLnNlcXVlbmNlP2Uuc2VxdWVuY2UodCk6YmkoZnVuY3Rpb24odCxlKXtyZXR1cm4gbnQoJChjaSx0KSxlKX0sdChbXSksZSl9KSxPaT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gWXIodCxKKGUpLG4pfSksa2k9dShmdW5jdGlvbih0LGUpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLDApLnNvcnQodCl9KSxBaT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUsMCkuc29ydChmdW5jdGlvbihlLG4pe3ZhciByPXQoZSksaT10KG4pO3JldHVybiByPGk/LTE6cj5pPzE6MH0pfSksQ2k9dShmdW5jdGlvbih0LGUpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlLDApLnNvcnQoZnVuY3Rpb24oZSxuKXtmb3IodmFyIHI9MCxpPTA7MD09PXImJmk8dC5sZW5ndGg7KXI9dFtpXShlLG4pLGkrPTE7cmV0dXJuIHJ9KX0pLFBpPVFuKDEsXCJzcGxpdFwiKSxUaT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuW0x0KDAsdCxlKSxMdCh0LHNyKGUpLGUpXX0pLFJpPXUoZnVuY3Rpb24odCxlKXtpZih0PD0wKXRocm93IG5ldyBFcnJvcihcIkZpcnN0IGFyZ3VtZW50IHRvIHNwbGl0RXZlcnkgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXJcIik7Zm9yKHZhciBuPVtdLHI9MDtyPGUubGVuZ3RoOyluLnB1c2goTHQocixyKz10LGUpKTtyZXR1cm4gbn0pLERpPXUoZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxyPWUubGVuZ3RoLGk9W107bjxyJiYhdChlW25dKTspaS5wdXNoKGVbbl0pLG4rPTE7cmV0dXJuW2ksQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSxuKV19KSxNaT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGllKFZlKHQubGVuZ3RoLGUpLHQpfSksamk9dShmdW5jdGlvbih0LGUpe3JldHVybiBOdW1iZXIodCktTnVtYmVyKGUpfSksQmk9dShmdW5jdGlvbih0LGUpe3JldHVybiB2ZShUZSh0LGUpLFRlKGUsdCkpfSksTGk9bShmdW5jdGlvbih0LGUsbil7cmV0dXJuIHZlKFJlKHQsZSxuKSxSZSh0LG4sZSkpfSksemk9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1lLmxlbmd0aC0xO24+PTAmJnQoZVtuXSk7KW4tPTE7cmV0dXJuIEx0KG4rMSwxLzAsZSl9KSxGaT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5mPXR9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1fLnJlc3VsdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZihlKT90aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCxlKTp3KHQpfSx0fSgpLFVpPXUoYihbXCJ0YWtlV2hpbGVcIl0sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgRmkodCxlKX0pLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAscj1lLmxlbmd0aDtuPHImJnQoZVtuXSk7KW4rPTE7cmV0dXJuIEx0KDAsbixlKX0pKSxWaT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnhmPWUsdGhpcy5mPXR9cmV0dXJuIHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL2luaXRcIl09Xy5pbml0LHQucHJvdG90eXBlW1wiQEB0cmFuc2R1Y2VyL3Jlc3VsdFwiXT1fLnJlc3VsdCx0LnByb3RvdHlwZVtcIkBAdHJhbnNkdWNlci9zdGVwXCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZihlKSx0aGlzLnhmW1wiQEB0cmFuc2R1Y2VyL3N0ZXBcIl0odCxlKX0sdH0oKSxXaT11KGIoW10sdShmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgVmkodCxlKX0pLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQoZSksZX0pKTt2YXIgcWk9dShmdW5jdGlvbih0LGUpe2lmKG49dCxcIltvYmplY3QgUmVnRXhwXVwiIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoXCLigJh0ZXN04oCZIHJlcXVpcmVzIGEgdmFsdWUgb2YgdHlwZSBSZWdFeHAgYXMgaXRzIGZpcnN0IGFyZ3VtZW50OyByZWNlaXZlZCBcIit5ZSh0KSk7dmFyIG47cmV0dXJuIEF0KHQpLnRlc3QoZSl9KSwkaT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIEtyKFwidGhlblwiLGUpLGUudGhlbih0KX0pLEhpPVFuKDAsXCJ0b0xvd2VyQ2FzZVwiKSxLaT1zKGZ1bmN0aW9uKHQpe3ZhciBlPVtdO2Zvcih2YXIgbiBpbiB0KUIobix0KSYmKGVbZS5sZW5ndGhdPVtuLHRbbl1dKTtyZXR1cm4gZX0pLEdpPXMoZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpZVtlLmxlbmd0aF09W24sdFtuXV07cmV0dXJuIGV9KSxYaT1RbigwLFwidG9VcHBlckNhc2VcIiksWWk9cCg0LGZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBEKHQoXCJmdW5jdGlvblwiPT10eXBlb2YgZT9BKGUpOmUpLG4scil9KSxKaT1zKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49W107ZTx0Lmxlbmd0aDspe2Zvcih2YXIgcj10W2VdLGk9MDtpPHIubGVuZ3RoOyl2b2lkIDA9PT1uW2ldJiYobltpXT1bXSksbltpXS5wdXNoKHJbaV0pLGkrPTE7ZSs9MX1yZXR1cm4gbn0pLFppPW0oZnVuY3Rpb24odCxlLG4pe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG5bXCJmYW50YXN5LWxhbmQvdHJhdmVyc2VcIl0/bltcImZhbnRhc3ktbGFuZC90cmF2ZXJzZVwiXShlLHQpOklpKHQsJChlLG4pKX0pLFFpPVwiXFx0XFxuXFx2XFxmXFxyIMKg4ZqA4aCO4oCA4oCB4oCC4oCD4oCE4oCF4oCG4oCH4oCI4oCJ4oCK4oCv4oGf44CAXFx1MjAyOFxcdTIwMjlcXHVmZWZmXCIsdGE9cyhcImZ1bmN0aW9uXCI9PXR5cGVvZiBTdHJpbmcucHJvdG90eXBlLnRyaW0mJiFRaS50cmltKCkmJlwi4oCLXCIudHJpbSgpP2Z1bmN0aW9uKHQpe3JldHVybiB0LnRyaW0oKX06ZnVuY3Rpb24odCl7dmFyIGU9bmV3IFJlZ0V4cChcIl5bXCIrUWkrXCJdW1wiK1FpK1wiXSpcIiksbj1uZXcgUmVnRXhwKFwiW1wiK1FpK1wiXVtcIitRaStcIl0qJFwiKTtyZXR1cm4gdC5yZXBsYWNlKGUsXCJcIikucmVwbGFjZShuLFwiXCIpfSksZWE9dShmdW5jdGlvbih0LGUpe3JldHVybiBmKHQubGVuZ3RoLGZ1bmN0aW9uKCl7dHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaCh0KXtyZXR1cm4gZS5hcHBseSh0aGlzLGwoW3RdLGFyZ3VtZW50cykpfX0pfSksbmE9cyhmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfX0pLHJhPXMoZnVuY3Rpb24odCl7cmV0dXJuIHl0KDEsdCl9KSxpYT11KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHAodCxmdW5jdGlvbigpe2Zvcih2YXIgbixyPTEsaT1lLGE9MDtyPD10JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBpOyluPXI9PT10P2FyZ3VtZW50cy5sZW5ndGg6YStpLmxlbmd0aCxpPWkuYXBwbHkodGhpcyxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsYSxuKSkscis9MSxhPW47cmV0dXJuIGl9KX0pLGFhPXUoZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dChlKSxyPVtdO24mJm4ubGVuZ3RoOylyW3IubGVuZ3RoXT1uWzBdLG49dChuWzFdKTtyZXR1cm4gcn0pLG9hPXUoVnQoVm4sbCkpLHNhPXUoZnVuY3Rpb24odCxlKXtmb3IodmFyIG4scj0wLGk9ZS5sZW5ndGgsYT1bXTtyPGk7KXRlKHQsbj1lW3JdLGEpfHwoYVthLmxlbmd0aF09bikscis9MTtyZXR1cm4gYX0pLHVhPW0oZnVuY3Rpb24odCxlLG4pe3JldHVybiBzYSh0LGwoZSxuKSl9KSxjYT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdChuKT9uOmUobil9KSxsYT1PdChYdCksZmE9bShmdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPW47IXQocik7KXI9ZShyKTtyZXR1cm4gcn0pLGhhPXMoZnVuY3Rpb24odCl7dmFyIGUsbj1bXTtmb3IoZSBpbiB0KW5bbi5sZW5ndGhdPXRbZV07cmV0dXJuIG59KSxwYT1mdW5jdGlvbih0KXtyZXR1cm57dmFsdWU6dCxcImZhbnRhc3ktbGFuZC9tYXBcIjpmdW5jdGlvbigpe3JldHVybiB0aGlzfX19LGRhPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gdChwYSkoZSkudmFsdWV9KSxtYT1tKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdChuKT9lKG4pOm59KSxnYT11KGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIHQpaWYoQihuLHQpJiYhdFtuXShlW25dKSlyZXR1cm4hMTtyZXR1cm4hMH0pLHlhPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gZ2EoJChpZSx0KSxlKX0pLHZhPXUoZnVuY3Rpb24odCxlKXtyZXR1cm4gbWUod24ob2UpKHQpLGUpfSksYmE9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbixyPTAsaT10Lmxlbmd0aCxhPWUubGVuZ3RoLG89W107cjxpOyl7Zm9yKG49MDtuPGE7KW9bby5sZW5ndGhdPVt0W3JdLGVbbl1dLG4rPTE7cis9MX1yZXR1cm4gb30pLHdhPXUoZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10scj0wLGk9TWF0aC5taW4odC5sZW5ndGgsZS5sZW5ndGgpO3I8aTspbltyXT1bdFtyXSxlW3JdXSxyKz0xO3JldHVybiBufSksX2E9dShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLHI9TWF0aC5taW4odC5sZW5ndGgsZS5sZW5ndGgpLGk9e307bjxyOylpW3Rbbl1dPWVbbl0sbis9MTtyZXR1cm4gaX0pLHhhPW0oZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1bXSxpPTAsYT1NYXRoLm1pbihlLmxlbmd0aCxuLmxlbmd0aCk7aTxhOylyW2ldPXQoZVtpXSxuW2ldKSxpKz0xO3JldHVybiByfSksRWE9cyhmdW5jdGlvbih0KXtyZXR1cm4gcCh0Lmxlbmd0aCxmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cztyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseSh0aGlzLGUpfX0pfSk7bi5kKGUsXCJGXCIsZnVuY3Rpb24oKXtyZXR1cm4gcn0pLG4uZChlLFwiVFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGl9KSxuLmQoZSxcIl9fXCIsZnVuY3Rpb24oKXtyZXR1cm4gYX0pLG4uZChlLFwiYWRkXCIsZnVuY3Rpb24oKXtyZXR1cm4gY30pLG4uZChlLFwiYWRkSW5kZXhcIixmdW5jdGlvbigpe3JldHVybiBkfSksbi5kKGUsXCJhZGp1c3RcIixmdW5jdGlvbigpe3JldHVybiBnfSksbi5kKGUsXCJhbGxcIixmdW5jdGlvbigpe3JldHVybiBFfSksbi5kKGUsXCJhbGxQYXNzXCIsZnVuY3Rpb24oKXtyZXR1cm4gWX0pLG4uZChlLFwiYWx3YXlzXCIsZnVuY3Rpb24oKXtyZXR1cm4gSn0pLG4uZChlLFwiYW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gWn0pLG4uZChlLFwiYW55XCIsZnVuY3Rpb24oKXtyZXR1cm4gdHR9KSxuLmQoZSxcImFueVBhc3NcIixmdW5jdGlvbigpe3JldHVybiBldH0pLG4uZChlLFwiYXBcIixmdW5jdGlvbigpe3JldHVybiBudH0pLG4uZChlLFwiYXBlcnR1cmVcIixmdW5jdGlvbigpe3JldHVybiBhdH0pLG4uZChlLFwiYXBwZW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gb3R9KSxuLmQoZSxcImFwcGx5XCIsZnVuY3Rpb24oKXtyZXR1cm4gc3R9KSxuLmQoZSxcImFwcGx5U3BlY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGx0fSksbi5kKGUsXCJhcHBseVRvXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnR9KSxuLmQoZSxcImFzY2VuZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGh0fSksbi5kKGUsXCJhc3NvY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHB0fSksbi5kKGUsXCJhc3NvY1BhdGhcIixmdW5jdGlvbigpe3JldHVybiBndH0pLG4uZChlLFwiYmluYXJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4gdnR9KSxuLmQoZSxcImJpbmRcIixmdW5jdGlvbigpe3JldHVybiBDfSksbi5kKGUsXCJib3RoXCIsZnVuY3Rpb24oKXtyZXR1cm4geHR9KSxuLmQoZSxcImNhbGxcIixmdW5jdGlvbigpe3JldHVybiBTdH0pLG4uZChlLFwiY2hhaW5cIixmdW5jdGlvbigpe3JldHVybiBPdH0pLG4uZChlLFwiY2xhbXBcIixmdW5jdGlvbigpe3JldHVybiBrdH0pLG4uZChlLFwiY2xvbmVcIixmdW5jdGlvbigpe3JldHVybiBUdH0pLG4uZChlLFwiY29tcGFyYXRvclwiLGZ1bmN0aW9uKCl7cmV0dXJuIFJ0fSksbi5kKGUsXCJjb21wbGVtZW50XCIsZnVuY3Rpb24oKXtyZXR1cm4gTXR9KSxuLmQoZSxcImNvbXBvc2VcIixmdW5jdGlvbigpe3JldHVybiBWdH0pLG4uZChlLFwiY29tcG9zZUtcIixmdW5jdGlvbigpe3JldHVybiBXdH0pLG4uZChlLFwiY29tcG9zZVBcIixmdW5jdGlvbigpe3JldHVybiBIdH0pLG4uZChlLFwiY29tcG9zZVdpdGhcIixmdW5jdGlvbigpe3JldHVybiBadH0pLG4uZChlLFwiY29uY2F0XCIsZnVuY3Rpb24oKXtyZXR1cm4gdmV9KSxuLmQoZSxcImNvbmRcIixmdW5jdGlvbigpe3JldHVybiBiZX0pLG4uZChlLFwiY29uc3RydWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gX2V9KSxuLmQoZSxcImNvbnN0cnVjdE5cIixmdW5jdGlvbigpe3JldHVybiB3ZX0pLG4uZChlLFwiY29udGFpbnNcIixmdW5jdGlvbigpe3JldHVybiB4ZX0pLG4uZChlLFwiY29udmVyZ2VcIixmdW5jdGlvbigpe3JldHVybiBFZX0pLG4uZChlLFwiY291bnRCeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEllfSksbi5kKGUsXCJjdXJyeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEV0fSksbi5kKGUsXCJjdXJyeU5cIixmdW5jdGlvbigpe3JldHVybiBwfSksbi5kKGUsXCJkZWNcIixmdW5jdGlvbigpe3JldHVybiBPZX0pLG4uZChlLFwiZGVmYXVsdFRvXCIsZnVuY3Rpb24oKXtyZXR1cm4ga2V9KSxuLmQoZSxcImRlc2NlbmRcIixmdW5jdGlvbigpe3JldHVybiBBZX0pLG4uZChlLFwiZGlmZmVyZW5jZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFRlfSksbi5kKGUsXCJkaWZmZXJlbmNlV2l0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFJlfSksbi5kKGUsXCJkaXNzb2NcIixmdW5jdGlvbigpe3JldHVybiBEZX0pLG4uZChlLFwiZGlzc29jUGF0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEJlfSksbi5kKGUsXCJkaXZpZGVcIixmdW5jdGlvbigpe3JldHVybiBMZX0pLG4uZChlLFwiZHJvcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEZlfSksbi5kKGUsXCJkcm9wTGFzdFwiLGZ1bmN0aW9uKCl7cmV0dXJuICRlfSksbi5kKGUsXCJkcm9wTGFzdFdoaWxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gR2V9KSxuLmQoZSxcImRyb3BSZXBlYXRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gUWV9KSxuLmQoZSxcImRyb3BSZXBlYXRzV2l0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFplfSksbi5kKGUsXCJkcm9wV2hpbGVcIixmdW5jdGlvbigpe3JldHVybiBlbn0pLG4uZChlLFwiZWl0aGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gcm59KSxuLmQoZSxcImVtcHR5XCIsZnVuY3Rpb24oKXtyZXR1cm4gYW59KSxuLmQoZSxcImVuZHNXaXRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gc259KSxuLmQoZSxcImVxQnlcIixmdW5jdGlvbigpe3JldHVybiB1bn0pLG4uZChlLFwiZXFQcm9wc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGNufSksbi5kKGUsXCJlcXVhbHNcIixmdW5jdGlvbigpe3JldHVybiBpZX0pLG4uZChlLFwiZXZvbHZlXCIsZnVuY3Rpb24oKXtyZXR1cm4gbG59KSxuLmQoZSxcImZpbHRlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIGRlfSksbi5kKGUsXCJmaW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gaG59KSxuLmQoZSxcImZpbmRJbmRleFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGRufSksbi5kKGUsXCJmaW5kTGFzdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGdufSksbi5kKGUsXCJmaW5kTGFzdEluZGV4XCIsZnVuY3Rpb24oKXtyZXR1cm4gdm59KSxuLmQoZSxcImZsYXR0ZW5cIixmdW5jdGlvbigpe3JldHVybiBibn0pLG4uZChlLFwiZmxpcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHdufSksbi5kKGUsXCJmb3JFYWNoXCIsZnVuY3Rpb24oKXtyZXR1cm4gX259KSxuLmQoZSxcImZvckVhY2hPYmpJbmRleGVkXCIsZnVuY3Rpb24oKXtyZXR1cm4geG59KSxuLmQoZSxcImZyb21QYWlyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEVufSksbi5kKGUsXCJncm91cEJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4gU259KSxuLmQoZSxcImdyb3VwV2l0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIE5ufSksbi5kKGUsXCJndFwiLGZ1bmN0aW9uKCl7cmV0dXJuIElufSksbi5kKGUsXCJndGVcIixmdW5jdGlvbigpe3JldHVybiBPbn0pLG4uZChlLFwiaGFzXCIsZnVuY3Rpb24oKXtyZXR1cm4gQW59KSxuLmQoZSxcImhhc0luXCIsZnVuY3Rpb24oKXtyZXR1cm4gQ259KSxuLmQoZSxcImhhc1BhdGhcIixmdW5jdGlvbigpe3JldHVybiBrbn0pLG4uZChlLFwiaGVhZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEd0fSksbi5kKGUsXCJpZGVudGljYWxcIixmdW5jdGlvbigpe3JldHVybiBQbn0pLG4uZChlLFwiaWRlbnRpdHlcIixmdW5jdGlvbigpe3JldHVybiBZdH0pLG4uZChlLFwiaWZFbHNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gVG59KSxuLmQoZSxcImluY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFJufSksbi5kKGUsXCJpbmNsdWRlc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIERufSksbi5kKGUsXCJpbmRleEJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4gTW59KSxuLmQoZSxcImluZGV4T2ZcIixmdW5jdGlvbigpe3JldHVybiBqbn0pLG4uZChlLFwiaW5pdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEJufSksbi5kKGUsXCJpbm5lckpvaW5cIixmdW5jdGlvbigpe3JldHVybiBMbn0pLG4uZChlLFwiaW5zZXJ0XCIsZnVuY3Rpb24oKXtyZXR1cm4gem59KSxuLmQoZSxcImluc2VydEFsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEZufSksbi5kKGUsXCJpbnRlcnNlY3Rpb25cIixmdW5jdGlvbigpe3JldHVybiBXbn0pLG4uZChlLFwiaW50ZXJzcGVyc2VcIixmdW5jdGlvbigpe3JldHVybiBxbn0pLG4uZChlLFwiaW50b1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFlufSksbi5kKGUsXCJpbnZlcnRcIixmdW5jdGlvbigpe3JldHVybiBKbn0pLG4uZChlLFwiaW52ZXJ0T2JqXCIsZnVuY3Rpb24oKXtyZXR1cm4gWm59KSxuLmQoZSxcImludm9rZXJcIixmdW5jdGlvbigpe3JldHVybiBRbn0pLG4uZChlLFwiaXNcIixmdW5jdGlvbigpe3JldHVybiB0cn0pLG4uZChlLFwiaXNFbXB0eVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGVyfSksbi5kKGUsXCJpc05pbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIG10fSksbi5kKGUsXCJqb2luXCIsZnVuY3Rpb24oKXtyZXR1cm4gbnJ9KSxuLmQoZSxcImp1eHRcIixmdW5jdGlvbigpe3JldHVybiBycn0pLG4uZChlLFwia2V5c1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHF9KSxuLmQoZSxcImtleXNJblwiLGZ1bmN0aW9uKCl7cmV0dXJuIGlyfSksbi5kKGUsXCJsYXN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gSmV9KSxuLmQoZSxcImxhc3RJbmRleE9mXCIsZnVuY3Rpb24oKXtyZXR1cm4gYXJ9KSxuLmQoZSxcImxlbmd0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHNyfSksbi5kKGUsXCJsZW5zXCIsZnVuY3Rpb24oKXtyZXR1cm4gdXJ9KSxuLmQoZSxcImxlbnNJbmRleFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGNyfSksbi5kKGUsXCJsZW5zUGF0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGxyfSksbi5kKGUsXCJsZW5zUHJvcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGZyfSksbi5kKGUsXCJsaWZ0XCIsZnVuY3Rpb24oKXtyZXR1cm4gX3R9KSxuLmQoZSxcImxpZnROXCIsZnVuY3Rpb24oKXtyZXR1cm4gd3R9KSxuLmQoZSxcImx0XCIsZnVuY3Rpb24oKXtyZXR1cm4gaHJ9KSxuLmQoZSxcImx0ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHByfSksbi5kKGUsXCJtYXBcIixmdW5jdGlvbigpe3JldHVybiAkfSksbi5kKGUsXCJtYXBBY2N1bVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGRyfSksbi5kKGUsXCJtYXBBY2N1bVJpZ2h0XCIsZnVuY3Rpb24oKXtyZXR1cm4gbXJ9KSxuLmQoZSxcIm1hcE9iakluZGV4ZWRcIixmdW5jdGlvbigpe3JldHVybiBncn0pLG4uZChlLFwibWF0Y2hcIixmdW5jdGlvbigpe3JldHVybiB5cn0pLG4uZChlLFwibWF0aE1vZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZyfSksbi5kKGUsXCJtYXhcIixmdW5jdGlvbigpe3JldHVybiBTfSksbi5kKGUsXCJtYXhCeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJyfSksbi5kKGUsXCJtZWFuXCIsZnVuY3Rpb24oKXtyZXR1cm4gX3J9KSxuLmQoZSxcIm1lZGlhblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHhyfSksbi5kKGUsXCJtZW1vaXplV2l0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEVyfSksbi5kKGUsXCJtZXJnZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFNyfSksbi5kKGUsXCJtZXJnZUFsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIE5yfSksbi5kKGUsXCJtZXJnZURlZXBMZWZ0XCIsZnVuY3Rpb24oKXtyZXR1cm4ga3J9KSxuLmQoZSxcIm1lcmdlRGVlcFJpZ2h0XCIsZnVuY3Rpb24oKXtyZXR1cm4gQXJ9KSxuLmQoZSxcIm1lcmdlRGVlcFdpdGhcIixmdW5jdGlvbigpe3JldHVybiBDcn0pLG4uZChlLFwibWVyZ2VEZWVwV2l0aEtleVwiLGZ1bmN0aW9uKCl7cmV0dXJuIE9yfSksbi5kKGUsXCJtZXJnZUxlZnRcIixmdW5jdGlvbigpe3JldHVybiBQcn0pLG4uZChlLFwibWVyZ2VSaWdodFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFRyfSksbi5kKGUsXCJtZXJnZVdpdGhcIixmdW5jdGlvbigpe3JldHVybiBScn0pLG4uZChlLFwibWVyZ2VXaXRoS2V5XCIsZnVuY3Rpb24oKXtyZXR1cm4gSXJ9KSxuLmQoZSxcIm1pblwiLGZ1bmN0aW9uKCl7cmV0dXJuIERyfSksbi5kKGUsXCJtaW5CeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIE1yfSksbi5kKGUsXCJtb2R1bG9cIixmdW5jdGlvbigpe3JldHVybiBqcn0pLG4uZChlLFwibW92ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEJyfSksbi5kKGUsXCJtdWx0aXBseVwiLGZ1bmN0aW9uKCl7cmV0dXJuIExyfSksbi5kKGUsXCJuQXJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4geXR9KSxuLmQoZSxcIm5lZ2F0ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHpyfSksbi5kKGUsXCJub25lXCIsZnVuY3Rpb24oKXtyZXR1cm4gRnJ9KSxuLmQoZSxcIm5vdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIER0fSksbi5kKGUsXCJudGhcIixmdW5jdGlvbigpe3JldHVybiBLdH0pLG4uZChlLFwibnRoQXJnXCIsZnVuY3Rpb24oKXtyZXR1cm4gVXJ9KSxuLmQoZSxcIm9cIixmdW5jdGlvbigpe3JldHVybiBWcn0pLG4uZChlLFwib2JqT2ZcIixmdW5jdGlvbigpe3JldHVybiBIbn0pLG4uZChlLFwib2ZcIixmdW5jdGlvbigpe3JldHVybiBxcn0pLG4uZChlLFwib21pdFwiLGZ1bmN0aW9uKCl7cmV0dXJuICRyfSksbi5kKGUsXCJvbmNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gSHJ9KSxuLmQoZSxcIm9yXCIsZnVuY3Rpb24oKXtyZXR1cm4gbm59KSxuLmQoZSxcIm90aGVyd2lzZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEdyfSksbi5kKGUsXCJvdmVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gWXJ9KSxuLmQoZSxcInBhaXJcIixmdW5jdGlvbigpe3JldHVybiBKcn0pLG4uZChlLFwicGFydGlhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFFyfSksbi5kKGUsXCJwYXJ0aWFsUmlnaHRcIixmdW5jdGlvbigpe3JldHVybiB0aX0pLG4uZChlLFwicGFydGl0aW9uXCIsZnVuY3Rpb24oKXtyZXR1cm4gZWl9KSxuLmQoZSxcInBhdGhcIixmdW5jdGlvbigpe3JldHVybiBIfSksbi5kKGUsXCJwYXRoRXFcIixmdW5jdGlvbigpe3JldHVybiBuaX0pLG4uZChlLFwicGF0aE9yXCIsZnVuY3Rpb24oKXtyZXR1cm4gcml9KSxuLmQoZSxcInBhdGhTYXRpc2ZpZXNcIixmdW5jdGlvbigpe3JldHVybiBpaX0pLG4uZChlLFwicGlja1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGFpfSksbi5kKGUsXCJwaWNrQWxsXCIsZnVuY3Rpb24oKXtyZXR1cm4gb2l9KSxuLmQoZSxcInBpY2tCeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHNpfSksbi5kKGUsXCJwaXBlXCIsZnVuY3Rpb24oKXtyZXR1cm4gRnR9KSxuLmQoZSxcInBpcGVLXCIsZnVuY3Rpb24oKXtyZXR1cm4gdWl9KSxuLmQoZSxcInBpcGVQXCIsZnVuY3Rpb24oKXtyZXR1cm4gJHR9KSxuLmQoZSxcInBpcGVXaXRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gSnR9KSxuLmQoZSxcInBsdWNrXCIsZnVuY3Rpb24oKXtyZXR1cm4gR30pLG4uZChlLFwicHJlcGVuZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGNpfSksbi5kKGUsXCJwcm9kdWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gbGl9KSxuLmQoZSxcInByb2plY3RcIixmdW5jdGlvbigpe3JldHVybiBoaX0pLG4uZChlLFwicHJvcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEt9KSxuLmQoZSxcInByb3BFcVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHBpfSksbi5kKGUsXCJwcm9wSXNcIixmdW5jdGlvbigpe3JldHVybiBkaX0pLG4uZChlLFwicHJvcE9yXCIsZnVuY3Rpb24oKXtyZXR1cm4gbWl9KSxuLmQoZSxcInByb3BTYXRpc2ZpZXNcIixmdW5jdGlvbigpe3JldHVybiBnaX0pLG4uZChlLFwicHJvcHNcIixmdW5jdGlvbigpe3JldHVybiB5aX0pLG4uZChlLFwicmFuZ2VcIixmdW5jdGlvbigpe3JldHVybiB2aX0pLG4uZChlLFwicmVkdWNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gWH0pLG4uZChlLFwicmVkdWNlQnlcIixmdW5jdGlvbigpe3JldHVybiBOZX0pLG4uZChlLFwicmVkdWNlUmlnaHRcIixmdW5jdGlvbigpe3JldHVybiBiaX0pLG4uZChlLFwicmVkdWNlV2hpbGVcIixmdW5jdGlvbigpe3JldHVybiB3aX0pLG4uZChlLFwicmVkdWNlZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIF9pfSksbi5kKGUsXCJyZWplY3RcIixmdW5jdGlvbigpe3JldHVybiBtZX0pLG4uZChlLFwicmVtb3ZlXCIsZnVuY3Rpb24oKXtyZXR1cm4gTWV9KSxuLmQoZSxcInJlcGVhdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIEVpfSksbi5kKGUsXCJyZXBsYWNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gU2l9KSxuLmQoZSxcInJldmVyc2VcIixmdW5jdGlvbigpe3JldHVybiBVdH0pLG4uZChlLFwic2NhblwiLGZ1bmN0aW9uKCl7cmV0dXJuIE5pfSksbi5kKGUsXCJzZXF1ZW5jZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIElpfSksbi5kKGUsXCJzZXRcIixmdW5jdGlvbigpe3JldHVybiBPaX0pLG4uZChlLFwic2xpY2VcIixmdW5jdGlvbigpe3JldHVybiBMdH0pLG4uZChlLFwic29ydFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGtpfSksbi5kKGUsXCJzb3J0QnlcIixmdW5jdGlvbigpe3JldHVybiBBaX0pLG4uZChlLFwic29ydFdpdGhcIixmdW5jdGlvbigpe3JldHVybiBDaX0pLG4uZChlLFwic3BsaXRcIixmdW5jdGlvbigpe3JldHVybiBQaX0pLG4uZChlLFwic3BsaXRBdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFRpfSksbi5kKGUsXCJzcGxpdEV2ZXJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4gUml9KSxuLmQoZSxcInNwbGl0V2hlblwiLGZ1bmN0aW9uKCl7cmV0dXJuIERpfSksbi5kKGUsXCJzdGFydHNXaXRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gTWl9KSxuLmQoZSxcInN1YnRyYWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gaml9KSxuLmQoZSxcInN1bVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHdyfSksbi5kKGUsXCJzeW1tZXRyaWNEaWZmZXJlbmNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gQml9KSxuLmQoZSxcInN5bW1ldHJpY0RpZmZlcmVuY2VXaXRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gTGl9KSxuLmQoZSxcInRhaWxcIixmdW5jdGlvbigpe3JldHVybiB6dH0pLG4uZChlLFwidGFrZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFZlfSksbi5kKGUsXCJ0YWtlTGFzdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIG9ufSksbi5kKGUsXCJ0YWtlTGFzdFdoaWxlXCIsZnVuY3Rpb24oKXtyZXR1cm4geml9KSxuLmQoZSxcInRha2VXaGlsZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFVpfSksbi5kKGUsXCJ0YXBcIixmdW5jdGlvbigpe3JldHVybiBXaX0pLG4uZChlLFwidGVzdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHFpfSksbi5kKGUsXCJ0aGVuXCIsZnVuY3Rpb24oKXtyZXR1cm4gJGl9KSxuLmQoZSxcInRpbWVzXCIsZnVuY3Rpb24oKXtyZXR1cm4geGl9KSxuLmQoZSxcInRvTG93ZXJcIixmdW5jdGlvbigpe3JldHVybiBIaX0pLG4uZChlLFwidG9QYWlyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIEtpfSksbi5kKGUsXCJ0b1BhaXJzSW5cIixmdW5jdGlvbigpe3JldHVybiBHaX0pLG4uZChlLFwidG9TdHJpbmdcIixmdW5jdGlvbigpe3JldHVybiB5ZX0pLG4uZChlLFwidG9VcHBlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIFhpfSksbi5kKGUsXCJ0cmFuc2R1Y2VcIixmdW5jdGlvbigpe3JldHVybiBZaX0pLG4uZChlLFwidHJhbnNwb3NlXCIsZnVuY3Rpb24oKXtyZXR1cm4gSml9KSxuLmQoZSxcInRyYXZlcnNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gWml9KSxuLmQoZSxcInRyaW1cIixmdW5jdGlvbigpe3JldHVybiB0YX0pLG4uZChlLFwidHJ5Q2F0Y2hcIixmdW5jdGlvbigpe3JldHVybiBlYX0pLG4uZChlLFwidHlwZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIEN0fSksbi5kKGUsXCJ1bmFwcGx5XCIsZnVuY3Rpb24oKXtyZXR1cm4gbmF9KSxuLmQoZSxcInVuYXJ5XCIsZnVuY3Rpb24oKXtyZXR1cm4gcmF9KSxuLmQoZSxcInVuY3VycnlOXCIsZnVuY3Rpb24oKXtyZXR1cm4gaWF9KSxuLmQoZSxcInVuZm9sZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGFhfSksbi5kKGUsXCJ1bmlvblwiLGZ1bmN0aW9uKCl7cmV0dXJuIG9hfSksbi5kKGUsXCJ1bmlvbldpdGhcIixmdW5jdGlvbigpe3JldHVybiB1YX0pLG4uZChlLFwidW5pcVwiLGZ1bmN0aW9uKCl7cmV0dXJuIFZufSksbi5kKGUsXCJ1bmlxQnlcIixmdW5jdGlvbigpe3JldHVybiBVbn0pLG4uZChlLFwidW5pcVdpdGhcIixmdW5jdGlvbigpe3JldHVybiBzYX0pLG4uZChlLFwidW5sZXNzXCIsZnVuY3Rpb24oKXtyZXR1cm4gY2F9KSxuLmQoZSxcInVubmVzdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGxhfSksbi5kKGUsXCJ1bnRpbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGZhfSksbi5kKGUsXCJ1cGRhdGVcIixmdW5jdGlvbigpe3JldHVybiBqZX0pLG4uZChlLFwidXNlV2l0aFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGZpfSksbi5kKGUsXCJ2YWx1ZXNcIixmdW5jdGlvbigpe3JldHVybiB1dH0pLG4uZChlLFwidmFsdWVzSW5cIixmdW5jdGlvbigpe3JldHVybiBoYX0pLG4uZChlLFwidmlld1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGRhfSksbi5kKGUsXCJ3aGVuXCIsZnVuY3Rpb24oKXtyZXR1cm4gbWF9KSxuLmQoZSxcIndoZXJlXCIsZnVuY3Rpb24oKXtyZXR1cm4gZ2F9KSxuLmQoZSxcIndoZXJlRXFcIixmdW5jdGlvbigpe3JldHVybiB5YX0pLG4uZChlLFwid2l0aG91dFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHZhfSksbi5kKGUsXCJ4cHJvZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJhfSksbi5kKGUsXCJ6aXBcIixmdW5jdGlvbigpe3JldHVybiB3YX0pLG4uZChlLFwiemlwT2JqXCIsZnVuY3Rpb24oKXtyZXR1cm4gX2F9KSxuLmQoZSxcInppcFdpdGhcIixmdW5jdGlvbigpe3JldHVybiB4YX0pLG4uZChlLFwidGh1bmtpZnlcIixmdW5jdGlvbigpe3JldHVybiBFYX0pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKGUpO3ZhciByPW4oMCksaT1mdW5jdGlvbih0LGUpe3JldHVybihpPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJih0W25dPWVbbl0pfSkodCxlKX07XG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovZnVuY3Rpb24gYSh0LGUpe2Z1bmN0aW9uIG4oKXt0aGlzLmNvbnN0cnVjdG9yPXR9aSh0LGUpLHQucHJvdG90eXBlPW51bGw9PT1lP09iamVjdC5jcmVhdGUoZSk6KG4ucHJvdG90eXBlPWUucHJvdG90eXBlLG5ldyBuKX12YXIgbyxzPWZ1bmN0aW9uKCl7cmV0dXJuKHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxyPWFyZ3VtZW50cy5sZW5ndGg7bjxyO24rKylmb3IodmFyIGkgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsaSkmJih0W2ldPWVbaV0pO3JldHVybiB0fSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtmdW5jdGlvbiB1KHQsZSxuLHIpe3JldHVybiBuZXcobnx8KG49UHJvbWlzZSkpKGZ1bmN0aW9uKGksYSl7ZnVuY3Rpb24gbyh0KXt0cnl7dShyLm5leHQodCkpfWNhdGNoKHQpe2EodCl9fWZ1bmN0aW9uIHModCl7dHJ5e3Uoci50aHJvdyh0KSl9Y2F0Y2godCl7YSh0KX19ZnVuY3Rpb24gdSh0KXt0LmRvbmU/aSh0LnZhbHVlKTpuZXcgbihmdW5jdGlvbihlKXtlKHQudmFsdWUpfSkudGhlbihvLHMpfXUoKHI9ci5hcHBseSh0LGV8fFtdKSkubmV4dCgpKX0pfWZ1bmN0aW9uIGModCxlKXt2YXIgbixyLGksYSxvPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJmlbMF0pdGhyb3cgaVsxXTtyZXR1cm4gaVsxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBhPXtuZXh0OnMoMCksdGhyb3c6cygxKSxyZXR1cm46cygyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYoYVtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxhO2Z1bmN0aW9uIHMoYSl7cmV0dXJuIGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbihhKXtpZihuKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7bzspdHJ5e2lmKG49MSxyJiYoaT0yJmFbMF0/ci5yZXR1cm46YVswXT9yLnRocm93fHwoKGk9ci5yZXR1cm4pJiZpLmNhbGwociksMCk6ci5uZXh0KSYmIShpPWkuY2FsbChyLGFbMV0pKS5kb25lKXJldHVybiBpO3N3aXRjaChyPTAsaSYmKGE9WzImYVswXSxpLnZhbHVlXSksYVswXSl7Y2FzZSAwOmNhc2UgMTppPWE7YnJlYWs7Y2FzZSA0OnJldHVybiBvLmxhYmVsKysse3ZhbHVlOmFbMV0sZG9uZTohMX07Y2FzZSA1Om8ubGFiZWwrKyxyPWFbMV0sYT1bMF07Y29udGludWU7Y2FzZSA3OmE9by5vcHMucG9wKCksby50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoIShpPShpPW8udHJ5cykubGVuZ3RoPjAmJmlbaS5sZW5ndGgtMV0pJiYoNj09PWFbMF18fDI9PT1hWzBdKSl7bz0wO2NvbnRpbnVlfWlmKDM9PT1hWzBdJiYoIWl8fGFbMV0+aVswXSYmYVsxXTxpWzNdKSl7by5sYWJlbD1hWzFdO2JyZWFrfWlmKDY9PT1hWzBdJiZvLmxhYmVsPGlbMV0pe28ubGFiZWw9aVsxXSxpPWE7YnJlYWt9aWYoaSYmby5sYWJlbDxpWzJdKXtvLmxhYmVsPWlbMl0sby5vcHMucHVzaChhKTticmVha31pWzJdJiZvLm9wcy5wb3AoKSxvLnRyeXMucG9wKCk7Y29udGludWV9YT1lLmNhbGwodCxvKX1jYXRjaCh0KXthPVs2LHRdLHI9MH1maW5hbGx5e249aT0wfWlmKDUmYVswXSl0aHJvdyBhWzFdO3JldHVybnt2YWx1ZTphWzBdP2FbMV06dm9pZCAwLGRvbmU6ITB9fShbYSxzXSl9fX1mdW5jdGlvbiBsKCl7cmV0dXJuIG51bGw9PW8mJihvPXIuZi5nZXQoXCJFUFNJTE9OXCIpKSxvfXZhciBmPTA7ZnVuY3Rpb24gaCgpe3JldHVybiBmKyt9dmFyIHA9e307ZnVuY3Rpb24gZCh0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9XCJcIiksdCBpbiBwfHwocFt0XT0wKSxwW3RdKz0xLHQrcFt0XS50b1N0cmluZygpfXZhciBtPXtmbG9hdDMyOnt9LGludDMyOnt9fSxnPVwiZmxvYXQzMlwiO2Z1bmN0aW9uIHkodCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ZyksbnVsbD09bVtlXVt0XSYmKG1bZV1bdF09T2JqZWN0KHIucGQpKHQsZSksT2JqZWN0KHIuUmIpKG1bZV1bdF0pKSxtW2VdW3RdfXZhciB2PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobil7dmFyIHI9dC5jYWxsKHRoaXMsbil8fHRoaXM7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihyLGUucHJvdG90eXBlKSxyfXJldHVybiBhKGUsdCksZX0oRXJyb3IpLGI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShuKXt2YXIgcj10LmNhbGwodGhpcyxuKXx8dGhpcztyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHIsZS5wcm90b3R5cGUpLHJ9cmV0dXJuIGEoZSx0KSxlfShFcnJvciksdz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKG4pe3ZhciByPXQuY2FsbCh0aGlzLG4pfHx0aGlzO3JldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YocixlLnByb3RvdHlwZSkscn1yZXR1cm4gYShlLHQpLGV9KEVycm9yKSxfPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobil7dmFyIHI9dC5jYWxsKHRoaXMsbil8fHRoaXM7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihyLGUucHJvdG90eXBlKSxyfXJldHVybiBhKGUsdCksZX0oRXJyb3IpLHg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShuKXt2YXIgcj10LmNhbGwodGhpcyxuKXx8dGhpcztyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKHIsZS5wcm90b3R5cGUpLHJ9cmV0dXJuIGEoZSx0KSxlfShFcnJvcik7IWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobil7dmFyIHI9dC5jYWxsKHRoaXMsbil8fHRoaXM7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihyLGUucHJvdG90eXBlKSxyfWEoZSx0KX0oRXJyb3IpO2Z1bmN0aW9uIEUodCxlKXtpZihBcnJheS5pc0FycmF5KHQpKXtmb3IodmFyIG49W10scj0wO3I8ZTtyKyspbj1uLmNvbmNhdCh0KTtyZXR1cm4gbn1yZXR1cm4obj1uZXcgQXJyYXkoZSkpLmZpbGwodCksbn1mdW5jdGlvbiBTKHQsZSl7aWYoIXQpdGhyb3cgbmV3IHgoZSl9ZnVuY3Rpb24gTih0LGUpe2Zvcih2YXIgbj0wLHI9MCxpPXQ7cjxpLmxlbmd0aDtyKyspaVtyXT09PWUmJm4rKztyZXR1cm4gbn1mdW5jdGlvbiBJKHQpe3JldHVybiAxPT09dC5sZW5ndGg/dFswXTp0fWZ1bmN0aW9uIE8odCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodCk/dDpbdF19ZnVuY3Rpb24gayh0KXt2YXIgZT10LnJlcGxhY2UoLyguKShbQS1aXVthLXowLTldKykvZyxcIiQxXyQyXCIpLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csXCIkMV8kMlwiKS50b0xvd2VyQ2FzZSgpO3JldHVyblwiX1wiIT09ZVswXT9lOlwicHJpdmF0ZVwiK2V9ZnVuY3Rpb24gQSh0KXtyZXR1cm4gdC5sZW5ndGg8PTE/dDotMT09PXQuaW5kZXhPZihcIl9cIik/dDp0LnJlcGxhY2UoL1tfXSsoXFx3fCQpL2csZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9dmFyIEM9e307ZnVuY3Rpb24gUCh0KXtyZXR1cm4gbnVsbD09dD9udWxsOntjbGFzc05hbWU6dC5nZXRDbGFzc05hbWUoKSxjb25maWc6dC5nZXRDb25maWcoKX19ZnVuY3Rpb24gVCh0LGUsbixyLGkpe2lmKHZvaWQgMD09PWUmJihlPXt9KSx2b2lkIDA9PT1uJiYobj17fSksdm9pZCAwPT09ciYmKHI9XCJvYmplY3RcIiksdm9pZCAwPT09aSYmKGk9ITEpLFwic3RyaW5nXCI9PXR5cGVvZiB0KXt2YXIgYT10LG89dm9pZCAwO2lmKGEgaW4gbilvPW5bYV07ZWxzZSBpZihhIGluIEMpbz1DW2FdO2Vsc2UgaWYobnVsbD09KG89ZVthXSkpdGhyb3cgbmV3IHcoXCJVbmtub3duIFwiK3IrXCI6IFwiK3QrXCIuIFRoaXMgbWF5IGJlIGR1ZSB0byBvbmUgb2YgdGhlIGZvbGxvd2luZyByZWFzb25zOlxcbjEuIFRoZSBcIityK1wiIGlzIGRlZmluZWQgaW4gUHl0aG9uLCBpbiB3aGljaCBjYXNlIGl0IG5lZWRzIHRvIGJlIHBvcnRlZCB0byBUZW5zb3JGbG93LmpzIG9yIHlvdXIgSmF2YVNjcmlwdCBjb2RlLlxcbjIuIFRoZSBjdXN0b20gXCIrcitcIiBpcyBkZWZpbmVkIGluIEphdmFTY3JpcHQsIGJ1dCBpcyBub3QgcmVnaXN0ZXJlZCBwcm9wZXJseSB3aXRoIHRmLnNlcmlhbGl6YXRpb24ucmVnaXN0ZXJDbGFzcygpLlwiKTtyZXR1cm4gb312YXIgdT10O2lmKG51bGw9PXUuY2xhc3NOYW1lfHxudWxsPT11LmNvbmZpZyl0aHJvdyBuZXcgdyhyK1wiOiBJbXByb3BlciBjb25maWcgZm9ybWF0OiBcIitKU09OLnN0cmluZ2lmeSh1KStcIi5cXG4nY2xhc3NOYW1lJyBhbmQgJ2NvbmZpZycgbXVzdCBzZXQuXCIpO3ZhciBjLGwsZixoPXUuY2xhc3NOYW1lLHA9dm9pZCAwLGQ9dm9pZCAwO2lmKGggaW4gbj8ocD0oYz1uLmdldChoKSlbMF0sZD1jWzFdKTpoIGluIEM/KHA9KGw9Qy5jbGFzc05hbWUpWzBdLGQ9bFsxXSk6aCBpbiBlJiYocD0oZj1lW2hdKVswXSxkPWZbMV0pLG51bGw9PXApdGhyb3cgbmV3IHcoXCJVbmtub3duIFwiK3IrXCI6IFwiK2grXCIuIFRoaXMgbWF5IGJlIGR1ZSB0byBvbmUgb2YgdGhlIGZvbGxvd2luZyByZWFzb25zOlxcbjEuIFRoZSBcIityK1wiIGlzIGRlZmluZWQgaW4gUHl0aG9uLCBpbiB3aGljaCBjYXNlIGl0IG5lZWRzIHRvIGJlIHBvcnRlZCB0byBUZW5zb3JGbG93LmpzIG9yIHlvdXIgSmF2YVNjcmlwdCBjb2RlLlxcbjIuIFRoZSBjdXN0b20gXCIrcitcIiBpcyBkZWZpbmVkIGluIEphdmFTY3JpcHQsIGJ1dCBpcyBub3QgcmVnaXN0ZXJlZCBwcm9wZXJseSB3aXRoIHRmLnNlcmlhbGl6YXRpb24ucmVnaXN0ZXJDbGFzcygpLlwiKTtpZihudWxsIT1kKXtmb3IodmFyIG09e30sZz0wLHk9T2JqZWN0LmtleXMoQyk7Zzx5Lmxlbmd0aDtnKyspbVtTPXlbZ11dPUNbU107Zm9yKHZhciB2PTAsYj1PYmplY3Qua2V5cyhuKTt2PGIubGVuZ3RoO3YrKyltW1M9Ylt2XV09bltTXTt1LmNvbmZpZy5jdXN0b21PYmplY3RzPW07Zm9yKHZhciBfPXMoe30sQykseD0wLEU9T2JqZWN0LmtleXMobik7eDxFLmxlbmd0aDt4Kyspe3ZhciBTPUVbeF07Q1tTXT1uW1NdfXZhciBOPWQocCx1LmNvbmZpZyxuLGkpO3JldHVybiBDPXMoe30sXyksTn1fPXMoe30sQyk7Zm9yKHZhciBJPTAsTz1PYmplY3Qua2V5cyhuKTtJPE8ubGVuZ3RoO0krKylTPU9bSV0sQ1tTXT1uW1NdO3JldHVybiBOPW5ldyBwKHUuY29uZmlnKSxDPXMoe30sXyksTn1mdW5jdGlvbiBSKHQsZSl7cmV0dXJuLTEqZnVuY3Rpb24odCxlKXtyZXR1cm4gdDxlPy0xOnQ+ZT8xOjB9KHQsZSl9ZnVuY3Rpb24gRCh0KXtpZihudWxsPT10KXJldHVybiB0O2Zvcih2YXIgZT1bXSxuPTAscj10O248ci5sZW5ndGg7bisrKXt2YXIgaT1yW25dOy0xPT09ZS5pbmRleE9mKGkpJiZlLnB1c2goaSl9cmV0dXJuIGV9ZnVuY3Rpb24gTSh0KXtpZihudWxsPT10KXRocm93IG5ldyB3KFwiSW52YWxpZCB2YWx1ZSBpbiBvYmo6IFwiK0pTT04uc3RyaW5naWZ5KHQpKTtmb3IodmFyIGUgaW4gdClpZih0Lmhhc093blByb3BlcnR5KGUpKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGoodCxlLG4pe2lmKG51bGwhPW4mJnQuaW5kZXhPZihuKTwwKXRocm93IG5ldyB3KG4rXCIgaXMgbm90IGEgdmFsaWQgXCIrZStcIi4gIFZhbGlkIHZhbHVlcyBhcmUgXCIrdCtcIiBvciBudWxsL3VuZGVmaW5lZC5cIil9ZnVuY3Rpb24gQih0LGUsbixyKXtyZXR1cm4gdm9pZCAwPT09biYmKG49MCksdm9pZCAwPT09ciYmKHI9MS8wKSxTKG4+PTApLFMocj49biksQXJyYXkuaXNBcnJheSh0KSYmdC5sZW5ndGg+PW4mJnQubGVuZ3RoPD1yJiZ0LmV2ZXJ5KGZ1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdD09PWV9KX1mdW5jdGlvbiBMKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5MZCkoT2JqZWN0KHIuVmQpKE9iamVjdChyLkFjKSh0LHQpLGUsITApKX0pfXZhciB6PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue319LGV9KHIudGQuU2VyaWFsaXphYmxlKSxGPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmRlZmF1bHRNYXhWYWx1ZT0yLG4uZGVmYXVsdEF4aXM9MCxuLm1heFZhbHVlPW51bGwhPWUubWF4VmFsdWU/ZS5tYXhWYWx1ZTpuLmRlZmF1bHRNYXhWYWx1ZSxuLmF4aXM9bnVsbCE9ZS5heGlzP2UuYXhpczpuLmRlZmF1bHRBeGlzLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgbj1MKHQsZS5heGlzKSxpPU9iamVjdChyLlEpKG4sMCxlLm1heFZhbHVlKTtyZXR1cm4gT2JqZWN0KHIuemMpKHQsT2JqZWN0KHIubGIpKGksT2JqZWN0KHIudSkoeShsKCkpLG4pKSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue21heFZhbHVlOnRoaXMubWF4VmFsdWUsYXhpczp0aGlzLmF4aXN9fSxlLmNsYXNzTmFtZT1cIk1heE5vcm1cIixlfSh6KTtyLnRkLnJlZ2lzdGVyQ2xhc3MoRik7dmFyIFU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uZGVmYXVsdEF4aXM9MCxuLmF4aXM9bnVsbCE9ZS5heGlzP2UuYXhpczpuLmRlZmF1bHRBeGlzLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIubGIpKHQsT2JqZWN0KHIudSkoeShsKCkpLEwodCxlLmF4aXMpKSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue2F4aXM6dGhpcy5heGlzfX0sZS5jbGFzc05hbWU9XCJVbml0Tm9ybVwiLGV9KHopO3IudGQucmVnaXN0ZXJDbGFzcyhVKTt2YXIgVj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5mZCkodCl9LGUuY2xhc3NOYW1lPVwiTm9uTmVnXCIsZX0oeik7ci50ZC5yZWdpc3RlckNsYXNzKFYpO3ZhciBXPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLmRlZmF1bHRNaW5WYWx1ZT0wLG4uZGVmYXVsdE1heFZhbHVlPTEsbi5kZWZhdWx0UmF0ZT0xLG4uZGVmYXVsdEF4aXM9MCxuLm1pblZhbHVlPW51bGwhPWUubWluVmFsdWU/ZS5taW5WYWx1ZTpuLmRlZmF1bHRNaW5WYWx1ZSxuLm1heFZhbHVlPW51bGwhPWUubWF4VmFsdWU/ZS5tYXhWYWx1ZTpuLmRlZmF1bHRNYXhWYWx1ZSxuLnJhdGU9bnVsbCE9ZS5yYXRlP2UucmF0ZTpuLmRlZmF1bHRSYXRlLG4uYXhpcz1udWxsIT1lLmF4aXM/ZS5heGlzOm4uZGVmYXVsdEF4aXMsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPUwodCxlLmF4aXMpLGk9T2JqZWN0KHIudSkoT2JqZWN0KHIuemMpKHkoZS5yYXRlKSxPYmplY3Qoci5RKShuLGUubWluVmFsdWUsZS5tYXhWYWx1ZSkpLE9iamVjdChyLnpjKSh5KDEtZS5yYXRlKSxuKSk7cmV0dXJuIE9iamVjdChyLnpjKSh0LE9iamVjdChyLmxiKShpLE9iamVjdChyLnUpKHkobCgpKSxuKSkpfSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybnttaW5WYWx1ZTp0aGlzLm1pblZhbHVlLG1heFZhbHVlOnRoaXMubWF4VmFsdWUscmF0ZTp0aGlzLnJhdGUsYXhpczp0aGlzLmF4aXN9fSxlLmNsYXNzTmFtZT1cIk1pbk1heE5vcm1cIixlfSh6KTtyLnRkLnJlZ2lzdGVyQ2xhc3MoVyk7dmFyIHE9e21heE5vcm06XCJNYXhOb3JtXCIsbWluTWF4Tm9ybTpcIk1pbk1heE5vcm1cIixub25OZWc6XCJOb25OZWdcIix1bml0Tm9ybTpcIlVuaXROb3JtXCJ9O2Z1bmN0aW9uICQodCl7cmV0dXJuIFAodCl9ZnVuY3Rpb24gSCh0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT17fSksVCh0LHIudGQuU2VyaWFsaXphdGlvbk1hcC5nZXRNYXAoKS5jbGFzc05hbWVNYXAsZSxcImNvbnN0cmFpbnRcIil9ZnVuY3Rpb24gSyh0KXtyZXR1cm4gbnVsbD09dD9udWxsOlwic3RyaW5nXCI9PXR5cGVvZiB0P0goe2NsYXNzTmFtZTp0IGluIHE/cVt0XTp0LGNvbmZpZzp7fX0pOnQgaW5zdGFuY2VvZiB6P3Q6SCh0KX12YXIgRz1PYmplY3QuZnJlZXplKHttYXhOb3JtOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRih0KX0sdW5pdE5vcm06ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBVKHQpfSxub25OZWc6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFZ9LG1pbk1heE5vcm06ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBXKHQpfX0pLFg9bmV3IE1hcCxZPVtcImNoYW5uZWxzRmlyc3RcIixcImNoYW5uZWxzTGFzdFwiXTtmdW5jdGlvbiBKKHQpe2ooWSxcIkRhdGFGb3JtYXRcIix0KX12YXIgWj1bXCJ2YWxpZFwiLFwic2FtZVwiLFwiY2F1c2FsXCJdO2Z1bmN0aW9uIFEodCl7aihaLFwiUGFkZGluZ01vZGVcIix0KX12YXIgdHQ9W1wibWF4XCIsXCJhdmdcIl07dmFyIGV0PVtdLG50PVwiL1wiO2Z1bmN0aW9uIHJ0KHQsZSl7ZXQucHVzaCh0KTt0cnl7dmFyIG49ZSgpO3JldHVybiBldC5wb3AoKSxufWNhdGNoKHQpe3Rocm93IGV0LnBvcCgpLHR9fWZ1bmN0aW9uIGl0KHQpe2lmKCFzdCh0KSl0aHJvdyBuZXcgRXJyb3IoXCJOb3QgYSB2YWxpZCB0ZW5zb3IgbmFtZTogJ1wiK3QrXCInXCIpO3JldHVybigwPT09ZXQubGVuZ3RoP1wiXCI6ZXQuam9pbihudCkrbnQpK3R9ZnVuY3Rpb24gYXQodCl7aWYoIXN0KHQpKXRocm93IG5ldyBFcnJvcihcIk5vdCBhIHZhbGlkIHRlbnNvciBuYW1lOiAnXCIrdCtcIidcIik7WC5oYXModCl8fFguc2V0KHQsMCk7dmFyIGU9WC5nZXQodCk7aWYoWC5zZXQodCxYLmdldCh0KSsxKSxlPjApe3ZhciBuPXQrXCJfXCIrZTtyZXR1cm4gWC5zZXQobiwxKSxufXJldHVybiB0fXZhciBvdD1uZXcgUmVnRXhwKC9eW0EtWmEtel1bLUEtWmEtejAtOVxcLl9cXC9dKiQvKTtmdW5jdGlvbiBzdCh0KXtyZXR1cm4hIXQubWF0Y2gob3QpfWZ1bmN0aW9uIHV0KHQpe3JldHVybiB0PT09cGFyc2VJbnQodC50b1N0cmluZygpLDEwKX1mdW5jdGlvbiBjdCh0LGUsbil7bnVsbD09ZSYmKGU9MCksbnVsbD09biYmKG49dC5sZW5ndGgpO2Zvcih2YXIgcj0xLGk9ZTtpPG47KytpKXIqPXRbaV07cmV0dXJuIHJ9ZnVuY3Rpb24gbHQodCl7cmV0dXJuIHQ9QXJyYXkuaXNBcnJheSh0KT9uZXcgRmxvYXQzMkFycmF5KHQpOnQsT2JqZWN0KHIuWmQpKHQpfWZ1bmN0aW9uIGZ0KHQpe3JldHVybiBPYmplY3Qoci5zYykobHQodCkpLmRhdGFTeW5jKClbMF19ZnVuY3Rpb24gaHQodCl7cmV0dXJuIE9iamVjdChyLm1jKShsdCh0KSkuZGF0YVN5bmMoKVswXX1mdW5jdGlvbiBwdCh0LGUpe2lmKGU8dCl0aHJvdyBuZXcgdyhcImVuZCAoXCIrZStcIikgPCBiZWdpbiAoXCIrdCtcIikgaXMgZm9yYmlkZGVuLlwiKTtmb3IodmFyIG49W10scj10O3I8ZTsrK3Ipbi5wdXNoKHIpO3JldHVybiBufWZ1bmN0aW9uIGR0KHQsZSl7cmV0dXJuIHQuYXNUeXBlKGUpfWZ1bmN0aW9uIG10KHQsZSl7dm9pZCAwPT09ZSYmKGU9LTEpO3ZhciBuPXQuc2hhcGUuc2xpY2UoKTtyZXR1cm4gZTwwJiYoZT1uLmxlbmd0aCtlKzEpLG4uc3BsaWNlKGUsMCwxKSx0LnJlc2hhcGUobil9ZnVuY3Rpb24gZ3QodCxlLG4pe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtzd2l0Y2godC5yYW5rKXtjYXNlIDE6cmV0dXJuIE9iamVjdChyLkJkKSh0LGUsbik7Y2FzZSAyOnJldHVybiBPYmplY3Qoci5DZCkodCxbZSwwXSxbbix0LnNoYXBlWzFdXSk7Y2FzZSAzOnJldHVybiBPYmplY3Qoci5EZCkodCxbZSwwLDBdLFtuLHQuc2hhcGVbMV0sdC5zaGFwZVsyXV0pO2Nhc2UgNDpyZXR1cm4gT2JqZWN0KHIuRWQpKHQsW2UsMCwwLDBdLFtuLHQuc2hhcGVbMV0sdC5zaGFwZVsyXSx0LnNoYXBlWzNdXSk7ZGVmYXVsdDp0aHJvdyBuZXcgdyhcInNsaWNlQWxvbmdGaXJzdEF4aXMoKSByZWNlaXZlZCBhbiB1bnN1cHBvcnRlZCB0ZW5zb3IgcmFuazogXCIrdC5yYW5rKX19KX1mdW5jdGlvbiB5dCh0LGUsbil7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3N3aXRjaCh0LnJhbmspe2Nhc2UgMTpyZXR1cm4gT2JqZWN0KHIuQmQpKHQsZSxuKTtjYXNlIDI6cmV0dXJuIE9iamVjdChyLkNkKSh0LFswLGVdLFt0LnNoYXBlWzBdLG5dKTtjYXNlIDM6cmV0dXJuIE9iamVjdChyLkRkKSh0LFswLDAsZV0sW3Quc2hhcGVbMF0sdC5zaGFwZVsxXSxuXSk7Y2FzZSA0OnJldHVybiBPYmplY3Qoci5FZCkodCxbMCwwLDAsZV0sW3Quc2hhcGVbMF0sdC5zaGFwZVsxXSx0LnNoYXBlWzJdLG5dKTtkZWZhdWx0OnRocm93IG5ldyB3KFwic2xpY2VBbG9uZ0xhc3RBeGlzKCkgcmVjZWl2ZWQgYW4gdW5zdXBwb3J0ZWQgdGVuc29yIHJhbms6IFwiK3QucmFuayl9fSl9ZnVuY3Rpb24gdnQodCxlLG4saSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3N3aXRjaCh0LnJhbmspe2Nhc2UgMTpyZXR1cm4gT2JqZWN0KHIuQmQpKHQsZSxuKTtjYXNlIDI6c3dpdGNoKGkpe2Nhc2UgMTpyZXR1cm4gZ3QodCxlLG4pO2Nhc2UgMjpyZXR1cm4geXQodCxlLG4pO2RlZmF1bHQ6dGhyb3cgbmV3IHcoXCJUaGUgYXhpcyBpcyBub3Qgd2l0aGluIHRoZSByYW5rIG9mIHRoZSB0ZW5zb3IgXCIraSl9Y2FzZSAzOnN3aXRjaChpKXtjYXNlIDE6cmV0dXJuIGd0KHQsZSxuKTtjYXNlIDI6cmV0dXJuIE9iamVjdChyLkRkKSh0LFswLGUsMF0sW3Quc2hhcGVbMF0sbix0LnNoYXBlWzJdXSk7Y2FzZSAzOnJldHVybiB5dCh0LGUsbik7ZGVmYXVsdDp0aHJvdyBuZXcgdyhcIlRoZSBheGlzIGlzIG5vdCB3aXRoaW4gdGhlIHJhbmsgb2YgdGhlIHRlbnNvciBcIitpKX1jYXNlIDQ6c3dpdGNoKGkpe2Nhc2UgMTpyZXR1cm4gZ3QodCxlLG4pO2Nhc2UgMjpyZXR1cm4gT2JqZWN0KHIuRWQpKHQsWzAsZSwwLDBdLFt0LnNoYXBlWzBdLG4sdC5zaGFwZVsyXSx0LnNoYXBlWzNdXSk7Y2FzZSAzOnJldHVybiBPYmplY3Qoci5FZCkodCxbMCwwLGUsMF0sW3Quc2hhcGVbMF0sdC5zaGFwZVsxXSxuLHQuc2hhcGVbM11dKTtjYXNlIDQ6cmV0dXJuIHl0KHQsZSxuKTtkZWZhdWx0OnRocm93IG5ldyB3KFwiVGhlIGF4aXMgaXMgbm90IHdpdGhpbiB0aGUgcmFuayBvZiB0aGUgdGVuc29yIFwiK2kpfWRlZmF1bHQ6dGhyb3cgbmV3IHcoXCJzbGljZUFsb25nTGFzdEF4aXMoKSByZWNlaXZlZCBhbiB1bnN1cHBvcnRlZCB0ZW5zb3IgcmFuazogXCIrdC5yYW5rKX19KX1mdW5jdGlvbiBidCh0LGUpe3ZhciBuO3JldHVybiB2b2lkIDA9PT1lJiYoZT0tMSksZTwwJiYoZT0wIT09KG49dFswXS5yYW5rKT9uOjApLGU9PT10WzBdLnJhbmsmJihlPS0xKSxPYmplY3Qoci5UKSh0LGUpfWZ1bmN0aW9uIHd0KHQsZSl7c3dpdGNoKHQucmFuayl7Y2FzZSAxOnJldHVybiBPYmplY3Qoci5VKShbdCxlXSk7Y2FzZSAyOnJldHVybiBPYmplY3Qoci5WKShbdCxlXSwwKTtjYXNlIDM6cmV0dXJuIE9iamVjdChyLlcpKFt0LGVdLDApO2Nhc2UgNDpyZXR1cm4gT2JqZWN0KHIuWCkoW3QsZV0sMCk7ZGVmYXVsdDp0aHJvdyBuZXcgdyhcImNvbmNhdEFsb25nRmlyc3RBeGlzKCkgcmVjZWl2ZWQgYW4gdW5zdXBwb3J0ZWQgdGVuc29yIHJhbms6IFwiK3QucmFuayl9fWZ1bmN0aW9uIF90KHQsZSl7aWYoQXJyYXkuaXNBcnJheShlKXx8KGU9W2VdKSx0LnJhbmshPT1lLmxlbmd0aCl0aHJvdyBuZXcgdyhcIlRoZSBsZW5ndGggb2YgaW5wdXQgbiAoXCIrZS5sZW5ndGgrXCIpIGRvZXMgbm90IG1hdGNoIHRoZSBudW1iZXIgb2YgZGltZW5zaW9ucyBpbiBpbnB1dCB4IChcIit0LnJhbmsrXCIpXCIpO3JldHVybiBPYmplY3Qoci5oZSkodCxlKX1mdW5jdGlvbiB4dCh0LGUsbixpLGEpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0wKSx2b2lkIDA9PT1uJiYobj0xKSxPYmplY3Qoci5hZCkodCxlLG4saSxhKX1mdW5jdGlvbiBFdCh0LGUpe2lmKHQucmFuazwyfHxlLnJhbms8Mil0aHJvdyBuZXcgXyhcImRvdCByZXF1aXJlcyBib3RoIGlucHV0cyB0byBiZSByYW5rID49IDIgYnV0IGdvdCB4IHNoYXBlID0gXCIrdC5zaGFwZStcIiBhbmQgeSBzaGFwZSA9IFwiK2Uuc2hhcGUpO2lmKGUucmFuaz49MyYmKGk9dC5zaGFwZS5zbGljZSgtMSlbMF0pIT09KHM9ZS5zaGFwZS5zbGljZSgtMilbMF0pKXRocm93IG5ldyBfKFwiSWYgcmFuayB5ID49IDMsIHRoZW4gdGhlIHNlY29uZCBsYXN0IGRpbSBvZiB5IG11c3QgZXF1YWwgdGhlIGxhc3QgZGltIG9mIHggYnV0IGdvdCB4IHNoYXBlID0gXCIrdC5zaGFwZStcIiBhbmQgIHkgc2hhcGUgPSBcIitlLnNoYXBlKTtpZigyPT09dC5yYW5rJiYyPT09ZS5yYW5rKXJldHVybiBPYmplY3Qoci5rYykodCxlKTt2YXIgbj10LnNoYXBlLnNsaWNlKCksaT1uLnBvcCgpO3Q9dC5yZXNoYXBlKFstMSxpXSk7dmFyIGE9ZS5zaGFwZS5zbGljZSgpLG89YS5wb3AoKSxzPWEucG9wKCksdT1hLmNvbmNhdChbb10pLGM9QXJyYXkuZnJvbSh7bGVuZ3RoOmUucmFua30sZnVuY3Rpb24odCxuKXtyZXR1cm4gMD09PW4/ZS5yYW5rLTI6bjw9ZS5yYW5rLTI/bi0xOm59KTtlPWUudHJhbnNwb3NlKGMpLnJlc2hhcGUoW3MsLTFdKTt2YXIgbD1uLmNvbmNhdCh1KTtyZXR1cm4gT2JqZWN0KHIua2MpKHQsZSkucmVzaGFwZShsKX1mdW5jdGlvbiBTdCh0LGUsbil7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBlPUFycmF5LmlzQXJyYXkoZSk/T2JqZWN0KHIuWmQpKGUsXCJpbnQzMlwiKTplLnRvSW50KCksT2JqZWN0KHIuRGIpKHQsZSxuKX0pfWZ1bmN0aW9uIE50KHQpe3JldHVybiBPYmplY3Qoci5BYykodCx0KX1mdW5jdGlvbiBJdCh0LGUsbil7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKG51bGw9PW4mJihuPVwiY2hhbm5lbHNMYXN0XCIpLEoobiksMSE9PWUucmFuayYmZS5yYW5rIT09dC5yYW5rKXRocm93IG5ldyB3KFwiVW5leHBlY3RlZCBiaWFzIGRpbWVuc2lvbnM6IFwiK2UucmFuaytcIjsgZXhwZWN0ZWQgaXQgdG8gYmUgMSBvciBcIit0LnJhbmspO3ZhciByLGk9ZS5zaGFwZTtpZig1PT09dC5yYW5rKVwiY2hhbm5lbHNGaXJzdFwiPT09bj9yPTE9PT1pLmxlbmd0aD90LmFkZChlLnJlc2hhcGUoWzEsaVswXSwxLDEsMV0pKTp0LmFkZChlLnJlc2hhcGUoWzEsaVszXSxpWzBdLGlbMV0saVsyXV0pKTpcImNoYW5uZWxzTGFzdFwiPT09biYmKHI9MT09PWkubGVuZ3RoP3QuYWRkKGUucmVzaGFwZShbMSwxLDEsMSxpWzBdXSkpOnQuYWRkKGUucmVzaGFwZShbMV0uY29uY2F0KGkpKSkpO2Vsc2UgaWYoND09PXQucmFuaylcImNoYW5uZWxzRmlyc3RcIj09PW4/cj0xPT09aS5sZW5ndGg/dC5hZGQoZS5yZXNoYXBlKFsxLGlbMF0sMSwxXSkpOnQuYWRkKGUucmVzaGFwZShbMSxpWzJdLGlbMF0saVsxXV0pKTpcImNoYW5uZWxzTGFzdFwiPT09biYmKHI9MT09PWkubGVuZ3RoP3QuYWRkKGUucmVzaGFwZShbMSwxLDEsaVswXV0pKTp0LmFkZChlLnJlc2hhcGUoWzFdLmNvbmNhdChpKSkpKTtlbHNlIGlmKDM9PT10LnJhbmspXCJjaGFubmVsc0ZpcnN0XCI9PT1uP3I9MT09PWkubGVuZ3RoP3QuYWRkKGUucmVzaGFwZShbMSxpWzBdLDFdKSk6dC5hZGQoZS5yZXNoYXBlKFsxLGlbMV0saVswXV0pKTpcImNoYW5uZWxzTGFzdFwiPT09biYmKHI9MT09PWkubGVuZ3RoP3QuYWRkKGUucmVzaGFwZShbMSwxLGlbMF1dKSk6dC5hZGQoZS5yZXNoYXBlKFsxXS5jb25jYXQoaSkpKSk7ZWxzZXtpZighKHQucmFuazwzKSl0aHJvdyBuZXcgdyhcIlVuc3VwcG9ydGVkIGlucHV0IHJhbmsgYnkgYmlhc0FkZDogXCIrdC5yYW5rKTtyPXQuYWRkKGUpfXJldHVybiByfSl9ZnVuY3Rpb24gT3QodCxlLG4saSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKG51bGwhPW4mJiFyLnFlLmFycmF5c0VxdWFsKHQuc2hhcGUsbikpdGhyb3cgbmV3IF8oXCJOb24tZGVmYXVsdCBub2lzZSBzaGFwZSBpcyBub3QgaW1wbGVtZW50ZWQgeWV0OiBcIitKU09OLnN0cmluZ2lmeShuKSk7aWYobnVsbCE9aSl0aHJvdyBuZXcgXyhcInNlZWQgaXMgbm90IGltcGxlbWVudGVkIGZvciBkcm9wb3V0IHlldC5cIik7dmFyIGE9T2JqZWN0KHIuUmQpKE9iamVjdChyLnUpKE9iamVjdChyLkRjKShlKSxPYmplY3Qoci5iZCkodC5zaGFwZSwwLDEsXCJmbG9hdDMyXCIpKSk7cmV0dXJuIGE9T2JqZWN0KHIuemMpKE9iamVjdChyLmxiKSh5KDEpLE9iamVjdChyLlRkKSh5KDEpLGUpKSxhKSxPYmplY3Qoci56YykodCxhKX0pfWZ1bmN0aW9uIGt0KHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49ITEpLG4/dCgpOmUoKX12YXIgQXQ9W1wiZmFuSW5cIixcImZhbk91dFwiLFwiZmFuQXZnXCJdO3ZhciBDdD1bXCJub3JtYWxcIixcInVuaWZvcm1cIl07dmFyIFB0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuZnJvbUNvbmZpZ1VzZXNDdXN0b21PYmplY3RzPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybnt9fSxlfShyLnRkLlNlcmlhbGl6YWJsZSksVHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3Qoci56ZSkodCxlKX0sZS5jbGFzc05hbWU9XCJaZXJvc1wiLGV9KFB0KTtyLnRkLnJlZ2lzdGVyQ2xhc3MoVHQpO3ZhciBSdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdChyLkpjKSh0LGUpfSxlLmNsYXNzTmFtZT1cIk9uZXNcIixlfShQdCk7ci50ZC5yZWdpc3RlckNsYXNzKFJ0KTt2YXIgRHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGUpdGhyb3cgbmV3IHcoXCJFeHBlY3RlZCBhcmd1bWVudCBvZiB0eXBlIENvbnN0YW50Q29uZmlnIGJ1dCBnb3QgXCIrZSk7aWYodm9pZCAwPT09ZS52YWx1ZSl0aHJvdyBuZXcgdyhcImNvbmZpZyBtdXN0IGhhdmUgdmFsdWUgc2V0IGJ1dCBnb3QgXCIrZSk7cmV0dXJuIG4udmFsdWU9ZS52YWx1ZSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIuemMpKE9iamVjdChyLnBkKShuLnZhbHVlKSxPYmplY3Qoci5KYykodCxlKSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue3ZhbHVlOnRoaXMudmFsdWV9fSxlLmNsYXNzTmFtZT1cIkNvbnN0YW50XCIsZX0oUHQpO3IudGQucmVnaXN0ZXJDbGFzcyhEdCk7dmFyIE10PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLkRFRkFVTFRfTUlOVkFMPS0uMDUsbi5ERUZBVUxUX01BWFZBTD0uMDUsbi5taW52YWw9ZS5taW52YWx8fG4uREVGQVVMVF9NSU5WQUwsbi5tYXh2YWw9ZS5tYXh2YWx8fG4uREVGQVVMVF9NQVhWQUwsbi5zZWVkPWUuc2VlZCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0KHIuYmQpKHQsdGhpcy5taW52YWwsdGhpcy5tYXh2YWwsZSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybnttaW52YWw6dGhpcy5taW52YWwsbWF4dmFsOnRoaXMubWF4dmFsLHNlZWQ6dGhpcy5zZWVkfX0sZS5jbGFzc05hbWU9XCJSYW5kb21Vbmlmb3JtXCIsZX0oUHQpO3IudGQucmVnaXN0ZXJDbGFzcyhNdCk7dmFyIGp0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLkRFRkFVTFRfTUVBTj0wLG4uREVGQVVMVF9TVERERVY9LjA1LG4ubWVhbj1lLm1lYW58fG4uREVGQVVMVF9NRUFOLG4uc3RkZGV2PWUuc3RkZGV2fHxuLkRFRkFVTFRfU1REREVWLG4uc2VlZD1lLnNlZWQsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSl7aWYoXCJmbG9hdDMyXCIhPT0oZT1lfHxcImZsb2F0MzJcIikmJlwiaW50MzJcIiE9PWUpdGhyb3cgbmV3IF8oXCJyYW5kb21Ob3JtYWwgZG9lcyBub3Qgc3VwcG9ydCBkVHlwZSBcIitlK1wiLlwiKTtyZXR1cm4geHQodCx0aGlzLm1lYW4sdGhpcy5zdGRkZXYsZSx0aGlzLnNlZWQpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57bWVhbjp0aGlzLm1lYW4sc3RkZGV2OnRoaXMuc3RkZGV2LHNlZWQ6dGhpcy5zZWVkfX0sZS5jbGFzc05hbWU9XCJSYW5kb21Ob3JtYWxcIixlfShQdCk7ci50ZC5yZWdpc3RlckNsYXNzKGp0KTt2YXIgQnQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uREVGQVVMVF9NRUFOPTAsbi5ERUZBVUxUX1NURERFVj0uMDUsbi5tZWFuPWUubWVhbnx8bi5ERUZBVUxUX01FQU4sbi5zdGRkZXY9ZS5zdGRkZXZ8fG4uREVGQVVMVF9TVERERVYsbi5zZWVkPWUuc2VlZCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXtpZihcImZsb2F0MzJcIiE9PShlPWV8fFwiZmxvYXQzMlwiKSYmXCJpbnQzMlwiIT09ZSl0aHJvdyBuZXcgXyhcInRydW5jYXRlZE5vcm1hbCBkb2VzIG5vdCBzdXBwb3J0IGRUeXBlIFwiK2UrXCIuXCIpO3JldHVybiBPYmplY3Qoci5uZSkodCx0aGlzLm1lYW4sdGhpcy5zdGRkZXYsZSx0aGlzLnNlZWQpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57bWVhbjp0aGlzLm1lYW4sc3RkZGV2OnRoaXMuc3RkZGV2LHNlZWQ6dGhpcy5zZWVkfX0sZS5jbGFzc05hbWU9XCJUcnVuY2F0ZWROb3JtYWxcIixlfShQdCk7ci50ZC5yZWdpc3RlckNsYXNzKEJ0KTt2YXIgTHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uZ2Fpbj1udWxsIT1lLmdhaW4/T2JqZWN0KHIucGQpKGUuZ2Fpbik6eSgxKSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZigyIT09dC5sZW5ndGh8fHRbMF0hPT10WzFdKXRocm93IG5ldyB3KFwiSWRlbnRpdHkgbWF0cml4IGluaXRpYWxpemVyIGNhbiBvbmx5IGJlIHVzZWQgZm9yIDJEIHNxdWFyZSBtYXRyaWNlcy5cIik7cmV0dXJuIE9iamVjdChyLnpjKShuLmdhaW4sT2JqZWN0KHIueGIpKHRbMF0pKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57Z2Fpbjp0aGlzLmdhaW4uZ2V0KCl9fSxlLmNsYXNzTmFtZT1cIklkZW50aXR5XCIsZX0oUHQpO3IudGQucmVnaXN0ZXJDbGFzcyhMdCk7dmFyIHp0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO2lmKGUuc2NhbGU8MCl0aHJvdyBuZXcgdyhcInNjYWxlIG11c3QgYmUgYSBwb3NpdGl2ZSBmbG9hdC4gR290OiBcIitlLnNjYWxlKTtyZXR1cm4gbi5zY2FsZT1udWxsPT1lLnNjYWxlPzE6ZS5zY2FsZSxuLm1vZGU9ZS5tb2RlLGZ1bmN0aW9uKHQpe2ooQXQsXCJGYW5Nb2RlXCIsdCl9KG4ubW9kZSksbi5kaXN0cmlidXRpb249ZS5kaXN0cmlidXRpb24sZnVuY3Rpb24odCl7aihDdCxcIkRpc3RyaWJ1dGlvblwiLHQpfShuLmRpc3RyaWJ1dGlvbiksbi5zZWVkPWUuc2VlZCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXt2YXIgbj1mdW5jdGlvbih0LGUpe3ZhciBuLHI7aWYodm9pZCAwPT09ZSYmKGU9XCJjaGFubmVsc0xhc3RcIiksSihlKSwyPT09dC5sZW5ndGgpbj10WzBdLHI9dFsxXTtlbHNlIGlmKC0xIT09WzMsNCw1XS5pbmRleE9mKHQubGVuZ3RoKSlpZihcImNoYW5uZWxzRmlyc3RcIj09PWUpe3ZhciBpPWN0KHQsMik7bj10WzFdKmkscj10WzBdKml9ZWxzZVwiY2hhbm5lbHNMYXN0XCI9PT1lJiYoaT1jdCh0LDAsdC5sZW5ndGgtMiksbj10W3QubGVuZ3RoLTJdKmkscj10W3QubGVuZ3RoLTFdKmkpO2Vsc2V7dmFyIGE9Y3QodCk7bj1NYXRoLnNxcnQoYSkscj1NYXRoLnNxcnQoYSl9cmV0dXJuW24scl19KHQpLGk9blswXSxhPW5bMV0sbz10aGlzLnNjYWxlO2lmKFwiZmFuSW5cIj09PXRoaXMubW9kZT9vLz1NYXRoLm1heCgxLGkpOlwiZmFuT3V0XCI9PT10aGlzLm1vZGU/by89TWF0aC5tYXgoMSxhKTpvLz1NYXRoLm1heCgxLChpK2EpLzIpLFwibm9ybWFsXCI9PT10aGlzLmRpc3RyaWJ1dGlvbil7dmFyIHM9TWF0aC5zcXJ0KG8pO2lmKFwiZmxvYXQzMlwiIT09KGU9ZXx8XCJmbG9hdDMyXCIpJiZcImludDMyXCIhPT1lKXRocm93IG5ldyBfKHRoaXMuZ2V0Q2xhc3NOYW1lKCkrXCIgZG9lcyBub3Qgc3VwcG9ydCBkVHlwZSBcIitlK1wiLlwiKTtyZXR1cm4gT2JqZWN0KHIubmUpKHQsMCxzLGUsdGhpcy5zZWVkKX12YXIgdT1NYXRoLnNxcnQoMypvKTtyZXR1cm4gT2JqZWN0KHIuYmQpKHQsLXUsdSxlKX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue3NjYWxlOnRoaXMuc2NhbGUsbW9kZTp0aGlzLm1vZGUsZGlzdHJpYnV0aW9uOnRoaXMuZGlzdHJpYnV0aW9uLHNlZWQ6dGhpcy5zZWVkfX0sZS5jbGFzc05hbWU9XCJWYXJpYW5jZVNjYWxpbmdcIixlfShQdCk7ci50ZC5yZWdpc3RlckNsYXNzKHp0KTt2YXIgRnQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMse3NjYWxlOjEsbW9kZTpcImZhbkF2Z1wiLGRpc3RyaWJ1dGlvbjpcInVuaWZvcm1cIixzZWVkOm51bGw9PWU/bnVsbDplLnNlZWR9KXx8dGhpc31yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmdldENsYXNzTmFtZT1mdW5jdGlvbigpe3JldHVybiB6dC5jbGFzc05hbWV9LGUuY2xhc3NOYW1lPVwiR2xvcm90VW5pZm9ybVwiLGV9KHp0KTtyLnRkLnJlZ2lzdGVyQ2xhc3MoRnQpO3ZhciBVdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3JldHVybiB0LmNhbGwodGhpcyx7c2NhbGU6MSxtb2RlOlwiZmFuQXZnXCIsZGlzdHJpYnV0aW9uOlwibm9ybWFsXCIsc2VlZDpudWxsPT1lP251bGw6ZS5zZWVkfSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5nZXRDbGFzc05hbWU9ZnVuY3Rpb24oKXtyZXR1cm4genQuY2xhc3NOYW1lfSxlLmNsYXNzTmFtZT1cIkdsb3JvdE5vcm1hbFwiLGV9KHp0KTtyLnRkLnJlZ2lzdGVyQ2xhc3MoVXQpO3ZhciBWdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3JldHVybiB0LmNhbGwodGhpcyx7c2NhbGU6Mixtb2RlOlwiZmFuSW5cIixkaXN0cmlidXRpb246XCJub3JtYWxcIixzZWVkOm51bGw9PWU/bnVsbDplLnNlZWR9KXx8dGhpc31yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmdldENsYXNzTmFtZT1mdW5jdGlvbigpe3JldHVybiB6dC5jbGFzc05hbWV9LGUuY2xhc3NOYW1lPVwiSGVOb3JtYWxcIixlfSh6dCk7ci50ZC5yZWdpc3RlckNsYXNzKFZ0KTt2YXIgV3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMse3NjYWxlOjEsbW9kZTpcImZhbkluXCIsZGlzdHJpYnV0aW9uOlwibm9ybWFsXCIsc2VlZDpudWxsPT1lP251bGw6ZS5zZWVkfSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5nZXRDbGFzc05hbWU9ZnVuY3Rpb24oKXtyZXR1cm4genQuY2xhc3NOYW1lfSxlLmNsYXNzTmFtZT1cIkxlQ3VuTm9ybWFsXCIsZX0oenQpO3IudGQucmVnaXN0ZXJDbGFzcyhXdCk7dmFyIHF0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO2lmKG4uREVGQVVMVF9HQUlOPTEsbi5nYWluPW51bGw9PWUuZ2Fpbj9uLkRFRkFVTFRfR0FJTjplLmdhaW4sbi5zZWVkPWUuc2VlZCxudWxsIT1uLnNlZWQpdGhyb3cgbmV3IF8oXCJSYW5kb20gc2VlZCBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIE9ydGhvZ29uYWwgSW5pdGlhbGl6ZXIgeWV0LlwiKTtyZXR1cm4gbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7aWYoMiE9PXQubGVuZ3RoKXRocm93IG5ldyBfKFwiVGhlIE9ydGhvZ29uYWwgSW5pdGlhbGl6ZXIgZG9lcyBub3Qgc3VwcG9ydCBub24tMkQgc2hhcGVzIHlldC5cIik7dFswXSp0WzFdPjJlMyYmY29uc29sZS53YXJuKFwiT3J0aG9nb25hbCBpbml0aWFsaXplciBpcyBiZWluZyBjYWxsZWQgb24gYSBtYXRyaXggd2l0aCBtb3JlIHRoYW4gMjAwMCAoXCIrdFswXSp0WzFdK1wiKSBlbGVtZW50czogU2xvd25lc3MgbWF5IHJlc3VsdC5cIik7dmFyIGU9eHQodFswXT50WzFdP1t0WzFdLHRbMF1dOnQsMCwxLFwiZmxvYXQzMlwiKSxpPXIuWGIuZ3JhbVNjaG1pZHQoZSk7cmV0dXJuIHRbMF0+dFsxXSYmKGk9aS50cmFuc3Bvc2UoKSksT2JqZWN0KHIuemMpKHkobi5nYWluKSxpKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57Z2Fpbjp0aGlzLmdhaW4sc2VlZDp0aGlzLnNlZWR9fSxlLmNsYXNzTmFtZT1cIk9ydGhvZ29uYWxcIixlfShQdCk7ci50ZC5yZWdpc3RlckNsYXNzKHF0KTt2YXIgJHQ9e2NvbnN0YW50OlwiQ29uc3RhbnRcIixnbG9yb3ROb3JtYWw6XCJHbG9yb3ROb3JtYWxcIixnbG9yb3RVbmlmb3JtOlwiR2xvcm90VW5pZm9ybVwiLGhlTm9ybWFsOlwiSGVOb3JtYWxcIixpZGVudGl0eTpcIklkZW50aXR5XCIsbGVDdW5Ob3JtYWw6XCJMZUN1bk5vcm1hbFwiLG9uZXM6XCJPbmVzXCIsb3J0aG9nb25hbDpcIk9ydGhvZ29uYWxcIixyYW5kb21Ob3JtYWw6XCJSYW5kb21Ob3JtYWxcIixyYW5kb21Vbmlmb3JtOlwiUmFuZG9tVW5pZm9ybVwiLHRydW5jYXRlZE5vcm1hbDpcIlRydW5jYXRlZE5vcm1hbFwiLHZhcmlhbmNlU2NhbGluZzpcIlZhcmlhbmNlU2NhbGluZ1wiLHplcm9zOlwiWmVyb3NcIn07ZnVuY3Rpb24gSHQodCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30pLFQodCxyLnRkLlNlcmlhbGl6YXRpb25NYXAuZ2V0TWFwKCkuY2xhc3NOYW1lTWFwLGUsXCJpbml0aWFsaXplclwiKX1mdW5jdGlvbiBLdCh0KXtyZXR1cm4gUCh0KX1mdW5jdGlvbiBHdCh0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9dCBpbiAkdD8kdFt0XTp0O3JldHVyblwiR2xvcm90VW5pZm9ybVwiPT09ZT9uZXcgRnQ6XCJHbG9yb3ROb3JtYWxcIj09PWU/bmV3IFV0OlwiSGVOb3JtYWxcIj09PWU/bmV3IFZ0OlwiTGVDdW5Ob3JtYWxcIj09PWU/bmV3IFd0Okh0KHtjbGFzc05hbWU6ZSxjb25maWc6e319KX1yZXR1cm4gdCBpbnN0YW5jZW9mIFB0P3Q6SHQodCl9dmFyIFh0PU9iamVjdC5mcmVlemUoe3plcm9zOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBUdH0sb25lczpmdW5jdGlvbigpe3JldHVybiBuZXcgUnR9LGNvbnN0YW50OmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRHQodCl9LHJhbmRvbVVuaWZvcm06ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBNdCh0KX0scmFuZG9tTm9ybWFsOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcganQodCl9LHRydW5jYXRlZE5vcm1hbDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEJ0KHQpfSxpZGVudGl0eTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEx0KHQpfSx2YXJpYW5jZVNjYWxpbmc6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB6dCh0KX0sZ2xvcm90VW5pZm9ybTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEZ0KHQpfSxnbG9yb3ROb3JtYWw6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBVdCh0KX0saGVOb3JtYWw6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBWdCh0KX0sbGVDdW5Ob3JtYWw6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBXdCh0KX0sb3J0aG9nb25hbDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHF0KHQpfX0pO2Z1bmN0aW9uIFl0KHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpJiZBcnJheS5pc0FycmF5KHRbMF0pfWZ1bmN0aW9uIEp0KHQpe3JldHVybiAwPT09dC5sZW5ndGg/W106QXJyYXkuaXNBcnJheSh0WzBdKT90Olt0XX1mdW5jdGlvbiBadCh0KXt2YXIgZTtpZihBcnJheS5pc0FycmF5KHQpKXtpZigxIT09dC5sZW5ndGgpdGhyb3cgbmV3IHcoXCJFeHBlY3RlZCBUZW5zb3IgbGVuZ3RoIHRvIGJlIDE7IGdvdCBcIit0Lmxlbmd0aCk7ZT10WzBdfWVsc2UgZT10O3JldHVybiBlfWZ1bmN0aW9uIFF0KHQpe2lmKEFycmF5LmlzQXJyYXkodCkmJkFycmF5LmlzQXJyYXkodFswXSkpe2lmKDE9PT10Lmxlbmd0aClyZXR1cm4odD10KVswXTt0aHJvdyBuZXcgdyhcIkV4cGVjdGVkIGV4YWN0bHkgMSBTaGFwZTsgZ290IFwiK3QubGVuZ3RoKX1yZXR1cm4gdH1mdW5jdGlvbiB0ZSh0KXtmb3IodmFyIGU9MCxuPTAscj10O248ci5sZW5ndGg7bisrKXt2YXIgaT1yW25dOzA9PT1pLnNoYXBlLmxlbmd0aD9lKz0xOmUrPWkuc2hhcGUucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQqZX0pfXJldHVybiBlfXZhciBlZT1cIlZhcmlhYmxlXCIsbmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLGksYSl7dm9pZCAwPT09ZSYmKGU9XCJmbG9hdDMyXCIpLHZvaWQgMD09PW4mJihuPWVlKSx2b2lkIDA9PT1pJiYoaT0hMCksdm9pZCAwPT09YSYmKGE9bnVsbCksdGhpcy5kdHlwZT1udWxsPT1lP1wiZmxvYXQzMlwiOmUsdGhpcy5zaGFwZT10LnNoYXBlLHRoaXMuaWQ9aCgpLG49bnVsbD09bj9lZTpuLHRoaXMub3JpZ2luYWxOYW1lPWl0KG4pLHRoaXMubmFtZT1hdCh0aGlzLm9yaWdpbmFsTmFtZSksdGhpcy50cmFpbmFibGU9aSx0aGlzLmNvbnN0cmFpbnQ9YSx0aGlzLnZhbD1PYmplY3Qoci50ZSkodCx0aGlzLnRyYWluYWJsZSx0aGlzLm5hbWUsdGhpcy5kdHlwZSl9cmV0dXJuIHQucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hc3NlcnROb3REaXNwb3NlZCgpLHRoaXMudmFsfSx0LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hc3NlcnROb3REaXNwb3NlZCgpLGZ1bmN0aW9uKHQsZSl7aWYodC5zaGFwZS50b1N0cmluZygpIT09ZS5zaGFwZS50b1N0cmluZygpKXRocm93IG5ldyBFcnJvcihcIlNoYXBlIG1pc21hdGNoOiBcIitKU09OLnN0cmluZ2lmeSh0LnNoYXBlKStcIiB2cy4gXCIrSlNPTi5zdHJpbmdpZnkoZS5zaGFwZSkpfSh0aGlzLnZhbCx0KSx0aGlzLnZhbC5pZCE9PXQuaWQmJih0aGlzLnZhbC5hc3NpZ24odCksbnVsbCE9dGhpcy5jb25zdHJhaW50JiZ0aGlzLnZhbC5hc3NpZ24odGhpcy5jb25zdHJhaW50LmFwcGx5KHRoaXMudmFsKSkpLHRoaXN9LHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmFzc2VydE5vdERpc3Bvc2VkKCksdGhpcy52YWwuZGlzcG9zZSgpfSx0LnByb3RvdHlwZS5hc3NlcnROb3REaXNwb3NlZD1mdW5jdGlvbigpe2lmKHRoaXMudmFsLmlzRGlzcG9zZWQpdGhyb3cgbmV3IEVycm9yKFwiTGF5ZXJzVmFyaWFibGUgXCIrdGhpcy5uYW1lK1wiIGlzIGFscmVhZHkgZGlzcG9zZWQuXCIpfSx0fSgpO2Z1bmN0aW9uIHJlKHQpe3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5yZWFkKCl9KX1mdW5jdGlvbiBpZSh0KXt0Lm1hcChmdW5jdGlvbih0KXt0WzBdLndyaXRlKHRbMV0pfSl9dmFyIGFlPWZ1bmN0aW9uKHQpe3RoaXMuZHR5cGU9dC5kdHlwZSx0aGlzLnNoYXBlPXQuc2hhcGUsbnVsbCE9dC5zaGFwZT90aGlzLm5kaW09dC5zaGFwZS5sZW5ndGg6dGhpcy5uZGltPXQubmRpbSx0aGlzLm1heE5EaW09dC5tYXhORGltLHRoaXMubWluTkRpbT10Lm1pbk5EaW0sdGhpcy5heGVzPXQuYXhlc3x8e319LG9lPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8pe3RoaXMuZHR5cGU9dCx0aGlzLnNoYXBlPWUsdGhpcy5zb3VyY2VMYXllcj1uLHRoaXMuaW5wdXRzPXIsdGhpcy5jYWxsQXJncz1pLHRoaXMub3V0cHV0VGVuc29ySW5kZXg9byx0aGlzLmlkPWgoKSxudWxsIT1hJiYodGhpcy5vcmlnaW5hbE5hbWU9aXQoYSksdGhpcy5uYW1lPWF0KHRoaXMub3JpZ2luYWxOYW1lKSksdGhpcy5yYW5rPWUubGVuZ3RofSxzZT0wLHVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3RoaXMuY2FsbEFyZ3M9ZSx0aGlzLmlkPXNlKyssdGhpcy5vdXRib3VuZExheWVyPXQub3V0Ym91bmRMYXllcix0aGlzLmluYm91bmRMYXllcnM9dC5pbmJvdW5kTGF5ZXJzLHRoaXMubm9kZUluZGljZXM9dC5ub2RlSW5kaWNlcyx0aGlzLnRlbnNvckluZGljZXM9dC50ZW5zb3JJbmRpY2VzLHRoaXMuaW5wdXRUZW5zb3JzPXQuaW5wdXRUZW5zb3JzLHRoaXMub3V0cHV0VGVuc29ycz10Lm91dHB1dFRlbnNvcnMsdGhpcy5pbnB1dE1hc2tzPXQuaW5wdXRNYXNrcyx0aGlzLm91dHB1dE1hc2tzPXQub3V0cHV0TWFza3MsdGhpcy5pbnB1dFNoYXBlcz10LmlucHV0U2hhcGVzLHRoaXMub3V0cHV0U2hhcGVzPXQub3V0cHV0U2hhcGVzO2Zvcih2YXIgbj0wLHI9dC5pbmJvdW5kTGF5ZXJzO248ci5sZW5ndGg7bisrKXt2YXIgaT1yW25dO251bGwhPWkmJmkub3V0Ym91bmROb2Rlcy5wdXNoKHRoaXMpfXQub3V0Ym91bmRMYXllci5pbmJvdW5kTm9kZXMucHVzaCh0aGlzKX1yZXR1cm4gdC5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MCxuPXRoaXMuaW5ib3VuZExheWVycztlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTtudWxsIT1yP3QucHVzaChyLm5hbWUpOnQucHVzaChudWxsKX1yZXR1cm57b3V0Ym91bmRMYXllcjp0aGlzLm91dGJvdW5kTGF5ZXI/dGhpcy5vdXRib3VuZExheWVyLm5hbWU6bnVsbCxpbmJvdW5kTGF5ZXJzOnQsbm9kZUluZGljZXM6dGhpcy5ub2RlSW5kaWNlcyx0ZW5zb3JJbmRpY2VzOnRoaXMudGVuc29ySW5kaWNlc319LHR9KCksY2U9MCxsZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztuLl9jYWxsSG9vaz1udWxsLG4uX2FkZGVkV2VpZ2h0TmFtZXM9W10sbi5fc3RhdGVmdWw9ITEsbi5pZD1jZSsrLG4uYWN0aXZpdHlSZWd1bGFyaXplcj1udWxsLG4uaW5wdXRTcGVjPW51bGwsbi5zdXBwb3J0c01hc2tpbmc9ITEsbi5fdHJhaW5hYmxlV2VpZ2h0cz1bXSxuLl9ub25UcmFpbmFibGVXZWlnaHRzPVtdLG4uX2xvc3Nlcz1bXSxuLl91cGRhdGVzPVtdLG4uX2J1aWx0PSExLG4uaW5ib3VuZE5vZGVzPVtdLG4ub3V0Ym91bmROb2Rlcz1bXTt2YXIgcj1lLm5hbWU7aWYoIXIpe3ZhciBpPW4uZ2V0Q2xhc3NOYW1lKCk7cj1rKGkpK1wiX1wiK2QoaSl9aWYobi5uYW1lPXIsbi50cmFpbmFibGU9bnVsbD09ZS50cmFpbmFibGV8fGUudHJhaW5hYmxlLG4udXBkYXRhYmxlPW51bGw9PWUudXBkYXRhYmxlfHxlLnVwZGF0YWJsZSxudWxsIT1lLmlucHV0U2hhcGV8fG51bGwhPWUuYmF0Y2hJbnB1dFNoYXBlKXt2YXIgYT12b2lkIDA7aWYobnVsbCE9ZS5iYXRjaElucHV0U2hhcGUpYT1lLmJhdGNoSW5wdXRTaGFwZTtlbHNlIGlmKG51bGwhPWUuaW5wdXRTaGFwZSl7dmFyIG89bnVsbDtudWxsIT1lLmJhdGNoU2l6ZSYmKG89ZS5iYXRjaFNpemUpLGE9W29dLmNvbmNhdChlLmlucHV0U2hhcGUpfW4uYmF0Y2hJbnB1dFNoYXBlPWE7dmFyIHM9ZS5kdHlwZTtudWxsPT1zJiYocz1lLmlucHV0RFR5cGUpLG51bGw9PXMmJihzPVwiZmxvYXQzMlwiKSxuLmR0eXBlPXN9cmV0dXJuIG51bGwhPWUud2VpZ2h0cz9uLmluaXRpYWxXZWlnaHRzPWUud2VpZ2h0czpuLmluaXRpYWxXZWlnaHRzPW51bGwsbi5fcmVmQ291bnQ9bnVsbCxuLmZhc3RXZWlnaHRJbml0RHVyaW5nQnVpbGQ9ITEsbn1yZXR1cm4gYShlLHQpLGUubm9kZUtleT1mdW5jdGlvbih0LGUpe3JldHVybiB0Lm5hbWUrXCJfaWItXCIrZS50b1N0cmluZygpfSxlLnByb3RvdHlwZS5nZXROb2RlQXRJbmRleD1mdW5jdGlvbih0LGUpe2lmKDA9PT10aGlzLmluYm91bmROb2Rlcy5sZW5ndGgpdGhyb3cgbmV3IGIoXCJUaGUgbGF5ZXIgaGFzIG5ldmVyIGJlZW4gY2FsbGVkIGFuZCB0aHVzIGhhcyBubyBkZWZpbmVkIFwiK2UrXCIuXCIpO2lmKHRoaXMuaW5ib3VuZE5vZGVzLmxlbmd0aDw9dCl0aHJvdyBuZXcgdyhcIkFza2VkIHRvIGdldCBcIitlK1wiIGF0IG5vZGUgXCIrdCtcIiwgYnV0IHRoZSBsYXllciBoYXMgb25seSBcIit0aGlzLmluYm91bmROb2Rlcy5sZW5ndGgrXCIgaW5ib3VuZCBub2Rlcy5cIik7cmV0dXJuIHRoaXMuaW5ib3VuZE5vZGVzW3RdfSxlLnByb3RvdHlwZS5nZXRJbnB1dEF0PWZ1bmN0aW9uKHQpe3JldHVybiBJKHRoaXMuZ2V0Tm9kZUF0SW5kZXgodCxcImlucHV0XCIpLmlucHV0VGVuc29ycyl9LGUucHJvdG90eXBlLmdldE91dHB1dEF0PWZ1bmN0aW9uKHQpe3JldHVybiBJKHRoaXMuZ2V0Tm9kZUF0SW5kZXgodCxcIm91dHB1dFwiKS5vdXRwdXRUZW5zb3JzKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiaW5wdXRcIix7Z2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5pbmJvdW5kTm9kZXMubGVuZ3RoPjEpdGhyb3cgbmV3IHYoXCJMYXllciBcIit0aGlzLm5hbWUrJyBoYXMgbXVsdGlwbGUgaW5ib3VuZCBub2RlcywgaGVuY2UgdGhlIG5vdGlvbiBvZiBcImxheWVyIGlucHV0XCIgaXMgaWxsLWRlZmluZWQuIFVzZSBgZ2V0SW5wdXRBdChub2RlSW5kZXgpYCBpbnN0ZWFkLicpO2lmKDA9PT10aGlzLmluYm91bmROb2Rlcy5sZW5ndGgpdGhyb3cgbmV3IHYoXCJMYXllciBcIit0aGlzLm5hbWUrXCIgaXMgbm90IGNvbm5lY3RlZCwgbm8gaW5wdXQgdG8gcmV0dXJuLlwiKTtyZXR1cm4gSSh0aGlzLmdldE5vZGVBdEluZGV4KDAsXCJpbnB1dFwiKS5pbnB1dFRlbnNvcnMpfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm91dHB1dFwiLHtnZXQ6ZnVuY3Rpb24oKXtpZigwPT09dGhpcy5pbmJvdW5kTm9kZXMubGVuZ3RoKXRocm93IG5ldyB2KFwiTGF5ZXIgXCIrdGhpcy5uYW1lK1wiIGhhcyBubyBpbmJvdW5kIG5vZGVzLlwiKTtpZih0aGlzLmluYm91bmROb2Rlcy5sZW5ndGg+MSl0aHJvdyBuZXcgdihcIkxheWVyIFwiK3RoaXMubmFtZSsnIGhhcyBtdWx0aXBsZSBpbmJvdW5kIG5vZGVzLCBoZW5jZSB0aGUgbm90aW9uIG9mIFwibGF5ZXIgb3V0cHV0XCIgaXMgaWxsLWRlZmluZWQuIFVzZSBgZ2V0T3V0cHV0QXQobm9kZUluZGV4KWAgaW5zdGVhZC4nKTtyZXR1cm4gSSh0aGlzLmdldE5vZGVBdEluZGV4KDAsXCJvdXRwdXRcIikub3V0cHV0VGVuc29ycyl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwibG9zc2VzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb3NzZXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuY2FsY3VsYXRlTG9zc2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubG9zc2VzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdCgpfSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInVwZGF0ZXNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VwZGF0ZXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYnVpbHRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2J1aWx0fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fYnVpbHQ9dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ0cmFpbmFibGVXZWlnaHRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRyYWluYWJsZT90aGlzLl90cmFpbmFibGVXZWlnaHRzOltdfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fdHJhaW5hYmxlV2VpZ2h0cz10fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm5vblRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhaW5hYmxlP3RoaXMuX25vblRyYWluYWJsZVdlaWdodHM6dGhpcy5fdHJhaW5hYmxlV2VpZ2h0cy5jb25jYXQodGhpcy5fbm9uVHJhaW5hYmxlV2VpZ2h0cyl9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9ub25UcmFpbmFibGVXZWlnaHRzPXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwid2VpZ2h0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFpbmFibGVXZWlnaHRzLmNvbmNhdCh0aGlzLm5vblRyYWluYWJsZVdlaWdodHMpfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInN0YXRlZnVsXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGF0ZWZ1bH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5yZXNldFN0YXRlcz1mdW5jdGlvbigpe2lmKCF0aGlzLnN0YXRlZnVsKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjYWxsIHRoZSByZXNldFN0YXRlcygpIG1ldGhvZCBvZiBhIG5vbi1zdGF0ZWZ1bCBMYXllciBvYmplY3QuXCIpfSxlLnByb3RvdHlwZS5hc3NlcnRJbnB1dENvbXBhdGliaWxpdHk9ZnVuY3Rpb24odCl7aWYodD1PKHQpLG51bGwhPXRoaXMuaW5wdXRTcGVjJiYwIT09dGhpcy5pbnB1dFNwZWMubGVuZ3RoKXt2YXIgZT1PKHRoaXMuaW5wdXRTcGVjKTtpZih0Lmxlbmd0aCE9PWUubGVuZ3RoKXRocm93IG5ldyB3KFwiTGF5ZXIgXCIrdGhpcy5uYW1lK1wiIGV4cGVjdHMgXCIrZS5sZW5ndGgrXCIgaW5wdXRzLCBidXQgaXQgcmVjZWl2ZWQgXCIrdC5sZW5ndGgrXCIgaW5wdXQgdGVuc29ycy4gSW5wdXQgcmVjZWl2ZWQ6IFwiK3QpO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dLGk9ZVtuXTtpZihudWxsIT1pKXt2YXIgYT1yLnJhbms7aWYobnVsbCE9aS5uZGltJiZhIT09aS5uZGltKXRocm93IG5ldyB3KFwiSW5wdXQgXCIrbitcIiBpcyBpbmNvbXBhdGlibGUgd2l0aCBsYXllciBcIit0aGlzLm5hbWUrXCI6IGV4cGVjdGVkIG5kaW09XCIraS5uZGltK1wiLCBmb3VuZCBuZGltPVwiK2EpO2lmKG51bGwhPWkubWF4TkRpbSYmYT5pLm1heE5EaW0pdGhyb3cgbmV3IHcoXCJJbnB1dCBcIituK1wiIGlzIGluY29tcGF0aWJsZSB3aXRoIGxheWVyIFwiK3RoaXMubmFtZStcIjogZXhwZWN0ZWQgbWF4X25kaW09XCIraS5tYXhORGltK1wiLCBmb3VuZCBuZGltPVwiK2EpO2lmKG51bGwhPWkubWluTkRpbSYmYTxpLm1pbk5EaW0pdGhyb3cgbmV3IHcoXCJJbnB1dCBcIituK1wiIGlzIGluY29tcGF0aWJsZSB3aXRoIGxheWVyIFwiK3RoaXMubmFtZStcIjogZXhwZWN0ZWQgbWluX25kaW09XCIraS5taW5ORGltK1wiLCBmb3VuZCBuZGltPVwiK2ErXCIuXCIpO2lmKG51bGwhPWkuZHR5cGUmJnIuZHR5cGUhPT1pLmR0eXBlKXRocm93IG5ldyB3KFwiSW5wdXQgXCIrbitcIiBpcyBpbmNvbXBhdGlibGUgd2l0aCBsYXllciBcIit0aGlzLm5hbWUrXCIgOiBleHBlY3RlZCBkdHlwZT1cIitpLmR0eXBlK1wiLCBmb3VuZCBkdHlwZT1cIityLmR0eXBlK1wiLlwiKTtpZihpLmF4ZXMpe3ZhciBvPXIuc2hhcGU7Zm9yKHZhciBzIGluIGkuYXhlcyl7dmFyIHU9TnVtYmVyKHMpLGM9aS5heGVzW3NdLGw9dT49MD9vW3VdOm9bby5sZW5ndGgrdV07aWYobnVsbCE9YyYmLTE9PT1bYyxudWxsXS5pbmRleE9mKGwpKXRocm93IG5ldyB3KFwiSW5wdXQgXCIrbitcIiBpcyBpbmNvbXBhdGlibGUgd2l0aCBsYXllciBcIit0aGlzLm5hbWUrXCI6IGV4cGVjdGVkIGF4aXMgXCIrdStcIiBvZiBpbnB1dCBzaGFwZSB0byBoYXZlIHZhbHVlIFwiK2MrXCIgYnV0IGdvdCBzaGFwZSBcIitvK1wiLlwiKX19aWYobnVsbCE9aS5zaGFwZSlmb3IodmFyIGY9MDtmPGkuc2hhcGUubGVuZ3RoOysrZil7dmFyIGg9aS5zaGFwZVtmXSxwPXIuc2hhcGVbZl07aWYobnVsbCE9aCYmbnVsbCE9cCYmaCE9PXApdGhyb3cgbmV3IHcoXCJJbnB1dCBcIituK1wiIGlzIGluY29tcGF0aWJsZSB3aXRoIGxheWVyIFwiK3RoaXMubmFtZStcIjogZXhwZWN0ZWQgc2hhcGU9XCIraS5zaGFwZStcIiwgZm91bmQgc2hhcGU9JHt4U2hhcGV9LlwiKX19fX19LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdH0sZS5wcm90b3R5cGUuaW52b2tlQ2FsbEhvb2s9ZnVuY3Rpb24odCxlKXtudWxsIT10aGlzLl9jYWxsSG9vayYmdGhpcy5fY2FsbEhvb2sodCxlKX0sZS5wcm90b3R5cGUuc2V0Q2FsbEhvb2s9ZnVuY3Rpb24odCl7dGhpcy5fY2FsbEhvb2s9dH0sZS5wcm90b3R5cGUuY2xlYXJDYWxsSG9vaz1mdW5jdGlvbigpe3RoaXMuX2NhbGxIb29rPW51bGx9LGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztlPWV8fHt9LHRoaXMuYXNzZXJ0Tm90RGlzcG9zZWQoKTtmb3IodmFyIHI9Tyh0KSxpPSEwLGE9MCxvPXI7YTxvLmxlbmd0aDthKyspaWYoIShvW2FdaW5zdGFuY2VvZiBvZSkpe2k9ITE7YnJlYWt9Zm9yKHZhciBzPSEwLHU9MCxjPXI7dTxjLmxlbmd0aDt1KyspaWYoY1t1XWluc3RhbmNlb2Ygb2Upe3M9ITE7YnJlYWt9aWYoaT09PXMpdGhyb3cgbmV3IHcoXCJBcmd1bWVudHMgdG8gYXBwbHkoKSBtdXN0IGJlIGFsbCBTeW1ib2xpY1RlbnNvcnMgb3IgYWxsIFRlbnNvcnNcIik7cmV0dXJuIHJ0KHRoaXMubmFtZSxmdW5jdGlvbigpe2lmKCFuLmJ1aWx0KXtuLmFzc2VydElucHV0Q29tcGF0aWJpbGl0eSh0KTtmb3IodmFyIGk9W10sYT0wLG89Tyh0KTthPG8ubGVuZ3RoO2ErKyl7dmFyIHU9b1thXTtpLnB1c2godS5zaGFwZSl9bi5idWlsZChJKGkpKSxuLmJ1aWx0PSEwLG4uaW5pdGlhbFdlaWdodHMmJm4uc2V0V2VpZ2h0cyhuLmluaXRpYWxXZWlnaHRzKSxudWxsPT09bi5fcmVmQ291bnQmJnMmJihuLl9yZWZDb3VudD0xKX1pZihuLmFzc2VydElucHV0Q29tcGF0aWJpbGl0eSh0KSxzKXtmb3IodmFyIGM9W10sbD0wLGY9TyhtPW4uY2FsbCh0LGUpKTtsPGYubGVuZ3RoO2wrKyl7dmFyIGg9ZltsXTstMSE9PXIuaW5kZXhPZihoKSYmKGg9aC5jbG9uZSgpKSxjLnB1c2goaCl9aWYobT1JKGMpLG51bGwhPW4uYWN0aXZpdHlSZWd1bGFyaXplcil0aHJvdyBuZXcgXyhcIkxheWVyIGludm9jYXRpb24gaW4gdGhlIHByZXNlbmNlIG9mIGFjdGl2aXR5IHJlZ3VsYXJpemVyKHMpIGlzIG5vdCBzdXBwb3J0ZWQgeWV0LlwiKTtyZXR1cm4gbX12YXIgcD1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0wLHI9dD1PKHQpO248ci5sZW5ndGg7bisrKXt2YXIgaT1yW25dO2UucHVzaChpLnNoYXBlKX1yZXR1cm4gSShlKX0odCksZD1uLmNvbXB1dGVPdXRwdXRTaGFwZShwKSxtPXZvaWQgMCxnPVwiZmxvYXQzMlwiO2lmKG4ud2Fybk9uSW5jb21wYXRpYmxlSW5wdXRTaGFwZShBcnJheS5pc0FycmF5KHQpP3BbMF06cCksbT1udWxsIT1kJiZkLmxlbmd0aD4wJiZBcnJheS5pc0FycmF5KGRbMF0pP2QubWFwKGZ1bmN0aW9uKHIsaSl7cmV0dXJuIG5ldyBvZShnLHIsbixPKHQpLGUsbi5uYW1lLGkpfSk6bmV3IG9lKGcsZCxuLE8odCksZSxuLm5hbWUpLG4uYWRkSW5ib3VuZE5vZGUodCxtLG51bGwsbnVsbCxwLGQsZSksbi5fcmVmQ291bnQrKyxudWxsIT1uLmFjdGl2aXR5UmVndWxhcml6ZXIpdGhyb3cgbmV3IF8oXCJMYXllciBpbnZvY2F0aW9uIGluIHRoZSBwcmVzZW5jZSBvZiBhY3Rpdml0eSByZWd1bGFyaXplcihzKSBpcyBub3Qgc3VwcG9ydGVkIHlldC5cIik7cmV0dXJuIG19KX0sZS5wcm90b3R5cGUud2Fybk9uSW5jb21wYXRpYmxlSW5wdXRTaGFwZT1mdW5jdGlvbih0KXtpZihudWxsIT10aGlzLmJhdGNoSW5wdXRTaGFwZSlpZih0Lmxlbmd0aCE9PXRoaXMuYmF0Y2hJbnB1dFNoYXBlLmxlbmd0aCljb25zb2xlLndhcm4oXCJUaGUgcmFuayBvZiB0aGUgaW5wdXQgdGVuc29yIHByb3ZpZGVkIChzaGFwZTogXCIrSlNPTi5zdHJpbmdpZnkodCkrXCIpIGRvZXMgbm90IG1hdGNoIHRoYXQgb2YgdGhlIGJhdGNoSW5wdXRTaGFwZSAoXCIrSlNPTi5zdHJpbmdpZnkodGhpcy5iYXRjaElucHV0U2hhcGUpK1wiKSBvZiB0aGUgbGF5ZXIgXCIrdGhpcy5uYW1lKTtlbHNle3ZhciBlPSExO3RoaXMuYmF0Y2hJbnB1dFNoYXBlLmZvckVhY2goZnVuY3Rpb24obixyKXtudWxsIT1uJiZudWxsIT10W3JdJiZ0W3JdIT09biYmKGU9ITApfSksZSYmY29uc29sZS53YXJuKFwiVGhlIHNoYXBlIG9mIHRoZSBpbnB1dCB0ZW5zb3IgKFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiKSBkb2VzIG5vdCBtYXRjaCB0aGUgZXhwZWN0YXRpb24gb2YgbGF5ZXIgXCIrdGhpcy5uYW1lK1wiOiBcIitKU09OLnN0cmluZ2lmeSh0aGlzLmJhdGNoSW5wdXRTaGFwZSkpfX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwib3V0cHV0U2hhcGVcIix7Z2V0OmZ1bmN0aW9uKCl7aWYobnVsbD09dGhpcy5pbmJvdW5kTm9kZXN8fDA9PT10aGlzLmluYm91bmROb2Rlcy5sZW5ndGgpdGhyb3cgbmV3IHYoXCJUaGUgbGF5ZXIgXCIrdGhpcy5uYW1lK1wiIGhhcyBuZXZlciBiZWVuIGNhbGxlZCBhbmQgdGh1cyBoYXMgbm8gZGVmaW5lZCBvdXRwdXQgc2hhcGUuXCIpO2Zvcih2YXIgdD1bXSxlPTAsbj10aGlzLmluYm91bmROb2RlcztlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXSxpPUpTT04uc3RyaW5naWZ5KHIub3V0cHV0U2hhcGVzKTstMT09PXQuaW5kZXhPZihpKSYmdC5wdXNoKGkpfWlmKDE9PT10Lmxlbmd0aCl7dmFyIGE9dGhpcy5pbmJvdW5kTm9kZXNbMF0ub3V0cHV0U2hhcGVzO3JldHVybiBBcnJheS5pc0FycmF5KGEpJiZBcnJheS5pc0FycmF5KGFbMF0pJiYxPT09YS5sZW5ndGg/YVswXTphfXRocm93IG5ldyB2KFwiVGhlIGxheWVyIFwiK3RoaXMubmFtZSsnIGhhcyBtdWx0aXBsZSBpbmJvdW5kIG5vZGVzIHdpdGggZGlmZmVyZW50IG91dHB1dCBzaGFwZXMuIEhlbmNlIHRoZSBub3Rpb24gb2YgXCJvdXR1dCBzaGFwZVwiIGlzIGlsbC1kZWZpbmVkIGZvciB0aGUgbGF5ZXIuJyl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuY291bnRQYXJhbXM9ZnVuY3Rpb24oKXtpZighdGhpcy5idWlsdCl0aHJvdyBuZXcgYihcIllvdSB0cmllZCB0byBjYWxsIGNvdW50UGFyYW1zKCkgb24gXCIrdGhpcy5uYW1lK1wiLCBidXQgdGhlIGxheWVyIGlzIG5vdCBidWlsdCB5ZXQuIEJ1aWxkIGl0IGZpcnN0IGJ5IGNhbGxpbmcgYnVpbGQoYmF0Y2hJbnB1dFNoYXBlKS5cIik7cmV0dXJuIHRlKHRoaXMud2VpZ2h0cyl9LGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe3RoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLmdldFdlaWdodHM9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PSExKSxyZSh0P3RoaXMudHJhaW5hYmxlV2VpZ2h0czp0aGlzLndlaWdodHMpfSxlLnByb3RvdHlwZS5zZXRXZWlnaHRzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7T2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49ZS53ZWlnaHRzO2lmKG4ubGVuZ3RoIT09dC5sZW5ndGgpdGhyb3cgbmV3IHcoJ1lvdSBjYWxsZWQgc2V0V2VpZ2h0cyh3ZWlnaHRzKSBvbiBsYXllciBcIicrZS5uYW1lKydcIiB3aXRoIGEgd2VpZ2h0IGxpc3Qgb2YgbGVuZ3RoICcrdC5sZW5ndGgrXCIsIGJ1dCB0aGUgbGF5ZXIgd2FzIGV4cGVjdGluZyBcIituLmxlbmd0aCtcIiB3ZWlnaHRzLiBQcm92aWRlZCB3ZWlnaHRzOiBcIit0K1wiLi4uXCIpO2lmKDAhPT1uLmxlbmd0aCl7Zm9yKHZhciBpPVtdLGE9cmUobiksbz0wO288YS5sZW5ndGg7KytvKXt2YXIgcz1hW29dLHU9bltvXSxjPXRbb107aWYoIXIucWUuYXJyYXlzRXF1YWwocy5zaGFwZSxjLnNoYXBlKSl0aHJvdyBuZXcgdyhcIkxheWVyIHdlaWdodCBzaGFwZSBcIitzLnNoYXBlK1wiIG5vdCBjb21wYXRpYmxlIHdpdGggcHJvdmlkZWQgd2VpZ2h0IHNoYXBlIFwiK2Muc2hhcGUpO2kucHVzaChbdSxjXSl9aWUoaSl9fSl9LGUucHJvdG90eXBlLmFkZFdlaWdodD1mdW5jdGlvbih0LGUsbixyLGksYSxvKXtpZigtMSE9PXRoaXMuX2FkZGVkV2VpZ2h0TmFtZXMuaW5kZXhPZih0KSl0aHJvdyBuZXcgdyhcIkR1cGxpY2F0ZSB3ZWlnaHQgbmFtZSBcIit0K1wiIGZvciBsYXllciBcIit0aGlzLm5hbWUpO3RoaXMuX2FkZGVkV2VpZ2h0TmFtZXMucHVzaCh0KSxudWxsPT1uJiYobj1cImZsb2F0MzJcIiksdGhpcy5mYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkJiYocj1HdChcInplcm9zXCIpKTt2YXIgcz1yLmFwcGx5KGUsbiksdT1uZXcgbmUocyxuLHQsYSxvKTtyZXR1cm4gcy5kaXNwb3NlKCksbnVsbCE9aSYmdGhpcy5hZGRMb3NzKGZ1bmN0aW9uKCl7cmV0dXJuIGkuYXBwbHkodS5yZWFkKCkpfSksbnVsbD09YSYmKGE9ITApLGE/dGhpcy5fdHJhaW5hYmxlV2VpZ2h0cy5wdXNoKHUpOnRoaXMuX25vblRyYWluYWJsZVdlaWdodHMucHVzaCh1KSx1fSxlLnByb3RvdHlwZS5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkPWZ1bmN0aW9uKHQpe3RoaXMuZmFzdFdlaWdodEluaXREdXJpbmdCdWlsZD10fSxlLnByb3RvdHlwZS5hZGRMb3NzPWZ1bmN0aW9uKHQpe3ZhciBlO251bGw9PXR8fEFycmF5LmlzQXJyYXkodCkmJjA9PT10Lmxlbmd0aHx8KHQ9Tyh0KSx2b2lkIDAhPT10aGlzLl9sb3NzZXMmJm51bGwhPT10aGlzLl9sb3NzZXMmJihlPXRoaXMubG9zc2VzKS5wdXNoLmFwcGx5KGUsdCkpfSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGUucHJvdG90eXBlLmNvbXB1dGVNYXNrPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZighdGhpcy5zdXBwb3J0c01hc2tpbmcpe2lmKG51bGwhPWUpe2lmKCFBcnJheS5pc0FycmF5KGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJMYXllciBcIit0aGlzLm5hbWUrXCIgZG9lcyBub3Qgc3VwcG9ydCBtYXNraW5nLCBidXQgd2FzIHBhc3NlZCBhbiBpbnB1dE1hc2suXCIpO2UuZm9yRWFjaChmdW5jdGlvbih0KXtpZihudWxsIT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJMYXllciBcIituLm5hbWUrXCIgZG9lcyBub3Qgc3VwcG9ydCBtYXNraW5nLCBidXQgd2FzIHBhc3NlZCBhbiBpbnB1dE1hc2suXCIpfSl9cmV0dXJuIG51bGx9cmV0dXJuIGV9LGUucHJvdG90eXBlLmFkZEluYm91bmROb2RlPWZ1bmN0aW9uKHQsZSxuLHIsaSxhLG8pe3ZvaWQgMD09PW8mJihvPW51bGwpO3ZhciBzPU8odCk7ZT1PKGUpLG49TyhuKSxyPU8ociksaT1KdChpKSxhPUp0KGEpO2Zvcih2YXIgdT1bXSxjPVtdLGw9W10sZj0wLGg9cztmPGgubGVuZ3RoO2YrKyl7dmFyIHA9aFtmXTt1LnB1c2gocC5zb3VyY2VMYXllciksYy5wdXNoKHAubm9kZUluZGV4KSxsLnB1c2gocC50ZW5zb3JJbmRleCl9bmV3IHVlKHtvdXRib3VuZExheWVyOnRoaXMsaW5ib3VuZExheWVyczp1LG5vZGVJbmRpY2VzOmMsdGVuc29ySW5kaWNlczpsLGlucHV0VGVuc29yczpzLG91dHB1dFRlbnNvcnM6ZSxpbnB1dE1hc2tzOm4sb3V0cHV0TWFza3M6cixpbnB1dFNoYXBlczppLG91dHB1dFNoYXBlczphfSxvKTtmb3IodmFyIGQ9MDtkPGUubGVuZ3RoO2QrKyllW2RdLnNvdXJjZUxheWVyPXRoaXMsZVtkXS5ub2RlSW5kZXg9dGhpcy5pbmJvdW5kTm9kZXMubGVuZ3RoLTEsZVtkXS50ZW5zb3JJbmRleD1kfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgdD17bmFtZTp0aGlzLm5hbWUsdHJhaW5hYmxlOnRoaXMudHJhaW5hYmxlfTtyZXR1cm4gbnVsbCE9dGhpcy5iYXRjaElucHV0U2hhcGUmJih0LmJhdGNoSW5wdXRTaGFwZT10aGlzLmJhdGNoSW5wdXRTaGFwZSksbnVsbCE9dGhpcy5kdHlwZSYmKHQuZHR5cGU9dGhpcy5kdHlwZSksdH0sZS5wcm90b3R5cGUuZGlzcG9zZVdlaWdodHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53ZWlnaHRzLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIHQuZGlzcG9zZSgpfSksdGhpcy53ZWlnaHRzLmxlbmd0aH0sZS5wcm90b3R5cGUuYXNzZXJ0Tm90RGlzcG9zZWQ9ZnVuY3Rpb24oKXtpZigwPT09dGhpcy5fcmVmQ291bnQpdGhyb3cgbmV3IEVycm9yKFwiTGF5ZXIgJ1wiK3RoaXMubmFtZStcIicgaXMgYWxyZWFkeSBkaXNwb3NlZC5cIil9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtpZighdGhpcy5idWlsdCl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZGlzcG9zZSBMYXllciBcIit0aGlzLm5hbWUrXCIgYmVjYXVzZSBpdCBoYXMgbm90IGJlZW4gYnVpbHQgeWV0LlwiKTtpZihudWxsPT09dGhpcy5fcmVmQ291bnQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGRpc3Bvc2UgTGF5ZXIgXCIrdGhpcy5uYW1lK1wiIGJlY2F1c2UgaXQgaGFzIG5vdCBiZWVuIHVzZWQgeWV0LlwiKTt0aGlzLmFzc2VydE5vdERpc3Bvc2VkKCk7dmFyIHQ9MDtyZXR1cm4gMD09LS10aGlzLl9yZWZDb3VudCYmKHQ9dGhpcy5kaXNwb3NlV2VpZ2h0cygpKSx7cmVmQ291bnRBZnRlckRpc3Bvc2U6dGhpcy5fcmVmQ291bnQsbnVtRGlzcG9zZWRWYXJpYWJsZXM6dH19LGV9KHIudGQuU2VyaWFsaXphYmxlKTt2YXIgZmUsaGUscGU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyx7ZHR5cGU6ZS5kdHlwZSxuYW1lOm51bGwhPWUubmFtZT9lLm5hbWU6ZChcImlucHV0XCIpLnRvU3RyaW5nKCl9KXx8dGhpcztpZihudWxsPT1lLmJhdGNoU2l6ZSYmKGUuYmF0Y2hTaXplPW51bGwpLG51bGw9PWUuc3BhcnNlJiYoZS5zcGFyc2U9ITEpLG4udHJhaW5hYmxlPSExLG4uYnVpbHQ9ITAsbi5zcGFyc2U9ZS5zcGFyc2UsbnVsbCE9ZS5pbnB1dFNoYXBlJiZudWxsIT1lLmJhdGNoSW5wdXRTaGFwZSl0aHJvdyBuZXcgdyhcIk9ubHkgcHJvdmlkZSB0aGUgaW5wdXRTaGFwZSBPUiBiYXRjaElucHV0U2hhcGUgYXJndW1lbnQgdG8gaW5wdXRMYXllciwgbm90IGJvdGggYXQgdGhlIHNhbWUgdGltZS5cIik7dmFyIHI9ZS5iYXRjaElucHV0U2hhcGU7aWYobnVsbD09cil7aWYobnVsbD09ZS5pbnB1dFNoYXBlKXRocm93IG5ldyB3KFwiQW4gSW5wdXRMYXllciBzaG91bGQgYmUgcGFzc2VkIGVpdGhlciBhIGBiYXRjaElucHV0U2hhcGVgIG9yIGFuIGBpbnB1dFNoYXBlYC5cIik7cj1bZS5iYXRjaFNpemVdLmNvbmNhdChlLmlucHV0U2hhcGUpfWVsc2UgaWYobnVsbCE9ZS5iYXRjaFNpemUpdGhyb3cgbmV3IHcoXCJDYW5ub3Qgc3BlY2lmeSBiYXRjaFNpemUgaWYgYmF0Y2hJbnB1dFNoYXBlIGlzc3BlY2lmaWVkIHdoZW4gY3JlYXRpbmcgYW4gSW5wdXRMYXllci5cIik7dmFyIGk9ZS5kdHlwZXx8XCJmbG9hdDMyXCI7bi5iYXRjaElucHV0U2hhcGU9cixuLmR0eXBlPWksbi5pbnB1dFNwZWM9W3tzaGFwZTpyfV07dmFyIGE9bmV3IG9lKG4uZHR5cGUsbi5iYXRjaElucHV0U2hhcGUsbixbXSx7fSxuLm5hbWUpO3JldHVybiBhLm5vZGVJbmRleD0wLGEudGVuc29ySW5kZXg9MCxuZXcgdWUoe291dGJvdW5kTGF5ZXI6bixpbmJvdW5kTGF5ZXJzOltdLG5vZGVJbmRpY2VzOltdLHRlbnNvckluZGljZXM6W10saW5wdXRUZW5zb3JzOlthXSxvdXRwdXRUZW5zb3JzOlthXSxpbnB1dE1hc2tzOltudWxsXSxvdXRwdXRNYXNrczpbbnVsbF0saW5wdXRTaGFwZXM6W3JdLG91dHB1dFNoYXBlczpbcl19KSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgdyhcIkNhbm5vdCBwYXNzIGFueSBpbnB1dCB0byBhbiBJbnB1dExheWVyJ3MgYXBwbHkoKSBtZXRob2QuIElucHV0TGF5ZXIgbmFtZTogXCIrdGhpcy5uYW1lKX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3JldHVybntyZWZDb3VudEFmdGVyRGlzcG9zZTp0aGlzLl9yZWZDb3VudCxudW1EaXNwb3NlZFZhcmlhYmxlczowfX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7cmV0dXJue2JhdGNoSW5wdXRTaGFwZTp0aGlzLmJhdGNoSW5wdXRTaGFwZSxkdHlwZTp0aGlzLmR0eXBlLHNwYXJzZTp0aGlzLnNwYXJzZSxuYW1lOnRoaXMubmFtZX19LGUuY2xhc3NOYW1lPVwiSW5wdXRMYXllclwiLGV9KGxlKTtmdW5jdGlvbiBkZSh0KXtpZihudWxsPT10LmJhdGNoU2hhcGUmJm51bGw9PXQuc2hhcGUpdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgdG8gSW5wdXQgZWl0aGVyIGEgYHNoYXBlYCBvciBhIGBiYXRjaFNoYXBlYCBhcmd1bWVudC4gTm90ZSB0aGF0IGBzaGFwZWAgZG9lcyBub3QgaW5jbHVkZSB0aGUgYmF0Y2ggZGltZW5zaW9uLlwiKTtpZihudWxsIT10LmJhdGNoU2hhcGUmJm51bGwhPXQuc2hhcGUpdGhyb3cgbmV3IHcoXCJQbGVhc2UgcHJvdmlkZSBlaXRoZXIgYSBgc2hhcGVgIG9yIGBiYXRjaFNoYXBlYCBhcmd1bWVudCB0byBJbnB1dCwgYnV0IG5vdCBib3RoLlwiKTt2YXIgZT10LmJhdGNoU2hhcGU7bnVsbCE9dC5zaGFwZSYmbnVsbD09ZSYmKGU9W251bGxdLmNvbmNhdCh0LnNoYXBlKSk7dmFyIG49dC5kdHlwZTtyZXR1cm4gbnVsbD09biYmKG49XCJmbG9hdDMyXCIpLG5ldyBwZSh7YmF0Y2hJbnB1dFNoYXBlOmUsbmFtZTp0Lm5hbWUsZHR5cGU6bixzcGFyc2U6dC5zcGFyc2V9KS5pbmJvdW5kTm9kZXNbMF0ub3V0cHV0VGVuc29yc1swXX1mdW5jdGlvbiBtZSh0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLGksYSxvLHMsdSxsO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oYyl7c3dpdGNoKGMubGFiZWwpe2Nhc2UgMDppZihudWxsPT10KXJldHVyblsyXTtmb3IoYSBpbiBlPVtdLG49W10saT1bXSx0KVwibnVtYmVyXCIhPXR5cGVvZihvPXRbYV0pJiYocz1vLGUucHVzaChzLmRhdGEoKSksbi5wdXNoKGEpLGkucHVzaChzKSk7cmV0dXJuWzQsUHJvbWlzZS5hbGwoZSldO2Nhc2UgMTpmb3IodT1jLnNlbnQoKSxsPTA7bDx1Lmxlbmd0aDsrK2wpdFtuW2xdXT11W2xdWzBdO3JldHVybiBPYmplY3Qoci5qYikoaSksWzJdfX0pfSl9ZnVuY3Rpb24gZ2UodCl7aWYobnVsbCE9dClmb3IodmFyIGUgaW4gdCl7dmFyIG49dFtlXTtcIm51bWJlclwiIT10eXBlb2YgbiYmbi5kaXNwb3NlKCl9fXIudGQucmVnaXN0ZXJDbGFzcyhwZSksKGhlPWZlfHwoZmU9e30pKVtoZS5TSUxFTlQ9MF09XCJTSUxFTlRcIixoZVtoZS5WRVJCT1NFPTFdPVwiVkVSQk9TRVwiO3ZhciB5ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt0aGlzLnZhbGlkYXRpb25EYXRhPW51bGx9cmV0dXJuIHQucHJvdG90eXBlLnNldFBhcmFtcz1mdW5jdGlvbih0KXt0aGlzLnBhcmFtcz10fSx0LnByb3RvdHlwZS5vbkVwb2NoQmVnaW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyXX0pfSl9LHQucHJvdG90eXBlLm9uRXBvY2hFbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyXX0pfSl9LHQucHJvdG90eXBlLm9uQmF0Y2hCZWdpbj1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuWzJdfSl9KX0sdC5wcm90b3R5cGUub25CYXRjaEVuZD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuWzJdfSl9KX0sdC5wcm90b3R5cGUub25UcmFpbkJlZ2luPWZ1bmN0aW9uKHQpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuWzJdfSl9KX0sdC5wcm90b3R5cGUub25UcmFpbkVuZD1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyXX0pfSl9LHQucHJvdG90eXBlLnNldE1vZGVsPWZ1bmN0aW9uKHQpe30sdH0oKSx2ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt2b2lkIDA9PT1lJiYoZT0xMCksbnVsbD09dCYmKHQ9W10pLHRoaXMuY2FsbGJhY2tzPXQsdGhpcy5xdWV1ZUxlbmd0aD1lfXJldHVybiB0LnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24odCl7dGhpcy5jYWxsYmFja3MucHVzaCh0KX0sdC5wcm90b3R5cGUuc2V0UGFyYW1zPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dGhpcy5jYWxsYmFja3M7ZTxuLmxlbmd0aDtlKyspbltlXS5zZXRQYXJhbXModCl9LHQucHJvdG90eXBlLnNldE1vZGVsPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dGhpcy5jYWxsYmFja3M7ZTxuLmxlbmd0aDtlKyspbltlXS5zZXRNb2RlbCh0KX0sdC5wcm90b3R5cGUub25FcG9jaEJlZ2luPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4scjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGkpe3N3aXRjaChpLmxhYmVsKXtjYXNlIDA6bnVsbD09ZSYmKGU9e30pLG49MCxyPXRoaXMuY2FsbGJhY2tzLGkubGFiZWw9MTtjYXNlIDE6cmV0dXJuIG48ci5sZW5ndGg/WzQscltuXS5vbkVwb2NoQmVnaW4odCxlKV06WzMsNF07Y2FzZSAyOmkuc2VudCgpLGkubGFiZWw9MztjYXNlIDM6cmV0dXJuIG4rKyxbMywxXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9LHQucHJvdG90eXBlLm9uRXBvY2hFbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixyO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oaSl7c3dpdGNoKGkubGFiZWwpe2Nhc2UgMDpudWxsPT1lJiYoZT17fSksbj0wLHI9dGhpcy5jYWxsYmFja3MsaS5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gbjxyLmxlbmd0aD9bNCxyW25dLm9uRXBvY2hFbmQodCxlKV06WzMsNF07Y2FzZSAyOmkuc2VudCgpLGkubGFiZWw9MztjYXNlIDM6cmV0dXJuIG4rKyxbMywxXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9LHQucHJvdG90eXBlLm9uQmF0Y2hCZWdpbj1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHI7cmV0dXJuIGModGhpcyxmdW5jdGlvbihpKXtzd2l0Y2goaS5sYWJlbCl7Y2FzZSAwOm51bGw9PWUmJihlPXt9KSxuPTAscj10aGlzLmNhbGxiYWNrcyxpLmxhYmVsPTE7Y2FzZSAxOnJldHVybiBuPHIubGVuZ3RoP1s0LHJbbl0ub25CYXRjaEJlZ2luKHQsZSldOlszLDRdO2Nhc2UgMjppLnNlbnQoKSxpLmxhYmVsPTM7Y2FzZSAzOnJldHVybiBuKyssWzMsMV07Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5vbkJhdGNoRW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4scjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGkpe3N3aXRjaChpLmxhYmVsKXtjYXNlIDA6bnVsbD09ZSYmKGU9e30pLG49MCxyPXRoaXMuY2FsbGJhY2tzLGkubGFiZWw9MTtjYXNlIDE6cmV0dXJuIG48ci5sZW5ndGg/WzQscltuXS5vbkJhdGNoRW5kKHQsZSldOlszLDRdO2Nhc2UgMjppLnNlbnQoKSxpLmxhYmVsPTM7Y2FzZSAzOnJldHVybiBuKyssWzMsMV07Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5vblRyYWluQmVnaW49ZnVuY3Rpb24odCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6bnVsbD09dCYmKHQ9e30pLGU9MCxuPXRoaXMuY2FsbGJhY2tzLHIubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGU8bi5sZW5ndGg/WzQsbltlXS5vblRyYWluQmVnaW4odCldOlszLDRdO2Nhc2UgMjpyLnNlbnQoKSxyLmxhYmVsPTM7Y2FzZSAzOnJldHVybiBlKyssWzMsMV07Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5vblRyYWluRW5kPWZ1bmN0aW9uKHQpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG47cmV0dXJuIGModGhpcyxmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOm51bGw9PXQmJih0PXt9KSxlPTAsbj10aGlzLmNhbGxiYWNrcyxyLmxhYmVsPTE7Y2FzZSAxOnJldHVybiBlPG4ubGVuZ3RoP1s0LG5bZV0ub25UcmFpbkVuZCh0KV06WzMsNF07Y2FzZSAyOnIuc2VudCgpLHIubGFiZWw9MztjYXNlIDM6cmV0dXJuIGUrKyxbMywxXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9LHR9KCksYmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMueWllbGRFdmVyeT10LHRoaXMuYmF0Y2hDb3VudD0wLHRoaXMuYmF0Y2hEdXJhdGlvbnNNaWxsaXM9W10sdGhpcy5hdXRvWWllbGRFdmVyeUJhdGNoZXM9bnVsbCx0aGlzLmJhdGNoU3RhcnRNaWxsaXM9ci5xZS5ub3coKX1yZXR1cm4gdC5wcm90b3R5cGUucmVzb2x2ZU9uZVRlbnNvckluTG9ncz1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHIsaSxhO3JldHVybiBjKHRoaXMsZnVuY3Rpb24obyl7c3dpdGNoKG8ubGFiZWwpe2Nhc2UgMDpmb3IobiBpbiBlPVtdLHQpZS5wdXNoKG4pO3I9MCxvLmxhYmVsPTE7Y2FzZSAxOnJldHVybiByPGUubGVuZ3RoPyhpPWVbcl0sXCJudW1iZXJcIj09dHlwZW9mKGE9dFtpXSk/WzMsM106WzQsYS5kYXRhKCldKTpbMyw0XTtjYXNlIDI6cmV0dXJuIG8uc2VudCgpLFszLDRdO2Nhc2UgMzpyZXR1cm4gcisrLFszLDFdO2Nhc2UgNDpyZXR1cm5bMl19fSl9KX0sdC5wcm90b3R5cGUubWF5YmVZaWVsZE9uQmF0Y2g9ZnVuY3Rpb24oZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4saTtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGEpe3N3aXRjaChhLmxhYmVsKXtjYXNlIDA6cmV0dXJuXCJhdXRvXCIhPT10aGlzLnlpZWxkRXZlcnk/WzMsN106KHRoaXMuYmF0Y2hDb3VudCsrLG51bGwhPXRoaXMuYXV0b1lpZWxkRXZlcnlCYXRjaGVzP1szLDNdOls0LHRoaXMucmVzb2x2ZU9uZVRlbnNvckluTG9ncyhlKV0pO2Nhc2UgMTpyZXR1cm4gYS5zZW50KCksbj1yLnFlLm5vdygpLFs0LE9iamVjdChyLkVjKSgpXTtjYXNlIDI6cmV0dXJuIGEuc2VudCgpLHRoaXMuYmF0Y2hDb3VudD50LlNLSVBfRklSU1RfQkFUQ0hFUyYmKHRoaXMuYmF0Y2hEdXJhdGlvbnNNaWxsaXMucHVzaChuLXRoaXMuYmF0Y2hTdGFydE1pbGxpcyksdGhpcy5iYXRjaER1cmF0aW9uc01pbGxpcy5sZW5ndGg+PXQuREVDSVNJT05fQkFUQ0hfQ09VTlQmJihpPXRoaXMuYmF0Y2hEdXJhdGlvbnNNaWxsaXMucmVkdWNlKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQrZX0pL3RoaXMuYmF0Y2hEdXJhdGlvbnNNaWxsaXMubGVuZ3RoLHRoaXMuYXV0b1lpZWxkRXZlcnlCYXRjaGVzPU1hdGgucm91bmQodC5USFJFU0hPTERfTUlMTElTL2kpLHRoaXMuYXV0b1lpZWxkRXZlcnlCYXRjaGVzPDEmJih0aGlzLmF1dG9ZaWVsZEV2ZXJ5QmF0Y2hlcz0xKSkpLHRoaXMuYmF0Y2hTdGFydE1pbGxpcz1yLnFlLm5vdygpLHRoaXMubGFzdFlpZWxkQmF0Y2hDb3VudD10aGlzLmJhdGNoQ291bnQsWzMsNl07Y2FzZSAzOnJldHVybiB0aGlzLmJhdGNoQ291bnQtdGhpcy5sYXN0WWllbGRCYXRjaENvdW50Pj10aGlzLmF1dG9ZaWVsZEV2ZXJ5QmF0Y2hlcz9bNCxPYmplY3Qoci5FYykoKV06WzMsNl07Y2FzZSA0OnJldHVybiBhLnNlbnQoKSxbNCx0aGlzLnJlc29sdmVPbmVUZW5zb3JJbkxvZ3MoZSldO2Nhc2UgNTphLnNlbnQoKSx0aGlzLmxhc3RZaWVsZEJhdGNoQ291bnQ9dGhpcy5iYXRjaENvdW50LGEubGFiZWw9NjtjYXNlIDY6cmV0dXJuWzMsOV07Y2FzZSA3OnJldHVyblwiYmF0Y2hcIiE9PXRoaXMueWllbGRFdmVyeT9bMyw5XTpbNCxPYmplY3Qoci5FYykoKV07Y2FzZSA4OmEuc2VudCgpLGEubGFiZWw9OTtjYXNlIDk6cmV0dXJuWzJdfX0pfSl9LHQucHJvdG90eXBlLm1heWJlWWllbGRPbkVwb2NoPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVyblwiZXBvY2hcIiE9PXRoaXMueWllbGRFdmVyeT9bMywyXTpbNCxPYmplY3Qoci5FYykoKV07Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzJdfX0pfSl9LHQuU0tJUF9GSVJTVF9CQVRDSEVTPTEsdC5ERUNJU0lPTl9CQVRDSF9DT1VOVD0yLHQuVEhSRVNIT0xEX01JTExJUz0xNix0fSgpLHdlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBuLnlpZWxkRXZlcnk9ZXx8XCJhdXRvXCIsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLm9uVHJhaW5CZWdpbj1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmF1dG9ZaWVsZGVyPW5ldyBiZSh0aGlzLnlpZWxkRXZlcnkpLFsyXX0pfSl9LGUucHJvdG90eXBlLm9uRXBvY2hCZWdpbj1mdW5jdGlvbih0KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlZW49MCx0aGlzLnRvdGFscz17fSxbMl19KX0pfSxlLnByb3RvdHlwZS5vbkJhdGNoRW5kPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQsbixpLGEsbz10aGlzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24ocyl7c3dpdGNoKHMubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmF1dG9ZaWVsZGVyLm1heWJlWWllbGRPbkJhdGNoKGUpXTtjYXNlIDE6Zm9yKGEgaW4gcy5zZW50KCksbnVsbD09ZSYmKGU9e30pLHQ9bnVsbD09ZS5zaXplPzA6ZS5zaXplLHRoaXMuc2Vlbis9dCxuPWZ1bmN0aW9uKG4pe3ZhciBhPWVbbl07aWYoXCJudW1iZXJcIj09dHlwZW9mIGEpaS50b3RhbHMuaGFzT3duUHJvcGVydHkobil8fChpLnRvdGFsc1tuXT0wKSxpLnRvdGFsc1tuXT1pLnRvdGFsc1tuXSthKnQ7ZWxzZXt2YXIgcz12b2lkIDA7biBpbiBpLnRvdGFscz9zPWkudG90YWxzW25dOmkudG90YWxzW25dPXkoMCksaS50b3RhbHNbbl09T2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChyLnUpKG8udG90YWxzW25dLE9iamVjdChyLnpjKShhLHkodCkpKX0pLG51bGwhPXMmJnMuZGlzcG9zZSgpfX0saT10aGlzLGUpbihhKTtyZXR1cm5bMl19fSl9KX0sZS5wcm90b3R5cGUub25FcG9jaEVuZD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciB0LG4saSxhLG8scz10aGlzO3JldHVybiBjKHRoaXMsZnVuY3Rpb24odSl7c3dpdGNoKHUubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmF1dG9ZaWVsZGVyLm1heWJlWWllbGRPbkVwb2NoKCldO2Nhc2UgMTppZih1LnNlbnQoKSxudWxsIT1lKWZvcih0PWZ1bmN0aW9uKHQpe2lmKG51bGw9PW4udG90YWxzW3RdKXJldHVyblwiY29udGludWVcIjtcIm51bWJlclwiPT10eXBlb2Ygbi50b3RhbHNbdF0/ZVt0XT1uLnRvdGFsc1t0XS9uLnNlZW46T2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7ZVt0XT1PYmplY3Qoci56YykoT2JqZWN0KHIubGIpKHkoMSkseShzLnNlZW4pKSxzLnRvdGFsc1t0XSkscy50b3RhbHNbdF0uZGlzcG9zZSgpLE9iamVjdChyLlJiKShlW3RdKX0pfSxuPXRoaXMsaT0wLGE9dGhpcy5wYXJhbXMubWV0cmljcztpPGEubGVuZ3RoO2krKylvPWFbaV0sdChvKTtyZXR1cm5bMl19fSl9KX0sZX0oeWUpLF9lPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUub25UcmFpbkJlZ2luPWZ1bmN0aW9uKHQpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZXBvY2g9W10sdGhpcy5oaXN0b3J5PXt9LFsyXX0pfSl9LGUucHJvdG90eXBlLm9uRXBvY2hFbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe2ZvcihuIGluIG51bGw9PWUmJihlPXt9KSx0aGlzLmVwb2NoLnB1c2godCksZSludWxsPT10aGlzLmhpc3Rvcnlbbl0mJih0aGlzLmhpc3Rvcnlbbl09W10pLHRoaXMuaGlzdG9yeVtuXS5wdXNoKGVbbl0pO3JldHVyblsyXX0pfSl9LGUucHJvdG90eXBlLnN5bmNEYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIHQsZSxuLHIsaSxhLG8scyx1O3JldHVybiBjKHRoaXMsZnVuY3Rpb24oYyl7c3dpdGNoKGMubGFiZWwpe2Nhc2UgMDpmb3IociBpbiB0PVtdLGU9W10sbj1bXSx0aGlzLmhpc3RvcnkpZm9yKGk9dGhpcy5oaXN0b3J5W3JdLGE9MDthPGkubGVuZ3RoOysrYSlcIm51bWJlclwiIT10eXBlb2YgaVthXSYmKG89aVthXSx0LnB1c2goby5kYXRhKCkpLGUucHVzaChyKSxuLnB1c2goYSkpO3JldHVybls0LFByb21pc2UuYWxsKHQpXTtjYXNlIDE6Zm9yKHM9Yy5zZW50KCksdT0wO3U8cy5sZW5ndGg7Kyt1KXRoaXMuaGlzdG9yeVtlW3VdXVtuW3VdXS5kaXNwb3NlKCksdGhpcy5oaXN0b3J5W2VbdV1dW25bdV1dPXNbdV1bMF07cmV0dXJuWzJdfX0pfSl9LGV9KHllKSx4ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi50cmFpbkJlZ2luPWUub25UcmFpbkJlZ2luLG4udHJhaW5FbmQ9ZS5vblRyYWluRW5kLG4uZXBvY2hCZWdpbj1lLm9uRXBvY2hCZWdpbixuLmVwb2NoRW5kPWUub25FcG9jaEVuZCxuLmJhdGNoQmVnaW49ZS5vbkJhdGNoQmVnaW4sbi5iYXRjaEVuZD1lLm9uQmF0Y2hFbmQsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLm9uRXBvY2hCZWdpbj1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbnVsbD09dGhpcy5lcG9jaEJlZ2luP1szLDNdOls0LG1lKGUpXTtjYXNlIDE6cmV0dXJuIG4uc2VudCgpLFs0LHRoaXMuZXBvY2hCZWdpbih0LGUpXTtjYXNlIDI6bi5zZW50KCksbi5sYWJlbD0zO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0sZS5wcm90b3R5cGUub25FcG9jaEVuZD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7c3dpdGNoKG4ubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbnVsbD09dGhpcy5lcG9jaEVuZD9bMywzXTpbNCxtZShlKV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSxbNCx0aGlzLmVwb2NoRW5kKHQsZSldO2Nhc2UgMjpuLnNlbnQoKSxuLmxhYmVsPTM7Y2FzZSAzOnJldHVyblsyXX19KX0pfSxlLnByb3RvdHlwZS5vbkJhdGNoQmVnaW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG51bGw9PXRoaXMuYmF0Y2hCZWdpbj9bMywzXTpbNCxtZShlKV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSxbNCx0aGlzLmJhdGNoQmVnaW4odCxlKV07Y2FzZSAyOm4uc2VudCgpLG4ubGFiZWw9MztjYXNlIDM6cmV0dXJuWzJdfX0pfSl9LGUucHJvdG90eXBlLm9uQmF0Y2hFbmQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG51bGw9PXRoaXMuYmF0Y2hFbmQ/WzMsM106WzQsbWUoZSldO2Nhc2UgMTpyZXR1cm4gbi5zZW50KCksWzQsdGhpcy5iYXRjaEVuZCh0LGUpXTtjYXNlIDI6bi5zZW50KCksbi5sYWJlbD0zO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0sZS5wcm90b3R5cGUub25UcmFpbkJlZ2luPWZ1bmN0aW9uKHQpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24oZSl7c3dpdGNoKGUubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbnVsbD09dGhpcy50cmFpbkJlZ2luP1szLDNdOls0LG1lKHQpXTtjYXNlIDE6cmV0dXJuIGUuc2VudCgpLFs0LHRoaXMudHJhaW5CZWdpbih0KV07Y2FzZSAyOmUuc2VudCgpLGUubGFiZWw9MztjYXNlIDM6cmV0dXJuWzJdfX0pfSl9LGUucHJvdG90eXBlLm9uVHJhaW5FbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihlKXtzd2l0Y2goZS5sYWJlbCl7Y2FzZSAwOnJldHVybiBudWxsPT10aGlzLnRyYWluRW5kP1szLDNdOls0LG1lKHQpXTtjYXNlIDE6cmV0dXJuIGUuc2VudCgpLFs0LHRoaXMudHJhaW5FbmQodCldO2Nhc2UgMjplLnNlbnQoKSxlLmxhYmVsPTM7Y2FzZSAzOnJldHVyblsyXX19KX0pfSxlfSh5ZSk7ZnVuY3Rpb24gRWUodCl7cmV0dXJuIG51bGw9PXQ/bnVsbDp0IGluc3RhbmNlb2YgeWU/W3RdOkFycmF5LmlzQXJyYXkodCkmJnRbMF1pbnN0YW5jZW9mIHllP3Q6Tyh0KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB4ZSh0KX0pfXZhciBTZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIHQucmVnaXN0ZXJDYWxsYmFja0NvbnN0cnVjdG9yPWZ1bmN0aW9uKGUsbil7ci5xZS5hc3NlcnQoZT49MCYmTnVtYmVyLmlzSW50ZWdlcihlKSxcIlZlcmJvc2l0eSBsZXZlbCBpcyBleHBlY3RlZCB0byBiZSBhbiBpbnRlZ2VyID49IDAsIGJ1dCBnb3QgXCIrZSksdC5jaGVja0ZvckR1cGxpY2F0ZShuKSxudWxsPT10LmNvbnN0cnVjdG9yc1tlXSYmKHQuY29uc3RydWN0b3JzW2VdPVtdKSx0LmNvbnN0cnVjdG9yc1tlXS5wdXNoKG4pfSx0LmNoZWNrRm9yRHVwbGljYXRlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbiBpbiB0LmNvbnN0cnVjdG9ycyl0LmNvbnN0cnVjdG9yc1srbl0uZm9yRWFjaChmdW5jdGlvbih0KXtpZih0PT09ZSl0aHJvdyBuZXcgdyhcIkR1cGxpY2F0ZSBjYWxsYmFjayBjb25zdHJ1Y3Rvci5cIil9KX0sdC5jbGVhcj1mdW5jdGlvbigpe3QuY29uc3RydWN0b3JzPXt9fSx0LmNyZWF0ZUNhbGxiYWNrcz1mdW5jdGlvbihlKXt2YXIgbj1bXTtmb3IodmFyIHIgaW4gdC5jb25zdHJ1Y3RvcnMpe3ZhciBpPStyO2U+PWkmJm4ucHVzaC5hcHBseShuLHQuY29uc3RydWN0b3JzW2ldKX1yZXR1cm4gbi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB0fSl9LHQuY29uc3RydWN0b3JzPXt9LHR9KCk7ZnVuY3Rpb24gTmUodCxlLG4scixpLGEsbyxzLHUsYyl7dmFyIGw9bmV3IF9lLGY9W25ldyB3ZShlKV0uY29uY2F0KFNlLmNyZWF0ZUNhbGxiYWNrcyhuKSk7bnVsbCE9dCYmZi5wdXNoLmFwcGx5KGYsdCksZi5wdXNoKGwpO3ZhciBoPW5ldyB2ZShmKTtyZXR1cm4gaC5zZXRQYXJhbXMoe2Vwb2NoczpyLGluaXRpYWxFcG9jaDppLHNhbXBsZXM6YSxzdGVwczpvLGJhdGNoU2l6ZTpzLHZlcmJvc2U6bixkb1ZhbGlkYXRpb246dSxtZXRyaWNzOmN9KSx7Y2FsbGJhY2tMaXN0OmgsaGlzdG9yeTpsfX1mdW5jdGlvbiBJZSh0LGUpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgbj1PYmplY3Qoci5WZCkoTnQodCksZSwhMCksaT1PYmplY3Qoci56YykoT2JqZWN0KHIucGQpKGwoKSksT2JqZWN0KHIuS2MpKHQpKSxhPU9iamVjdChyLkxkKShPYmplY3Qoci5vYykobixpKSk7cmV0dXJuIE9iamVjdChyLmxiKSh0LGEpfSl9ZnVuY3Rpb24gT2UodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChyLnFjKShOdChPYmplY3Qoci5UZCkoZSx0KSksLTEpfSl9ZnVuY3Rpb24ga2UodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChyLnFjKShPYmplY3Qoci5yKShPYmplY3Qoci5UZCkoZSx0KSksLTEpfSl9ZnVuY3Rpb24gQWUodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49T2JqZWN0KHIuVGQpKHQsZSksaT1PYmplY3Qoci5RKShPYmplY3Qoci5yKSh0KSxsKCksTnVtYmVyLk1BWF9WQUxVRSksYT1PYmplY3Qoci5yKShPYmplY3Qoci5sYikobixpKSk7cmV0dXJuIE9iamVjdChyLnpjKSh5KDEwMCksT2JqZWN0KHIucWMpKGEsLTEpKX0pfWZ1bmN0aW9uIENlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPXkoMSksaT1PYmplY3Qoci5RKShlLGwoKSxOdW1iZXIuTUFYX1ZBTFVFKSxhPU9iamVjdChyLmFjKShPYmplY3Qoci51KShuLGkpKSxvPU9iamVjdChyLlEpKHQsbCgpLE51bWJlci5NQVhfVkFMVUUpLHM9T2JqZWN0KHIuYWMpKE9iamVjdChyLnUpKG4sbykpO3JldHVybiBPYmplY3Qoci5xYykoTnQoT2JqZWN0KHIuVGQpKGEscykpLC0xKX0pfWZ1bmN0aW9uIFBlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPXkoMCksaT15KDEpLGE9T2JqZWN0KHIub2MpKG4sT2JqZWN0KHIuVGQpKGksT2JqZWN0KHIuemMpKHQsZSkpKTtyZXR1cm4gT2JqZWN0KHIucWMpKE50KGEpLC0xKX0pfWZ1bmN0aW9uIFRlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPXkoMCksaT15KDEpLGE9T2JqZWN0KHIub2MpKG4sT2JqZWN0KHIuVGQpKGksT2JqZWN0KHIuemMpKHQsZSkpKTtyZXR1cm4gT2JqZWN0KHIucWMpKGEsLTEpfSl9ZnVuY3Rpb24gUmUodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49eSgwKSxpPXkoMSksYT1PYmplY3Qoci5WZCkoT2JqZWN0KHIuemMpKHQsZSksLTEpLG89T2JqZWN0KHIubWMpKE9iamVjdChyLnpjKShPYmplY3Qoci5UZCkoaSx0KSxlKSwtMSk7cmV0dXJuIE9iamVjdChyLm9jKShuLE9iamVjdChyLnUpKGksT2JqZWN0KHIuVGQpKG8sYSkpKX0pfWZ1bmN0aW9uIERlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPXkoTWF0aC5sb2coMikpLGk9T2JqZWN0KHIuVGQpKGUsdCksYT1PYmplY3Qoci5UZCkoT2JqZWN0KHIudSkoaSxPYmplY3Qoci5HZCkoT2JqZWN0KHIuemMpKHkoLTIpLGkpKSksbik7cmV0dXJuIE9iamVjdChyLnFjKShhLC0xKX0pfWZ1bmN0aW9uIE1lKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49ITEpLE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKG4pZT1PYmplY3Qoci5GZCkoZSk7ZWxzZXt2YXIgaT1PYmplY3Qoci5WZCkoZSxlLnNoYXBlLmxlbmd0aC0xLCEwKTtlPU9iamVjdChyLmxiKShlLGkpfXJldHVybiBlPU9iamVjdChyLlEpKGUsbCgpLDEtbCgpKSxPYmplY3Qoci5EYykoT2JqZWN0KHIuVmQpKE9iamVjdChyLnpjKSh0LnRvRmxvYXQoKSxPYmplY3Qoci5hYykoZSkpLGUuc2hhcGUubGVuZ3RoLTEpKX0pfWZ1bmN0aW9uIGplKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPU9iamVjdChyLkFiKShmdW5jdGlvbih0KXt2YXIgZT1bY3QodC5zaGFwZSldO3JldHVybiB0LnJlc2hhcGUoZSl9KHQpKS50b0ludCgpLGk9KGU9T2JqZWN0KHIuUSkoZSxsKCksMS1sKCkpKS5zaGFwZTtyZXR1cm4gTWUoT2JqZWN0KHIuSWMpKG4saVtpLmxlbmd0aC0xXSkucmVzaGFwZShpKSxlLCExKX0pfWZ1bmN0aW9uIEJlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuO3JldHVybiBuPU9iamVjdChyLlEpKGUsbCgpLDEtbCgpKSxuPU9iamVjdChyLmFjKShPYmplY3Qoci5sYikobixPYmplY3Qoci5UZCkoeSgxKSxuKSkpLE9iamVjdChyLnFjKShmdW5jdGlvbih0LGUpe2lmKCFyLnFlLmFycmF5c0VxdWFsKHQuc2hhcGUsZS5zaGFwZSkpdGhyb3cgbmV3IHcoXCJsb2dpdHMgYW5kIGxhYmVscyBtdXN0IGhhdmUgdGhlIHNhbWUgc2hhcGUsIGJ1dCBnb3Qgc2hhcGVzIFwiK0pTT04uc3RyaW5naWZ5KHQuc2hhcGUpK1wiIGFuZCBcIitKU09OLnN0cmluZ2lmeShlLnNoYXBlKSk7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPWUucmVsdSgpLHI9ZS5hYnMoKS5uZWcoKTtyZXR1cm4gbi5zdWIoZS5tdWwodCkpLmFkZChyLmV4cCgpLmxvZzFwKCkpfSl9KHQsbiksLTEpfSl9ZnVuY3Rpb24gTGUodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49T2JqZWN0KHIuUSkodCxsKCksMSksaT1PYmplY3Qoci5RKShlLGwoKSwxKTtyZXR1cm4gT2JqZWN0KHIuVmQpKE9iamVjdChyLnpjKSh0LE9iamVjdChyLmFjKShPYmplY3Qoci5sYikobixpKSkpLC0xKX0pfWZ1bmN0aW9uIHplKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPU9iamVjdChyLmFjKShPYmplY3Qoci51KSh5KGwoKSksZSkpO3JldHVybiBPYmplY3Qoci5xYykoT2JqZWN0KHIuVGQpKGUsT2JqZWN0KHIuemMpKHQsbikpLC0xKX0pfWZ1bmN0aW9uIEZlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPUllKHQsLTEpLGk9SWUoZSwtMSksYT1PYmplY3Qoci56YykobixpKTtyZXR1cm4gT2JqZWN0KHIuRGMpKE9iamVjdChyLlZkKShhLC0xKSl9KX1mdW5jdGlvbiBVZSh0KXt2YXIgZT17bWVhblNxdWFyZWRFcnJvcjpPZSxtZWFuQWJzb2x1dGVFcnJvcjprZSxtZWFuQWJzb2x1dGVQZXJjZW50YWdlRXJyb3I6QWUsbWVhblNxdWFyZWRMb2dhcml0aG1pY0Vycm9yOkNlLHNxdWFyZWRIaW5nZTpQZSxoaW5nZTpUZSxjYXRlZ29yaWNhbEhpbmdlOlJlLGxvZ2Nvc2g6RGUsY2F0ZWdvcmljYWxDcm9zc2VudHJvcHk6TWUsc3BhcnNlQ2F0ZWdvcmljYWxDcm9zc2VudHJvcHk6amUsYmluYXJ5Q3Jvc3NlbnRyb3B5OkJlLGt1bGxiYWNrTGVpYmxlckRpdmVyZ2VuY2U6TGUscG9pc3Nvbjp6ZSxjb3NpbmVQcm94aW1pdHk6RmV9O2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXtpZih0IGluIGUpcmV0dXJuIGVbdF07dmFyIG49XCJVbmtub3duIGxvc3MgXCIrdDt0aHJvdyB0LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJzb2Z0bWF4Y3Jvc3NlbnRyb3B5XCIpJiYobj1cIlVua25vd24gbG9zcyBcIit0KycuIFVzZSBcImNhdGVnb3JpY2FsQ3Jvc3NlbnRyb3B5XCIgYXMgdGhlIHN0cmluZyBuYW1lIGZvciB0Zi5sb3NzZXMuc29mdG1heENyb3NzRW50cm9weScpLG5ldyB3KG4pfXJldHVybiB0fWZ1bmN0aW9uIFZlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPU9iamVjdChyLnpjKSh5KC41KSxPYmplY3Qoci5LYykoZSkpLGk9ZHQoT2JqZWN0KHIuSWIpKGUsbiksdC5kdHlwZSk7cmV0dXJuIE9iamVjdChyLnFjKShPYmplY3Qoci5yYikodCxpKSwtMSl9KX1mdW5jdGlvbiBXZSh0LGUpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gZHQoT2JqZWN0KHIucmIpKE9iamVjdChyLnopKHQsLTEpLE9iamVjdChyLnopKGUsLTEpKSxcImZsb2F0MzJcIil9KX1mdW5jdGlvbiBxZSh0LGUpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgbj15KDEpO3JldHVybiBPYmplY3Qoci5mYykodC5lcXVhbChuKSxlLmVxdWFsKG4pKS5zdW0oKS5jYXN0KFwiZmxvYXQzMlwiKX0pfWZ1bmN0aW9uICRlKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPXkoMCksaT1xZSh0LGUpLGE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49eSgxKSxpPXkoMCk7cmV0dXJuIE9iamVjdChyLmZjKSh0LmVxdWFsKGkpLGUuZXF1YWwobikpLnN1bSgpLmNhc3QoXCJmbG9hdDMyXCIpfSl9KHQsZSksbz1pLmFkZChhKTtyZXR1cm4gT2JqZWN0KHIueGUpKE9iamVjdChyLkliKShvLG4pLGkuZGl2KG8pLG4pLmNhc3QoXCJmbG9hdDMyXCIpfSl9ZnVuY3Rpb24gSGUodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49eSgwKSxpPXFlKHQsZSksYT1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgbj15KDEpLGk9eSgwKTtyZXR1cm4gT2JqZWN0KHIuZmMpKHQuZXF1YWwobiksZS5lcXVhbChpKSkuc3VtKCkuY2FzdChcImZsb2F0MzJcIil9KX0odCxlKSxvPWkuYWRkKGEpO3JldHVybiBPYmplY3Qoci54ZSkoT2JqZWN0KHIuSWIpKG8sbiksaS5kaXYobyksbikuY2FzdChcImZsb2F0MzJcIil9KX1mdW5jdGlvbiBLZSh0LGUpe3JldHVybiBCZSh0LGUpfWZ1bmN0aW9uIEdlKHQsZSl7cmV0dXJuIHQucmFuaz09PWUucmFuayYmKHQ9dC5zcXVlZXplKFt0LnJhbmstMV0pKSwoZT1lLmFyZ01heCgtMSkpLmR0eXBlIT09dC5kdHlwZSYmKGU9ZS5hc1R5cGUodC5kdHlwZSkpLE9iamVjdChyLnJiKSh0LGUpLmFzVHlwZShcImZsb2F0MzJcIil9dmFyIFhlPU9lLFllPU9lLEplPWtlLFplPWtlLFFlPUFlLHRuPUFlLGVuPU1lLG5uPUZlLHJuPWplO2Z1bmN0aW9uIGFuKHQsZSxuLHIpe3ZvaWQgMD09PXImJihyPWNvbnNvbGUubG9nKTt2YXIgaSxhPWZ1bmN0aW9uKHQpe3ZhciBlPSEwLG49W10scj1bXTtmb3IodmFyIGkgaW4gdC5ub2Rlc0J5RGVwdGgpbi5wdXNoKHQubm9kZXNCeURlcHRoW2ldKTtmb3IodmFyIGE9MCxvPW47YTxvLmxlbmd0aDthKyspe3ZhciBzPW9bYV07aWYocy5sZW5ndGg+MXx8MT09PXMubGVuZ3RoJiZzWzBdLmluYm91bmRMYXllcnMubGVuZ3RoPjEpe2U9ITE7YnJlYWt9ci5wdXNoLmFwcGx5KHIscyl9aWYoZSlmb3IodmFyIHU9MCxjPXQubGF5ZXJzO3U8Yy5sZW5ndGg7dSsrKXtmb3IodmFyIGw9ITEsZj0wLGg9Y1t1XS5pbmJvdW5kTm9kZXM7ZjxoLmxlbmd0aDtmKyspe3ZhciBwPWhbZl07aWYoLTEhPT1yLmluZGV4T2YocCkpe2lmKGwpe2U9ITE7YnJlYWt9bD0hMH19aWYoIWUpYnJlYWt9cmV0dXJuIGV9KHQpLG89W1wiTGF5ZXIgKHR5cGUpXCIsXCJPdXRwdXQgc2hhcGVcIixcIlBhcmFtICNcIl07aWYoYT8oZT1lfHw2NSxuPW58fFsuNDUsLjg1LDFdKTooZT1lfHw5OCxuPW58fFsuMzMsLjU1LC42NywxXSksbltuLmxlbmd0aC0xXTw9MSYmKG49bi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguZmxvb3IoZSp0KX0pKSwhYSlmb3IodmFyIHMgaW4gby5wdXNoKFwiUmVjZWl2ZXMgaW5wdXRzXCIpLGk9W10sdC5ub2Rlc0J5RGVwdGgpaS5wdXNoLmFwcGx5KGksdC5ub2Rlc0J5RGVwdGhbc10pO3IoXCJfXCIucmVwZWF0KGUpKSxvbihvLG4scikscihcIj1cIi5yZXBlYXQoZSkpO2Zvcih2YXIgdT10LmxheWVycyxjPTA7Yzx1Lmxlbmd0aDsrK2MpYT9zbih1W2NdLG4scik6dW4odVtjXSxuLGkscikscigoYz09PXUubGVuZ3RoLTE/XCI9XCI6XCJfXCIpLnJlcGVhdChlKSk7dC5jaGVja1RyYWluYWJsZVdlaWdodHNDb25zaXN0ZW5jeSgpO3ZhciBsPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10LmNvbGxlY3RlZFRyYWluYWJsZVdlaWdodHM/dGUodC5jb2xsZWN0ZWRUcmFpbmFibGVXZWlnaHRzKTp0ZSh0LnRyYWluYWJsZVdlaWdodHMpfSh0KSxmPXRlKHQubm9uVHJhaW5hYmxlV2VpZ2h0cyk7cihcIlRvdGFsIHBhcmFtczogXCIrKGwrZikpLHIoXCJUcmFpbmFibGUgcGFyYW1zOiBcIitsKSxyKFwiTm9uLXRyYWluYWJsZSBwYXJhbXM6IFwiK2YpLHIoXCJfXCIucmVwZWF0KGUpKX1mdW5jdGlvbiBvbih0LGUsbil7dm9pZCAwPT09biYmKG49Y29uc29sZS5sb2cpO2Zvcih2YXIgcj1cIlwiLGk9MDtpPHQubGVuZ3RoOysraSlpPjAmJihyPXIuc2xpY2UoMCxyLmxlbmd0aC0xKStcIiBcIikscj0ocis9dFtpXSkuc2xpY2UoMCxlW2ldKSxyKz1cIiBcIi5yZXBlYXQoZVtpXS1yLmxlbmd0aCk7bihyKX1mdW5jdGlvbiBzbih0LGUsbil7dmFyIHI7dHJ5e3I9SlNPTi5zdHJpbmdpZnkodC5vdXRwdXRTaGFwZSl9Y2F0Y2godCl7cj1cIm11bHRpcGxlXCJ9b24oW3QubmFtZStcIiAoXCIrdC5nZXRDbGFzc05hbWUoKStcIilcIixyLHQuY291bnRQYXJhbXMoKS50b1N0cmluZygpXSxlLG4pfWZ1bmN0aW9uIHVuKHQsZSxuLHIpe3ZhciBpO3RyeXtpPUpTT04uc3RyaW5naWZ5KHQub3V0cHV0U2hhcGUpfWNhdGNoKHQpe2k9XCJtdWx0aXBsZVwifWZvcih2YXIgYT1bXSxvPTAscz10LmluYm91bmROb2RlcztvPHMubGVuZ3RoO28rKyl7dmFyIHU9c1tvXTtpZighKG51bGwhPW4mJm4ubGVuZ3RoPjAmJi0xPT09bi5pbmRleE9mKHUpKSlmb3IodmFyIGM9MDtjPHUuaW5ib3VuZExheWVycy5sZW5ndGg7KytjKXt2YXIgbD11LmluYm91bmRMYXllcnNbY10ubmFtZSxmPXUubm9kZUluZGljZXNbY10saD11LnRlbnNvckluZGljZXNbY107YS5wdXNoKGwrXCJbXCIrZitcIl1bXCIraCtcIl1cIil9fXZhciBwPXQubmFtZSxkPXQuZ2V0Q2xhc3NOYW1lKCksbT0wPT09YS5sZW5ndGg/XCJcIjphWzBdO2ZvcihvbihbcCtcIiAoXCIrZCtcIilcIixpLHQuY291bnRQYXJhbXMoKS50b1N0cmluZygpLG1dLGUsciksYz0xO2M8YS5sZW5ndGg7KytjKW9uKFtcIlwiLFwiXCIsXCJcIixhW2NdXSxlLHIpfWZ1bmN0aW9uIGNuKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30pLHZvaWQgMD09PW4mJihuPSExKSxUKHQsci50ZC5TZXJpYWxpemF0aW9uTWFwLmdldE1hcCgpLmNsYXNzTmFtZU1hcCxlLFwibGF5ZXJcIixuKX1mdW5jdGlvbiBsbih0LGUsbil7cmV0dXJuKFwiaW5ib3VuZE5vZGVzXCI9PT10fHxcIm91dHB1dExheWVyc1wiPT09dHx8XCJpbnB1dExheWVyc1wiPT09dCkmJjA9PT1lJiZcInN0cmluZ1wiPT10eXBlb2Ygbn1mdW5jdGlvbiBmbih0LGUpe2lmKG51bGw9PT10KXJldHVybiBudWxsO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBBKHQpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0fHxcImJvb2xlYW5cIj09dHlwZW9mIHQpcmV0dXJuIHQ7aWYodCBpbnN0YW5jZW9mIEFycmF5KXtmb3IodmFyIG49W10scj10Lmxlbmd0aCxpPTA7aTxyOysraSl7dmFyIGE9dFtpXTtsbihlLGksYSk/bi5wdXNoKGEpOm4ucHVzaChmbihhLGUpKX1yZXR1cm4gbn1mb3IodmFyIG89e30scz0wLHU9T2JqZWN0LmtleXModCk7czx1Lmxlbmd0aDtzKyspe3ZhciBjPXVbc10sbD10W2NdO2lmKFwibmFtZVwiPT09YyYmXCJzdHJpbmdcIj09dHlwZW9mIGwpb1tjXT1sO2Vsc2V7dmFyIGY9QShjKTtvW2ZdPWZuKGwsZil9fXJldHVybiBvfXZhciBobj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7aWYodGhpcy5pZDJWYWx1ZT17fSx0aGlzLmlkMk1hc2s9e30sdGhpcy5uYW1lMklkPXt9LGUgaW5zdGFuY2VvZiB0KWZvcih2YXIgbiBpbiBlLmlkMlZhbHVlKXRoaXMuaWQyVmFsdWVbbl09ZS5pZDJWYWx1ZVtuXSxuIGluIGUuaWQyTWFzayYmKHRoaXMuaWQyTWFza1tuXT1lLmlkMk1hc2tbbl0pO2Vsc2V7aWYobnVsbD09ZSlyZXR1cm47Zm9yKHZhciByPTAsaT1lO3I8aS5sZW5ndGg7cisrKXt2YXIgYT1pW3JdO3RoaXMuYWRkKGEua2V5LGEudmFsdWUpfX19cmV0dXJuIHQucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0LGUsbil7aWYobnVsbCE9dGhpcy5pZDJWYWx1ZVt0LmlkXSl0aHJvdyBuZXcgdyhcIkR1cGxpY2F0ZSBrZXk6IG5hbWU9XCIrdC5uYW1lK1wiLCBpZD1cIit0LmlkKTtyZXR1cm4gdGhpcy5pZDJWYWx1ZVt0LmlkXT1mdW5jdGlvbih0LGUpe2lmKG51bGw9PXQuZHR5cGV8fHQuZHR5cGU9PT1lLmR0eXBlKXJldHVybiBlO3RyeXtyZXR1cm4gT2JqZWN0KHIuTykoZSx0LmR0eXBlKX1jYXRjaChuKXt0aHJvdyBuZXcgdyhcIlRoZSBkdHlwZSBvZiB0aGUgZmVlZCAoXCIrZS5kdHlwZStcIikgY2FuIG5vdCBiZSBjYXN0IHRvIHRoZSBkdHlwZSBvZiB0aGUga2V5ICdcIit0Lm5hbWUrXCInIChcIit0LmR0eXBlK1wiKS5cIil9fSh0LGUpLHRoaXMubmFtZTJJZFt0Lm5hbWVdPXQuaWQsbnVsbCE9biYmKHRoaXMuaWQyTWFza1t0LmlkXT1uKSx0aGlzfSx0LnByb3RvdHlwZS5hZGRGZWVkPWZ1bmN0aW9uKHQpe3RoaXMuYWRkKHQua2V5LHQudmFsdWUpfSx0LnByb3RvdHlwZS5oYXNLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXRoaXMuaWQyVmFsdWVbdC5pZF19LHQucHJvdG90eXBlLm5hbWVzPWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMubmFtZTJJZCl9LHQucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBvZSl7aWYobnVsbD09dGhpcy5pZDJWYWx1ZVt0LmlkXSl0aHJvdyBuZXcgdyhcIk5vbmV4aXN0ZW50IGtleTogXCIrdC5uYW1lKTtyZXR1cm4gdGhpcy5pZDJWYWx1ZVt0LmlkXX12YXIgZT10aGlzLm5hbWUySWRbdF07aWYobnVsbD09ZSl0aHJvdyBuZXcgdyhcIkZlZWQgZGljdCBoYXMgbm8gU3ltYm9saWNUZW5zb3IgbmFtZTogXCIrdCk7cmV0dXJuIHRoaXMuaWQyVmFsdWVbZV19LHQucHJvdG90eXBlLmdldE1hc2s9ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIG9lKXtpZihudWxsPT10aGlzLmlkMlZhbHVlW3QuaWRdKXRocm93IG5ldyB3KFwiTm9uZXhpc3RlbnQga2V5OiBcIit0Lm5hbWUpO3JldHVybiB0aGlzLmlkMk1hc2tbdC5pZF19dmFyIGU9dGhpcy5uYW1lMklkW3RdO2lmKG51bGw9PWUpdGhyb3cgbmV3IHcoXCJGZWVkIGRpY3QgaGFzIG5vIFN5bWJvbGljVGVuc29yIG5hbWU6IFwiK3QpO3JldHVybiB0aGlzLmlkMk1hc2tbZV19LHQucHJvdG90eXBlLmRpc3Bvc2VNYXNrcz1mdW5jdGlvbigpe251bGwhPXRoaXMuaWQyTWFzayYmT2JqZWN0KHIuamIpKHRoaXMuaWQyTWFzayl9LHR9KCkscG49e30sZG49e307ZnVuY3Rpb24gbW4odCxlLG4saSl7Zm9yKHZhciBhPW51bGwhPW4mJm4udHJhaW5pbmcsbz1BcnJheS5pc0FycmF5KHQpLHM9bz90Olt0XSx1PXMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWV9KSxjPVtdLGw9ZS5uYW1lcygpLGY9MCxoPXU7ZjxoLmxlbmd0aDtmKyspe3ZhciBwPWhbZl07LTEhPT1sLmluZGV4T2YocCk/Yy5wdXNoKGUuZ2V0VmFsdWUocCkpOmMucHVzaChudWxsKX1udWxsIT1pJiYoaS5tYXhOdW1UZW5zb3JzPS0xLzAsaS5taW5OdW1UZW5zb3JzPTEvMCk7dmFyIGQsbSxnPXUuam9pbihcIixcIikrXCJ8XCIrZS5uYW1lcygpLmpvaW4oXCIsXCIpO2lmKG51bGw9PXBuW2ddKXt2YXIgeT1mdW5jdGlvbih0LGUpe3IucWUuYXNzZXJ0KG51bGwhPXQmJnQubGVuZ3RoPjAsXCJFeGVwY3RlZCBhdCBsZWFzdCBvbmUgZmV0Y2gsIGdvdCBub25lXCIpO3ZhciBuPVtdLGk9e307aWYoMT09PXQubGVuZ3RoKXt2YXIgYT15bih0WzBdLGUpO249YS5zb3J0ZWQsaT1hLnJlY2lwaWVudE1hcH1lbHNlIGZvcih2YXIgbz1uZXcgU2V0LHM9MCx1PXQ7czx1Lmxlbmd0aDtzKyspe2Zvcih2YXIgYz15bih1W3NdLGUpLGw9Yy5zb3J0ZWQsZj1jLnJlY2lwaWVudE1hcCxoPTAscD1sO2g8cC5sZW5ndGg7aCsrKXt2YXIgZD1wW2hdO28uaGFzKGQubmFtZSl8fChuLnB1c2goZCksby5hZGQoZC5uYW1lKSl9dmFyIG09ZnVuY3Rpb24odCl7bnVsbD09aVt0XSYmKGlbdF09bmV3IFNldCksZlt0XS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBpW3RdLmFkZChlKX0pfTtmb3IodmFyIGcgaW4gZiltKGcpfXJldHVybntzb3J0ZWQ6bixyZWNpcGllbnRDb3VudHM6Z24oaSl9fShzLGUpO2Q9eS5zb3J0ZWQsbT15LnJlY2lwaWVudENvdW50cyxwbltnXT1kLGRuW2ddPW19ZD1wbltnXSxtPXt9LGF8fE9iamVjdC5hc3NpZ24obSxkbltnXSk7Zm9yKHZhciB2PW5ldyBobihlKSxiPTA7YjxkLmxlbmd0aDsrK2Ipe2lmKG51bGwhPWkpe3ZhciB3PU9iamVjdChyLnJjKSgpLm51bVRlbnNvcnM7dz5pLm1heE51bVRlbnNvcnMmJihpLm1heE51bVRlbnNvcnM9dyksdzxpLm1pbk51bVRlbnNvcnMmJihpLm1pbk51bVRlbnNvcnM9dyl9dmFyIF89ZFtiXSx4PV8uc291cmNlTGF5ZXI7aWYoISh4IGluc3RhbmNlb2YgcGUpKXtmb3IodmFyIEU9W10sUz1bXSxOPVtdLEk9ITEsaz0wLEE9Xy5pbnB1dHM7azxBLmxlbmd0aDtrKyspe3ZhciBDPUFba10sUD12LmdldFZhbHVlKEMpLFQ9di5nZXRNYXNrKEMpO0UucHVzaChQKSxTLnB1c2goVCksbnVsbCE9VCYmKEk9ITApLGF8fChtW0MubmFtZV0tLSwwIT09bVtDLm5hbWVdfHxlLmhhc0tleShDKXx8LTEhPT11LmluZGV4T2YoQy5uYW1lKXx8UC5pc0Rpc3Bvc2VkfHxOLnB1c2goUCkpfUkmJigobj1ufHx7fSkubWFzaz1TWzBdKTt2YXIgUj1PKHguYXBwbHkoRSxuKSksRD1udWxsO3guc3VwcG9ydHNNYXNraW5nJiYoRD14LmNvbXB1dGVNYXNrKEUsUykpO2Zvcih2YXIgTT12bihfKSxqPUFycmF5LmlzQXJyYXkoTSk/TTpbTV0sQj0wO0I8ai5sZW5ndGg7KytCKXt2Lmhhc0tleShqW0JdKXx8di5hZGQoaltCXSxSW0JdLEFycmF5LmlzQXJyYXkoRCk/RFswXTpEKTt2YXIgTD11LmluZGV4T2YoaltCXS5uYW1lKTstMSE9PUwmJihjW0xdPVJbQl0pfWF8fE9iamVjdChyLmpiKShOKX19cmV0dXJuIHYuZGlzcG9zZU1hc2tzKCksbz9jOmNbMF19ZnVuY3Rpb24gZ24odCl7dmFyIGU9e307Zm9yKHZhciBuIGluIHQpZVtuXT10W25dLnNpemU7cmV0dXJuIGV9ZnVuY3Rpb24geW4odCxlKXtmb3IodmFyIG49bmV3IFNldCxyPVtdLGk9e30sYT0wLG89ZS5uYW1lcygpO2E8by5sZW5ndGg7YSsrKXt2YXIgcz1vW2FdO24uYWRkKHMpfXZhciB1PVtdLGM9W107Zm9yKHUucHVzaCh0KTt1Lmxlbmd0aD4wOyl7dmFyIGw9dVt1Lmxlbmd0aC0xXTtpZihuLmhhcyhsLm5hbWUpKXUucG9wKCk7ZWxzZXt2YXIgZj1jW2MubGVuZ3RoLTFdPT09dS5sZW5ndGgtMTtpZigwPT09bC5pbnB1dHMubGVuZ3RofHxmKXUucG9wKCksci5wdXNoKGwpLG4uYWRkKGwubmFtZSksZiYmYy5wb3AoKTtlbHNle2MucHVzaCh1Lmxlbmd0aC0xKTtmb3IodmFyIGg9MCxwPWwuaW5wdXRzO2g8cC5sZW5ndGg7aCsrKXt2YXIgZD1wW2hdO251bGw9PWlbZC5uYW1lXSYmKGlbZC5uYW1lXT1uZXcgU2V0KSxpW2QubmFtZV0uYWRkKGwubmFtZSksbi5oYXMoZC5uYW1lKXx8dS5wdXNoKGQpfX19fXJldHVybntzb3J0ZWQ6cixyZWNpcGllbnRNYXA6aX19ZnVuY3Rpb24gdm4odCl7dmFyIGU7aWYoMT09PXQuc291cmNlTGF5ZXIuaW5ib3VuZE5vZGVzLmxlbmd0aCllPXQuc291cmNlTGF5ZXIub3V0cHV0O2Vsc2V7Zm9yKHZhciBuPW51bGwscj0wO3I8dC5zb3VyY2VMYXllci5pbmJvdW5kTm9kZXMubGVuZ3RoOysrcilmb3IodmFyIGk9MCxhPXQuc291cmNlTGF5ZXIuaW5ib3VuZE5vZGVzW3JdLm91dHB1dFRlbnNvcnM7aTxhLmxlbmd0aDtpKyspaWYoYVtpXS5pZD09PXQuaWQpe249cjticmVha31lPXQuc291cmNlTGF5ZXIuZ2V0T3V0cHV0QXQobil9cmV0dXJuIGV9ZnVuY3Rpb24gYm4odCxlLG4scil7aWYoIW4uc3RhcnRzV2l0aChcIjIuXCIpKXRocm93IG5ldyB3KFwiVW5zdXBwb3J0ZWQgS2VyYXMgdmVyc2lvbiBpbiB3ZWlnaHRzIGJlaW5nIGxvYWRlZDogXCIrbik7cmV0dXJuIGV9ZnVuY3Rpb24gd24odCxlLG4pe3ZhciBpPWZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlXCJmbG9hdDMyXCI6cmV0dXJuXCJmbG9hdDMyXCI7ZGVmYXVsdDp0aHJvdyBuZXcgdyhcIkludmFsaWQgZHR5cGU6IFwiK3QpfX0odCk7cmV0dXJuIHIuby5tYWtlKGUse3ZhbHVlczowPT09ZS5sZW5ndGg/bjpyLnFlLmZsYXR0ZW4obil9LGkpfXZhciBfbj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKG4pe3ZhciByPXQuY2FsbCh0aGlzLHt9KXx8dGhpcztpZihyLmNvbnRhaW5lck5vZGVzPW5ldyBTZXQsci5uYW1lPW4ubmFtZSxudWxsPT1yLm5hbWUpe3ZhciBpPXIuZ2V0Q2xhc3NOYW1lKCkudG9Mb3dlckNhc2UoKTtyLm5hbWU9ZChpKX1pZihyLnN1cHBvcnRzTWFza2luZz0hMSxyLnRyYWluYWJsZT0hMCxyLnVwZGF0YWJsZT0hMCxBcnJheS5pc0FycmF5KG4uaW5wdXRzKT9yLmlucHV0cz1uLmlucHV0cy5zbGljZSgpOnIuaW5wdXRzPVtuLmlucHV0c10sQXJyYXkuaXNBcnJheShuLm91dHB1dHMpP3Iub3V0cHV0cz1uLm91dHB1dHMuc2xpY2UoKTpyLm91dHB1dHM9W24ub3V0cHV0c10sRChyLmlucHV0cykubGVuZ3RoIT09ci5pbnB1dHMubGVuZ3RoKXRocm93IG5ldyB3KFwiVGhlIGxpc3Qgb2YgaW5wdXRzIHBhc3NlZCB0byB0aGUgbW9kZWwgaXMgcmVkdW5kYW50LiBBbGwgaW5wdXRzIHNob3VsZCBvbmx5IGFwcGVhciBvbmNlLiBGb3VuZDogXCIrci5pbnB1dHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm5hbWV9KSk7RChyLm91dHB1dHMpLmxlbmd0aCE9PXIub3V0cHV0cy5sZW5ndGgmJmNvbnNvbGUud2FybihcIlRoZSBsaXN0IG9mIG91dHB1dHMgcGFzc2VkIHRvIHRoZSBtb2RlbCBpcyByZWR1bmRhbnQuIEFsbCBvdXRwdXRzIHNob3VsZCBvbmx5IGFwcGVhciBvbmNlLiBGb3VuZDogXCIrci5vdXRwdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSkpLHIuaW5wdXRMYXllcnM9W10sci5pbnB1dExheWVyc05vZGVJbmRpY2VzPVtdLHIuaW5wdXRMYXllcnNUZW5zb3JJbmRpY2VzPVtdLHIub3V0cHV0TGF5ZXJzPVtdLHIub3V0cHV0TGF5ZXJzTm9kZUluZGljZXM9W10sci5vdXRwdXRMYXllcnNUZW5zb3JJbmRpY2VzPVtdLHIubGF5ZXJzPVtdO2Zvcih2YXIgYT0wLG89ci5vdXRwdXRzO2E8by5sZW5ndGg7YSsrKXt2YXIgcz0oQz1vW2FdKS5zb3VyY2VMYXllcix1PUMubm9kZUluZGV4LGM9Qy50ZW5zb3JJbmRleDtyLm91dHB1dExheWVycy5wdXNoKHMpLHIub3V0cHV0TGF5ZXJzTm9kZUluZGljZXMucHVzaCh1KSxyLm91dHB1dExheWVyc1RlbnNvckluZGljZXMucHVzaChjKX1mb3IodmFyIGw9MCxmPXIuaW5wdXRzO2w8Zi5sZW5ndGg7bCsrKXM9KEM9ZltsXSkuc291cmNlTGF5ZXIsdT1DLm5vZGVJbmRleCxjPUMudGVuc29ySW5kZXgsUygwPT09dSxcImlucHV0IGxheWVyIGhhcyA+MSBub2Rlc1wiKSxTKDA9PT1jLFwiaW5wdXQgbGF5ZXIgaGFzID4xIHRlbnNvcnNcIiksci5pbnB1dExheWVycy5wdXNoKHMpLHIuaW5wdXRMYXllcnNOb2RlSW5kaWNlcy5wdXNoKHUpLHIuaW5wdXRMYXllcnNUZW5zb3JJbmRpY2VzLnB1c2goYyk7ci5pbnB1dE5hbWVzPVtdLHIub3V0cHV0TmFtZXM9W10sci5mZWVkSW5wdXRTaGFwZXM9W10sci5mZWVkSW5wdXROYW1lcz1bXSxyLmZlZWRPdXRwdXROYW1lcz1bXTtmb3IodmFyIGg9MDtoPHIuaW5wdXRMYXllcnMubGVuZ3RoO2grKyl7aWYoISgocz1yLmlucHV0TGF5ZXJzW2hdKWluc3RhbmNlb2YgcGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnB1dCBsYXllcnMgdG8gYSBNb2RlbCBtdXN0IGJlIElucHV0TGF5ZXIgb2JqZWN0cy4gUmVjZWl2ZWQgaW5wdXRzOiBcIituLmlucHV0cytcIi4gSW5wdXQgXCIraCtcIiAoMC1iYXNlZCkgb3JpZ2luYXRlcyBmcm9tIGxheWVyIHR5cGUgXCIrcy5nZXRDbGFzc05hbWUoKStcIi5cIik7ci5pbnB1dE5hbWVzLnB1c2gocy5uYW1lKSxyLmZlZWRJbnB1dFNoYXBlcy5wdXNoKHMuYmF0Y2hJbnB1dFNoYXBlKSxyLmZlZWRJbnB1dE5hbWVzLnB1c2gocy5uYW1lKX1mb3IodmFyIHA9MCxtPXIub3V0cHV0TGF5ZXJzO3A8bS5sZW5ndGg7cCsrKXM9bVtwXSxyLm91dHB1dE5hbWVzLnB1c2gocy5uYW1lKTtyLmludGVybmFsSW5wdXRTaGFwZXM9ci5pbnB1dHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSksci5pbnRlcm5hbE91dHB1dFNoYXBlcz1yLm91dHB1dHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSk7Zm9yKHZhciBnPXt9LHk9e30sdj17fSxfPXt9LHg9e30sRT1bXSxOPWZ1bmN0aW9uKHQsbixpLGEsbyxzKXtudWxsIT1hJiZudWxsIT1vJiZudWxsIT1zfHwoYT10LnNvdXJjZUxheWVyLG89dC5ub2RlSW5kZXgscz10LnRlbnNvckluZGV4KTt2YXIgdT1hLmluYm91bmROb2Rlc1tvXTtpZigtMSE9PWkuaW5kZXhPZih1KSl0aHJvdyBuZXcgYihcIlRoZSB0ZW5zb3IgXCIrdC5uYW1lKycgYXQgbGF5ZXIgXCInK2EubmFtZSsnXCIgaXMgcGFydCBvZiBhIGN5Y2xlLicpO2lmKC0xPT09bi5pbmRleE9mKHUpKXtyLmNvbnRhaW5lck5vZGVzLmFkZChlLm5vZGVLZXkoYSxvKSksYS5pZCBpbiB4fHwoeFthLmlkXT1PYmplY3Qua2V5cyh4KS5sZW5ndGgpLC0xPT09aS5pbmRleE9mKHUpJiZpLnB1c2godSk7Zm9yKHZhciBjPXUuaW5ib3VuZExheWVycy5sZW5ndGgsbD0wO2w8YztsKyspe3ZhciBmPXUuaW5wdXRUZW5zb3JzW2xdLGg9dS5pbmJvdW5kTGF5ZXJzW2xdLHA9dS5ub2RlSW5kaWNlc1tsXSxkPXUudGVuc29ySW5kaWNlc1tsXTtOKGYsbixpLGgscCxkKX1mb3Iobi5wdXNoKHUpO2kuaW5kZXhPZih1KT49MDspaS5zcGxpY2UoaS5pbmRleE9mKHUpLDEpO0UucHVzaCh1KX19LEk9W10sTz1bXSxrPTAsQT1yLm91dHB1dHM7azxBLmxlbmd0aDtrKyspe3ZhciBDPUFba107TihDLEksTyl9Zm9yKHZhciBQPTAsVD1FLnNsaWNlKCkucmV2ZXJzZSgpO1A8VC5sZW5ndGg7UCsrKXt5WyhudD1UW1BdKS5pZF09bnQsbnQuaWQgaW4gZ3x8KGdbbnQuaWRdPTApO3ZhciBNPWdbbnQuaWRdLGo9bnVsbD09dltudC5vdXRib3VuZExheWVyLmlkXT8wOnZbbnQub3V0Ym91bmRMYXllci5pZF07Zm9yKE09TWF0aC5tYXgoTSxqKSx2W250Lm91dGJvdW5kTGF5ZXIuaWRdPU0sX1tudC5vdXRib3VuZExheWVyLmlkXT1udC5vdXRib3VuZExheWVyLGdbbnQuaWRdPU0saD0wO2g8bnQuaW5ib3VuZExheWVycy5sZW5ndGg7aCsrKXt2YXIgQj1udC5pbmJvdW5kTGF5ZXJzW2hdLEw9KHU9bnQubm9kZUluZGljZXNbaF0sQi5pbmJvdW5kTm9kZXNbdV0pLHo9bnVsbD09Z1tMLmlkXT8wOmdbTC5pZF07Z1tMLmlkXT1NYXRoLm1heChNKzEseikseVtMLmlkXT1MfX12YXIgRj17fTtmb3IodmFyIFUgaW4gZykoTT1nW1VdKWluIEZ8fChGW01dPVtdKSxGW01dLnB1c2goeVtVXSk7dmFyIFY9e307Zm9yKHZhciBXIGluIHYpKE09dltXXSlpbiBWfHwoVltNXT1bXSksVltNXS5wdXNoKF9bV10pO3ZhciBxPU9iamVjdC5rZXlzKFYpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VJbnQodCwxMCl9KS5zb3J0KFIpO3IubGF5ZXJzPVtdO2Zvcih2YXIgJD0wLEg9cTskPEgubGVuZ3RoOyQrKyl7dmFyIEs9VltNPUhbJF1dO0suc29ydChmdW5jdGlvbih0LGUpe3ZhciBuPXhbdC5pZF0scj14W2UuaWRdO3JldHVybiBuPHI/LTE6bj5yPzE6MH0pO2Zvcih2YXIgRz0wLFg9SztHPFgubGVuZ3RoO0crKylzPVhbR10sci5sYXllcnMucHVzaChzKX1yLmxheWVyc0J5RGVwdGg9VixxPU9iamVjdC5rZXlzKEYpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VJbnQodCwxMCl9KS5zb3J0KFIpO2Zvcih2YXIgWT1yLmlucHV0cy5zbGljZSgpLEo9W10sWj0wLFE9cTtaPFEubGVuZ3RoO1orKylmb3IodmFyIHR0PTAsZXQ9RltNPVFbWl1dO3R0PGV0Lmxlbmd0aDt0dCsrKXt2YXIgbnQ7aWYobnVsbCE9KHM9KG50PWV0W3R0XSkub3V0Ym91bmRMYXllcikpe2Zvcih2YXIgcnQ9MCxpdD1udC5pbnB1dFRlbnNvcnM7cnQ8aXQubGVuZ3RoO3J0KyspaWYoQz1pdFtydF0sLTE9PT1ZLmluZGV4T2YoQykpdGhyb3cgbmV3IGIoXCJHcmFwaCBkaXNjb25uZWN0ZWQ6IGNhbm5vdCBvYnRhaW4gdmFsdWUgZm9yIHRlbnNvciBcIitDKycgYXQgbGF5ZXIgXCInK3MubmFtZSsnXCIuIFRoZSBmb2xsb3dpbmcgcHJldmlvdXMgbGF5ZXJzIHdlcmUgYWNjZXNzZWQgd2l0aG91dCBpc3N1ZTogJytKKTtmb3IodmFyIGF0PTAsb3Q9bnQub3V0cHV0VGVuc29yczthdDxvdC5sZW5ndGg7YXQrKylDPW90W2F0XSxZLnB1c2goQyk7Si5wdXNoKHMubmFtZSl9fXIubm9kZXNCeURlcHRoPUY7Zm9yKHZhciBzdD1yLmxheWVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZX0pLHV0PWZ1bmN0aW9uKHQpe3ZhciBlPXN0LmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZT09PXR9KS5sZW5ndGg7aWYoMSE9PWUpdGhyb3cgbmV3IGIoJ1RoZSBuYW1lIFwiJyt0KydcIiBpcyB1c2VkICcrZStcIiB0aW1lcyBpbiB0aGUgbW9kZWwuIEFsbCBsYXllciBuYW1lcyBzaG91bGQgYmUgdW5pcXVlLiBMYXllciBuYW1lczogXCIrSlNPTi5zdHJpbmdpZnkoc3QpKX0sY3Q9MCxsdD1zdDtjdDxsdC5sZW5ndGg7Y3QrKyl1dChsdFtjdF0pO3JldHVybiByLm91dGJvdW5kTm9kZXM9W10sci5pbmJvdW5kTm9kZXM9W10sbmV3IHVlKHtvdXRib3VuZExheWVyOnIsaW5ib3VuZExheWVyczpbXSxub2RlSW5kaWNlczpbXSx0ZW5zb3JJbmRpY2VzOltdLGlucHV0VGVuc29yczpyLmlucHV0cyxvdXRwdXRUZW5zb3JzOnIub3V0cHV0cyxpbnB1dE1hc2tzOnIuaW5wdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0pLG91dHB1dE1hc2tzOnIub3V0cHV0cy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG51bGx9KSxpbnB1dFNoYXBlczpyLmlucHV0cy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2hhcGV9KSxvdXRwdXRTaGFwZXM6ci5vdXRwdXRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZX0pfSksci5idWlsdD0hMCxyLl9yZWZDb3VudD0xLHJ9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hc3NlcnROb3REaXNwb3NlZD1mdW5jdGlvbigpe2lmKDA9PT10aGlzLl9yZWZDb3VudCl0aHJvdyBuZXcgRXJyb3IoXCJDb250YWluZXIgJ1wiK3RoaXMubmFtZStcIicgaXMgYWxyZWFkeSBkaXNwb3NlZC5cIil9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmFzc2VydE5vdERpc3Bvc2VkKCk7dmFyIHQ9e3JlZkNvdW50QWZ0ZXJEaXNwb3NlOm51bGwsbnVtRGlzcG9zZWRWYXJpYWJsZXM6MH07aWYoMD09LS10aGlzLl9yZWZDb3VudClmb3IodmFyIGU9MCxuPXRoaXMubGF5ZXJzO2U8bi5sZW5ndGg7ZSsrKXt2YXIgcj1uW2VdO3QubnVtRGlzcG9zZWRWYXJpYWJsZXMrPXIuZGlzcG9zZSgpLm51bURpc3Bvc2VkVmFyaWFibGVzfXJldHVybiB0LnJlZkNvdW50QWZ0ZXJEaXNwb3NlPXRoaXMuX3JlZkNvdW50LHR9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5fdHJhaW5hYmxlV2VpZ2h0cy5sZW5ndGg+MCl0aHJvdyBuZXcgdyhcIkNvbnRhaW5lciBpbnN0YW5jZSB1bmV4cGVjdGVkbHkgY29udGFpbnMgX3RyYWluYWJsZVdlaWdodHMuVGhlIHRyYWluYWJsZSB3ZWlnaHRzIG9mIGEgQ29udGFpbmVyIGFyZSBhIHVuaW9uIG9mIHRoZSB0cmFpbmFibGUgd2VpZ2h0cyBvZiBpdHMgY29uc2l0dWVudCBMYXllcnMuIEl0cyBvd24gX3RyYWluYWJsZVdlaWdodHMgbXVzdCByZW1haW4gYW4gZW1wdHkgQXJyYXkuXCIpO2lmKCF0aGlzLnRyYWluYWJsZSlyZXR1cm5bXTtmb3IodmFyIHQ9W10sZT0wLG49dGhpcy5sYXllcnM7ZTxuLmxlbmd0aDtlKyspe3ZhciByPW5bZV07dD10LmNvbmNhdChyLnRyYWluYWJsZVdlaWdodHMpfXJldHVybiB0fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm5vblRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MCxuPXRoaXMubGF5ZXJzO2U8bi5sZW5ndGg7ZSsrKXt2YXIgcj1uW2VdO3QucHVzaC5hcHBseSh0LHIubm9uVHJhaW5hYmxlV2VpZ2h0cyl9aWYoIXRoaXMudHJhaW5hYmxlKXtmb3IodmFyIGk9W10sYT0wLG89dGhpcy5sYXllcnM7YTxvLmxlbmd0aDthKyspcj1vW2FdLGkucHVzaC5hcHBseShpLHIudHJhaW5hYmxlV2VpZ2h0cyk7cmV0dXJuIGkuY29uY2F0KHQpfXJldHVybiB0fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIndlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhaW5hYmxlV2VpZ2h0cy5jb25jYXQodGhpcy5ub25UcmFpbmFibGVXZWlnaHRzKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5sb2FkV2VpZ2h0cz1mdW5jdGlvbih0LGUsbixpKXt2b2lkIDA9PT1lJiYoZT0hMSksdm9pZCAwPT09biYmKG49ITEpLHZvaWQgMD09PWkmJihpPSEwKSxuP2Z1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0hMCk7Zm9yKHZhciByPXt9LGk9MCxhPTAsbz1lO2E8by5sZW5ndGg7YSsrKWZvcih2YXIgcz0wLHU9b1thXS53ZWlnaHRzO3M8dS5sZW5ndGg7cysrKXt2YXIgYz11W3NdO2lmKG51bGwhPXJbYy5vcmlnaW5hbE5hbWVdKXRocm93IG5ldyB3KFwiRHVwbGljYXRlIHdlaWdodCBuYW1lOiBcIitjLm9yaWdpbmFsTmFtZSk7cltjLm9yaWdpbmFsTmFtZV09YyxpKyt9dmFyIGw9W107Zm9yKHZhciBmIGluIHQpe2lmKG51bGwhPXJbZl0pbC5wdXNoKFtyW2ZdLHRbZl1dKTtlbHNlIGlmKG4pdGhyb3cgbmV3IHcoXCJQcm92aWRlZCB3ZWlnaHQgZGF0YSBoYXMgbm8gdGFyZ2V0IHZhcmlhYmxlOiBcIitmKTtkZWxldGUgcltmXX1pZihuKXt2YXIgaD1bXTtmb3IodmFyIHAgaW4gciloLnB1c2gocCk7aWYoaC5sZW5ndGg+MCl0aHJvdyBuZXcgdyhoLmxlbmd0aCtcIiBvZiBcIitpK1wiIHdlaWdodHMgYXJlIG5vdCBzZXQ6IFwiK2gpfWllKGwpfSh0LHRoaXMubGF5ZXJzLGkpOmZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj0hMSk7Zm9yKHZhciBpPXQua2VyYXNfdmVyc2lvbixhPSh0LmJhY2tlbmQsZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZX0pKSxvPXt9LHM9MCx1PWU7czx1Lmxlbmd0aDtzKyspbnVsbCE9KGI9dVtzXSkubmFtZSYmKG51bGw9PW9bYi5uYW1lXSYmKG9bYi5uYW1lXT1bXSksb1tiLm5hbWVdLnB1c2goYikpO2Zvcih2YXIgYz10LndlaWdodHMsbD1bXSxmPTA7ZjxhLmxlbmd0aDsrK2Ype3ZhciBoPWFbZl0scD1jW2hdO251bGw9PXAmJihwPVtdKTtmb3IodmFyIGQ9W10sbT0wO208cC5sZW5ndGg7KyttKXt2YXIgZz1wW21dO2QucHVzaChuZXcgbmUod24oZy5kdHlwZSxnLnNoYXBlLGcudmFsdWUpKSl9Zm9yKHZhciB5PTAsdj1vW2hdO3k8di5sZW5ndGg7eSsrKXt2YXIgYixfPShiPXZbeV0pLndlaWdodHM7aWYoKGQ9Ym4oMCxkLGkpKS5sZW5ndGghPT1fLmxlbmd0aCl7aWYoIW4pdGhyb3cgbmV3IHcoXCJMYXllciAjXCIrZisnIChuYW1lZCBcIicrYi5uYW1lKydcIikgZXhwZWN0cyAnK18ubGVuZ3RoK1wiIHdlaWdodChzKSwgYnV0IHRoZSBzYXZlZCB3ZWlnaHRzIGhhdmUgXCIrZC5sZW5ndGgrXCIgZWxlbWVudChzKS5cIik7Y29uc29sZS53YXJuKFwiU2tpcHBpbmcgbG9hZGluZyBvZiB3ZWlnaHRzIG9mIGxheWVyIFwiK2IubmFtZStcIiBkdWUgdG8gbWlzbWF0Y2ggaW4gbnVtYmVyIG9mIHdlaWdodHM6IChcIitkLmxlbmd0aCtcIiB2cyBcIitfLmxlbmd0aCtcIikuXCIpfWZvcih2YXIgeD0wO3g8ZC5sZW5ndGg7Kyt4KSFufHxyLnFlLmFycmF5c0VxdWFsKF9beF0uc2hhcGUsZFt4XS5zaGFwZSk/bC5wdXNoKFtfW3hdLGRbeF0ucmVhZCgpXSk6Y29uc29sZS53YXJuKFwiU2tpcHBpbmcgbG9hZGluZyBvZiB3ZWlnaHRzIGZvciBsYXllciBcIitiLm5hbWUrXCIgZHVlIHRvIG1pc21hdGNoIGluIHNoYXBlIChcIitfW3hdLnNoYXBlK1wiIHZzIFwiK2RbeF0uc2hhcGUrXCIpXCIpfX1pZShsKX0odCx0aGlzLmxheWVycyxlKX0sZS5wcm90b3R5cGUudXBkYXRlZENvbmZpZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Q29uZmlnKCk7cmV0dXJue2NsYXNzTmFtZTp0aGlzLmdldENsYXNzTmFtZSgpLGNvbmZpZzp0LGtlcmFzVmVyc2lvbjpcInRmanMtbGF5ZXJzIDAuOS4yXCIsYmFja2VuZDpcIlRlbnNvckZsb3cuanNcIn19LGUucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPSEwKTt2YXIgbj1mdW5jdGlvbiB0KGUsbil7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gayhlKTtpZihcIm51bWJlclwiPT10eXBlb2YgZXx8XCJib29sZWFuXCI9PXR5cGVvZiBlKXJldHVybiBlO2lmKGUgaW5zdGFuY2VvZiBBcnJheSl7Zm9yKHZhciByPVtdLGk9ZS5sZW5ndGgsYT0wO2E8aTsrK2Epe3ZhciBvPWVbYV07bG4obixhLG8pP3IucHVzaChvKTpyLnB1c2godChvLG4pKX1yZXR1cm4gcn1mb3IodmFyIHM9e30sdT0wLGM9T2JqZWN0LmtleXMoZSk7dTxjLmxlbmd0aDt1Kyspe3ZhciBsPWNbdV0sZj1lW2xdO3NbayhsKV09XCJuYW1lXCIhPT1sJiZcImNsYXNzTmFtZVwiIT09bHx8XCJzdHJpbmdcIiE9dHlwZW9mIGY/dChmLGwpOmZ9cmV0dXJuIHN9KHRoaXMudXBkYXRlZENvbmZpZygpKTtyZXR1cm4gZT9KU09OLnN0cmluZ2lmeShuKTpufSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dD1PKHQpO2Zvcih2YXIgcj1uZXcgaG4saT0wO2k8bi5pbnB1dHMubGVuZ3RoOysraSlyLmFkZChuLmlucHV0c1tpXSx0W2ldKTtyZXR1cm4gbW4obi5vdXRwdXRzLHIsZSl9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU1hc2s9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgcjtyZXR1cm4gdD1PKHQpLHI9bnVsbD09ZT9FKG51bGwsdC5sZW5ndGgpOk8oZSksbi5ydW5JbnRlcm5hbEdyYXBoKHQscilbMV19KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3ZhciBlPUp0KHQpO2lmKGUubGVuZ3RoIT09dGhpcy5pbnB1dExheWVycy5sZW5ndGgpdGhyb3cgbmV3IHcoXCJJbnZhbGlkIGlucHV0U2hhcGUgYXJndW1lbnQgXCIrdCtcIjogbW9kZWwgaGFzIFwiK3RoaXMuaW5wdXRMYXllcnMubGVuZ3RoK1wiIHRlbnNvciBpbnB1dHMuXCIpO2Zvcih2YXIgbj17fSxyPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBpPXRoaXMuaW5wdXRMYXllcnNbcl0sYT1lW3JdO25bTj1pLm5hbWUrXCJfMF8wXCJdPWF9dmFyIG89T2JqZWN0LmtleXModGhpcy5ub2Rlc0J5RGVwdGgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VJbnQodCwxMCl9KS5zb3J0KFIpO2lmKG8ubGVuZ3RoPjEpZm9yKHZhciBzPTAsdT1vO3M8dS5sZW5ndGg7cysrKWZvcih2YXIgYz11W3NdLGw9MCxmPXRoaXMubm9kZXNCeURlcHRoW2NdO2w8Zi5sZW5ndGg7bCsrKXt2YXIgaD1mW2xdO2lmKGk9aC5vdXRib3VuZExheWVyLC0xPT09dGhpcy5pbnB1dExheWVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWR9KS5pbmRleE9mKGkuaWQpKXtmb3IodmFyIHA9W10sZD0wO2Q8aC5pbmJvdW5kTGF5ZXJzLmxlbmd0aDtkKyspe3ZhciBtPWguaW5ib3VuZExheWVyc1tkXSxnPWgubm9kZUluZGljZXNbZF0seT1oLnRlbnNvckluZGljZXNbZF0sdj1uW049bS5uYW1lK1wiX1wiK2crXCJfXCIreV07cC5wdXNoKHYpfXZhciBiPUp0KGkuY29tcHV0ZU91dHB1dFNoYXBlKEkocCkpKSxfPWkuaW5ib3VuZE5vZGVzLmluZGV4T2YoaCk7Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKyluW049aS5uYW1lK1wiX1wiK18rXCJfXCIrZF09YltkXX19dmFyIHg9W10sRT1bXTtmb3Iocj0wO3I8dGhpcy5vdXRwdXRMYXllcnMubGVuZ3RoO3IrKyl7aT10aGlzLm91dHB1dExheWVyc1tyXSxfPXRoaXMub3V0cHV0TGF5ZXJzTm9kZUluZGljZXNbcl0seT10aGlzLm91dHB1dExheWVyc1RlbnNvckluZGljZXNbcl07dmFyIE49aS5uYW1lK1wiX1wiK18rXCJfXCIreTtFLnB1c2goTil9Zm9yKHI9MDtyPEUubGVuZ3RoO3IrKyl7dmFyIE89RVtyXTtTKE8gaW4gbikseC5wdXNoKG5bT10pfXJldHVybiBJKHgpfSxlLnByb3RvdHlwZS5ydW5JbnRlcm5hbEdyYXBoPWZ1bmN0aW9uKHQsZSl7bnVsbD09ZSYmKGU9RShudWxsLHQubGVuZ3RoKSk7Zm9yKHZhciBuPXt9LHI9MDtyPHRoaXMuaW5wdXRzLmxlbmd0aDsrK3Ipe3ZhciBpPXRoaXMuaW5wdXRzW3JdLGE9dFtyXSxvPWVbcl07bltpLmlkXT1bYSxvXX1mb3IodmFyIHM9MCx1PU9iamVjdC5rZXlzKHRoaXMubm9kZXNCeURlcHRoKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfSkuc29ydChSKTtzPHUubGVuZ3RoO3MrKylmb3IodmFyIGM9dVtzXSxsPTAsZj10aGlzLm5vZGVzQnlEZXB0aFtjXTtsPGYubGVuZ3RoO2wrKyl7Zm9yKHZhciBoPWZbbF0scD1oLm91dGJvdW5kTGF5ZXIsZD1oLmlucHV0VGVuc29ycyxtPWgub3V0cHV0VGVuc29ycyxnPW5ldyBBcnJheSx5PTAsdj1kO3k8di5sZW5ndGg7eSsrKShpPXZbeV0pLmlkIGluIG4mJmcucHVzaChuW2kuaWRdKTtpZihnLmxlbmd0aD09PWQubGVuZ3RoKXt2YXIgYj17fSx3PXZvaWQgMCx4PXZvaWQgMCxOPXZvaWQgMCxJPXZvaWQgMDtpZihudWxsIT1oLmNhbGxBcmdzJiYoYj1oLmNhbGxBcmdzKSwxPT09Zy5sZW5ndGgpe3ZhciBrPWdbMF0sQT1rWzBdLEM9a1sxXTtudWxsPT1iLm1hc2smJihiLm1hc2s9QyksTj1PKHAuY2FsbChBLGIpKSxJPU8ocC5jb21wdXRlTWFzayhBLEMpKSx3PVtBXSx4PVtDXX1lbHNlIHc9Zy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHRbMF19KSx4PWcubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0WzFdfSksbnVsbD09Yi5tYXNrJiYoYi5tYXNrPXgpLE49TyhwLmNhbGwodyxiKSksST1PKHAuY29tcHV0ZU1hc2sodyx4KSk7aWYocC5hY3Rpdml0eVJlZ3VsYXJpemVyKXRocm93IG5ldyBfKFwiTW9kZWwgaW52b2NhdGlvbiB3aXRoIGNvbmNyZXRlIFRlbnNvciB2YWx1ZShzKSBpbiB0aGUgcHJlc2VuY2Ugb2YgYWN0aXZpdHkgcmVndWxhcml6ZXIocykgaXMgbm90IHN1cHBvcnRlZCB5ZXQuXCIpO2ZvcihyPTA7cjxtLmxlbmd0aDsrK3IpaT1tW3JdLGE9TltyXSxvPUlbcl0sbltpLmlkXT1bYSxvXX19Zm9yKHZhciBQPVtdLFQ9W10sRD1bXSxNPTAsaj10aGlzLm91dHB1dHM7TTxqLmxlbmd0aDtNKyspe1MoKGk9altNXSkuaWQgaW4gbixcIkNvdWxkIG5vdCBjb21wdXRlIG91dHB1dCBcIitpLm5hbWUrXCIgOiBcIitpLmlkKTt2YXIgQj1uW2kuaWRdLEw9QlswXTtvPUJbMV0sRC5wdXNoKEwuc2hhcGUpLFAucHVzaChMKSxULnB1c2gobyl9cmV0dXJuW1AsVCxEXX0sZS5wcm90b3R5cGUuYnVpbGROb2RlQ29udmVyc2lvbk1hcD1mdW5jdGlvbih0KXtmb3IodmFyIG4scj17fSxpPTAsYT10aGlzLmxheWVycztpPGEubGVuZ3RoO2krKyl7dmFyIG89YVtpXTtuPW8gaW5zdGFuY2VvZiBlPzE6MDtmb3IodmFyIHM9MDtzPG8uaW5ib3VuZE5vZGVzLmxlbmd0aDtzKyspe3ZhciB1PWUubm9kZUtleShvLHMpO3RoaXMuY29udGFpbmVyTm9kZXMuaGFzKHUpJiYoclt1XT1uLG4rPTEpfX1yZXR1cm4gcn0sZS5wcm90b3R5cGUuZ2V0TGF5ZXI9ZnVuY3Rpb24odCxlKXtpZihudWxsIT1lKXtpZih0aGlzLmxheWVycy5sZW5ndGg8PWUpdGhyb3cgbmV3IHcoXCJXYXMgYXNrZWQgdG8gcmV0cmlldmUgbGF5ZXIgYXQgaW5kZXggXCIrZStcIiwgYnV0IG1vZGVsIG9ubHkgaGFzIFwiK3RoaXMubGF5ZXJzLmxlbmd0aCtcIiBsYXllcihzKS5cIik7cmV0dXJuIHRoaXMubGF5ZXJzW2VdfWlmKG51bGw9PXQpdGhyb3cgbmV3IHcoXCJQcm92aWRlIGVpdGhlciBhIGxheWVyIG5hbWUgb3IgbGF5ZXIgaW5kZXhcIik7Zm9yKHZhciBuPTAscj10aGlzLmxheWVycztuPHIubGVuZ3RoO24rKyl7dmFyIGk9cltuXTtpZihpLm5hbWU9PT10KXJldHVybiBpfXRocm93IG5ldyB3KFwiTm8gc3VjaCBsYXllcjogXCIrdCl9LGUucHJvdG90eXBlLmNhbGN1bGF0ZUxvc3Nlcz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2Zvcih2YXIgbj1bXSxyPTAsaT10LmxheWVycztyPGkubGVuZ3RoO3IrKylmb3IodmFyIGE9aVtyXSxvPTA7bzxhLmluYm91bmROb2Rlcy5sZW5ndGg7KytvKXt2YXIgcz1lLm5vZGVLZXkoYSxvKTt0LmNvbnRhaW5lck5vZGVzLmhhcyhzKSYmbi5wdXNoLmFwcGx5KG4sYS5jYWxjdWxhdGVMb3NzZXMoKSl9cmV0dXJuIG59KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXtuYW1lOnRoaXMubmFtZX0sbj10aGlzLmJ1aWxkTm9kZUNvbnZlcnNpb25NYXAodGhpcy5sYXllcnMpLHI9W10saT0wLGE9dGhpcy5sYXllcnM7aTxhLmxlbmd0aDtpKyspe2Zvcih2YXIgbz0oYj1hW2ldKS5nZXRDbGFzc05hbWUoKSxzPWIuZ2V0Q29uZmlnKCksdT1bXSxjPTA7YzxiLmluYm91bmROb2Rlcy5sZW5ndGg7YysrKXt2YXIgbD1iLmluYm91bmROb2Rlc1tjXSxmPWUubm9kZUtleShiLGMpLGg9e307aWYodGhpcy5jb250YWluZXJOb2Rlcy5oYXMoZikpe2lmKGwuY2FsbEFyZ3MpdHJ5e0pTT04uc3RyaW5naWZ5KGwuY2FsbEFyZ3MpLGg9bC5jYWxsQXJnc31jYXRjaCh0KXtjb25zb2xlLndhcm4oXCJMYXllciBcIitiLm5hbWUrXCIgd2FzIHBhc3NlZCBub24tc2VyaWFsaXphYmxlIGtleXdvcmQgYXJndW1lbnRzOiBcIitsLmNhbGxBcmdzK1wiLiBUaGV5IHdpbGwgbm90IGJlIGluY2x1ZGVkIGluIHRoZSBzZXJpYWxpemVkIG1vZGVsIChhbmQgdGh1cyB3aWxsIGJlIG1pc3NpbmcgYXQgZGVzZXJpYWxpemF0aW9uIHRpbWUpLlwiKSxoPXt9fWlmKGwuaW5ib3VuZExheWVycy5sZW5ndGg+MCl7Zm9yKHZhciBwPVtdLGQ9MDtkPGwuaW5ib3VuZExheWVycy5sZW5ndGg7ZCsrKXt2YXIgbT1sLmluYm91bmRMYXllcnNbZF0sZz1sLm5vZGVJbmRpY2VzW2RdLHk9bC50ZW5zb3JJbmRpY2VzW2RdO251bGw9PShfPW5bZS5ub2RlS2V5KG0sZyldKSYmKF89MCkscC5wdXNoKFttLm5hbWUsXyx5LGhdKX11LnB1c2gocCl9fX1yLnB1c2goe25hbWU6Yi5uYW1lLGNsYXNzTmFtZTpvLGNvbmZpZzpzLGluYm91bmROb2Rlczp1fSl9dC5sYXllcnM9cjt2YXIgdj1bXTtmb3IoZD0wO2Q8dGhpcy5pbnB1dExheWVycy5sZW5ndGg7ZCsrKXt2YXIgYj10aGlzLmlucHV0TGF5ZXJzW2RdO2c9dGhpcy5pbnB1dExheWVyc05vZGVJbmRpY2VzW2RdLGY9ZS5ub2RlS2V5KGIsZyksdGhpcy5jb250YWluZXJOb2Rlcy5oYXMoZikmJihudWxsIT09KF89bltmXSkmJnZvaWQgMCE9PV98fChfPTApLHk9dGhpcy5pbnB1dExheWVyc1RlbnNvckluZGljZXNbZF0sdi5wdXNoKFtiLm5hbWUsXyx5XSkpfXQuaW5wdXRMYXllcnM9djt2YXIgdz1bXTtmb3IoZD0wO2Q8dGhpcy5vdXRwdXRMYXllcnMubGVuZ3RoO2QrKyl7dmFyIF87aWYoYj10aGlzLm91dHB1dExheWVyc1tkXSxnPXRoaXMub3V0cHV0TGF5ZXJzTm9kZUluZGljZXNbZF0sZj1lLm5vZGVLZXkoYixnKSx0aGlzLmNvbnRhaW5lck5vZGVzLmhhcyhmKSludWxsIT09KF89bltmXSkmJnZvaWQgMCE9PV98fChfPTApLHk9dGhpcy5vdXRwdXRMYXllcnNUZW5zb3JJbmRpY2VzW2RdLHcucHVzaChbYi5uYW1lLF8seV0pfXJldHVybiB0Lm91dHB1dExheWVycz13LHR9LGUuZnJvbUNvbmZpZz1mdW5jdGlvbih0LGUsbixyKXt2b2lkIDA9PT1uJiYobj17fSksdm9pZCAwPT09ciYmKHI9ITEpO3ZhciBpPXt9LGE9e307ZnVuY3Rpb24gbyh0LGUpe3QubmFtZSBpbiBhP2FbdC5uYW1lXS5wdXNoKGUpOmFbdC5uYW1lXT1bZV19ZnVuY3Rpb24gcyh0LGUpe2Zvcih2YXIgbixyPVtdLGE9MCxzPWU7YTxzLmxlbmd0aDthKyspe3ZhciB1PXNbYV0sYz11WzBdLGw9dVsxXSxmPXVbMl07aWYoMz09PXUubGVuZ3RoKW49e307ZWxzZXtpZig0IT09dS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJJbXByb3Blcmx5IGZvcm1hdHRlZCBtb2RlbCBjb25maWcgZm9yIGxheWVyIFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiOiBcIitKU09OLnN0cmluZ2lmeSh1KSk7bj11WzNdfWlmKCEoYyBpbiBpKSlyZXR1cm4gdm9pZCBvKHQsZSk7dmFyIGg9aVtjXTtpZihoLmluYm91bmROb2Rlcy5sZW5ndGg8PWwpcmV0dXJuIHZvaWQgbyh0LGUpO3ZhciBwPWguaW5ib3VuZE5vZGVzW2xdO3IucHVzaChwLm91dHB1dFRlbnNvcnNbZl0pfXIubGVuZ3RoPjAmJnQuYXBwbHkoSShyKSxuKX1mdW5jdGlvbiB1KHQpe3ZhciBuPXQubmFtZSxhPWNuKHQsbnVsbCE9ZS5jdXN0b21PYmplY3RzP2UuY3VzdG9tT2JqZWN0czp7fSk7YS5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkKHIpLGlbbl09YTtmb3IodmFyIHM9MCx1PXQuaW5ib3VuZE5vZGVzO3M8dS5sZW5ndGg7cysrKXt2YXIgYz11W3NdO2lmKCEoYyBpbnN0YW5jZW9mIEFycmF5KSl0aHJvdyBuZXcgdyhcIkNvcnJ1cHRlZCBjb25maWd1cmF0aW9uLCBleHBlY3RlZCBhcnJheSBmb3Igbm9kZURhdGE6IFwiK2MpO28oYSxjKX19Zm9yKHZhciBjPWUubmFtZSxsPWUubGF5ZXJzLGY9MCxoPWw7ZjxoLmxlbmd0aDtmKyspdShtPWhbZl0pO2Zvcig7IU0oYSk7KWZvcih2YXIgcD0wLGQ9bDtwPGQubGVuZ3RoO3ArKyl7dmFyIG09ZFtwXTtpZigoVD1pW20ubmFtZV0pLm5hbWUgaW4gYSl7dmFyIGc9YVtULm5hbWVdO2RlbGV0ZSBhW1QubmFtZV07Zm9yKHZhciB5PTAsdj1nO3k8di5sZW5ndGg7eSsrKXMoVCx2W3ldKX19Zm9yKHZhciBiPVtdLF89W10seD0wLEU9ZS5pbnB1dExheWVyczt4PEUubGVuZ3RoO3grKyl7dmFyIE49KG09RVt4XSlbMF0sTz1tWzFdLGs9bVsyXTtTKE4gaW4gaSk7dmFyIEE9KFQ9aVtOXSkuaW5ib3VuZE5vZGVzW09dLm91dHB1dFRlbnNvcnM7Yi5wdXNoKEFba10pfWZvcih2YXIgQz0wLFA9ZS5vdXRwdXRMYXllcnM7QzxQLmxlbmd0aDtDKyspe3ZhciBUO049KG09UFtDXSlbMF0sTz1tWzFdLGs9bVsyXSxTKE4gaW4gaSksQT0oVD1pW05dKS5pbmJvdW5kTm9kZXNbT10ub3V0cHV0VGVuc29ycyxfLnB1c2goQVtrXSl9cmV0dXJuIG5ldyB0KHtpbnB1dHM6YixvdXRwdXRzOl8sbmFtZTpjfSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInN0YXRlZnVsXCIse2dldDpmdW5jdGlvbigpe2lmKHRoaXMuX3N0YXRlZnVsKXRocm93IG5ldyB3KFwiQ29udGFpbmVyIGluc3RhbmNlIHVuZXhwZWN0ZWRseSBoYXMgX3N0YXRlZnVsID0gdHJ1ZS4gVGhlIHN0YXRlZnVsbmVzcyBvZiBhIENvbnRhaW5lciBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBMYXllcnMgaXQgY29udGFpbnMuIEl0cyBfc3RhdGVmdWwgcHJvcGVydHkgbXVzdCByZW1haW4gdGhlIGRlZmF1bHQgZmFsc2UuXCIpO2Zvcih2YXIgdD0wLGU9dGhpcy5sYXllcnM7dDxlLmxlbmd0aDt0KyspaWYoZVt0XS5zdGF0ZWZ1bClyZXR1cm4hMDtyZXR1cm4hMX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5yZXNldFN0YXRlcz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7T2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dC5sYXllcnMuZm9yRWFjaChmdW5jdGlvbih0KXt0LnN0YXRlZnVsJiZ0LnJlc2V0U3RhdGVzKCl9KX0pfSxlfShsZSkseG49MzI7ZnVuY3Rpb24gRW4odCxlKXtpZih0Lm91dHB1dHMubGVuZ3RoPjEpdGhyb3cgbmV3IF8oXCJTdXBwb3J0IGZvciB0cmFpbmluZyBhIG1vZGVsIHdpdGggbXVsdGlwbGUgb3V0cHV0IHRlbnNvcnMgd2l0aCBhIGRhdGFzZXQgb2JqZWN0IGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO3IucWUuYXNzZXJ0KEFycmF5LmlzQXJyYXkoZSkmJjI9PT1lLmxlbmd0aCxcIkRhdGFzZXQgaXRlcmF0b3IgZm9yIGZpdERhdGFzZXQoKSBpcyBleHBlY3RlZCB0byBnZW5lcmF0ZSBhbiBBcnJheSBvZiBsZW5ndGggMjogYFt4cywgeXNdYCwgYnV0IGluc3RlYWQgZ2VuZXJhdGVzIFwiK2UpO3ZhciBuPShlPWUpWzFdLGk9ZVswXTtpZihpIGluc3RhbmNlb2Ygci5vKXJldHVybiByLnFlLmFzc2VydCgxPT09dC5pbnB1dHMubGVuZ3RoLFwiTW9kZWwgaGFzIG11bHRpcGxlIFwiK3QuaW5wdXRzLmxlbmd0aCtcIiBpbnB1dHMsIGhlbmNlIGl0IGV4cGVjdHMgdGhlIGlucHV0IGRhdGFzZXQgdG8gZ2VuZXJhdGUgYSBkaWN0aW9uYXJ5IG9mIHRlbnNvcnMgICh3aXRoIGtleXMgXCIrSlNPTi5zdHJpbmdpZnkodC5pbnB1dE5hbWVzKStcIiwgYnV0IHJlY2VpdmVkIGEgc2luZ2xlIHRlbnNvci5cIiksci5xZS5hc3NlcnQoaS5zaGFwZVswXT09PW4uc2hhcGVbMF0sXCJNaXNtYXRjaCBpbiBiYXRjaCBzaXplIGJldHdlZW4geCBhbmQgeSB0ZW5zb3JzIChcIitpLnNoYXBlWzBdK1wiIHZzLiBcIituLnNoYXBlWzBdK1wiKVwiKSxbaSxuXTt2YXIgYT12b2lkIDA7aT1pO2Zvcih2YXIgbz1bXSxzPTAsdT10LmlucHV0TmFtZXM7czx1Lmxlbmd0aDtzKyspe3ZhciBjPXVbc107aWYobnVsbD09aVtjXSl0aHJvdyBuZXcgdyhcIlRoZSBmZWF0dXJlIGRhdGEgZ2VuZXJhdGVkIGJ5IHRoZSBkYXRhc2V0IGxhY2tzIHRoZSByZXF1aXJlZCBpbnB1dCBrZXkgJ1wiK2MrXCInLlwiKTtvLnB1c2goaVtjXSksbnVsbD09YT9hPWlbY10uc2hhcGVbMF06ci5xZS5hc3NlcnQoaVtjXS5zaGFwZVswXT09PWEsXCJNaXNtYXRjaCBpbiBiYXRjaCBzaXplIGJldHdlZW4geCBhbmQgeSB0ZW5zb3JzIChcIitpW2NdLnNoYXBlWzBdK1wiIHZzLiBcIituLnNoYXBlWzBdK1wiKVwiKX1yZXR1cm4gby5jb25jYXQobil9ZnVuY3Rpb24gU24odCxlLG4pe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBpLGEsbyxzLHUsbCxmLGgscCxkLG0sZyx5LHYsYix3LHgsRSxTLE4sSSxrLEEsQyxQLFQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihjKXtzd2l0Y2goYy5sYWJlbCl7Y2FzZSAwOmlmKGk9bnVsbCE9bi5iYXRjaGVzUGVyRXBvY2gsci5xZS5hc3NlcnQobnVsbCE9dC5vcHRpbWl6ZXIsXCJZb3UgbXVzdCBjb21waWxlIGEgbW9kZWwgYmVmb3JlIHRyYWluaW5nL3Rlc3RpbmcuIFVzZSBNb2RlbC5jb21waWxlKG1vZGVsQ29tcGlsZUNvbmZpZykuXCIpLHIucWUuYXNzZXJ0KG51bGwhPW4sXCJGb3IgZml0RGF0YXNldCgpLCB0aGUgMm5kIGFyZ3VtZW50IChjb25maWcpIGlzIHJlcXVpcmVkLCBidXQgaXQgaXMgbm90IHByb3ZpZGVkIGluIHRoaXMgY2FsbC5cIiksci5xZS5hc3NlcnQobnVsbCE9bi5lcG9jaHMmJm4uZXBvY2hzPjAmJk51bWJlci5pc0ludGVnZXIobi5lcG9jaHMpLFwiRm9yIGZpdERhdGFzZXQoKSwgY29uZmlnLmVwb2NocyBpcyBleHBlY3RlZCB0byBiZSBhIHBvc2l0aXZlIGludGVnZXIsIGJ1dCBnb3QgXCIrbi5lcG9jaHMpLHIucWUuYXNzZXJ0KCFpfHxuLmJhdGNoZXNQZXJFcG9jaD4wJiZOdW1iZXIuaXNJbnRlZ2VyKG4uYmF0Y2hlc1BlckVwb2NoKSxcIkZvciBmaXREYXRhc2V0KCksIGNvbmZpZy5iYXRjaGVzUGVyRXBvY2ggaXMgZXhwZWN0ZWQgdG8gYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyIGlmIHNwZWNpZmllZCwgYnV0IGdvdCBcIituLmJhdGNoZXNQZXJFcG9jaCksci5xZS5hc3NlcnQobnVsbD09bi52YWxpZGF0aW9uU3BsaXQsXCJgdmFsaWRhdGlvblNwbGl0YCBpcyBub3Qgc3VwcG9ydGVkIGJ5IGBmaXREYXRhc2V0KClgLiBVc2UgdmFsaWRhdGlvbkRhdGEgaW5zdGVhZC5cIiksdC5pc1RyYWluaW5nKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzdGFydCB0cmFpbmluZyBiZWNhdXNlIGFub3RoZXIgZml0KCkgY2FsbCBpcyBvbmdvaW5nLlwiKTt0LmlzVHJhaW5pbmc9ITAsYy5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gYy50cnlzLnB1c2goWzEsLDIyLDIzXSksYT1udWxsIT1uLnZhbGlkYXRpb25EYXRhLG89dm9pZCAwLHM9dm9pZCAwLGEmJihObihuLnZhbGlkYXRpb25EYXRhKT9yLnFlLmFzc2VydChudWxsPT1uLnZhbGlkYXRpb25CYXRjaGVzfHxuLnZhbGlkYXRpb25CYXRjaGVzPjAmJk51bWJlci5pc0ludGVnZXIobi52YWxpZGF0aW9uQmF0Y2hlcyksXCJGb3IgZml0RGF0YXNldCgpIHdpdGggZGF0YXNldC1iYXNlZCB2YWxpZGF0aW9uLCBjb25maWcudmFsaWRhdGlvbkJhdGNoZXMgaXMgZXhwZWN0ZWQgbm90IHRvIGJlIHByb3ZpZGVkLCBvciB0byBiZSBhIHBvc2l0aXZlIGludGVnZXIsIGJ1dCBnb3QgXCIrbi52YWxpZGF0aW9uQmF0Y2hlcyk6KHU9ZnVuY3Rpb24odCl7aWYoMz09PXQubGVuZ3RoKXRocm93IG5ldyBfKFwiVmFsaWRhdGlvbiB3aXRoIHNhbXBsZSB3ZWlnaHRzIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO3JldHVybnt4czp0WzBdLHlzOnRbMV19fShuLnZhbGlkYXRpb25EYXRhKSxvPXUueHMscz11LnlzKSksbD10Lm1ha2VUcmFpbkZ1bmN0aW9uKCksZj10LmdldERlZHVwZWRNZXRyaWNzTmFtZXMoKSx2b2lkIDAsaD1hP2Yuc2xpY2UoKS5jb25jYXQoZi5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCJ2YWxfXCIrdH0pKTpmLnNsaWNlKCkscD1FZShuLmNhbGxiYWNrcyksZD1OZShwLG4ueWllbGRFdmVyeSxuLnZlcmJvc2Usbi5lcG9jaHMsbnVsbCxudWxsLG4uYmF0Y2hlc1BlckVwb2NoLG51bGwsYSxoKSxtPWQuY2FsbGJhY2tMaXN0LGc9ZC5oaXN0b3J5LG0uc2V0TW9kZWwodCksdC5oaXN0b3J5PWcsWzQsbS5vblRyYWluQmVnaW4oKV07Y2FzZSAyOnJldHVybiBjLnNlbnQoKSx0LnN0b3BUcmFpbmluZ189ITEseT1udWxsPT1uLmluaXRpYWxFcG9jaD8wOm4uaW5pdGlhbEVwb2NoLFs0LGUuaXRlcmF0b3IoKV07Y2FzZSAzOnY9Yy5zZW50KCksYy5sYWJlbD00O2Nhc2UgNDpyZXR1cm4geTxuLmVwb2Nocz8oYj17fSxbNCxtLm9uRXBvY2hCZWdpbih5KV0pOlszLDE5XTtjYXNlIDU6cmV0dXJuIGMuc2VudCgpLHc9MCx4PTAsaT9bMyw3XTpbNCxlLml0ZXJhdG9yKCldO2Nhc2UgNjp2PWMuc2VudCgpLGMubGFiZWw9NztjYXNlIDc6cmV0dXJuIWl8fHc8bi5iYXRjaGVzUGVyRXBvY2g/WzQsdi5uZXh0KCldOlszLDE3XTtjYXNlIDg6cmV0dXJuIEU9Yy5zZW50KCksaSYmRS5kb25lPyhjb25zb2xlLndhcm4oXCJZb3UgcHJvdmlkZWQgYGJhdGNoZXNQZXJFcG9jaGAgYXMgXCIrbi5iYXRjaGVzUGVyRXBvY2grXCIsIGJ1dCB5b3VyIGRhdGFzZXQgaXRlcmF0b3IgcmFuIG91dCBvZiBkYXRhIGFmdGVyIFwiK3crXCIgYmF0Y2hlczsgaW50ZXJydXB0aW5nIHRyYWluaW5nLiBNYWtlIHN1cmUgdGhhdCB5b3VyIGRhdGFzZXQgY2FuIGdlbmVyYXRlIGF0IGxlYXN0IGBiYXRjaGVzUGVyRXBvY2ggKiBlcG9jaHNgIGJhdGNoZXMgKGluIHRoaXMgY2FzZSwgXCIrbi5iYXRjaGVzUGVyRXBvY2gqbi5lcG9jaHMrXCIgYmF0Y2hlcykuIFlvdSBtYXkgbmVlZCB0byB1c2UgdGhlIHJlcGVhdCgpIGZ1bmN0aW9uIHdoZW4gYnVpbGRpbmcgeW91ciBkYXRhc2V0LlwiKSxbMywxN10pOm51bGw9PUUudmFsdWU/WzMsMTFdOihTPUVuKHQsRS52YWx1ZSksKE49e30pLmJhdGNoPXgsTi5zaXplPVNbMF0uc2hhcGVbMF0sWzQsbS5vbkJhdGNoQmVnaW4oeCxOKV0pO2Nhc2UgOTpmb3IoYy5zZW50KCksST1sKFMpLE9iamVjdChyLmpiKShTKSxUPTA7VDxmLmxlbmd0aDsrK1Qpaz1mW1RdLEE9SVtUXSxOW2tdPUEsT2JqZWN0KHIuUmIpKEEpO3JldHVybls0LG0ub25CYXRjaEVuZCh4LE4pXTtjYXNlIDEwOmMuc2VudCgpLGdlKE4pLHgrKyx3KyssYy5sYWJlbD0xMTtjYXNlIDExOnJldHVybihpP3c+PW4uYmF0Y2hlc1BlckVwb2NoOkUuZG9uZSk/YT8oQz12b2lkIDAsTm4obi52YWxpZGF0aW9uRGF0YSk/KFA9TyxbNCx0LmV2YWx1YXRlRGF0YXNldChuLnZhbGlkYXRpb25EYXRhLHtiYXRjaGVzOm4udmFsaWRhdGlvbkJhdGNoZXN9KV0pOlszLDEzXSk6WzMsMTVdOlszLDE2XTtjYXNlIDEyOnJldHVybiBDPVAuYXBwbHkodm9pZCAwLFtjLnNlbnQoKV0pLFszLDE0XTtjYXNlIDEzOkM9Tyh0LmV2YWx1YXRlKG8scyx7YmF0Y2hTaXplOm51bGw9PW4udmFsaWRhdGlvbkJhdGNoU2l6ZT94bjpuLnZhbGlkYXRpb25CYXRjaFNpemUsdmVyYm9zZTowfSkpLGMubGFiZWw9MTQ7Y2FzZSAxNDpmb3IoVD0wO1Q8dC5tZXRyaWNzTmFtZXMubGVuZ3RoOysrVCliW1widmFsX1wiK3QubWV0cmljc05hbWVzW1RdXT1DW1RdO2MubGFiZWw9MTU7Y2FzZSAxNTpyZXR1cm5bMywxN107Y2FzZSAxNjpyZXR1cm4gdC5zdG9wVHJhaW5pbmdfP1szLDE3XTpbMyw3XTtjYXNlIDE3OnJldHVybls0LG0ub25FcG9jaEVuZCh5LGIpXTtjYXNlIDE4OnJldHVybiBjLnNlbnQoKSx5KyssdC5zdG9wVHJhaW5pbmdfP1szLDE5XTpbMyw0XTtjYXNlIDE5OnJldHVybls0LG0ub25UcmFpbkVuZCgpXTtjYXNlIDIwOnJldHVybiBjLnNlbnQoKSxbNCx0Lmhpc3Rvcnkuc3luY0RhdGEoKV07Y2FzZSAyMTpyZXR1cm4gYy5zZW50KCksWzIsdC5oaXN0b3J5XTtjYXNlIDIyOnJldHVybiB0LmlzVHJhaW5pbmc9ITEsWzddO2Nhc2UgMjM6cmV0dXJuWzJdfX0pfSl9ZnVuY3Rpb24gTm4odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdC5pdGVyYXRvcn1mdW5jdGlvbiBJbih0LGUsbil7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGksYSxvLHMsdSxsLGYsaCxwLGQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihtKXtzd2l0Y2gobS5sYWJlbCl7Y2FzZSAwOmlmKGk9bnVsbCE9bi5iYXRjaGVzLGE9dC50ZXN0RnVuY3Rpb24sbz1bXSxuLnZlcmJvc2U+MCl0aHJvdyBuZXcgXyhcIlZlcmJvc2UgbW9kZSBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtyZXR1cm4gci5xZS5hc3NlcnQoIWl8fG4uYmF0Y2hlcz4wJiZOdW1iZXIuaXNJbnRlZ2VyKG4uYmF0Y2hlcyksXCJUZXN0IGxvb3AgZXhwZWN0cyBgYmF0Y2hlc2AgdG8gYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLCBidXQgcmVjZWl2ZWQgXCIrSlNPTi5zdHJpbmdpZnkobi5iYXRjaGVzKSksZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdC5uZXh0fShlKT8odT1lLFszLDNdKTpbMywxXTtjYXNlIDE6cmV0dXJuWzQsZS5pdGVyYXRvcigpXTtjYXNlIDI6dT1tLnNlbnQoKSxtLmxhYmVsPTM7Y2FzZSAzOnM9dSxsPTAsZj0wLGg9ZnVuY3Rpb24oKXt2YXIgZSx1LGgscCxkLG07cmV0dXJuIGModGhpcyxmdW5jdGlvbihjKXtzd2l0Y2goYy5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHMubmV4dCgpXTtjYXNlIDE6aWYoKGU9Yy5zZW50KCkpLnZhbHVlKXtpZih1PUVuKHQsZS52YWx1ZSksaD1PYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gYSh1KX0pLE9iamVjdChyLmpiKSh1KSwwPT09Zilmb3IobT0wO208aC5sZW5ndGg7KyttKW8ucHVzaCh5KDApKTtmb3IocD11WzBdLnNoYXBlWzBdLGQ9ZnVuY3Rpb24odCl7dmFyIGU9aFt0XSxuPW9bdF07b1t0XT1PYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIudSkob1t0XSxPYmplY3Qoci56YykoeShwKSxlKSl9KSxmPjAmJk9iamVjdChyLmpiKShuKX0sbT0wO208aC5sZW5ndGg7KyttKWQobSk7T2JqZWN0KHIuamIpKGgpLGwrPXAsKytmfXJldHVybiBlLmRvbmU/KGkmJmNvbnNvbGUud2FybihcIllvdXIgZGF0YXNldCBpdGVyYXRvciByYW4gb3V0IG9mIGRhdGEgZHVyaW5nIGV2YWx1YXRlRGF0YXNldCgpLiBJbnRlcnJ1cHRpbmcgZXZhbHV0aW9uLiBNYWtlIHN1cmUgdGhhdCB5b3VyIGRhdGFzZXQgY2FuIGdlbmVyYXRlIGF0IGxlYXN0IGBiYXRjaGVzYCBiYXRjaGVzIChpbiB0aGlzIGNhc2UsIFwiK24uYmF0Y2hlcytcIiBiYXRjaGVzKS4gWW91IG1heSBuZWVkIHRvIHVzZSB0aGUgcmVwZWF0KCkgZnVuY3Rpb24gd2hlbiBidWlsZGluZyB5b3VyIGRhdGFzZXQuXCIpLFsyLFwiYnJlYWtcIl0pOlsyXX19KX0sbS5sYWJlbD00O2Nhc2UgNDpyZXR1cm4haXx8ZjxuLmJhdGNoZXM/WzUsaCgpXTpbMyw2XTtjYXNlIDU6cmV0dXJuXCJicmVha1wiPT09bS5zZW50KCk/WzMsNl06WzMsNF07Y2FzZSA2OmZvcihwPWZ1bmN0aW9uKHQpe3ZhciBlPW9bdF07b1t0XT1PYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIubGIpKG9bdF0seShsKSl9KSxPYmplY3Qoci5qYikoZSl9LGQ9MDtkPG8ubGVuZ3RoOysrZClwKGQpO3JldHVyblsyLEkobyldfX0pfSl9ZnVuY3Rpb24gT24odCl7ci5xZS5hc3NlcnQodD4wJiZOdW1iZXIuaXNJbnRlZ2VyKHQpLFwiYmF0Y2hTaXplIGlzIHJlcXVpcmVkIHRvIGJlIGEgcG9zaXRpdmUgaW50ZWdlciwgYnV0IGdvdCBcIit0KX1mdW5jdGlvbiBrbih0LGUsbil7cmV0dXJuIG51bGw9PXQ/W251bGxdOkFycmF5LmlzQXJyYXkodCk/dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGd0KHQsZSxuLWUpfSk6Z3QodCxlLG4tZSl9ZnVuY3Rpb24gQW4odCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PXQ/bnVsbDpBcnJheS5pc0FycmF5KHQpP3QubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBBbih0LGUpfSk6U3QodCxcImludDMyXCI9PT1lLmR0eXBlP2U6ZS50b0ludCgpKX0pfWZ1bmN0aW9uIENuKHQsZSl7Zm9yKHZhciBuPVtdLHI9MCxpPW51bGw7cjx0OykoaT1yK2UpPj10JiYoaT10KSxuLnB1c2goW3IsaV0pLHI9aTtyZXR1cm4gbn1mdW5jdGlvbiBQbih0LGUsbixpLGEsbyxzLGwsZixoLHAsZCxtLGcseSx2KXtyZXR1cm4gdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdSxiLHgsRSxTLE4sSSxPO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oayl7c3dpdGNoKGsubGFiZWwpe2Nhc2UgMDppZihudWxsPT1hJiYoYT0zMiksbnVsbD09byYmKG89MSksbnVsbD09cCYmKHA9ITApLG51bGw9PW0mJihtPTApLHU9ITEsbnVsbCE9ZiYmbnVsbCE9aCYmKHU9ITApLG51bGwhPXkmJih1PSEwLG51bGw9PWcpKXRocm93IG5ldyB3KFwiQ2FuIG9ubHkgdXNlIGB2YWxpZGF0aW9uU3RlcHNgIHdoZW4gZG9pbmcgc3RlcC13aXNlIHRyYWluaW5nLCBpLmUuLCBgc3RlcHNQZXJFcG9jaGAgbXVzdCBiZSBzZXQuXCIpO3JldHVybiBudWxsIT0oYj10LmNoZWNrTnVtU2FtcGxlcyhuLGEsZyxcInN0ZXBzX3Blcl9lcG9jaFwiKSkmJih4PXB0KDAsYikpLG51bGw9PXMmJihzPTEpLEU9TmUobCx2LHMsbyxtLGIsZyxhLHUsZCksUz1FLmNhbGxiYWNrTGlzdCxOPUUuaGlzdG9yeSxTLnNldE1vZGVsKHQpLHQuaGlzdG9yeT1OLFs0LFMub25UcmFpbkJlZ2luKCldO2Nhc2UgMTprLnNlbnQoKSx0LnN0b3BUcmFpbmluZ189ITEsST1mdW5jdGlvbihvKXt2YXIgcyxsLGQsbSx5O3JldHVybiBjKHRoaXMsZnVuY3Rpb24odil7c3dpdGNoKHYubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxTLm9uRXBvY2hCZWdpbihvKV07Y2FzZSAxOmlmKHYuc2VudCgpLHM9e30sbnVsbD09ZylyZXR1cm5bMywyXTt0aHJvdyBuZXcgXyhcInN0ZXBzUGVyRXBvY2ggbW9kZSBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtjYXNlIDI6aWYoXCJiYXRjaFwiPT09cCl0aHJvdyBuZXcgXyhcImJhdGNoIHNodWZmbGluZyBpcyBub3QgaW1wbGVtbmV0ZWQgeWV0XCIpO3AmJnIucWUuc2h1ZmZsZSh4KSxsPU9iamVjdChyLlpkKSh4KSxkPUNuKGIsYSksbT1mdW5jdGlvbihvKXt2YXIgcDtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGMpe3N3aXRjaChjLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHA9e30sWzQsUy5vbkJhdGNoQmVnaW4obyxwKV07Y2FzZSAxOnJldHVybiBjLnNlbnQoKSxPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgYz1kW29dWzBdLG09ZFtvXVsxXSxnPWd0KGwsYyxtLWMpO3AuYmF0Y2g9byxwLnNpemU9bS1jO2Zvcih2YXIgeT1BbihuLGcpLHY9ZSh5KSxiPTA7YjxpLmxlbmd0aDsrK2Ipe3ZhciB3PWlbYl0sXz12W2JdO3Bbd109XyxPYmplY3Qoci5SYikoXyl9aWYobz09PWQubGVuZ3RoLTEmJnUpe3ZhciB4PXQudGVzdExvb3AoZixoLGEpO2ZvcihiPTA7YjxpLmxlbmd0aDsrK2Ipdz1pW2JdLF89eFtiXSxPYmplY3Qoci5SYikoXyksc1tcInZhbF9cIit3XT1ffX0pLFs0LFMub25CYXRjaEVuZChvLHApXTtjYXNlIDI6cmV0dXJuIGMuc2VudCgpLGdlKHApLHQuc3RvcFRyYWluaW5nXz9bMixcImJyZWFrXCJdOlsyXX19KX0seT0wLHYubGFiZWw9MztjYXNlIDM6cmV0dXJuIHk8ZC5sZW5ndGg/WzUsbSh5KV06WzMsNl07Y2FzZSA0OmlmKFwiYnJlYWtcIj09PXYuc2VudCgpKXJldHVyblszLDZdO3YubGFiZWw9NTtjYXNlIDU6cmV0dXJuKyt5LFszLDNdO2Nhc2UgNjpsLmRpc3Bvc2UoKSx2LmxhYmVsPTc7Y2FzZSA3OnJldHVybls0LFMub25FcG9jaEVuZChvLHMpXTtjYXNlIDg6cmV0dXJuIHYuc2VudCgpLHQuc3RvcFRyYWluaW5nXz9bMixcImJyZWFrXCJdOlsyXX19KX0sTz1tLGsubGFiZWw9MjtjYXNlIDI6cmV0dXJuIE88bz9bNSxJKE8pXTpbMyw1XTtjYXNlIDM6aWYoXCJicmVha1wiPT09ay5zZW50KCkpcmV0dXJuWzMsNV07ay5sYWJlbD00O2Nhc2UgNDpyZXR1cm4rK08sWzMsMl07Y2FzZSA1OnJldHVybls0LFMub25UcmFpbkVuZCgpXTtjYXNlIDY6cmV0dXJuIGsuc2VudCgpLFs0LHQuaGlzdG9yeS5zeW5jRGF0YSgpXTtjYXNlIDc6cmV0dXJuIGsuc2VudCgpLFsyLHQuaGlzdG9yeV19fSl9KX1mdW5jdGlvbiBUbih0LGUsbixyKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9e30pLHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGksYSxvLHMsdSxsLGYsaCxwLGQsbSxnLHksdixiLHgsRSxTLE47cmV0dXJuIGModGhpcyxmdW5jdGlvbihjKXtzd2l0Y2goYy5sYWJlbCl7Y2FzZSAwOmlmKHQuaXNUcmFpbmluZyl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc3RhcnQgdHJhaW5pbmcgYmVjYXVzZSBhbm90aGVyIGZpdCgpIGNhbGwgaXMgb25nb2luZy5cIik7dC5pc1RyYWluaW5nPSEwLGMubGFiZWw9MTtjYXNlIDE6aWYoYy50cnlzLnB1c2goWzEsLDMsNF0pLE9uKGY9bnVsbD09ci5iYXRjaFNpemU/MzI6ci5iYXRjaFNpemUpLGg9dC5zdGFuZGFyZGl6ZVVzZXJEYXRhKGUsbiwhMSxmKSxpPWhbMF0sYT1oWzFdLHA9ITEsZD12b2lkIDAsbnVsbCE9ci52YWxpZGF0aW9uRGF0YSYmci52YWxpZGF0aW9uRGF0YS5sZW5ndGg+MCl7aWYocD0hMCwyIT09ci52YWxpZGF0aW9uRGF0YS5sZW5ndGgpdGhyb3cgMz09PXIudmFsaWRhdGlvbkRhdGEubGVuZ3RoP25ldyBfKFwidmFsaWRhdGlvbkRhdGEgaW5jbHVkaW5nIHNhbXBsZSB3ZWlnaHRzIGlzIG5vdCBzdXBwb3J0ZWQgeWV0LlwiKTpuZXcgdyhcIldoZW4gcGFzc2luZyB2YWxpZGF0aW9uIGRhdGEsIGl0IG11c3QgY29udGFpbiAyICh2YWxYLCB2YWxZKSBvciAzICh2YWxYLCB2YWxZLCB2YWxTYW1wbGVXZWlnaHQpIGl0ZW1zOyBcIityLnZhbGlkYXRpb25EYXRhK1wiIGlzIGludmFsaWQuXCIpO289ci52YWxpZGF0aW9uRGF0YVswXSxzPXIudmFsaWRhdGlvbkRhdGFbMV0sbT10LnN0YW5kYXJkaXplVXNlckRhdGEobyxzLCEwLGYpLHU9bVswXSxsPW1bMV0sZD11LmNvbmNhdChsKX1lbHNlIG51bGwhPXIudmFsaWRhdGlvblNwbGl0JiZyLnZhbGlkYXRpb25TcGxpdD4wJiZyLnZhbGlkYXRpb25TcGxpdDwxPyhwPSEwLGc9TWF0aC5mbG9vcihpWzBdLnNoYXBlWzBdKigxLXIudmFsaWRhdGlvblNwbGl0KSkseT1pWzBdLnNoYXBlWzBdLHU9a24oaSxnLHkpLGk9a24oaSwwLGcpLGw9a24oYSxnLHkpLGE9a24oYSwwLGcpLGQ9dS5jb25jYXQobCkpOm51bGwhPXIudmFsaWRhdGlvblN0ZXBzJiYocD0hMCk7cmV0dXJuIHY9aS5jb25jYXQoYSksdC5jaGVja1RyYWluYWJsZVdlaWdodHNDb25zaXN0ZW5jeSgpLGI9dC5tYWtlVHJhaW5GdW5jdGlvbigpLHg9dC5nZXREZWR1cGVkTWV0cmljc05hbWVzKCksRT12b2lkIDAsUz12b2lkIDAscD8odC5tYWtlVGVzdEZ1bmN0aW9uKCksRT10LnRlc3RGdW5jdGlvbixTPXguc2xpY2UoKS5jb25jYXQoeC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCJ2YWxfXCIrdH0pKSk6KEU9bnVsbCxkPVtdLFM9eC5zbGljZSgpKSxOPUVlKHIuY2FsbGJhY2tzKSxbNCxQbih0LGIsdix4LGYsci5lcG9jaHMsci52ZXJib3NlLE4sRSxkLHIuc2h1ZmZsZSxTLHIuaW5pdGlhbEVwb2NoLG51bGwsbnVsbCxyLnlpZWxkRXZlcnkpXTtjYXNlIDI6cmV0dXJuWzIsYy5zZW50KCldO2Nhc2UgMzpyZXR1cm4gdC5pc1RyYWluaW5nPSExLERuKGksZSksRG4oYSxuKSxEbih1LG8pLERuKGwscyksWzddO2Nhc2UgNDpyZXR1cm5bMl19fSl9KX1mdW5jdGlvbiBSbih0KXt2YXIgZT1bXTt0IGluc3RhbmNlb2Ygci5vJiYodD1bdF0pO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7KytuKXt2YXIgaT10W25dO2lmKDE9PT1pLnJhbmspZS5wdXNoKG10KGksMSkpO2Vsc2V7aWYoMD09PWkucmFuayl0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCB0ZW5zb3IgdG8gYmUgYXQgbGVhc3QgMUQsIGJ1dCByZWNlaXZlZCBhIDBEIHRlbnNvciAoc2NhbGFyKS5cIik7ZS5wdXNoKGkpfX1yZXR1cm4gZX1mdW5jdGlvbiBEbih0LGUpe2lmKG51bGwhPXQpe3ZhciBuPVtdO2lmKGUgaW5zdGFuY2VvZiByLm8pbi5wdXNoKGUuaWQpO2Vsc2UgaWYoQXJyYXkuaXNBcnJheShlKSllLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIG4ucHVzaCh0LmlkKX0pO2Vsc2UgaWYobnVsbCE9ZSlmb3IodmFyIGkgaW4gZSl7dmFyIGE9ZVtpXTtuLnB1c2goYS5pZCl9dmFyIG89W107aWYodCBpbnN0YW5jZW9mIHIubyktMT09PW4uaW5kZXhPZih0LmlkKSYmby5wdXNoKHQpO2Vsc2UgaWYoQXJyYXkuaXNBcnJheSh0KSl0LmZvckVhY2goZnVuY3Rpb24odCl7LTE9PT1uLmluZGV4T2YodC5pZCkmJm8ucHVzaCh0KX0pO2Vsc2UgaWYobnVsbCE9dClmb3IodmFyIHMgaW4gdCl7dmFyIHU9dFtzXTstMT09PW4uaW5kZXhPZih1LmlkKSYmby5wdXNoKHUpfW8uZm9yRWFjaChmdW5jdGlvbih0KXt0LmlzRGlzcG9zZWR8fHQuZGlzcG9zZSgpfSl9fWZ1bmN0aW9uIE1uKHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpfWZ1bmN0aW9uIGpuKHQpe3JldHVybiFmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIHIub30odCkmJiFNbih0KX1mdW5jdGlvbiBCbih0LGUsbixyLGkpe2lmKHZvaWQgMD09PXImJihyPSEwKSx2b2lkIDA9PT1pJiYoaT1cIlwiKSxudWxsPT1lfHwwPT09ZS5sZW5ndGgpe2lmKG51bGwhPXQpe3ZhciBhPSExO2lmKE1uKHQpJiZ0Lmxlbmd0aD4wKWE9ITA7ZWxzZSBpZihqbih0KSl7Zm9yKHZhciBvIGluIHQpaWYodC5oYXNPd25Qcm9wZXJ0eShvKSl7YT0hMDticmVha319ZWxzZSBhPSEwO2lmKGEpdGhyb3cgbmV3IHcoXCJFcnJvciB3aGVuIGNoZWNraW5nIG1vZGVsIFwiK2krXCIgZXhwZWN0ZWQgbm8gZGF0YSwgYnV0IGdvdCBcIit0KX1yZXR1cm5bXX1pZihudWxsPT10KXJldHVybiBlLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0pO3ZhciBzO2lmKGpuKHQpKXt0PXQscz1bXTtmb3IodmFyIHU9MCxjPWU7dTxjLmxlbmd0aDt1Kyspe3ZhciBsPWNbdV07aWYobnVsbD09dFtsXSl0aHJvdyBuZXcgdygnTm8gZGF0YSBwcm92aWRlZCBmb3IgXCInK2wrJ1wiLiBOZWVkIGRhdGEgZm9yIGVhY2gga2V5IGluOiAnK2UpO3MucHVzaCh0W2xdKX19ZWxzZSBpZihNbih0KSl7aWYoKHQ9dCkubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJFcnJvciB3aGVuIGNoZWNraW5nIG1vZGVsIFwiK2krXCI6IHRoZSBBcnJheSBvZiBUZW5zb3JzIHRoYXQgeW91IGFyZSBwYXNzaW5nIHRvIHlvdXIgbW9kZWwgaXMgbm90IHRoZSBzaXplIHRoZSBtb2RlbCBleHBlY3RlZC4gRXhwZWN0ZWQgdG8gc2VlIFwiK2UubGVuZ3RoK1wiIFRlbnNvcihzKSwgYnV0IGluc3RlYWQgZ290IHRoZSBmb2xsb3dpbmcgbGlzdCBvZiBUZW5zb3Iocyk6IFwiK3QpO3M9dH1lbHNle2lmKHQ9dCxlLmxlbmd0aD4xKXRocm93IG5ldyB3KFwiVGhlIG1vZGVsIFwiK2krXCIgZXhwZWN0cyBcIitlLmxlbmd0aCtcIiBUZW5zb3IocyksIGJ1dCBvbmx5IHJlY2VpdmVkIG9uZSBUZW5zb3IuIEZvdW5kOiBUZW5zb3Igd2l0aCBzaGFwZSBcIit0LnNoYXBlKTtzPVt0XX1pZihzPVJuKHMpLG51bGwhPW4pZm9yKHZhciBmPTA7ZjxlLmxlbmd0aDsrK2YpaWYobnVsbCE9bltmXSl7dmFyIGg9c1tmXTtpZihoLnNoYXBlLmxlbmd0aCE9PW5bZl0ubGVuZ3RoKXRocm93IG5ldyB3KFwiRXJyb3Igd2hlbiBjaGVja2luZyBcIitpK1wiOiBleHBlY3RlZCBcIitlW2ZdK1wiIHRvIGhhdmUgXCIrbltmXS5sZW5ndGgrXCIgZGltZW5zaW9uKHMpLiBidXQgZ290IGFycmF5IHdpdGggc2hhcGUgXCIraC5zaGFwZSk7Zm9yKHZhciBwPTA7cDxuW2ZdLmxlbmd0aDsrK3ApaWYoMCE9PXB8fHIpe3ZhciBkPWguc2hhcGVbcF0sbT1uW2ZdW3BdO2lmKG51bGwhPW0mJm0+PTAmJmQhPT1tKXRocm93IG5ldyB3KFwiRXJyb3Igd2hlbiBjaGVja2luZyBcIitpK1wiOiBleHBlY3RlZCBcIitlW2ZdK1wiIHRvIGhhdmUgc2hhcGUgW1wiK25bZl0rXCJdLCBidXQgZ290IGFycmF5IHdpdGggc2hhcGUgW1wiK2guc2hhcGUrXCJdLlwiKX19cmV0dXJuIHN9ZnVuY3Rpb24gTG4odCxlLG4scixpKXt2YXIgYTtpZih2b2lkIDA9PT1yJiYocj0hMCksdm9pZCAwPT09aSYmKGk9XCJcIiksQXJyYXkuaXNBcnJheSh0KSl7aWYodC5sZW5ndGghPT1lLmxlbmd0aCl0aHJvdyBuZXcgdyhcIkVycm9yIHdoZW4gY2hlY2tpbmcgbW9kZWwgXCIraStcIjogdGhlIEFycmF5IG9mIFRlbnNvcnMgdGhhdCB5b3UgYXJlIHBhc3NpbmcgdG8geW91ciBtb2RlbCBpcyBub3QgdGhlIHNpemUgdGhlIHRoZSBtb2RlbCBleHBlY3RlZC4gRXhwZWN0ZWQgdG8gc2VlIFwiK2UubGVuZ3RoK1wiIFRlbnNvcihzKSwgYnV0IGluc3RlYWQgZ290IFwiK3QubGVuZ3RoK1wiIFRlbnNvcnMocykuXCIpO2E9dH1lbHNle2lmKGUubGVuZ3RoPjEpdGhyb3cgbmV3IHcoXCJUaGUgbW9kZWwgZXhwZWN0cyBcIitlLmxlbmd0aCtcIiBcIitpK1wiIFRlbnNvcnMsIGJ1dCBvbmx5IHJlY2VpdmVkIG9uZSBUZW5zb3IuIEZvdW5kOiBhcnJheSB3aXRoIHNoYXBlIFwiK0pTT04uc3RyaW5naWZ5KHQuc2hhcGUpK1wiLlwiKTthPVt0XX1pZihudWxsIT1uKWZvcih2YXIgbz0wO288ZS5sZW5ndGg7KytvKWlmKG51bGwhPW5bb10pe3ZhciBzPWFbb107aWYocy5zaGFwZS5sZW5ndGghPT1uW29dLmxlbmd0aCl0aHJvdyBuZXcgdyhcIkVycm9yIHdoZW4gY2hlY2tpbmcgXCIraStcIjogZXhwZWN0ZWQgXCIrZVtvXStcIiB0byBoYXZlIFwiK25bb10ubGVuZ3RoK1wiIGRpbWVuc2lvbihzKSwgYnV0IGdvdCBhcnJheSB3aXRoIHNoYXBlIFwiK0pTT04uc3RyaW5naWZ5KHMuc2hhcGUpKTtmb3IodmFyIHU9MDt1PG5bb10ubGVuZ3RoOysrdSlpZigwIT09dXx8cil7dmFyIGM9cy5zaGFwZVt1XSxsPW5bb11bdV07aWYobnVsbCE9bCYmbCE9PWMpdGhyb3cgbmV3IHcoXCJFcnJvciB3aGVuIGNoZWNraW5nIFwiK2krXCI6IGV4cGVjdGVkIFwiK2Vbb10rXCIgdG8gaGF2ZSBzaGFwZSBcIitKU09OLnN0cmluZ2lmeShuW29dKStcIiBidXQgZ290IGFycmF5IHdpdGggc2hhcGUgXCIrSlNPTi5zdHJpbmdpZnkocy5zaGFwZSkrXCIuXCIpfX19dmFyIHpuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7cmV0dXJuIG4uaXNUcmFpbmluZz0hMSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuc3VtbWFyeT1mdW5jdGlvbih0LGUsbil7aWYodm9pZCAwPT09biYmKG49Y29uc29sZS5sb2cpLCF0aGlzLmJ1aWx0KXRocm93IG5ldyB3KFwiVGhpcyBtb2RlbCBoYXMgbmV2ZXIgYmVlbiBjYWxsZWQsIHRodXMgaXRzIHdlaWdodHMgaGF2ZSBub3QgYmVlbiBjcmVhdGVkIHlldC4gU28gbm8gc3VtbWFyeSBjYW4gYmUgZGlzcGxheWVkLiBCdWlsZCB0aGUgbW9kZWwgZmlyc3QgKGUuZy4sIGJ5IGNhbGxpbmcgaXQgb24gc29tZSB0ZXN0IGRhdGEpLlwiKTthbih0aGlzLHQsZSxuKX0sZS5wcm90b3R5cGUuY29tcGlsZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKG51bGw9PXQubG9zcyYmKHQubG9zcz1bXSksdGhpcy5sb3NzPXQubG9zcyxcInN0cmluZ1wiPT10eXBlb2YgdC5vcHRpbWl6ZXIpdGhpcy5vcHRpbWl6ZXI9ZnVuY3Rpb24odCl7dmFyIGU9e0FkYWdyYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5sZS5hZGFncmFkKC4wMSl9LEFkYWRlbHRhOmZ1bmN0aW9uKCl7cmV0dXJuIHIubGUuYWRhZGVsdGEoMSwuOTUsbCgpKX0sQWRhbTpmdW5jdGlvbigpe3JldHVybiByLmxlLmFkYW0oLjAwMSwuOSwuOTk5LGwoKSl9LEFkYW1heDpmdW5jdGlvbigpe3JldHVybiByLmxlLmFkYW1heCguMDAyLC45LC45OTksbCgpLDApfSxSTVNQcm9wOmZ1bmN0aW9uKCl7cmV0dXJuIHIubGUucm1zcHJvcCguMDAxLC45LDAsbCgpKX0sU0dEOmZ1bmN0aW9uKCl7cmV0dXJuIHIubGUuc2dkKC4wMSl9fTtpZihlLmFkYWdyYWQ9ZS5BZGFncmFkLGUuYWRhZGVsdGE9ZS5BZGFkZWx0YSxlLmFkYW09ZS5BZGFtLGUuYWRhbWF4PWUuQWRhbWF4LGUucm1zcHJvcD1lLlJNU1Byb3AsZS5zZ2Q9ZS5TR0QsdCBpbiBlKXJldHVybiBlW3RdKCk7dGhyb3cgbmV3IHcoXCJVbmtub3duIE9wdGltaXplciBcIit0KX0odC5vcHRpbWl6ZXIpO2Vsc2V7aWYoISh0Lm9wdGltaXplciBpbnN0YW5jZW9mIHIuaikpdGhyb3cgbmV3IHcoXCJVc2VyLWRlZmluZWQgb3B0aW1pemVyIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgdGYuT3B0aW1pemVyLlwiKTt0aGlzLm9wdGltaXplcj10Lm9wdGltaXplcn12YXIgbj1bXTtpZihBcnJheS5pc0FycmF5KHQubG9zcyl8fFwic3RyaW5nXCI9PXR5cGVvZiB0Lmxvc3N8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHQubG9zcylpZihBcnJheS5pc0FycmF5KHQubG9zcykpe2lmKHQubG9zcy5sZW5ndGghPT10aGlzLm91dHB1dHMubGVuZ3RoKXRocm93IG5ldyB3KFwiV2hlbiBwYXNzaW5nIGFuIEFycmF5IGFzIGxvc3MsIGl0IHNob3VsZCBoYXZlIG9uZSBlbnRyeSBwZXIgbW9kZWwgb3V0cHV0LiBUaGUgbW9kZWwgaGFzIFwiK3RoaXMub3V0cHV0cy5sZW5ndGgrXCIgb3V0cHV0KHMpLCBidXQgeW91IHBhc3NlZCBsb3NzPVwiK3QubG9zcytcIi5cIik7dmFyIGk9dC5sb3NzO249aS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIFVlKHQpfSl9ZWxzZXt2YXIgYT1VZSh0Lmxvc3MpO3RoaXMub3V0cHV0cy5tYXAoZnVuY3Rpb24odCl7bi5wdXNoKGEpfSl9ZWxzZXtmb3IodmFyIG8gaW4gdC5sb3NzPXQubG9zcyx0Lmxvc3MpaWYoLTE9PT10aGlzLm91dHB1dE5hbWVzLmluZGV4T2YobykpdGhyb3cgbmV3IHcoJ1Vua25vd24gZW50cnkgaW4gbG9zcyBkaWN0aW9uYXJ5OiBcIicrbysnXCIuIE9ubHkgZXhwZWN0ZWQgdGhlIGZvbGxvd2luZyBrZXlzOiAnK3RoaXMub3V0cHV0TmFtZXMpO2Zvcih2YXIgcz0wLHU9dGhpcy5vdXRwdXROYW1lcztzPHUubGVuZ3RoO3MrKyl7dmFyIGM9dVtzXTtudWxsPT10Lmxvc3NbY10mJmNvbnNvbGUud2FybignT3V0cHV0IFwiJytjKydcIiBpcyBtaXNzaW5nIGZyb20gbG9zcyBkaWN0aW9uYXJ5LiBXZSBhc3N1bWUgdGhpcyB3YXMgZG9uZSBvbiBwdXJwb3NlLCBhbmQgd2Ugd2lsbCBub3QgYmUgZXhwZWN0aW5nIGRhdGEgdG8gYmUgcGFzc2VkIHRvICcrYytcIiBkdXJpbmcgdHJhaW5pbmdcIiksbi5wdXNoKFVlKHQubG9zc1tjXSkpfX10aGlzLmxvc3NGdW5jdGlvbnM9bix0aGlzLmZlZWRPdXRwdXROYW1lcz1bXSx0aGlzLmZlZWRPdXRwdXRTaGFwZXM9W10sdGhpcy5mZWVkTG9zc0Zucz1bXTtmb3IodmFyIGY9MDtmPHRoaXMub3V0cHV0cy5sZW5ndGg7KytmKXt2YXIgaD10aGlzLmludGVybmFsT3V0cHV0U2hhcGVzW2ZdLHA9dGhpcy5vdXRwdXROYW1lc1tmXTt0aGlzLmZlZWRPdXRwdXROYW1lcy5wdXNoKHApLHRoaXMuZmVlZE91dHB1dFNoYXBlcy5wdXNoKGgpLHRoaXMuZmVlZExvc3NGbnMucHVzaCh0aGlzLmxvc3NGdW5jdGlvbnNbZl0pfXZhciBkPVtdO3RoaXMubWV0cmljcz10Lm1ldHJpY3MsdGhpcy5tZXRyaWNzTmFtZXM9W1wibG9zc1wiXSx0aGlzLm1ldHJpY3NUZW5zb3JzPVtdLHJ0KFwibG9zc1wiLGZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDxlLm91dHB1dHMubGVuZ3RoOysrdClpZigtMT09PWQuaW5kZXhPZih0KSl7dmFyIG49ZS5sb3NzRnVuY3Rpb25zW3RdO2Uub3V0cHV0cy5sZW5ndGg+MSYmKGUubWV0cmljc1RlbnNvcnMucHVzaChbbix0XSksZS5tZXRyaWNzTmFtZXMucHVzaChlLm91dHB1dE5hbWVzW3RdK1wiX2xvc3NcIikpfX0pO3ZhciBtPWZ1bmN0aW9uKHQsZSl7aWYobnVsbD09dHx8QXJyYXkuaXNBcnJheSh0KSYmMD09PXQubGVuZ3RoKXJldHVybiBlLm1hcChmdW5jdGlvbih0KXtyZXR1cm5bXX0pO2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0fSk7aWYobnVsbCE9dCl7Zm9yKHZhciBuPVtdLHI9MCxpPWU7cjxpLmxlbmd0aDtyKyspe3ZhciBhPWlbcl0sbz10Lmhhc093blByb3BlcnR5KGEpP3RbYV06W107QXJyYXkuaXNBcnJheShvKXx8KG89W29dKSxuLnB1c2gobyl9cmV0dXJuIG59dGhyb3cgbmV3IFR5cGVFcnJvcihcIlR5cGUgb2YgbWV0cmljcyBhcmd1bWVudCBub3QgdW5kZXJzdG9vZC4gRXhwZWN0ZWQgYW4gQXJyYXkgb3IgT2JqZWN0LCBmb3VuZDogXCIrdCl9KHQubWV0cmljcyx0aGlzLm91dHB1dE5hbWVzKTtydChcIm1ldHJpY1wiLGZ1bmN0aW9uKCl7Zm9yKHZhciB0PWZ1bmN0aW9uKHQpe2lmKC0xIT09ZC5pbmRleE9mKHQpKXJldHVyblwiY29udGludWVcIjshZnVuY3Rpb24obil7Zm9yKHZhciByLGksYSxvPWZ1bmN0aW9uKG4pe2lmKC0xIT09W1wiYWNjdXJhY3lcIixcImFjY1wiLFwiY3Jvc3NlbnRyb3B5XCIsXCJjZVwiXS5pbmRleE9mKG4pKXt2YXIgbz1lLmludGVybmFsT3V0cHV0U2hhcGVzW3RdOzE9PT1vW28ubGVuZ3RoLTFdfHxlLmxvc3NGdW5jdGlvbnNbdF09PT1CZT8tMSE9PVtcImFjY3VyYWN5XCIsXCJhY2NcIl0uaW5kZXhPZihuKT9pPVZlOi0xIT09W1wiY3Jvc3NlbnRyb3B5XCIsXCJjZVwiXS5pbmRleE9mKG4pJiYoaT1LZSk6ZS5sb3NzRnVuY3Rpb25zW3RdPT09amU/LTEhPT1bXCJhY2N1cmFjeVwiLFwiYWNjXCJdLmluZGV4T2Yobik/aT1HZTotMSE9PVtcImNyb3NzZW50cm9weVwiLFwiY2VcIl0uaW5kZXhPZihuKSYmKGk9cm4pOi0xIT09W1wiYWNjdXJhY3lcIixcImFjY1wiXS5pbmRleE9mKG4pP2k9V2U6LTEhPT1bXCJjcm9zc2VudHJvcHlcIixcImNlXCJdLmluZGV4T2YobikmJihpPWVuKTt2YXIgcz12b2lkIDA7LTEhPT1bXCJhY2N1cmFjeVwiLFwiYWNjXCJdLmluZGV4T2Yobik/cz1cImFjY1wiOi0xIT09W1wiY3Jvc3NlbnRyb3B5XCIsXCJjZVwiXS5pbmRleE9mKG4pJiYocz1cImNlXCIpLGE9aSxyPVwiXCIrc31lbHNle3ZhciB1PWZ1bmN0aW9uKHQpe3ZhciBlPXtiaW5hcnlBY2N1cmFjeTpWZSxjYXRlZ29yaWNhbEFjY3VyYWN5OldlLHByZWNpc2lvbjokZSxjYXRlZ29yaWNhbENyb3NzZW50cm9weTplbixzcGFyc2VDYXRlZ29yaWNhbENyb3NzZW50cm9weTpybixtc2U6WGUsTVNFOlllLG1hZTpKZSxNQUU6WmUsbWFwZTpRZSxNQVBFOnRuLGNvc2luZTpubn07aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJnQgaW4gZSlyZXR1cm4gZVt0XTtpZihcInN0cmluZ1wiIT10eXBlb2YgdCYmbnVsbCE9dClyZXR1cm4gdDt0aHJvdyBuZXcgdyhcIlVua25vd24gbWV0cmljIFwiK3QpfShuKTthPXUscj1cIlwiK259dmFyIGM7cnQocixmdW5jdGlvbigpe2M9YX0pLGZ1bmN0aW9uKHQsbixyKXtlLm91dHB1dE5hbWVzLmxlbmd0aD4xJiYobj1lLm91dHB1dE5hbWVzW3RdK1wiX1wiK24pLGUubWV0cmljc05hbWVzLnB1c2gobiksZS5tZXRyaWNzVGVuc29ycy5wdXNoKFtyLHRdKX0odCxyLGMpfSxzPTAsdT1tW3RdO3M8dS5sZW5ndGg7cysrKW8odVtzXSl9KCl9LG49MDtuPGUub3V0cHV0cy5sZW5ndGg7KytuKXQobil9KSx0aGlzLmNvbGxlY3RlZFRyYWluYWJsZVdlaWdodHM9dGhpcy50cmFpbmFibGVXZWlnaHRzfSxlLnByb3RvdHlwZS5jaGVja1RyYWluYWJsZVdlaWdodHNDb25zaXN0ZW5jeT1mdW5jdGlvbigpe251bGwhPXRoaXMuY29sbGVjdGVkVHJhaW5hYmxlV2VpZ2h0cyYmdGhpcy50cmFpbmFibGVXZWlnaHRzLmxlbmd0aCE9PXRoaXMuY29sbGVjdGVkVHJhaW5hYmxlV2VpZ2h0cy5sZW5ndGgmJmNvbnNvbGUud2FybihcIkRpc2NyZXBhbmN5IGJldHdlZW4gdHJhaW5hYmxld2VpZ2h0cyBhbmQgY29sbGVjdGVkIHRyYWluYWJsZSB3ZWlnaHRzLiBEaWQgeW91IHNldCBgbW9kZWwudHJhaW5hYmxlYCB3aXRob3V0IGNhbGxpbmcgYG1vZGVsLmNvbXBpbGUoKWAgYWZ0ZXJ3YXJkcz9cIil9LGUucHJvdG90eXBlLmV2YWx1YXRlPWZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj17fSk7dmFyIHI9bnVsbD09bi5iYXRjaFNpemU/MzI6bi5iYXRjaFNpemU7T24ocik7dmFyIGk9dGhpcy5zdGFuZGFyZGl6ZVVzZXJEYXRhKHQsZSwhMCxyKTt0cnl7dmFyIGE9aVswXS5jb25jYXQoaVsxXSk7dGhpcy5tYWtlVGVzdEZ1bmN0aW9uKCk7dmFyIG89dGhpcy50ZXN0RnVuY3Rpb247cmV0dXJuIEkodGhpcy50ZXN0TG9vcChvLGEscixuLnZlcmJvc2Usbi5zdGVwcykpfWZpbmFsbHl7RG4oaVswXSx0KSxEbihpWzFdLGUpfX0sZS5wcm90b3R5cGUuZXZhbHVhdGVEYXRhc2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGModGhpcyxmdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5tYWtlVGVzdEZ1bmN0aW9uKCksWzIsSW4odGhpcyx0LGUpXX0pfSl9LGUucHJvdG90eXBlLmNoZWNrTnVtU2FtcGxlcz1mdW5jdGlvbih0LGUsbixyKXt2YXIgaTtpZih2b2lkIDA9PT1yJiYocj1cInN0ZXBzXCIpLG51bGwhPW4pe2lmKGk9bnVsbCxudWxsIT1lKXRocm93IG5ldyB3KFwiSWYgXCIrcitcIiBpcyBzZXQsIGJhdGNoU2l6ZSBtdXN0IGJlIG51bGwgb3IgdW5kZWZpbmVkLkdvdCBiYXRjaFNpemUgPSBcIitlKX1lbHNle2lmKG51bGw9PXQpdGhyb3cgbmV3IHcoXCJFaXRoZXIgdGhlIGlucHV0IGRhdGEgc2hvdWxkIGhhdmUgYSBkZWZpbmVkIHNoYXBlLCBvciBcIityK1wiIHNob3VkIGJlIHNwZWNpZmllZC5cIik7aT1BcnJheS5pc0FycmF5KHQpP3RbMF0uc2hhcGVbMF06dC5zaGFwZVswXX1yZXR1cm4gaX0sZS5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbih0LGUpe2lmKEFycmF5LmlzQXJyYXkoZSkmJjA9PT1lLmxlbmd0aCl0aHJvdyBuZXcgdyhcImBvdXRwdXRzYCBpcyBhbiBlbXB0eSBBcnJheSwgd2hpY2ggaXMgbm90IGFsbG93ZWQuXCIpO3ZhciBuPUFycmF5LmlzQXJyYXkoZSksaT1uP2U6W2VdLGE9dGhpcy5yZXRyaWV2ZVN5bWJvbGljVGVuc29ycyhpKSxvPW5ldyBobjtpZih0IGluc3RhbmNlb2Ygci5vJiYodD1bdF0pLEFycmF5LmlzQXJyYXkodCkpe2lmKHQubGVuZ3RoIT09dGhpcy5pbnB1dHMubGVuZ3RoKXRocm93IG5ldyB3KFwiVGhlIG51bWJlciBvZiBpbnB1dHMgcHJvdmlkZWQgKFwiK3QubGVuZ3RoK1wiKSBkb2VzIG5vdCBtYXRjaCB0aGUgbnVtYmVyIG9mIGlucHV0cyBvZiB0aGlzIG1vZGVsIChcIit0aGlzLmlucHV0cy5sZW5ndGgrXCIpLlwiKTtmb3IodmFyIHM9MDtzPHRoaXMuaW5wdXRzLmxlbmd0aDsrK3Mpby5hZGQodGhpcy5pbnB1dHNbc10sdFtzXSl9ZWxzZSBmb3IodmFyIHU9MCxjPXRoaXMuaW5wdXRzO3U8Yy5sZW5ndGg7dSsrKXt2YXIgbD1jW3VdLGY9dFtsLm5hbWVdO2lmKG51bGw9PWYpdGhyb3cgbmV3IHcoXCJObyB2YWx1ZSBpcyBwcm92aWRlZCBmb3IgdGhlIG1vZGVsJ3MgaW5wdXQgXCIrbC5uYW1lKTtvLmFkZChsLGYpfXZhciBoPW1uKGEsbyk7cmV0dXJuIG4/aDpoWzBdfSxlLnByb3RvdHlwZS5yZXRyaWV2ZVN5bWJvbGljVGVuc29ycz1mdW5jdGlvbih0KXtmb3IodmFyIGU9RShudWxsLHQubGVuZ3RoKSxuPXQubGVuZ3RoLHI9MCxpPXRoaXMubGF5ZXJzO3I8aS5sZW5ndGg7cisrKXtmb3IodmFyIGE9aVtyXSxvPUFycmF5LmlzQXJyYXkoYS5vdXRwdXQpP2Eub3V0cHV0OlthLm91dHB1dF0scz1vLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5uYW1lfSksdT0wO3U8dC5sZW5ndGg7Kyt1KXt2YXIgYz1zLmluZGV4T2YodFt1XSk7aWYoLTEhPT1jJiYoZVt1XT1vW2NdLG4tLSksMD09PW4pYnJlYWt9aWYoMD09PW4pYnJlYWt9aWYobj4wKXt2YXIgbD1bXTt0aHJvdyBlLmZvckVhY2goZnVuY3Rpb24oZSxuKXtudWxsPT1lJiZsLnB1c2godFtuXSl9KSxuZXcgdyhcIkNhbm5vdCBmaW5kIFN5bWJvbGljVGVuc29ycyBmb3Igb3V0cHV0IG5hbWUocyk6IFwiK0pTT04uc3RyaW5naWZ5KGwpKX1yZXR1cm4gZX0sZS5wcm90b3R5cGUucHJlZGljdExvb3A9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXM7cmV0dXJuIHZvaWQgMD09PWUmJihlPTMyKSx2b2lkIDA9PT1uJiYobj0hMSksT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIGE9aS5jaGVja051bVNhbXBsZXModCk7aWYobil0aHJvdyBuZXcgXyhcIlZlcmJvc2UgcHJlZGljdExvb3AoKSBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtmb3IodmFyIG89Q24oYSxlKSxzPVtdLHU9ZnVuY3Rpb24oZSl7dmFyIG49T2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49b1tlXVswXSxyPW9bZV1bMV0sYT1rbih0LG4scikscz1bXTtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgdT0wO3U8YS5sZW5ndGg7Kyt1KXMucHVzaCh7a2V5OmkuaW5wdXRzW3VdLHZhbHVlOmFbdV19KTtlbHNlIHMucHVzaCh7a2V5OmkuaW5wdXRzWzBdLHZhbHVlOmF9KTt2YXIgYz1uZXcgaG4ocyk7cmV0dXJuIG1uKGkub3V0cHV0cyxjKX0pO2lmKDA9PT1lKWZvcih2YXIgYT0wLHU9bjthPHUubGVuZ3RoO2ErKyl7dmFyIGM9dVthXTtzLnB1c2goYyl9ZWxzZSBmb3IodmFyIGw9MDtsPG4ubGVuZ3RoOysrbClzW2xdPXd0KHNbbF0sbltsXSl9LGM9MDtjPG8ubGVuZ3RoOysrYyl1KGMpO3JldHVybiBJKHMpfSl9LGUucHJvdG90eXBlLnByZWRpY3Q9ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT1lJiYoZT17fSk7dmFyIG49Um4odCk7TG4obix0aGlzLmlucHV0TmFtZXMsdGhpcy5mZWVkSW5wdXRTaGFwZXMsITEpO3RyeXt2YXIgcj1udWxsPT1lLmJhdGNoU2l6ZT8zMjplLmJhdGNoU2l6ZTtyZXR1cm4gT24ociksdGhpcy5wcmVkaWN0TG9vcChuLHIpfWZpbmFsbHl7RG4obix0KX19LGUucHJvdG90eXBlLnByZWRpY3RPbkJhdGNoPWZ1bmN0aW9uKHQpe3JldHVybiBMbih0LHRoaXMuaW5wdXROYW1lcyx0aGlzLmZlZWRJbnB1dFNoYXBlcywhMCksdGhpcy5wcmVkaWN0TG9vcCh0LHQuc2hhcGVbMF0pfSxlLnByb3RvdHlwZS5zdGFuZGFyZGl6ZVVzZXJEYXRhPWZ1bmN0aW9uKHQsZSxuLGkpe2lmKHZvaWQgMD09PW4mJihuPSEwKSxudWxsPT10aGlzLm9wdGltaXplcil0aHJvdyBuZXcgYihcIllvdSBtdXN0IGNvbXBpbGUgYSBtb2RlbCBiZWZvcmUgdHJhaW5pbmcvdGVzdGluZy4gVXNlIE1vZGVsLmNvbXBpbGUobW9kZWxDb21waWxlQXJncykuXCIpO2Zvcih2YXIgYT1bXSxvPTA7bzx0aGlzLmZlZWRPdXRwdXRTaGFwZXMubGVuZ3RoOysrbyl7dmFyIHM9dGhpcy5mZWVkT3V0cHV0U2hhcGVzW29dO3RoaXMuZmVlZExvc3NGbnNbb109PT1qZT9hLnB1c2gocy5zbGljZSgwLHMubGVuZ3RoLTEpLmNvbmNhdChbMV0pKTphLnB1c2gocyl9aWYoZnVuY3Rpb24odCxlLG4pe3ZhciBpPUQodC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2hhcGVbMF19KSk7aS5zb3J0KCk7dmFyIGE9RChlLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZVswXX0pKTtpZihhLnNvcnQoKSxpLmxlbmd0aD4xKXRocm93IG5ldyB3KFwiQWxsIGlucHV0IFRlbnNvcnMgKHgpIHNob3VsZCBoYXZlIHRoZSBzYW1lIG51bWJlciBvZiBzYW1wbGVzLiBHb3QgYXJyYXkgc2hhcGVzOiBcIitKU09OLnN0cmluZ2lmeSh0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZX0pKSk7aWYoYS5sZW5ndGg+MSl0aHJvdyBuZXcgdyhcIkFsbCB0YXJnZXQgVGVuc29ycyAoeSkgc2hvdWxkIGhhdmUgdGhlIHNhbWUgbnVtYmVyIG9mIHNhbXBsZXMuIEdvdCBhcnJheSBzaGFwZXM6IFwiK0pTT04uc3RyaW5naWZ5KGUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSkpKTtpZihpLmxlbmd0aD4wJiZhLmxlbmd0aD4wJiYhci5xZS5hcnJheXNFcXVhbChpLGEpKXRocm93IG5ldyB3KFwiSW5wdXQgVGVuc29ycyBzaG91bGQgaGF2ZSB0aGUgc2FtZSBudW1iZXIgb2Ygc2FtcGxlcyBhcyB0YXJnZXQgVGVuc29ycy4gRm91bmQgXCIraVswXStcIiBpbnB1dCBzYW1wbGUocykgYW5kIFwiK2FbMF0rXCIgdGFyZ2V0IHNhbXBsZShzKS5cIil9KHQ9Qm4odCx0aGlzLmZlZWRJbnB1dE5hbWVzLHRoaXMuZmVlZElucHV0U2hhcGVzLCExLFwiaW5wdXRcIiksZT1CbihlLHRoaXMuZmVlZE91dHB1dE5hbWVzLGEsITEsXCJ0YXJnZXRcIikpLGZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9W09lLEJlLE1lXSxpPTA7aTx0Lmxlbmd0aDsrK2kpe3ZhciBhPXRbaV0sbz1lW2ldLHM9bltpXTtpZihudWxsIT1vKXtpZihvPT09TWUmJjE9PT1hLnNoYXBlW2Euc2hhcGUubGVuZ3RoLTFdKXRocm93IG5ldyB3KFwiWW91IGFyZSBwYXNzaW5nIGEgdGFyZ2V0IGFycmF5IG9mIHNoYXBlIFwiK2Euc2hhcGUrXCIgd2hpbGUgdXNpbmcgYSBsb3NzICdjYXRlZ29yaWNhbF9jcm9zc2VudHJvcHknLiAnY2F0ZWdvcmljYWxfY3Jvc3NlbnRyb3B5J2V4cGVjdHMgdGFyZ2V0cyB0byBiZSBiaW5hcnkgbWF0cmljZXMgKDFzIGFuZCAwcykgb2Ygc2hhcGUgW3NhbXBsZXMsIGNsYXNzZXNdLlwiKTtpZigtMSE9PXIuaW5kZXhPZihvKSlmb3IodmFyIHU9YS5zaGFwZS5zbGljZSgxKSxjPXMuc2xpY2UoMSksbD0wO2w8dS5sZW5ndGg7KytsKXt2YXIgZj11W2xdLGg9Y1tsXTtpZihudWxsIT1oJiZmIT09aCl0aHJvdyBuZXcgdyhcIkEgdGFyZ2V0IFRlbnNvciB3aXRoIHNoYXBlIFwiK2Euc2hhcGUrXCIgd2FzIHBhc3NlZCBmb3IgYW4gb3V0cHV0IG9mIHNoYXBlIFwiK3MrXCIsIHdoaWxlIHVzaW5nIGEgbG9zcyBmdW5jdGlvbiB0aGF0IGV4cGVjdHMgdGFyZ2V0cyB0byBoYXZlIHRoZSBzYW1lIHNoYXBlIGFzIHRoZSBvdXRwdXQuXCIpfX19fShlLHRoaXMuZmVlZExvc3NGbnMsdGhpcy5mZWVkT3V0cHV0U2hhcGVzKSx0aGlzLnN0YXRlZnVsJiZudWxsIT1pJiZpPjAmJnRbMF0uc2hhcGVbMF0laSE9MCl0aHJvdyBuZXcgdyhcIkluIGEgc3RhdGVmdWwgbmV0d29yaywgeW91IHNob3VsZCBvbmx5IHBhc3MgaW5wdXRzIHdpdGggYSBudW1iZXIgb2Ygc2FtcGxlcyB0aGF0IGlzIGRpdmlzaWJsZSBieSB0aGUgYmF0Y2ggc2l6ZSBcIitpK1wiLiBGb3VuZDogXCIrdFswXS5zaGFwZVswXStcIiBzYW1wbGUocykuXCIpO3JldHVyblt0LGUsbnVsbF19LGUucHJvdG90eXBlLnRlc3RMb29wPWZ1bmN0aW9uKHQsZSxuLGksYSl7dmFyIG89dGhpcztyZXR1cm4gdm9pZCAwPT09aSYmKGk9MCksT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIHM9by5jaGVja051bVNhbXBsZXMoZSxuLGEsXCJzdGVwc1wiKSx1PVtdO2lmKGk+MCl0aHJvdyBuZXcgXyhcIlZlcmJvc2UgbW9kZSBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtpZihudWxsIT1hKXRocm93IG5ldyBfKFwic3RlcHMgbW9kZSBpbiB0ZXN0TG9vcCgpIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7Zm9yKHZhciBjPUNuKHMsbiksbD1PYmplY3Qoci5aZCkocHQoMCxzKSksZj0wO2Y8Yy5sZW5ndGg7KytmKXt2YXIgaD1jW2ZdWzBdLHA9Y1tmXVsxXSxkPWd0KGwsaCxwLWgpLG09QW4oZSxkKSxnPXQobSk7aWYoMD09PWYpZm9yKHZhciB2PTA7djxnLmxlbmd0aDsrK3YpdS5wdXNoKHkoMCkpO2Zvcih2PTA7djxnLmxlbmd0aDsrK3Ype3ZhciBiPWdbdl07dVt2XT1PYmplY3Qoci51KSh1W3ZdLE9iamVjdChyLnpjKSh5KHAtaCksYikpfX1mb3Iodj0wO3Y8dS5sZW5ndGg7Kyt2KXVbdl09T2JqZWN0KHIubGIpKHVbdl0seShzKSk7cmV0dXJuIHV9KX0sZS5wcm90b3R5cGUuZ2V0RGVkdXBlZE1ldHJpY3NOYW1lcz1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLm1ldHJpY3NOYW1lcyxlPVtdLG49MDtuPHQubGVuZ3RoOysrbil7dmFyIHI9dFtuXSxpPXI7Tih0LHIpPjEmJihpKz1cIl9cIitOKHQuc2xpY2UoMCxuKSxyKSksZS5wdXNoKGkpfXJldHVybiBlfSxlLnByb3RvdHlwZS5tYWtlVHJhaW5GdW5jdGlvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciBuPWUuc2xpY2UoMCx0LmlucHV0cy5sZW5ndGgpLGk9ZS5zbGljZSh0LmlucHV0cy5sZW5ndGgsdC5pbnB1dHMubGVuZ3RoK3Qub3V0cHV0cy5sZW5ndGgpLGE9W10sbz10LmNvbGxlY3RlZFRyYWluYWJsZVdlaWdodHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlYWQoKX0pO3JldHVyblt0Lm9wdGltaXplci5taW5pbWl6ZShmdW5jdGlvbigpe2Zvcih2YXIgZT1bXSxvPTA7bzx0LmlucHV0cy5sZW5ndGg7KytvKWUucHVzaCh7a2V5OnQuaW5wdXRzW29dLHZhbHVlOm5bb119KTt2YXIgcyx1PW5ldyBobihlKSxjPW1uKHQub3V0cHV0cyx1LHt0cmFpbmluZzohMH0pO2ZvcihvPTA7bzx0Lmxvc3NGdW5jdGlvbnMubGVuZ3RoOysrbyl7dmFyIGw9KDAsdC5sb3NzRnVuY3Rpb25zW29dKShpW29dLGNbb10pO09iamVjdChyLnFjKShsKSxzPTA9PT1vP2w6T2JqZWN0KHIudSkocyxsKX1mb3Iobz0wO288dC5tZXRyaWNzVGVuc29ycy5sZW5ndGg7KytvKXt2YXIgZj10Lm1ldHJpY3NUZW5zb3JzW29dWzBdLGg9dC5tZXRyaWNzVGVuc29yc1tvXVsxXSxwPU9iamVjdChyLnFjKShmKGlbaF0sY1toXSkpO09iamVjdChyLlJiKShwKSxhLnB1c2gocCl9cmV0dXJuIHM9T2JqZWN0KHIucWMpKHMpLHQuY2FsY3VsYXRlTG9zc2VzKCkuZm9yRWFjaChmdW5jdGlvbih0KXtzPU9iamVjdChyLnUpKHMsdCl9KSxzfSwhMCxvKV0uY29uY2F0KGEpfX0sZS5wcm90b3R5cGUubWFrZVRlc3RGdW5jdGlvbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy50ZXN0RnVuY3Rpb249ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2Zvcih2YXIgbixpPVtdLGE9ZS5zbGljZSgwLHQuaW5wdXRzLmxlbmd0aCksbz1lLnNsaWNlKHQuaW5wdXRzLmxlbmd0aCx0LmlucHV0cy5sZW5ndGgrdC5vdXRwdXRzLmxlbmd0aCkscz1bXSx1PTA7dTx0LmlucHV0cy5sZW5ndGg7Kyt1KXMucHVzaCh7a2V5OnQuaW5wdXRzW3VdLHZhbHVlOmFbdV19KTt2YXIgYz1uZXcgaG4ocyksbD1tbih0Lm91dHB1dHMsYyk7Zm9yKHU9MDt1PHQubG9zc0Z1bmN0aW9ucy5sZW5ndGg7Kyt1KXt2YXIgZj10Lmxvc3NGdW5jdGlvbnNbdV0saD1PYmplY3Qoci5xYykoZihvW3VdLGxbdV0pKTtuPTA9PT11P2g6T2JqZWN0KHIudSkobixoKSxpLnB1c2gobil9Zm9yKHU9MDt1PHQubWV0cmljc1RlbnNvcnMubGVuZ3RoOysrdSl7dmFyIHA9dC5tZXRyaWNzVGVuc29yc1t1XVswXSxkPXQubWV0cmljc1RlbnNvcnNbdV1bMV0sbT1PYmplY3Qoci5xYykocChvW2RdLGxbZF0pKTtpLnB1c2gobSl9cmV0dXJuIGl9KX19LGUucHJvdG90eXBlLmZpdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPXt9KSx1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24ocil7cmV0dXJuWzIsVG4odGhpcyx0LGUsbildfSl9KX0sZS5wcm90b3R5cGUuZml0RGF0YXNldD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuWzIsU24odGhpcyx0LGUpXX0pfSl9LGUucHJvdG90eXBlLnRyYWluT25CYXRjaD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLGksYSxvLHMsdSxsLGYsaCxwLGQ7cmV0dXJuIGModGhpcyxmdW5jdGlvbihjKXtzd2l0Y2goYy5sYWJlbCl7Y2FzZSAwOm49dGhpcy5zdGFuZGFyZGl6ZVVzZXJEYXRhKHQsZSksaT1uWzBdLGE9blsxXSxvPXRoaXMubWFrZVRyYWluRnVuY3Rpb24oKSxzPW8oaS5jb25jYXQoYSkpLHU9W10sbD0wLGY9cyxjLmxhYmVsPTE7Y2FzZSAxOnJldHVybiBsPGYubGVuZ3RoPyhoPWZbbF0sZD0ocD11KS5wdXNoLFs0LGguZGF0YSgpXSk6WzMsNF07Y2FzZSAyOmQuYXBwbHkocCxbYy5zZW50KClbMF1dKSxjLmxhYmVsPTM7Y2FzZSAzOnJldHVybiBsKyssWzMsMV07Y2FzZSA0OnJldHVybiBPYmplY3Qoci5qYikocyksWzIsSSh1KV19fSl9KX0sZS5wcm90b3R5cGUuZ2V0TmFtZWRXZWlnaHRzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT17fSxuPW51bGwhPXQmJnQudHJhaW5hYmxlT25seSxyPW4/dGhpcy50cmFpbmFibGVXZWlnaHRzOnRoaXMud2VpZ2h0cyxpPXRoaXMuZ2V0V2VpZ2h0cyhuKSxhPTA7YTxyLmxlbmd0aDsrK2EpbiYmIXJbYV0udHJhaW5hYmxlfHwoZVtyW2FdLm9yaWdpbmFsTmFtZV09aVthXSk7cmV0dXJuIGV9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInN0b3BUcmFpbmluZ1wiLHtzZXQ6ZnVuY3Rpb24odCl7dGhpcy5zdG9wVHJhaW5pbmdfPXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuc2F2ZT1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLGksYTtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKG8pe3N3aXRjaChvLmxhYmVsKXtjYXNlIDA6aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKDA9PT0obj1yLlBiLmdldFNhdmVIYW5kbGVycyh0KSkubGVuZ3RoKXRocm93IG5ldyB3KFwiQ2Fubm90IGZpbmQgYW55IHNhdmUgaGFuZGxlcnMgZm9yIFVSTCAnXCIrdCtcIidcIik7aWYobi5sZW5ndGg+MSl0aHJvdyBuZXcgdyhcIkZvdW5kIG1vcmUgdGhhbiBvbmUgKFwiK24ubGVuZ3RoK1wiKSBzYXZlIGhhbmRsZXJzIGZvciBVUkwgJ1wiK3QrXCInXCIpO3Q9blswXX1pZihudWxsPT10LnNhdmUpdGhyb3cgbmV3IHcoXCJNb2RlbC5zYXZlKCkgY2Fubm90IHByb2NlZWQgYmVjYXVzZSB0aGUgSU9IYW5kbGVyIHByb3ZpZGVkIGRvZXMgbm90IGhhdmUgdGhlIGBzYXZlYCBhdHRyaWJ1dGUgZGVmaW5lZC5cIik7cmV0dXJuWzQsci5QYi5lbmNvZGVXZWlnaHRzKHRoaXMuZ2V0TmFtZWRXZWlnaHRzKGUpKV07Y2FzZSAxOnJldHVybiBpPW8uc2VudCgpLCExLG51bGwsYT10aGlzLnRvSlNPTihudWxsLCExKSxbMix0LnNhdmUoe21vZGVsVG9wb2xvZ3k6YSx3ZWlnaHREYXRhOmkuZGF0YSx3ZWlnaHRTcGVjczppLnNwZWNzfSldfX0pfSl9LGUuY2xhc3NOYW1lPVwiTW9kZWxcIixlfShfbik7ZnVuY3Rpb24gRm4odCxlLG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj0hMCksdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgaSxhLG8scztyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHUpe3N3aXRjaCh1LmxhYmVsKXtjYXNlIDA6aWYobnVsbD09dC5sb2FkKXRocm93IG5ldyB3KFwiQ2Fubm90IHByb2NlZWQgd2l0aCBtb2RlbCBsb2FkaW5nIGJlY2F1c2UgdGhlIElPSGFuZGxlciBwcm92aWRlZCBkb2VzIG5vdCBoYXZlIHRoZSBgbG9hZGAgbWV0aG9kIGltcGxlbWVudGVkLlwiKTtyZXR1cm5bNCx0LmxvYWQoKV07Y2FzZSAxOmlmKGk9dS5zZW50KCksbnVsbCE9KGE9aS5tb2RlbFRvcG9sb2d5KS5tb2RlbF9jb25maWcmJihhPWEubW9kZWxfY29uZmlnKSxvPW51bGwhPWkud2VpZ2h0RGF0YSYmbnVsbCE9aS53ZWlnaHRTcGVjcyYmbixzPWNuKGZuKGEpLGUsbyksbnVsbCE9aS53ZWlnaHREYXRhKXtpZihudWxsPT1pLndlaWdodFNwZWNzKXRocm93IG5ldyB3KFwiTW9kZWwgYXJ0aWZhY3RzIGNvbnRhaW5zIHdlaWdodCBkYXRhLCBidXQgbm90IHdlaWdodCBzcGVjcy4gVGhlcmVmb3JlIGxvYWRpbmcgb2Ygd2VpZ2h0cyBjYW5ub3QgcHJvY2VlZC5cIik7ITEsITAscy5sb2FkV2VpZ2h0cyhyLlBiLmRlY29kZVdlaWdodHMoaS53ZWlnaHREYXRhLGkud2VpZ2h0U3BlY3MpLCExLCEwLG4pfXJldHVyblsyLHNdfX0pfSl9ci50ZC5yZWdpc3RlckNsYXNzKHpuKTt2YXIgVW49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyx7aW5wdXRzOltdLG91dHB1dHM6W119KXx8dGhpcztpZihlPWV8fHt9LG4udHJhaW5hYmxlPSEwLG4uX3VwZGF0YWJsZT0hMCxuLmJ1aWx0PSExLG4ubmFtZT1udWxsIT1lLm5hbWU/ZS5uYW1lOmQoXCJzZXF1ZW50aWFsX1wiKSxudWxsIT1lLmxheWVycylmb3IodmFyIHI9MCxpPWUubGF5ZXJzO3I8aS5sZW5ndGg7cisrKXt2YXIgYT1pW3JdO24uYWRkKGEpfXJldHVybiBufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY2hlY2tTaGFwZT1mdW5jdGlvbih0KXtpZih0LmluYm91bmROb2Rlc1swXS5vdXRwdXRUZW5zb3JzWzBdLnNoYXBlLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQ8MH0pKXRocm93IG5ldyB3KFwiTmVnYXRpdmUgZGltZW5zaW9uIHNpemUgY2F1c2VkIGJ5IGFkZGluZyBsYXllciBcIit0Lm5hbWUrXCIgd2l0aCBpbnB1dCBzaGFwZSBbXCIrdC5pbmJvdW5kTm9kZXNbMF0uaW5wdXRUZW5zb3JzWzBdLnNoYXBlK1wiXVwiKX0sZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3ZhciBuLHI9dCBpbnN0YW5jZW9mIGV8fHQgaW5zdGFuY2VvZiB6bjtpZihyKXtpZigxIT09KG49dCkub3V0cHV0cy5sZW5ndGgpdGhyb3cgbmV3IHcoXCJBbGwgbGF5ZXJzIGluIGEgU2VxdWVudGlhbCBtb2RlbCBzaG91bGQgaGF2ZSBhIHNpbmdsZSBvdXRwdXQgdGVuc29yLiBGb3IgbXVsdGktb3V0cHV0IGxheWVycywgdXNlIHRoZSBmdW5jdGlvbmFsIEFQSS5cIik7aWYoMSE9PW4uaW5wdXRzLmxlbmd0aCl0aHJvdyBuZXcgdyhcIkFsbCBsYXllcnMgaW4gYSBTZXF1ZW50aWFsIG1vZGVsIHNob3VsZCBoYXZlIGEgc2luZ2xlIGlucHV0IHRlbnNvci4gRm9yIG11bHRpLWlucHV0IGxheWVycywgdXNlIHRoZSBmdW5jdGlvbmFsIEFQSS5cIil9aWYoMD09PXRoaXMub3V0cHV0cy5sZW5ndGgpe2lmKDA9PT10LmluYm91bmROb2Rlcy5sZW5ndGgpe2lmKG51bGw9PXQuYmF0Y2hJbnB1dFNoYXBlKXRocm93IG5ldyB3KFwiVGhlIGZpcnN0IGxheWVyIGluIGEgU2VxdWVudGlhbCBtb2RlbCBtdXN0IGdldCBhbiBgaW5wdXRTaGFwZWAgb3IgYGJhdGNoSW5wdXRTaGFwZWAgYXJndW1lbnQuXCIpO3ZhciBpPWRlKHtiYXRjaFNoYXBlOnQuYmF0Y2hJbnB1dFNoYXBlLGR0eXBlOnQuZHR5cGUsbmFtZTp0Lm5hbWUrXCJfaW5wdXRcIn0pO3QuYXBwbHkoaSl9aWYocil0aGlzLm91dHB1dHM9bi5vdXRwdXRzLHRoaXMuaW5wdXRzPW4uaW5wdXRzO2Vsc2V7aWYoMSE9PXQuaW5ib3VuZE5vZGVzLmxlbmd0aCl0aHJvdyBuZXcgdyhcIkEgbGF5ZXIgYWRkZWQgdG8gYSBTZXF1ZW50aWFsIG1vZGVsIG11c3Qgbm90IGFscmVhZHkgYmUgY29ubmVjdGVkIHNvbWV3aGVyZSBlbHNlLiBNb2RlbCByZWNlaXZlZCBsYXllciBcIit0Lm5hbWUrXCIgd2hpY2ggaGFzIFwiK3QuaW5ib3VuZE5vZGVzLmxlbmd0aCtcIiBwcmUtZXhpc3RpbmcgaW5ib3VuZCBjb25uZWN0aW9ucy5cIik7aWYoMSE9PXQuaW5ib3VuZE5vZGVzWzBdLm91dHB1dFRlbnNvcnMubGVuZ3RoKXRocm93IG5ldyB3KFwiQWxsIGxheWVycyBpbiBhIFNlcXVlbnRpYWwgbW9kZWwgc2hvdWxkIGhhdmUgYSBzaW5nbGUgb3V0cHV0IHRlbnNvci4gRm9yIG11bHRpLW91dHB1dCBsYXllcnMsIHVzZSB0aGUgZnVuY3Rpb25hbCBBUEkuXCIpO3RoaXMuY2hlY2tTaGFwZSh0KSx0aGlzLm91dHB1dHM9W3QuaW5ib3VuZE5vZGVzWzBdLm91dHB1dFRlbnNvcnNbMF1dLHRoaXMuaW5wdXRzPWZ1bmN0aW9uIHQoZSxuLHIpe2lmKChudWxsPT1ufHxudWxsIT1yJiZyPjApJiYobj1lLnNvdXJjZUxheWVyLHI9ZS5ub2RlSW5kZXgpLDA9PT1uLmluYm91bmROb2Rlcy5sZW5ndGgpcmV0dXJuW2VdO3ZhciBpPW4uaW5ib3VuZE5vZGVzW3JdO2lmKDA9PT1pLmluYm91bmRMYXllcnMubGVuZ3RoKXJldHVybiBpLmlucHV0VGVuc29ycztmb3IodmFyIGE9W10sbz0wO288aS5pbmJvdW5kTGF5ZXJzLmxlbmd0aDtvKyspZm9yKHZhciBzPTAsdT10KGkuaW5wdXRUZW5zb3JzW29dLGkuaW5ib3VuZExheWVyc1tvXSxpLm5vZGVJbmRpY2VzW29dKTtzPHUubGVuZ3RoO3MrKyl7dmFyIGM9dVtzXTstMT09PWEuaW5kZXhPZihjKSYmYS5wdXNoKGMpfXJldHVybiBhfSh0aGlzLm91dHB1dHNbMF0pfXRoaXMuaW5ib3VuZE5vZGVzPVtdLG5ldyB1ZSh7b3V0Ym91bmRMYXllcjp0aGlzLGluYm91bmRMYXllcnM6W10sbm9kZUluZGljZXM6W10sdGVuc29ySW5kaWNlczpbXSxpbnB1dFRlbnNvcnM6dGhpcy5pbnB1dHMsb3V0cHV0VGVuc29yczp0aGlzLm91dHB1dHMsaW5wdXRNYXNrczpFKG51bGwsdGhpcy5pbnB1dHMubGVuZ3RoKSxvdXRwdXRNYXNrczpbbnVsbF0saW5wdXRTaGFwZXM6dGhpcy5pbnB1dHMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnNoYXBlfSksb3V0cHV0U2hhcGVzOnRoaXMub3V0cHV0c1swXS5zaGFwZX0pfWVsc2V7dmFyIGE9dC5hcHBseSh0aGlzLm91dHB1dHNbMF0pO2lmKEFycmF5LmlzQXJyYXkoYSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFsbCBsYXllcnMgaW4gYSBTZXF1ZW50aWFsIG1vZGVsIHNob3VsZCBoYXZlIGEgc2luZ2xlIG91dHB1dCB0ZW5zb3IuIEZvciBtdWx0aS1vdXRwdXQgbGF5ZXJzLCB1c2UgdGhlIGZ1bmN0aW9uYWwgQVBJLlwiKTt0aGlzLmNoZWNrU2hhcGUodCksdGhpcy5vdXRwdXRzPVthXSx0aGlzLmluYm91bmROb2Rlc1swXS5vdXRwdXRUZW5zb3JzPXRoaXMub3V0cHV0cyx0aGlzLmluYm91bmROb2Rlc1swXS5vdXRwdXRTaGFwZXM9W3RoaXMub3V0cHV0c1swXS5zaGFwZV19dGhpcy5sYXllcnMucHVzaCh0KSx0aGlzLmJ1aWx0PSExfSxlLnByb3RvdHlwZS5wb3A9ZnVuY3Rpb24oKXtpZigwPT09dGhpcy5sYXllcnMubGVuZ3RoKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGVyZSBhcmUgbm8gbGF5ZXJzIGluIHRoZSBtb2RlbC5cIik7aWYodGhpcy5sYXllcnMucG9wKCksMD09PXRoaXMubGF5ZXJzLmxlbmd0aCl0aGlzLm91dHB1dHM9W10sdGhpcy5pbmJvdW5kTm9kZXM9W10sdGhpcy5vdXRib3VuZE5vZGVzPVtdO2Vsc2V7dmFyIHQ9dGhpcy5sYXllcnMubGVuZ3RoLTE7dGhpcy5sYXllcnNbdF0ub3V0Ym91bmROb2Rlcz1bXSx0aGlzLm91dHB1dHM9W3RoaXMubGF5ZXJzW3RdLm91dHB1dF0sdGhpcy5pbmJvdW5kTm9kZXNbMF0ub3V0cHV0VGVuc29ycz10aGlzLm91dHB1dHMsdGhpcy5pbmJvdW5kTm9kZXNbMF0ub3V0cHV0U2hhcGVzPVt0aGlzLm91dHB1dHNbMF0uc2hhcGVdfX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT10aGlzLm1vZGVsJiZ0aGlzLmJ1aWxkKCksdGhpcy5tb2RlbC5jYWxsKHQsZSl9LGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe2lmKFF0KHQpLDA9PT10aGlzLmlucHV0cy5sZW5ndGh8fDA9PT10aGlzLm91dHB1dHMubGVuZ3RoKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTZXF1ZW50aWFsIG1vZGVsIGNhbm5vdCBiZSBidWlsdDogbW9kZWwgaXMgZW1wdHkuIEFkZCBzb21lIGxheWVycyBmaXJzdC5cIik7dGhpcy5tb2RlbD1uZXcgem4oe2lucHV0czp0aGlzLmlucHV0cyxvdXRwdXRzOnRoaXMub3V0cHV0c1swXSxuYW1lOnRoaXMubmFtZStcIl9tb2RlbFwifSksdGhpcy5tb2RlbC50cmFpbmFibGU9dGhpcy50cmFpbmFibGUsdGhpcy5tb2RlbC51cGRhdGFibGU9dGhpcy51cGRhdGFibGUsdGhpcy5zdXBwb3J0c01hc2tpbmc9dGhpcy5tb2RlbC5zdXBwb3J0c01hc2tpbmcsdGhpcy5pbnB1dExheWVycz10aGlzLm1vZGVsLmlucHV0TGF5ZXJzLHRoaXMuaW5wdXRMYXllcnNOb2RlSW5kaWNlcz10aGlzLm1vZGVsLmlucHV0TGF5ZXJzTm9kZUluZGljZXMsdGhpcy5pbnB1dExheWVyc1RlbnNvckluZGljZXM9dGhpcy5tb2RlbC5pbnB1dExheWVyc1RlbnNvckluZGljZXMsdGhpcy5vdXRwdXRMYXllcnM9dGhpcy5tb2RlbC5vdXRwdXRMYXllcnMsdGhpcy5vdXRwdXRMYXllcnNOb2RlSW5kaWNlcz10aGlzLm1vZGVsLm91dHB1dExheWVyc05vZGVJbmRpY2VzLHRoaXMub3V0cHV0TGF5ZXJzVGVuc29ySW5kaWNlcz10aGlzLm1vZGVsLm91dHB1dExheWVyc1RlbnNvckluZGljZXMsdGhpcy5ub2Rlc0J5RGVwdGg9dGhpcy5tb2RlbC5ub2Rlc0J5RGVwdGgsdGhpcy5jb250YWluZXJOb2Rlcz10aGlzLm1vZGVsLmNvbnRhaW5lck5vZGVzLHRoaXMub3V0cHV0TmFtZXM9dGhpcy5tb2RlbC5vdXRwdXROYW1lcyx0aGlzLmlucHV0TmFtZXM9dGhpcy5tb2RlbC5pbnB1dE5hbWVzLHRoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLmNvdW50UGFyYW1zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnVpbHR8fHRoaXMuYnVpbGQoKSx0LnByb3RvdHlwZS5jb3VudFBhcmFtcy5jYWxsKHRoaXMpfSxlLnByb3RvdHlwZS5zdW1tYXJ5PWZ1bmN0aW9uKGUsbixyKXt2b2lkIDA9PT1yJiYocj1jb25zb2xlLmxvZyksdGhpcy5idWlsdHx8dGhpcy5idWlsZCgpLHQucHJvdG90eXBlLnN1bW1hcnkuY2FsbCh0aGlzLGUsbixyKX0sZS5wcm90b3R5cGUuc2V0V2VpZ2h0cz1mdW5jdGlvbih0KXtudWxsPT10aGlzLm1vZGVsJiZ0aGlzLmJ1aWxkKCksdGhpcy5tb2RlbC5zZXRXZWlnaHRzKHQpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ1cGRhdGFibGVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VwZGF0YWJsZX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuYnVpbHQmJih0aGlzLm1vZGVsLnVwZGF0YWJsZT10KSx0aGlzLl91cGRhdGFibGU9dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5ldmFsdWF0ZT1mdW5jdGlvbih0LGUsbil7aWYodm9pZCAwPT09biYmKG49e30pLCF0aGlzLmJ1aWx0KXRocm93IG5ldyBiKFwiVGhlIG1vZGVsIG5lZWRzIHRvIGJlIGNvbXBpbGVkIGJlZm9yZSBiZWluZyB1c2VkLlwiKTtyZXR1cm4gdGhpcy5tb2RlbC5ldmFsdWF0ZSh0LGUsbil9LGUucHJvdG90eXBlLmV2YWx1YXRlRGF0YXNldD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7aWYoIXRoaXMuYnVpbHQpdGhyb3cgbmV3IGIoXCJUaGUgbW9kZWwgbmVlZHMgdG8gYmUgY29tcGlsZWQgYmVmb3JlIGJlaW5nIHVzZWQuXCIpO3JldHVyblsyLHRoaXMubW9kZWwuZXZhbHVhdGVEYXRhc2V0KHQsZSldfSl9KX0sZS5wcm90b3R5cGUucHJlZGljdD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT17fSksbnVsbD09dGhpcy5tb2RlbCYmdGhpcy5idWlsZCgpLHRoaXMubW9kZWwucHJlZGljdCh0LGUpfSxlLnByb3RvdHlwZS5wcmVkaWN0T25CYXRjaD1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dGhpcy5tb2RlbCYmdGhpcy5idWlsZCgpLHRoaXMubW9kZWwucHJlZGljdE9uQmF0Y2godCl9LGUucHJvdG90eXBlLmNvbXBpbGU9ZnVuY3Rpb24odCl7dGhpcy5idWlsZCgpLHRoaXMubW9kZWwuY29tcGlsZSh0KSx0aGlzLm9wdGltaXplcj10aGlzLm1vZGVsLm9wdGltaXplcix0aGlzLmxvc3M9dGhpcy5tb2RlbC5sb3NzLHRoaXMubWV0cmljcz10aGlzLm1vZGVsLm1ldHJpY3MsdGhpcy5tZXRyaWNzVGVuc29ycz10aGlzLm1vZGVsLm1ldHJpY3NUZW5zb3JzLHRoaXMubWV0cmljc05hbWVzPXRoaXMubW9kZWwubWV0cmljc05hbWVzfSxlLnByb3RvdHlwZS5maXQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj17fSksdSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKHIpe2lmKCF0aGlzLmJ1aWx0KXRocm93IG5ldyBiKFwiVGhlIG1vZGVsIG5lZWRzIHRvIGJlIGNvbXBpbGVkIGJlZm9yZSBiZWluZyB1c2VkLlwiKTtyZXR1cm5bMix0aGlzLm1vZGVsLmZpdCh0LGUsbildfSl9KX0sZS5wcm90b3R5cGUuZml0RGF0YXNldD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7aWYoIXRoaXMuYnVpbHQpdGhyb3cgbmV3IGIoXCJUaGUgbW9kZWwgbmVlZHMgdG8gYmUgY29tcGlsZWQgYmVmb3JlIGJlaW5nIHVzZWQuXCIpO3JldHVyblsyLHRoaXMubW9kZWwuZml0RGF0YXNldCh0LGUpXX0pfSl9LGUucHJvdG90eXBlLnRyYWluT25CYXRjaD1mdW5jdGlvbih0LGUpe3JldHVybiB1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBjKHRoaXMsZnVuY3Rpb24obil7cmV0dXJuWzIsdGhpcy5tb2RlbC50cmFpbk9uQmF0Y2godCxlKV19KX0pfSxlLmZyb21Db25maWc9ZnVuY3Rpb24odCxuLGksYSl7dmFyIG87dm9pZCAwPT09aSYmKGk9e30pLHZvaWQgMD09PWEmJihhPSExKTt2YXIgcz17fTtpZihuIGluc3RhbmNlb2YgQXJyYXkpe2lmKG51bGw9PW5bMF0uY2xhc3NOYW1lfHxcIk1lcmdlXCI9PT1uWzBdLmNsYXNzTmFtZSl0aHJvdyBuZXcgdyhcIkxlZ2FjeSBzZXJpYWxpemF0aW9uIGZvcm1hdCBub3Qgc3VwcG9ydGVkIHlldC5cIik7bz1ufWVsc2Ugci5xZS5hc3NlcnQobnVsbCE9bi5sYXllcnMsXCJXaGVuIHRoZSBjb25maWcgZGF0YSBmb3IgYSBTZXF1ZW50aWFsIG1vZGVsIGlzIG5vdCBhbiBBcnJheSwgaXQgbXVzdCBiZSBhbiBPYmplY3QgdGhhdCBjb250YWlucyB0aGUgJ2xheWVycycgZmllbGQuXCIpLG89bi5sYXllcnMsZGVsZXRlIG4ubGF5ZXJzLHM9bjt2YXIgdT1uZXcgdChzKTtpZighKHUgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgXyhcIlNlcXVlbnRpYWwuZnJvbUNvbmZpZyBjYWxsZWQgb24gbm9uLVNlcXVlbnRpYWwgaW5wdXQ6IFwiK3UpO2Zvcih2YXIgYz0wLGw9bztjPGwubGVuZ3RoO2MrKyl7dmFyIGY9Y24obFtjXSx2b2lkIDAsYSk7YSYmZi5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkKCEwKSx1LmFkZChmKX1yZXR1cm4gdX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwic3RvcFRyYWluaW5nXCIse3NldDpmdW5jdGlvbih0KXt0aGlzLm1vZGVsLnN0b3BUcmFpbmluZz10fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTAsbj10aGlzLmxheWVycztlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTt0LnB1c2goe2NsYXNzTmFtZTpyLmdldENsYXNzTmFtZSgpLGNvbmZpZzpyLmdldENvbmZpZygpfSl9cmV0dXJuIHR9LGUuY2xhc3NOYW1lPVwiU2VxdWVudGlhbFwiLGV9KHpuKTtmdW5jdGlvbiBWbih0KXtyZXR1cm4gbmV3IHpuKHQpfWZ1bmN0aW9uIFduKHQpe3JldHVybiBuZXcgVW4odCl9ZnVuY3Rpb24gcW4odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9ITApLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSEwKSx1KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuO3JldHVybiBjKHRoaXMsZnVuY3Rpb24oaSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKDA9PT0obj1yLlBiLmdldExvYWRIYW5kbGVycyh0KSkubGVuZ3RoKW4ucHVzaChyLlBiLmJyb3dzZXJIVFRQUmVxdWVzdCh0KSk7ZWxzZSBpZihuLmxlbmd0aD4xKXRocm93IG5ldyB3KFwiRm91bmQgbW9yZSB0aGFuIG9uZSAoXCIrbi5sZW5ndGgrXCIpIGxvYWQgaGFuZGxlcnMgZm9yIFVSTCAnXCIrdCtcIidcIik7dD1uWzBdfXJldHVyblsyLEZuKHQsdm9pZCAwLGUpXX0pfSl9KHQsZSl9ZnVuY3Rpb24gJG4odCl7cmV0dXJuIGRlKHQpfWZ1bmN0aW9uIEhuKHQsZSl7U2UucmVnaXN0ZXJDYWxsYmFja0NvbnN0cnVjdG9yKHQsZSl9ci50ZC5yZWdpc3RlckNsYXNzKFVuKTt2YXIgS249ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXtyZXR1cm57fX0sZX0oci50ZC5TZXJpYWxpemFibGUpLEduPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MSksZnVuY3Rpb24odCxlKXtpZih2b2lkIDA9PT1lJiYoZT0xKSwxIT09ZSl0aHJvdyBuZXcgXyhcIlN1cHBvcnQgZm9yIGFscGhhIHZhbHVlcyBvdGhlciB0aGFuIDEgKFwiK2UrXCIpIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO3JldHVybiBPYmplY3Qoci5vYikodCl9KHQsZSl9LGUuY2xhc3NOYW1lPVwiZWx1XCIsZX0oS24pO3IudGQucmVnaXN0ZXJDbGFzcyhHbik7dmFyIFhuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChyLnJkKSh0KX0sZS5jbGFzc05hbWU9XCJzZWx1XCIsZX0oS24pO3IudGQucmVnaXN0ZXJDbGFzcyhYbik7dmFyIFluPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChyLmZkKSh0KX0sZS5jbGFzc05hbWU9XCJyZWx1XCIsZX0oS24pO3IudGQucmVnaXN0ZXJDbGFzcyhZbik7dmFyIEpuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci50YykoeSg2KSxPYmplY3Qoci5mZCkodCkpfSl9LGUuY2xhc3NOYW1lPVwicmVsdTZcIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKEpuKTt2YXIgWm49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sZS5jbGFzc05hbWU9XCJsaW5lYXJcIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKFpuKTt2YXIgUW49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIud2QpKHQpfSxlLmNsYXNzTmFtZT1cInNpZ21vaWRcIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKFFuKTt2YXIgdHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPU9iamVjdChyLnUpKHkoLjUpLE9iamVjdChyLnpjKSh5KC4yKSx0KSk7cmV0dXJuIE9iamVjdChyLlEpKGUsMCwxKX0pfSh0KX0sZS5jbGFzc05hbWU9XCJoYXJkU2lnbW9pZFwiLGV9KEtuKTtyLnRkLnJlZ2lzdGVyQ2xhc3ModHIpO3ZhciBlcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5HZCkodCl9LGUuY2xhc3NOYW1lPVwic29mdHBsdXNcIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKGVyKTt2YXIgbnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5sYikodCxPYmplY3Qoci51KSh5KDEpLE9iamVjdChyLnIpKHQpKSl9KX0odCl9LGUuY2xhc3NOYW1lPVwic29mdHNpZ25cIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKG5yKTt2YXIgcnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIuWGQpKHQpfSxlLmNsYXNzTmFtZT1cInRhbmhcIixlfShLbik7ci50ZC5yZWdpc3RlckNsYXNzKHJyKTt2YXIgaXI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0tMSksT2JqZWN0KHIuRmQpKHQsZSl9LGUuY2xhc3NOYW1lPVwic29mdG1heFwiLGV9KEtuKTtmdW5jdGlvbiBhcih0KXtyZXR1cm4gdC5nZXRDbGFzc05hbWUoKX1mdW5jdGlvbiBvcih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT17fSksVCh0LHIudGQuU2VyaWFsaXphdGlvbk1hcC5nZXRNYXAoKS5jbGFzc05hbWVNYXAsZSxcImFjdGl2YXRpb25cIil9ZnVuY3Rpb24gc3IodCl7cmV0dXJuIG51bGw9PXQ/b3Ioe2NsYXNzTmFtZTpcImxpbmVhclwiLGNvbmZpZzp7fX0pOlwic3RyaW5nXCI9PXR5cGVvZiB0P29yKHtjbGFzc05hbWU6dCxjb25maWc6e319KTp0IGluc3RhbmNlb2YgS24/dDpvcih0KX1yLnRkLnJlZ2lzdGVyQ2xhc3MoaXIpO3ZhciB1cj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gYShlLHQpLGV9KHIudGQuU2VyaWFsaXphYmxlKSxjcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzKXx8dGhpcyxyPW51bGw9PWV8fG51bGw9PWUubDE/LjAxOmUubDEsaT1udWxsPT1lfHxudWxsPT1lLmwyPy4wMTplLmwyO3JldHVybiBuLmhhc0wxPTAhPT1yLG4uaGFzTDI9MCE9PWksbi5sMT15KHIpLG4ubDI9eShpKSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG49T2JqZWN0KHIuemUpKFsxXSk7cmV0dXJuIGUuaGFzTDEmJihuPU9iamVjdChyLnUpKG4sT2JqZWN0KHIuVmQpKE9iamVjdChyLnpjKShlLmwxLE9iamVjdChyLnIpKHQpKSkpKSxlLmhhc0wyJiYobj1PYmplY3Qoci51KShuLE9iamVjdChyLlZkKShPYmplY3Qoci56YykoZS5sMixOdCh0KSkpKSksbi5hc1NjYWxhcigpfSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3JldHVybntsMTp0aGlzLmwxLmRhdGFTeW5jKClbMF0sbDI6dGhpcy5sMi5kYXRhU3luYygpWzBdfX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB0KHtsMTplLmwxLGwyOmUubDJ9KX0sZS5jbGFzc05hbWU9XCJMMUwyXCIsZX0odXIpO3IudGQucmVnaXN0ZXJDbGFzcyhjcik7dmFyIGxyPXtsMWwyOlwiTDFMMlwifTtmdW5jdGlvbiBmcih0KXtyZXR1cm4gUCh0KX1mdW5jdGlvbiBocih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT17fSksVCh0LHIudGQuU2VyaWFsaXphdGlvbk1hcC5nZXRNYXAoKS5jbGFzc05hbWVNYXAsZSxcInJlZ3VsYXJpemVyXCIpfWZ1bmN0aW9uIHByKHQpe3JldHVybiBudWxsPT10P251bGw6XCJzdHJpbmdcIj09dHlwZW9mIHQ/aHIoe2NsYXNzTmFtZTp0IGluIGxyP2xyW3RdOnQsY29uZmlnOnt9fSk6dCBpbnN0YW5jZW9mIHVyP3Q6aHIodCl9dmFyIGRyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsbnVsbD09ZT97fTplKXx8dGhpcztyZXR1cm4gbi5zdXBwb3J0c01hc2tpbmc9ITAsbnVsbCE9ZSYmKG4ubWF4VmFsdWU9ZS5tYXhWYWx1ZSksbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt0PVp0KHQpO3ZhciBuPU9iamVjdChyLmZkKSh0KTtyZXR1cm4gbnVsbCE9dGhpcy5tYXhWYWx1ZSYmKG49T2JqZWN0KHIuUSkobiwwLHRoaXMubWF4VmFsdWUpKSxufSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXttYXhWYWx1ZTp0aGlzLm1heFZhbHVlfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJSZUxVXCIsZX0obGUpO3IudGQucmVnaXN0ZXJDbGFzcyhkcik7dmFyIG1yPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsbnVsbD09ZT97fTplKXx8dGhpcztyZXR1cm4gbi5ERUZBVUxUX0FMUEhBPS4zLG51bGw9PWUmJihlPXt9KSxuLmFscGhhPW51bGw9PWUuYWxwaGE/bi5ERUZBVUxUX0FMUEhBOmUuYWxwaGEsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj1adCh0KTtyZXR1cm4gT2JqZWN0KHIuU2IpKG4sdGhpcy5hbHBoYSl9LGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2FscGhhOnRoaXMuYWxwaGF9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIkxlYWt5UmVMVVwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MobXIpO3ZhciBncj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLG51bGw9PWU/e306ZSl8fHRoaXM7aWYobi5ERUZBVUxUX0FMUEhBX0lOSVRJQUxJWkVSPVwiemVyb3NcIixudWxsPT1lJiYoZT17fSksbi5zdXBwb3J0c01hc2tpbmc9ITAsbi5hbHBoYUluaXRpYWxpemVyPUd0KGUuYWxwaGFJbml0aWFsaXplcnx8bi5ERUZBVUxUX0FMUEhBX0lOSVRJQUxJWkVSKSxuLmFscGhhUmVndWxhcml6ZXI9cHIoZS5hbHBoYVJlZ3VsYXJpemVyKSxuLmFscGhhQ29uc3RyYWludD1LKGUuYWxwaGFDb25zdHJhaW50KSxudWxsPT1lLnNoYXJlZEF4ZXMpbi5zaGFyZWRBeGVzPW51bGw7ZWxzZSBpZihBcnJheS5pc0FycmF5KGUuc2hhcmVkQXhlcykpbi5zaGFyZWRBeGVzPWUuc2hhcmVkQXhlcztlbHNle2lmKFwibnVtYmVyXCIhPXR5cGVvZiBlLnNoYXJlZEF4ZXMpdGhyb3cgbmV3IHcoXCJFeHBlY3RlZCBzaGFyZWRBeGVzIHRvIGJlIGEgbnVtYmVyIG9yIGFuIGFycmF5IG9mIG51bWJlcnMsIGJ1dCBnb3QgXCIrZS5zaGFyZWRBeGVzKTtuLnNoYXJlZEF4ZXM9W2Uuc2hhcmVkQXhlc119cmV0dXJuIG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbih0KXt2YXIgZT0odD1RdCh0KSkuc2xpY2UoMSk7aWYobnVsbCE9dGhpcy5zaGFyZWRBeGVzKWZvcih2YXIgbj0wLHI9dGhpcy5zaGFyZWRBeGVzO248ci5sZW5ndGg7bisrKWVbKGE9cltuXSktMV09MTt0aGlzLmFscGhhPXRoaXMuYWRkV2VpZ2h0KFwiYWxwaGFcIixlLFwiZmxvYXQzMlwiLHRoaXMuYWxwaGFJbml0aWFsaXplcix0aGlzLmFscGhhUmVndWxhcml6ZXIsITAsdGhpcy5hbHBoYUNvbnN0cmFpbnQpO3ZhciBpPXt9O2lmKG51bGwhPXRoaXMuc2hhcmVkQXhlcylmb3IodmFyIGE9MTthPHQubGVuZ3RoOysrYSlpW2FdPXRbYV07dGhpcy5pbnB1dFNwZWM9W25ldyBhZSh7bmRpbTp0Lmxlbmd0aCxheGVzOml9KV0sdGhpcy5idWlsdD0hMH0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3JldHVybiB0PVp0KHQpLE9iamVjdChyLlZjKSh0LHRoaXMuYWxwaGEucmVhZCgpKX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2FscGhhSW5pdGlhbGl6ZXI6S3QodGhpcy5hbHBoYUluaXRpYWxpemVyKSxhbHBoYVJlZ3VsYXJpemVyOmZyKHRoaXMuYWxwaGFSZWd1bGFyaXplciksYWxwaGFDb25zdHJhaW50OiQodGhpcy5hbHBoYUNvbnN0cmFpbnQpLHNoYXJlZEF4ZXM6dGhpcy5zaGFyZWRBeGVzfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJQUmVMVVwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoZ3IpO3ZhciB5cj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLG51bGw9PWU/e306ZSl8fHRoaXM7aWYobi5ERUZBVUxUX0FMUEhBPTEsbnVsbD09ZSYmKGU9e30pLG51bGwhPWUuYWxwaGEmJmUuYWxwaGEhPT1uLkRFRkFVTFRfQUxQSEEpdGhyb3cgbmV3IF8oXCJOb24tZGVmYXVsdCBhbHBoYSB2YWx1ZSAoXCIrZS5hbHBoYStcIikgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgRUxVIGxheWVyIHlldC5cIik7cmV0dXJuIG4uYWxwaGE9bnVsbD09ZS5hbHBoYT9uLkRFRkFVTFRfQUxQSEE6ZS5hbHBoYSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPVp0KHQpO3JldHVybiBPYmplY3Qoci5vYikobil9LGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2FscGhhOnRoaXMuYWxwaGF9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIkVMVVwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoeXIpO3ZhciB2cj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLG51bGw9PWU/e306ZSl8fHRoaXM7cmV0dXJuIG4uREVGQVVMVF9USEVUQT0xLG51bGw9PWUmJihlPXt9KSxuLnRoZXRhPW51bGw9PWUudGhldGE/bi5ERUZBVUxUX1RIRVRBOmUudGhldGEsbi50aGV0YVRlbnNvcj15KG4udGhldGEpLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49WnQodCk7cmV0dXJuIG4ubXVsKGR0KG4uZ3JlYXRlcih0aGlzLnRoZXRhVGVuc29yKSxcImZsb2F0MzJcIikpfSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXt0aGV0YTp0aGlzLnRoZXRhfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJUaHJlc2hvbGRlZFJlTFVcIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKHZyKTt2YXIgYnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxudWxsPT1lP3t9OmUpfHx0aGlzO3JldHVybiBuLkRFRkFVTFRfQVhJUz0xLG51bGw9PWUmJihlPXt9KSxuLnNvZnRtYXg9KG5ldyBpcikuYXBwbHksbi5heGlzPW51bGw9PWUuYXhpcz9uLkRFRkFVTFRfQVhJUzplLmF4aXMsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj1adCh0KTtyZXR1cm4gdGhpcy5zb2Z0bWF4KG4sdGhpcy5heGlzKX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3JldHVybiB0fSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17YXhpczp0aGlzLmF4aXN9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlNvZnRtYXhcIixlfShsZSk7ZnVuY3Rpb24gd3IodCxlLG4pe2lmKFwibnVtYmVyXCI9PXR5cGVvZiB0KXJldHVybiBFKHQsZSk7aWYodC5sZW5ndGghPT1lKXRocm93IG5ldyB3KFwiVGhlIFwiK24rXCIgYXJndW1lbnQgbXVzdCBiZSBhIHR1cGxlIG9mIFwiK2UrXCIgaW50ZWdlcnMuIFJlY2VpdmVkOiBcIit0Lmxlbmd0aCtcIiBlbGVtZW50cy5cIik7Zm9yKHZhciByPTA7cjxlOysrcil7dmFyIGk9dFtyXTtpZighdXQoaSkpdGhyb3cgbmV3IHcoXCJUaGUgXCIrbitcIiBhcmd1bWVudCBtdXN0IGJlIGEgdHVwbGUgb2YgXCIrZStcIiBpbnRlZ2Vycy4gUmVjZWl2ZWQ6IFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiIGluY2x1ZGluZyBhIG5vbi1pbnRlZ2VyIG51bWJlciBcIitpKX1yZXR1cm4gdH1mdW5jdGlvbiBfcih0LGUsbixyLGkpe3JldHVybiB2b2lkIDA9PT1pJiYoaT0xKSxudWxsPT10P3Q6KGE9XCJzYW1lXCI9PT1uP3Q6dC0oZSsoZS0xKSooaS0xKSkrMSxNYXRoLmZsb29yKChhK3ItMSkvcikpO3ZhciBhfWZ1bmN0aW9uIHhyKHQsZSxuLHIpe2lmKG51bGw9PXQpcmV0dXJuIG51bGw7aWYoXCJ2YWxpZFwiPT09cil0PXQqZStodChbbi1lLDBdKTtlbHNle2lmKFwic2FtZVwiIT09cil0aHJvdyBuZXcgdyhcIlVuc3VwcG9ydCBwYWRkaW5nIG1vZGU6IFwiK3IrXCIuXCIpO3QqPWV9cmV0dXJuIHR9ZnVuY3Rpb24gRXIodCxlKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIEooZSksXCJjaGFubmVsc0ZpcnN0XCI9PT1lP09iamVjdChyLm1lKSh0LFswLDIsMywxXSk6dH0pfXIudGQucmVnaXN0ZXJDbGFzcyhicik7dmFyIFNyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobixyKXt2YXIgaT10LmNhbGwodGhpcyxyKXx8dGhpcztpZihpLmJpYXM9bnVsbCxpLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSPVwiZ2xvcm90Tm9ybWFsXCIsaS5ERUZBVUxUX0JJQVNfSU5JVElBTElaRVI9XCJ6ZXJvc1wiLGUudmVyaWZ5QXJncyhyKSxpLnJhbms9biwxIT09aS5yYW5rJiYyIT09aS5yYW5rKXRocm93IG5ldyBfKFwiQ29udm9sdXRpb24gbGF5ZXIgZm9yIHJhbmsgb3RoZXIgdGhhbiAxIG9yIDIgKFwiK2kucmFuaytcIikgaXMgbm90IGltcGxlbWVudGVkIHlldC5cIik7aWYoaS5rZXJuZWxTaXplPXdyKHIua2VybmVsU2l6ZSxuLFwia2VybmVsU2l6ZVwiKSxpLnN0cmlkZXM9d3IobnVsbD09ci5zdHJpZGVzPzE6ci5zdHJpZGVzLG4sXCJzdHJpZGVzXCIpLGkucGFkZGluZz1udWxsPT1yLnBhZGRpbmc/XCJ2YWxpZFwiOnIucGFkZGluZyxRKGkucGFkZGluZyksaS5kYXRhRm9ybWF0PW51bGw9PXIuZGF0YUZvcm1hdD9cImNoYW5uZWxzTGFzdFwiOnIuZGF0YUZvcm1hdCxKKGkuZGF0YUZvcm1hdCksaS5hY3RpdmF0aW9uPXNyKHIuYWN0aXZhdGlvbiksaS51c2VCaWFzPW51bGw9PXIudXNlQmlhc3x8ci51c2VCaWFzLGkuYmlhc0luaXRpYWxpemVyPUd0KHIuYmlhc0luaXRpYWxpemVyfHxpLkRFRkFVTFRfQklBU19JTklUSUFMSVpFUiksaS5iaWFzQ29uc3RyYWludD1LKHIuYmlhc0NvbnN0cmFpbnQpLGkuYmlhc1JlZ3VsYXJpemVyPXByKHIuYmlhc1JlZ3VsYXJpemVyKSxpLmFjdGl2aXR5UmVndWxhcml6ZXI9cHIoci5hY3Rpdml0eVJlZ3VsYXJpemVyKSxpLmRpbGF0aW9uUmF0ZT13cihudWxsPT1yLmRpbGF0aW9uUmF0ZT8xOnIuZGlsYXRpb25SYXRlLG4sXCJkaWxhdGlvblJhdGVcIiksMT09PWkucmFuayYmQXJyYXkuaXNBcnJheShpLmRpbGF0aW9uUmF0ZSkmJjEhPT1pLmRpbGF0aW9uUmF0ZS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJkaWxhdGlvblJhdGUgbXVzdCBiZSBhIG51bWJlciBvciBhbiBhcnJheSBvZiBhIHNpbmdsZSBudW1iZXIgZm9yIDFEIGNvbnZvbHV0aW9uLCBidXQgcmVjZWl2ZWQgXCIrSlNPTi5zdHJpbmdpZnkoaS5kaWxhdGlvblJhdGUpKTtpZigyPT09aS5yYW5rKWlmKFwibnVtYmVyXCI9PXR5cGVvZiBpLmRpbGF0aW9uUmF0ZSlpLmRpbGF0aW9uUmF0ZT1baS5kaWxhdGlvblJhdGUsaS5kaWxhdGlvblJhdGVdO2Vsc2UgaWYoMiE9PWkuZGlsYXRpb25SYXRlLmxlbmd0aCl0aHJvdyBuZXcgdyhcImRpbGF0aW9uUmF0ZSBtdXN0IGJlIGEgbnVtYmVyIG9yIGFycmF5IG9mIHR3byBudW1iZXJzIGZvciAyRCBjb252b2x1dGlvbiwgYnV0IHJlY2VpdmVkIFwiK0pTT04uc3RyaW5naWZ5KGkuZGlsYXRpb25SYXRlKSk7cmV0dXJuIGl9cmV0dXJuIGEoZSx0KSxlLnZlcmlmeUFyZ3M9ZnVuY3Rpb24odCl7aWYoUyhcImtlcm5lbFNpemVcImluIHQsXCJyZXF1aXJlZCBrZXkgJ2tlcm5lbFNpemUnIG5vdCBpbiBjb25maWdcIiksXCJudW1iZXJcIiE9dHlwZW9mIHQua2VybmVsU2l6ZSYmIUIodC5rZXJuZWxTaXplLFwibnVtYmVyXCIsMSwyKSl0aHJvdyBuZXcgdyhcIkJhc2VDb252IGV4cGVjdHMgY29uZmlnLmtlcm5lbFNpemUgdG8gYmUgbnVtYmVyIG9yIG51bWJlcltdIHdpdGggbGVuZ3RoIDEgb3IgMiwgYnV0IHJlY2VpdmVkIFwiK0pTT04uc3RyaW5naWZ5KHQua2VybmVsU2l6ZSkrXCIuXCIpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17a2VybmVsU2l6ZTp0aGlzLmtlcm5lbFNpemUsc3RyaWRlczp0aGlzLnN0cmlkZXMscGFkZGluZzp0aGlzLnBhZGRpbmcsZGF0YUZvcm1hdDp0aGlzLmRhdGFGb3JtYXQsZGlsYXRpb25SYXRlOnRoaXMuZGlsYXRpb25SYXRlLGFjdGl2YXRpb246YXIodGhpcy5hY3RpdmF0aW9uKSx1c2VCaWFzOnRoaXMudXNlQmlhcyxiaWFzSW5pdGlhbGl6ZXI6S3QodGhpcy5iaWFzSW5pdGlhbGl6ZXIpLGJpYXNSZWd1bGFyaXplcjpmcih0aGlzLmJpYXNSZWd1bGFyaXplciksYWN0aXZpdHlSZWd1bGFyaXplcjpmcih0aGlzLmFjdGl2aXR5UmVndWxhcml6ZXIpLGJpYXNDb25zdHJhaW50OiQodGhpcy5iaWFzQ29uc3RyYWludCl9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlfShsZSksTnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShuLHIpe3ZhciBpPXQuY2FsbCh0aGlzLG4scil8fHRoaXM7cmV0dXJuIGkua2VybmVsPW51bGwsZS52ZXJpZnlBcmdzKHIpLGkuZmlsdGVycz1yLmZpbHRlcnMsaS5rZXJuZWxJbml0aWFsaXplcj1HdChyLmtlcm5lbEluaXRpYWxpemVyfHxpLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSKSxpLmtlcm5lbENvbnN0cmFpbnQ9SyhyLmtlcm5lbENvbnN0cmFpbnQpLGkua2VybmVsUmVndWxhcml6ZXI9cHIoci5rZXJuZWxSZWd1bGFyaXplciksaX1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe3Q9UXQodCk7dmFyIGU9XCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/MTp0Lmxlbmd0aC0xO2lmKG51bGw9PXRbZV0pdGhyb3cgbmV3IHcoXCJUaGUgY2hhbm5lbCBkaW1lbnNpb24gb2YgdGhlIGlucHV0IHNob3VsZCBiZSBkZWZpbmVkLiBGb3VuZCBcIit0W2VdKTt2YXIgbixyPXRbZV0saT10aGlzLmtlcm5lbFNpemUuY29uY2F0KFtyLHRoaXMuZmlsdGVyc10pO3RoaXMua2VybmVsPXRoaXMuYWRkV2VpZ2h0KFwia2VybmVsXCIsaSxudWxsLHRoaXMua2VybmVsSW5pdGlhbGl6ZXIsdGhpcy5rZXJuZWxSZWd1bGFyaXplciwhMCx0aGlzLmtlcm5lbENvbnN0cmFpbnQpLHRoaXMudXNlQmlhcyYmKHRoaXMuYmlhcz10aGlzLmFkZFdlaWdodChcImJpYXNcIixbdGhpcy5maWx0ZXJzXSxudWxsLHRoaXMuYmlhc0luaXRpYWxpemVyLHRoaXMuYmlhc1JlZ3VsYXJpemVyLCEwLHRoaXMuYmlhc0NvbnN0cmFpbnQpKSx0aGlzLmlucHV0U3BlYz1be25kaW06dGhpcy5yYW5rKzIsYXhlczoobj17fSxuW2VdPXIsbil9XSx0aGlzLmJ1aWx0PSEwfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIGU7dD1adCh0KTt2YXIgaT1udWxsPT1uLmJpYXM/bnVsbDpuLmJpYXMucmVhZCgpO2lmKDE9PT1uLnJhbmspZT1mdW5jdGlvbih0LGUsbixpLGEsbyxzKXtyZXR1cm4gdm9pZCAwPT09aSYmKGk9MSksdm9pZCAwPT09YSYmKGE9XCJ2YWxpZFwiKSx2b2lkIDA9PT1zJiYocz0xKSxPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZihudWxsPT1vJiYobz1cImNoYW5uZWxzTGFzdFwiKSxKKG8pLDMhPT10LnNoYXBlLmxlbmd0aCl0aHJvdyBuZXcgdyhcIlRoZSBpbnB1dCBvZiBhIGNvbnYxZFdpdGhCaWFzIG9wZXJhdGlvbiBzaG91bGQgYmUgMywgYnV0IGlzIFwiK3Quc2hhcGUubGVuZ3RoK1wiIGluc3RlYWQuXCIpO2lmKDMhPT1lLnNoYXBlLmxlbmd0aCl0aHJvdyBuZXcgdyhcIlRoZSBrZXJuZWwgZm9yIGEgY29udjFkV2l0aEJpYXMgb3BlcmF0aW9uIHNob3VsZCBiZSAzLCBidXQgaXMgXCIrZS5zaGFwZS5sZW5ndGgrXCIgaW5zdGVhZFwiKTtpZihudWxsIT1uJiYxIT09bi5zaGFwZS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJUaGUgYmlhcyBmb3IgYSBjb252MWRXaXRoQmlhcyBvcGVyYXRpb24gc2hvdWxkIGJlIDEsIGJ1dCBpcyBcIitlLnNoYXBlLmxlbmd0aCtcIiBpbnN0ZWFkXCIpO2lmKFwiY2hhbm5lbHNGaXJzdFwiPT09byYmKHQ9T2JqZWN0KHIubWUpKHQsWzAsMiwxXSkpLFwiY2F1c2FsXCI9PT1hKXRocm93IG5ldyBfKFwiVGhlIHN1cHBvcnQgZm9yIENBVVNBTCBwYWRkaW5nIG1vZGUgaW4gY29udjFkV2l0aEJpYXMgaXMgbm90IGltcGxlbWVudGVkIHlldC5cIik7dmFyIHU9T2JqZWN0KHIuWSkodCxlLGksXCJzYW1lXCI9PT1hP1wic2FtZVwiOlwidmFsaWRcIixcIk5XQ1wiLHMpO3JldHVybiBudWxsIT1uJiYodT1JdCh1LG4pKSx1fSl9KHQsbi5rZXJuZWwucmVhZCgpLGksbi5zdHJpZGVzWzBdLG4ucGFkZGluZyxuLmRhdGFGb3JtYXQsbi5kaWxhdGlvblJhdGVbMF0pO2Vsc2UgaWYoMj09PW4ucmFuayllPWZ1bmN0aW9uKHQsZSxuLGksYSxvLHMpe3JldHVybiB2b2lkIDA9PT1pJiYoaT1bMSwxXSksdm9pZCAwPT09YSYmKGE9XCJ2YWxpZFwiKSxPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZihudWxsPT1vJiYobz1cImNoYW5uZWxzTGFzdFwiKSxKKG8pLDMhPT10LnJhbmsmJjQhPT10LnJhbmspdGhyb3cgbmV3IHcoXCJjb252MmRXaXRoQmlhcyBleHBlY3RzIGlucHV0IHRvIGJlIG9mIHJhbmsgMyBvciA0LCBidXQgcmVjZWl2ZWQgXCIrdC5yYW5rK1wiLlwiKTtpZigzIT09ZS5yYW5rJiY0IT09ZS5yYW5rKXRocm93IG5ldyB3KFwiY29udjJkV2l0aEJpYXMgZXhwZWN0cyBrZXJuZWwgdG8gYmUgb2YgcmFuayAzIG9yIDQsIGJ1dCByZWNlaXZlZCBcIit0LnJhbmsrXCIuXCIpO3ZhciB1PUVyKHQsbyk7aWYoXCJjYXVzYWxcIj09PWEpdGhyb3cgbmV3IF8oXCJUaGUgc3VwcG9ydCBmb3IgQ0FVU0FMIHBhZGRpbmcgbW9kZSBpbiBjb252MWRXaXRoQmlhcyBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtyZXR1cm4gdT1PYmplY3Qoci5aKSh1LGUsaSxcInNhbWVcIj09PWE/XCJzYW1lXCI6XCJ2YWxpZFwiLFwiTkhXQ1wiLHMpLG51bGwhPW4mJih1PUl0KHUsbikpLFwiY2hhbm5lbHNGaXJzdFwiPT09byYmKHU9T2JqZWN0KHIubWUpKHUsWzAsMywxLDJdKSksdX0pfSh0LG4ua2VybmVsLnJlYWQoKSxpLG4uc3RyaWRlcyxuLnBhZGRpbmcsbi5kYXRhRm9ybWF0LG4uZGlsYXRpb25SYXRlKTtlbHNlIGlmKDM9PT1uLnJhbmspdGhyb3cgbmV3IF8oXCIzRCBjb252b2x1dGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgeWV0LlwiKTtyZXR1cm4gbnVsbCE9bi5hY3RpdmF0aW9uJiYoZT1uLmFjdGl2YXRpb24uYXBwbHkoZSkpLGV9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3Q9UXQodCk7Zm9yKHZhciBlPVtdLG49XCJjaGFubmVsc0xhc3RcIj09PXRoaXMuZGF0YUZvcm1hdD90LnNsaWNlKDEsdC5sZW5ndGgtMSk6dC5zbGljZSgyKSxyPTA7cjxuLmxlbmd0aDsrK3Ipe3ZhciBpPV9yKG5bcl0sdGhpcy5rZXJuZWxTaXplW3JdLHRoaXMucGFkZGluZyx0aGlzLnN0cmlkZXNbcl0sXCJudW1iZXJcIj09dHlwZW9mIHRoaXMuZGlsYXRpb25SYXRlP3RoaXMuZGlsYXRpb25SYXRlOnRoaXMuZGlsYXRpb25SYXRlW3JdKTtlLnB1c2goaSl9dmFyIGE9W3RbMF1dO3JldHVyblwiY2hhbm5lbHNMYXN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/KGE9YS5jb25jYXQoZSkpLnB1c2godGhpcy5maWx0ZXJzKTooYS5wdXNoKHRoaXMuZmlsdGVycyksYT1hLmNvbmNhdChlKSksYX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2ZpbHRlcnM6dGhpcy5maWx0ZXJzLGtlcm5lbEluaXRpYWxpemVyOkt0KHRoaXMua2VybmVsSW5pdGlhbGl6ZXIpLGtlcm5lbFJlZ3VsYXJpemVyOmZyKHRoaXMua2VybmVsUmVndWxhcml6ZXIpLGtlcm5lbENvbnN0cmFpbnQ6JCh0aGlzLmtlcm5lbENvbnN0cmFpbnQpfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS52ZXJpZnlBcmdzPWZ1bmN0aW9uKHQpe2lmKCEoXCJmaWx0ZXJzXCJpbiB0KXx8XCJudW1iZXJcIiE9dHlwZW9mIHQuZmlsdGVyc3x8dC5maWx0ZXJzPDEpdGhyb3cgbmV3IHcoXCJDb252b2x1dGlvbiBsYXllciBleHBlY3RlZCBjb25maWcuZmlsdGVycyB0byBiZSBhICdudW1iZXInID4gMCBidXQgZ290IFwiK0pTT04uc3RyaW5naWZ5KHQuZmlsdGVycykpfSxlfShTciksSXI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShuKXt2YXIgcj10LmNhbGwodGhpcywyLG4pfHx0aGlzO3JldHVybiBlLnZlcmlmeUFyZ3Mobikscn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBkZWxldGUgZS5yYW5rLGV9LGUudmVyaWZ5QXJncz1mdW5jdGlvbih0KXtpZihcIm51bWJlclwiIT10eXBlb2YgdC5rZXJuZWxTaXplJiYhQih0Lmtlcm5lbFNpemUsXCJudW1iZXJcIiwxLDIpKXRocm93IG5ldyB3KFwiQ29udjJEIGV4cGVjdHMgY29uZmlnLmtlcm5lbFNpemUgdG8gYmUgbnVtYmVyIG9yIG51bWJlcltdIHdpdGggbGVuZ3RoIDEgb3IgMiwgYnV0IHJlY2VpdmVkIFwiK0pTT04uc3RyaW5naWZ5KHQua2VybmVsU2l6ZSkrXCIuXCIpfSxlLmNsYXNzTmFtZT1cIkNvbnYyRFwiLGV9KE5yKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoSXIpO3ZhciBPcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO2lmKG4uaW5wdXRTcGVjPVtuZXcgYWUoe25kaW06NH0pXSxcInNhbWVcIiE9PW4ucGFkZGluZyYmXCJ2YWxpZFwiIT09bi5wYWRkaW5nKXRocm93IG5ldyB3KFwiQ29udjJEVHJhbnNwb3NlIGN1cnJlbnRseSBzdXBwb3J0cyBvbmx5IHBhZGRpbmcgbW9kZXMgJ3NhbWUnIGFuZCAndmFsaWQnLCBidXQgcmVjZWl2ZWQgcGFkZGluZyBtb2RlIFwiK24ucGFkZGluZyk7cmV0dXJuIG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbih0KXtpZig0IT09KHQ9UXQodCkpLmxlbmd0aCl0aHJvdyBuZXcgdyhcIklucHV0IHNob3VsZCBoYXZlIHJhbmsgNDsgUmVjZWl2ZWQgaW5wdXQgc2hhcGU6IFwiK0pTT04uc3RyaW5naWZ5KHQpKTt2YXIgZT1cImNoYW5uZWxzRmlyc3RcIj09PXRoaXMuZGF0YUZvcm1hdD8xOnQubGVuZ3RoLTE7aWYobnVsbD09dFtlXSl0aHJvdyBuZXcgdyhcIlRoZSBjaGFubmVsIGRpbWVuc2lvbiBvZiB0aGUgaW5wdXRzIHNob3VsZCBiZSBkZWZpbmVkLiBGb3VuZCBgTm9uZWAuXCIpO3ZhciBuLHI9dFtlXSxpPXRoaXMua2VybmVsU2l6ZS5jb25jYXQoW3RoaXMuZmlsdGVycyxyXSk7dGhpcy5rZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJrZXJuZWxcIixpLFwiZmxvYXQzMlwiLHRoaXMua2VybmVsSW5pdGlhbGl6ZXIsdGhpcy5rZXJuZWxSZWd1bGFyaXplciwhMCx0aGlzLmtlcm5lbENvbnN0cmFpbnQpLHRoaXMudXNlQmlhcyYmKHRoaXMuYmlhcz10aGlzLmFkZFdlaWdodChcImJpYXNcIixbdGhpcy5maWx0ZXJzXSxcImZsb2F0MzJcIix0aGlzLmJpYXNJbml0aWFsaXplcix0aGlzLmJpYXNSZWd1bGFyaXplciwhMCx0aGlzLmJpYXNDb25zdHJhaW50KSksdGhpcy5pbnB1dFNwZWM9W25ldyBhZSh7bmRpbTo0LGF4ZXM6KG49e30sbltlXT1yLG4pfSldLHRoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgZT1adCh0KTtpZig0IT09ZS5zaGFwZS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJDb252MkRUcmFuc3Bvc2UuY2FsbCgpIGV4cGVjdHMgaW5wdXQgdGVuc29yIHRvIGJlIHJhbmstNCwgYnV0IHJlY2VpdmVkIGEgdGVuc29yIG9mIHJhbmstXCIrZS5zaGFwZS5sZW5ndGgpO3ZhciBpLGEsbz1lLnNoYXBlLHM9b1swXTtcImNoYW5uZWxzRmlyc3RcIj09PW4uZGF0YUZvcm1hdD8oaT0yLGE9Myk6KGk9MSxhPTIpO3ZhciB1PW9baV0sYz1vW2FdLGw9bi5rZXJuZWxTaXplWzBdLGY9bi5rZXJuZWxTaXplWzFdLGg9bi5zdHJpZGVzWzBdLHA9bi5zdHJpZGVzWzFdLGQ9W3MseHIodSxoLGwsbi5wYWRkaW5nKSx4cihjLHAsZixuLnBhZGRpbmcpLG4uZmlsdGVyc107XCJjaGFubmVsc0xhc3RcIiE9PW4uZGF0YUZvcm1hdCYmKGU9T2JqZWN0KHIubWUpKGUsWzAsMiwzLDFdKSk7dmFyIG09T2JqZWN0KHIuYmIpKGUsbi5rZXJuZWwucmVhZCgpLGQsbi5zdHJpZGVzLG4ucGFkZGluZyk7cmV0dXJuXCJjaGFubmVsc0xhc3RcIiE9PW4uZGF0YUZvcm1hdCYmKG09T2JqZWN0KHIubWUpKG0sWzAsMywxLDJdKSksbnVsbCE9bi5iaWFzJiYobT1JdChtLG4uYmlhcy5yZWFkKCksbi5kYXRhRm9ybWF0KSksbnVsbCE9bi5hY3RpdmF0aW9uJiYobT1uLmFjdGl2YXRpb24uYXBwbHkobSkpLG19KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpPSh0PVF0KHQpKS5zbGljZSgpO1wiY2hhbm5lbHNGaXJzdFwiPT09dGhpcy5kYXRhRm9ybWF0PyhlPTEsbj0yLHI9Myk6KGU9MyxuPTEscj0yKTt2YXIgYT10aGlzLmtlcm5lbFNpemVbMF0sbz10aGlzLmtlcm5lbFNpemVbMV0scz10aGlzLnN0cmlkZXNbMF0sdT10aGlzLnN0cmlkZXNbMV07cmV0dXJuIGlbZV09dGhpcy5maWx0ZXJzLGlbbl09eHIoaVtuXSxzLGEsdGhpcy5wYWRkaW5nKSxpW3JdPXhyKGlbcl0sdSxvLHRoaXMucGFkZGluZyksaX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIGRlbGV0ZSBlLmRpbGF0aW9uUmF0ZSxlfSxlLmNsYXNzTmFtZT1cIkNvbnYyRFRyYW5zcG9zZVwiLGV9KElyKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoT3IpO3ZhciBrcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3JldHVybiB0LmNhbGwodGhpcywyLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5jbGFzc05hbWU9XCJTZXBhcmFibGVDb252MkRcIixlfShmdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsbil7dmFyIHI9dC5jYWxsKHRoaXMsZSxuKXx8dGhpcztpZihyLkRFRkFVTFRfREVQVEhXSVNFX0lOSVRJQUxJWkVSPVwiZ2xvcm90VW5pZm9ybVwiLHIuREVGQVVMVF9QT0lOVFdJU0VfSU5JVElBTElaRVI9XCJnbG9yb3RVbmlmb3JtXCIsci5kZXB0aHdpc2VLZXJuZWw9bnVsbCxyLnBvaW50d2lzZUtlcm5lbD1udWxsLG51bGw9PW4uZmlsdGVycyl0aHJvdyBuZXcgdyhcIlRoZSBgZmlsdGVyc2AgY29uZmlndXJhdGlvbiBmaWVsZCBpcyByZXF1aXJlZCBieSBTZXBhcmFibGVDb252LCBidXQgaXMgdW5zcGVjaWZpZWQuXCIpO2lmKG51bGwhPW4ua2VybmVsSW5pdGlhbGl6ZXJ8fG51bGwhPW4ua2VybmVsUmVndWxhcml6ZXJ8fG51bGwhPW4ua2VybmVsQ29uc3RyYWludCl0aHJvdyBuZXcgdyhcIkZpZWxkcyBrZXJuZWxJbml0aWFsaXplciwga2VybmVsUmVndWxhcml6ZXIgYW5kIGtlcm5lbENvbnN0cmFpbnQgYXJlIGludmFsaWQgZm9yIFNlcGFyYWJsZUNvbnYyRC4gVXNlIGRlcHRod2lzZUluaXRpYWxpemVyLCBkZXB0aHdpc2VSZWd1bGFyaXplciwgZGVwdGh3aXNlQ29uc3RyYWludCwgcG9pbnR3aXNlSW5pdGlhbGl6ZXIsIHBvaW50d2lzZVJlZ3VsYXJpemVyIGFuZCBwb2ludHdpc2VDb25zdHJhaW50IGluc3RlYWQuXCIpO2lmKG51bGwhPW4ucGFkZGluZyYmXCJzYW1lXCIhPT1uLnBhZGRpbmcmJlwidmFsaWRcIiE9PW4ucGFkZGluZyl0aHJvdyBuZXcgdyhcIlNlcGFyYWJsZUNvbnZcIityLnJhbmsrXCJEIHN1cHBvcnRzIG9ubHkgcGFkZGluZyBtb2RlczogJ3NhbWUnIGFuZCAndmFsaWQnLCBidXQgcmVjZWl2ZWQgXCIrSlNPTi5zdHJpbmdpZnkobi5wYWRkaW5nKSk7cmV0dXJuIHIuZGVwdGhNdWx0aXBsaWVyPW51bGw9PW4uZGVwdGhNdWx0aXBsaWVyPzE6bi5kZXB0aE11bHRpcGxpZXIsci5kZXB0aHdpc2VJbml0aWFsaXplcj1HdChuLmRlcHRod2lzZUluaXRpYWxpemVyfHxyLkRFRkFVTFRfREVQVEhXSVNFX0lOSVRJQUxJWkVSKSxyLmRlcHRod2lzZVJlZ3VsYXJpemVyPXByKG4uZGVwdGh3aXNlUmVndWxhcml6ZXIpLHIuZGVwdGh3aXNlQ29uc3RyYWludD1LKG4uZGVwdGh3aXNlQ29uc3RyYWludCksci5wb2ludHdpc2VJbml0aWFsaXplcj1HdChuLmRlcHRod2lzZUluaXRpYWxpemVyfHxyLkRFRkFVTFRfUE9JTlRXSVNFX0lOSVRJQUxJWkVSKSxyLnBvaW50d2lzZVJlZ3VsYXJpemVyPXByKG4ucG9pbnR3aXNlUmVndWxhcml6ZXIpLHIucG9pbnR3aXNlQ29uc3RyYWludD1LKG4ucG9pbnR3aXNlQ29uc3RyYWludCkscn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe2lmKCh0PVF0KHQpKS5sZW5ndGg8dGhpcy5yYW5rKzIpdGhyb3cgbmV3IHcoXCJJbnB1dHMgdG8gU2VwYXJhYmxlQ29udlwiK3RoaXMucmFuaytcIkQgc2hvdWxkIGhhdmUgcmFuayBcIisodGhpcy5yYW5rKzIpK1wiLCBidXQgcmVjZWl2ZWQgaW5wdXQgc2hhcGU6IFwiK0pTT04uc3RyaW5naWZ5KHQpKTt2YXIgZSxuPVwiY2hhbm5lbHNGaXJzdFwiPT09dGhpcy5kYXRhRm9ybWF0PzE6dC5sZW5ndGgtMTtpZihudWxsPT10W25dfHx0W25dPDApdGhyb3cgbmV3IHcoXCJUaGUgY2hhbm5lbCBkaW1lbnNpb24gb2YgdGhlIGlucHV0cyBzaG91bGQgYmUgZGVmaW5lZCwgYnV0IGZvdW5kIFwiK0pTT04uc3RyaW5naWZ5KHRbbl0pKTtmb3IodmFyIHI9dFtuXSxpPXRoaXMua2VybmVsU2l6ZS5jb25jYXQoW3IsdGhpcy5kZXB0aE11bHRpcGxpZXJdKSxhPVtdLG89MDtvPHRoaXMucmFuazsrK28pYS5wdXNoKDEpO2EucHVzaChyKnRoaXMuZGVwdGhNdWx0aXBsaWVyLHRoaXMuZmlsdGVycyksdGhpcy5kZXB0aHdpc2VLZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJkZXB0aHdpc2Vfa2VybmVsXCIsaSxcImZsb2F0MzJcIix0aGlzLmRlcHRod2lzZUluaXRpYWxpemVyLHRoaXMuZGVwdGh3aXNlUmVndWxhcml6ZXIsITAsdGhpcy5kZXB0aHdpc2VDb25zdHJhaW50KSx0aGlzLnBvaW50d2lzZUtlcm5lbD10aGlzLmFkZFdlaWdodChcInBvaW50d2lzZV9rZXJuZWxcIixhLFwiZmxvYXQzMlwiLHRoaXMucG9pbnR3aXNlSW5pdGlhbGl6ZXIsdGhpcy5wb2ludHdpc2VSZWd1bGFyaXplciwhMCx0aGlzLnBvaW50d2lzZUNvbnN0cmFpbnQpLHRoaXMudXNlQmlhcz90aGlzLmJpYXM9dGhpcy5hZGRXZWlnaHQoXCJiaWFzXCIsW3RoaXMuZmlsdGVyc10sXCJmbG9hdDMyXCIsdGhpcy5iaWFzSW5pdGlhbGl6ZXIsdGhpcy5iaWFzUmVndWxhcml6ZXIsITAsdGhpcy5iaWFzQ29uc3RyYWludCk6dGhpcy5iaWFzPW51bGwsdGhpcy5pbnB1dFNwZWM9W25ldyBhZSh7bmRpbTp0aGlzLnJhbmsrMixheGVzOihlPXt9LGVbbl09cixlKX0pXSx0aGlzLmJ1aWx0PSEwfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIGU7aWYodD1adCh0KSwxPT09bi5yYW5rKXRocm93IG5ldyBfKFwiMUQgc2VwYXJhYmxlIGNvbnZvbHV0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO3JldHVybiAyPT09bi5yYW5rJiYoXCJjaGFubmVsc0ZpcnN0XCI9PT1uLmRhdGFGb3JtYXQmJih0PU9iamVjdChyLm1lKSh0LFswLDIsMywxXSkpLGU9T2JqZWN0KHIuc2QpKHQsbi5kZXB0aHdpc2VLZXJuZWwucmVhZCgpLG4ucG9pbnR3aXNlS2VybmVsLnJlYWQoKSxuLnN0cmlkZXMsbi5wYWRkaW5nLG4uZGlsYXRpb25SYXRlLFwiTkhXQ1wiKSksbi51c2VCaWFzJiYoZT1JdChlLG4uYmlhcy5yZWFkKCksbi5kYXRhRm9ybWF0KSksbnVsbCE9bi5hY3RpdmF0aW9uJiYoZT1uLmFjdGl2YXRpb24uYXBwbHkoZSkpLFwiY2hhbm5lbHNGaXJzdFwiPT09bi5kYXRhRm9ybWF0JiYoZT1PYmplY3Qoci5tZSkoZSxbMCwzLDEsMl0pKSxlfSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBkZWxldGUgZS5yYW5rLGRlbGV0ZSBlLmtlcm5lbEluaXRpYWxpemVyLGRlbGV0ZSBlLmtlcm5lbFJlZ3VsYXJpemVyLGRlbGV0ZSBlLmtlcm5lbENvbnN0cmFpbnQsZS5kZXB0aHdpc2VJbml0aWFsaXplcj1LdCh0aGlzLmRlcHRod2lzZUluaXRpYWxpemVyKSxlLnBvaW50d2lzZUluaXRpYWxpemVyPUt0KHRoaXMucG9pbnR3aXNlSW5pdGlhbGl6ZXIpLGUuZGVwdGh3aXNlUmVndWxhcml6ZXI9ZnIodGhpcy5kZXB0aHdpc2VSZWd1bGFyaXplciksZS5wb2ludHdpc2VSZWd1bGFyaXplcj1mcih0aGlzLnBvaW50d2lzZVJlZ3VsYXJpemVyKSxlLmRlcHRod2lzZUNvbnN0cmFpbnQ9JCh0aGlzLmRlcHRod2lzZUNvbnN0cmFpbnQpLGUucG9pbnR3aXNlQ29uc3RyYWludD0kKHRoaXMucG9pbnR3aXNlQ29uc3RyYWludCksZX0sZS5jbGFzc05hbWU9XCJTZXBhcmFibGVDb252XCIsZX0oTnIpKTtyLnRkLnJlZ2lzdGVyQ2xhc3Moa3IpO3ZhciBBcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKG4pe3ZhciByPXQuY2FsbCh0aGlzLDEsbil8fHRoaXM7cmV0dXJuIGUudmVyaWZ5QXJncyhuKSxyLmlucHV0U3BlYz1be25kaW06M31dLHJ9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gZGVsZXRlIGUucmFuayxkZWxldGUgZS5kYXRhRm9ybWF0LGV9LGUudmVyaWZ5QXJncz1mdW5jdGlvbih0KXtpZihcIm51bWJlclwiIT10eXBlb2YgdC5rZXJuZWxTaXplJiYhQih0Lmtlcm5lbFNpemUsXCJudW1iZXJcIiwxLDEpKXRocm93IG5ldyB3KFwiQ29udjFEIGV4cGVjdHMgY29uZmlnLmtlcm5lbFNpemUgdG8gYmUgbnVtYmVyIG9yIG51bWJlcltdIHdpdGggbGVuZ3RoIDEsIGJ1dCByZWNlaXZlZCBcIitKU09OLnN0cmluZ2lmeSh0Lmtlcm5lbFNpemUpK1wiLlwiKX0sZS5jbGFzc05hbWU9XCJDb252MURcIixlfShOcik7ci50ZC5yZWdpc3RlckNsYXNzKEFyKTt2YXIgQ3I9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZS5jcm9wcGluZz9uLmNyb3BwaW5nPVtbZS5jcm9wcGluZyxlLmNyb3BwaW5nXSxbZS5jcm9wcGluZyxlLmNyb3BwaW5nXV06XCJudW1iZXJcIj09dHlwZW9mIGUuY3JvcHBpbmdbMF0/bi5jcm9wcGluZz1bW2UuY3JvcHBpbmdbMF0sZS5jcm9wcGluZ1swXV0sW2UuY3JvcHBpbmdbMV0sZS5jcm9wcGluZ1sxXV1dOm4uY3JvcHBpbmc9ZS5jcm9wcGluZyxuLmRhdGFGb3JtYXQ9dm9pZCAwPT09ZS5kYXRhRm9ybWF0P1wiY2hhbm5lbHNMYXN0XCI6ZS5kYXRhRm9ybWF0LG4uaW5wdXRTcGVjPVt7bmRpbTo0fV0sbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm5cImNoYW5uZWxzRmlyc3RcIj09PXRoaXMuZGF0YUZvcm1hdD9bdFswXSx0WzFdLHRbMl0tdGhpcy5jcm9wcGluZ1swXVswXS10aGlzLmNyb3BwaW5nWzBdWzFdLHRbM10tdGhpcy5jcm9wcGluZ1sxXVswXS10aGlzLmNyb3BwaW5nWzFdWzFdXTpbdFswXSx0WzFdLXRoaXMuY3JvcHBpbmdbMF1bMF0tdGhpcy5jcm9wcGluZ1swXVsxXSx0WzJdLXRoaXMuY3JvcHBpbmdbMV1bMF0tdGhpcy5jcm9wcGluZ1sxXVsxXSx0WzNdXX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiB0PVp0KHQpLFwiY2hhbm5lbHNMYXN0XCI9PT1uLmRhdGFGb3JtYXQ/dnQodnQodCxuLmNyb3BwaW5nWzBdWzBdLHQuc2hhcGVbMV0tbi5jcm9wcGluZ1swXVswXS1uLmNyb3BwaW5nWzBdWzFdLDIpLG4uY3JvcHBpbmdbMV1bMF0sdC5zaGFwZVsyXS1uLmNyb3BwaW5nWzFdWzFdLW4uY3JvcHBpbmdbMV1bMF0sMyk6dnQodnQodCxuLmNyb3BwaW5nWzBdWzBdLHQuc2hhcGVbMl0tbi5jcm9wcGluZ1swXVswXS1uLmNyb3BwaW5nWzBdWzFdLDMpLG4uY3JvcHBpbmdbMV1bMF0sdC5zaGFwZVszXS1uLmNyb3BwaW5nWzFdWzFdLW4uY3JvcHBpbmdbMV1bMF0sNCl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2Nyb3BwaW5nOnRoaXMuY3JvcHBpbmcsZGF0YUZvcm1hdDp0aGlzLmRhdGFGb3JtYXR9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIkNyb3BwaW5nMkRcIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKENyKTt2YXIgUHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gbi5ERUZBVUxUX1NJWkU9WzIsMl0sbi5pbnB1dFNwZWM9W3tuZGltOjR9XSxuLnNpemU9bnVsbD09ZS5zaXplP24uREVGQVVMVF9TSVpFOmUuc2l6ZSxuLmRhdGFGb3JtYXQ9bnVsbD09ZS5kYXRhRm9ybWF0P1wiY2hhbm5lbHNMYXN0XCI6ZS5kYXRhRm9ybWF0LG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7aWYoXCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQpe3ZhciBlPW51bGw9PXRbMl0/bnVsbDp0aGlzLnNpemVbMF0qdFsyXSxuPW51bGw9PXRbM10/bnVsbDp0aGlzLnNpemVbMV0qdFszXTtyZXR1cm5bdFswXSx0WzFdLGUsbl19cmV0dXJuIGU9bnVsbD09dFsxXT9udWxsOnRoaXMuc2l6ZVswXSp0WzFdLG49bnVsbD09dFsyXT9udWxsOnRoaXMuc2l6ZVsxXSp0WzJdLFt0WzBdLGUsbix0WzNdXX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPVp0KHQpLGk9ZS5zaGFwZTtpZihcImNoYW5uZWxzRmlyc3RcIj09PW4uZGF0YUZvcm1hdCl7ZT1PYmplY3Qoci5tZSkoZSxbMCwyLDMsMV0pO3ZhciBhPW4uc2l6ZVswXSppWzJdLG89bi5zaXplWzFdKmlbM10scz1lLnJlc2l6ZU5lYXJlc3ROZWlnaGJvcihbYSxvXSk7cmV0dXJuIE9iamVjdChyLm1lKShzLFswLDMsMSwyXSl9cmV0dXJuIGE9bi5zaXplWzBdKmlbMV0sbz1uLnNpemVbMV0qaVsyXSxlLnJlc2l6ZU5lYXJlc3ROZWlnaGJvcihbYSxvXSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e3NpemU6dGhpcy5zaXplLGRhdGFGb3JtYXQ6dGhpcy5kYXRhRm9ybWF0fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJVcFNhbXBsaW5nMkRcIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKFByKTt2YXIgVHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcywyLGUpfHx0aGlzO3JldHVybiBuLmRlcHRod2lzZUtlcm5lbD1udWxsLG4uZGVwdGhNdWx0aXBsaWVyPW51bGw9PWUuZGVwdGhNdWx0aXBsaWVyPzE6ZS5kZXB0aE11bHRpcGxpZXIsbi5kZXB0aHdpc2VJbml0aWFsaXplcj1HdChlLmRlcHRod2lzZUluaXRpYWxpemVyfHxuLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSKSxuLmRlcHRod2lzZUNvbnN0cmFpbnQ9SyhlLmRlcHRod2lzZUNvbnN0cmFpbnQpLG4uZGVwdGh3aXNlUmVndWxhcml6ZXI9cHIoZS5kZXB0aHdpc2VSZWd1bGFyaXplciksbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe2lmKCh0PVF0KHQpKS5sZW5ndGg8NCl0aHJvdyBuZXcgdyhcIklucHV0cyB0byBEZXB0aHdpc2VDb252MkQgc2hvdWxkIGhhdmUgcmFuayA0LiBSZWNlaXZlZCBpbnB1dCBzaGFwZTogXCIrSlNPTi5zdHJpbmdpZnkodCkrXCIuXCIpO3ZhciBlPVwiY2hhbm5lbHNGaXJzdFwiPT09dGhpcy5kYXRhRm9ybWF0PzE6MztpZihudWxsPT10W2VdfHx0W2VdPDApdGhyb3cgbmV3IHcoXCJUaGUgY2hhbm5lbCBkaW1lbnNpb24gb2YgdGhlIGlucHV0cyB0byBEZXB0aHdpc2VDb252MkQgc2hvdWxkIGJlIGRlZmluZWQsIGJ1dCBpcyBub3QgKFwiK3RbZV0rXCIpLlwiKTt2YXIgbj10W2VdLHI9W3RoaXMua2VybmVsU2l6ZVswXSx0aGlzLmtlcm5lbFNpemVbMV0sbix0aGlzLmRlcHRoTXVsdGlwbGllcl07dGhpcy5kZXB0aHdpc2VLZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJkZXB0aHdpc2Vfa2VybmVsXCIscixudWxsLHRoaXMuZGVwdGh3aXNlSW5pdGlhbGl6ZXIsdGhpcy5kZXB0aHdpc2VSZWd1bGFyaXplciwhMCx0aGlzLmRlcHRod2lzZUNvbnN0cmFpbnQpLHRoaXMudXNlQmlhcz90aGlzLmJpYXM9dGhpcy5hZGRXZWlnaHQoXCJiaWFzXCIsW24qdGhpcy5kZXB0aE11bHRpcGxpZXJdLG51bGwsdGhpcy5iaWFzSW5pdGlhbGl6ZXIsdGhpcy5iaWFzUmVndWxhcml6ZXIsITAsdGhpcy5iaWFzQ29uc3RyYWludCk6dGhpcy5iaWFzPW51bGwsdGhpcy5idWlsdD0hMH0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKHQsZSxuLGksYSxvKXtyZXR1cm4gdm9pZCAwPT09biYmKG49WzEsMV0pLHZvaWQgMD09PWkmJihpPVwidmFsaWRcIiksT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7bnVsbD09YSYmKGE9XCJjaGFubmVsc0xhc3RcIiksSihhKTt2YXIgcz1Fcih0LGEpO2lmKDQhPT10LnJhbmspdGhyb3cgbmV3IHcoXCJJbnB1dCBmb3IgZGVwdGh3aXNlQ29udjJkIGlzIHJlcXVpcmVkIHRvIGJlIDQtRCwgYnV0IGlzIGluc3RlYWQgXCIrdC5yYW5rK1wiLURcIik7aWYoNCE9PWUucmFuayl0aHJvdyBuZXcgdyhcImRlcHRod2lzZUtlcm5lbCBpcyByZXF1aXJlZCB0byBiZSA0LUQsIGJ1dCBpcyBpbnN0ZWFkIFwiK2UucmFuaytcIi1EXCIpO3JldHVybiBzPU9iamVjdChyLmliKShzLGUsbixcInNhbWVcIj09PWk/XCJzYW1lXCI6XCJ2YWxpZFwiLFwiTkhXQ1wiLG8pLFwiY2hhbm5lbHNGaXJzdFwiPT09YSYmKHM9T2JqZWN0KHIubWUpKHMsWzAsMywxLDJdKSksc30pfSh0PVp0KHQpLG4uZGVwdGh3aXNlS2VybmVsLnJlYWQoKSxuLnN0cmlkZXMsbi5wYWRkaW5nLG4uZGF0YUZvcm1hdCxudWxsKTtyZXR1cm4gbi51c2VCaWFzJiYoZT1JdChlLG4uYmlhcy5yZWFkKCksbi5kYXRhRm9ybWF0KSksbnVsbCE9bi5hY3RpdmF0aW9uJiYoZT1uLmFjdGl2YXRpb24uYXBwbHkoZSkpLGV9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3Q9UXQodCk7dmFyIGU9XCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/dFsyXTp0WzFdLG49XCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/dFszXTp0WzJdLHI9XCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/dFsxXSp0aGlzLmRlcHRoTXVsdGlwbGllcjp0WzNdKnRoaXMuZGVwdGhNdWx0aXBsaWVyLGk9X3IoZSx0aGlzLmtlcm5lbFNpemVbMF0sdGhpcy5wYWRkaW5nLHRoaXMuc3RyaWRlc1swXSksYT1fcihuLHRoaXMua2VybmVsU2l6ZVsxXSx0aGlzLnBhZGRpbmcsdGhpcy5zdHJpZGVzWzFdKTtyZXR1cm5cImNoYW5uZWxzRmlyc3RcIj09PXRoaXMuZGF0YUZvcm1hdD9bdFswXSxyLGksYV06W3RbMF0saSxhLHJdfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gZS5kZXB0aE11bHRpcGxpZXI9dGhpcy5kZXB0aE11bHRpcGxpZXIsZS5kZXB0aHdpc2VJbml0aWFsaXplcj1LdCh0aGlzLmRlcHRod2lzZUluaXRpYWxpemVyKSxlLmRlcHRod2lzZVJlZ3VsYXJpemVyPWZyKHRoaXMuZGVwdGh3aXNlUmVndWxhcml6ZXIpLGUuZGVwdGh3aXNlQ29uc3RyYWludD0kKHRoaXMuZGVwdGh3aXNlUmVndWxhcml6ZXIpLGV9LGUuY2xhc3NOYW1lPVwiRGVwdGh3aXNlQ29udjJEXCIsZX0oU3IpO3IudGQucmVnaXN0ZXJDbGFzcyhUcik7dmFyIFJyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7aWYobi5yYXRlPU1hdGgubWF4KE1hdGgubWluKGUucmF0ZSwxKSwwKSxuLnJhdGVTY2FsYXI9eShuLnJhdGUpLG4ubm9pc2VTaGFwZT1lLm5vaXNlU2hhcGUsbi5zZWVkPWUuc2VlZCxudWxsIT1uLnNlZWQpdGhyb3cgbmV3IF8oXCJOb24tZGVmYXVsdCBzZWVkIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiBEcm9wb3V0IGxheWVyIHlldDogXCIrbi5zZWVkKTtyZXR1cm4gbi5zdXBwb3J0c01hc2tpbmc9ITAsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmdldE5vaXNlU2hhcGU9ZnVuY3Rpb24odCl7aWYobnVsbD09dGhpcy5ub2lzZVNoYXBlKXJldHVybiB0aGlzLm5vaXNlU2hhcGU7Zm9yKHZhciBlPXQuc2hhcGUsbj1bXSxyPTA7cjx0aGlzLm5vaXNlU2hhcGUubGVuZ3RoOysrciluLnB1c2gobnVsbD09dGhpcy5ub2lzZVNoYXBlW3JdP2Vbcl06dGhpcy5ub2lzZVNoYXBlW3JdKTtyZXR1cm4gbn0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe24uaW52b2tlQ2FsbEhvb2sodCxlKTt2YXIgaT1adCh0KTtpZihudWxsIT1uLm5vaXNlU2hhcGUmJiFyLnFlLmFycmF5c0VxdWFsKGkuc2hhcGUsbi5ub2lzZVNoYXBlKSl0aHJvdyBuZXcgXyhcIk5vbi1kZWZhdWx0IG5vaXNlIHNoYXBlIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiBEcm9wb3V0IGxheWVyIHlldDogXCIrSlNPTi5zdHJpbmdpZnkobi5ub2lzZVNoYXBlKSk7aWYoMDxuLnJhdGUmJm4ucmF0ZTwxKXt2YXIgYT1udWxsIT1lLnRyYWluaW5nJiZlLnRyYWluaW5nLG89bi5nZXROb2lzZVNoYXBlKGkpO3JldHVybiBrdChmdW5jdGlvbigpe3JldHVybiBPdChpLG4ucmF0ZVNjYWxhcixvLG4uc2VlZCl9LGZ1bmN0aW9uKCl7cmV0dXJuIGl9LGEpfXJldHVybiB0fSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXtyYXRlOnRoaXMucmF0ZSxub2lzZVNoYXBlOnRoaXMubm9pc2VTaGFwZSxzZWVkOnRoaXMuc2VlZH0sbj10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLG4pLGV9LGUuY2xhc3NOYW1lPVwiRHJvcG91dFwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoUnIpO3ZhciBEcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO2lmKG4uYWN0aXZhdGlvbj1udWxsLG4udXNlQmlhcz0hMCxuLmtlcm5lbD1udWxsLG4uYmlhcz1udWxsLG4uREVGQVVMVF9LRVJORUxfSU5JVElBTElaRVI9XCJnbG9yb3ROb3JtYWxcIixuLkRFRkFVTFRfQklBU19JTklUSUFMSVpFUj1cInplcm9zXCIsbnVsbD09ZS5iYXRjaElucHV0U2hhcGUmJm51bGw9PWUuaW5wdXRTaGFwZSYmbnVsbCE9ZS5pbnB1dERpbSl7dmFyIHI9bnVsbDtudWxsIT1lLmJhdGNoU2l6ZSYmKHI9ZS5iYXRjaFNpemUpLG4uYmF0Y2hJbnB1dFNoYXBlPVtyLGUuaW5wdXREaW1dfXJldHVybiBuLnVuaXRzPWUudW5pdHMsbi5hY3RpdmF0aW9uPXNyKGUuYWN0aXZhdGlvbiksbnVsbCE9ZS51c2VCaWFzJiYobi51c2VCaWFzPWUudXNlQmlhcyksbi5rZXJuZWxJbml0aWFsaXplcj1HdChlLmtlcm5lbEluaXRpYWxpemVyfHxuLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSKSxuLmJpYXNJbml0aWFsaXplcj1HdChlLmJpYXNJbml0aWFsaXplcnx8bi5ERUZBVUxUX0JJQVNfSU5JVElBTElaRVIpLG4ua2VybmVsQ29uc3RyYWludD1LKGUua2VybmVsQ29uc3RyYWludCksbi5iaWFzQ29uc3RyYWludD1LKGUuYmlhc0NvbnN0cmFpbnQpLG4ua2VybmVsUmVndWxhcml6ZXI9cHIoZS5rZXJuZWxSZWd1bGFyaXplciksbi5iaWFzUmVndWxhcml6ZXI9cHIoZS5iaWFzUmVndWxhcml6ZXIpLG4uYWN0aXZpdHlSZWd1bGFyaXplcj1wcihlLmFjdGl2aXR5UmVndWxhcml6ZXIpLG4uc3VwcG9ydHNNYXNraW5nPSEwLG4uaW5wdXRTcGVjPVt7bWluTkRpbToyfV0sbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe3ZhciBlLG49KHQ9UXQodCkpW3QubGVuZ3RoLTFdO251bGw9PXRoaXMua2VybmVsJiYodGhpcy5rZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJrZXJuZWxcIixbbix0aGlzLnVuaXRzXSxudWxsLHRoaXMua2VybmVsSW5pdGlhbGl6ZXIsdGhpcy5rZXJuZWxSZWd1bGFyaXplciwhMCx0aGlzLmtlcm5lbENvbnN0cmFpbnQpLHRoaXMudXNlQmlhcyYmKHRoaXMuYmlhcz10aGlzLmFkZFdlaWdodChcImJpYXNcIixbdGhpcy51bml0c10sbnVsbCx0aGlzLmJpYXNJbml0aWFsaXplcix0aGlzLmJpYXNSZWd1bGFyaXplciwhMCx0aGlzLmJpYXNDb25zdHJhaW50KSkpLHRoaXMuaW5wdXRTcGVjPVt7bWluTkRpbToyLGF4ZXM6KGU9e30sZVstMV09bixlKX1dLHRoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXt2YXIgZT0odD1RdCh0KSkuc2xpY2UoKTtyZXR1cm4gZVtlLmxlbmd0aC0xXT10aGlzLnVuaXRzLGV9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtuLmludm9rZUNhbGxIb29rKHQsZSk7dmFyIHI9RXQoWnQodCksbi5rZXJuZWwucmVhZCgpKTtyZXR1cm4gbnVsbCE9bi5iaWFzJiYocj1JdChyLG4uYmlhcy5yZWFkKCkpKSxudWxsIT1uLmFjdGl2YXRpb24mJihyPW4uYWN0aXZhdGlvbi5hcHBseShyKSkscn0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbiksdXNlQmlhczp0aGlzLnVzZUJpYXMsa2VybmVsSW5pdGlhbGl6ZXI6S3QodGhpcy5rZXJuZWxJbml0aWFsaXplciksYmlhc0luaXRpYWxpemVyOkt0KHRoaXMuYmlhc0luaXRpYWxpemVyKSxrZXJuZWxSZWd1bGFyaXplcjpmcih0aGlzLmtlcm5lbFJlZ3VsYXJpemVyKSxiaWFzUmVndWxhcml6ZXI6ZnIodGhpcy5iaWFzUmVndWxhcml6ZXIpLGFjdGl2aXR5UmVndWxhcml6ZXI6ZnIodGhpcy5hY3Rpdml0eVJlZ3VsYXJpemVyKSxrZXJuZWxDb25zdHJhaW50OiQodGhpcy5rZXJuZWxDb25zdHJhaW50KSxiaWFzQ29uc3RyYWludDokKHRoaXMuYmlhc0NvbnN0cmFpbnQpfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJEZW5zZVwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoRHIpO3ZhciBNcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGV8fHt9KXx8dGhpcztyZXR1cm4gbi5pbnB1dFNwZWM9W3ttaW5ORGltOjN9XSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49KHQ9UXQodCkpLnNsaWNlKDEpO2U8bi5sZW5ndGg7ZSsrKWlmKG51bGw9PW5bZV0pdGhyb3cgbmV3IHcoJ1RoZSBzaGFwZSBvZiB0aGUgaW5wdXQgdG8gXCJGbGF0dGVuXCIgaXMgbm90IGZ1bGx5IGRlZmluZWQgKGdvdCAnK3Quc2xpY2UoMSkrJykuIE1ha2Ugc3VyZSB0byBwYXNzIGEgY29tcGxldGUgXCJpbnB1dF9zaGFwZVwiIG9yIFwiYmF0Y2hfaW5wdXRfc2hhcGVcIiBhcmd1bWVudCB0byB0aGUgZmlyc3QgbGF5ZXIgaW4geW91ciBtb2RlbC4nKTtyZXR1cm5bdFswXSxjdCh0LDEpXX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBuLmludm9rZUNhbGxIb29rKHQsZSksZnVuY3Rpb24odCl7aWYodC5yYW5rPD0xKXRocm93IG5ldyB3KFwiYmF0Y2hGbGF0dGVuIHJlcXVpcmVzIGEgbWluaW11bSByYW5rIG9mIDIuIEdvdCByYW5rOiBcIit0LnJhbmsrXCIuXCIpO3ZhciBlPVt0LnNoYXBlWzBdLGN0KHQuc2hhcGUsMSldO3JldHVybiB0LnJlc2hhcGUoZSl9KFp0KHQpKX0pfSxlLmNsYXNzTmFtZT1cIkZsYXR0ZW5cIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKE1yKTt2YXIganI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gbi5zdXBwb3J0c01hc2tpbmc9ITAsbi5hY3RpdmF0aW9uPXNyKGUuYWN0aXZhdGlvbiksbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtuLmludm9rZUNhbGxIb29rKHQsZSk7dmFyIHI9WnQodCk7cmV0dXJuIG4uYWN0aXZhdGlvbi5hcHBseShyKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17YWN0aXZhdGlvbjphcih0aGlzLmFjdGl2YXRpb24pfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJBY3RpdmF0aW9uXCIsZX0obGUpO3IudGQucmVnaXN0ZXJDbGFzcyhqcik7dmFyIEJyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7cmV0dXJuIG4ubj1lLm4sbi5pbnB1dFNwZWM9W3tuZGltOjJ9XSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3JldHVyblt0WzBdLHRoaXMubix0WzFdXX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZigyIT09dC5zaGFwZS5sZW5ndGgpdGhyb3cgbmV3IHcoXCJyZXBlYXQoKSBleHBlY3RzIGEgcmFuay0yIHRlbnNvciwgYnV0IHJlY2VpdmVkIGEgcmFuay1cIit0LnNoYXBlLmxlbmd0aCtcIiB0ZW5zb3IuXCIpO3JldHVybiBfdChtdCh0LDEpLFsxLGUsMV0pfSl9KHQ9WnQodCksbi5uKX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17bjp0aGlzLm59LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlJlcGVhdFZlY3RvclwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoQnIpO3ZhciBMcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO24udGFyZ2V0U2hhcGU9ZS50YXJnZXRTaGFwZTtmb3IodmFyIHI9MDtyPG4udGFyZ2V0U2hhcGUubGVuZ3RoOysrciluLmlzVW5rbm93bihuLnRhcmdldFNoYXBlW3JdKSYmKG4udGFyZ2V0U2hhcGVbcl09bnVsbCk7cmV0dXJuIG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5pc1Vua25vd249ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MHx8bnVsbD09dH0sZS5wcm90b3R5cGUuZml4VW5rbm93bkRpbWVuc2lvbj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1cIlRvdGFsIHNpemUgb2YgbmV3IGFycmF5IG11c3QgYmUgdW5jaGFuZ2VkLlwiLHI9ZS5zbGljZSgpLGk9MSxhPW51bGwsbz0wO288ci5sZW5ndGg7KytvKXt2YXIgcz1yW29dO2lmKHRoaXMuaXNVbmtub3duKHMpKXtpZihudWxsIT09YSl0aHJvdyBuZXcgdyhcIkNhbiBvbmx5IHNwZWNpZml5IG9uZSB1bmtub3duIGRpbWVuc2lvbi5cIik7YT1vfWVsc2UgaSo9c312YXIgdT1jdCh0KTtpZihudWxsIT09YSl7aWYoMD09PWl8fHUlaSE9MCl0aHJvdyBuZXcgdyhuKTtyW2FdPXUvaX1lbHNlIGlmKHUhPT1pKXRocm93IG5ldyB3KG4pO3JldHVybiByfSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPSExLG49MDtuPHQubGVuZ3RoOysrbilpZih0aGlzLmlzVW5rbm93bih0W25dKSl7ZT0hMDticmVha31yZXR1cm4gZT90LnNsaWNlKDAsMSkuY29uY2F0KHRoaXMudGFyZ2V0U2hhcGUpOnQuc2xpY2UoMCwxKS5jb25jYXQodGhpcy5maXhVbmtub3duRGltZW5zaW9uKHQuc2xpY2UoMSksdGhpcy50YXJnZXRTaGFwZSkpfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7bi5pbnZva2VDYWxsSG9vayh0LGUpO3ZhciByPVp0KHQpLGk9ci5zaGFwZSxhPWkuc2xpY2UoMCwxKS5jb25jYXQobi5maXhVbmtub3duRGltZW5zaW9uKGkuc2xpY2UoMSksbi50YXJnZXRTaGFwZSkpO3JldHVybiByLnJlc2hhcGUoYSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e3RhcmdldFNoYXBlOnRoaXMudGFyZ2V0U2hhcGV9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlJlc2hhcGVcIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKExyKTt2YXIgenI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztpZihudWxsPT1lLmRpbXMpdGhyb3cgbmV3IEVycm9yKFwiUmVxdWlyZWQgY29uZmlndXJhdGlvbiBmaWVsZCBgZGltc2AgaXMgbWlzc2luZyBkdXJpbmcgUGVybXV0ZSBjb25zdHJ1Y3RvciBjYWxsLlwiKTtpZighQXJyYXkuaXNBcnJheShlLmRpbXMpKXRocm93IG5ldyBFcnJvcihcIlBlcm11dGUgY29uc3RydWN0b3IgcmVxdWlyZXMgYGRpbXNgIHRvIGJlIGFuIEFycmF5LCBidXQgcmVjZWl2ZWQgXCIrZS5kaW1zK1wiIGluc3RlYWQuXCIpO3ZhciBpPXB0KDEsZS5kaW1zLmxlbmd0aCsxKTtpZighci5xZS5hcnJheXNFcXVhbChlLmRpbXMuc2xpY2UoKS5zb3J0KCksaSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBwZXJtdXRhdGlvbiBgZGltc2A6IFwiK0pTT04uc3RyaW5naWZ5KGUuZGltcykrXCIgYGRpbXNgIG11c3QgY29udGFpbiBjb25zZWN1dGl2ZSBpbnRlZ2VycyBzdGFydGluZyBmcm9tIDEuXCIpO3JldHVybiBuLmRpbXM9ZS5kaW1zLG4uZGltc0luY2x1ZGluZ0JhdGNoPVswXS5jb25jYXQobi5kaW1zKSxuLmlucHV0U3BlYz1bbmV3IGFlKHtuZGltOm4uZGltcy5sZW5ndGgrMX0pXSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3ZhciBlPSh0PVF0KHQpKS5zbGljZSgpO3JldHVybiB0aGlzLmRpbXMuZm9yRWFjaChmdW5jdGlvbihuLHIpe2VbcisxXT10W25dfSksZX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3Qoci5tZSkoWnQodCksdGhpcy5kaW1zSW5jbHVkaW5nQmF0Y2gpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17ZGltczp0aGlzLmRpbXN9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlBlcm11dGVcIixlfShsZSk7ci50ZC5yZWdpc3RlckNsYXNzKHpyKTt2YXIgRnI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztpZihuLmVtYmVkZGluZ3M9bnVsbCxuLkRFRkFVTFRfRU1CRURESU5HU19JTklUSUFMSVpFUj1cInJhbmRvbVVuaWZvcm1cIixudWxsPT1lLmJhdGNoSW5wdXRTaGFwZSYmbnVsbD09ZS5pbnB1dFNoYXBlKXt2YXIgcj1udWxsO251bGwhPWUuYmF0Y2hTaXplJiYocj1lLmJhdGNoU2l6ZSksbnVsbD09ZS5pbnB1dExlbmd0aD9uLmJhdGNoSW5wdXRTaGFwZT1bcixudWxsXTpuLmJhdGNoSW5wdXRTaGFwZT1bcl0uY29uY2F0KE8oZS5pbnB1dExlbmd0aCkpfXJldHVybiBuLmlucHV0RGltPWUuaW5wdXREaW0sbi5vdXRwdXREaW09ZS5vdXRwdXREaW0sbi5lbWJlZGRpbmdzSW5pdGlhbGl6ZXI9R3QoZS5lbWJlZGRpbmdzSW5pdGlhbGl6ZXJ8fG4uREVGQVVMVF9FTUJFRERJTkdTX0lOSVRJQUxJWkVSKSxuLmVtYmVkZGluZ3NSZWd1bGFyaXplcj1wcihlLmVtYmVkZGluZ3NSZWd1bGFyaXplciksbi5hY3Rpdml0eVJlZ3VsYXJpemVyPXByKGUuYWN0aXZpdHlSZWd1bGFyaXplciksbi5lbWJlZGRpbmdzQ29uc3RyYWludD1LKGUuZW1iZWRkaW5nc0NvbnN0cmFpbnQpLG4ubWFza1plcm89ZS5tYXNrWmVybyxuLnN1cHBvcnRzTWFza2luZz1lLm1hc2taZXJvLG4uaW5wdXRMZW5ndGg9ZS5pbnB1dExlbmd0aCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7dGhpcy5lbWJlZGRpbmdzPXRoaXMuYWRkV2VpZ2h0KFwiZW1iZWRkaW5nc1wiLFt0aGlzLmlucHV0RGltLHRoaXMub3V0cHV0RGltXSx0aGlzLmR0eXBlLHRoaXMuZW1iZWRkaW5nc0luaXRpYWxpemVyLHRoaXMuZW1iZWRkaW5nc1JlZ3VsYXJpemVyLCEwLHRoaXMuZW1iZWRkaW5nc0NvbnN0cmFpbnQpLHRoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLndhcm5PbkluY29tcGF0aWJsZUlucHV0U2hhcGU9ZnVuY3Rpb24odCl7fSxlLnByb3RvdHlwZS5jb21wdXRlTWFzaz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBuLm1hc2taZXJvPyh0PVp0KHQpLE9iamVjdChyLkdjKSh0LE9iamVjdChyLkFlKSh0KSkpOm51bGx9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe2lmKHQ9UXQodCksbnVsbD09dGhpcy5pbnB1dExlbmd0aClyZXR1cm4gdC5jb25jYXQoW3RoaXMub3V0cHV0RGltXSk7dmFyIGU9Tyh0aGlzLmlucHV0TGVuZ3RoKTtpZihlLmxlbmd0aCE9PXQubGVuZ3RoLTEpdGhyb3cgbmV3IHcoJ1wiaW5wdXRMZW5ndGhcIiBpcyAnK3RoaXMuaW5wdXRMZW5ndGgrXCIsIGJ1dCByZWNlaXZlZCBpbnB1dCBzaGFwZSBoYXMgc2hhcGUgXCIrdCk7Zm9yKHZhciBuPTAscj0wO3I8ZS5sZW5ndGg7KytyKXt2YXIgaT1lW3JdLGE9dFtyKzFdO2lmKG51bGwhPWkmJm51bGwhPWEmJmkhPT1hKXRocm93IG5ldyB3KCdcImlucHV0TGVuZ3RoXCIgaXMgJyt0aGlzLmlucHV0TGVuZ3RoK1wiLCBidXQgcmVjZWl2ZWQgaW5wdXQgc2hhcGUgaGFzIHNoYXBlIFwiK3QpO251bGw9PWkmJihlW25dPWEpLG4rK31yZXR1cm5bdFswXV0uY29uY2F0KGUsW3RoaXMub3V0cHV0RGltXSl9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtuLmludm9rZUNhbGxIb29rKHQsZSk7dmFyIHI9WnQodCk7cmV0dXJuXCJpbnQzMlwiIT09ci5kdHlwZSYmKHI9ZHQocixcImludDMyXCIpKSxTdChuLmVtYmVkZGluZ3MucmVhZCgpLHIuYXMxRCgpKS5yZXNoYXBlKFF0KG4uY29tcHV0ZU91dHB1dFNoYXBlKHIuc2hhcGUpKSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2lucHV0RGltOnRoaXMuaW5wdXREaW0sb3V0cHV0RGltOnRoaXMub3V0cHV0RGltLGVtYmVkZGluZ3NJbml0aWFsaXplcjpLdCh0aGlzLmVtYmVkZGluZ3NJbml0aWFsaXplciksZW1iZWRkaW5nc1JlZ3VsYXJpemVyOmZyKHRoaXMuZW1iZWRkaW5nc1JlZ3VsYXJpemVyKSxhY3Rpdml0eVJlZ3VsYXJpemVyOmZyKHRoaXMuYWN0aXZpdHlSZWd1bGFyaXplciksZW1iZWRkaW5nc0NvbnN0cmFpbnQ6JCh0aGlzLmVtYmVkZGluZ3NDb25zdHJhaW50KSxtYXNrWmVybzp0aGlzLm1hc2taZXJvLGlucHV0TGVuZ3RoOnRoaXMuaW5wdXRMZW5ndGh9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIkVtYmVkZGluZ1wiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoRnIpO3ZhciBVcj1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGV8fHt9KXx8dGhpcztyZXR1cm4gbi5zdXBwb3J0c01hc2tpbmc9ITAsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLm1lcmdlRnVuY3Rpb249ZnVuY3Rpb24odCl7dGhyb3cgbmV3IF99LGUucHJvdG90eXBlLmNvbXB1dGVFbGVtZW50d2lzZU9wT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCxlKXtpZihudWxsPT10fHxudWxsPT1lKXJldHVybiBudWxsO2lmKHQubGVuZ3RoPGUubGVuZ3RoKXJldHVybiB0aGlzLmNvbXB1dGVFbGVtZW50d2lzZU9wT3V0cHV0U2hhcGUoZSx0KTtpZigwPT09ZS5sZW5ndGgpcmV0dXJuIHQ7Zm9yKHZhciBuPXQuc2xpY2UoMCx0Lmxlbmd0aC1lLmxlbmd0aCkscj0wO3I8ZS5sZW5ndGg7KytyKXt2YXIgaT10W3QubGVuZ3RoLWUubGVuZ3RoK3JdLGE9ZVtyXTtpZihudWxsPT1pfHxudWxsPT1hfHxpPDB8fGE8MCluLnB1c2gobnVsbCk7ZWxzZSBpZigxPT09aSluLnB1c2goYSk7ZWxzZSBpZigxPT09YSluLnB1c2goaSk7ZWxzZXtpZihpIT09YSl0aHJvdyBuZXcgdyhcIk9wZXJhbmRzIGNvdWxkIG5vdCBiZSBicm9hZGNhc3QgdG9nZXRoZXIgd2l0aCBzaGFwZXMgXCIrSlNPTi5zdHJpbmdpZnkodCkrXCIgXCIrSlNPTi5zdHJpbmdpZnkoZSkpO24ucHVzaChpKX19cmV0dXJuIG59LGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkmJiFBcnJheS5pc0FycmF5KHRbMF0pJiYodD1bUXQodCldKSwodD10KS5sZW5ndGg8Mil0aHJvdyBuZXcgdyhcIkEgbWVyZ2UgbGF5ZXIgc2hvdWxkIGJlIGNhbGxlZCBvbiBhbiBBcnJheSBvZiBhdCBsZWFzdCAyIGlucHV0cy4gR290IFwiK3QubGVuZ3RoK1wiIGlucHV0KHMpLlwiKTtmb3IodmFyIGU9W10sbj0wLHI9dDtuPHIubGVuZ3RoO24rKyludWxsIT0obz1yW25dKSYmbnVsbCE9PW9bMF0mJmUucHVzaChvWzBdKTtpZigoZT1EKGUpKS5sZW5ndGg+MSl0aHJvdyBuZXcgdyhcIkNhbiBub3QgbWVyZ2UgdGVuc29ycyB3aXRoIGRpZmZlcmVudCBiYXRjaCBzaXplcy4gR290IHRlbnNvcnMgd2l0aCBzaGFwZXM6IFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiLlwiKTtmb3IodmFyIGk9bnVsbD09dFswXT9udWxsOnRbMF0uc2xpY2UoMSksYT0xO2E8dC5sZW5ndGg7KythKXt2YXIgbz1udWxsPT10W2FdP251bGw6dFthXS5zbGljZSgxKTtpPXRoaXMuY29tcHV0ZUVsZW1lbnR3aXNlT3BPdXRwdXRTaGFwZShpLG8pfXZhciBzPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmxlbmd0aH0pOy0xPT09dC5pbmRleE9mKG51bGwpJiYxPT09RChzKS5sZW5ndGg/dGhpcy5yZXNoYXBlUmVxdWlyZWQ9ITE6dGhpcy5yZXNoYXBlUmVxdWlyZWQ9ITB9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZih0PXQsbi5yZXNoYXBlUmVxdWlyZWQpe3ZhciBlPVtdLGk9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQucmFua30pO2lmKC0xPT09aS5pbmRleE9mKG51bGwpKXtmb3IodmFyIGE9aHQoaSksbz0wLHM9dDtvPHMubGVuZ3RoO28rKyl7Zm9yKHZhciB1PShwPXNbb10pLnJhbmssYz0wO2M8YS11OysrYylwPW10KHAsMSk7ZS5wdXNoKHApfXJldHVybiBuLm1lcmdlRnVuY3Rpb24oZSl9Zm9yKHZhciBsPSExLGY9MCxoPXQ7ZjxoLmxlbmd0aDtmKyspe3ZhciBwO2lmKG51bGw9PSh1PShwPWhbZl0pLnJhbmspKXt2YXIgZD1wLnNoYXBlLG09ZFswXSxnPWQuc2xpY2UoMSkuY29uY2F0KFttXSkseT1wLnJlc2hhcGUoW21dLmNvbmNhdChjdChkLnNsaWNlKDEpKSkpO3k9KHk9T2JqZWN0KHIubWUpKHksWzEsMF0pKS5yZXNoYXBlKGcpLGUucHVzaCh5KSxsPSEwfWVsc2UgaWYodT4xKXt2YXIgdj1wdCgxLHUpLmNvbmNhdChbMF0pO2UucHVzaChPYmplY3Qoci5tZSkocCx2KSksbD0hMH1lbHNlIGUucHVzaChwKX12YXIgYj1uLm1lcmdlRnVuY3Rpb24oZSksdz1iLnJhbms7aWYobClpZihudWxsPT13KXt2YXIgXz1iLnNoYXBlO2c9W209X1tfLmxlbmd0aC0xXV0uY29uY2F0KF8uc2xpY2UoMCxfLmxlbmd0aC0xKSksYj1PYmplY3Qoci5tZSkoYi5yZXNoYXBlKFstMSxtXSksWzEsMF0pLnJlc2hhcGUoZyl9ZWxzZSB3PjEmJih2PVt3LTFdLmNvbmNhdChwdCgwLHctMSkpLGI9T2JqZWN0KHIubWUpKGIsdikpO3JldHVybiBifXJldHVybiBuLm1lcmdlRnVuY3Rpb24odCl9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3ZhciBlO2U9bnVsbD09KHQ9dClbMF0/bnVsbDp0WzBdLnNsaWNlKDEpO2Zvcih2YXIgbj0xO248dC5sZW5ndGg7KytuKXt2YXIgcj1udWxsPT10W25dP251bGw6dFtuXS5zbGljZSgxKTtlPXRoaXMuY29tcHV0ZUVsZW1lbnR3aXNlT3BPdXRwdXRTaGFwZShlLHIpfWZvcih2YXIgaT1bXSxhPTAsbz10O2E8by5sZW5ndGg7YSsrKW51bGwhPShyPW9bYV0pJiZudWxsIT09clswXSYmaS5wdXNoKHJbMF0pO3JldHVybiAxPT09KGk9RChpKSkubGVuZ3RoP2kuY29uY2F0KGUpOltudWxsXS5jb25jYXQoZSl9LGUucHJvdG90eXBlLmNvbXB1dGVNYXNrPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKG51bGw9PWUpcmV0dXJuIG51bGw7aWYoIUFycmF5LmlzQXJyYXkoZSkpdGhyb3cgbmV3IHcoXCJgbWFza2Agc2hvdWxkIGJlIGFuIEFycmF5XCIpO2lmKCFBcnJheS5pc0FycmF5KHQpKXRocm93IG5ldyB3KFwiYGlucHV0c2Agc2hvdWxkIGJlIGFuIEFycmF5XCIpO2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpdGhyb3cgbmV3IHcoXCJUaGUgQXJyYXkgJ2lucHV0cycgYW5kICdtYXNrJyBhcmUgZXhwZWN0ZWQgdG8gaGF2ZSB0aGUgc2FtZSBsZW5ndGgsIGJ1dCBoYXZlIGRpZmZlcmVudCBsZW5ndGhzIChcIit0Lmxlbmd0aCtcIiB2cyBcIitlLmxlbmd0aCtcIilcIik7aWYoZS5ldmVyeShmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dH0pKXJldHVybiBudWxsO2Zvcih2YXIgbj0oZT1lLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD90Ok9iamVjdChyLnZiKSh0LDApfSkpWzBdLGk9MTtpPGUubGVuZ3RoLTE7KytpKW49T2JqZWN0KHIuZmMpKG4sZVtpXSk7cmV0dXJuIG59KX0sZX0obGUpLFZyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUubWVyZ2VGdW5jdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRbMF0uY2xvbmUoKSxuPTE7bjx0Lmxlbmd0aDsrK24pZT1PYmplY3Qoci51KShlLHRbbl0pO3JldHVybiBlfSl9LGUuY2xhc3NOYW1lPVwiQWRkXCIsZX0oVXIpO3IudGQucmVnaXN0ZXJDbGFzcyhWcik7dmFyIFdyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUubWVyZ2VGdW5jdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRbMF0uY2xvbmUoKSxuPTE7bjx0Lmxlbmd0aDsrK24pZT1PYmplY3Qoci56YykoZSx0W25dKTtyZXR1cm4gZX0pfSxlLmNsYXNzTmFtZT1cIk11bHRpcGx5XCIsZX0oVXIpO3IudGQucmVnaXN0ZXJDbGFzcyhXcik7dmFyIHFyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUubWVyZ2VGdW5jdGlvbj1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRbMF0uY2xvbmUoKSxuPTE7bjx0Lmxlbmd0aDsrK24pZT1PYmplY3Qoci51KShlLHRbbl0pO3JldHVybiBPYmplY3Qoci56YykoeSgxL3QubGVuZ3RoKSxlKX0pfSxlLmNsYXNzTmFtZT1cIkF2ZXJhZ2VcIixlfShVcik7ci50ZC5yZWdpc3RlckNsYXNzKHFyKTt2YXIgJHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5tZXJnZUZ1bmN0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtmb3IodmFyIGU9dFswXSxuPTE7bjx0Lmxlbmd0aDsrK24pZT1PYmplY3Qoci5vYykoZSx0W25dKTtyZXR1cm4gZX0pfSxlLmNsYXNzTmFtZT1cIk1heGltdW1cIixlfShVcik7ci50ZC5yZWdpc3RlckNsYXNzKCRyKTt2YXIgSHI9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5tZXJnZUZ1bmN0aW9uPWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtmb3IodmFyIGU9dFswXSxuPTE7bjx0Lmxlbmd0aDsrK24pZT1PYmplY3Qoci50YykoZSx0W25dKTtyZXR1cm4gZX0pfSxlLmNsYXNzTmFtZT1cIk1pbmltdW1cIixlfShVcik7ci50ZC5yZWdpc3RlckNsYXNzKEhyKTt2YXIgS3I9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gbi5ERUZBVUxUX0FYSVM9LTEsbnVsbD09ZSYmKGU9e30pLG4uYXhpcz1udWxsPT1lLmF4aXM/bi5ERUZBVUxUX0FYSVM6ZS5heGlzLG4uc3VwcG9ydHNNYXNraW5nPSEwLG4ucmVzaGFwZVJlcXVpcmVkPSExLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbih0KXtpZighQXJyYXkuaXNBcnJheSh0KXx8IUFycmF5LmlzQXJyYXkodFswXSl8fDE9PT10Lmxlbmd0aCl0aHJvdyBuZXcgdyhcIkEgYENvbmNhdGVuYXRlYCBsYXllciBzaG91bGQgYmUgY2FsbGVkIG9uIGEgbGlzdCBvZiBhdCBsZWFzdCAyIGlucHV0c1wiKTtmb3IodmFyIGU9ITAsbj0wLGk9dD10O248aS5sZW5ndGg7bisrKWlmKG51bGwhPShmPWlbbl0pKXtlPSExO2JyZWFrfWlmKCFlKXtmb3IodmFyIGE9W10sbz0wO288dC5sZW5ndGg7KytvKXt2YXIgcz10W29dLnNsaWNlKCk7cy5zcGxpY2UodGhpcy5heGlzLDEpO2Zvcih2YXIgdT0hMSxjPTAsbD1hO2M8bC5sZW5ndGg7YysrKXt2YXIgZj1sW2NdO2lmKHIucWUuYXJyYXlzRXF1YWwoZixzKSl7dT0hMDticmVha319dXx8YS5wdXNoKHMpfWlmKGEubGVuZ3RoPjEpdGhyb3cgbmV3IHcoXCJBIGBDb25jYXRlbmF0ZWAgbGF5ZXIgcmVxdWlyZXMgaW5wdXRzIHdpdGggbWF0Y2hpbmcgc2hhcGVzIGV4Y2VwdCBmb3IgdGhlIGNvbmNhdCBheGlzLiBHb3QgaW5wdXQgc2hhcGVzOiBcIitKU09OLnN0cmluZ2lmeSh0KSl9fSxlLnByb3RvdHlwZS5tZXJnZUZ1bmN0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiBidCh0LGUuYXhpcyl9KX0sZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe2lmKCFBcnJheS5pc0FycmF5KHQpfHwhQXJyYXkuaXNBcnJheSh0WzBdKSl0aHJvdyBuZXcgdyhcIkEgYENvbmNhdGVuYXRlYCBsYXllciBzaG91bGQgYmUgY2FsbGVkIG9uIGEgbGlzdCBvZiBpbnB1dHMuXCIpO2Zvcih2YXIgZT10LG49ZVswXS5zbGljZSgpLHI9dGhpcy5heGlzPDA/bi5sZW5ndGgrdGhpcy5heGlzOnRoaXMuYXhpcyxpPTAsYT1lLnNsaWNlKDEpO2k8YS5sZW5ndGg7aSsrKXt2YXIgbz1hW2ldO2lmKG51bGw9PW5bcl18fG51bGw9PW9bcl0pe25bcl09bnVsbDticmVha31uW3JdKz1vW3JdfXJldHVybiBufSxlLnByb3RvdHlwZS5jb21wdXRlTWFzaz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZighQXJyYXkuaXNBcnJheShlKSl0aHJvdyBuZXcgdyhcImBtYXNrYCBzaG91bGQgYmUgYW4gYXJyYXkgZm9yIENvbmNhdGVuYXRlXCIpO2lmKCFBcnJheS5pc0FycmF5KHQpKXRocm93IG5ldyB3KFwiYGlucHV0c2Agc2hvdWxkIGJlIGFuIGFycmF5IGZvciBDb25jYXRlbmF0ZVwiKTtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXRocm93IG5ldyB3KFwiTWlzbWF0Y2ggaW4gdGhlIGxlbmd0aCBvZiBtYXNrIChcIitlLmxlbmd0aCtcIikgYW5kIHRoZSBsZWdudGggb2YgaW5wdXRzIChcIit0Lmxlbmd0aCtcIilcIik7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBpPSEwO2lmKGUuZm9yRWFjaChmdW5jdGlvbih0KXtudWxsPT10fHwoaT0hMSl9KSxpKXJldHVybiBudWxsO2Zvcih2YXIgYT1bXSxvPTA7bzx0Lmxlbmd0aDsrK28pbnVsbD09ZVtvXT9hLnB1c2goT2JqZWN0KHIuS2MpKHRbb10pLmFzVHlwZShcImJvb2xcIikpOmVbb10ucmFuazx0W29dLnJhbms/YS5wdXNoKE9iamVjdChyLnZiKShlW29dLC0xKSk6YS5wdXNoKGVbb10pO3ZhciBzPU9iamVjdChyLlQpKGEsbi5heGlzKTtyZXR1cm4gT2JqZWN0KHIueCkocywtMSwhMSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2F4aXM6dGhpcy5heGlzfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJDb25jYXRlbmF0ZVwiLGV9KFVyKTtmdW5jdGlvbiBHcih0LGUpe2Zvcig7dDwwOyl0Kz1lO3JldHVybiB0fXIudGQucmVnaXN0ZXJDbGFzcyhLcik7dmFyIFhyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7cmV0dXJuIG4uYXhlcz1lLmF4ZXMsbi5ub3JtYWxpemU9bnVsbCE9ZS5ub3JtYWxpemUmJmUubm9ybWFsaXplLG4uc3VwcG9ydHNNYXNraW5nPSEwLG4ucmVzaGFwZVJlcXVpcmVkPSExLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbih0KXtyLnFlLmFzc2VydChBcnJheS5pc0FycmF5KHQpJiYyPT09dC5sZW5ndGgmJkFycmF5LmlzQXJyYXkodFswXSkmJkFycmF5LmlzQXJyYXkodFsxXSksXCJBIGBEb3RgIGxheWVyIHNob3VsZCBiZSBjYWxsZWQgb24gYSBsaXN0IG9mIGV4YWN0bHkgMiBpbnB1dHMuXCIpO3ZhciBlPXRbMF0sbj10WzFdO2lmKGUubGVuZ3RoPjN8fG4ubGVuZ3RoPjMpdGhyb3cgbmV3IF8oXCJEb3QgbGF5ZXIgZG9lcyBub3Qgc3VwcG9ydCB0ZW5zb3JzIG9mIDREIG9yIGhpZ2hlciByYW5rIHlldC5cIik7dmFyIGk9dGhpcy5pbnRlcnByZXRBeGVzKGUsbik7aWYoZVtpWzBdXSE9PW5baVsxXV0pdGhyb3cgbmV3IHcoXCJEaW1lbnNpb24gaW5jb21wYXRpYmlsaXR5OiBcIitlW2lbMF1dK1wiICE9PSBcIituW2lbMV1dKX0sZS5wcm90b3R5cGUubWVyZ2VGdW5jdGlvbj1mdW5jdGlvbih0KXtpZigyIT09dC5sZW5ndGgpdGhyb3cgbmV3IHcoXCJBIGBEb3RgIGxheWVyIG11c3QgYmUgY2FsbGVkIG9uIGV4YWN0bHkgMiBpbnB1dHMsIGJ1dCByZWNlaXZlZCBcIit0Lmxlbmd0aCtcIiBpbnB1dChzKS5cIik7dmFyIGUsbj10WzBdLGk9dFsxXTtyZXR1cm4gZT1BcnJheS5pc0FycmF5KHRoaXMuYXhlcyk/dGhpcy5heGVzLm1hcChmdW5jdGlvbihlLG4pe3JldHVybiBHcihlLHRbbl0uc2hhcGUubGVuZ3RoKX0pOltHcih0aGlzLmF4ZXMsbi5zaGFwZS5sZW5ndGgpLEdyKHRoaXMuYXhlcyxpLnNoYXBlLmxlbmd0aCldLHRoaXMubm9ybWFsaXplJiYobj1JZShuLGVbMF0pLGk9SWUoaSxlWzFdKSksZnVuY3Rpb24odCxlLG4pe2lmKHQuc2hhcGUubGVuZ3RoPjN8fGUuc2hhcGUubGVuZ3RoPjMpdGhyb3cgbmV3IF8oXCJiYXRjaERvdCBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIHRlbnNvcnMgb2YgNEQgb3IgaGlnaGVyIHJhbmsgeWV0XCIpO2lmKHIucWUuYXNzZXJ0KHQuc2hhcGUubGVuZ3RoPj0yLFwiYmF0Y2hEb3QgcmVxdWlyZXMgdGhlIHJhbmsgb2YgeCB0byBiZSA+PSAyLCBidXQgZ290IFwiK3Quc2hhcGUubGVuZ3RoKSxyLnFlLmFzc2VydCh0LnNoYXBlLmxlbmd0aD49MixcImJhdGNoRG90IHJlcXVpcmVzIHRoZSByYW5rIG9mIHkgdG8gYmUgPj0gMiwgYnV0IGdvdCBcIitlLnNoYXBlLmxlbmd0aCksXCJudW1iZXJcIj09dHlwZW9mIG4mJihuPVtuLG5dKSxcImNvbXBsZXg2NFwiPT09dC5kdHlwZXx8XCJjb21wbGV4NjRcIj09PWUuZHR5cGUpdGhyb3cgbmV3IF8oXCJiYXRjaERvdCBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIGNvbXBsZXg2NC10eXBlIFRlbnNvcnMgeWV0LlwiKTt2YXIgaT10LnNoYXBlLmxlbmd0aCxhPWUuc2hhcGUubGVuZ3RoO251bGw9PW4mJihuPVtpLTEsYS0yXSk7dmFyIG89bjtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIG4scjtpZihpPmEpe249aS1hO2Zvcih2YXIgcz1bXSx1PTA7dTxuOysrdSlzLnB1c2goMSk7ZT1lLnJlc2hhcGUoZS5zaGFwZS5jb25jYXQocykpfWVsc2UgaWYoYT5pKXtmb3Iobj1hLWkscz1bXSx1PTA7dTxuOysrdSlzLnB1c2goMSk7dD10LnJlc2hhcGUodC5zaGFwZS5jb25jYXQocykpfWVsc2Ugbj0wO2lmKDI9PT10LnNoYXBlLmxlbmd0aCYmMj09PWUuc2hhcGUubGVuZ3RoKXI9b1swXT09PW9bMV0/dC5tdWxTdHJpY3QoZSkuc3VtKG9bMF0pOnQudHJhbnNwb3NlKFsxLDBdKS5tdWxTdHJpY3QoZSkuc3VtKG9bMV0pO2Vsc2V7dmFyIGM9b1swXSE9PXQuc2hhcGUubGVuZ3RoLTF8fG51bGwsbD1vWzFdPT09ZS5zaGFwZS5sZW5ndGgtMXx8bnVsbDtyPXQubWF0TXVsKGUsYyxsKX1pZihuPjApe3ZhciBmLGg9W107Zm9yKHU9Zj1pPmE/aSthLTM6aS0xO3U8ZituOysrdSloLnB1c2godSk7cj1yLnNxdWVlemUoaCl9cmV0dXJuIDE9PT1yLnNoYXBlLmxlbmd0aCYmKHI9ci5leHBhbmREaW1zKDEpKSxyfSl9KG4saSxlKX0sZS5wcm90b3R5cGUuaW50ZXJwcmV0QXhlcz1mdW5jdGlvbih0LGUpe3JldHVybiBBcnJheS5pc0FycmF5KHRoaXMuYXhlcyk/dGhpcy5heGVzOltHcih0aGlzLmF4ZXMsdC5sZW5ndGgpLEdyKHRoaXMuYXhlcyxlLmxlbmd0aCldfSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7ci5xZS5hc3NlcnQoQXJyYXkuaXNBcnJheSh0KSYmMj09PXQubGVuZ3RoJiZBcnJheS5pc0FycmF5KHRbMF0pJiZBcnJheS5pc0FycmF5KHRbMV0pLFwiQSBgRG90YCBsYXllciBzaG91bGQgYmUgY2FsbGVkIG9uIGEgbGlzdCBvZiBleGFjdGx5IDIgaW5wdXRzLlwiKTt2YXIgZT10WzBdLnNsaWNlKCksbj10WzFdLnNsaWNlKCk7aWYoZS5sZW5ndGg+M3x8bi5sZW5ndGg+Myl0aHJvdyBuZXcgXyhcIkRvdCBsYXllciBkb2VzIG5vdCBzdXBwb3J0IHRlbnNvcnMgb2YgNEQgb3IgaGlnaGVyIHJhbmsgeWV0LlwiKTt2YXIgaT10aGlzLmludGVycHJldEF4ZXMoZSxuKTtlLnNwbGljZShpWzBdLDEpLG4uc3BsaWNlKGlbMV0sMSksbi5zcGxpY2UoMCwxKTt2YXIgYT1lLmNvbmNhdChuKTtyZXR1cm4gMT09PWEubGVuZ3RoJiZhLnB1c2goMSksYX0sZS5wcm90b3R5cGUuY29tcHV0ZU1hc2s9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbH0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2F4ZXM6dGhpcy5heGVzLG5vcm1hbGl6ZTp0aGlzLm5vcm1hbGl6ZX0sbj10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLG4pLGV9LGUuY2xhc3NOYW1lPVwiRG90XCIsZX0oVXIpO2Z1bmN0aW9uIFlyKHQsZSxuLGksYSxvKXt2YXIgcztpZih2b2lkIDA9PT1vJiYobz0uMDAxKSwyPT09dC5yYW5rKXM9T2JqZWN0KHIuSikodCxlLG4sbyxhLGkpO2Vsc2UgaWYoMz09PXQucmFuaylzPU9iamVjdChyLkspKHQsZSxuLG8sYSxpKTtlbHNle2lmKDQhPT10LnJhbmspdGhyb3cgbmV3IF8oXCJiYXRjaE5vcm1hbGl6YXRpb24gaXMgbm90IGltcGxlbWVudGVkIGZvciBhcnJheSBvZiByYW5rIFwiK3QucmFuaytcIiB5ZXRcIik7cz1PYmplY3Qoci5MKSh0LGUsbixvLGEsaSl9cmV0dXJuIHN9ZnVuY3Rpb24gSnIodCxlLG4saSxhKXtyZXR1cm4gdm9pZCAwPT09YSYmKGE9LjAwMSksci5xZS5hcnJheXNFcXVhbChpLnNsaWNlKCkuc29ydCgpLHB0KDAsdC5yYW5rLTEpKT9mdW5jdGlvbih0LGUsbixpLGEpe3JldHVybiB2b2lkIDA9PT1hJiYoYT0uMDAxKSxPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgbz1PYmplY3Qoci54YykodCxpKSxzPW8ubWVhbix1PW8udmFyaWFuY2U7cmV0dXJuW1lyKHQscyx1LG4sZSxhKSxzLHVdfSl9KHQsZSxuLGksYSk6ZnVuY3Rpb24odCxlLG4saSxhKXtyZXR1cm4gdm9pZCAwPT09YSYmKGE9LjAwMSksT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7Zm9yKHZhciBvPU9iamVjdChyLnhjKSh0LGkpLHM9by5tZWFuLHU9by52YXJpYW5jZSxjPVtdLGw9MCxmPXB0KDAsdC5yYW5rKTtsPGYubGVuZ3RoO2wrKyl7dmFyIGg9ZltsXTstMSE9PWkuaW5kZXhPZihoKT9jLnB1c2goMSk6Yy5wdXNoKHQuc2hhcGVbaF0pfXZhciBwPXMucmVzaGFwZShjKSxkPXUucmVzaGFwZShjKSxtPW51bGw9PWU/bnVsbDplLnJlc2hhcGUoYyksZz1udWxsPT1uP251bGw6bi5yZXNoYXBlKGMpO3JldHVybltZcih0LHAsZCxnLG0sYSkscyx1XX0pfSh0LGUsbixpLGEpfXIudGQucmVnaXN0ZXJDbGFzcyhYcik7dmFyIFpyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dGhpcztyZXR1cm4gbnVsbD09ZSYmKGU9e30pLChuPXQuY2FsbCh0aGlzLGUpfHx0aGlzKS5zdXBwb3J0c01hc2tpbmc9ITAsbi5heGlzPW51bGw9PWUuYXhpcz8tMTplLmF4aXMsbi5tb21lbnR1bT1udWxsPT1lLm1vbWVudHVtPy45OTplLm1vbWVudHVtLG4uZXBzaWxvbj1udWxsPT1lLmVwc2lsb24/LjAwMTplLmVwc2lsb24sbi5jZW50ZXI9bnVsbD09ZS5jZW50ZXJ8fGUuY2VudGVyLG4uc2NhbGU9bnVsbD09ZS5zY2FsZXx8ZS5zY2FsZSxuLmJldGFJbml0aWFsaXplcj1HdChlLmJldGFJbml0aWFsaXplcnx8XCJ6ZXJvc1wiKSxuLmdhbW1hSW5pdGlhbGl6ZXI9R3QoZS5nYW1tYUluaXRpYWxpemVyfHxcIm9uZXNcIiksbi5tb3ZpbmdNZWFuSW5pdGlhbGl6ZXI9R3QoZS5tb3ZpbmdNZWFuSW5pdGlhbGl6ZXJ8fFwiemVyb3NcIiksbi5tb3ZpbmdWYXJpYW5jZUluaXRpYWxpemVyPUd0KGUubW92aW5nVmFyaWFuY2VJbml0aWFsaXplcnx8XCJvbmVzXCIpLG4uYmV0YUNvbnN0cmFpbnQ9SyhlLmJldGFDb25zdHJhaW50KSxuLmdhbW1hQ29uc3RyYWludD1LKGUuZ2FtbWFDb25zdHJhaW50KSxuLmJldGFSZWd1bGFyaXplcj1wcihlLmJldGFSZWd1bGFyaXplciksbi5nYW1tYVJlZ3VsYXJpemVyPXByKGUuZ2FtbWFSZWd1bGFyaXplciksbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe3Q9UXQodCk7dmFyIGU9dGhpcy5heGlzPj0wP3RoaXMuYXhpczp0aGlzLmF4aXMrdC5sZW5ndGgsbj10W2VdO2lmKG51bGw9PW4pdGhyb3cgbmV3IHcoXCJBeGlzIFwiK2UrXCIgb2YgaW5wdXQgdGVuc29yIHNob3VsZCBoYXZlIGEgZGVmaW5lZCBkaW1lbnNpb24gYnV0IHRoZSBsYXllciByZWNlaXZlZCBhbiBpbnB1dCB3aXRoIHNoYXBlIFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiLlwiKTt0aGlzLmlucHV0U3BlYz1bbmV3IGFlKHtuZGltOnQubGVuZ3RoLGF4ZXM6KHI9e30scltlXT1uLHIpfSldO3ZhciByLGk9W25dO3RoaXMuc2NhbGUmJih0aGlzLmdhbW1hPXRoaXMuYWRkV2VpZ2h0KFwiZ2FtbWFcIixpLG51bGwsdGhpcy5nYW1tYUluaXRpYWxpemVyLHRoaXMuZ2FtbWFSZWd1bGFyaXplciwhMCx0aGlzLmdhbW1hQ29uc3RyYWludCkpLHRoaXMuY2VudGVyJiYodGhpcy5iZXRhPXRoaXMuYWRkV2VpZ2h0KFwiYmV0YVwiLGksbnVsbCx0aGlzLmJldGFJbml0aWFsaXplcix0aGlzLmJldGFSZWd1bGFyaXplciwhMCx0aGlzLmJldGFDb25zdHJhaW50KSksdGhpcy5tb3ZpbmdNZWFuPXRoaXMuYWRkV2VpZ2h0KFwibW92aW5nX21lYW5cIixpLG51bGwsdGhpcy5tb3ZpbmdNZWFuSW5pdGlhbGl6ZXIsbnVsbCwhMSksdGhpcy5tb3ZpbmdWYXJpYW5jZT10aGlzLmFkZFdlaWdodChcIm1vdmluZ192YXJpYW5jZVwiLGksbnVsbCx0aGlzLm1vdmluZ1ZhcmlhbmNlSW5pdGlhbGl6ZXIsbnVsbCwhMSksdGhpcy5idWlsdD0hMH0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBpPW51bGwhPWUudHJhaW5pbmcmJmUudHJhaW5pbmcsYT1adCh0KSxvPWEuc2hhcGUscz1vLmxlbmd0aCx1PXB0KDAscyksYz1uLmF4aXM+PTA/bi5heGlzOm4uYXhpcytzO3Uuc3BsaWNlKGMsMSk7dmFyIGw9RSgxLHMpO2xbY109b1tjXTt2YXIgZj11LnNsaWNlKCk7Zi5zb3J0KCk7dmFyIGg9IXIucWUuYXJyYXlzRXF1YWwoZixwdCgwLHMpLnNsaWNlKDAscy0xKSk7aWYoIWkpcmV0dXJuIGZ1bmN0aW9uKCl7aWYoaCl7dmFyIHQ9bi5tb3ZpbmdNZWFuLnJlYWQoKS5yZXNoYXBlKGwpLGU9bi5tb3ZpbmdWYXJpYW5jZS5yZWFkKCkucmVzaGFwZShsKSxyPW4uY2VudGVyP24uYmV0YS5yZWFkKCkucmVzaGFwZShsKTpudWxsLGk9bi5zY2FsZT9uLmdhbW1hLnJlYWQoKS5yZXNoYXBlKGwpOm51bGw7cmV0dXJuIFlyKGEsdCxlLHIsaSxuLmVwc2lsb24pfXJldHVybiBZcihhLG4ubW92aW5nTWVhbi5yZWFkKCksbi5tb3ZpbmdWYXJpYW5jZS5yZWFkKCksbnVsbD09bi5iZXRhP251bGw6bi5iZXRhLnJlYWQoKSxudWxsPT1uLmdhbW1hP251bGw6bi5nYW1tYS5yZWFkKCksbi5lcHNpbG9uKX0oKTt2YXIgcD1KcihhLG4uZ2FtbWEucmVhZCgpLG4uYmV0YS5yZWFkKCksdSxuLmVwc2lsb24pLGQ9cFswXSxtPXBbMV0sZz1wWzJdLHY9ZnVuY3Rpb24odCxlLG4pe09iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciByPXkoMSkuc3ViKHkobikpLGk9dC5yZWFkKCksYT1pLnN1YihlKS5tdWwocik7dC53cml0ZShpLnN1YihhKSl9KX07cmV0dXJuIHYobi5tb3ZpbmdNZWFuLG0sbi5tb21lbnR1bSksdihuLm1vdmluZ1ZhcmlhbmNlLGcsbi5tb21lbnR1bSksZH0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17YXhpczp0aGlzLmF4aXMsbW9tZW50dW06dGhpcy5tb21lbnR1bSxlcHNpbG9uOnRoaXMuZXBzaWxvbixjZW50ZXI6dGhpcy5jZW50ZXIsc2NhbGU6dGhpcy5zY2FsZSxiZXRhSW5pdGlhbGl6ZXI6S3QodGhpcy5iZXRhSW5pdGlhbGl6ZXIpLGdhbW1hSW5pdGlhbGl6ZXI6S3QodGhpcy5nYW1tYUluaXRpYWxpemVyKSxtb3ZpbmdNZWFuSW5pdGlhbGl6ZXI6S3QodGhpcy5tb3ZpbmdNZWFuSW5pdGlhbGl6ZXIpLG1vdmluZ1ZhcmlhbmNlSW5pdGlhbGl6ZXI6S3QodGhpcy5tb3ZpbmdWYXJpYW5jZUluaXRpYWxpemVyKSxiZXRhUmVndWxhcml6ZXI6ZnIodGhpcy5iZXRhUmVndWxhcml6ZXIpLGdhbW1hUmVndWxhcml6ZXI6ZnIodGhpcy5nYW1tYVJlZ3VsYXJpemVyKSxiZXRhQ29uc3RyYWludDokKHRoaXMuYmV0YUNvbnN0cmFpbnQpLGdhbW1hQ29uc3RyYWludDokKHRoaXMuZ2FtbWFDb25zdHJhaW50KX0sbj10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLG4pLGV9LGUuY2xhc3NOYW1lPVwiQmF0Y2hOb3JtYWxpemF0aW9uXCIsZX0obGUpO3IudGQucmVnaXN0ZXJDbGFzcyhacik7dmFyIFFyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dGhpcztpZihudWxsPT1lJiYoZT17fSksKG49dC5jYWxsKHRoaXMsZSl8fHRoaXMpLmRhdGFGb3JtYXQ9bnVsbD09ZS5kYXRhRm9ybWF0P1wiY2hhbm5lbHNMYXN0XCI6ZS5kYXRhRm9ybWF0LG51bGw9PWUucGFkZGluZyluLnBhZGRpbmc9W1sxLDFdLFsxLDFdXTtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBlLnBhZGRpbmcpbi5wYWRkaW5nPVtbZS5wYWRkaW5nLGUucGFkZGluZ10sW2UucGFkZGluZyxlLnBhZGRpbmddXTtlbHNle2lmKGUucGFkZGluZz1lLnBhZGRpbmcsMiE9PWUucGFkZGluZy5sZW5ndGgpdGhyb3cgbmV3IHcoXCJaZXJvUGFkZGluZzJEIGV4cGVjdHMgcGFkZGluZyB0byBiZSBhIGxlbmd0aC0yIGFycmF5LCBidXQgcmVjZWl2ZWQgYSBsZW5ndGgtXCIrZS5wYWRkaW5nLmxlbmd0aCtcIiBhcnJheS5cIik7dmFyIHI9dm9pZCAwLGk9dm9pZCAwO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlLnBhZGRpbmdbMF0pcj1bZS5wYWRkaW5nWzBdLGUucGFkZGluZ1swXV0saT1bZS5wYWRkaW5nWzFdLGUucGFkZGluZ1sxXV07ZWxzZXtpZihlLnBhZGRpbmc9ZS5wYWRkaW5nLDIhPT1lLnBhZGRpbmdbMF0ubGVuZ3RoKXRocm93IG5ldyB3KFwiWmVyb1BhZGRpbmcyRCBleHBlY3RzIGhlaWdodCBwYWRkaW5nIHRvIGJlIGEgbGVuZ3RoLTIgYXJyYXksIGJ1dCByZWNlaXZlZCBhIGxlbmd0aC1cIitlLnBhZGRpbmdbMF0ubGVuZ3RoK1wiIGFycmF5LlwiKTtpZihyPWUucGFkZGluZ1swXSwyIT09ZS5wYWRkaW5nWzFdLmxlbmd0aCl0aHJvdyBuZXcgdyhcIlplcm9QYWRkaW5nMkQgZXhwZWN0cyB3aWR0aCBwYWRkaW5nIHRvIGJlIGEgbGVuZ3RoLTIgYXJyYXksIGJ1dCByZWNlaXZlZCBhIGxlbmd0aC1cIitlLnBhZGRpbmdbMV0ubGVuZ3RoK1wiIGFycmF5LlwiKTtpPWUucGFkZGluZ1sxXX1uLnBhZGRpbmc9W3IsaV19cmV0dXJuIG4uaW5wdXRTcGVjPVtuZXcgYWUoe25kaW06NH0pXSxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZU91dHB1dFNoYXBlPWZ1bmN0aW9uKHQpe3ZhciBlLG47cmV0dXJuIHQ9UXQodCksXCJjaGFubmVsc0ZpcnN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/KGU9bnVsbCE9dFsyXSYmdFsyXT49MD90WzJdK3RoaXMucGFkZGluZ1swXVswXSt0aGlzLnBhZGRpbmdbMF1bMV06bnVsbCxuPW51bGwhPXRbM10mJnRbM10+PTA/dFszXSt0aGlzLnBhZGRpbmdbMV1bMF0rdGhpcy5wYWRkaW5nWzFdWzFdOm51bGwsW3RbMF0sdFsxXSxlLG5dKTooZT1udWxsIT10WzFdJiZ0WzFdPj0wP3RbMV0rdGhpcy5wYWRkaW5nWzBdWzBdK3RoaXMucGFkZGluZ1swXVsxXTpudWxsLG49bnVsbCE9dFsyXSYmdFsyXT49MD90WzJdK3RoaXMucGFkZGluZ1sxXVswXSt0aGlzLnBhZGRpbmdbMV1bMV06bnVsbCxbdFswXSxlLG4sdFszXV0pfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7aWYoNCE9PXQucmFuayl0aHJvdyBuZXcgdyhcInRlbXBvcmFsUGFkZGluZyBleHBlY3RzIGlucHV0IHRlbnNvciB0byBiZSA0LUQsIGJ1dCByZWNlaXZlZCBhIFwiK3QucmFuaytcIi1EIHRlbnNvci5cIik7aWYobnVsbD09ZSYmKGU9W1sxLDFdLFsxLDFdXSksMiE9PWUubGVuZ3RofHwyIT09ZVswXS5sZW5ndGh8fDIhPT1lWzFdLmxlbmd0aCl0aHJvdyBuZXcgdyhcInNwYXRpYWwyZFBhZGRpbmcgZXhwZWN0cyBgcGFkZGluZ2AgdG8gYmUgYW4gQXJyYXkgb2YgdHdvIEFycmF5cywgZWFjaCBvZiB3aGljaCBpcyBhbiBBcnJheSBvZiB0d28gaW50ZWdlcnMuXCIpO2lmKG51bGw9PW4mJihuPVwiY2hhbm5lbHNMYXN0XCIpLFwiY2hhbm5lbHNMYXN0XCIhPT1uJiZcImNoYW5uZWxzRmlyc3RcIiE9PW4pdGhyb3cgbmV3IHcoXCJVbmtub3duIGRhdGEgZm9ybWF0OiBcIituK1wiLiBTdXBwb3J0ZWQgZGF0YSBmb3JtYXRzIGFyZSAnY2hhbm5lbHNMYXN0JyBhbmQgJ2NoYW5uZWxzRmlyc3QuXCIpO3ZhciBpO3JldHVybiBpPVwiY2hhbm5lbHNGaXJzdFwiPT09bj9bWzAsMF0sWzAsMF0sZVswXSxlWzFdXTpbWzAsMF0sZVswXSxlWzFdLFswLDBdXSxPYmplY3Qoci5OYykodCxpKX0pfShadCh0KSxuLnBhZGRpbmcsbi5kYXRhRm9ybWF0KX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17cGFkZGluZzp0aGlzLnBhZGRpbmcsZGF0YUZvcm1hdDp0aGlzLmRhdGFGb3JtYXR9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlplcm9QYWRkaW5nMkRcIixlfShsZSk7ZnVuY3Rpb24gdGkodCxlLG4saSxhLG8pe3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgcztKKGEpLGZ1bmN0aW9uKHQpe2oodHQsXCJQb29sTW9kZVwiLHQpfShvKSxRKGkpLG51bGw9PW4mJihuPVsxLDFdKSxudWxsPT1pJiYoaT1cInZhbGlkXCIpLG51bGw9PWEmJihhPVwiY2hhbm5lbHNMYXN0XCIpLG51bGw9PW8mJihvPVwibWF4XCIpLHQ9RXIodCxhKTt2YXIgdT1cInNhbWVcIj09PWk/XCJzYW1lXCI6XCJ2YWxpZFwiO3JldHVybiBzPVwibWF4XCI9PT1vP09iamVjdChyLm5jKSh0LGUsbix1KTpPYmplY3Qoci5HKSh0LGUsbix1KSxcImNoYW5uZWxzRmlyc3RcIj09PWEmJihzPU9iamVjdChyLm1lKShzLFswLDMsMSwyXSkpLHN9KX1yLnRkLnJlZ2lzdGVyQ2xhc3MoUXIpO3ZhciBlaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXRoaXM7aWYobnVsbD09ZS5wb29sU2l6ZSYmKGUucG9vbFNpemU9Miksbj10LmNhbGwodGhpcyxlKXx8dGhpcyxcIm51bWJlclwiPT10eXBlb2YgZS5wb29sU2l6ZSluLnBvb2xTaXplPVtlLnBvb2xTaXplXTtlbHNle2lmKCFBcnJheS5pc0FycmF5KGUucG9vbFNpemUpfHwxIT09ZS5wb29sU2l6ZS5sZW5ndGh8fFwibnVtYmVyXCIhPXR5cGVvZiBlLnBvb2xTaXplWzBdKXRocm93IG5ldyB3KFwicG9vbFNpemUgZm9yIDFEIGNvbnZvbHV0aW9uYWwgbGF5ZXIgbXVzdCBiZSBhIG51bWJlciBvciBhbiBBcnJheSBvZiBhIHNpbmdsZSBudW1iZXIsIGJ1dCByZWNlaXZlZCBcIitKU09OLnN0cmluZ2lmeShlLnBvb2xTaXplKSk7bi5wb29sU2l6ZT1lLnBvb2xTaXplfWlmKG51bGw9PWUuc3RyaWRlcyluLnN0cmlkZXM9bi5wb29sU2l6ZTtlbHNlIGlmKFwibnVtYmVyXCI9PXR5cGVvZiBlLnN0cmlkZXMpbi5zdHJpZGVzPVtlLnN0cmlkZXNdO2Vsc2V7aWYoIUFycmF5LmlzQXJyYXkoZS5zdHJpZGVzKXx8MSE9PWUuc3RyaWRlcy5sZW5ndGh8fFwibnVtYmVyXCIhPXR5cGVvZiBlLnN0cmlkZXNbMF0pdGhyb3cgbmV3IHcoXCJzdHJpZGVzIGZvciAxRCBjb252b2x1dGlvbmFsIGxheWVyIG11c3QgYmUgYSBudW1iZXIgb3IgYW4gQXJyYXkgb2YgYSBzaW5nbGUgbnVtYmVyLCBidXQgcmVjZWl2ZWQgXCIrSlNPTi5zdHJpbmdpZnkoZS5zdHJpZGVzKSk7bi5zdHJpZGVzPWUuc3RyaWRlc31yZXR1cm4gbi5wYWRkaW5nPW51bGw9PWUucGFkZGluZz9cInZhbGlkXCI6ZS5wYWRkaW5nLFEobi5wYWRkaW5nKSxuLmlucHV0U3BlYz1bbmV3IGFlKHtuZGltOjN9KV0sbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXt2YXIgZT1fcigodD1RdCh0KSlbMV0sdGhpcy5wb29sU2l6ZVswXSx0aGlzLnBhZGRpbmcsdGhpcy5zdHJpZGVzWzBdKTtyZXR1cm5bdFswXSxlLHRbMl1dfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7bi5pbnZva2VDYWxsSG9vayh0LGUpLHQ9bXQoWnQodCksMik7dmFyIGk9bi5wb29saW5nRnVuY3Rpb24oWnQodCksW24ucG9vbFNpemVbMF0sMV0sW24uc3RyaWRlc1swXSwxXSxuLnBhZGRpbmcsXCJjaGFubmVsc0xhc3RcIik7cmV0dXJuIE9iamVjdChyLlBkKShpLFsyXSl9KX0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e3Bvb2xTaXplOnRoaXMucG9vbFNpemUscGFkZGluZzp0aGlzLnBhZGRpbmcsc3RyaWRlczp0aGlzLnN0cmlkZXN9LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlfShsZSksbmk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5wb29saW5nRnVuY3Rpb249ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gSihpKSxRKHIpLHRpKHQsZSxuLHIsaSxcIm1heFwiKX0sZS5jbGFzc05hbWU9XCJNYXhQb29saW5nMURcIixlfShlaSk7ci50ZC5yZWdpc3RlckNsYXNzKG5pKTt2YXIgcmk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5wb29saW5nRnVuY3Rpb249ZnVuY3Rpb24odCxlLG4scixpKXtyZXR1cm4gSihpKSxRKHIpLHRpKHQsZSxuLHIsaSxcImF2Z1wiKX0sZS5jbGFzc05hbWU9XCJBdmVyYWdlUG9vbGluZzFEXCIsZX0oZWkpO3IudGQucmVnaXN0ZXJDbGFzcyhyaSk7dmFyIGlpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dGhpcztpZihudWxsPT1lLnBvb2xTaXplJiYoZS5wb29sU2l6ZT1bMiwyXSksKG49dC5jYWxsKHRoaXMsZSl8fHRoaXMpLnBvb2xTaXplPUFycmF5LmlzQXJyYXkoZS5wb29sU2l6ZSk/ZS5wb29sU2l6ZTpbZS5wb29sU2l6ZSxlLnBvb2xTaXplXSxudWxsPT1lLnN0cmlkZXMpbi5zdHJpZGVzPW4ucG9vbFNpemU7ZWxzZSBpZihBcnJheS5pc0FycmF5KGUuc3RyaWRlcykpe2lmKDIhPT1lLnN0cmlkZXMubGVuZ3RoKXRocm93IG5ldyB3KFwiSWYgdGhlIHN0cmlkZXMgcHJvcGVydHkgb2YgYSAyRCBwb29saW5nIGxheWVyIGlzIGFuIEFycmF5LCBpdCBpcyBleHBlY3RlZCB0byBoYXZlIGEgbGVuZ3RoIG9mIDIsIGJ1dCByZWNlaXZlZCBsZW5ndGggXCIrZS5zdHJpZGVzLmxlbmd0aCtcIi5cIik7bi5zdHJpZGVzPWUuc3RyaWRlc31lbHNlIG4uc3RyaWRlcz1bZS5zdHJpZGVzLGUuc3RyaWRlc107cmV0dXJuIG4ucGFkZGluZz1udWxsPT1lLnBhZGRpbmc/XCJ2YWxpZFwiOmUucGFkZGluZyxuLmRhdGFGb3JtYXQ9bnVsbD09ZS5kYXRhRm9ybWF0P1wiY2hhbm5lbHNMYXN0XCI6ZS5kYXRhRm9ybWF0LEoobi5kYXRhRm9ybWF0KSxRKG4ucGFkZGluZyksbi5pbnB1dFNwZWM9W25ldyBhZSh7bmRpbTo0fSldLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7dD1RdCh0KTt2YXIgZT1cImNoYW5uZWxzRmlyc3RcIj09PXRoaXMuZGF0YUZvcm1hdD90WzJdOnRbMV0sbj1cImNoYW5uZWxzRmlyc3RcIj09PXRoaXMuZGF0YUZvcm1hdD90WzNdOnRbMl07cmV0dXJuIGU9X3IoZSx0aGlzLnBvb2xTaXplWzBdLHRoaXMucGFkZGluZyx0aGlzLnN0cmlkZXNbMF0pLG49X3Iobix0aGlzLnBvb2xTaXplWzFdLHRoaXMucGFkZGluZyx0aGlzLnN0cmlkZXNbMV0pLFwiY2hhbm5lbHNGaXJzdFwiPT09dGhpcy5kYXRhRm9ybWF0P1t0WzBdLHRbMV0sZSxuXTpbdFswXSxlLG4sdFszXV19LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtyZXR1cm4gbi5pbnZva2VDYWxsSG9vayh0LGUpLG4ucG9vbGluZ0Z1bmN0aW9uKFp0KHQpLG4ucG9vbFNpemUsbi5zdHJpZGVzLG4ucGFkZGluZyxuLmRhdGFGb3JtYXQpfSl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXtwb29sU2l6ZTp0aGlzLnBvb2xTaXplLHBhZGRpbmc6dGhpcy5wYWRkaW5nLHN0cmlkZXM6dGhpcy5zdHJpZGVzLGRhdGFGb3JtYXQ6dGhpcy5kYXRhRm9ybWF0fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZX0obGUpLGFpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUucG9vbGluZ0Z1bmN0aW9uPWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIEooaSksUShyKSx0aSh0LGUsbixyLGksXCJtYXhcIil9LGUuY2xhc3NOYW1lPVwiTWF4UG9vbGluZzJEXCIsZX0oaWkpO3IudGQucmVnaXN0ZXJDbGFzcyhhaSk7dmFyIG9pPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUucG9vbGluZ0Z1bmN0aW9uPWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIEooaSksUShyKSx0aSh0LGUsbixyLGksXCJhdmdcIil9LGUuY2xhc3NOYW1lPVwiQXZlcmFnZVBvb2xpbmcyRFwiLGV9KGlpKTtyLnRkLnJlZ2lzdGVyQ2xhc3Mob2kpO3ZhciBzaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLmlucHV0U3BlYz1bbmV3IGFlKHtuZGltOjN9KV0sbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm5bdFswXSx0WzJdXX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3Rocm93IG5ldyBffSxlfShsZSksdWk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPVp0KHQpO3JldHVybiBPYmplY3Qoci5xYykoZSwxKX0pfSxlLmNsYXNzTmFtZT1cIkdsb2JhbEF2ZXJhZ2VQb29saW5nMURcIixlfShzaSk7ci50ZC5yZWdpc3RlckNsYXNzKHVpKTt2YXIgY2k9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPVp0KHQpO3JldHVybiBPYmplY3Qoci5tYykoZSwxKX0pfSxlLmNsYXNzTmFtZT1cIkdsb2JhbE1heFBvb2xpbmcxRFwiLGV9KHNpKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoY2kpO3ZhciBsaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLmRhdGFGb3JtYXQ9bnVsbD09ZS5kYXRhRm9ybWF0P1wiY2hhbm5lbHNMYXN0XCI6ZS5kYXRhRm9ybWF0LEoobi5kYXRhRm9ybWF0KSxuLmlucHV0U3BlYz1bbmV3IGFlKHtuZGltOjR9KV0sbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXtyZXR1cm4gdD10LFwiY2hhbm5lbHNMYXN0XCI9PT10aGlzLmRhdGFGb3JtYXQ/W3RbMF0sdFszXV06W3RbMF0sdFsxXV19LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt0aHJvdyBuZXcgX30sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9e2RhdGFGb3JtYXQ6dGhpcy5kYXRhRm9ybWF0fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZX0obGUpLGZpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gbnVsbCE9PXQmJnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBlPVp0KHQpO3JldHVyblwiY2hhbm5lbHNMYXN0XCI9PT1uLmRhdGFGb3JtYXQ/T2JqZWN0KHIucWMpKGUsWzEsMl0pOk9iamVjdChyLnFjKShlLFsyLDNdKX0pfSxlLmNsYXNzTmFtZT1cIkdsb2JhbEF2ZXJhZ2VQb29saW5nMkRcIixlfShsaSk7ci50ZC5yZWdpc3RlckNsYXNzKGZpKTt2YXIgaGk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIGU9WnQodCk7cmV0dXJuXCJjaGFubmVsc0xhc3RcIj09PW4uZGF0YUZvcm1hdD9PYmplY3Qoci5tYykoZSxbMSwyXSk6T2JqZWN0KHIubWMpKGUsWzIsM10pfSl9LGUuY2xhc3NOYW1lPVwiR2xvYmFsTWF4UG9vbGluZzJEXCIsZX0obGkpO2Z1bmN0aW9uIHBpKHQsZSxuLHIpe2lmKEFycmF5LmlzQXJyYXkodCkpe2lmKG51bGwhPWV8fG51bGwhPW4pdGhyb3cgbmV3IHcoXCJXaGVuIGlucHV0cyBpcyBhbiBhcnJheSwgbmVpdGhlciBpbml0aWFsU3RhdGUgb3IgY29uc3RhbnRzIHNob3VsZCBiZSBwcm92aWRlZFwiKTtudWxsIT1yJiYobj10LnNsaWNlKHQubGVuZ3RoLXIsdC5sZW5ndGgpLHQ9dC5zbGljZSgwLHQubGVuZ3RoLXIpKSx0Lmxlbmd0aD4xJiYoZT10LnNsaWNlKDEsdC5sZW5ndGgpKSx0PXRbMF19ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbnVsbD09dHx8QXJyYXkuaXNBcnJheSh0KT90Olt0XX1yZXR1cm57aW5wdXRzOnQsaW5pdGlhbFN0YXRlOmU9aShlKSxjb25zdGFudHM6bj1pKG4pfX1mdW5jdGlvbiBkaSh0LGUsbixpLGEsbyxzLHUpe3JldHVybiB2b2lkIDA9PT1pJiYoaT0hMSksdm9pZCAwPT09cyYmKHM9ITEpLHZvaWQgMD09PXUmJih1PSExKSxPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgYz1lLnNoYXBlLmxlbmd0aDtpZihjPDMpdGhyb3cgbmV3IHcoXCJJbnB1dCBzaG91bGQgYmUgYXQgbGVhc3QgM0QsIGJ1dCBpcyBcIitjK1wiRC5cIik7dmFyIGw9WzEsMF0uY29uY2F0KHB0KDIsYykpO2lmKGU9T2JqZWN0KHIubWUpKGUsbCksbnVsbCE9byl0aHJvdyBuZXcgXyhcIlRoZSBybm4oKSBmdW5jdG9pbiBvZiB0aGUgZGVlcGxlYXJuLmpzIGJhY2tlbmQgZG9lcyBub3Qgc3VwcG9ydCBjb25zdGFudHMgeWV0LlwiKTtzJiZjb25zb2xlLndhcm4oXCJCYWNrZW5kIHJubigpOiB0aGUgdW5yb2xsID0gdHJ1ZSBvcHRpb24gaXMgbm90IGFwcGxpY2FibGUgdG8gdGhlIGltcGVyYXRpdmUgZGVlcGxlYXJuLmpzIGJhY2tlbmQuXCIpLG51bGwhPWEmJigoYT1hLmFzVHlwZShcImJvb2xcIikuYXNUeXBlKFwiZmxvYXQzMlwiKSkucmFuaz09PWMtMSYmKGE9T2JqZWN0KHIudmIpKGEsLTEpKSxhPU9iamVjdChyLm1lKShhLGwpKSxpJiYoZT1PYmplY3Qoci5oZCkoZSwwKSxudWxsIT1hJiYoYT1PYmplY3Qoci5oZCkoYSwwKSkpO3ZhciBmLGgscD1bXSxkPW4sbT1lLnNoYXBlWzBdLGc9T2JqZWN0KHIucGUpKGUpO251bGwhPWEmJihoPU9iamVjdChyLnBlKShhKSk7Zm9yKHZhciB5LHY9ZnVuY3Rpb24oZSl7dmFyIG49Z1tlXSxpPU9iamVjdChyLmdlKShmdW5jdGlvbigpe3JldHVybiB0KG4sZCl9KTtpZihudWxsPT1hKWY9aVswXSxkPWlbMV07ZWxzZXt2YXIgbz1PYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgdD1oW2VdLG49T2JqZWN0KHIuS2MpKHQpLnN1Yih0KTtyZXR1cm57b3V0cHV0OmlbMF0ubXVsKHQpLmFkZFN0cmljdChkWzBdLm11bChuKSksbmV3U3RhdGVzOmQubWFwKGZ1bmN0aW9uKGUscil7cmV0dXJuIGlbMV1bcl0ubXVsKHQpLmFkZFN0cmljdChlLm11bChuKSl9KX19KTtmPW8ub3V0cHV0LGQ9by5uZXdTdGF0ZXN9dSYmcC5wdXNoKGYpfSxiPTA7YjxtOysrYil2KGIpO3JldHVybiB1JiYoeT1PYmplY3Qoci5RZCkocCwxKSksW2YseSxkXX0pfXIudGQucmVnaXN0ZXJDbGFzcyhoaSk7dmFyIG1pPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG4scj10LmNhbGwodGhpcyxlKXx8dGhpcztpZihudWxsPT1lLmNlbGwpdGhyb3cgbmV3IHcoXCJjZWxsIHByb3BlcnR5IGlzIG1pc3NpbmcgZm9yIHRoZSBjb25zdHJ1Y3RvciBvZiBSTk4uXCIpO2lmKG51bGw9PShuPUFycmF5LmlzQXJyYXkoZS5jZWxsKT9uZXcgRWkoe2NlbGxzOmUuY2VsbH0pOmUuY2VsbCkuc3RhdGVTaXplKXRocm93IG5ldyB3KFwiVGhlIFJOTiBjZWxsIHNob3VsZCBoYXZlIGFuIGF0dHJpYnV0ZSBgc3RhdGVTaXplYCAodHVwbGUgb2YgaW50ZWdlcnMsIG9uZSBpbnRlZ2VyIHBlciBSTk4gc3RhdGUpLlwiKTtyZXR1cm4gci5jZWxsPW4sci5yZXR1cm5TZXF1ZW5jZXM9bnVsbCE9ZS5yZXR1cm5TZXF1ZW5jZXMmJmUucmV0dXJuU2VxdWVuY2VzLHIucmV0dXJuU3RhdGU9bnVsbCE9ZS5yZXR1cm5TdGF0ZSYmZS5yZXR1cm5TdGF0ZSxyLmdvQmFja3dhcmRzPW51bGwhPWUuZ29CYWNrd2FyZHMmJmUuZ29CYWNrd2FyZHMsci5fc3RhdGVmdWw9bnVsbCE9ZS5zdGF0ZWZ1bCYmZS5zdGF0ZWZ1bCxyLnVucm9sbD1udWxsIT1lLnVucm9sbCYmZS51bnJvbGwsci5zdXBwb3J0c01hc2tpbmc9ITAsci5pbnB1dFNwZWM9W25ldyBhZSh7bmRpbTozfSldLHIuc3RhdGVTcGVjPW51bGwsci5zdGF0ZXNfPW51bGwsci5udW1Db25zdGFudHM9bnVsbCxyLmtlcHRTdGF0ZXM9W10scn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmdldFN0YXRlcz1mdW5jdGlvbigpe3JldHVybiBudWxsPT10aGlzLnN0YXRlc18/cHQoMCxBcnJheS5pc0FycmF5KHRoaXMuY2VsbC5zdGF0ZVNpemUpP3RoaXMuY2VsbC5zdGF0ZVNpemUubGVuZ3RoOjEpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0pOnRoaXMuc3RhdGVzX30sZS5wcm90b3R5cGUuc2V0U3RhdGVzPWZ1bmN0aW9uKHQpe3RoaXMuc3RhdGVzXz10fSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7WXQodCkmJih0PXRbMF0pLHQ9dDt2YXIgZT10aGlzLmNlbGwuc3RhdGVTaXplO0FycmF5LmlzQXJyYXkoZSl8fChlPVtlXSk7dmFyIG4scj1lWzBdO2lmKG49dGhpcy5yZXR1cm5TZXF1ZW5jZXM/W3RbMF0sdFsxXSxyXTpbdFswXSxyXSx0aGlzLnJldHVyblN0YXRlKXtmb3IodmFyIGk9W10sYT0wLG89ZTthPG8ubGVuZ3RoO2ErKyl7dmFyIHM9b1thXTtpLnB1c2goW3RbMF0sc10pfXJldHVybltuXS5jb25jYXQoaSl9cmV0dXJuIG59LGUucHJvdG90eXBlLmNvbXB1dGVNYXNrPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7QXJyYXkuaXNBcnJheShlKSYmKGU9ZVswXSk7dmFyIHQ9bi5yZXR1cm5TZXF1ZW5jZXM/ZTpudWxsO2lmKG4ucmV0dXJuU3RhdGUpe3ZhciByPW4uc3RhdGVzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0pO3JldHVyblt0XS5jb25jYXQocil9cmV0dXJuIHR9KX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwic3RhdGVzXCIse2dldDpmdW5jdGlvbigpe2lmKG51bGw9PXRoaXMuc3RhdGVzXyl7Zm9yKHZhciB0PUFycmF5LmlzQXJyYXkodGhpcy5jZWxsLnN0YXRlU2l6ZSk/dGhpcy5jZWxsLnN0YXRlU2l6ZS5sZW5ndGg6MSxlPVtdLG49MDtuPHQ7KytuKWUucHVzaChudWxsKTtyZXR1cm4gZX1yZXR1cm4gdGhpcy5zdGF0ZXNffSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5zdGF0ZXNfPXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7aWYobnVsbCE9dGhpcy5udW1Db25zdGFudHMpdGhyb3cgbmV3IF8oXCJDb25zdGFudHMgc3VwcG9ydCBpcyBub3QgaW1wbGVtZW50ZWQgaW4gUk5OIHlldC5cIik7WXQodCkmJih0PXRbMF0pLHQ9dDt2YXIgZT10aGlzLnN0YXRlZnVsP3RbMF06bnVsbCxuPXRbdC5sZW5ndGgtMV07dGhpcy5pbnB1dFNwZWNbMF09bmV3IGFlKHtzaGFwZTpbZSxudWxsLG5dfSk7dmFyIGksYT1bdFswXV0uY29uY2F0KHQuc2xpY2UoMikpO2lmKHRoaXMuY2VsbC5idWlsZChhKSxpPUFycmF5LmlzQXJyYXkodGhpcy5jZWxsLnN0YXRlU2l6ZSk/dGhpcy5jZWxsLnN0YXRlU2l6ZTpbdGhpcy5jZWxsLnN0YXRlU2l6ZV0sbnVsbCE9dGhpcy5zdGF0ZVNwZWMpe2lmKCFyLnFlLmFycmF5c0VxdWFsKHRoaXMuc3RhdGVTcGVjLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5zaGFwZVt0LnNoYXBlLmxlbmd0aC0xXX0pLGkpKXRocm93IG5ldyB3KFwiQW4gaW5pdGlhbFN0YXRlIHdhcyBwYXNzZWQgdGhhdCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIGNlbGwuc3RhdGVTaXplLiBSZWNlaXZlZCBzdGF0ZVNwZWM9XCIrdGhpcy5zdGF0ZVNwZWMrXCI7IEhvd2V2ZXIgY2VsbC5zdGF0ZVNpemUgaXMgXCIrdGhpcy5jZWxsLnN0YXRlU2l6ZSl9ZWxzZSB0aGlzLnN0YXRlU3BlYz1pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGFlKHtzaGFwZTpbbnVsbCx0XX0pfSk7dGhpcy5zdGF0ZWZ1bCYmdGhpcy5yZXNldFN0YXRlcygpfSxlLnByb3RvdHlwZS5yZXNldFN0YXRlcz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dm9pZCAwPT09ZSYmKGU9ITEpLE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKCFuLnN0YXRlZnVsKXRocm93IG5ldyB2KFwiQ2Fubm90IGNhbGwgcmVzZXRTdGF0ZXMoKSBvbiBhbiBSTk4gTGF5ZXIgdGhhdCBpcyBub3Qgc3RhdGVmdWwuXCIpO3ZhciBpPW4uaW5wdXRTcGVjWzBdLnNoYXBlWzBdO2lmKG51bGw9PWkpdGhyb3cgbmV3IHcoXCJJZiBhbiBSTk4gaXMgc3RhdGVmdWwsIGl0IG5lZWRzIHRvIGtub3cgaXRzIGJhdGNoIHNpemUuIFNwZWNpZnkgdGhlIGJhdGNoIHNpemUgb2YgeW91ciBpbnB1dCB0ZW5zb3JzOiBcXG4tIElmIHVzaW5nIGEgU2VxdWVudGlhbCBtb2RlbCwgc3BlY2lmeSB0aGUgYmF0Y2ggc2l6ZSBieSBwYXNzaW5nIGEgYGJhdGNoSW5wdXRTaGFwZWAgb3B0aW9uIHRvIHlvdXIgZmlyc3QgbGF5ZXIuXFxuLSBJZiB1c2luZyB0aGUgZnVuY3Rpb25hbCBBUEksIHNwZWNpZnkgdGhlIGJhdGNoIHNpemUgYnkgcGFzc2luZyBhIGBiYXRjaFNoYXBlYCBvcHRpb24gdG8geW91ciBJbnB1dCBsYXllci5cIik7aWYobnVsbD09bi5zdGF0ZXNfKUFycmF5LmlzQXJyYXkobi5jZWxsLnN0YXRlU2l6ZSk/bi5zdGF0ZXNfPW4uY2VsbC5zdGF0ZVNpemUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci56ZSkoW2ksdF0pfSk6bi5zdGF0ZXNfPVtPYmplY3Qoci56ZSkoW2ksbi5jZWxsLnN0YXRlU2l6ZV0pXTtlbHNlIGlmKG51bGw9PXQpT2JqZWN0KHIuamIpKG4uc3RhdGVzXyksbnVsbCE9bi5rZXB0U3RhdGVzJiYoT2JqZWN0KHIuamIpKG4ua2VwdFN0YXRlcyksbi5rZXB0U3RhdGVzPVtdKSxBcnJheS5pc0FycmF5KG4uY2VsbC5zdGF0ZVNpemUpP24uc3RhdGVzXz1uLmNlbGwuc3RhdGVTaXplLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KHIuemUpKFtpLHRdKX0pOm4uc3RhdGVzX1swXT1PYmplY3Qoci56ZSkoW2ksbi5jZWxsLnN0YXRlU2l6ZV0pO2Vsc2V7aWYoQXJyYXkuaXNBcnJheSh0KXx8KHQ9W3RdKSx0Lmxlbmd0aCE9PW4uc3RhdGVzXy5sZW5ndGgpdGhyb3cgbmV3IHcoXCJMYXllciBcIituLm5hbWUrXCIgZXhwZWN0cyBcIituLnN0YXRlc18ubGVuZ3RoK1wiIHN0YXRlKHMpLCBidXQgaXQgcmVjZWl2ZWQgXCIrdC5sZW5ndGgrXCIgc3RhdGUgdmFsdWUocykuIElucHV0IHJlY2VpdmVkOiBcIit0KTshMD09PWU/bi5rZXB0U3RhdGVzLnB1c2gobi5zdGF0ZXNfLnNsaWNlKCkpOk9iamVjdChyLmpiKShuLnN0YXRlc18pO2Zvcih2YXIgYT0wO2E8bi5zdGF0ZXNfLmxlbmd0aDsrK2Epe3ZhciBvPXRbYV0scz1BcnJheS5pc0FycmF5KG4uY2VsbC5zdGF0ZVNpemUpP24uY2VsbC5zdGF0ZVNpemVbYV06bi5jZWxsLnN0YXRlU2l6ZSx1PVtpLHNdO2lmKCFyLnFlLmFycmF5c0VxdWFsKG8uc2hhcGUsdSkpdGhyb3cgbmV3IHcoXCJTdGF0ZSBcIithK1wiIGlzIGluY29tcGF0aWJsZSB3aXRoIGxheWVyIFwiK24ubmFtZStcIjogZXhwZWN0ZWQgc2hhcGU9XCIrdStcIiwgcmVjZWl2ZWQgc2hhcGU9XCIrby5zaGFwZSk7bi5zdGF0ZXNfW2FdPW99fW4uc3RhdGVzXy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5SYikodCl9KX0pfSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbihlLG4pe3ZhciByPW51bGw9PW4/bnVsbDpuLmluaXRpYWxTdGF0ZSxpPW51bGw9PW4/bnVsbDpuLmNvbnN0YW50cztudWxsPT1uJiYobj17fSk7dmFyIGE9cGkoZSxyLGksdGhpcy5udW1Db25zdGFudHMpO2U9YS5pbnB1dHMscj1hLmluaXRpYWxTdGF0ZSxpPWEuY29uc3RhbnRzO3ZhciBvPVtdLHM9W107aWYobnVsbCE9cil7bi5pbml0aWFsU3RhdGU9cixvPW8uY29uY2F0KHIpLHRoaXMuc3RhdGVTcGVjPVtdO2Zvcih2YXIgdT0wLGM9cjt1PGMubGVuZ3RoO3UrKyl7dmFyIGw9Y1t1XTt0aGlzLnN0YXRlU3BlYy5wdXNoKG5ldyBhZSh7c2hhcGU6bC5zaGFwZX0pKX1zPXMuY29uY2F0KHRoaXMuc3RhdGVTcGVjKX1pZihudWxsIT1pJiYobi5jb25zdGFudHM9aSxvPW8uY29uY2F0KGkpLHRoaXMubnVtQ29uc3RhbnRzPWkubGVuZ3RoKSxvWzBdaW5zdGFuY2VvZiBvZSl7dmFyIGY9W2VdLmNvbmNhdChvKSxoPXRoaXMuaW5wdXRTcGVjLmNvbmNhdChzKSxwPXRoaXMuaW5wdXRTcGVjO3RoaXMuaW5wdXRTcGVjPWg7dmFyIGQ9dC5wcm90b3R5cGUuYXBwbHkuY2FsbCh0aGlzLGYsbik7cmV0dXJuIHRoaXMuaW5wdXRTcGVjPXAsZH1yZXR1cm4gdC5wcm90b3R5cGUuYXBwbHkuY2FsbCh0aGlzLGUsbil9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXt2YXIgcj1udWxsPT1lP251bGw6ZS5tYXNrLGk9bnVsbD09ZT9udWxsOmUudHJhaW5pbmcsYT1udWxsPT1lP251bGw6ZS5pbml0aWFsU3RhdGU7dD1adCh0KSxudWxsPT1hJiYoYT1uLnN0YXRlZnVsP24uc3RhdGVzXzpuLmdldEluaXRpYWxTdGF0ZSh0KSk7dmFyIG89QXJyYXkuaXNBcnJheShuLmNlbGwuc3RhdGVTaXplKT9uLmNlbGwuc3RhdGVTaXplLmxlbmd0aDoxO2lmKGEubGVuZ3RoIT09byl0aHJvdyBuZXcgdyhcIlJOTiBMYXllciBoYXMgXCIrbytcIiBzdGF0ZShzKSBidXQgd2FzIHBhc3NlZCBcIithLmxlbmd0aCtcIiBpbml0aWFsIHN0YXRlKHMpLlwiKTtuLnVucm9sbCYmY29uc29sZS53YXJuKFwiSWdub3JpbmcgdW5yb2xsID0gdHJ1ZSBmb3IgUk5OIGxheWVyLCBkdWUgdG8gaW1wZXJhdGl2ZSBiYWNrZW5kLlwiKTt2YXIgcz17dHJhaW5pbmc6aX0sdT1kaShmdW5jdGlvbih0LGUpe3ZhciByPW4uY2VsbC5jYWxsKFt0XS5jb25jYXQoZSkscyk7cmV0dXJuW3JbMF0sci5zbGljZSgxKV19LHQsYSxuLmdvQmFja3dhcmRzLHIsbnVsbCxuLnVucm9sbCxuLnJldHVyblNlcXVlbmNlcyksYz11WzBdLGw9dVsxXSxmPXVbMl07bi5zdGF0ZWZ1bCYmbi5yZXNldFN0YXRlcyhmLGkpO3ZhciBoPW4ucmV0dXJuU2VxdWVuY2VzP2w6YztyZXR1cm4gbi5yZXR1cm5TdGF0ZT9baF0uY29uY2F0KGYpOmh9KX0sZS5wcm90b3R5cGUuZ2V0SW5pdGlhbFN0YXRlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe3ZhciBuPU9iamVjdChyLnplKSh0LnNoYXBlKTtyZXR1cm4gbj1tdChuPU9iamVjdChyLlZkKShuLFsxLDJdKSksQXJyYXkuaXNBcnJheShlLmNlbGwuc3RhdGVTaXplKT9lLmNlbGwuc3RhdGVTaXplLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdD4xP190KG4sWzEsdF0pOm59KTplLmNlbGwuc3RhdGVTaXplPjE/W190KG4sWzEsZS5jZWxsLnN0YXRlU2l6ZV0pXTpbbl19KX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidHJhaW5hYmxlV2VpZ2h0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFpbmFibGU/dGhpcy5jZWxsLnRyYWluYWJsZVdlaWdodHM6W119LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwibm9uVHJhaW5hYmxlV2VpZ2h0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFpbmFibGU/dGhpcy5jZWxsLm5vblRyYWluYWJsZVdlaWdodHM6dGhpcy5jZWxsLndlaWdodHN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuc2V0RmFzdFdlaWdodEluaXREdXJpbmdCdWlsZD1mdW5jdGlvbihlKXt0LnByb3RvdHlwZS5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkLmNhbGwodGhpcyxlKSxudWxsIT10aGlzLmNlbGwmJnRoaXMuY2VsbC5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkKGUpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17cmV0dXJuU2VxdWVuY2VzOnRoaXMucmV0dXJuU2VxdWVuY2VzLHJldHVyblN0YXRlOnRoaXMucmV0dXJuU3RhdGUsZ29CYWNrd2FyZHM6dGhpcy5nb0JhY2t3YXJkcyxzdGF0ZWZ1bDp0aGlzLnN0YXRlZnVsLHVucm9sbDp0aGlzLnVucm9sbH07bnVsbCE9dGhpcy5udW1Db25zdGFudHMmJihlLm51bUNvbnN0YW50cz10aGlzLm51bUNvbnN0YW50cyk7dmFyIG49dGhpcy5jZWxsLmdldENvbmZpZygpO2UuY2VsbD17Y2xhc3NOYW1lOnRoaXMuY2VsbC5nZXRDbGFzc05hbWUoKSxjb25maWc6bn07dmFyIHI9dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxyKSxlfSxlLmNsYXNzTmFtZT1cIlJOTlwiLGV9KGxlKTtyLnRkLnJlZ2lzdGVyQ2xhc3MobWkpO3ZhciBnaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuIG51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpc31yZXR1cm4gYShlLHQpLGV9KGxlKSx5aT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLkRFRkFVTFRfQUNUSVZBVElPTj1cInRhbmhcIixuLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSPVwiZ2xvcm90Tm9ybWFsXCIsbi5ERUZBVUxUX1JFQ1VSUkVOVF9JTklUSUFMSVpFUj1cIm9ydGhvZ29uYWxcIixuLkRFRkFVTFRfQklBU19JTklUSUFMSVpFUj1cInplcm9zXCIsbi51bml0cz1lLnVuaXRzLG4uYWN0aXZhdGlvbj1zcihudWxsPT1lLmFjdGl2YXRpb24/bi5ERUZBVUxUX0FDVElWQVRJT046ZS5hY3RpdmF0aW9uKSxuLnVzZUJpYXM9bnVsbD09ZS51c2VCaWFzfHxlLnVzZUJpYXMsbi5rZXJuZWxJbml0aWFsaXplcj1HdChlLmtlcm5lbEluaXRpYWxpemVyfHxuLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSKSxuLnJlY3VycmVudEluaXRpYWxpemVyPUd0KGUucmVjdXJyZW50SW5pdGlhbGl6ZXJ8fG4uREVGQVVMVF9SRUNVUlJFTlRfSU5JVElBTElaRVIpLG4uYmlhc0luaXRpYWxpemVyPUd0KGUuYmlhc0luaXRpYWxpemVyfHxuLkRFRkFVTFRfQklBU19JTklUSUFMSVpFUiksbi5rZXJuZWxSZWd1bGFyaXplcj1wcihlLmtlcm5lbFJlZ3VsYXJpemVyKSxuLnJlY3VycmVudFJlZ3VsYXJpemVyPXByKGUucmVjdXJyZW50UmVndWxhcml6ZXIpLG4uYmlhc1JlZ3VsYXJpemVyPXByKGUuYmlhc1JlZ3VsYXJpemVyKSxuLmtlcm5lbENvbnN0cmFpbnQ9SyhlLmtlcm5lbENvbnN0cmFpbnQpLG4ucmVjdXJyZW50Q29uc3RyYWludD1LKGUucmVjdXJyZW50Q29uc3RyYWludCksbi5iaWFzQ29uc3RyYWludD1LKGUuYmlhc0NvbnN0cmFpbnQpLG4uZHJvcG91dD1mdChbMSxodChbMCxudWxsPT1lLmRyb3BvdXQ/MDplLmRyb3BvdXRdKV0pLG4ucmVjdXJyZW50RHJvcG91dD1mdChbMSxodChbMCxudWxsPT1lLnJlY3VycmVudERyb3BvdXQ/MDplLnJlY3VycmVudERyb3BvdXRdKV0pLG4uc3RhdGVTaXplPW4udW5pdHMsbi5kcm9wb3V0TWFzaz1udWxsLG4ucmVjdXJyZW50RHJvcG91dE1hc2s9bnVsbCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7dD1RdCh0KSx0aGlzLmtlcm5lbD10aGlzLmFkZFdlaWdodChcImtlcm5lbFwiLFt0W3QubGVuZ3RoLTFdLHRoaXMudW5pdHNdLG51bGwsdGhpcy5rZXJuZWxJbml0aWFsaXplcix0aGlzLmtlcm5lbFJlZ3VsYXJpemVyLCEwLHRoaXMua2VybmVsQ29uc3RyYWludCksdGhpcy5yZWN1cnJlbnRLZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJyZWN1cnJlbnRfa2VybmVsXCIsW3RoaXMudW5pdHMsdGhpcy51bml0c10sbnVsbCx0aGlzLnJlY3VycmVudEluaXRpYWxpemVyLHRoaXMucmVjdXJyZW50UmVndWxhcml6ZXIsITAsdGhpcy5yZWN1cnJlbnRDb25zdHJhaW50KSx0aGlzLnVzZUJpYXM/dGhpcy5iaWFzPXRoaXMuYWRkV2VpZ2h0KFwiYmlhc1wiLFt0aGlzLnVuaXRzXSxudWxsLHRoaXMuYmlhc0luaXRpYWxpemVyLHRoaXMuYmlhc1JlZ3VsYXJpemVyLCEwLHRoaXMuYmlhc0NvbnN0cmFpbnQpOnRoaXMuYmlhcz1udWxsLHRoaXMuYnVpbHQ9ITB9LGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBPYmplY3Qoci5nZSkoZnVuY3Rpb24oKXtpZigyIT09KHQ9dCkubGVuZ3RoKXRocm93IG5ldyB3KFwiU2ltcGxlUk5OQ2VsbCBleHBlY3RzIDIgaW5wdXQgVGVuc29ycywgZ290IFwiK3QubGVuZ3RoK1wiLlwiKTt2YXIgaT10WzFdO3Q9dFswXTt2YXIgYSxvPW51bGwhPWUudHJhaW5pbmcmJmUudHJhaW5pbmc7MDxuLmRyb3BvdXQmJm4uZHJvcG91dDwxJiZudWxsPT1uLmRyb3BvdXRNYXNrJiYobi5kcm9wb3V0TWFzaz1TaShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5LYykodCl9LG4uZHJvcG91dCxvKSksMDxuLnJlY3VycmVudERyb3BvdXQmJm4ucmVjdXJyZW50RHJvcG91dDwxJiZudWxsPT1uLnJlY3VycmVudERyb3BvdXRNYXNrJiYobi5yZWN1cnJlbnREcm9wb3V0TWFzaz1TaShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5LYykoaSl9LG4ucmVjdXJyZW50RHJvcG91dCxvKSk7dmFyIHM9bi5kcm9wb3V0TWFzayx1PW4ucmVjdXJyZW50RHJvcG91dE1hc2s7YT1FdChudWxsIT1zP09iamVjdChyLnpjKSh0LHMpOnQsbi5rZXJuZWwucmVhZCgpKSxudWxsIT1uLmJpYXMmJihhPUl0KGEsbi5iaWFzLnJlYWQoKSkpLG51bGwhPXUmJihpPU9iamVjdChyLnpjKShpLHUpKTt2YXIgYz1PYmplY3Qoci51KShhLEV0KGksbi5yZWN1cnJlbnRLZXJuZWwucmVhZCgpKSk7cmV0dXJuIG51bGwhPW4uYWN0aXZhdGlvbiYmKGM9bi5hY3RpdmF0aW9uLmFwcGx5KGMpKSxbYyxjXX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbiksdXNlQmlhczp0aGlzLnVzZUJpYXMsa2VybmVsSW5pdGlhbGl6ZXI6S3QodGhpcy5rZXJuZWxJbml0aWFsaXplcikscmVjdXJyZW50SW5pdGlhbGl6ZXI6S3QodGhpcy5yZWN1cnJlbnRJbml0aWFsaXplciksYmlhc0luaXRpYWxpemVyOkt0KHRoaXMuYmlhc0luaXRpYWxpemVyKSxrZXJuZWxSZWd1bGFyaXplcjpmcih0aGlzLmtlcm5lbFJlZ3VsYXJpemVyKSxyZWN1cnJlbnRSZWd1bGFyaXplcjpmcih0aGlzLnJlY3VycmVudFJlZ3VsYXJpemVyKSxiaWFzUmVndWxhcml6ZXI6ZnIodGhpcy5iaWFzUmVndWxhcml6ZXIpLGFjdGl2aXR5UmVndWxhcml6ZXI6ZnIodGhpcy5hY3Rpdml0eVJlZ3VsYXJpemVyKSxrZXJuZWxDb25zdHJhaW50OiQodGhpcy5rZXJuZWxDb25zdHJhaW50KSxyZWN1cnJlbnRDb25zdHJhaW50OiQodGhpcy5yZWN1cnJlbnRDb25zdHJhaW50KSxiaWFzQ29uc3RyYWludDokKHRoaXMuYmlhc0NvbnN0cmFpbnQpLGRyb3BvdXQ6dGhpcy5kcm9wb3V0LHJlY3VycmVudERyb3BvdXQ6dGhpcy5yZWN1cnJlbnREcm9wb3V0fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJTaW1wbGVSTk5DZWxsXCIsZX0oZ2kpO3IudGQucmVnaXN0ZXJDbGFzcyh5aSk7dmFyIHZpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIGUuY2VsbD1uZXcgeWkoZSksdC5jYWxsKHRoaXMsZSl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKGUsbil7dmFyIGk9dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7bnVsbCE9aS5jZWxsLmRyb3BvdXRNYXNrJiYoT2JqZWN0KHIuamIpKGkuY2VsbC5kcm9wb3V0TWFzayksaS5jZWxsLmRyb3BvdXRNYXNrPW51bGwpLG51bGwhPWkuY2VsbC5yZWN1cnJlbnREcm9wb3V0TWFzayYmKE9iamVjdChyLmpiKShpLmNlbGwucmVjdXJyZW50RHJvcG91dE1hc2spLGkuY2VsbC5yZWN1cnJlbnREcm9wb3V0TWFzaz1udWxsKTt2YXIgYT1udWxsPT1uP251bGw6bi5tYXNrLG89bnVsbD09bj9udWxsOm4udHJhaW5pbmcscz1udWxsPT1uP251bGw6bi5pbml0aWFsU3RhdGU7cmV0dXJuIHQucHJvdG90eXBlLmNhbGwuY2FsbChpLGUse21hc2s6YSx0cmFpbmluZzpvLGluaXRpYWxTdGF0ZTpzfSl9KX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidW5pdHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC51bml0c30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJhY3RpdmF0aW9uXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuYWN0aXZhdGlvbn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ1c2VCaWFzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwudXNlQmlhc30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJrZXJuZWxJbml0aWFsaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmtlcm5lbEluaXRpYWxpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInJlY3VycmVudEluaXRpYWxpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwucmVjdXJyZW50SW5pdGlhbGl6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYmlhc0luaXRpYWxpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuYmlhc0luaXRpYWxpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImtlcm5lbFJlZ3VsYXJpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwua2VybmVsUmVndWxhcml6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50UmVndWxhcml6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5yZWN1cnJlbnRSZWd1bGFyaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJiaWFzUmVndWxhcml6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5iaWFzUmVndWxhcml6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwia2VybmVsQ29uc3RyYWludFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmtlcm5lbENvbnN0cmFpbnR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50Q29uc3RyYWludFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudENvbnN0cmFpbnR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYmlhc0NvbnN0cmFpbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5iaWFzQ29uc3RyYWludH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJkcm9wb3V0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuZHJvcG91dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJyZWN1cnJlbnREcm9wb3V0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwucmVjdXJyZW50RHJvcG91dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbiksdXNlQmlhczp0aGlzLnVzZUJpYXMsa2VybmVsSW5pdGlhbGl6ZXI6S3QodGhpcy5rZXJuZWxJbml0aWFsaXplcikscmVjdXJyZW50SW5pdGlhbGl6ZXI6S3QodGhpcy5yZWN1cnJlbnRJbml0aWFsaXplciksYmlhc0luaXRpYWxpemVyOkt0KHRoaXMuYmlhc0luaXRpYWxpemVyKSxrZXJuZWxSZWd1bGFyaXplcjpmcih0aGlzLmtlcm5lbFJlZ3VsYXJpemVyKSxyZWN1cnJlbnRSZWd1bGFyaXplcjpmcih0aGlzLnJlY3VycmVudFJlZ3VsYXJpemVyKSxiaWFzUmVndWxhcml6ZXI6ZnIodGhpcy5iaWFzUmVndWxhcml6ZXIpLGFjdGl2aXR5UmVndWxhcml6ZXI6ZnIodGhpcy5hY3Rpdml0eVJlZ3VsYXJpemVyKSxrZXJuZWxDb25zdHJhaW50OiQodGhpcy5rZXJuZWxDb25zdHJhaW50KSxyZWN1cnJlbnRDb25zdHJhaW50OiQodGhpcy5yZWN1cnJlbnRDb25zdHJhaW50KSxiaWFzQ29uc3RyYWludDokKHRoaXMuYmlhc0NvbnN0cmFpbnQpLGRyb3BvdXQ6dGhpcy5kcm9wb3V0LHJlY3VycmVudERyb3BvdXQ6dGhpcy5yZWN1cnJlbnREcm9wb3V0fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBkZWxldGUgbi5jZWxsLE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIlNpbXBsZVJOTlwiLGV9KG1pKTtyLnRkLnJlZ2lzdGVyQ2xhc3ModmkpO3ZhciBiaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLkRFRkFVTFRfQUNUSVZBVElPTj1cInRhbmhcIixuLkRFRkFVTFRfUkVDVVJSRU5UX0FDVElWQVRJT049XCJoYXJkU2lnbW9pZFwiLG4uREVGQVVMVF9LRVJORUxfSU5JVElBTElaRVI9XCJnbG9yb3ROb3JtYWxcIixuLkRFRkFVTFRfUkVDVVJSRU5UX0lOSVRJQUxJWkVSPVwib3J0aG9nb25hbFwiLG4uREVGQVVMVF9CSUFTX0lOSVRJQUxJWkVSPVwiemVyb3NcIixuLnVuaXRzPWUudW5pdHMsbi5hY3RpdmF0aW9uPXNyKHZvaWQgMD09PWUuYWN0aXZhdGlvbj9uLkRFRkFVTFRfQUNUSVZBVElPTjplLmFjdGl2YXRpb24pLG4ucmVjdXJyZW50QWN0aXZhdGlvbj1zcih2b2lkIDA9PT1lLnJlY3VycmVudEFjdGl2YXRpb24/bi5ERUZBVUxUX1JFQ1VSUkVOVF9BQ1RJVkFUSU9OOmUucmVjdXJyZW50QWN0aXZhdGlvbiksbi51c2VCaWFzPW51bGw9PWUudXNlQmlhc3x8ZS51c2VCaWFzLG4ua2VybmVsSW5pdGlhbGl6ZXI9R3QoZS5rZXJuZWxJbml0aWFsaXplcnx8bi5ERUZBVUxUX0tFUk5FTF9JTklUSUFMSVpFUiksbi5yZWN1cnJlbnRJbml0aWFsaXplcj1HdChlLnJlY3VycmVudEluaXRpYWxpemVyfHxuLkRFRkFVTFRfUkVDVVJSRU5UX0lOSVRJQUxJWkVSKSxuLmJpYXNJbml0aWFsaXplcj1HdChlLmJpYXNJbml0aWFsaXplcnx8bi5ERUZBVUxUX0JJQVNfSU5JVElBTElaRVIpLG4ua2VybmVsUmVndWxhcml6ZXI9cHIoZS5rZXJuZWxSZWd1bGFyaXplciksbi5yZWN1cnJlbnRSZWd1bGFyaXplcj1wcihlLnJlY3VycmVudFJlZ3VsYXJpemVyKSxuLmJpYXNSZWd1bGFyaXplcj1wcihlLmJpYXNSZWd1bGFyaXplciksbi5rZXJuZWxDb25zdHJhaW50PUsoZS5rZXJuZWxDb25zdHJhaW50KSxuLnJlY3VycmVudENvbnN0cmFpbnQ9SyhlLnJlY3VycmVudENvbnN0cmFpbnQpLG4uYmlhc0NvbnN0cmFpbnQ9SyhlLmJpYXNDb25zdHJhaW50KSxuLmRyb3BvdXQ9ZnQoWzEsaHQoWzAsbnVsbD09ZS5kcm9wb3V0PzA6ZS5kcm9wb3V0XSldKSxuLnJlY3VycmVudERyb3BvdXQ9ZnQoWzEsaHQoWzAsbnVsbD09ZS5yZWN1cnJlbnREcm9wb3V0PzA6ZS5yZWN1cnJlbnREcm9wb3V0XSldKSxuLmltcGxlbWVudGF0aW9uPWUuaW1wbGVtZW50YXRpb24sbi5zdGF0ZVNpemU9bi51bml0cyxuLmRyb3BvdXRNYXNrPW51bGwsbi5yZWN1cnJlbnREcm9wb3V0TWFzaz1udWxsLG59cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5idWlsZD1mdW5jdGlvbih0KXt2YXIgZT0odD1RdCh0KSlbdC5sZW5ndGgtMV07dGhpcy5rZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJrZXJuZWxcIixbZSwzKnRoaXMudW5pdHNdLG51bGwsdGhpcy5rZXJuZWxJbml0aWFsaXplcix0aGlzLmtlcm5lbFJlZ3VsYXJpemVyLCEwLHRoaXMua2VybmVsQ29uc3RyYWludCksdGhpcy5yZWN1cnJlbnRLZXJuZWw9dGhpcy5hZGRXZWlnaHQoXCJyZWN1cnJlbnRfa2VybmVsXCIsW3RoaXMudW5pdHMsMyp0aGlzLnVuaXRzXSxudWxsLHRoaXMucmVjdXJyZW50SW5pdGlhbGl6ZXIsdGhpcy5yZWN1cnJlbnRSZWd1bGFyaXplciwhMCx0aGlzLnJlY3VycmVudENvbnN0cmFpbnQpLHRoaXMudXNlQmlhcz90aGlzLmJpYXM9dGhpcy5hZGRXZWlnaHQoXCJiaWFzXCIsWzMqdGhpcy51bml0c10sbnVsbCx0aGlzLmJpYXNJbml0aWFsaXplcix0aGlzLmJpYXNSZWd1bGFyaXplciwhMCx0aGlzLmJpYXNDb25zdHJhaW50KTp0aGlzLmJpYXM9bnVsbCx0aGlzLmJ1aWx0PSEwfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7aWYoMiE9PSh0PXQpLmxlbmd0aCl0aHJvdyBuZXcgdyhcIkdSVUNlbGwgZXhwZWN0cyAyIGlucHV0IFRlbnNvcnMgKGlucHV0cywgaCwgYyksIGdvdCBcIit0Lmxlbmd0aCtcIi5cIik7dmFyIGk9bnVsbCE9ZS50cmFpbmluZyYmZS50cmFpbmluZyxhPXRbMV07dD10WzBdLDA8bi5kcm9wb3V0JiZuLmRyb3BvdXQ8MSYmbnVsbD09bi5kcm9wb3V0TWFzayYmKG4uZHJvcG91dE1hc2s9U2koZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIuS2MpKHQpfSxuLmRyb3BvdXQsaSwzKSksMDxuLnJlY3VycmVudERyb3BvdXQmJm4ucmVjdXJyZW50RHJvcG91dDwxJiZudWxsPT1uLnJlY3VycmVudERyb3BvdXRNYXNrJiYobi5yZWN1cnJlbnREcm9wb3V0TWFzaz1TaShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5LYykoYSl9LG4ucmVjdXJyZW50RHJvcG91dCxpLDMpKTt2YXIgbyxzLHUsYz1uLmRyb3BvdXRNYXNrLGw9bi5yZWN1cnJlbnREcm9wb3V0TWFzazswPG4uZHJvcG91dCYmbi5kcm9wb3V0PDEmJih0PU9iamVjdChyLnpjKSh0LGNbMF0pKTt2YXIgZj1FdCh0LG4ua2VybmVsLnJlYWQoKSk7bi51c2VCaWFzJiYoZj1JdChmLG4uYmlhcy5yZWFkKCkpKSwwPG4ucmVjdXJyZW50RHJvcG91dCYmbi5yZWN1cnJlbnREcm9wb3V0PDEmJihhPU9iamVjdChyLnpjKShhLGxbMF0pKTt2YXIgaD1uLnJlY3VycmVudEtlcm5lbC5yZWFkKCkscD1PYmplY3Qoci5LZCkoaCxbMipuLnVuaXRzLG4udW5pdHNdLGgucmFuay0xKSxkPXBbMF0sbT1wWzFdLGc9RXQoYSxkKSx2PU9iamVjdChyLktkKShmLDMsZi5yYW5rLTEpLGI9dlswXSxfPXZbMV0seD12WzJdLEU9T2JqZWN0KHIuS2QpKGcsMixnLnJhbmstMSksUz1FWzBdLE49RVsxXTtvPW4ucmVjdXJyZW50QWN0aXZhdGlvbi5hcHBseShPYmplY3Qoci51KShiLFMpKSxzPW4ucmVjdXJyZW50QWN0aXZhdGlvbi5hcHBseShPYmplY3Qoci51KShfLE4pKTt2YXIgST1FdChPYmplY3Qoci56YykocyxhKSxtKTt1PW4uYWN0aXZhdGlvbi5hcHBseShPYmplY3Qoci51KSh4LEkpKTt2YXIgTz1PYmplY3Qoci51KShPYmplY3Qoci56YykobyxhKSxPYmplY3Qoci56YykoT2JqZWN0KHIudSkoeSgxKSxPYmplY3Qoci5EYykobykpLHUpKTtyZXR1cm5bTyxPXX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbikscmVjdXJyZW50QWN0aXZhdGlvbjphcih0aGlzLnJlY3VycmVudEFjdGl2YXRpb24pLHVzZUJpYXM6dGhpcy51c2VCaWFzLGtlcm5lbEluaXRpYWxpemVyOkt0KHRoaXMua2VybmVsSW5pdGlhbGl6ZXIpLHJlY3VycmVudEluaXRpYWxpemVyOkt0KHRoaXMucmVjdXJyZW50SW5pdGlhbGl6ZXIpLGJpYXNJbml0aWFsaXplcjpLdCh0aGlzLmJpYXNJbml0aWFsaXplciksa2VybmVsUmVndWxhcml6ZXI6ZnIodGhpcy5rZXJuZWxSZWd1bGFyaXplcikscmVjdXJyZW50UmVndWxhcml6ZXI6ZnIodGhpcy5yZWN1cnJlbnRSZWd1bGFyaXplciksYmlhc1JlZ3VsYXJpemVyOmZyKHRoaXMuYmlhc1JlZ3VsYXJpemVyKSxhY3Rpdml0eVJlZ3VsYXJpemVyOmZyKHRoaXMuYWN0aXZpdHlSZWd1bGFyaXplciksa2VybmVsQ29uc3RyYWludDokKHRoaXMua2VybmVsQ29uc3RyYWludCkscmVjdXJyZW50Q29uc3RyYWludDokKHRoaXMucmVjdXJyZW50Q29uc3RyYWludCksYmlhc0NvbnN0cmFpbnQ6JCh0aGlzLmJpYXNDb25zdHJhaW50KSxkcm9wb3V0OnRoaXMuZHJvcG91dCxyZWN1cnJlbnREcm9wb3V0OnRoaXMucmVjdXJyZW50RHJvcG91dCxpbXBsZW1lbnRhdGlvbjp0aGlzLmltcGxlbWVudGF0aW9ufSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5jbGFzc05hbWU9XCJHUlVDZWxsXCIsZX0oZ2kpO3IudGQucmVnaXN0ZXJDbGFzcyhiaSk7dmFyIHdpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIDA9PT1lLmltcGxlbWVudGF0aW9uJiZjb25zb2xlLndhcm4oXCJgaW1wbGVtZW50YXRpb249MGAgaGFzIGJlZW4gZGVwcmVjYXRlZCwgYW5kIG5vdyBkZWZhdWx0cyB0byBgaW1wbGVtZW50YXRpb249MWAuIFBsZWFzZSB1cGRhdGUgeW91ciBsYXllciBjYWxsLlwiKSxlLmNlbGw9bmV3IGJpKGUpLHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbihlLG4pe3ZhciBpPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe251bGwhPWkuY2VsbC5kcm9wb3V0TWFzayYmKE9iamVjdChyLmpiKShpLmNlbGwuZHJvcG91dE1hc2spLGkuY2VsbC5kcm9wb3V0TWFzaz1udWxsKSxudWxsIT1pLmNlbGwucmVjdXJyZW50RHJvcG91dE1hc2smJihPYmplY3Qoci5qYikoaS5jZWxsLnJlY3VycmVudERyb3BvdXRNYXNrKSxpLmNlbGwucmVjdXJyZW50RHJvcG91dE1hc2s9bnVsbCk7dmFyIGE9bnVsbD09bj9udWxsOm4ubWFzayxvPW51bGw9PW4/bnVsbDpuLnRyYWluaW5nLHM9bnVsbD09bj9udWxsOm4uaW5pdGlhbFN0YXRlO3JldHVybiB0LnByb3RvdHlwZS5jYWxsLmNhbGwoaSxlLHttYXNrOmEsdHJhaW5pbmc6byxpbml0aWFsU3RhdGU6c30pfSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInVuaXRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwudW5pdHN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYWN0aXZhdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmFjdGl2YXRpb259LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50QWN0aXZhdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudEFjdGl2YXRpb259LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidXNlQmlhc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnVzZUJpYXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwia2VybmVsSW5pdGlhbGl6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5rZXJuZWxJbml0aWFsaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJyZWN1cnJlbnRJbml0aWFsaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudEluaXRpYWxpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImJpYXNJbml0aWFsaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmJpYXNJbml0aWFsaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJrZXJuZWxSZWd1bGFyaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmtlcm5lbFJlZ3VsYXJpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInJlY3VycmVudFJlZ3VsYXJpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwucmVjdXJyZW50UmVndWxhcml6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYmlhc1JlZ3VsYXJpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuYmlhc1JlZ3VsYXJpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImtlcm5lbENvbnN0cmFpbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5rZXJuZWxDb25zdHJhaW50fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInJlY3VycmVudENvbnN0cmFpbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5yZWN1cnJlbnRDb25zdHJhaW50fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImJpYXNDb25zdHJhaW50XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuYmlhc0NvbnN0cmFpbnR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiZHJvcG91dFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmRyb3BvdXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50RHJvcG91dFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudERyb3BvdXR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiaW1wbGVtZW50YXRpb25cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5pbXBsZW1lbnRhdGlvbn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbikscmVjdXJyZW50QWN0aXZhdGlvbjphcih0aGlzLnJlY3VycmVudEFjdGl2YXRpb24pLHVzZUJpYXM6dGhpcy51c2VCaWFzLGtlcm5lbEluaXRpYWxpemVyOkt0KHRoaXMua2VybmVsSW5pdGlhbGl6ZXIpLHJlY3VycmVudEluaXRpYWxpemVyOkt0KHRoaXMucmVjdXJyZW50SW5pdGlhbGl6ZXIpLGJpYXNJbml0aWFsaXplcjpLdCh0aGlzLmJpYXNJbml0aWFsaXplciksa2VybmVsUmVndWxhcml6ZXI6ZnIodGhpcy5rZXJuZWxSZWd1bGFyaXplcikscmVjdXJyZW50UmVndWxhcml6ZXI6ZnIodGhpcy5yZWN1cnJlbnRSZWd1bGFyaXplciksYmlhc1JlZ3VsYXJpemVyOmZyKHRoaXMuYmlhc1JlZ3VsYXJpemVyKSxhY3Rpdml0eVJlZ3VsYXJpemVyOmZyKHRoaXMuYWN0aXZpdHlSZWd1bGFyaXplciksa2VybmVsQ29uc3RyYWludDokKHRoaXMua2VybmVsQ29uc3RyYWludCkscmVjdXJyZW50Q29uc3RyYWludDokKHRoaXMucmVjdXJyZW50Q29uc3RyYWludCksYmlhc0NvbnN0cmFpbnQ6JCh0aGlzLmJpYXNDb25zdHJhaW50KSxkcm9wb3V0OnRoaXMuZHJvcG91dCxyZWN1cnJlbnREcm9wb3V0OnRoaXMucmVjdXJyZW50RHJvcG91dCxpbXBsZW1lbnRhdGlvbjp0aGlzLmltcGxlbWVudGF0aW9ufSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBkZWxldGUgbi5jZWxsLE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmZyb21Db25maWc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gMD09PWUuaW1wbG1lbnRhdGlvbiYmKGUuaW1wbGVtZW50YXRpb249MSksbmV3IHQoZSl9LGUuY2xhc3NOYW1lPVwiR1JVXCIsZX0obWkpO3IudGQucmVnaXN0ZXJDbGFzcyh3aSk7dmFyIF9pPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXM7cmV0dXJuIG4uREVGQVVMVF9BQ1RJVkFUSU9OPVwidGFuaFwiLG4uREVGQVVMVF9SRUNVUlJFTlRfQUNUSVZBVElPTj1cImhhcmRTaWdtb2lkXCIsbi5ERUZBVUxUX0tFUk5FTF9JTklUSUFMSVpFUj1cImdsb3JvdE5vcm1hbFwiLG4uREVGQVVMVF9SRUNVUlJFTlRfSU5JVElBTElaRVI9XCJvcnRob2dvbmFsXCIsbi5ERUZBVUxUX0JJQVNfSU5JVElBTElaRVI9XCJ6ZXJvc1wiLG4udW5pdHM9ZS51bml0cyxuLmFjdGl2YXRpb249c3Iodm9pZCAwPT09ZS5hY3RpdmF0aW9uP24uREVGQVVMVF9BQ1RJVkFUSU9OOmUuYWN0aXZhdGlvbiksbi5yZWN1cnJlbnRBY3RpdmF0aW9uPXNyKHZvaWQgMD09PWUucmVjdXJyZW50QWN0aXZhdGlvbj9uLkRFRkFVTFRfUkVDVVJSRU5UX0FDVElWQVRJT046ZS5yZWN1cnJlbnRBY3RpdmF0aW9uKSxuLnVzZUJpYXM9bnVsbD09ZS51c2VCaWFzfHxlLnVzZUJpYXMsbi5rZXJuZWxJbml0aWFsaXplcj1HdChlLmtlcm5lbEluaXRpYWxpemVyfHxuLkRFRkFVTFRfS0VSTkVMX0lOSVRJQUxJWkVSKSxuLnJlY3VycmVudEluaXRpYWxpemVyPUd0KGUucmVjdXJyZW50SW5pdGlhbGl6ZXJ8fG4uREVGQVVMVF9SRUNVUlJFTlRfSU5JVElBTElaRVIpLG4uYmlhc0luaXRpYWxpemVyPUd0KGUuYmlhc0luaXRpYWxpemVyfHxuLkRFRkFVTFRfQklBU19JTklUSUFMSVpFUiksbi51bml0Rm9yZ2V0Qmlhcz1lLnVuaXRGb3JnZXRCaWFzLG4ua2VybmVsUmVndWxhcml6ZXI9cHIoZS5rZXJuZWxSZWd1bGFyaXplciksbi5yZWN1cnJlbnRSZWd1bGFyaXplcj1wcihlLnJlY3VycmVudFJlZ3VsYXJpemVyKSxuLmJpYXNSZWd1bGFyaXplcj1wcihlLmJpYXNSZWd1bGFyaXplciksbi5rZXJuZWxDb25zdHJhaW50PUsoZS5rZXJuZWxDb25zdHJhaW50KSxuLnJlY3VycmVudENvbnN0cmFpbnQ9SyhlLnJlY3VycmVudENvbnN0cmFpbnQpLG4uYmlhc0NvbnN0cmFpbnQ9SyhlLmJpYXNDb25zdHJhaW50KSxuLmRyb3BvdXQ9ZnQoWzEsaHQoWzAsbnVsbD09ZS5kcm9wb3V0PzA6ZS5kcm9wb3V0XSldKSxuLnJlY3VycmVudERyb3BvdXQ9ZnQoWzEsaHQoWzAsbnVsbD09ZS5yZWN1cnJlbnREcm9wb3V0PzA6ZS5yZWN1cnJlbnREcm9wb3V0XSldKSxuLmltcGxlbWVudGF0aW9uPWUuaW1wbGVtZW50YXRpb24sbi5zdGF0ZVNpemU9W24udW5pdHMsbi51bml0c10sbi5kcm9wb3V0TWFzaz1udWxsLG4ucmVjdXJyZW50RHJvcG91dE1hc2s9bnVsbCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7dmFyIGUsbixyPSh0PVF0KHQpKVt0Lmxlbmd0aC0xXTtpZih0aGlzLmtlcm5lbD10aGlzLmFkZFdlaWdodChcImtlcm5lbFwiLFtyLDQqdGhpcy51bml0c10sbnVsbCx0aGlzLmtlcm5lbEluaXRpYWxpemVyLHRoaXMua2VybmVsUmVndWxhcml6ZXIsITAsdGhpcy5rZXJuZWxDb25zdHJhaW50KSx0aGlzLnJlY3VycmVudEtlcm5lbD10aGlzLmFkZFdlaWdodChcInJlY3VycmVudF9rZXJuZWxcIixbdGhpcy51bml0cyw0KnRoaXMudW5pdHNdLG51bGwsdGhpcy5yZWN1cnJlbnRJbml0aWFsaXplcix0aGlzLnJlY3VycmVudFJlZ3VsYXJpemVyLCEwLHRoaXMucmVjdXJyZW50Q29uc3RyYWludCksdGhpcy51c2VCaWFzKXtpZih0aGlzLnVuaXRGb3JnZXRCaWFzKXt2YXIgaT10aGlzLmJpYXNJbml0aWFsaXplcixvPXRoaXMudW5pdHM7ZT1uZXcoKG49ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3JldHVybiBudWxsIT09dCYmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0LGUpe3ZhciBuPWkuYXBwbHkoW29dKSxyPShuZXcgUnQpLmFwcGx5KFtvXSksYT1pLmFwcGx5KFsyKm9dKTtyZXR1cm4gd3Qod3QobixyKSxhKX0sZX0oUHQpKS5jbGFzc05hbWU9XCJDdXN0b21Jbml0XCIsbil9ZWxzZSBlPXRoaXMuYmlhc0luaXRpYWxpemVyO3RoaXMuYmlhcz10aGlzLmFkZFdlaWdodChcImJpYXNcIixbNCp0aGlzLnVuaXRzXSxudWxsLGUsdGhpcy5iaWFzUmVndWxhcml6ZXIsITAsdGhpcy5iaWFzQ29uc3RyYWludCl9ZWxzZSB0aGlzLmJpYXM9bnVsbDt0aGlzLmJ1aWx0PSEwfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7dmFyIGk9bnVsbCE9ZS50cmFpbmluZyYmZS50cmFpbmluZztpZigzIT09KHQ9dCkubGVuZ3RoKXRocm93IG5ldyB3KFwiTFNUTUNlbGwgZXhwZWN0cyAzIGlucHV0IFRlbnNvcnMgKGlucHV0cywgaCwgYyksIGdvdCBcIit0Lmxlbmd0aCtcIi5cIik7dmFyIGE9dFsxXSxvPXRbMl07dD10WzBdLDA8bi5kcm9wb3V0JiZuLmRyb3BvdXQ8MSYmbnVsbD09bi5kcm9wb3V0TWFzayYmKG4uZHJvcG91dE1hc2s9U2koZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KHIuS2MpKHQpfSxuLmRyb3BvdXQsaSw0KSksMDxuLnJlY3VycmVudERyb3BvdXQmJm4ucmVjdXJyZW50RHJvcG91dDwxJiZudWxsPT1uLnJlY3VycmVudERyb3BvdXRNYXNrJiYobi5yZWN1cnJlbnREcm9wb3V0TWFzaz1TaShmdW5jdGlvbigpe3JldHVybiBPYmplY3Qoci5LYykoYSl9LG4ucmVjdXJyZW50RHJvcG91dCxpLDQpKTt2YXIgcyx1LGMsbCxmPW4uZHJvcG91dE1hc2ssaD1uLnJlY3VycmVudERyb3BvdXRNYXNrOzA8bi5kcm9wb3V0JiZuLmRyb3BvdXQ8MSYmKHQ9T2JqZWN0KHIuemMpKHQsZlswXSkpO3ZhciBwPUV0KHQsbi5rZXJuZWwucmVhZCgpKTswPG4ucmVjdXJyZW50RHJvcG91dCYmbi5yZWN1cnJlbnREcm9wb3V0PDEmJihhPU9iamVjdChyLnpjKShhLGhbMF0pKSxwPU9iamVjdChyLnUpKHAsRXQoYSxuLnJlY3VycmVudEtlcm5lbC5yZWFkKCkpKSxuLnVzZUJpYXMmJihwPUl0KHAsbi5iaWFzLnJlYWQoKSkpO3ZhciBkPU9iamVjdChyLktkKShwLDQscC5yYW5rLTEpLG09ZFswXSxnPWRbMV0seT1kWzJdLHY9ZFszXTtzPW4ucmVjdXJyZW50QWN0aXZhdGlvbi5hcHBseShtKSx1PW4ucmVjdXJyZW50QWN0aXZhdGlvbi5hcHBseShnKSxjPU9iamVjdChyLnUpKE9iamVjdChyLnpjKSh1LG8pLE9iamVjdChyLnpjKShzLG4uYWN0aXZhdGlvbi5hcHBseSh5KSkpLGw9bi5yZWN1cnJlbnRBY3RpdmF0aW9uLmFwcGx5KHYpO3ZhciBiPU9iamVjdChyLnpjKShsLG4uYWN0aXZhdGlvbi5hcHBseShjKSk7cmV0dXJuW2IsYixjXX0pfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17dW5pdHM6dGhpcy51bml0cyxhY3RpdmF0aW9uOmFyKHRoaXMuYWN0aXZhdGlvbikscmVjdXJyZW50QWN0aXZhdGlvbjphcih0aGlzLnJlY3VycmVudEFjdGl2YXRpb24pLHVzZUJpYXM6dGhpcy51c2VCaWFzLGtlcm5lbEluaXRpYWxpemVyOkt0KHRoaXMua2VybmVsSW5pdGlhbGl6ZXIpLHJlY3VycmVudEluaXRpYWxpemVyOkt0KHRoaXMucmVjdXJyZW50SW5pdGlhbGl6ZXIpLGJpYXNJbml0aWFsaXplcjpLdCh0aGlzLmJpYXNJbml0aWFsaXplciksdW5pdEZvcmdldEJpYXM6dGhpcy51bml0Rm9yZ2V0QmlhcyxrZXJuZWxSZWd1bGFyaXplcjpmcih0aGlzLmtlcm5lbFJlZ3VsYXJpemVyKSxyZWN1cnJlbnRSZWd1bGFyaXplcjpmcih0aGlzLnJlY3VycmVudFJlZ3VsYXJpemVyKSxiaWFzUmVndWxhcml6ZXI6ZnIodGhpcy5iaWFzUmVndWxhcml6ZXIpLGFjdGl2aXR5UmVndWxhcml6ZXI6ZnIodGhpcy5hY3Rpdml0eVJlZ3VsYXJpemVyKSxrZXJuZWxDb25zdHJhaW50OiQodGhpcy5rZXJuZWxDb25zdHJhaW50KSxyZWN1cnJlbnRDb25zdHJhaW50OiQodGhpcy5yZWN1cnJlbnRDb25zdHJhaW50KSxiaWFzQ29uc3RyYWludDokKHRoaXMuYmlhc0NvbnN0cmFpbnQpLGRyb3BvdXQ6dGhpcy5kcm9wb3V0LHJlY3VycmVudERyb3BvdXQ6dGhpcy5yZWN1cnJlbnREcm9wb3V0LGltcGxlbWVudGF0aW9uOnRoaXMuaW1wbGVtZW50YXRpb259LG49dC5wcm90b3R5cGUuZ2V0Q29uZmlnLmNhbGwodGhpcyk7cmV0dXJuIE9iamVjdC5hc3NpZ24oZSxuKSxlfSxlLmNsYXNzTmFtZT1cIkxTVE1DZWxsXCIsZX0oZ2kpO3IudGQucmVnaXN0ZXJDbGFzcyhfaSk7dmFyIHhpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIDA9PT1lLmltcGxlbWVudGF0aW9uJiZjb25zb2xlLndhcm4oXCJgaW1wbGVtZW50YXRpb249MGAgaGFzIGJlZW4gZGVwcmVjYXRlZCwgYW5kIG5vdyBkZWZhdWx0cyB0byBgaW1wbGVtZW50YXRpb249MWAuIFBsZWFzZSB1cGRhdGUgeW91ciBsYXllciBjYWxsLlwiKSxlLmNlbGw9bmV3IF9pKGUpLHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbihlLG4pe3ZhciBpPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe251bGwhPWkuY2VsbC5kcm9wb3V0TWFzayYmKE9iamVjdChyLmpiKShpLmNlbGwuZHJvcG91dE1hc2spLGkuY2VsbC5kcm9wb3V0TWFzaz1udWxsKSxudWxsIT1pLmNlbGwucmVjdXJyZW50RHJvcG91dE1hc2smJihPYmplY3Qoci5qYikoaS5jZWxsLnJlY3VycmVudERyb3BvdXRNYXNrKSxpLmNlbGwucmVjdXJyZW50RHJvcG91dE1hc2s9bnVsbCk7dmFyIGE9bnVsbD09bj9udWxsOm4ubWFzayxvPW51bGw9PW4/bnVsbDpuLnRyYWluaW5nLHM9bnVsbD09bj9udWxsOm4uaW5pdGlhbFN0YXRlO3JldHVybiB0LnByb3RvdHlwZS5jYWxsLmNhbGwoaSxlLHttYXNrOmEsdHJhaW5pbmc6byxpbml0aWFsU3RhdGU6c30pfSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInVuaXRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwudW5pdHN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYWN0aXZhdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmFjdGl2YXRpb259LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50QWN0aXZhdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudEFjdGl2YXRpb259LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidXNlQmlhc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnVzZUJpYXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwia2VybmVsSW5pdGlhbGl6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5rZXJuZWxJbml0aWFsaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJyZWN1cnJlbnRJbml0aWFsaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudEluaXRpYWxpemVyfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImJpYXNJbml0aWFsaXplclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmJpYXNJbml0aWFsaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ1bml0Rm9yZ2V0Qmlhc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnVuaXRGb3JnZXRCaWFzfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImtlcm5lbFJlZ3VsYXJpemVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwua2VybmVsUmVndWxhcml6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50UmVndWxhcml6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5yZWN1cnJlbnRSZWd1bGFyaXplcn0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJiaWFzUmVndWxhcml6ZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5iaWFzUmVndWxhcml6ZXJ9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwia2VybmVsQ29uc3RyYWludFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmtlcm5lbENvbnN0cmFpbnR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwicmVjdXJyZW50Q29uc3RyYWludFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLnJlY3VycmVudENvbnN0cmFpbnR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwiYmlhc0NvbnN0cmFpbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VsbC5iaWFzQ29uc3RyYWludH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJkcm9wb3V0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwuZHJvcG91dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJyZWN1cnJlbnREcm9wb3V0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNlbGwucmVjdXJyZW50RHJvcG91dH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJpbXBsZW1lbnRhdGlvblwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jZWxsLmltcGxlbWVudGF0aW9ufSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXt1bml0czp0aGlzLnVuaXRzLGFjdGl2YXRpb246YXIodGhpcy5hY3RpdmF0aW9uKSxyZWN1cnJlbnRBY3RpdmF0aW9uOmFyKHRoaXMucmVjdXJyZW50QWN0aXZhdGlvbiksdXNlQmlhczp0aGlzLnVzZUJpYXMsa2VybmVsSW5pdGlhbGl6ZXI6S3QodGhpcy5rZXJuZWxJbml0aWFsaXplcikscmVjdXJyZW50SW5pdGlhbGl6ZXI6S3QodGhpcy5yZWN1cnJlbnRJbml0aWFsaXplciksYmlhc0luaXRpYWxpemVyOkt0KHRoaXMuYmlhc0luaXRpYWxpemVyKSx1bml0Rm9yZ2V0Qmlhczp0aGlzLnVuaXRGb3JnZXRCaWFzLGtlcm5lbFJlZ3VsYXJpemVyOmZyKHRoaXMua2VybmVsUmVndWxhcml6ZXIpLHJlY3VycmVudFJlZ3VsYXJpemVyOmZyKHRoaXMucmVjdXJyZW50UmVndWxhcml6ZXIpLGJpYXNSZWd1bGFyaXplcjpmcih0aGlzLmJpYXNSZWd1bGFyaXplciksYWN0aXZpdHlSZWd1bGFyaXplcjpmcih0aGlzLmFjdGl2aXR5UmVndWxhcml6ZXIpLGtlcm5lbENvbnN0cmFpbnQ6JCh0aGlzLmtlcm5lbENvbnN0cmFpbnQpLHJlY3VycmVudENvbnN0cmFpbnQ6JCh0aGlzLnJlY3VycmVudENvbnN0cmFpbnQpLGJpYXNDb25zdHJhaW50OiQodGhpcy5iaWFzQ29uc3RyYWludCksZHJvcG91dDp0aGlzLmRyb3BvdXQscmVjdXJyZW50RHJvcG91dDp0aGlzLnJlY3VycmVudERyb3BvdXQsaW1wbGVtZW50YXRpb246dGhpcy5pbXBsZW1lbnRhdGlvbn0sbj10LnByb3RvdHlwZS5nZXRDb25maWcuY2FsbCh0aGlzKTtyZXR1cm4gZGVsZXRlIG4uY2VsbCxPYmplY3QuYXNzaWduKGUsbiksZX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT1lLmltcGxtZW50YXRpb24mJihlLmltcGxlbWVudGF0aW9uPTEpLG5ldyB0KGUpfSxlLmNsYXNzTmFtZT1cIkxTVE1cIixlfShtaSk7ci50ZC5yZWdpc3RlckNsYXNzKHhpKTt2YXIgRWk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gbi5jZWxscz1lLmNlbGxzLG59cmV0dXJuIGEoZSx0KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJzdGF0ZVNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MCxuPXRoaXMuY2VsbHMuc2xpY2UoKS5yZXZlcnNlKCk7ZTxuLmxlbmd0aDtlKyspe3ZhciByPW5bZV07QXJyYXkuaXNBcnJheShyLnN0YXRlU2l6ZSk/dC5wdXNoLmFwcGx5KHQsci5zdGF0ZVNpemUpOnQucHVzaChyLnN0YXRlU2l6ZSl9cmV0dXJuIHR9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2Zvcih2YXIgcj0odD10KS5zbGljZSgxKSxpPVtdLGE9MCxvPW4uY2VsbHMuc2xpY2UoKS5yZXZlcnNlKCk7YTxvLmxlbmd0aDthKyspe3ZhciBzPW9bYV07QXJyYXkuaXNBcnJheShzLnN0YXRlU2l6ZSk/aS5wdXNoKHIuc3BsaWNlKDAscy5zdGF0ZVNpemUubGVuZ3RoKSk6aS5wdXNoKHIuc3BsaWNlKDAsMSkpfWkucmV2ZXJzZSgpO2Zvcih2YXIgdSxjPVtdLGw9MDtsPG4uY2VsbHMubGVuZ3RoOysrbClzPW4uY2VsbHNbbF0scj1pW2xdLHU9MD09PWw/W3RbMF1dLmNvbmNhdChyKTpbdVswXV0uY29uY2F0KHIpLHU9cy5jYWxsKHUsZSksYy5wdXNoKHUuc2xpY2UoMSkpO3I9W107Zm9yKHZhciBmPTAsaD1jLnNsaWNlKCkucmV2ZXJzZSgpO2Y8aC5sZW5ndGg7ZisrKXt2YXIgcD1oW2ZdO3IucHVzaC5hcHBseShyLHApfXJldHVyblt1WzBdXS5jb25jYXQocil9KX0sZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7dmFyIGU7WXQodCkmJih0PXRbMF0pLHQ9dDtmb3IodmFyIG49MCxyPXRoaXMuY2VsbHM7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXJbbl07aS5idWlsZCh0KSxlPUFycmF5LmlzQXJyYXkoaS5zdGF0ZVNpemUpP2kuc3RhdGVTaXplWzBdOmkuc3RhdGVTaXplLHQ9W3RbMF0sZV19dGhpcy5idWlsdD0hMH0sZS5wcm90b3R5cGUuZ2V0Q29uZmlnPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLG49MCxyPXRoaXMuY2VsbHM7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXJbbl07ZS5wdXNoKHtjbGFzc05hbWU6dGhpcy5nZXRDbGFzc05hbWUoKSxjb25maWc6aS5nZXRDb25maWcoKX0pfXZhciBhPXtjZWxsczplfSxvPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGEsbyksYX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSxuKXt2b2lkIDA9PT1uJiYobj17fSk7Zm9yKHZhciByPVtdLGk9MCxhPWUuY2VsbHM7aTxhLmxlbmd0aDtpKyspe3ZhciBvPWFbaV07ci5wdXNoKGNuKG8sbikpfXJldHVybiBuZXcgdCh7Y2VsbHM6cn0pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ0cmFpbmFibGVXZWlnaHRzXCIse2dldDpmdW5jdGlvbigpe2lmKCF0aGlzLnRyYWluYWJsZSlyZXR1cm5bXTtmb3IodmFyIHQ9W10sZT0wLG49dGhpcy5jZWxscztlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTt0LnB1c2guYXBwbHkodCxyLnRyYWluYWJsZVdlaWdodHMpfXJldHVybiB0fSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm5vblRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MCxuPXRoaXMuY2VsbHM7ZTxuLmxlbmd0aDtlKyspe3ZhciByPW5bZV07dC5wdXNoLmFwcGx5KHQsci5ub25UcmFpbmFibGVXZWlnaHRzKX1pZighdGhpcy50cmFpbmFibGUpe2Zvcih2YXIgaT1bXSxhPTAsbz10aGlzLmNlbGxzO2E8by5sZW5ndGg7YSsrKXI9b1thXSxpLnB1c2guYXBwbHkoaSxyLnRyYWluYWJsZVdlaWdodHMpO3JldHVybiBpLmNvbmNhdCh0KX1yZXR1cm4gdH0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5nZXRXZWlnaHRzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MCxuPXRoaXMuY2VsbHM7ZTxuLmxlbmd0aDtlKyspe3ZhciByPW5bZV07dC5wdXNoLmFwcGx5KHQsci53ZWlnaHRzKX1yZXR1cm4gcmUodCl9LGUucHJvdG90eXBlLnNldFdlaWdodHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MCxyPXRoaXMuY2VsbHM7bjxyLmxlbmd0aDtuKyspZm9yKHZhciBpPXJbbl0sYT1pLndlaWdodHMubGVuZ3RoLG89dC5zcGxpY2UoYSkscz0wO3M8aS53ZWlnaHRzLmxlbmd0aDsrK3MpZS5wdXNoKFtpLndlaWdodHNbc10sb1tzXV0pO2llKGUpfSxlLmNsYXNzTmFtZT1cIlN0YWNrZWRSTk5DZWxsc1wiLGV9KGdpKTtmdW5jdGlvbiBTaSh0LGUsbixpKXtmdW5jdGlvbiBhKCl7cmV0dXJuIE90KHQoKSx5KGUpKX1pZih2b2lkIDA9PT1uJiYobj1udWxsKSx2b2lkIDA9PT1pJiYoaT0xKSxpPjEpe2Zvcih2YXIgbz1bXSxzPTA7czxpO3MrKylvLnB1c2goa3QoYSx0LG4pKTtyZXR1cm4gby5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3Qoci5SYikodCl9KSxvfXJldHVybiBPYmplY3Qoci5SYikoa3QoYSx0LG4pKX1yLnRkLnJlZ2lzdGVyQ2xhc3MoRWkpO3ZhciBOaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLmxheWVyPWUubGF5ZXIsbn1yZXR1cm4gYShlLHQpLGUucHJvdG90eXBlLmJ1aWxkPWZ1bmN0aW9uKHQpe3RoaXMuYnVpbHQ9ITB9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInRyYWluYWJsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9dGhpcy5sYXllciYmdGhpcy5sYXllci50cmFpbmFibGV9LHNldDpmdW5jdGlvbih0KXtudWxsIT10aGlzLmxheWVyJiYodGhpcy5sYXllci50cmFpbmFibGU9dCl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUucHJvdG90eXBlLFwidHJhaW5hYmxlV2VpZ2h0c1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sYXllci50cmFpbmFibGVXZWlnaHRzfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcIm5vblRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGF5ZXIubm9uVHJhaW5hYmxlV2VpZ2h0c30sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJ1cGRhdGVzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxheWVyLl91cGRhdGVzfSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcImxvc3Nlc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sYXllci5sb3NzZXN9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuZ2V0V2VpZ2h0cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxheWVyLmdldFdlaWdodHMoKX0sZS5wcm90b3R5cGUuc2V0V2VpZ2h0cz1mdW5jdGlvbih0KXt0aGlzLmxheWVyLnNldFdlaWdodHModCl9LGUucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbigpe3ZhciBlPXtsYXllcjp7Y2xhc3NOYW1lOnRoaXMubGF5ZXIuZ2V0Q2xhc3NOYW1lKCksY29uZmlnOnRoaXMubGF5ZXIuZ2V0Q29uZmlnKCl9fSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5wcm90b3R5cGUuc2V0RmFzdFdlaWdodEluaXREdXJpbmdCdWlsZD1mdW5jdGlvbihlKXt0LnByb3RvdHlwZS5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkLmNhbGwodGhpcyxlKSxudWxsIT10aGlzLmxheWVyJiZ0aGlzLmxheWVyLnNldEZhc3RXZWlnaHRJbml0RHVyaW5nQnVpbGQoZSl9LGUuZnJvbUNvbmZpZz1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49e30pO3ZhciByPWNuKGUubGF5ZXIsbik7ZGVsZXRlIGUubGF5ZXI7dmFyIGk9e2xheWVyOnJ9O3JldHVybiBPYmplY3QuYXNzaWduKGksZSksbmV3IHQoaSl9LGV9KGxlKSxJaT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLnN1cHBvcnRzTWFza2luZz0hMCxufXJldHVybiBhKGUsdCksZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24oZSl7aWYoKGU9UXQoZSkpLmxlbmd0aDwzKXRocm93IG5ldyB3KFwiVGltZURpc3RyaWJ1dGVkIGxheWVyIGV4cGVjdHMgYW4gaW5wdXQgc2hhcGUgPj0gM0QsIGJ1dCByZWNlaXZlZCBpbnB1dCBzaGFwZSBcIitKU09OLnN0cmluZ2lmeShlKSk7dGhpcy5pbnB1dFNwZWM9W3tzaGFwZTplfV07dmFyIG49W2VbMF1dLmNvbmNhdChlLnNsaWNlKDIpKTt0aGlzLmxheWVyLmJ1aWx0fHwodGhpcy5sYXllci5idWlsZChuKSx0aGlzLmxheWVyLmJ1aWx0PSEwKSx0LnByb3RvdHlwZS5idWlsZC5jYWxsKHRoaXMsZSl9LGUucHJvdG90eXBlLmNvbXB1dGVPdXRwdXRTaGFwZT1mdW5jdGlvbih0KXt2YXIgZT1bKHQ9UXQodCkpWzBdXS5jb25jYXQodC5zbGljZSgyKSksbj10aGlzLmxheWVyLmNvbXB1dGVPdXRwdXRTaGFwZShlKSxyPXRbMV07cmV0dXJuW25bMF0scl0uY29uY2F0KG4uc2xpY2UoMSkpfSxlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KHIuZ2UpKGZ1bmN0aW9uKCl7cmV0dXJuIGRpKGZ1bmN0aW9uKHQscil7cmV0dXJuW1p0KG4ubGF5ZXIuY2FsbCh0LGUpKSxbXV19LHQ9WnQodCksW10sITEsbnVsbCxudWxsLCExLCEwKVsxXX0pfSxlLmNsYXNzTmFtZT1cIlRpbWVEaXN0cmlidXRlZFwiLGV9KE5pKTtyLnRkLnJlZ2lzdGVyQ2xhc3MoSWkpO3ZhciBPaT1bXCJzdW1cIixcIm11bFwiLFwiY29uY2F0XCIsXCJhdmVcIl07dmFyIGtpPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7dmFyIG49dC5jYWxsKHRoaXMsZSl8fHRoaXMscj1lLmxheWVyLmdldENvbmZpZygpO2lmKG4uZm9yd2FyZExheWVyPWNuKHtjbGFzc05hbWU6ZS5sYXllci5nZXRDbGFzc05hbWUoKSxjb25maWc6cn0pLHIuZ29CYWNrd2FyZHM9ITAhPT1yLmdvQmFja3dhcmRzLG4uYmFja3dhcmRMYXllcj1jbih7Y2xhc3NOYW1lOmUubGF5ZXIuZ2V0Q2xhc3NOYW1lKCksY29uZmlnOnJ9KSxuLmZvcndhcmRMYXllci5uYW1lPVwiZm9yd2FyZF9cIituLmZvcndhcmRMYXllci5uYW1lLG4uYmFja3dhcmRMYXllci5uYW1lPVwiYmFja3dhcmRfXCIrbi5iYWNrd2FyZExheWVyLm5hbWUsZnVuY3Rpb24odCl7aihPaSxcIkJpZGlyZWN0aW9uYWxNZXJnZU1vZGVcIix0KX0oZS5tZXJnZU1vZGUpLG4ubWVyZ2VNb2RlPWUubWVyZ2VNb2RlLGUud2VpZ2h0cyl0aHJvdyBuZXcgXyhcIndlaWdodHMgc3VwcG9ydCBpcyBub3QgaW1wbGVtZW50ZWQgZm9yIEJpZGlyZWN0aW9uYWwgbGF5ZXIgeWV0LlwiKTtyZXR1cm4gbi5fc3RhdGVmdWw9ZS5sYXllci5zdGF0ZWZ1bCxuLnJldHVyblNlcXVlbmNlcz1lLmxheWVyLnJldHVyblNlcXVlbmNlcyxuLnJldHVyblN0YXRlPWUubGF5ZXIucmV0dXJuU3RhdGUsbi5zdXBwb3J0c01hc2tpbmc9ITAsbi5fdHJhaW5hYmxlPSEwLG4uaW5wdXRTcGVjPWUubGF5ZXIuaW5wdXRTcGVjLG4ubnVtQ29uc3RhbnRzPW51bGwsbn1yZXR1cm4gYShlLHQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInRyYWluYWJsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHJhaW5hYmxlfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fdHJhaW5hYmxlPXQsbnVsbCE9dGhpcy5mb3J3YXJkTGF5ZXImJih0aGlzLmZvcndhcmRMYXllci50cmFpbmFibGU9dCksbnVsbCE9dGhpcy5iYWNrd2FyZExheWVyJiYodGhpcy5iYWNrd2FyZExheWVyLnRyYWluYWJsZT10KX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxlLnByb3RvdHlwZS5nZXRXZWlnaHRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZm9yd2FyZExheWVyLmdldFdlaWdodHMoKS5jb25jYXQodGhpcy5iYWNrd2FyZExheWVyLmdldFdlaWdodHMoKSl9LGUucHJvdG90eXBlLnNldFdlaWdodHM9ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGgsbj1NYXRoLmZsb29yKGUvMik7dGhpcy5mb3J3YXJkTGF5ZXIuc2V0V2VpZ2h0cyh0LnNsaWNlKDAsbikpLHRoaXMuYmFja3dhcmRMYXllci5zZXRXZWlnaHRzKHQuc2xpY2UobikpfSxlLnByb3RvdHlwZS5jb21wdXRlT3V0cHV0U2hhcGU9ZnVuY3Rpb24odCl7dmFyIGUsbixyLGk9dGhpcy5mb3J3YXJkTGF5ZXIuY29tcHV0ZU91dHB1dFNoYXBlKHQpO3JldHVybiBBcnJheS5pc0FycmF5KGkpJiZBcnJheS5pc0FycmF5KGlbMF0pfHwoaT1baV0pLGk9aSx0aGlzLnJldHVyblN0YXRlPyhyPWkuc2xpY2UoMSksZT1pWzBdKTplPWlbMF0sZT1lLFwiY29uY2F0XCI9PT10aGlzLm1lcmdlTW9kZT8oZVtlLmxlbmd0aC0xXSo9MixuPVtlXSk6bj1udWxsPT10aGlzLm1lcmdlTW9kZT9bZSxlLnNsaWNlKCldOltlXSx0aGlzLnJldHVyblN0YXRlP251bGw9PXRoaXMubWVyZ2VNb2RlP24uY29uY2F0KHIpLmNvbmNhdChyLnNsaWNlKCkpOltlXS5jb25jYXQocikuY29uY2F0KHIuc2xpY2UoKSk6SShuKX0sZS5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24oZSxuKXt2YXIgcj1udWxsPT1uP251bGw6bi5pbml0aWFsU3RhdGUsaT1udWxsPT1uP251bGw6bi5jb25zdGFudHM7bnVsbD09biYmKG49e30pO3ZhciBhPXBpKGUscixpLHRoaXMubnVtQ29uc3RhbnRzKTtpZihlPWEuaW5wdXRzLHI9YS5pbml0aWFsU3RhdGUsaT1hLmNvbnN0YW50cyxBcnJheS5pc0FycmF5KGUpJiYocj1lLnNsaWNlKDEpLGU9ZVswXSksKG51bGw9PXJ8fDA9PT1yLmxlbmd0aCkmJm51bGw9PWkpcmV0dXJuIHQucHJvdG90eXBlLmFwcGx5LmNhbGwodGhpcyxlLG4pO3ZhciBvPVtdLHM9W107aWYobnVsbCE9cil7dmFyIHU9ci5sZW5ndGg7aWYodSUyPjApdGhyb3cgbmV3IHcoXCJXaGVuIHBhc3NpbmcgYGluaXRpYWxTdGF0ZWAgdG8gYSBCaWRyZWN0aW9uYWwgUk5OLCB0aGUgc3RhdGUgc2hvdWxkIGJlIGFuIEFycmF5IGNvbnRhaW5pbmcgdGhlIHN0YXRlcyBvZiB0aGUgdW5kZXJseWluZyBSTk5zLlwiKTtuLmluaXRpYWxTdGF0ZT1yLG8ucHVzaC5hcHBseShvLHIpO3ZhciBjPXIubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgYWUoe3NoYXBlOnQuc2hhcGV9KX0pO3RoaXMuZm9yd2FyZExheWVyLnN0YXRlU3BlYz1jLnNsaWNlKDAsdS8yKSx0aGlzLmJhY2t3YXJkTGF5ZXIuc3RhdGVTcGVjPWMuc2xpY2UodS8yKSxzLnB1c2guYXBwbHkocyxjKX1pZihudWxsIT1pKXRocm93IG5ldyBfKFwiU3VwcG9ydCBmb3IgY29uc3RhbnRzIGluIEJpZGlyZWN0aW9uYWwgbGF5ZXJzIGlzIG5vdCBpbXBsZW1lbnRlZCB5ZXQuXCIpO2Zvcih2YXIgbD1vWzBdaW5zdGFuY2VvZiBvZSxmPTAsaD1vO2Y8aC5sZW5ndGg7ZisrKWlmKGhbZl1pbnN0YW5jZW9mIG9lIT09bCl0aHJvdyBuZXcgdyhcIlRoZSBpbml0aWFsIHN0YXRlIG9mIGEgQmlkaXJlY3Rpb25hbCBsYXllciBjYW5ub3QgYmUgc3BlY2lmaWVkIGFzIGEgbWl4IG9mIHN5bWJvbGljIGFuZCBub24tc3ltYm9saWMgdGVuc29yc1wiKTtpZihsKXt2YXIgcD1bZV0uY29uY2F0KG8pLGQ9dGhpcy5pbnB1dFNwZWMuY29uY2F0KHMpLG09dGhpcy5pbnB1dFNwZWM7dGhpcy5pbnB1dFNwZWM9ZDt2YXIgZz10LnByb3RvdHlwZS5hcHBseS5jYWxsKHRoaXMscCxuKTtyZXR1cm4gdGhpcy5pbnB1dFNwZWM9bSxnfXJldHVybiB0LnByb3RvdHlwZS5hcHBseS5jYWxsKHRoaXMsZSxuKX0sZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9iamVjdChyLmdlKShmdW5jdGlvbigpe2lmKG51bGwhPWUubWFzayl0aHJvdyBuZXcgXyhcIlRoZSBzdXBwb3J0IGZvciBtYXNraW5nIGlzIG5vdCBpbXBsZW1lbnRlZCBmb3IgQmlkaXJlY3Rpb25hbCBsYXllcnMgeWV0LlwiKTt2YXIgaSxhLG8scyx1PWUuaW5pdGlhbFN0YXRlO2lmKG51bGw9PXUpaT1uLmZvcndhcmRMYXllci5jYWxsKHQsZSksYT1uLmJhY2t3YXJkTGF5ZXIuY2FsbCh0LGUpO2Vsc2V7dmFyIGM9dS5zbGljZSgwLHUubGVuZ3RoLzIpLGw9dS5zbGljZSh1Lmxlbmd0aC8yKTtpPW4uZm9yd2FyZExheWVyLmNhbGwodCxPYmplY3QuYXNzaWduKGUse2luaXRpYWxTdGF0ZTpjfSkpLGE9bi5iYWNrd2FyZExheWVyLmNhbGwodCxPYmplY3QuYXNzaWduKGUse2luaXRpYWxTdGF0ZTpsfSkpfXJldHVybiBuLnJldHVyblN0YXRlJiYoQXJyYXkuaXNBcnJheShpKSYmKG89aS5zbGljZSgxKS5jb25jYXQoYS5zbGljZSgxKSkpLGk9aVswXSxhPWFbMF0pLG4ucmV0dXJuU2VxdWVuY2VzJiYoYT1PYmplY3Qoci5oZCkoYSwxKSksXCJjb25jYXRcIj09PW4ubWVyZ2VNb2RlP3M9YnQoW2ksYV0pOlwic3VtXCI9PT1uLm1lcmdlTW9kZT9zPU9iamVjdChyLnUpKGksYSk6XCJhdmVcIj09PW4ubWVyZ2VNb2RlP3M9T2JqZWN0KHIuemMpKHkoLjUpLE9iamVjdChyLnUpKGksYSkpOlwibXVsXCI9PT1uLm1lcmdlTW9kZT9zPU9iamVjdChyLnpjKShpLGEpOm51bGw9PW4ubWVyZ2VNb2RlJiYocz1baSxhXSksbi5yZXR1cm5TdGF0ZT9udWxsPT1uLm1lcmdlTW9kZT9zLmNvbmNhdChvKTpbc10uY29uY2F0KG8pOnN9KX0sZS5wcm90b3R5cGUucmVzZXRTdGF0ZXM9ZnVuY3Rpb24odCl7dGhpcy5mb3J3YXJkTGF5ZXIucmVzZXRTdGF0ZXMoKSx0aGlzLmJhY2t3YXJkTGF5ZXIucmVzZXRTdGF0ZXMoKX0sZS5wcm90b3R5cGUuYnVpbGQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztydCh0aGlzLmZvcndhcmRMYXllci5uYW1lLGZ1bmN0aW9uKCl7ZS5mb3J3YXJkTGF5ZXIuYnVpbGQodCl9KSxydCh0aGlzLmJhY2t3YXJkTGF5ZXIubmFtZSxmdW5jdGlvbigpe2UuYmFja3dhcmRMYXllci5idWlsZCh0KX0pLHRoaXMuYnVpbHQ9ITB9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLnByb3RvdHlwZSxcInRyYWluYWJsZVdlaWdodHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZm9yd2FyZExheWVyLnRyYWluYWJsZVdlaWdodHMuY29uY2F0KHRoaXMuYmFja3dhcmRMYXllci50cmFpbmFibGVXZWlnaHRzKX0sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZS5wcm90b3R5cGUsXCJub25UcmFpbmFibGVXZWlnaHRzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZvcndhcmRMYXllci5ub25UcmFpbmFibGVXZWlnaHRzLmNvbmNhdCh0aGlzLmJhY2t3YXJkTGF5ZXIubm9uVHJhaW5hYmxlV2VpZ2h0cyl9LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSksZS5wcm90b3R5cGUuc2V0RmFzdFdlaWdodEluaXREdXJpbmdCdWlsZD1mdW5jdGlvbihlKXt0LnByb3RvdHlwZS5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkLmNhbGwodGhpcyxlKSxudWxsIT10aGlzLmZvcndhcmRMYXllciYmdGhpcy5mb3J3YXJkTGF5ZXIuc2V0RmFzdFdlaWdodEluaXREdXJpbmdCdWlsZChlKSxudWxsIT10aGlzLmJhY2t3YXJkTGF5ZXImJnRoaXMuYmFja3dhcmRMYXllci5zZXRGYXN0V2VpZ2h0SW5pdER1cmluZ0J1aWxkKGUpfSxlLnByb3RvdHlwZS5nZXRDb25maWc9ZnVuY3Rpb24oKXt2YXIgZT17bWVyZ2VNb2RlOnRoaXMubWVyZ2VNb2RlfSxuPXQucHJvdG90eXBlLmdldENvbmZpZy5jYWxsKHRoaXMpO3JldHVybiBPYmplY3QuYXNzaWduKGUsbiksZX0sZS5mcm9tQ29uZmlnPWZ1bmN0aW9uKHQsZSl7dmFyIG49Y24oZS5sYXllcik7aWYoZGVsZXRlIGUubGF5ZXIsbnVsbCE9ZS5udW1Db25zdGFudHMpdGhyb3cgbmV3IF8oXCJEZXNlcmlhbGl6YXRpb24gb2YgYSBCaWRpcmVjdGlvbmFsIGxheWVyIHdpdGggbnVtQ29uc3RhbnRzIHByZXNlbnQgaXMgbm90IHN1cHBvcnRlZCB5ZXQuXCIpO3ZhciByPWU7cmV0dXJuIHIubGF5ZXI9bixuZXcgdChyKX0sZS5jbGFzc05hbWU9XCJCaWRpcmVjdGlvbmFsXCIsZX0oTmkpO2Z1bmN0aW9uIEFpKHQpe3JldHVybiBuZXcgcmkodCl9ZnVuY3Rpb24gQ2kodCl7cmV0dXJuIG5ldyBvaSh0KX1mdW5jdGlvbiBQaSh0KXtyZXR1cm4gbmV3IGNpKHQpfWZ1bmN0aW9uIFRpKHQpe3JldHVybiBuZXcgaGkodCl9ZnVuY3Rpb24gUmkodCl7cmV0dXJuIG5ldyBuaSh0KX1mdW5jdGlvbiBEaSh0KXtyZXR1cm4gbmV3IGFpKHQpfXIudGQucmVnaXN0ZXJDbGFzcyhraSk7dmFyIE1pPVBpLGppPVRpLEJpPVJpLExpPURpLHppPU9iamVjdC5mcmVlemUoe2lucHV0TGF5ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBwZSh0KX0sZWx1OmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgeXIodCl9LHJlTFU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBkcih0KX0sbGVha3lSZUxVOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgbXIodCl9LHByZWx1OmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgZ3IodCl9LHNvZnRtYXg6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBicih0KX0sdGhyZXNob2xkZWRSZUxVOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgdnIodCl9LGNvbnYxZDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEFyKHQpfSxjb252MmQ6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJcih0KX0sY29udjJkVHJhbnNwb3NlOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgT3IodCl9LHNlcGFyYWJsZUNvbnYyZDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGtyKHQpfSxjcm9wcGluZzJEOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgQ3IodCl9LHVwU2FtcGxpbmcyZDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFByKHQpfSxkZXB0aHdpc2VDb252MmQ6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBUcih0KX0sYWN0aXZhdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGpyKHQpfSxkZW5zZTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IERyKHQpfSxkcm9wb3V0OmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUnIodCl9LGZsYXR0ZW46ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBNcih0KX0scmVwZWF0VmVjdG9yOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgQnIodCl9LHJlc2hhcGU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBMcih0KX0scGVybXV0ZTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHpyKHQpfSxlbWJlZGRpbmc6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBGcih0KX0sYWRkOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgVnIodCl9LGF2ZXJhZ2U6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBxcih0KX0sY29uY2F0ZW5hdGU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBLcih0KX0sbWF4aW11bTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3ICRyKHQpfSxtaW5pbXVtOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSHIodCl9LG11bHRpcGx5OmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgV3IodCl9LGRvdDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFhyKHQpfSxiYXRjaE5vcm1hbGl6YXRpb246ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBacih0KX0semVyb1BhZGRpbmcyZDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IFFyKHQpfSxhdmVyYWdlUG9vbGluZzFkOkFpLGF2Z1Bvb2wxZDpmdW5jdGlvbih0KXtyZXR1cm4gQWkodCl9LGF2Z1Bvb2xpbmcxZDpmdW5jdGlvbih0KXtyZXR1cm4gQWkodCl9LGF2ZXJhZ2VQb29saW5nMmQ6Q2ksYXZnUG9vbDJkOmZ1bmN0aW9uKHQpe3JldHVybiBDaSh0KX0sYXZnUG9vbGluZzJkOmZ1bmN0aW9uKHQpe3JldHVybiBDaSh0KX0sZ2xvYmFsQXZlcmFnZVBvb2xpbmcxZDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHVpKHQpfSxnbG9iYWxBdmVyYWdlUG9vbGluZzJkOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgZmkodCl9LGdsb2JhbE1heFBvb2xpbmcxZDpQaSxnbG9iYWxNYXhQb29saW5nMmQ6VGksbWF4UG9vbGluZzFkOlJpLG1heFBvb2xpbmcyZDpEaSxncnU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB3aSh0KX0sZ3J1Q2VsbDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGJpKHQpfSxsc3RtOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgeGkodCl9LGxzdG1DZWxsOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgX2kodCl9LHNpbXBsZVJOTjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHZpKHQpfSxzaW1wbGVSTk5DZWxsOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgeWkodCl9LHJubjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IG1pKHQpfSxzdGFja2VkUk5OQ2VsbHM6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBFaSh0KX0sYmlkaXJlY3Rpb25hbDpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGtpKHQpfSx0aW1lRGlzdHJpYnV0ZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJaSh0KX0sZ2xvYmFsTWF4UG9vbDFkOk1pLGdsb2JhbE1heFBvb2wyZDpqaSxtYXhQb29sMWQ6QmksbWF4UG9vbDJkOkxpLExheWVyOmxlLFJOTjptaSxSTk5DZWxsOmdpLGlucHV0OiRufSk7dmFyIEZpPU9iamVjdC5mcmVlemUoe2JpbmFyeUFjY3VyYWN5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIFZlKHQsZSl9LGJpbmFyeUNyb3NzZW50cm9weTpmdW5jdGlvbih0LGUpe3JldHVybiBLZSh0LGUpfSxzcGFyc2VDYXRlZ29yaWNhbEFjY3VyYWN5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEdlKHQsZSl9LGNhdGVnb3JpY2FsQWNjdXJhY3k6ZnVuY3Rpb24odCxlKXtyZXR1cm4gV2UodCxlKX0sY2F0ZWdvcmljYWxDcm9zc2VudHJvcHk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZW4odCxlKX0scHJlY2lzaW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuICRlKHQsZSl9LHJlY2FsbDpmdW5jdGlvbih0LGUpe3JldHVybiBIZSh0LGUpfSxjb3NpbmVQcm94aW1pdHk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gRmUodCxlKX0sbWVhbkFic29sdXRlRXJyb3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4ga2UodCxlKX0sbWVhbkFic29sdXRlUGVyY2VudGFnZUVycm9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFlKHQsZSl9LE1BUEU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gQWUodCxlKX0sbWFwZTpmdW5jdGlvbih0LGUpe3JldHVybiBBZSh0LGUpfSxtZWFuU3F1YXJlZEVycm9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9lKHQsZSl9LE1TRTpmdW5jdGlvbih0LGUpe3JldHVybiBPZSh0LGUpfSxtc2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2UodCxlKX19KSxVaT1PYmplY3QuZnJlZXplKHttb2RlbEZyb21KU09OOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4saSxhLG8scyx1LGwsZjtyZXR1cm4gYyh0aGlzLGZ1bmN0aW9uKGMpe3N3aXRjaChjLmxhYmVsKXtjYXNlIDA6cmV0dXJuXCJtb2RlbFRvcG9sb2d5XCJpbiB0fHwodD17bW9kZWxUb3BvbG9neTp0fSksbnVsbCE9KG49KHQ9dCkubW9kZWxUb3BvbG9neSkubW9kZWxfY29uZmlnJiYobj1uLm1vZGVsX2NvbmZpZyksaT1mbihuKSxhPWNuKGksZSksbnVsbD09dC53ZWlnaHRzTWFuaWZlc3Q/WzMsMl06WzQsci5QYi5sb2FkV2VpZ2h0cyh0LndlaWdodHNNYW5pZmVzdCx0LnBhdGhQcmVmaXgsYS53ZWlnaHRzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5vcmlnaW5hbE5hbWV9KSldO2Nhc2UgMTpmb3Iobz1jLnNlbnQoKSxzPXt9LHU9MCxsPWEud2VpZ2h0czt1PGwubGVuZ3RoO3UrKylmPWxbdV0sc1tmLm9yaWdpbmFsTmFtZV09b1tmLm9yaWdpbmFsTmFtZV07YS5sb2FkV2VpZ2h0cyhzLG51bGwsITApLGMubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzIsYV19fSl9KX19KTt2YXIgVmk9T2JqZWN0LmZyZWV6ZSh7bDFsMjpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGNyKHQpfSxsMTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBjcih7bDE6bnVsbCE9dD90LmwxOm51bGwsbDI6MH0pfSh0KX0sbDI6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgY3Ioe2wyOm51bGwhPXQ/dC5sMjpudWxsLGwxOjB9KX0odCl9fSksV2k9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciBlPW51bGwhPT10JiZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gZS5tb2RlbD1udWxsLGV9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5zZXRNb2RlbD1mdW5jdGlvbih0KXtpZighKHQgaW5zdGFuY2VvZiB6bikpdGhyb3cgbmV3IEVycm9yKFwibW9kZWwgbXVzdCBiZSBhIE1vZGVsLCBub3Qgc29tZSBvdGhlciBDb250YWluZXJcIik7dGhpcy5tb2RlbD10fSxlfSh5ZSkscWk9big1MiksJGk9big1Myk7bi5kKGUsXCJ2ZXJzaW9uXCIsZnVuY3Rpb24oKXtyZXR1cm4gSGl9KSxuLmQoZSxcInNldEJhY2tlbmRcIixmdW5jdGlvbigpe3JldHVybiByLnVkfSksbi5kKGUsXCJnZXRCYWNrZW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5GYn0pLG4uZChlLFwiZGlzcG9zZVZhcmlhYmxlc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIua2J9KSxuLmQoZSxcIm1lbW9yeVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucmN9KSxuLmQoZSxcInZlcnNpb25fY29yZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudmV9KSxuLmQoZSxcIm5leHRGcmFtZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuRWN9KSxuLmQoZSxcImVudmlyb25tZW50XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5xYn0pLG4uZChlLFwiaW9cIixmdW5jdGlvbigpe3JldHVybiByLlBifSksbi5kKGUsXCJtYXRoXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5sY30pLG4uZChlLFwic2VyaWFsaXphdGlvblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudGR9KSxuLmQoZSxcInRlc3RfdXRpbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZmV9KSxuLmQoZSxcInV0aWxcIixmdW5jdGlvbigpe3JldHVybiByLnFlfSksbi5kKGUsXCJ3ZWJnbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIud2V9KSxuLmQoZSxcImVuYWJsZVByb2RNb2RlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5wYn0pLG4uZChlLFwiQWRhZGVsdGFPcHRpbWl6ZXJcIixmdW5jdGlvbigpe3JldHVybiByLmF9KSxuLmQoZSxcIkFkYWdyYWRPcHRpbWl6ZXJcIixmdW5jdGlvbigpe3JldHVybiByLmJ9KSxuLmQoZSxcIkFkYW1PcHRpbWl6ZXJcIixmdW5jdGlvbigpe3JldHVybiByLmN9KSxuLmQoZSxcIkFkYW1heE9wdGltaXplclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZH0pLG4uZChlLFwiTW9tZW50dW1PcHRpbWl6ZXJcIixmdW5jdGlvbigpe3JldHVybiByLml9KSxuLmQoZSxcIk9wdGltaXplclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuan0pLG4uZChlLFwiUk1TUHJvcE9wdGltaXplclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIua30pLG4uZChlLFwiU0dET3B0aW1pemVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5ufSksbi5kKGUsXCJUZW5zb3JcIixmdW5jdGlvbigpe3JldHVybiByLm99KSxuLmQoZSxcIlRlbnNvckJ1ZmZlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucH0pLG4uZChlLFwidmFyaWFibGVcIixmdW5jdGlvbigpe3JldHVybiByLnRlfSksbi5kKGUsXCJWYXJpYWJsZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucX0pLG4uZChlLFwiUmFua1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIubH0pLG4uZChlLFwiUmVkdWN0aW9uXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5tfSksbi5kKGUsXCJFTlZcIixmdW5jdGlvbigpe3JldHVybiByLmZ9KSxuLmQoZSxcIkVudmlyb25tZW50XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5nfSksbi5kKGUsXCJLZXJuZWxCYWNrZW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5ofSksbi5kKGUsXCJEYXRhU3RvcmFnZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZX0pLG4uZChlLFwiaW1hZ2VcIixmdW5jdGlvbigpe3JldHVybiByLk9ifSksbi5kKGUsXCJsaW5hbGdcIixmdW5jdGlvbigpe3JldHVybiByLlhifSksbi5kKGUsXCJsb3NzZXNcIixmdW5jdGlvbigpe3JldHVybiByLmpjfSksbi5kKGUsXCJzcGVjdHJhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuSmR9KSxuLmQoZSxcIm9wXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5MY30pLG4uZChlLFwiYmF0Y2hOb3JtYWxpemF0aW9uMmRcIixmdW5jdGlvbigpe3JldHVybiByLkp9KSxuLmQoZSxcImJhdGNoTm9ybWFsaXphdGlvbjNkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5LfSksbi5kKGUsXCJiYXRjaE5vcm1hbGl6YXRpb240ZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTH0pLG4uZChlLFwiYmF0Y2hOb3JtYWxpemF0aW9uXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5JfSksbi5kKGUsXCJjb21wbGV4XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5TfSksbi5kKGUsXCJyZWFsXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5kZH0pLG4uZChlLFwiaW1hZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTmJ9KSxuLmQoZSxcImNvbmNhdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuVH0pLG4uZChlLFwiY29uY2F0MWRcIixmdW5jdGlvbigpe3JldHVybiByLlV9KSxuLmQoZSxcImNvbmNhdDJkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5WfSksbi5kKGUsXCJjb25jYXQzZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuV30pLG4uZChlLFwiY29uY2F0NGRcIixmdW5jdGlvbigpe3JldHVybiByLlh9KSxuLmQoZSxcInNwbGl0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5LZH0pLG4uZChlLFwiY29udjFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5ZfSksbi5kKGUsXCJjb252MmRcIixmdW5jdGlvbigpe3JldHVybiByLlp9KSxuLmQoZSxcImNvbnYzZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuY2J9KSxuLmQoZSxcImNvbnYyZERlckZpbHRlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuYWJ9KSxuLmQoZSxcImRlcHRod2lzZUNvbnYyZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuaWJ9KSxuLmQoZSxcInNlcGFyYWJsZUNvbnYyZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuc2R9KSxuLmQoZSxcImNvbnYyZFRyYW5zcG9zZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuYmJ9KSxuLmQoZSxcIm1hdE11bFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIua2N9KSxuLmQoZSxcImRvdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIubmJ9KSxuLmQoZSxcIm91dGVyUHJvZHVjdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTWN9KSxuLmQoZSxcInJldmVyc2VcIixmdW5jdGlvbigpe3JldHVybiByLmhkfSksbi5kKGUsXCJyZXZlcnNlMWRcIixmdW5jdGlvbigpe3JldHVybiByLmlkfSksbi5kKGUsXCJyZXZlcnNlMmRcIixmdW5jdGlvbigpe3JldHVybiByLmpkfSksbi5kKGUsXCJyZXZlcnNlM2RcIixmdW5jdGlvbigpe3JldHVybiByLmtkfSksbi5kKGUsXCJyZXZlcnNlNGRcIixmdW5jdGlvbigpe3JldHVybiByLmxkfSksbi5kKGUsXCJtYXhQb29sXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5uY30pLG4uZChlLFwiYXZnUG9vbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuR30pLG4uZChlLFwicG9vbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuU2N9KSxuLmQoZSxcInNsaWNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5BZH0pLG4uZChlLFwic2xpY2UxZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuQmR9KSxuLmQoZSxcInNsaWNlMmRcIixmdW5jdGlvbigpe3JldHVybiByLkNkfSksbi5kKGUsXCJzbGljZTNkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5EZH0pLG4uZChlLFwic2xpY2U0ZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuRWR9KSxuLmQoZSxcImFic1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucn0pLG4uZChlLFwiYWNvc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuc30pLG4uZChlLFwiYWNvc2hcIixmdW5jdGlvbigpe3JldHVybiByLnR9KSxuLmQoZSxcImFzaW5cIixmdW5jdGlvbigpe3JldHVybiByLkJ9KSxuLmQoZSxcImFzaW5oXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5DfSksbi5kKGUsXCJhdGFuXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5EfSksbi5kKGUsXCJhdGFuaFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuRn0pLG4uZChlLFwiY2VpbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuUH0pLG4uZChlLFwiY2xpcEJ5VmFsdWVcIixmdW5jdGlvbigpe3JldHVybiByLlF9KSxuLmQoZSxcImNvc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZGJ9KSxuLmQoZSxcImNvc2hcIixmdW5jdGlvbigpe3JldHVybiByLmVifSksbi5kKGUsXCJlcmZcIixmdW5jdGlvbigpe3JldHVybiByLnRifSksbi5kKGUsXCJleHBcIixmdW5jdGlvbigpe3JldHVybiByLnVifSksbi5kKGUsXCJleHBtMVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIud2J9KSxuLmQoZSxcImZsb29yXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5BYn0pLG4uZChlLFwibG9nXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5hY30pLG4uZChlLFwibG9nMXBcIixmdW5jdGlvbigpe3JldHVybiByLmJjfSksbi5kKGUsXCJsb2dTaWdtb2lkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5jY30pLG4uZChlLFwibmVnXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5EY30pLG4uZChlLFwicmVjaXByb2NhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZWR9KSxuLmQoZSxcInJvdW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5uZH0pLG4uZChlLFwicnNxcnRcIixmdW5jdGlvbigpe3JldHVybiByLm9kfSksbi5kKGUsXCJzaWdtb2lkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci53ZH0pLG4uZChlLFwic2lnblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueGR9KSxuLmQoZSxcInNpblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueWR9KSxuLmQoZSxcInNpbmhcIixmdW5jdGlvbigpe3JldHVybiByLnpkfSksbi5kKGUsXCJzb2Z0cGx1c1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuR2R9KSxuLmQoZSxcInNxcnRcIixmdW5jdGlvbigpe3JldHVybiByLkxkfSksbi5kKGUsXCJzcXVhcmVcIixmdW5jdGlvbigpe3JldHVybiByLk1kfSksbi5kKGUsXCJzdGVwXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5SZH0pLG4uZChlLFwidGFuXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5XZH0pLG4uZChlLFwidGFuaFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuWGR9KSxuLmQoZSxcImFsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueH0pLG4uZChlLFwiYW55XCIsZnVuY3Rpb24oKXtyZXR1cm4gci55fSksbi5kKGUsXCJhcmdNYXhcIixmdW5jdGlvbigpe3JldHVybiByLnp9KSxuLmQoZSxcImFyZ01pblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuQX0pLG4uZChlLFwibG9nU3VtRXhwXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5lY30pLG4uZChlLFwibWF4XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5tY30pLG4uZChlLFwibWVhblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucWN9KSxuLmQoZSxcIm1pblwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuc2N9KSxuLmQoZSxcIm1vbWVudHNcIixmdW5jdGlvbigpe3JldHVybiByLnhjfSksbi5kKGUsXCJzdW1cIixmdW5jdGlvbigpe3JldHVybiByLlZkfSksbi5kKGUsXCJwcm9kXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5YY30pLG4uZChlLFwiZXF1YWxcIixmdW5jdGlvbigpe3JldHVybiByLnJifSksbi5kKGUsXCJlcXVhbFN0cmljdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuc2J9KSxuLmQoZSxcImdyZWF0ZXJcIixmdW5jdGlvbigpe3JldHVybiByLklifSksbi5kKGUsXCJncmVhdGVyRXF1YWxcIixmdW5jdGlvbigpe3JldHVybiByLkpifSksbi5kKGUsXCJncmVhdGVyRXF1YWxTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLktifSksbi5kKGUsXCJncmVhdGVyU3RyaWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5MYn0pLG4uZChlLFwibGVzc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuVGJ9KSxuLmQoZSxcImxlc3NFcXVhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuVWJ9KSxuLmQoZSxcImxlc3NFcXVhbFN0cmljdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuVmJ9KSxuLmQoZSxcImxlc3NTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLldifSksbi5kKGUsXCJub3RFcXVhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuR2N9KSxuLmQoZSxcIm5vdEVxdWFsU3RyaWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5IY30pLG4uZChlLFwiYWRkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci51fSksbi5kKGUsXCJhZGROXCIsZnVuY3Rpb24oKXtyZXR1cm4gci52fSksbi5kKGUsXCJhZGRTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLnd9KSxuLmQoZSxcImF0YW4yXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5FfSksbi5kKGUsXCJkaXZcIixmdW5jdGlvbigpe3JldHVybiByLmxifSksbi5kKGUsXCJkaXZTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLm1ifSksbi5kKGUsXCJmbG9vckRpdlwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuQmJ9KSxuLmQoZSxcIm1heGltdW1cIixmdW5jdGlvbigpe3JldHVybiByLm9jfSksbi5kKGUsXCJtYXhpbXVtU3RyaWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5wY30pLG4uZChlLFwibWluaW11bVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudGN9KSxuLmQoZSxcIm1pbmltdW1TdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLnVjfSksbi5kKGUsXCJtb2RcIixmdW5jdGlvbigpe3JldHVybiByLnZjfSksbi5kKGUsXCJtb2RTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLndjfSksbi5kKGUsXCJtdWxcIixmdW5jdGlvbigpe3JldHVybiByLnpjfSksbi5kKGUsXCJtdWxTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLkFjfSksbi5kKGUsXCJwb3dcIixmdW5jdGlvbigpe3JldHVybiByLlRjfSksbi5kKGUsXCJwb3dTdHJpY3RcIixmdW5jdGlvbigpe3JldHVybiByLlVjfSksbi5kKGUsXCJzcXVhcmVkRGlmZmVyZW5jZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTmR9KSxuLmQoZSxcInNxdWFyZWREaWZmZXJlbmNlU3RyaWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5PZH0pLG4uZChlLFwic3ViXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5UZH0pLG4uZChlLFwic3ViU3RyaWN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5VZH0pLG4uZChlLFwiZWx1XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5vYn0pLG4uZChlLFwibGVha3lSZWx1XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5TYn0pLG4uZChlLFwicHJlbHVcIixmdW5jdGlvbigpe3JldHVybiByLlZjfSksbi5kKGUsXCJyZWx1XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5mZH0pLG4uZChlLFwic2VsdVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucmR9KSxuLmQoZSxcImxvZ2ljYWxBbmRcIixmdW5jdGlvbigpe3JldHVybiByLmZjfSksbi5kKGUsXCJsb2dpY2FsTm90XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5nY30pLG4uZChlLFwibG9naWNhbE9yXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5oY30pLG4uZChlLFwibG9naWNhbFhvclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuaWN9KSxuLmQoZSxcIndoZXJlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci54ZX0pLG4uZChlLFwid2hlcmVBc3luY1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueWV9KSxuLmQoZSxcImJ1ZmZlclwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTn0pLG4uZChlLFwidG9QaXhlbHNcIixmdW5jdGlvbigpe3JldHVybiByLmplfSksbi5kKGUsXCJwcmludFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuV2N9KSxuLmQoZSxcImJhdGNoVG9TcGFjZU5EXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5NfSksbi5kKGUsXCJjYXN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5PfSksbi5kKGUsXCJjbG9uZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuUn0pLG4uZChlLFwiY3Vtc3VtXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5mYn0pLG4uZChlLFwiZGVwdGhUb1NwYWNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5oYn0pLG4uZChlLFwiZXhwYW5kRGltc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudmJ9KSxuLmQoZSxcImV5ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueGJ9KSxuLmQoZSxcImZyb21QaXhlbHNcIixmdW5jdGlvbigpe3JldHVybiByLkNifSksbi5kKGUsXCJtdWx0aW5vbWlhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuQ2N9KSxuLmQoZSxcIm9uZUhvdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuSWN9KSxuLmQoZSxcInBhZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuTmN9KSxuLmQoZSxcInBhZDFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5PY30pLG4uZChlLFwicGFkMmRcIixmdW5jdGlvbigpe3JldHVybiByLlBjfSksbi5kKGUsXCJwYWQzZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuUWN9KSxuLmQoZSxcInBhZDRkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5SY30pLG4uZChlLFwicmFuZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuWmN9KSxuLmQoZSxcInJhbmRvbU5vcm1hbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuYWR9KSxuLmQoZSxcInJhbmRvbVVuaWZvcm1cIixmdW5jdGlvbigpe3JldHVybiByLmJkfSksbi5kKGUsXCJyZXNoYXBlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5nZH0pLG4uZChlLFwic3BhY2VUb0JhdGNoTkRcIixmdW5jdGlvbigpe3JldHVybiByLkhkfSksbi5kKGUsXCJzcXVlZXplXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5QZH0pLG4uZChlLFwic3RhY2tcIixmdW5jdGlvbigpe3JldHVybiByLlFkfSksbi5kKGUsXCJ0aWxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5oZX0pLG4uZChlLFwidHJ1bmNhdGVkTm9ybWFsXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5uZX0pLG4uZChlLFwidW5zdGFja1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIucGV9KSxuLmQoZSxcInNldGRpZmYxZEFzeW5jXCIsZnVuY3Rpb24oKXtyZXR1cm4gci52ZH0pLG4uZChlLFwiZmlsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuemJ9KSxuLmQoZSxcImxpbnNwYWNlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5ZYn0pLG4uZChlLFwib25lc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuSmN9KSxuLmQoZSxcInJhbmdlXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5jZH0pLG4uZChlLFwic2NhbGFyXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5wZH0pLG4uZChlLFwidGVuc29yXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5ZZH0pLG4uZChlLFwidGVuc29yMWRcIixmdW5jdGlvbigpe3JldHVybiByLlpkfSksbi5kKGUsXCJ0ZW5zb3IyZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuYWV9KSxuLmQoZSxcInRlbnNvcjNkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5iZX0pLG4uZChlLFwidGVuc29yNGRcIixmdW5jdGlvbigpe3JldHVybiByLmNlfSksbi5kKGUsXCJ0ZW5zb3I1ZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZGV9KSxuLmQoZSxcInRlbnNvcjZkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5lZX0pLG4uZChlLFwiemVyb3NcIixmdW5jdGlvbigpe3JldHVybiByLnplfSksbi5kKGUsXCJvbmVzTGlrZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuS2N9KSxuLmQoZSxcInplcm9zTGlrZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuQWV9KSxuLmQoZSxcInRyYW5zcG9zZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIubWV9KSxuLmQoZSxcInNvZnRtYXhcIixmdW5jdGlvbigpe3JldHVybiByLkZkfSksbi5kKGUsXCJsb2dTb2Z0bWF4XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5kY30pLG4uZChlLFwibG9jYWxSZXNwb25zZU5vcm1hbGl6YXRpb25cIixmdW5jdGlvbigpe3JldHVybiByLlpifSksbi5kKGUsXCJub3JtXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5GY30pLG4uZChlLFwiZ2F0aGVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5EYn0pLG4uZChlLFwidW5zb3J0ZWRTZWdtZW50U3VtXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5vZX0pLG4uZChlLFwiYmFzaWNMU1RNQ2VsbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuSH0pLG4uZChlLFwibXVsdGlSTk5DZWxsXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5CY30pLG4uZChlLFwibW92aW5nQXZlcmFnZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIueWN9KSxuLmQoZSxcInN0cmlkZWRTbGljZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuU2R9KSxuLmQoZSxcInRvcGtcIixmdW5jdGlvbigpe3JldHVybiByLmtlfSksbi5kKGUsXCJzY2F0dGVyTkRcIixmdW5jdGlvbigpe3JldHVybiByLnFkfSksbi5kKGUsXCJmZnRcIixmdW5jdGlvbigpe3JldHVybiByLnlifSksbi5kKGUsXCJpZmZ0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5NYn0pLG4uZChlLFwicmZmdFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIubWR9KSxuLmQoZSxcImlyZmZ0XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5RYn0pLG4uZChlLFwic3BhcnNlVG9EZW5zZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuSWR9KSxuLmQoZSxcImdhdGhlck5EXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5FYn0pLG4uZChlLFwidHJhaW5cIixmdW5jdGlvbigpe3JldHVybiByLmxlfSksbi5kKGUsXCJ0aWR5XCIsZnVuY3Rpb24oKXtyZXR1cm4gci5nZX0pLG4uZChlLFwia2VlcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuUmJ9KSxuLmQoZSxcImRpc3Bvc2VcIixmdW5jdGlvbigpe3JldHVybiByLmpifSksbi5kKGUsXCJ0aW1lXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5pZX0pLG4uZChlLFwicHJvZmlsZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIHIuWWN9KSxuLmQoZSxcImN1c3RvbUdyYWRcIixmdW5jdGlvbigpe3JldHVybiByLmdifSksbi5kKGUsXCJncmFkXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5HYn0pLG4uZChlLFwiZ3JhZHNcIixmdW5jdGlvbigpe3JldHVybiByLkhifSksbi5kKGUsXCJ2YWx1ZUFuZEdyYWRcIixmdW5jdGlvbigpe3JldHVybiByLnJlfSksbi5kKGUsXCJ2YWx1ZUFuZEdyYWRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gci5zZX0pLG4uZChlLFwidmFyaWFibGVHcmFkc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHIudWV9KSxuLmQoZSxcImNvbnN0cmFpbnRzXCIsZnVuY3Rpb24oKXtyZXR1cm4gR30pLG4uZChlLFwiaW5pdGlhbGl6ZXJzXCIsZnVuY3Rpb24oKXtyZXR1cm4gWHR9KSxuLmQoZSxcImxheWVyc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHppfSksbi5kKGUsXCJtZXRyaWNzXCIsZnVuY3Rpb24oKXtyZXR1cm4gRml9KSxuLmQoZSxcIm1vZGVsc1wiLGZ1bmN0aW9uKCl7cmV0dXJuIFVpfSksbi5kKGUsXCJyZWd1bGFyaXplcnNcIixmdW5jdGlvbigpe3JldHVybiBWaX0pLG4uZChlLFwiQ2FsbGJhY2tMaXN0XCIsZnVuY3Rpb24oKXtyZXR1cm4gdmV9KSxuLmQoZSxcIkN1c3RvbUNhbGxiYWNrXCIsZnVuY3Rpb24oKXtyZXR1cm4geGV9KSxuLmQoZSxcIkhpc3RvcnlcIixmdW5jdGlvbigpe3JldHVybiBfZX0pLG4uZChlLFwiQ2FsbGJhY2tcIixmdW5jdGlvbigpe3JldHVybiBXaX0pLG4uZChlLFwiSW5wdXRTcGVjXCIsZnVuY3Rpb24oKXtyZXR1cm4gYWV9KSxuLmQoZSxcIlN5bWJvbGljVGVuc29yXCIsZnVuY3Rpb24oKXtyZXR1cm4gb2V9KSxuLmQoZSxcIk1vZGVsXCIsZnVuY3Rpb24oKXtyZXR1cm4gem59KSxuLmQoZSxcImlucHV0XCIsZnVuY3Rpb24oKXtyZXR1cm4gJG59KSxuLmQoZSxcImxvYWRNb2RlbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHFufSksbi5kKGUsXCJtb2RlbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFZufSksbi5kKGUsXCJyZWdpc3RlckNhbGxiYWNrQ29uc3RydWN0b3JcIixmdW5jdGlvbigpe3JldHVybiBIbn0pLG4uZChlLFwic2VxdWVudGlhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFdufSksbi5kKGUsXCJSTk5cIixmdW5jdGlvbigpe3JldHVybiBtaX0pLG4uZChlLFwiU2VxdWVudGlhbFwiLGZ1bmN0aW9uKCl7cmV0dXJuIFVufSksbi5kKGUsXCJMYXllclZhcmlhYmxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gbmV9KSxuLmQoZSxcInZlcnNpb25fbGF5ZXJzXCIsZnVuY3Rpb24oKXtyZXR1cm5cIjAuOS4yXCJ9KSxuLmQoZSxcIkZyb3plbk1vZGVsXCIsZnVuY3Rpb24oKXtyZXR1cm4gcWkuYX0pLG4uZChlLFwibG9hZEZyb3plbk1vZGVsXCIsZnVuY3Rpb24oKXtyZXR1cm4gcWkuYn0pLG4uZChlLFwibG9hZFRmSHViTW9kdWxlXCIsZnVuY3Rpb24oKXtyZXR1cm4gcWkuY30pLG4uZChlLFwidmVyc2lvbl9jb252ZXJ0ZXJcIixmdW5jdGlvbigpe3JldHVybiBxaS5kfSksbi5kKGUsXCJkYXRhXCIsZnVuY3Rpb24oKXtyZXR1cm4gJGl9KTt2YXIgSGk9e1widGZqcy1jb3JlXCI6ci52ZSxcInRmanMtZGF0YVwiOiRpLnZlcnNpb25fZGF0YSxcInRmanMtbGF5ZXJzXCI6XCIwLjkuMlwiLFwidGZqcy1jb252ZXJ0ZXJcIjpxaS5kLHRmanM6XCIwLjE0LjJcIn19LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKHQsZSxuKXt2YXIgcixpLGE7aT1bZSxuKDEzNSksbigyMjIpXSx2b2lkIDA9PT0oYT1cImZ1bmN0aW9uXCI9PXR5cGVvZihyPWZ1bmN0aW9uKHQsZSxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDI4NCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJUZW5zb3JcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiRnVuY3Rpb25cIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5kZWZhdWx0fX0pLGU9aShlKSxyPWkocil9KT9yLmFwcGx5KGUsaSk6cil8fCh0LmV4cG9ydHM9YSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX19XSl9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvcmUud2ViLmpzLm1hcCIsImltcG9ydCB7RnVuY3Rpb24gYXMgQmFzZUZ1bmN0aW9ufSBmcm9tICdjYXVzYWwtbmV0LmNvcmUnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRnVuY3Rpb24gZXh0ZW5kcyBCYXNlRnVuY3Rpb257XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==