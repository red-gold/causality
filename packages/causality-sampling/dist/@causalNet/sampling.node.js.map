{"version":3,"sources":["webpack://@causalNet/sampling/webpack/universalModuleDefinition","webpack://@causalNet/sampling/webpack/bootstrap","webpack://@causalNet/sampling/external \"causal-net.core\"","webpack://@causalNet/sampling/external \"causal-net.utils\"","webpack://@causalNet/sampling/external \"random\"","webpack://@causalNet/sampling/./src/subSampling.mixins.js","webpack://@causalNet/sampling/./src/negSampling.mixins.js","webpack://@causalNet/sampling/./src/causalNetSampling.js","webpack://@causalNet/sampling/./src/sampling.mixins.js","webpack://@causalNet/sampling/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SubSamplingMixins","BaseSamplingClass","subSampling","samplingSize","candidateList","replacable","R","Random","candidates","Array","isArray","clone","range","length","Error","samples","takenIdxs","GenNewCandidateIdx","int","idx","NegativeSamplingMixins","negSampling","negativeSize","positiveSamples","candidateProbs","any","v","type","Number","JSON","stringify","seletionProbs","reduce","selectionProbs","pidx","Infinity","prob","float","causalNetSampling","platform","mixWith","BaseFunctor","NegSamplingMixins","constructor","super","random","SamplingMixins","BasePipelineClass","Sampling","sampling","assert","beInstanceOf","Functor","__webpack_exports__","sampling_mixins","subSampling_mixins","negSampling_mixins"],"mappings":"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","file":"@causalNet/sampling.node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"causal-net.core\"), require(\"causal-net.utils\"), require(\"random\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"causal-net.core\", \"causal-net.utils\", \"random\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@causalNet/sampling\"] = factory(require(\"causal-net.core\"), require(\"causal-net.utils\"), require(\"random\"));\n\telse\n\t\troot[\"@causalNet/sampling\"] = factory(root[\"causal-net.core\"], root[\"causal-net.utils\"], root[\"random\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","const SubSamplingMixins = (BaseSamplingClass) => class extends BaseSamplingClass{\n    /**\n     * Perform uniform sample a sub set of Ids given the candidate list\n     * @param { Number } samplingSize\n     * @param { Array|Number } candidateList - list of candidates or size of candidate list\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    subSampling(samplingSize, candidateList, replacable=true){\n        const R = this.R, Random = this.Random;\n        let candidates = Array.isArray(candidateList)?R.clone(candidateList):R.range(0, candidateList);\n        if(candidates.length === 0){\n            throw Error('candidate length should be positive');\n        }\n        let samples = [], takenIdxs = R.clone(candidates);\n        const GenNewCandidateIdx = ()=>Random.int(0, candidates.length-1);\n        while(samples.length < samplingSize){\n            let idx = GenNewCandidateIdx();\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, candidates[idx]];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default SubSamplingMixins;","const NegativeSamplingMixins = (BaseSamplingClass)=> class extends BaseSamplingClass{\n    /**\n     * Perform negative sampling given the select prob of ids and list of positive samples\n     * @param { Number } negativeSize - size to sample\n     * @param { Array } positiveSamples - Array of possitive Ids\n     * @param { Array } candidateProbs - Array of probablity of candidate Ids\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    negSampling(negativeSize, positiveSamples, candidateProbs, replacable=true){\n        const R = this.R, Random = this.Random;\n        if(R.any((v)=> !R.type(Number,v) || v > 1 || v < 0, candidateProbs)){\n            throw Error(`${JSON.stringify(candidateProbs)} is not allow`);\n        }\n        let seletionProbs = R.reduce((selectionProbs, pidx)=>{\n                                selectionProbs[pidx] = Infinity;//positive candidate never be choosed\n                                return selectionProbs;\n                            }, R.clone(candidateProbs), positiveSamples);\n        let samples = [], takenIdxs = R.clone(seletionProbs);\n        const GenNewCandidateIdx = ()=>Random.int(0, seletionProbs.length-1);\n        const SelectIfHighProb = (prob)=>{\n            let rand = Random.float();\n            return rand>prob;\n        };\n        while(samples.length < negativeSize){\n            let idx = GenNewCandidateIdx();\n            let selected = SelectIfHighProb(seletionProbs[idx]);\n            if(!selected){\n                continue;\n            }\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, idx];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default NegativeSamplingMixins;","import { Functor as BaseFunctor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport random from 'random';\nimport { default as SubSamplingMixins } from './subSampling.mixins';\nimport { default as NegSamplingMixins } from './negSampling.mixins';\n\n/**\n * This class provides common used sampling methods which can be accessed via **causalNetSampling**.\n * mixwith:\n * [ SubSamplingMixins, NegSamplingMixins ]\n * @class CausalNetSampling\n * @extends Functor\n * @example\n * [EXAMPLE ../examples/causalNetSampling.babel.js]\n */\nclass CausalNetSampling extends platform.mixWith( BaseFunctor, \n    [ SubSamplingMixins, NegSamplingMixins ]){\n    constructor(){\n        super();\n        this.Random = random;    \n    }\n}\n\nexport default new CausalNetSampling();","import { Functor } from 'causal-net.core';\nimport { assert } from 'causal-net.utils';\n/**\n * This mixin class provide attributes: **Sampling**.\n * @class SamplingMixins\n * @extends BasePipelineClass\n * @example\n * [EXAMPLE ../examples/sampling.mixins.babel.js]\n */\nconst SamplingMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    /**\n     * get current random instance\n     */\n    get Sampling(){\n        if(!this.sampling){\n            throw Error(`Sampling is not set`);\n        }\n        return this.sampling;\n    }\n    \n    /**\n     * set Sampling instance\n     * @readonly\n     */\n    set Sampling(sampling){\n        assert.beInstanceOf(sampling, Functor);\n        this.sampling = sampling;\n    }\n};\n\nexport default SamplingMixins;","export { default as causalNetSampling } from './causalNetSampling';\nexport { default as SamplingMixins } from './sampling.mixins';\n\nexport { default as SubSamplingMixins } from './subSampling.mixins';\nexport { default as NegSamplingMixins } from './negSampling.mixins';"],"sourceRoot":""}