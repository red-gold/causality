!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("causal-net.core"),require("causal-net.utils")):"function"==typeof define&&define.amd?define(["causal-net.core","causal-net.utils"],t):"object"==typeof exports?exports["@causalNet/models"]=t(require("causal-net.core"),require("causal-net.utils")):e["@causalNet/models"]=t(e["causal-net.core"],e["causal-net.utils"])}(this,function(e,t){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(t,r){t.exports=e},function(e,r){e.exports=t},function(e,t,r){"use strict";r.r(t);var n=r(1),o=r(0);var i=new class extends(n.platform.mixWith(o.Tensor,[])){constructor(){super()}classification(e){return this.model=new SingleLabelClassification(e),this.model}};var s=e=>(class extends e{get LossModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.Loss}get FitModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.Fit}get OneHotPredictModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.OneHotPredict}get PredictModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.Predict}get EncodeModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.Encode}get DecodeModel(){if(!this.netModel)throw Error("netModel is not set");return this.netModel.Decode}get Model(){if(!this.netModel)throw Error("netModel is not set");return this.netModel}set Model(e){this.netModel=e}setByConfig(e){super.setByConfig&&super.setByConfig(e),this.Logger.groupBegin("set Model by config");const{Model:t}=e.Net;if(!t)throw Error(`Model is not set in ${JSON.stringlify(e)}`);t.LayerRunner=this.LayerRunner,this.Model=t,this.Logger.groupEnd()}});var u=class extends o.Tensor{constructor(){super(),this.modelName=""}set LayerRunner(e){throw Error("implement required")}get LayerRunner(){throw Error("implement required")}fit(){throw Error("implement required")}loss(){throw Error("implement required")}predict(){throw Error("implement required")}oneHotPredict(){throw Error("implement required")}};var l=class extends u{constructor(e){if(super(),!(e>0))throw Error(`expect numclass, get ${e}`);this.numClass=e}set LayerRunner(e){let{Predictor:t}=e;this.runner={Predictor:t}}get LayerRunner(){if(!this.runner)throw Error("runner is not set");return this.runner}get Fit(){const{Predictor:e}=this.LayerRunner;return t=>{let r=e(t);return r.sub(r.logSumExp(1,!0))}}get Predict(){const e=this.Fit;return t=>e(t).argMax(1)}get OneHotPredict(){const e=this.Predict;return t=>{let r=e(t);return this.T.oneHot(r,this.numClass)}}get Loss(){const e=this.Fit;return(t,r)=>e(t).neg().mul(r).sum(1).mean()}};r.d(t,"causalNetModels",function(){return i}),r.d(t,"ModelMixins",function(){return s}),r.d(t,"BaseModel",function(){return u}),r.d(t,"SingleLabelClassification",function(){return l})}])});
//# sourceMappingURL=models.node.js.map