{"version":3,"sources":["webpack://@causalNet/models/webpack/universalModuleDefinition","webpack://@causalNet/models/webpack/bootstrap","webpack://@causalNet/models/external \"causal-net.core\"","webpack://@causalNet/models/external \"causal-net.utils\"","webpack://@causalNet/models/./src/causalNetModels.js","webpack://@causalNet/models/./src/model.mixins.js","webpack://@causalNet/models/./src/baseModel.js","webpack://@causalNet/models/./src/singleLableClassification.js","webpack://@causalNet/models/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","causalNetModels","platform","mixWith","BaseTensor","constructor","super","classification","numClass","model","SingleLabelClassification","ModelMixins","BasePipelineClass","LossModel","netModel","Error","Loss","FitModel","Fit","OneHotPredictModel","OneHotPredict","PredictModel","Predict","EncodeModel","Encode","DecodeModel","Decode","Model","setByConfig","pipelineConfig","Logger","groupBegin","Net","JSON","stringlify","LayerRunner","groupEnd","BaseModel","Tensor","modelName","runner","fit","loss","predict","oneHotPredict","layerRunner","Predictor","inputTensor","outPutTensor","sub","logSumExp","argMax","predictedClass","T","oneHot","labelTensor","neg","mul","sum","mean","__webpack_exports__","model_mixins","baseModel","singleLableClassification"],"mappings":"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","file":"@causalNet/models.web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"causal-net.core\"), require(\"causal-net.utils\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"causal-net.core\", \"causal-net.utils\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@causalNet/models\"] = factory(require(\"causal-net.core\"), require(\"causal-net.utils\"));\n\telse\n\t\troot[\"@causalNet/models\"] = factory(root[\"causal-net.core\"], root[\"causal-net.utils\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { platform } from 'causal-net.utils';\nimport { Tensor as BaseTensor } from 'causal-net.core';\n/**\n * This class provide common used models which can be accessed via **causalNetModels** instance.\n * @class CausalNetModels\n * @extends BaseTensor\n * @example\n * [EXAMPLE ../examples/singleLabelClassification.babel.js]\n */\nclass CausalNetModels extends platform.mixWith( BaseTensor, [] ){\n    constructor(){\n        super();\n    }\n    \n    classification(numClass){\n        this.model = new SingleLabelClassification(numClass);\n        return this.model;\n    }\n}\nexport default new CausalNetModels();","const ModelMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    get LossModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Loss;\n    }\n\n    get FitModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Fit;\n    }\n    \n    get OneHotPredictModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.OneHotPredict;\n    }\n\n    get PredictModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Predict;\n    }\n\n    get EncodeModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Encode;\n    }\n\n    get DecodeModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Decode;\n    }\n\n\n    get Model(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel;\n    }\n    \n\n    set Model(model){        \n        this.netModel = model;\n    }\n\n    setByConfig(pipelineConfig){\n        if(super.setByConfig){\n            super.setByConfig(pipelineConfig);\n        }\n        this.Logger.groupBegin('set Model by config');\n        const { Model } = pipelineConfig.Net;\n        if(!Model){\n            throw Error(`Model is not set in ${JSON.stringlify(pipelineConfig)}`);\n        }\n        Model.LayerRunner = this.LayerRunner;\n        this.Model = Model;\n        this.Logger.groupEnd();\n    }\n};\n\nexport default ModelMixins;\n","import { Tensor } from 'causal-net.core';\nclass BaseModel extends Tensor{\n    constructor(){\n        super();\n        this.modelName = '';\n    }\n\n    set LayerRunner(runner){\n        throw Error('implement required');\n    }\n\n    get LayerRunner(){\n        throw Error('implement required');\n    }\n\n    fit(){\n        throw Error('implement required');\n    }\n\n    loss(){\n        throw Error('implement required');\n    }\n\n    predict(){\n        throw Error('implement required');\n    }\n    oneHotPredict(){\n        throw Error('implement required');\n    }\n}\n\nexport default BaseModel;","import { default as BaseModel } from './baseModel';\n\nclass SingleLabelClassification extends BaseModel{\n    constructor(numClass){\n        super();\n        if(numClass > 0){\n            this.numClass = numClass;\n        }\n        else{\n            throw Error(`expect numclass, get ${numClass}`);\n        }\n    }\n\n    set LayerRunner(layerRunner){\n        let { Predictor } = layerRunner;\n        this.runner = { Predictor };\n    }\n\n    get LayerRunner(){\n        if(!this.runner){\n            throw Error('runner is not set');\n        }\n        return this.runner;\n    }\n    \n    get Fit(){\n        const { Predictor } = this.LayerRunner;\n        return (inputTensor)=>{\n            let outPutTensor = Predictor(inputTensor);\n            let logProb = outPutTensor.sub(outPutTensor.logSumExp(1, true));\n            return logProb;\n        };\n    }\n    \n    get Predict(){\n        const Fit = this.Fit;\n        return (inputTensor)=>{\n            let logProb = Fit(inputTensor);\n            let predictedClass = logProb.argMax(1);\n            return predictedClass;\n        };\n    }\n\n    get OneHotPredict(){\n        const Predict = this.Predict;\n        return (inputTensor)=>{\n            let predictedClass = Predict(inputTensor);\n            let oneHotPredict = this.T.oneHot(predictedClass, this.numClass);\n            return oneHotPredict;\n        };\n    }\n    get Loss(){\n        const Fit = this.Fit;\n        return (inputTensor, labelTensor)=>{\n            let logProb = Fit(inputTensor);\n            let likelihood = logProb.neg().mul(labelTensor);\n            let loss = likelihood.sum(1).mean();\n            return loss;\n        };\n    }\n}\nexport default SingleLabelClassification;","export { default as causalNetModels } from './causalNetModels';\nexport { default as ModelMixins } from './model.mixins';\n\nexport { default as BaseModel } from './baseModel';\nexport { default as SingleLabelClassification } from './singleLableClassification';\n"],"sourceRoot":""}